<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007290A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007290</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17773747</doc-number><date>20201126</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>KR</country><doc-number>10-2019-0153330</doc-number><date>20191126</date></priority-claim><priority-claim sequence="02" kind="national"><country>KR</country><doc-number>10-2020-0004406</doc-number><date>20200113</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>46</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>96</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>186</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>46</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>96</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>186</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e79">IMAGE ENCODING/DECODING METHOD AND APPARATUS, AND RECORDING MEDIUM STORING BITSTREAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Electronics and Telecommunications Research Institute</orgname><address><city>Daejeon</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>LIM</last-name><first-name>Sung Chang</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>KANG</last-name><first-name>Jung Won</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Soo Woong</first-name><address><city>Sejong</city><country>KR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>BANG</last-name><first-name>Gun</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>LEE</last-name><first-name>Jin Ho</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>LEE</last-name><first-name>Ha Hyun</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Electronics and Telecommunications Research Institute</orgname><role>03</role><address><city>Daejeon</city><country>KR</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/KR2020/016991</doc-number><date>20201126</date></document-id><us-371c12-date><date>20220502</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Disclosed herein is a video decoding method including: obtaining a transform skip mode flag indicating whether transform/inverse transform is skipped in a current block; when transform/inverse transform is skipped in the current block according to the transform skip mode flag, determining that secondary transform/inverse transform is skipped in the current block; and when transform/inverse transform is not skipped in the current block according to the transform skip mode flag, obtaining a transform matrix index for secondary transform/inverse transform of the current block and, determining whether secondary transform/inverse transform is skipped in the current block based on the transform matrix index.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="116.33mm" wi="158.75mm" file="US20230007290A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="209.89mm" wi="162.81mm" orientation="landscape" file="US20230007290A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="223.18mm" wi="151.38mm" orientation="landscape" file="US20230007290A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="219.96mm" wi="149.78mm" orientation="landscape" file="US20230007290A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="193.97mm" wi="105.75mm" file="US20230007290A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="166.79mm" wi="158.92mm" file="US20230007290A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="106.34mm" wi="83.40mm" file="US20230007290A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="104.90mm" wi="81.53mm" file="US20230007290A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="131.74mm" wi="122.51mm" file="US20230007290A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="187.71mm" wi="142.16mm" file="US20230007290A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="241.13mm" wi="138.09mm" orientation="landscape" file="US20230007290A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="178.22mm" wi="115.15mm" file="US20230007290A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="179.41mm" wi="137.50mm" file="US20230007290A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="178.39mm" wi="141.14mm" file="US20230007290A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="229.02mm" wi="137.75mm" orientation="landscape" file="US20230007290A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="146.73mm" wi="134.96mm" file="US20230007290A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="181.95mm" wi="158.58mm" file="US20230007290A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="190.33mm" wi="160.95mm" file="US20230007290A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="199.56mm" wi="160.95mm" file="US20230007290A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="210.65mm" wi="153.33mm" file="US20230007290A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="222.00mm" wi="166.20mm" file="US20230007290A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="239.44mm" wi="155.11mm" file="US20230007290A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="238.59mm" wi="154.77mm" file="US20230007290A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="126.58mm" wi="160.10mm" file="US20230007290A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="152.65mm" wi="160.19mm" file="US20230007290A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="185.76mm" wi="161.29mm" file="US20230007290A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="204.13mm" wi="160.78mm" file="US20230007290A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="239.35mm" wi="121.75mm" orientation="landscape" file="US20230007290A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="237.66mm" wi="120.73mm" orientation="landscape" file="US20230007290A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="240.96mm" wi="123.44mm" orientation="landscape" file="US20230007290A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="234.44mm" wi="118.19mm" orientation="landscape" file="US20230007290A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="238.08mm" wi="127.34mm" orientation="landscape" file="US20230007290A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="240.03mm" wi="127.76mm" orientation="landscape" file="US20230007290A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="240.20mm" wi="125.22mm" orientation="landscape" file="US20230007290A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="237.41mm" wi="119.55mm" orientation="landscape" file="US20230007290A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="240.03mm" wi="120.90mm" orientation="landscape" file="US20230007290A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="240.28mm" wi="121.33mm" orientation="landscape" file="US20230007290A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="243.67mm" wi="123.27mm" orientation="landscape" file="US20230007290A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="238.76mm" wi="120.73mm" orientation="landscape" file="US20230007290A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00039" num="00039"><img id="EMI-D00039" he="242.40mm" wi="121.24mm" orientation="landscape" file="US20230007290A1-20230105-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00040" num="00040"><img id="EMI-D00040" he="245.28mm" wi="129.88mm" orientation="landscape" file="US20230007290A1-20230105-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00041" num="00041"><img id="EMI-D00041" he="240.79mm" wi="127.51mm" orientation="landscape" file="US20230007290A1-20230105-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00042" num="00042"><img id="EMI-D00042" he="239.78mm" wi="122.77mm" orientation="landscape" file="US20230007290A1-20230105-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00043" num="00043"><img id="EMI-D00043" he="242.23mm" wi="124.46mm" orientation="landscape" file="US20230007290A1-20230105-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00044" num="00044"><img id="EMI-D00044" he="241.47mm" wi="124.04mm" orientation="landscape" file="US20230007290A1-20230105-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00045" num="00045"><img id="EMI-D00045" he="177.63mm" wi="154.77mm" orientation="landscape" file="US20230007290A1-20230105-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00046" num="00046"><img id="EMI-D00046" he="134.87mm" wi="105.83mm" file="US20230007290A1-20230105-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00047" num="00047"><img id="EMI-D00047" he="144.02mm" wi="105.83mm" file="US20230007290A1-20230105-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates to an image encoding/decoding method and apparatus, and a recording medium for storing a bitstream. More particularly, the present invention relates to a method and apparatus for encoding/decoding a video image based on transform.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">Recently, the demand for high resolution and quality images such as high definition (HD) or ultra-high definition (UHD) images has increased in various applications. As the resolution and quality of images are improved, the amount of data correspondingly increases. This is one of the causes of increase in transmission cost and storage cost when transmitting image data through existing transmission media such as wired or wireless broadband channels or when storing image data. In order to solve such problems with high resolution and quality image data, a high efficiency image encoding/decoding technique is required.</p><p id="p-0004" num="0003">There are various video compression techniques such as an inter prediction technique of predicting the values of pixels within a current picture from the values of pixels within a preceding picture or a subsequent picture, an intra prediction technique of predicting the values of pixels within a region of a current picture from the values of pixels within another region of the current picture, a transform and quantization technique of compressing the energy of a residual signal, and an entropy coding technique of allocating frequently occurring pixel values with shorter codes and less occurring pixel values with longer codes.</p><p id="p-0005" num="0004">In a conventional transform/inverse transform method, since a single transform/inverse transform type is used or signaling for various transform/inverse transform types requires overhead, an image has its limit both in objective quality and in subjective quality.</p><heading id="h-0003" level="1">DISCLOSURE</heading><heading id="h-0004" level="1">Technical Problem</heading><p id="p-0006" num="0005">For improving the objective quality and subjective quality of an image, the present invention provides a video encoding/decoding method and apparatus that determines at least one of a reduced secondary transform/inverse transform matrix set, a reduced secondary transform/inverse transform matrix, and whether or not to perform a reduced secondary transform/inverse transform, on the basis of at least one of a one-dimensional transform type, a two-dimensional transform combination, and whether or not a transform is used, which are again based on an intra-prediction mode, a prediction mode, a color component, a size and a form.</p><heading id="h-0005" level="1">Technical Solution</heading><p id="p-0007" num="0006">The present disclosure provides a video decoding method comprising: obtaining a transform skip mode flag indicating whether transform/inverse transform is skipped in a current block, when transform/inverse transform is skipped in the current block according to the transform skip mode flag, determining that secondary transform/inverse transform is skipped in the current block, and when transform/inverse transform is not skipped in the current block according to the transform skip mode flag, obtaining a transform matrix index for secondary transform/inverse transform of the current block and, determining whether secondary transform/inverse transform is skipped in the current block based on the transform matrix index.</p><p id="p-0008" num="0007">According to an embodiment, the obtaining of the transform skip mode flag comprises obtaining a transform skip mode flag for a luma component, a transform skip mode flag for a Cb component, and a transform skip mode flag for a Cr component.</p><p id="p-0009" num="0008">According to an embodiment, the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a single-tree type, the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</p><p id="p-0010" num="0009">According to an embodiment, the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual tree luma type and the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component.</p><p id="p-0011" num="0010">According to an embodiment, the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual-tree chroma type, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</p><p id="p-0012" num="0011">According to an embodiment, the video decoding method may further comprises: when secondary transform/inverse transform is applied to the current block, determining a secondary transform matrix of the current block according to the transform matrix index, and applying secondary transform/inverse transform to the current block according to the secondary transform matrix.</p><p id="p-0013" num="0012">According to an embodiment, the determining of the secondary transform matrix of the current block comprises</p><p id="p-0014" num="0013">determining the secondary transform matrix of the current block according to at least one of the transform matrix index, a transform matrix set index of the current block, and a size of the current block.</p><p id="p-0015" num="0014">According to an embodiment, the video decoding method may further comprises: obtaining information on whether an intra residual DPCM method is used, and when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is used for the current block, determining that transform/inverse transform is skipped in the current block, wherein the obtaining of the transform skip mode flag comprises obtaining the transform skip mode flag, when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is not used for the current block.</p><p id="p-0016" num="0015">According to an embodiment, the transform matrix index for secondary transform/inverse transform of the current block is</p><p id="p-0017" num="0016">obtained when the current block is predicted according to an intra-prediction mode that is not a matrix-based intra-prediction mode.</p><p id="p-0018" num="0017">According to an embodiment, the determining of, according to the transform matrix index, whether secondary transform/inverse transform is skipped in the current block comprises determining whether secondary transform/inverse transform is skipped in the current block according to at least one of the transform matrix index, the size of the current block, and the transform skip mode flag.</p><p id="p-0019" num="0018">The present disclosure provides a video encoding method comprising: encoding a transform skip mode flag indicating whether transform/inverse transform is skipped in a current block, when a transform skip mode is skipped in the current block according to the transform skip mode flag, determining that secondary transform/inverse transform is skipped in the current block, and when a transform skip mode is not skipped in the current block according to the transform skip mode flag, determining whether secondary transform/inverse transform is skipped in the current block and, encoding a transform matrix index for secondary transform/inverse transform of the current block according to whether secondary transform/inverse transform is skipped in the current block.</p><p id="p-0020" num="0019">According to an embodiment, the encoding of the transform skip mode flag comprises</p><p id="p-0021" num="0020">encoding a transform skip mode flag for a luma component, a transform skip mode flag for a Cb component, and a transform skip mode flag for a Cr component.</p><p id="p-0022" num="0021">According to an embodiment, the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a single-tree type, the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</p><p id="p-0023" num="0022">According to an embodiment, the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual tree luma type and the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component.</p><p id="p-0024" num="0023">According to an embodiment, the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual-tree chroma type, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</p><p id="p-0025" num="0024">According to an embodiment, the encoding of the transform matrix index comprises: when secondary transform/inverse transform is applied to the current block, determining a secondary transform matrix of the current block, and depending on whether secondary transform/inverse transform is applied to the current block, encoding the transform matrix index.</p><p id="p-0026" num="0025">According to an embodiment, the determining of the secondary transform matrix of the current block comprises determining the secondary transform matrix of the current block according to at least one of the transform matrix index, a transform matrix set index of the current block, and a size of the current block.</p><p id="p-0027" num="0026">According to an embodiment, the video encoding method may further comprises: encoding information on whether or not an intra residual DPCM method is used for the current block, and when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is used for the current block, determining that transform/inverse transform is skipped in the current block, wherein the encoding of the transform skip mode flag comprises encoding the transform skip mode flag, when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is not used for the current block.</p><p id="p-0028" num="0027">According to an embodiment, the encoding of the transform matrix index for secondary transform/inverse transform of the current block comprises encoding the transform matrix index, when the current block is predicted according to an intra-prediction mode that is not a matrix-based intra-prediction mode.</p><p id="p-0029" num="0028">The present disclosure provides a computer-readable recording medium for storing a bitstream generated by encoding a video through a video encoding method, wherein the video encoding method comprises: encoding a transform skip mode flag indicating whether transform/inverse transform is skipped in a current block, when a transform skip mode is skipped in the current block according to the transform skip mode flag, determining that secondary transform/inverse transform is skipped in the current block, and when a transform skip mode is not skipped in the current block according to the transform skip mode flag, determining whether secondary transform/inverse transform is skipped in the current block and, encoding a transform matrix index for secondary transform/inverse transform of the current block according to whether secondary transform/inverse transform is skipped in the current block.</p><heading id="h-0006" level="1">Advantageous Effects</heading><p id="p-0030" num="0029">The present invention may improve the objective quality and subjective quality of an image by providing an image encoding/decoding method and apparatus that determines at least one of a reduced secondary transform/inverse transform matrix set, a reduced secondary transform/inverse transform matrix, and whether or not to perform a reduced secondary transform/inverse transform, on the basis of at least one of a one-dimensional transform type, a two-dimensional transform combination, and whether or not a transform is used, which are again based on an intra-prediction mode, a prediction mode, a color component, a size and a form.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0007" level="1">DESCRIPTION OF DRAWINGS</heading><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing a configuration of an encoding apparatus according to an embodiment to which the present invention is applied.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram showing a configuration of a decoding apparatus according to an embodiment to which the present invention is applied.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a view schematically showing a partition structure of an image when encoding and decoding the image.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a view showing an intra-prediction process.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating an embodiment of an inter-picture prediction process.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram illustrating a transform and quantization process.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating reference samples capable of being used for intra prediction.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating an embodiment of a decoding method using the SDST method according to the present invention.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating an embodiment of an encoding method using the SDST method according to the present invention.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIGS. <b>10</b> to <b>12</b></figref> are diagrams illustrating embodiments of a first sub-block partitioning mode according to the present invention.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a diagram illustrating an embodiment of a second sub-block partitioning mode according to the present invention.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a diagram illustrating an embodiment of diagonal scan.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a diagram illustrating an embodiment of horizontal scan.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a diagram illustrating an embodiment of vertical scan.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a diagram illustrating an embodiment of block based diagonal scan.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a diagram illustrating an embodiment of block based horizontal scan.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a diagram illustrating an embodiment of block based vertical scan.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a diagram illustrating various embodiments of scan based on the shape of a block.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a diagram illustrating an intra prediction mode.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIGS. <b>22</b> to <b>26</b></figref> are diagrams showing examples of an encoding process or a decoding process using transform according to an embodiment of the present invention.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>27</b></figref> shows an embodiment of performing secondary transform and/or secondary inverse transform in an encoder/decoder.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>28</b></figref> shows an embodiment of secondary transform matrix.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>29</b></figref> shows a reduced secondary transform/inverse transform process.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIGS. <b>30</b> to <b>32</b></figref> show a plurality of embodiments where a transform matrix is derived according to a block size, a transform matrix set index, and a transform matrix index.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIGS. <b>33</b> to <b>36</b></figref> illustrate a syntax of bitstream that is applied to an encoding/decoding method and apparatus using transform and a recording medium storing a bitstream, according to an embodiment of the present invention.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIGS. <b>37</b> to <b>54</b></figref> provide various embodiments for signaling conditions of a transform matrix index.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>55</b></figref> illustrates a syntax of bitstream that is applied to an encoding/decoding method and apparatus using transform and a recording medium storing a bitstream, according to an embodiment of the present invention.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>56</b></figref> illustrates a video decoding method according to an embodiment of the present invention.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>57</b></figref> illustrates a video encoding method according to an embodiment of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0008" level="1">BEST MODE</heading><p id="p-0060" num="0059">The present disclosure provides a video decoding method including: obtaining a transform skip mode flag indicating whether or not a transform skip mode is applied to a current block; according to the transform skip mode flag, when the transform skip mode is applied to the current block, determining that secondary transform/inverse transform is not applied to the current block; and, according to the transform skip mode flag, when the transform skip mode is not applied to the current block, obtaining a transform matrix index for secondary transform/inverse transform of the current block and, based on the transform matrix index, determining whether or not secondary transform/inverse transform is applied to the current block.</p><heading id="h-0009" level="1">Mode for Invention</heading><p id="p-0061" num="0060">A variety of modifications may be made to the present invention and there are various embodiments of the present invention, examples of which will now be provided with reference to drawings and described in detail. However, the present invention is not limited thereto, although the exemplary embodiments can be construed as including all modifications, equivalents, or substitutes in a technical concept and a technical scope of the present invention. The similar reference numerals refer to the same or similar functions in various aspects. In the drawings, the shapes and dimensions of elements may be exaggerated for clarity. In the following detailed description of the present invention, references are made to the accompanying drawings that show, by way of illustration, specific embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to implement the present disclosure. It should be understood that various embodiments of the present disclosure, although different, are not necessarily mutually exclusive. For example, specific features, structures, and characteristics described herein, in connection with one embodiment, may be implemented within other embodiments without departing from the spirit and scope of the present disclosure. In addition, it should be understood that the location or arrangement of individual elements within each disclosed embodiment may be modified without departing from the spirit and scope of the present disclosure. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present disclosure is defined only by the appended claims, appropriately interpreted, along with the full range of equivalents to what the claims claim.</p><p id="p-0062" num="0061">Terms used in the specification, &#x2018;first&#x2019;, &#x2018;second&#x2019;, etc. can be used to describe various components, but the components are not to be construed as being limited to the terms. The terms are only used to differentiate one component from other components. For example, the &#x2018;first&#x2019; component may be named the &#x2018;second&#x2019; component without departing from the scope of the present invention, and the &#x2018;second&#x2019; component may also be similarly named the &#x2018;first&#x2019; component. The term &#x2018;and/or&#x2019; includes a combination of a plurality of items or any one of a plurality of items.</p><p id="p-0063" num="0062">It will be understood that when an element is simply referred to as being &#x2018;connected to&#x2019; or &#x2018;coupled to&#x2019; another element without being &#x2018;directly connected to&#x2019; or &#x2018;directly coupled to&#x2019; another element in the present description, it may be &#x2018;directly connected to&#x2019; or &#x2018;directly coupled to&#x2019; another element or be connected to or coupled to another element, having the other element intervening therebetween. In contrast, it should be understood that when an element is referred to as being &#x201c;directly coupled&#x201d; or &#x201c;directly connected&#x201d; to another element, there are no intervening elements present.</p><p id="p-0064" num="0063">Furthermore, constitutional parts shown in the embodiments of the present invention are independently shown so as to represent characteristic functions different from each other. Thus, it does not mean that each constitutional part is constituted in a constitutional unit of separated hardware or software. In other words, each constitutional part includes each of enumerated constitutional parts for convenience. Thus, at least two constitutional parts of each constitutional part may be combined to form one constitutional part or one constitutional part may be divided into a plurality of constitutional parts to perform each function. The embodiment where each constitutional part is combined and the embodiment where one constitutional part is divided are also included in the scope of the present invention, if not departing from the essence of the present invention.</p><p id="p-0065" num="0064">The terms used in the present specification are merely used to describe particular embodiments, and are not intended to limit the present invention. An expression used in the singular encompasses the expression of the plural, unless it has a clearly different meaning in the context. In the present specification, it is to be understood that terms such as &#x201c;including&#x201d;, &#x201c;having&#x201d;, etc. are intended to indicate the existence of the features, numbers, steps, actions, elements, parts, or combinations thereof disclosed in the specification, and are not intended to preclude the possibility that one or more other features, numbers, steps, actions, elements, parts, or combinations thereof may exist or may be added. In other words, when a specific element is referred to as being &#x201c;included&#x201d;, elements other than the corresponding element are not excluded, but additional elements may be included in embodiments of the present invention or the scope of the present invention.</p><p id="p-0066" num="0065">In addition, some of constituents may not be indispensable constituents performing essential functions of the present invention but be selective constituents improving only performance thereof. The present invention may be implemented by including only the indispensable constitutional parts for implementing the essence of the present invention except the constituents used in improving performance. The structure including only the indispensable constituents except the selective constituents used in improving only performance is also included in the scope of the present invention.</p><p id="p-0067" num="0066">Hereinafter, embodiments of the present invention will be described in detail with reference to the accompanying drawings. In describing exemplary embodiments of the present invention, well-known functions or constructions will not be described in detail since they may unnecessarily obscure the understanding of the present invention. The same constituent elements in the drawings are denoted by the same reference numerals, and a repeated description of the same elements will be omitted.</p><p id="p-0068" num="0067">Hereinafter, an image may mean a picture configuring a video, or may mean the video itself. For example, &#x201c;encoding or decoding or both of an image&#x201d; may mean &#x201c;encoding or decoding or both of a moving picture&#x201d;, and may mean &#x201c;encoding or decoding or both of one image among images of a moving picture.&#x201d;</p><p id="p-0069" num="0068">Hereinafter, terms &#x201c;moving picture&#x201d; and &#x201c;video&#x201d; may be used as the same meaning and be replaced with each other.</p><p id="p-0070" num="0069">Hereinafter, a target image may be an encoding target image which is a target of encoding and/or a decoding target image which is a target of decoding. Also, a target image may be an input image inputted to an encoding apparatus, and an input image inputted to a decoding apparatus. Here, a target image may have the same meaning with the current image.</p><p id="p-0071" num="0070">Hereinafter, terms &#x201c;image&#x201d;, &#x201c;picture, &#x201c;frame&#x201d; and &#x201c;screen&#x201d; may be used as the same meaning and be replaced with each other.</p><p id="p-0072" num="0071">Hereinafter, a target block may be an encoding target block which is a target of encoding and/or a decoding target block which is a target of decoding. Also, a target block may be the current block which is a target of current encoding and/or decoding. For example, terms &#x201c;target block&#x201d; and &#x201c;current block&#x201d; may be used as the same meaning and be replaced with each other.</p><p id="p-0073" num="0072">Hereinafter, terms &#x201c;block&#x201d; and &#x201c;unit&#x201d; may be used as the same meaning and be replaced with each other. Or a &#x201c;block&#x201d; may represent a specific unit.</p><p id="p-0074" num="0073">Hereinafter, terms &#x201c;region&#x201d; and &#x201c;segment&#x201d; may be replaced with each other.</p><p id="p-0075" num="0074">Hereinafter, a specific signal may be a signal representing a specific block. For example, an original signal may be a signal representing a target block. A prediction signal may be a signal representing a prediction block. A residual signal may be a signal representing a residual block.</p><p id="p-0076" num="0075">In embodiments, each of specific information, data, flag, index, element, and attribute, etc. may have a value. A value of information, data, flag, index, element, and attribute equal to &#x201c;0&#x201d; may represent a logical false or the first predefined value. In other words, a value &#x201c;0&#x201d;, a false, a logical false and the first predefined value may be replaced with each other. A value of information, data, flag, index, element, and attribute equal to &#x201c;1&#x201d; may represent a logical true or the second predefined value. In other words, a value &#x201c;1&#x201d;, a true, a logical true and the second predefined value may be replaced with each other.</p><p id="p-0077" num="0076">When a variable i or j is used for representing a column, a row or an index, a value of i may be an integer equal to or greater than 0, or equal to or greater than 1. That is, the column, the row, the index, etc. may be counted from 0 or may be counted from 1.</p><heading id="h-0010" level="1">Description of Terms</heading><p id="p-0078" num="0077">Encoder: means an apparatus performing encoding. That is, means an encoding apparatus.</p><p id="p-0079" num="0078">Decoder: means an apparatus performing decoding. That is, means a decoding apparatus.</p><p id="p-0080" num="0079">Block: is an M&#xd7;N array of a sample. Herein, M and N may mean positive integers, and the block may mean a sample array of a two-dimensional form. The block may refer to a unit. A current block my mean an encoding target block that becomes a target when encoding, or a decoding target block that becomes a target when decoding. In addition, the current block may be at least one of an encode block, a prediction block, a residual block, and a transform block.</p><p id="p-0081" num="0080">Sample: is a basic unit constituting a block. It may be expressed as a value from 0 to 2<sup>Bd</sup>&#x2212;1 according to a bit depth (Bd). In the present invention, the sample may be used as a meaning of a pixel. That is, a sample, a pel, a pixel may have the same meaning with each other.</p><p id="p-0082" num="0081">Unit: may refer to an encoding and decoding unit. When encoding and decoding an image, the unit may be a region generated by partitioning a single image. In addition, the unit may mean a subdivided unit when a single image is partitioned into subdivided units during encoding or decoding. That is, an image may be partitioned into a plurality of units. When encoding and decoding an image, a predetermined process for each unit may be performed. A single unit may be partitioned into sub-units that have sizes smaller than the size of the unit. Depending on functions, the unit may mean a block, a macroblock, a coding tree unit, a code tree block, a coding unit, a coding block, a prediction unit, a prediction block, a residual unit, a residual block, a transform unit, a transform block, etc. In addition, in order to distinguish a unit from a block, the unit may include a luma component block, a chroma component block associated with the luma component block, and a syntax element of each color component block. The unit may have various sizes and forms, and particularly, the form of the unit may be a two-dimensional geometrical figure such as a square shape, a rectangular shape, a trapezoid shape, a triangular shape, a pentagonal shape, etc. In addition, unit information may include at least one of a unit type indicating the coding unit, the prediction unit, the transform unit, etc., and a unit size, a unit depth, a sequence of encoding and decoding of a unit, etc.</p><p id="p-0083" num="0082">Coding Tree Unit: is configured with a single coding tree block of a luma component Y, and two coding tree blocks related to chroma components Cb and Cr. In addition, it may mean that including the blocks and a syntax element of each block. Each coding tree unit may be partitioned by using at least one of a quad-tree partitioning method, a binary-tree partitioning method and ternary-tree partitioning method to configure a lower unit such as coding unit, prediction unit, transform unit, etc. It may be used as a term for designating a sample block that becomes a process unit when encoding/decoding an image as an input image. Here, the quad-tree may mean a quaternary-tree.</p><p id="p-0084" num="0083">When the size of the coding block is within a predetermined range, the division is possible using only quad-tree partitioning. Here, the predetermined range may be defined as at least one of a maximum size and a minimum size of a coding block in which the division is possible using only quad-tree partitioning. Information indicating a maximum/minimum size of a coding block in which quad-tree partitioning is allowed may be signaled through a bitstream, and the information may be signaled in at least one unit of a sequence, a picture parameter, a tile group, or a slice (segment). Alternatively, the maximum/minimum size of the coding block may be a fixed size predetermined in the coder/decoder. For example, when the size of the coding block corresponds to 256&#xd7;256 to 64&#xd7;64, the division is possible only using quad-tree partitioning. Alternatively, when the size of the coding block is larger than the size of the maximum conversion block, the division is possible only using quad-tree partitioning. Herein, the block to be divided may be at least one of a coding block and a transform block. In this case, information indicating the division of the coded block (for example, split_flag) may be a flag indicating whether or not to perform the quad-tree partitioning. When the size of the coding block falls within a predetermined range, the division is possible only using binary tree or ternary tree partitioning. In this case, the above description of the quad-tree partitioning may be applied to binary tree partitioning or ternary tree partitioning in the same manner.</p><p id="p-0085" num="0084">Coding Tree Block: may be used as a term for designating any one of a Y coding tree block, Cb coding tree block, and Cr coding tree block.</p><p id="p-0086" num="0085">Neighbor Block: may mean a block adjacent to a current block. The block adjacent to the current block may mean a block that comes into contact with a boundary of the current block, or a block positioned within a predetermined distance from the current block. The neighbor block may mean a block adjacent to a vertex of the current block. Herein, the block adjacent to the vertex of the current block may mean a block vertically adjacent to a neighbor block that is horizontally adjacent to the current block, or a block horizontally adjacent to a neighbor block that is vertically adjacent to the current block.</p><p id="p-0087" num="0086">Reconstructed Neighbor block: may mean a neighbor block adjacent to a current block and which has been already spatially/temporally encoded or decoded. Herein, the reconstructed neighbor block may mean a reconstructed neighbor unit. A reconstructed spatial neighbor block may be a block within a current picture and which has been already reconstructed through encoding or decoding or both. A reconstructed temporal neighbor block is a block at a corresponding position as the current block of the current picture within a reference image, or a neighbor block thereof.</p><p id="p-0088" num="0087">Unit Depth: may mean a partitioned degree of a unit. In a tree structure, the highest node(Root Node) may correspond to the first unit which is not partitioned. Also, the highest node may have the least depth value. In this case, the highest node may have a depth of level 0. A node having a depth of level 1 may represent a unit generated by partitioning once the first unit. A node having a depth of level 2 may represent a unit generated by partitioning twice the first unit. A node having a depth of level n may represent a unit generated by partitioning n-times the first unit. A Leaf Node may be the lowest node and a node which cannot be partitioned further. A depth of a Leaf Node may be the maximum level. For example, a predefined value of the maximum level may be 3. A depth of a root node may be the lowest and a depth of a leaf node may be the deepest. In addition, when a unit is expressed as a tree structure, a level in which a unit is present may mean a unit depth.</p><p id="p-0089" num="0088">Bitstream: may mean a bitstream including encoding image information.</p><p id="p-0090" num="0089">Parameter Set: corresponds to header information among a configuration within a bitstream. At least one of a video parameter set, a sequence parameter set, a picture parameter set, and an adaptation parameter set may be included in a parameter set. In addition, a parameter set may include a slice header, a tile group header, and tile header information. The term &#x201c;tile group&#x201d; means a group of tiles and has the same meaning as a slice.</p><p id="p-0091" num="0090">An adaptation parameter set may mean a parameter set that can be shared by being referred to in different pictures, subpictures, slices, tile groups, tiles, or bricks. In addition, information in an adaptation parameter set may be used by referring to different adaptation parameter sets for a subpicture, a slice, a tile group, a tile, or a brick inside a picture.</p><p id="p-0092" num="0091">In addition, regarding the adaptation parameter set, different adaptation parameter sets may be referred to by using identifiers of different adaptation parameter sets for a subpicture, a slice, a tile group, a tile, or a brick inside a picture.</p><p id="p-0093" num="0092">In addition, regarding the adaptation parameter set, different adaptation parameter sets may be referred to by using identifiers of different adaptation parameter sets for a slice, a tile group, a tile, or a brick inside a subpicture.</p><p id="p-0094" num="0093">In addition, regarding the adaptation parameter set, different adaptation parameter sets may be referred to by using identifiers of different adaptation parameter sets for a tile or a brick inside a slice.</p><p id="p-0095" num="0094">In addition, regarding the adaptation parameter set, different adaptation parameter sets may be referred to by using identifiers of different adaptation parameter sets for a brick inside a tile.</p><p id="p-0096" num="0095">Information on an adaptation parameter set identifier may be included in a parameter set or a header of the subpicture, and an adaptation parameter set corresponding to the adaptation parameter set identifier may be used for the subpicture.</p><p id="p-0097" num="0096">The information on the adaptation parameter set identifier may be included in a parameter set or a header of the tile, and an adaptation parameter set corresponding to the adaptation parameter set identifier may be used for the tile.</p><p id="p-0098" num="0097">The information on the adaptation parameter set identifier may be included in a header of the brick, and an adaptation parameter set corresponding to the adaptation parameter set identifier may be used for the brick.</p><p id="p-0099" num="0098">The picture may be partitioned into one or more tile rows and one or more tile columns.</p><p id="p-0100" num="0099">The subpicture may be partitioned into one or more tile rows and one or more tile columns within a picture. The subpicture may be a region having the form of a rectangle/square within a picture and may include one or more CTUs. In addition, at least one or more tiles/bricks/slices may be included within one subpicture.</p><p id="p-0101" num="0100">The tile may be a region having the form of a rectangle/square within a picture and may include one or more CTUs. In addition, the tile may be partitioned into one or more bricks.</p><p id="p-0102" num="0101">The brick may mean one or more CTU rows within a tile. The tile may be partitioned into one or more bricks, and each brick may have at least one or more CTU rows. A tile that is not partitioned into two or more may mean a brick.</p><p id="p-0103" num="0102">The slice may include one or more tiles within a picture and may include one or more bricks within a tile.</p><p id="p-0104" num="0103">Parsing: may mean determination of a value of a syntax element by performing entropy decoding, or may mean the entropy decoding itself.</p><p id="p-0105" num="0104">Symbol: may mean at least one of a syntax element, a coding parameter, and a transform coefficient value of an encoding/decoding target unit. In addition, the symbol may mean an entropy encoding target or an entropy decoding result.</p><p id="p-0106" num="0105">Prediction Mode: may be information indicating a mode encoded/decoded with intra prediction or a mode encoded/decoded with inter prediction.</p><p id="p-0107" num="0106">Prediction Unit: may mean a basic unit when performing prediction such as inter-prediction, intra-prediction, inter-compensation, intra-compensation, and motion compensation. A single prediction unit may be partitioned into a plurality of partitions having a smaller size, or may be partitioned into a plurality of lower prediction units. A plurality of partitions may be a basic unit in performing prediction or compensation. A partition which is generated by dividing a prediction unit may also be a prediction unit.</p><p id="p-0108" num="0107">Prediction Unit Partition: may mean a form obtained by partitioning a prediction unit.</p><p id="p-0109" num="0108">Reference picture list may refer to a list including one or more reference pictures used for inter prediction or motion compensation. There are several types of usable reference picture lists, including LC (List combined), L0 (List 0), L1 (List 1), L2 (List 2), L3 (List 3).</p><p id="p-0110" num="0109">Inter prediction indicator may refer to a direction of inter prediction (unidirectional prediction, bidirectional prediction, etc.) of a current block. Alternatively, it may refer to the number of reference pictures used to generate a prediction block of a current block. Alternatively, it may refer to the number of prediction blocks used at the time of performing inter prediction or motion compensation on a current block.</p><p id="p-0111" num="0110">Prediction list utilization flag indicates whether a prediction block is generated using at least one reference picture in a specific reference picture list. An inter prediction indicator can be derived using a prediction list utilization flag, and conversely, a prediction list utilization flag can be derived using an inter prediction indicator. For example, when the prediction list utilization flag has a first value of zero (0), it means that a reference picture in a reference picture list is not used to generate a prediction block. On the other hand, when the prediction list utilization flag has a second value of one (1), it means that a reference picture list is used to generate a prediction block.</p><p id="p-0112" num="0111">Reference picture index may refer to an index indicating a specific reference picture in a reference picture list.</p><p id="p-0113" num="0112">Reference picture may mean a reference picture which is referred to by a specific block for the purposes of inter prediction or motion compensation of the specific block. Alternatively, the reference picture may be a picture including a reference block referred to by a current block for inter prediction or motion compensation. Hereinafter, the terms &#x201c;reference picture&#x201d; and &#x201c;reference image&#x201d; have the same meaning and can be interchangeably.</p><p id="p-0114" num="0113">Motion vector may be a two-dimensional vector used for inter prediction or motion compensation. The motion vector may mean an offset between an encoding/decoding target block and a reference block. For example, (mvX, mvY) may represent a motion vector. Here, mvX may represent a horizontal component and mvY may represent a vertical component.</p><p id="p-0115" num="0114">Search range may be a two-dimensional region which is searched to retrieve a motion vector during inter prediction. For example, the size of the search range may be M&#xd7;N. Here, M and N are both integers.</p><p id="p-0116" num="0115">Motion vector candidate may refer to a prediction candidate block or a motion vector of the prediction candidate block when predicting a motion vector. In addition, a motion vector candidate may be included in a motion vector candidate list.</p><p id="p-0117" num="0116">Motion vector candidate list may mean a list composed of one or more motion vector candidates.</p><p id="p-0118" num="0117">Motion vector candidate index may mean an indicator indicating a motion vector candidate in a motion vector candidate list. Alternatively, it may be an index of a motion vector predictor.</p><p id="p-0119" num="0118">Motion information may mean information including at least one of the items including a motion vector, a reference picture index, an inter prediction indicator, a prediction list utilization flag, reference picture list information, a reference picture, a motion vector candidate, a motion vector candidate index, a merge candidate, and a merge index.</p><p id="p-0120" num="0119">Merge candidate list may mean a list composed of one or more merge candidates.</p><p id="p-0121" num="0120">Merge candidate may mean a spatial merge candidate, a temporal merge candidate, a combined merge candidate, a combined bi-predictive merge candidate, or a zero-merge candidate. The merge candidate may include motion information such as an inter prediction indicator, a reference picture index for each list, a motion vector, a prediction list utilization flag, and an inter prediction indicator.</p><p id="p-0122" num="0121">Merge index may mean an indicator indicating a merge candidate in a merge candidate list. Alternatively, the merge index may indicate a block from which a merge candidate has been derived, among reconstructed blocks spatially/temporally adjacent to a current block. Alternatively, the merge index may indicate at least one piece of motion information of a merge candidate.</p><p id="p-0123" num="0122">Transform Unit: may mean a basic unit when performing encoding/decoding such as transform, inverse-transform, quantization, dequantization, transform coefficient encoding/decoding of a residual signal. A single transform unit may be partitioned into a plurality of lower-level transform units having a smaller size. Here, transformation/inverse-transformation may comprise at least one among the first transformation/the first inverse-transformation and the second transformation/the second inverse-transformation.</p><p id="p-0124" num="0123">Scaling: may mean a process of multiplying a quantized level by a factor. A transform coefficient may be generated by scaling a quantized level. The scaling also may be referred to as dequantization.</p><p id="p-0125" num="0124">Quantization Parameter: may mean a value used when generating a quantized level using a transform coefficient during quantization. The quantization parameter also may mean a value used when generating a transform coefficient by scaling a quantized level during dequantization. The quantization parameter may be a value mapped on a quantization step size.</p><p id="p-0126" num="0125">Delta Quantization Parameter: may mean a difference value between a predicted quantization parameter and a quantization parameter of an encoding/decoding target unit.</p><p id="p-0127" num="0126">Scan: may mean a method of sequencing coefficients within a unit, a block, or a matrix. For example, changing a two-dimensional matrix of coefficients into a one-dimensional matrix may be referred to as scanning, and changing a one-dimensional matrix of coefficients into a two-dimensional matrix may be referred to as scanning or inverse scanning.</p><p id="p-0128" num="0127">Transform Coefficient: may mean a coefficient value generated after transform is performed in an encoder. It may mean a coefficient value generated after at least one of entropy decoding and dequantization is performed in a decoder. A quantized level obtained by quantizing a transform coefficient or a residual signal, or a quantized transform coefficient level also may fall within the meaning of the transform coefficient.</p><p id="p-0129" num="0128">Quantized Level: may mean a value generated by quantizing a transform coefficient or a residual signal in an encoder. Alternatively, the quantized level may mean a value that is a dequantization target to undergo dequantization in a decoder. Similarly, a quantized transform coefficient level that is a result of transform and quantization also may fall within the meaning of the quantized level.</p><p id="p-0130" num="0129">Non-zero Transform Coefficient: may mean a transform coefficient having a value other than zero, or a transform coefficient level or a quantized level having a value other than zero.</p><p id="p-0131" num="0130">Quantization Matrix: may mean a matrix used in a quantization process or a dequantization process performed to improve subjective or objective image quality. The quantization matrix also may be referred to as a scaling list.</p><p id="p-0132" num="0131">Quantization Matrix Coefficient: may mean each element within a quantization matrix. The quantization matrix coefficient also may be referred to as a matrix coefficient.</p><p id="p-0133" num="0132">Default Matrix: may mean a predetermined quantization matrix preliminarily defined in an encoder or a decoder.</p><p id="p-0134" num="0133">Non-default Matrix: may mean a quantization matrix that is not preliminarily defined in an encoder or a decoder but is signaled by a user.</p><p id="p-0135" num="0134">Statistic Value: a statistic value for at least one among a variable, a coding parameter, a constant value, etc. which have a computable specific value may be one or more among an average value, a sum value, a weighted average value, a weighted sum value, the minimum value, the maximum value, the most frequent value, a median value, an interpolated value of the corresponding specific values.</p><p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing a configuration of an encoding apparatus according to an embodiment to which the present invention is applied.</p><p id="p-0137" num="0136">An encoding apparatus <b>100</b> may be an encoder, a video encoding apparatus, or an image encoding apparatus. A video may include at least one image. The encoding apparatus <b>100</b> may sequentially encode at least one image.</p><p id="p-0138" num="0137">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the encoding apparatus <b>100</b> may include a motion prediction unit <b>111</b>, a motion compensation unit <b>112</b>, an intra-prediction unit <b>120</b>, a switch <b>115</b>, a subtractor <b>125</b>, a transform unit <b>130</b>, a quantization unit <b>140</b>, an entropy encoding unit <b>150</b>, a dequantization unit <b>160</b>, an inverse-transform unit <b>170</b>, an adder <b>175</b>, a filter unit <b>180</b>, and a reference picture buffer <b>190</b>.</p><p id="p-0139" num="0138">The encoding apparatus <b>100</b> may perform encoding of an input image by using an intra mode or an inter mode or both. In addition, encoding apparatus <b>100</b> may generate a bitstream including encoded information through encoding the input image, and output the generated bitstream. The generated bitstream may be stored in a computer readable recording medium, or may be streamed through a wired/wireless transmission medium. When an intra mode is used as a prediction mode, the switch <b>115</b> may be switched to an intra. Alternatively, when an inter mode is used as a prediction mode, the switch <b>115</b> may be switched to an inter mode. Herein, the intra mode may mean an intra-prediction mode, and the inter mode may mean an inter-prediction mode. The encoding apparatus <b>100</b> may generate a prediction block for an input block of the input image. In addition, the encoding apparatus <b>100</b> may encode a residual block using a residual of the input block and the prediction block after the prediction block being generated. The input image may be called as a current image that is a current encoding target. The input block may be called as a current block that is current encoding target, or as an encoding target block.</p><p id="p-0140" num="0139">When a prediction mode is an intra mode, the intra-prediction unit <b>120</b> may use a sample of a block that has been already encoded/decoded and is adjacent to a current block as a reference sample. The intra-prediction unit <b>120</b> may perform spatial prediction for the current block by using a reference sample, or generate prediction samples of an input block by performing spatial prediction. Herein, the intra prediction may mean intra-prediction,</p><p id="p-0141" num="0140">When a prediction mode is an inter mode, the motion prediction unit <b>111</b> may retrieve a region that best matches with an input block from a reference image when performing motion prediction, and deduce a motion vector by using the retrieved region. In this case, a search region may be used as the region. The reference image may be stored in the reference picture buffer <b>190</b>. Here, when encoding/decoding for the reference image is performed, it may be stored in the reference picture buffer <b>190</b>.</p><p id="p-0142" num="0141">The motion compensation unit <b>112</b> may generate a prediction block by performing motion compensation for the current block using a motion vector. Herein, inter-prediction may mean inter-prediction or motion compensation.</p><p id="p-0143" num="0142">When the value of the motion vector is not an integer, the motion prediction unit <b>111</b> and the motion compensation unit <b>112</b> may generate the prediction block by applying an interpolation filter to a partial region of the reference picture. In order to perform inter-picture prediction or motion compensation on a coding unit, it may be determined that which mode among a skip mode, a merge mode, an advanced motion vector prediction (AMVP) mode, and a current picture referring mode is used for motion prediction and motion compensation of a prediction unit included in the corresponding coding unit. Then, inter-picture prediction or motion compensation may be differently performed depending on the determined mode.</p><p id="p-0144" num="0143">The subtractor <b>125</b> may generate a residual block by using a difference of an input block and a prediction block. The residual block may be called as a residual signal. The residual signal may mean a difference between an original signal and a prediction signal. In addition, the residual signal may be a signal generated by transforming or quantizing, or transforming and quantizing a difference between the original signal and the prediction signal. The residual block may be a residual signal of a block unit.</p><p id="p-0145" num="0144">The transform unit <b>130</b> may generate a transform coefficient by performing transform of a residual block, and output the generated transform coefficient. Herein, the transform coefficient may be a coefficient value generated by performing transform of the residual block. When a transform skip mode is applied, the transform unit <b>130</b> may skip transform of the residual block.</p><p id="p-0146" num="0145">A quantized level may be generated by applying quantization to the transform coefficient or to the residual signal. Hereinafter, the quantized level may be also called as a transform coefficient in embodiments.</p><p id="p-0147" num="0146">The quantization unit <b>140</b> may generate a quantized level by quantizing the transform coefficient or the residual signal according to a parameter, and output the generated quantized level. Herein, the quantization unit <b>140</b> may quantize the transform coefficient by using a quantization matrix.</p><p id="p-0148" num="0147">The entropy encoding unit <b>150</b> may generate a bitstream by performing entropy encoding according to a probability distribution on values calculated by the quantization unit <b>140</b> or on coding parameter values calculated when performing encoding, and output the generated bitstream. The entropy encoding unit <b>150</b> may perform entropy encoding of sample information of an image and information for decoding an image. For example, the information for decoding the image may include a syntax element.</p><p id="p-0149" num="0148">When entropy encoding is applied, symbols are represented so that a smaller number of bits are assigned to a symbol having a high chance of being generated and a larger number of bits are assigned to a symbol having a low chance of being generated, and thus, the size of bit stream for symbols to be encoded may be decreased. The entropy encoding unit <b>150</b> may use an encoding method for entropy encoding such as exponential Golomb, context-adaptive variable length coding (CAVLC), context-adaptive binary arithmetic coding (CABAC), etc. For example, the entropy encoding unit <b>150</b> may perform entropy encoding by using a variable length coding/code (VLC) table. In addition, the entropy encoding unit <b>150</b> may deduce a binarization method of a target symbol and a probability model of a target symbol/bin, and perform arithmetic coding by using the deduced binarization method, and a context model.</p><p id="p-0150" num="0149">In order to encode a transform coefficient level (quantized level), the entropy encoding unit <b>150</b> may change a two-dimensional block form coefficient into a one-dimensional vector form by using a transform coefficient scanning method.</p><p id="p-0151" num="0150">A coding parameter may include information (flag, index, etc.) such as syntax element that is encoded in an encoder and signaled to a decoder, and information derived when performing encoding or decoding. The coding parameter may mean information required when encoding or decoding an image. For example, at least one value or a combination form of a unit/block size, a unit/block depth, unit/block partition information, unit/block shape, unit/block partition structure, whether to partition of a quad-tree form, whether to partition of a binary-tree form, a partition direction of a binary-tree form (horizontal direction or vertical direction), a partition form of a binary-tree form (symmetric partition or asymmetric partition), whether or not a current coding unit is partitioned by ternary tree partitioning, direction (horizontal or vertical direction) of the ternary tree partitioning, type (symmetric or asymmetric type) of the ternary tree partitioning, whether a current coding unit is partitioned by multi-type tree partitioning, direction (horizontal or vertical direction) of the multi-type three partitioning, type (symmetric or asymmetric type) of the multi-type tree partitioning, and a tree (binary tree or ternary tree) structure of the multi-type tree partitioning, a prediction mode (intra prediction or inter prediction), a luma intra-prediction mode/direction, a chroma intra-prediction mode/direction, intra partition information, inter partition information, a coding block partition flag, a prediction block partition flag, a transform block partition flag, a reference sample filtering method, a reference sample filter tab, a reference sample filter coefficient, a prediction block filtering method, a prediction block filter tap, a prediction block filter coefficient, a prediction block boundary filtering method, a prediction block boundary filter tab, a prediction block boundary filter coefficient, an intra-prediction mode, an inter-prediction mode, motion information, a motion vector, a motion vector difference, a reference picture index, a inter-prediction angle, an inter-prediction indicator, a prediction list utilization flag, a reference picture list, a reference picture, a motion vector predictor index, a motion vector predictor candidate, a motion vector candidate list, whether to use a merge mode, a merge index, a merge candidate, a merge candidate list, whether to use a skip mode, an interpolation filter type, an interpolation filter tab, an interpolation filter coefficient, a motion vector size, a presentation accuracy of a motion vector, a transform type, a transform size, information of whether or not a primary (first) transform is used, information of whether or not a secondary transform is used, a primary transform index, a secondary transform index, information of whether or not a residual signal is present, a coded block pattern, a coded block flag (CBF), a quantization parameter, a quantization parameter residue, a quantization matrix, whether to apply an intra loop filter, an intra loop filter coefficient, an intra loop filter tab, an intra loop filter shape/form, whether to apply a deblocking filter, a deblocking filter coefficient, a deblocking filter tab, a deblocking filter strength, a deblocking filter shape/form, whether to apply an adaptive sample offset, an adaptive sample offset value, an adaptive sample offset category, an adaptive sample offset type, whether to apply an adaptive in-loop filter, an adaptive in-loop filter coefficient, an adaptive in-loop filter tab, an adaptive in-loop filter shape/form, a binarization/inverse-binarization method, a context model determining method, a context model updating method, whether to perform a regular mode, whether to perform a bypass mode, a context bin, a bypass bin, a significant coefficient flag, a last significant coefficient flag, a coded flag for a unit of a coefficient group, a position of the last significant coefficient, a flag for whether a value of a coefficient is larger than 1, a flag for whether a value of a coefficient is larger than 2, a flag for whether a value of a coefficient is larger than 3, information on a remaining coefficient value, a sign information, a reconstructed luma sample, a reconstructed chroma sample, a residual luma sample, a residual chroma sample, a luma transform coefficient, a chroma transform coefficient, a quantized luma level, a quantized chroma level, a transform coefficient level scanning method, a size of a motion vector search area at a decoder side, a shape of a motion vector search area at a decoder side, a number of time of a motion vector search at a decoder side, information on a CTU size, information on a minimum block size, information on a maximum block size, information on a maximum block depth, information on a minimum block depth, an image displaying/outputting sequence, slice identification information, a slice type, slice partition information, tile identification information, a tile type, tile partition information, tile group identification information, a tile group type, tile group partition information, a picture type, a bit depth of an input sample, a bit depth of a reconstruction sample, a bit depth of a residual sample, a bit depth of a transform coefficient, a bit depth of a quantized level, and information on a luma signal or information on a chroma signal may be included in the coding parameter.</p><p id="p-0152" num="0151">Herein, signaling the flag or index may mean that a corresponding flag or index is entropy encoded and included in a bitstream by an encoder, and may mean that the corresponding flag or index is entropy decoded from a bitstream by a decoder.</p><p id="p-0153" num="0152">When the encoding apparatus <b>100</b> performs encoding through inter-prediction, an encoded current image may be used as a reference image for another image that is processed afterwards. Accordingly, the encoding apparatus <b>100</b> may reconstruct or decode the encoded current image, or store the reconstructed or decoded image as a reference image in reference picture buffer <b>190</b>.</p><p id="p-0154" num="0153">A quantized level may be dequantized in the dequantization unit <b>160</b>, or may be inverse-transformed in the inverse-transform unit <b>170</b>. A dequantized or inverse-transformed coefficient or both may be added with a prediction block by the adder <b>175</b>. By adding the dequantized or inverse-transformed coefficient or both with the prediction block, a reconstructed block may be generated. Herein, the dequantized or inverse-transformed coefficient or both may mean a coefficient on which at least one of dequantization and inverse-transform is performed, and may mean a reconstructed residual block.</p><p id="p-0155" num="0154">A reconstructed block may pass through the filter unit <b>180</b>. The filter unit <b>180</b> may apply at least one of a deblocking filter, a sample adaptive offset (SAO), and an adaptive in-loop filter (ALF) to a reconstructed sample, a reconstructed block, or a reconstructed image. The filter unit <b>180</b> may be called as an in-loop filter.</p><p id="p-0156" num="0155">The deblocking filter may remove block distortion generated in boundaries between blocks. In order to determine whether or not to apply a deblocking filter, whether or not to apply a deblocking filter to a current block may be determined based samples included in several rows or columns which are included in the block. When a deblocking filter is applied to a block, another filter may be applied according to a required deblocking filtering strength.</p><p id="p-0157" num="0156">In order to compensate an encoding error, a proper offset value may be added to a sample value by using a sample adaptive offset. The sample adaptive offset may correct an offset of a deblocked image from an original image by a sample unit. A method of partitioning samples of an image into a predetermined number of regions, determining a region to which an offset is applied, and applying the offset to the determined region, or a method of applying an offset in consideration of edge information on each sample may be used.</p><p id="p-0158" num="0157">The adaptive in-loop filter may perform filtering based on a comparison result of the filtered reconstructed image and the original image. Samples included in an image may be partitioned into predetermined groups, a filter to be applied to each group may be determined, and differential filtering may be performed for each group. Information of whether or not to apply the ALF may be signaled by coding units (CUs), and a form and coefficient of the ALF to be applied to each block may vary.</p><p id="p-0159" num="0158">The reconstructed block or the reconstructed image having passed through the filter unit <b>180</b> may be stored in the reference picture buffer <b>190</b>. A reconstructed block processed by the filter unit <b>180</b> may be a part of a reference image. That is, a reference image is a reconstructed image composed of reconstructed blocks processed by the filter unit <b>180</b>. The stored reference image may be used later in inter prediction or motion compensation.</p><p id="p-0160" num="0159"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram showing a configuration of a decoding apparatus according to an embodiment and to which the present invention is applied.</p><p id="p-0161" num="0160">A decoding apparatus <b>200</b> may a decoder, a video decoding apparatus, or an image decoding apparatus.</p><p id="p-0162" num="0161">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the decoding apparatus <b>200</b> may include an entropy decoding unit <b>210</b>, a dequantization unit <b>220</b>, an inverse-transform unit <b>230</b>, an intra-prediction unit <b>240</b>, a motion compensation unit <b>250</b>, an adder <b>255</b>, a filter unit <b>260</b>, and a reference picture buffer <b>270</b>.</p><p id="p-0163" num="0162">The decoding apparatus <b>200</b> may receive a bitstream output from the encoding apparatus <b>100</b>. The decoding apparatus <b>200</b> may receive a bitstream stored in a computer readable recording medium, or may receive a bitstream that is streamed through a wired/wireless transmission medium. The decoding apparatus <b>200</b> may decode the bitstream by using an intra mode or an inter mode. In addition, the decoding apparatus <b>200</b> may generate a reconstructed image generated through decoding or a decoded image, and output the reconstructed image or decoded image.</p><p id="p-0164" num="0163">When a prediction mode used when decoding is an intra mode, a switch may be switched to an intra. Alternatively, when a prediction mode used when decoding is an inter mode, a switch may be switched to an inter mode.</p><p id="p-0165" num="0164">The decoding apparatus <b>200</b> may obtain a reconstructed residual block by decoding the input bitstream, and generate a prediction block. When the reconstructed residual block and the prediction block are obtained, the decoding apparatus <b>200</b> may generate a reconstructed block that becomes a decoding target by adding the reconstructed residual block with the prediction block. The decoding target block may be called a current block.</p><p id="p-0166" num="0165">The entropy decoding unit <b>210</b> may generate symbols by entropy decoding the bitstream according to a probability distribution. The generated symbols may include a symbol of a quantized level form. Herein, an entropy decoding method may be an inverse-process of the entropy encoding method described above.</p><p id="p-0167" num="0166">In order to decode a transform coefficient level (quantized level), the entropy decoding unit <b>210</b> may change a one-directional vector form coefficient into a two-dimensional block form by using a transform coefficient scanning method.</p><p id="p-0168" num="0167">A quantized level may be dequantized in the dequantization unit <b>220</b>, or inverse-transformed in the inverse-transform unit <b>230</b>. The quantized level may be a result of dequantizing or inverse-transforming or both, and may be generated as a reconstructed residual block. Herein, the dequantization unit <b>220</b> may apply a quantization matrix to the quantized level.</p><p id="p-0169" num="0168">When an intra mode is used, the intra-prediction unit <b>240</b> may generate a prediction block by performing, for the current block, spatial prediction that uses a sample value of a block adjacent to a decoding target block and which has been already decoded.</p><p id="p-0170" num="0169">When an inter mode is used, the motion compensation unit <b>250</b> may generate a prediction block by performing, for the current block, motion compensation that uses a motion vector and a reference image stored in the reference picture buffer <b>270</b>.</p><p id="p-0171" num="0170">The adder <b>255</b> may generate a reconstructed block by adding the reconstructed residual block with the prediction block. The filter unit <b>260</b> may apply at least one of a deblocking filter, a sample adaptive offset, and an adaptive in-loop filter to the reconstructed block or reconstructed image. The filter unit <b>260</b> may output the reconstructed image. The reconstructed block or reconstructed image may be stored in the reference picture buffer <b>270</b> and used when performing inter-prediction. A reconstructed block processed by the filter unit <b>260</b> may be a part of a reference image. That is, a reference image is a reconstructed image composed of reconstructed blocks processed by the filter unit <b>260</b>. The stored reference image may be used later in inter prediction or motion compensation.</p><p id="p-0172" num="0171"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a view schematically showing a partition structure of an image when encoding and decoding the image. <figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically shows an example of partitioning a single unit into a plurality of lower units.</p><p id="p-0173" num="0172">In order to efficiently partition an image, when encoding and decoding, a coding unit (CU) may be used. The coding unit may be used as a basic unit when encoding/decoding the image. In addition, the coding unit may be used as a unit for distinguishing an intra prediction mode and an inter prediction mode when encoding/decoding the image. The coding unit may be a basic unit used for prediction, transform, quantization, inverse-transform, dequantization, or an encoding/decoding process of a transform coefficient.</p><p id="p-0174" num="0173">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, an image <b>300</b> is sequentially partitioned in a largest coding unit (LCU), and an LCU unit is determined as a partition structure. Herein, the LCU may be used in the same meaning as a coding tree unit (CTU). A unit partitioning may mean partitioning a block associated with to the unit. In block partition information, information of a unit depth may be included. Depth information may represent a number of times or a degree or both in which a unit is partitioned. A single unit may be partitioned into a plurality of lower level units hierarchically associated with depth information based on a tree structure. In other words, a unit and a lower level unit generated by partitioning the unit may correspond to a node and a child node of the node, respectively. Each of partitioned lower unit may have depth information. Depth information may be information representing a size of a CU, and may be stored in each CU. Unit depth represents times and/or degrees related to partitioning a unit. Therefore, partitioning information of a lower-level unit may comprise information on a size of the lower-level unit.</p><p id="p-0175" num="0174">A partition structure may mean a distribution of a coding unit (CU) within an LCU <b>310</b>. Such a distribution may be determined according to whether or not to partition a single CU into a plurality (positive integer equal to or greater than 2 including 2, 4, 8, 16, etc.) of CUs. A horizontal size and a vertical size of the CU generated by partitioning may respectively be half of a horizontal size and a vertical size of the CU before partitioning, or may respectively have sizes smaller than a horizontal size and a vertical size before partitioning according to a number of times of partitioning. The CU may be recursively partitioned into a plurality of CUs. By the recursive partitioning, at least one among a height and a width of a CU after partitioning may decrease comparing with at least one among a height and a width of a CU before partitioning. Partitioning of the CU may be recursively performed until to a predefined depth or predefined size. For example, a depth of an LCU may be 0, and a depth of a smallest coding unit (SCU) may be a predefined maximum depth. Herein, the LCU may be a coding unit having a maximum coding unit size, and the SCU may be a coding unit having a minimum coding unit size as described above. Partitioning is started from the LCU <b>310</b>, a CU depth increases by 1 as a horizontal size or a vertical size or both of the CU decreases by partitioning. For example, for each depth, a CU which is not partitioned may have a size of 2N&#xd7;2N. Also, in case of a CU which is partitioned, a CU with a size of 2N&#xd7;2N may be partitioned into four CUs with a size of N&#xd7;N. A size of N may decrease to half as a depth increase by 1.</p><p id="p-0176" num="0175">In addition, information whether or not the CU is partitioned may be represented by using partition information of the CU. The partition information may be 1-bit information. All CUs, except for a SCU, may include partition information. For example, when a value of partition information is a first value, the CU may not be partitioned, when a value of partition information is a second value, the CU may be partitioned</p><p id="p-0177" num="0176">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, an LCU having a depth 0 may be a 64&#xd7;64 block. 0 may be a minimum depth. A SCU having a depth 3 may be an 8&#xd7;8 block. 3 may be a maximum depth. A CU of a 32&#xd7;32 block and a 16&#xd7;16 block may be respectively represented as a depth 1 and a depth 2.</p><p id="p-0178" num="0177">For example, when a single coding unit is partitioned into four coding units, a horizontal size, and a vertical size of the four partitioned coding units may be a half size of a horizontal and vertical size of the CU before being partitioned. In one embodiment, when a coding unit having a 32&#xd7;32 size is partitioned into four coding units, each of the four partitioned coding units may have a 16&#xd7;16 size. When a single coding unit is partitioned into four coding units, it may be called that the coding unit may be partitioned into a quad-tree form.</p><p id="p-0179" num="0178">For example, when one coding unit is partitioned into two sub-coding units, the horizontal or vertical size (width or height) of each of the two sub-coding units may be half the horizontal or vertical size of the original coding unit. For example, when a coding unit having a size of 32&#xd7;32 is vertically partitioned into two sub-coding units, each of the two sub-coding units may have a size of 16&#xd7;32. For example, when a coding unit having a size of 8&#xd7;32 is horizontally partitioned into two sub-coding units, each of the two sub-coding units may have a size of 8&#xd7;16. When one coding unit is partitioned into two sub-coding units, it can be said that the coding unit is binary-partitioned or is partitioned by a binary tree partition structure.</p><p id="p-0180" num="0179">For example, when one coding unit is partitioned into three sub-coding units, the horizontal or vertical size of the coding unit can be partitioned with a ratio of 1:2:1, thereby producing three sub-coding units whose horizontal or vertical sizes are in a ratio of 1:2:1. For example, when a coding unit having a size of 16&#xd7;32 is horizontally partitioned into three sub-coding units, the three sub-coding units may have sizes of 16&#xd7;8, 16&#xd7;16, and 16&#xd7;8 respectively, in the order from the uppermost to the lowermost sub-coding unit. For example, when a coding unit having a size of 32&#xd7;32 is vertically split into three sub-coding units, the three sub-coding units may have sizes of 8&#xd7;32, 16&#xd7;32, and 8&#xd7;32, respectively in the order from the left to the right sub-coding unit. When one coding unit is partitioned into three sub-coding units, it can be said that the coding unit is ternary-partitioned or partitioned by a ternary tree partition structure.</p><p id="p-0181" num="0180">In <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a coding tree unit (CTU) <b>320</b> is an example of a CTU to which a quad tree partition structure, a binary tree partition structure, and a ternary tree partition structure are all applied.</p><p id="p-0182" num="0181">As described above, in order to partition the CTU, at least one of a quad tree partition structure, a binary tree partition structure, and a ternary tree partition structure may be applied. Various tree partition structures may be sequentially applied to the CTU, according to a predetermined priority order. For example, the quad tree partition structure may be preferentially applied to the CTU. A coding unit that cannot be partitioned any longer using a quad tree partition structure may correspond to a leaf node of a quad tree. A coding unit corresponding to a leaf node of a quad tree may serve as a root node of a binary and/or ternary tree partition structure. That is, a coding unit corresponding to a leaf node of a quad tree may be further partitioned by a binary tree partition structure or a ternary tree partition structure, or may not be further partitioned. Therefore, by preventing a coding unit that results from binary tree partitioning or ternary tree partitioning of a coding unit corresponding to a leaf node of a quad tree from undergoing further quad tree partitioning, block partitioning and/or signaling of partition information can be effectively performed.</p><p id="p-0183" num="0182">The fact that a coding unit corresponding to a node of a quad tree is partitioned may be signaled using quad partition information. The quad partition information having a first value (e.g., &#x201c;1&#x201d;) may indicate that a current coding unit is partitioned by the quad tree partition structure. The quad partition information having a second value (e.g., &#x201c;0&#x201d;) may indicate that a current coding unit is not partitioned by the quad tree partition structure. The quad partition information may be a flag having a predetermined length (e.g., one bit).</p><p id="p-0184" num="0183">There may not be a priority between the binary tree partitioning and the ternary tree partitioning. That is, a coding unit corresponding to a leaf node of a quad tree may further undergo arbitrary partitioning among the binary tree partitioning and the ternary tree partitioning. In addition, a coding unit generated through the binary tree partitioning or the ternary tree partitioning may undergo a further binary tree partitioning or a further ternary tree partitioning, or may not be further partitioned.</p><p id="p-0185" num="0184">A tree structure in which there is no priority among the binary tree partitioning and the ternary tree partitioning is referred to as a multi-type tree structure. A coding unit corresponding to a leaf node of a quad tree may serve as a root node of a multi-type tree. Whether to partition a coding unit which corresponds to a node of a multi-type tree may be signaled using at least one of multi-type tree partition indication information, partition direction information, and partition tree information. For partitioning of a coding unit corresponding to a node of a multi-type tree, the multi-type tree partition indication information, the partition direction, and the partition tree information may be sequentially signaled.</p><p id="p-0186" num="0185">The multi-type tree partition indication information having a first value (e.g., &#x201c;1&#x201d;) may indicate that a current coding unit is to undergo a multi-type tree partitioning. The multi-type tree partition indication information having a second value (e.g., &#x201c;0&#x201d;) may indicate that a current coding unit is not to undergo a multi-type tree partitioning.</p><p id="p-0187" num="0186">When a coding unit corresponding to a node of a multi-type tree is further partitioned by a multi-type tree partition structure, the coding unit may include partition direction information. The partition direction information may indicate in which direction a current coding unit is to be partitioned for the multi-type tree partitioning. The partition direction information having a first value (e.g., &#x201c;1&#x201d;) may indicate that a current coding unit is to be vertically partitioned. The partition direction information having a second value (e.g., &#x201c;0&#x201d;) may indicate that a current coding unit is to be horizontally partitioned.</p><p id="p-0188" num="0187">When a coding unit corresponding to a node of a multi-type tree is further partitioned by a multi-type tree partition structure, the current coding unit may include partition tree information. The partition tree information may indicate a tree partition structure which is to be used for partitioning of a node of a multi-type tree. The partition tree information having a first value (e.g., &#x201c;1&#x201d;) may indicate that a current coding unit is to be partitioned by a binary tree partition structure. The partition tree information having a second value (e.g., &#x201c;0&#x201d;) may indicate that a current coding unit is to be partitioned by a ternary tree partition structure.</p><p id="p-0189" num="0188">The partition indication information, the partition tree information, and the partition direction information may each be a flag having a predetermined length (e.g., one bit).</p><p id="p-0190" num="0189">At least any one of the quadtree partition indication information, the multi-type tree partition indication information, the partition direction information, and the partition tree information may be entropy encoded/decoded. For the entropy-encoding/decoding of those types of information, information on a neighboring coding unit adjacent to the current coding unit may be used. For example, there is a high probability that the partition type (the partitioned or non-partitioned, the partition tree, and/or the partition direction) of a left neighboring coding unit and/or an upper neighboring coding unit of a current coding unit is similar to that of the current coding unit. Therefore, context information for entropy encoding/decoding of the information on the current coding unit may be derived from the information on the neighboring coding units. The information on the neighboring coding units may include at least any one of quad partition information, multi-type tree partition indication information, partition direction information, and partition tree information.</p><p id="p-0191" num="0190">As another example, among binary tree partitioning and ternary tree partitioning, binary tree partitioning may be preferentially performed. That is, a current coding unit may primarily undergo binary tree partitioning, and then a coding unit corresponding to a leaf node of a binary tree may be set as a root node for ternary tree partitioning. In this case, neither quad tree partitioning nor binary tree partitioning may not be performed on the coding unit corresponding to a node of a ternary tree.</p><p id="p-0192" num="0191">A coding unit that cannot be partitioned by a quad tree partition structure, a binary tree partition structure, and/or a ternary tree partition structure becomes a basic unit for coding, prediction and/or transformation. That is, the coding unit cannot be further partitioned for prediction and/or transformation. Therefore, the partition structure information and the partition information used for partitioning a coding unit into prediction units and/or transformation units may not be present in a bit stream.</p><p id="p-0193" num="0192">However, when the size of a coding unit (i.e., a basic unit for partitioning) is larger than the size of a maximum transformation block, the coding unit may be recursively partitioned until the size of the coding unit is reduced to be equal to or smaller than the size of the maximum transformation block. For example, when the size of a coding unit is 64&#xd7;64 and when the size of a maximum transformation block is 32&#xd7;32, the coding unit may be partitioned into four 32&#xd7;32 blocks for transformation. For example, when the size of a coding unit is 32&#xd7;64 and the size of a maximum transformation block is 32&#xd7;32, the coding unit may be partitioned into two 32&#xd7;32 blocks for the transformation. In this case, the partitioning of the coding unit for transformation is not signaled separately, and may be determined through comparison between the horizontal or vertical size of the coding unit and the horizontal or vertical size of the maximum transformation block. For example, when the horizontal size (width) of the coding unit is larger than the horizontal size (width) of the maximum transformation block, the coding unit may be vertically bisected. For example, when the vertical size (height) of the coding unit is larger than the vertical size (height) of the maximum transformation block, the coding unit may be horizontally bisected.</p><p id="p-0194" num="0193">Information of the maximum and/or minimum size of the coding unit and information of the maximum and/or minimum size of the transformation block may be signaled or determined at an upper level of the coding unit. The upper level may be, for example, a sequence level, a picture level, a slice level, a tile group level, a tile level, or the like. For example, the minimum size of the coding unit may be determined to be 4&#xd7;4. For example, the maximum size of the transformation block may be determined to be 64&#xd7;64. For example, the minimum size of the transformation block may be determined to be 4&#xd7;4.</p><p id="p-0195" num="0194">Information of the minimum size (quad tree minimum size) of a coding unit corresponding to a leaf node of a quad tree and/or information of the maximum depth (the maximum tree depth of a multi-type tree) from a root node to a leaf node of the multi-type tree may be signaled or determined at an upper level of the coding unit. For example, the upper level may be a sequence level, a picture level, a slice level, a tile group level, a tile level, or the like. Information of the minimum size of a quad tree and/or information of the maximum depth of a multi-type tree may be signaled or determined for each of an intra-picture slice and an inter-picture slice.</p><p id="p-0196" num="0195">Difference information between the size of a CTU and the maximum size of a transformation block may be signaled or determined at an upper level of the coding unit. For example, the upper level may be a sequence level, a picture level, a slice level, a tile group level, a tile level, or the like. Information of the maximum size of the coding units corresponding to the respective nodes of a binary tree (hereinafter, referred to as a maximum size of a binary tree) may be determined based on the size of the coding tree unit and the difference information. The maximum size of the coding units corresponding to the respective nodes of a ternary tree (hereinafter, referred to as a maximum size of a ternary tree) may vary depending on the type of slice. For example, for an intra-picture slice, the maximum size of a ternary tree may be 32&#xd7;32. For example, for an inter-picture slice, the maximum size of a ternary tree may be 128&#xd7;128. For example, the minimum size of the coding units corresponding to the respective nodes of a binary tree (hereinafter, referred to as a minimum size of a binary tree) and/or the minimum size of the coding units corresponding to the respective nodes of a ternary tree (hereinafter, referred to as a minimum size of a ternary tree) may be set as the minimum size of a coding block.</p><p id="p-0197" num="0196">As another example, the maximum size of a binary tree and/or the maximum size of a ternary tree may be signaled or determined at the slice level. Alternatively, the minimum size of the binary tree and/or the minimum size of the ternary tree may be signaled or determined at the slice level.</p><p id="p-0198" num="0197">Depending on size and depth information of the above-described various blocks, quad partition information, multi-type tree partition indication information, partition tree information and/or partition direction information may be included or may not be included in a bit stream.</p><p id="p-0199" num="0198">For example, when the size of the coding unit is not larger than the minimum size of a quad tree, the coding unit does not contain quad partition information. Thus, the quad partition information may be inferred to be a second value.</p><p id="p-0200" num="0199">For example, when the sizes (horizontal and vertical sizes) of a coding unit corresponding to a node of a multi-type tree are larger than the maximum sizes (horizontal and vertical sizes) of a binary tree and/or the maximum sizes (horizontal and vertical sizes) of a ternary tree, the coding unit may not be binary-partitioned or ternary-partitioned. Accordingly, the multi-type tree partition indication information may not be signaled but may be inferred to be a second value.</p><p id="p-0201" num="0200">Alternatively, when the sizes (horizontal and vertical sizes) of a coding unit corresponding to a node of a multi-type tree are the same as the maximum sizes (horizontal and vertical sizes) of a binary tree and/or are two times as large as the maximum sizes (horizontal and vertical sizes) of a ternary tree, the coding unit may not be further binary-partitioned or ternary-partitioned. Accordingly, the multi-type tree partition indication information may not be signaled but be derived from a second value. This is because when a coding unit is partitioned by a binary tree partition structure and/or a ternary tree partition structure, a coding unit smaller than the minimum size of a binary tree and/or the minimum size of a ternary tree is generated.</p><p id="p-0202" num="0201">Alternatively, the binary tree partitioning or the ternary tree partitioning may be limited on the basis of the size of a virtual pipeline data unit (hereinafter, a pipeline buffer size). For example, when the coding unit is divided into sub-coding units which do not fit the pipeline buffer size by the binary tree partitioning or the ternary tree partitioning, the corresponding binary tree partitioning or ternary tree partitioning may be limited. The pipeline buffer size may be the size of the maximum transform block (e.g., 64&#xd7;64). For example, when the pipeline buffer size is 64&#xd7;64, the division below may be limited.</p><p id="p-0203" num="0202">N&#xd7;M (N and/or M is 128) Ternary tree partitioning for coding units</p><p id="p-0204" num="0203">128&#xd7;N (N&#x3c;=64) Binary tree partitioning in horizontal direction for coding units</p><p id="p-0205" num="0204">N&#xd7;128 (N&#x3c;=64) Binary tree partitioning in vertical direction for coding units</p><p id="p-0206" num="0205">Alternatively, when the depth of a coding unit corresponding to a node of a multi-type tree is equal to the maximum depth of the multi-type tree, the coding unit may not be further binary-partitioned and/or ternary-partitioned. Accordingly, the multi-type tree partition indication information may not be signaled but may be inferred to be a second value.</p><p id="p-0207" num="0206">Alternatively, only when at least one of vertical direction binary tree partitioning, horizontal direction binary tree partitioning, vertical direction ternary tree partitioning, and horizontal direction ternary tree partitioning is possible for a coding unit corresponding to a node of a multi-type tree, the multi-type tree partition indication information may be signaled. Otherwise, the coding unit may not be binary-partitioned and/or ternary-partitioned. Accordingly, the multi-type tree partition indication information may not be signaled but may be inferred to be a second value.</p><p id="p-0208" num="0207">Alternatively, only when both of the vertical direction binary tree partitioning and the horizontal direction binary tree partitioning or both of the vertical direction ternary tree partitioning and the horizontal direction ternary tree partitioning are possible for a coding unit corresponding to a node of a multi-type tree, the partition direction information may be signaled. Otherwise, the partition direction information may not be signaled but may be derived from a value indicating possible partitioning directions.</p><p id="p-0209" num="0208">Alternatively, only when both of the vertical direction binary tree partitioning and the vertical direction ternary tree partitioning or both of the horizontal direction binary tree partitioning and the horizontal direction ternary tree partitioning are possible for a coding tree corresponding to a node of a multi-type tree, the partition tree information may be signaled. Otherwise, the partition tree information may not be signaled but be inferred to be a value indicating a possible partitioning tree structure.</p><p id="p-0210" num="0209"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a view showing an intra-prediction process.</p><p id="p-0211" num="0210">Arrows from center to outside in <figref idref="DRAWINGS">FIG. <b>4</b></figref> may represent prediction directions of intra prediction modes.</p><p id="p-0212" num="0211">Intra encoding and/or decoding may be performed by using a reference sample of a neighbor block of the current block. A neighbor block may be a reconstructed neighbor block. For example, intra encoding and/or decoding may be performed by using a coding parameter or a value of a reference sample included in a reconstructed neighbor block.</p><p id="p-0213" num="0212">A prediction block may mean a block generated by performing intra prediction. A prediction block may correspond to at least one among CU, PU and TU. A unit of a prediction block may have a size of one among CU, PU and TU. A prediction block may be a square block having a size of 2&#xd7;2, 4&#xd7;4, 16&#xd7;16, 32&#xd7;32 or 64&#xd7;64 etc. or may be a rectangular block having a size of 2&#xd7;8, 4&#xd7;8, 2&#xd7;16, 4&#xd7;16 and 8&#xd7;16 etc.</p><p id="p-0214" num="0213">Intra prediction may be performed according to intra prediction mode for the current block. The number of intra prediction modes which the current block may have may be a fixed value and may be a value determined differently according to an attribute of a prediction block. For example, an attribute of a prediction block may comprise a size of a prediction block and a shape of a prediction block, etc.</p><p id="p-0215" num="0214">The number of intra-prediction modes may be fixed to N regardless of a block size. Or, the number of intra prediction modes may be 3, 5, 9, 17, 34, 35, 36, 65, or 67 etc. Alternatively, the number of intra-prediction modes may vary according to a block size or a color component type or both. For example, the number of intra prediction modes may vary according to whether the color component is a luma signal or a chroma signal. For example, as a block size becomes large, a number of intra-prediction modes may increase. Alternatively, a number of intra-prediction modes of a luma component block may be larger than a number of intra-prediction modes of a chroma component block.</p><p id="p-0216" num="0215">An intra-prediction mode may be a non-angular mode or an angular mode. The non-angular mode may be a DC mode or a planar mode, and the angular mode may be a prediction mode having a specific direction or angle. The intra-prediction mode may be expressed by at least one of a mode number, a mode value, a mode numeral, a mode angle, and mode direction. A number of intra-prediction modes may be M, which is larger than 1, including the non-angular and the angular mode. In order to intra-predict a current block, a step of determining whether or not samples included in a reconstructed neighbor block may be used as reference samples of the current block may be performed. When a sample that is not usable as a reference sample of the current block is present, a value obtained by duplicating or performing interpolation on at least one sample value among samples included in the reconstructed neighbor block or both may be used to replace with a non-usable sample value of a sample, thus the replaced sample value is used as a reference sample of the current block.</p><p id="p-0217" num="0216"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating reference samples capable of being used for intra prediction.</p><p id="p-0218" num="0217">As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, at least one of the reference sample line 0 to the reference sample line 3 may be used for intra prediction of the current block. In <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the samples of a segment A and a segment F may be padded with the samples closest to a segment B and a segment E, respectively, instead of retrieving from the reconstructed neighboring block. Index information indicating the reference sample line to be used for intra prediction of the current block may be signaled. For example, in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, reference sample line indicators 0, 1, and 2 may be signaled as index information indicating reference sample lines 0, 1 and 2. When the upper boundary of the current block is the boundary of the CTU, only the reference sample line 0 may be available. Therefore, in this case, the index information may not be signaled. When a reference sample line other than the reference sample line 0 is used, filtering for a prediction block, which will be described later, may not be performed.</p><p id="p-0219" num="0218">When intra-predicting, a filter may be applied to at least one of a reference sample and a prediction sample based on an intra-prediction mode and a current block size.</p><p id="p-0220" num="0219">In case of a planar mode, when generating a prediction block of a current block, according to a position of a prediction target sample within a prediction block, a sample value of the prediction target sample may be generated by using a weighted sum of an upper and left side reference sample of a current block, and a right upper side and left lower side reference sample of the current block. In addition, in case of a DC mode, when generating a prediction block of a current block, an average value of upper side and left side reference samples of the current block may be used. In addition, in case of an angular mode, a prediction block may be generated by using an upper side, a left side, a right upper side, and/or a left lower side reference sample of the current block. In order to generate a prediction sample value, interpolation of a real number unit may be performed.</p><p id="p-0221" num="0220">In the case of intra prediction between color components, a prediction block for the current block of the second color component may be generated on the basis of the corresponding reconstructed block of the first color component. For example, the first color component may be a luma component, and the second color component may be a chroma component. For intra prediction between color components, the parameters of the linear model between the first color component and the second color component may be derived on the basis of the template. The template may include upper and/or left neighboring samples of the current block and upper and/or left neighboring samples of the reconstructed block of the first color component corresponding thereto. For example, the parameters of the linear model may be derived using a sample value of a first color component having a maximum value among samples in a template and a sample value of a second color component corresponding thereto, and a sample value of a first color component having a minimum value among samples in the template and a sample value of a second color component corresponding thereto. When the parameters of the linear model are derived, a corresponding reconstructed block may be applied to the linear model to generate a prediction block for the current block. According to a video format, subsampling may be performed on the neighboring samples of the reconstructed block of the first color component and the corresponding reconstructed block. For example, when one sample of the second color component corresponds to four samples of the first color component, four samples of the first color component may be sub-sampled to compute one corresponding sample. In this case, the parameter derivation of the linear model and intra prediction between color components may be performed on the basis of the corresponding sub-sampled samples. Whether or not to perform intra prediction between color components and/or the range of the template may be signaled as the intra prediction mode.</p><p id="p-0222" num="0221">The current block may be partitioned into two or four sub-blocks in the horizontal or vertical direction. The partitioned sub-blocks may be sequentially reconstructed. That is, the intra prediction may be performed on the sub-block to generate the sub-prediction block. In addition, dequantization and/or inverse transform may be performed on the sub-blocks to generate sub-residual blocks. A reconstructed sub-block may be generated by adding the sub-prediction block to the sub-residual block. The reconstructed sub-block may be used as a reference sample for intra prediction of the sub-sub-blocks. The sub-block may be a block including a predetermined number (for example, 16) or more samples. Accordingly, for example, when the current block is an 8&#xd7;4 block or a 4&#xd7;8 block, the current block may be partitioned into two sub-blocks. Also, when the current block is a 4&#xd7;4 block, the current block may not be partitioned into sub-blocks. When the current block has other sizes, the current block may be partitioned into four sub-blocks. Information on whether or not to perform the intra prediction based on the sub-blocks and/or the partitioning direction (horizontal or vertical) may be signaled. The intra prediction based on the sub-blocks may be limited to be performed only when reference sample line 0 is used. When the intra prediction based on the sub-block is performed, filtering for the prediction block, which will be described later, may not be performed.</p><p id="p-0223" num="0222">The final prediction block may be generated by performing filtering on the prediction block that is intra-predicted. The filtering may be performed by applying predetermined weights to the filtering target sample, the left reference sample, the upper reference sample, and/or the upper left reference sample. The weight and/or the reference sample (range, position, etc.) used for the filtering may be determined on the basis of at least one of a block size, an intra prediction mode, and a position of the filtering target sample in the prediction block. The filtering may be performed only in the case of a predetermined intra prediction mode (e.g., DC, planar, vertical, horizontal, diagonal, and/or adjacent diagonal modes). The adjacent diagonal mode may be a mode in which k is added to or subtracted from the diagonal mode. For example, k may be a positive integer of 8 or less.</p><p id="p-0224" num="0223">An intra-prediction mode of a current block may be entropy encoded/decoded by predicting an intra-prediction mode of a block present adjacent to the current block. When intra-prediction modes of the current block and the neighbor block are identical, information that the intra-prediction modes of the current block and the neighbor block are identical may be signaled by using predetermined flag information. In addition, indicator information of an intra-prediction mode that is identical to the intra-prediction mode of the current block among intra-prediction modes of a plurality of neighbor blocks may be signaled. When intra-prediction modes of the current block and the neighbor block are different, intra-prediction mode information of the current block may be entropy encoded/decoded by performing entropy encoding/decoding based on the intra-prediction mode of the neighbor block.</p><p id="p-0225" num="0224"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating an embodiment of an inter-picture prediction process.</p><p id="p-0226" num="0225">In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a rectangle may represent a picture. In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, an arrow represents a prediction direction. Pictures may be categorized into intra pictures (I pictures), predictive pictures (P pictures), and Bi-predictive pictures (B pictures) according to the encoding type thereof.</p><p id="p-0227" num="0226">The I picture may be encoded through intra-prediction without requiring inter-picture prediction. The P picture may be encoded through inter-picture prediction by using a reference picture that is present in one direction (i.e., forward direction or backward direction) with respect to a current block. The B picture may be encoded through inter-picture prediction by using reference pictures that are preset in two directions (i.e., forward direction and backward direction) with respect to a current block. When the inter-picture prediction is used, the encoder may perform inter-picture prediction or motion compensation and the decoder may perform the corresponding motion compensation.</p><p id="p-0228" num="0227">Hereinbelow, an embodiment of the inter-picture prediction will be described in detail.</p><p id="p-0229" num="0228">The inter-picture prediction or motion compensation may be performed using a reference picture and motion information.</p><p id="p-0230" num="0229">Motion information of a current block may be derived during inter-picture prediction by each of the encoding apparatus <b>100</b> and the decoding apparatus <b>200</b>. The motion information of the current block may be derived by using motion information of a reconstructed neighboring block, motion information of a collocated block (also referred to as a col block or a co-located block), and/or a block adjacent to the co-located block. The co-located block may mean a block that is located spatially at the same position as the current block, within a previously reconstructed collocated picture (also referred to as a col picture or a co-located picture). The co-located picture may be one picture among one or more reference pictures included in a reference picture list.</p><p id="p-0231" num="0230">The derivation method of the motion information may be different depending on the prediction mode of the current block. For example, a prediction mode applied for inter prediction includes an AMVP mode, a merge mode, a skip mode, a merge mode with a motion vector difference, a subblock merge mode, a geometric partitioning mode, an combined inter intra prediction mode, affine mode, and the like. Herein, the merge mode may be referred to as a motion merge mode.</p><p id="p-0232" num="0231">For example, when the AMVP is used as the prediction mode, at least one of motion vectors of the reconstructed neighboring blocks, motion vectors of the co-located blocks, motion vectors of blocks adjacent to the co-located blocks, and a (0, 0) motion vector may be determined as motion vector candidates for the current block, and a motion vector candidate list is generated by using the emotion vector candidates. The motion vector candidate of the current block can be derived by using the generated motion vector candidate list. The motion information of the current block may be determined based on the derived motion vector candidate. The motion vectors of the collocated blocks or the motion vectors of the blocks adjacent to the collocated blocks may be referred to as temporal motion vector candidates, and the motion vectors of the reconstructed neighboring blocks may be referred to as spatial motion vector candidates.</p><p id="p-0233" num="0232">The encoding apparatus <b>100</b> may calculate a motion vector difference (MVD) between the motion vector of the current block and the motion vector candidate and may perform entropy encoding on the motion vector difference (MVD). In addition, the encoding apparatus <b>100</b> may perform entropy encoding on a motion vector candidate index and generate a bitstream. The motion vector candidate index may indicate an optimum motion vector candidate among the motion vector candidates included in the motion vector candidate list. The decoding apparatus may perform entropy decoding on the motion vector candidate index included in the bitstream and may select a motion vector candidate of a decoding target block from among the motion vector candidates included in the motion vector candidate list by using the entropy-decoded motion vector candidate index. In addition, the decoding apparatus <b>200</b> may add the entropy-decoded MVD and the motion vector candidate extracted through the entropy decoding, thereby deriving the motion vector of the decoding target block.</p><p id="p-0234" num="0233">Meanwhile, the coding apparatus <b>100</b> may perform entropy-coding on resolution information of the calculated MVD. The decoding apparatus <b>200</b> may adjust the resolution of the entropy-decoded MVD using the MVD resolution information.</p><p id="p-0235" num="0234">Meanwhile, the coding apparatus <b>100</b> calculates a motion vector difference (MVD) between a motion vector and a motion vector candidate in the current block on the basis of an affine model, and performs entropy-coding on the MVD. The decoding apparatus <b>200</b> derives a motion vector on a per sub-block basis by deriving an affine control motion vector of a decoding target block through the sum of the entropy-decoded MVD and an affine control motion vector candidate.</p><p id="p-0236" num="0235">The bitstream may include a reference picture index indicating a reference picture. The reference picture index may be entropy-encoded by the encoding apparatus <b>100</b> and then signaled as a bitstream to the decoding apparatus <b>200</b>. The decoding apparatus <b>200</b> may generate a prediction block of the decoding target block based on the derived motion vector and the reference picture index information.</p><p id="p-0237" num="0236">Another example of the method of deriving the motion information of the current may be the merge mode. The merge mode may mean a method of merging motion of a plurality of blocks. The merge mode may mean a mode of deriving the motion information of the current block from the motion information of the neighboring blocks. When the merge mode is applied, the merge candidate list may be generated using the motion information of the reconstructed neighboring blocks and/or the motion information of the collocated blocks. The motion information may include at least one of a motion vector, a reference picture index, and an inter-picture prediction indicator. The prediction indicator may indicate one-direction prediction (L0 prediction or L1 prediction) or two-direction predictions (L0 prediction and L1 prediction).</p><p id="p-0238" num="0237">The merge candidate list may be a list of motion information stored. The motion information included in the merge candidate list may be at least one of motion information (spatial merge candidate) of a neighboring block adjacent to the current block, motion information (temporal merge candidate) of the collocated block of the current block in the reference picture, new motion information generated by a combination of the motion information exiting in the merge candidate list, motion information (history-based merge candidate) of the block that is encoded/decoded before the current block, and zero merge candidate.</p><p id="p-0239" num="0238">The encoding apparatus <b>100</b> may generate a bitstream by performing entropy encoding on at least one of a merge flag and a merge index and may signal the bitstream to the decoding apparatus <b>200</b>. The merge flag may be information indicating whether or not to perform the merge mode for each block, and the merge index may be information indicating that which neighboring block, among the neighboring blocks of the current block, is a merge target block. For example, the neighboring blocks of the current block may include a left neighboring block on the left of the current block, an upper neighboring block disposed above the current block, and a temporal neighboring block temporally adjacent to the current block.</p><p id="p-0240" num="0239">Meanwhile, the coding apparatus <b>100</b> performs entropy-coding on the correction information for correcting the motion vector among the motion information of the merge candidate and signals the same to the decoding apparatus <b>200</b>. The decoding apparatus <b>200</b> can correct the motion vector of the merge candidate selected by the merge index on the basis of the correction information. Here, the correction information may include at least one of information on whether or not to perform the correction, correction direction information, and correction size information. As described above, the prediction mode that corrects the motion vector of the merge candidate on the basis of the signaled correction information may be referred to as a merge mode having the motion vector difference.</p><p id="p-0241" num="0240">The skip mode may be a mode in which the motion information of the neighboring block is applied to the current block as it is. When the skip mode is applied, the encoding apparatus <b>100</b> may perform entropy encoding on information of the fact that the motion information of which block is to be used as the motion information of the current block to generate a bit stream, and may signal the bitstream to the decoding apparatus <b>200</b>. The encoding apparatus <b>100</b> may not signal a syntax element regarding at least any one of the motion vector difference information, the coded block flag, and the transform coefficient level to the decoding apparatus <b>200</b>.</p><p id="p-0242" num="0241">The subblock merge mode may mean a mode that derives the motion information in units of sub-blocks of a coding block (CU). When the subblock merge mode is applied, a subblock merge candidate list may be generated using motion information (sub-block based temporal merge candidate) of the sub-block collocated to the current sub-block in the reference image and/or an affine control point motion vector merge candidate.</p><p id="p-0243" num="0242">The geometric partitioning mode may mean a mode that derives motion information by partitioning the current block into the predefined directions, derives each prediction sample using each of the derived motion information, and derives the prediction sample of the current block by weighting each of the derived prediction samples.</p><p id="p-0244" num="0243">The inter-intra combined prediction mode may mean a mode that derives a prediction sample of the current block by weighting a prediction sample generated by inter prediction and a prediction sample generated by intra prediction.</p><p id="p-0245" num="0244">The decoding apparatus <b>200</b> may correct the derived motion information by itself. The decoding apparatus <b>200</b> may search the predetermined region on the basis of the reference block indicated by the derived motion information and derive the motion information having the minimum SAD as the corrected motion information.</p><p id="p-0246" num="0245">The decoding apparatus <b>200</b> may compensate a prediction sample derived via inter prediction using an optical flow.</p><p id="p-0247" num="0246"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram illustrating a transform and quantization process.</p><p id="p-0248" num="0247">As illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a transform and/or quantization process is performed on a residual signal to generate a quantized level signal. The residual signal is a difference between an original block and a prediction block (i.e., an intra prediction block or an inter prediction block). The prediction block is a block generated through intra prediction or inter prediction. The transform may be a primary transform, a secondary transform, or both. The primary transform of the residual signal results in transform coefficients, and the secondary transform of the transform coefficients results in secondary transform coefficients.</p><p id="p-0249" num="0248">At least one scheme selected from among various transform schemes which are preliminarily defined is used to perform the primary transform. For example, examples of the predefined transform schemes include discrete cosine transform (DCT), discrete sine transform (DST), and Karhunen-Lo&#x117;ve transform (KLT). The transform coefficients generated through the primary transform may undergo the secondary transform. The transform schemes used for the primary transform and/or the secondary transform may be determined according to coding parameters of the current block and/or neighboring blocks of the current block. Alternatively, transform information indicating the transform scheme may be signaled. The DCT-based transform may include, for example, DCT-2, DCT-8, and the like. The DST-based transform may include, for example, DST-7.</p><p id="p-0250" num="0249">A quantized-level signal (quantization coefficients) may be generated by performing quantization on the residual signal or a result of performing the primary transform and/or the secondary transform. The quantized level signal may be scanned according to at least one of a diagonal up-right scan, a vertical scan, and a horizontal scan, depending on an intra prediction mode of a block or a block size/shape. For example, as the coefficients are scanned in a diagonal up-right scan, the coefficients in a block form change into a one-dimensional vector form. Aside from the diagonal up-right scan, the horizontal scan of horizontally scanning a two-dimensional block form of coefficients or the vertical scan of vertically scanning a two-dimensional block form of coefficients may be used depending on the intra prediction mode and/or the size of a transform block. The scanned quantized-level coefficients may be entropy-encoded to be inserted into a bitstream.</p><p id="p-0251" num="0250">A decoder entropy-decodes the bitstream to obtain the quantized-level coefficients. The quantized-level coefficients may be arranged in a two-dimensional block form through inverse scanning. For the inverse scanning, at least one of a diagonal up-right scan, a vertical scan, and a horizontal scan may be used.</p><p id="p-0252" num="0251">The quantized-level coefficients may then be dequantized, then be secondary-inverse-transformed as necessary, and finally be primary-inverse-transformed as necessary to generate a reconstructed residual signal.</p><p id="p-0253" num="0252">Inverse mapping in a dynamic range may be performed for a luma component reconstructed through intra prediction or inter prediction before in-loop filtering. The dynamic range may be divided into 16 equal pieces and the mapping function for each piece may be signaled. The mapping function may be signaled at a slice level or a tile group level. An inverse mapping function for performing the inverse mapping may be derived on the basis of the mapping function. In-loop filtering, reference picture storage, and motion compensation are performed in an inverse mapped region, and a prediction block generated through inter prediction is converted into a mapped region via mapping using the mapping function, and then used for generating the reconstructed block. However, since the intra prediction is performed in the mapped region, the prediction block generated via the intra prediction may be used for generating the reconstructed block without mapping/inverse mapping.</p><p id="p-0254" num="0253">When the current block is a residual block of a chroma component, the residual block may be converted into an inverse mapped region by performing scaling on the chroma component of the mapped region. The availability of the scaling may be signaled at the slice level or the tile group level. The scaling may be applied only when the mapping for the luma component is available and the division of the luma component and the division of the chroma component follow the same tree structure. The scaling may be performed on the basis of an average of sample values of a luma prediction block corresponding to the color difference block. In this case, when the current block uses inter prediction, the luma prediction block may mean a mapped luma prediction block. A value necessary for the scaling may be derived by referring to a lookup table using an index of a piece to which an average of sample values of a luma prediction block belongs. Finally, by scaling the residual block using the derived value, the residual block may be switched to the inverse mapped region. Then, chroma component block restoration, intra prediction, inter prediction, in-loop filtering, and reference picture storage may be performed in the inverse mapped area.</p><p id="p-0255" num="0254">Information indicating whether the mapping/inverse mapping of the luma component and chroma component is available may be signaled through a set of sequence parameters.</p><p id="p-0256" num="0255">The prediction block of the current block may be generated on the basis of a block vector indicating a displacement between the current block and the reference block in the current picture. In this way, a prediction mode for generating a prediction block with reference to the current picture is referred to as an intra block copy (IBC) mode. The IBC mode may be applied to M&#xd7;N (M&#x3c;=64, N&#x3c;=64) coding units. The IBC mode may include a skip mode, a merge mode, an AMVP mode, and the like. In the case of a skip mode or a merge mode, a merge candidate list is constructed, and the merge index is signaled so that one merge candidate may be specified. The block vector of the specified merge candidate may be used as a block vector of the current block. The merge candidate list may include at least one of a spatial candidate, a history-based candidate, a candidate based on an average of two candidates, and a zero-merge candidate. In the case of an AMVP mode, the difference block vector may be signaled. In addition, the prediction block vector may be derived from the left neighboring block and the upper neighboring block of the current block. The index on which neighboring block to use may be signaled. The prediction block in the IBC mode is included in the current CTU or the left CTU and limited to a block in the already reconstructed area. For example, a value of the block vector may be limited such that the prediction block of the current block is positioned in an area of three 64&#xd7;64 blocks preceding the 64&#xd7;64 block to which the current block belongs in the coding/decoding order. By limiting the value of the block vector in this way, memory consumption and device complexity according to the IBC mode implementation may be reduced.</p><p id="p-0257" num="0256">Hereinafter, a method for enhancing video compression efficiency by improving a transform method, which is one of video coding processes, will be described. More specifically, encoding in the conventional video coding schematically includes: an intrainter prediction step of prediction the original block that is a part of the current original image; a transform and quantization step for a residual block that is a difference between the predicted prediction block and the original block; and an entropy coding step which is a lossless compression method based on the probability for the coefficient of the block on which transform and quantization have been performed and for compression information obtained at the preceding step. Consequently, a bitstream which is a compressed form of the original image is generated, and this is transmitted to the decoder or stored in a recording medium. Shuffling and discrete sine transform (hereinafter, referred to as &#x201c;SDST&#x201d;), which will be described below in this specification, is intended to enhance compression efficiency by increasing transform efficiency.</p><p id="p-0258" num="0257">The SDST method according to the present invention uses a discrete sine transform type-7 (hereinafter, referred to as &#x201c;DST-VII&#x201d; or &#x201c;DST-7&#x201d;) instead of a discrete cosine transform type-2 (hereinafter, referred to as &#x201c;DCT-II&#x201d; or &#x201c;DCT-2&#x201d;) that is a transform kernel widely used in video coding, thereby reflecting the frequency characteristics common to images much better.</p><p id="p-0259" num="0258">According to the transform method of the present invention, a high objective video quality may be obtained even at a relatively low bit rate compared to the conventional video coding method.</p><p id="p-0260" num="0259">DST-7 may be applied to data of a residual block. Application of DST-7 to the residual block may be performed on the basis of the prediction mode corresponding to the residual block. For example, it may be applied to the residual block that is encoded in the inter mode. According to an embodiment of the present invention, DST-7 may be applied after rearranging or shuffling the data of the residual block. Here, shuffling may mean rearrangement of image data, and may be equivalent to residual signal rearrangement or flipping. Here, the residual block may have the same meaning as the residual, a remaining block, a remaining signal, a residual signal, remaining data, or residual data. Further, the residual block may have the same meaning as the reconstructed residual, a reconstructed remaining block, a reconstructed remaining signal, a reconstructed residual signal, reconstructed remaining data, or reconstructed residual data that are in the reconstructed form of the residual block in the encoder and the decoder.</p><p id="p-0261" num="0260">According to an embodiment of the present invention, SDST may use DST-7 as a transform kernel. Here, the transform kernel of SDST is not limited to DST-7, and it is possible to use at least one among various types of DST and DCT, such as discrete sine transform type-1 (DST-1), discrete sine transform type-2 (DST-2), discrete sine transform type-3 (DST-3), . . . , discrete sine transform type-n (DST-n), discrete cosine transform type-1 (DCT-1), discrete cosine transform type-2 (DCT-2), discrete cosine transform type-3 (DCT-3), . . . , discrete cosine transform type-n (DCT-n), and the like. (Here, n may be a positive integer of one or more)</p><p id="p-0262" num="0261">Equation 1 below may represent a method of performing one-dimensional DCT-2 according to an embodiment of the present invention. Here, N may denote the size of the block, k may denote the position of the frequency component, and x<sub>n </sub>may denote the value of the n-th coefficient in the spatial domain.</p><p id="p-0263" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <msub>       <mi>X</mi>       <mi>k</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <munderover>         <mo>&#x2211;</mo>         <mrow>          <mi>n</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mrow>          <mi>N</mi>          <mo>-</mo>          <mn>1</mn>         </mrow>        </munderover>        <mrow>         <msub>          <mi>x</mi>          <mi>n</mi>         </msub>         <mo>*</mo>         <mrow>          <mi>cos</mi>          <mo>[</mo>          <mrow>           <mfrac>            <mi>&#x3c0;</mi>            <mi>N</mi>           </mfrac>           <mo>&#x2062;</mo>           <mrow>            <mo>(</mo>            <mrow>             <mi>n</mi>             <mo>+</mo>             <mfrac>              <mn>1</mn>              <mn>2</mn>             </mfrac>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2062;</mo>           <mi>k</mi>          </mrow>          <mo>]</mo>         </mrow>         <mo>&#x2062;</mo>         <mtext>      </mtext>         <mi>k</mi>        </mrow>       </mrow>       <mo>=</mo>       <mn>0</mn>      </mrow>     </mrow>     <mo>,</mo>     <mo>&#x2026;</mo>     <mtext>   </mtext>     <mo>,</mo>     <mrow>      <mi>N</mi>      <mo>-</mo>      <mn>1</mn>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>1</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0264" num="0262">DCT-2 in the two-dimensional domain may be realized by performing horizontal transform and vertical transform on the residual block with Equation 1 above.</p><p id="p-0265" num="0263">The DCT-2 transform kernel may be defined as Equation 2 below. Here, X<sub>k </sub>may denote a basis vector according to position in the frequency domain, and N may denote the size of the frequency domain.</p><p id="p-0266" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <msub>       <mi>X</mi>       <mi>k</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <mi>cos</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mfrac>          <mi>&#x3c0;</mi>          <mi>N</mi>         </mfrac>         <mo>&#x2062;</mo>         <mrow>          <mo>(</mo>          <mrow>           <mi>i</mi>           <mo>+</mo>           <mfrac>            <mn>1</mn>            <mn>2</mn>           </mfrac>          </mrow>          <mo>)</mo>         </mrow>         <mo>&#x2062;</mo>         <mi>k</mi>        </mrow>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mtext>       </mtext>       <mi>i</mi>      </mrow>     </mrow>     <mo>,</mo>     <mrow>      <mi>k</mi>      <mo>=</mo>      <mn>0</mn>     </mrow>     <mo>,</mo>     <mn>1</mn>     <mo>,</mo>     <mo>&#x2026;</mo>     <mtext>   </mtext>     <mo>,</mo>     <mrow>      <mi>N</mi>      <mo>-</mo>      <mn>1</mn>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>2</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0267" num="0264">In the meantime, <figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating a basis vector in the frequency domain of DCT-2 according to the present invention. <figref idref="DRAWINGS">FIG. <b>7</b></figref> shows frequency characteristics of DCT-2 in the frequency domain. Here, the value computed through X0 basis vector of DCT-2 may denote a DC component.</p><p id="p-0268" num="0265">DCT-2 may be used in the transform process for the residual block in the size of 4&#xd7;4, 8&#xd7;8, 16&#xd7;16, 32&#xd7;32, and the like.</p><p id="p-0269" num="0266">In the meantime, DCT-2 may be used selectively on the basis of at least one among the size of the residual block, a color component (for example, a luma component, and a chroma component) of the residual block, and the prediction mode corresponding to the residual block. For example, when the residual block is in the size of 4&#xd7;4 and is encoded in the intra mode and the component of the residual block is the luma component, DCT-2 is used. For example, when the horizontal length(width) of the residual block encoded in the intra mode is in a predetermined range (for example, equal to or larger than four pixels and equal to or smaller than 16 pixels) and the horizontal length(width) is no longer than the vertical length(height), a first transform kernel may be used for horizontal transform. Otherwise, a second transform kernel may be used for horizontal transform. For example, when the vertical length(height) of the residual block encoded in the intra mode is equal to or longer than four pixels and equal to or shorter than 16 pixels and the vertical length(height) is no longer than the horizontal length(width), a first transform kernel may be used for vertical transform. Otherwise, a second transform kernel may be used for vertical transform. The first transform kernel may differ from the second transform kernel. That is, horizontal transform and vertical transform methods for the block encoded in the intra mode may be implicitly determined on the basis of the shape of the block under a predetermined condition. For example, the first transform kernel may be DST-7, and the second transform kernel may be DCT-2. Here, the residual block is the transform target, so it may have the same meaning as the transform block. Here, the prediction mode may mean inter prediction or intra prediction. Further, in the case of intra prediction, the prediction mode means an intra prediction mode or an intra prediction direction.</p><p id="p-0270" num="0267">Transform through a DCT-2 transform kernel may achieve high compression efficiency for a block having a characteristic that the change between neighboring pixels is small like a background of an image. However, it may not appropriate as a transform kernel for a region, such as a texture image, which has a complex pattern. This is because when a block having a low correlation between neighboring pixels is transformed through DCT-2, a large number of transform coefficients occurs in the high frequency component of the frequency domain. When the transform coefficient is frequently generated in the high frequency domain, compression efficiency of an image may decrease. In order to enhance compression efficiency, a coefficient having a large value needs to occur near a low frequency component, and the value of the coefficient needs to be close to zero at a high frequency component.</p><p id="p-0271" num="0268">Equation 3 below may represent a method of performing one-dimensional DST-7 according to an embodiment of the present invention. Here, N may denote the size of the block, k may denote the position of the frequency component, and x<sub>n </sub>may denote the value of the n-th coefficient in the spatial domain.</p><p id="p-0272" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <msub>       <mi>X</mi>       <mi>k</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <munderover>         <mo>&#x2211;</mo>         <mrow>          <mi>n</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mrow>          <mi>N</mi>          <mo>-</mo>          <mn>1</mn>         </mrow>        </munderover>        <mrow>         <msub>          <mi>x</mi>          <mi>n</mi>         </msub>         <mo>*</mo>         <mrow>          <mi>sin</mi>          <mo>[</mo>          <mrow>           <mfrac>            <mrow>             <mi>&#x3c0;</mi>             <mo>&#x2061;</mo>             <mo>(</mo>             <mrow>              <mrow>               <mn>2</mn>               <mo>&#x2062;</mo>               <mi>n</mi>              </mrow>              <mo>+</mo>              <mn>1</mn>             </mrow>             <mo>)</mo>            </mrow>            <mrow>             <mrow>              <mn>2</mn>              <mo>&#x2062;</mo>              <mi>N</mi>             </mrow>             <mo>+</mo>             <mn>1</mn>            </mrow>           </mfrac>           <mo>&#x2062;</mo>           <mrow>            <mo>(</mo>            <mrow>             <mi>k</mi>             <mo>+</mo>             <mn>1</mn>            </mrow>            <mo>)</mo>           </mrow>          </mrow>          <mo>]</mo>         </mrow>         <mo>&#x2062;</mo>         <mtext>      </mtext>         <mi>k</mi>        </mrow>       </mrow>       <mo>=</mo>       <mn>0</mn>      </mrow>     </mrow>     <mo>,</mo>     <mo>&#x2026;</mo>     <mtext>   </mtext>     <mo>,</mo>     <mrow>      <mi>N</mi>      <mo>-</mo>      <mn>1</mn>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>3</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0273" num="0269">DST-7 in the two-dimensional domain may be realized by performing horizontal transform and vertical transform on the residual block with Equation 3 above.</p><p id="p-0274" num="0270">The DST-7 transform kernel may be defined as Equation 4 below. Here, X<sub>k </sub>may denote the k-th basis vector of DST-7, i may denote the position in the frequency domain, and N may denote the size of the frequency domain.</p><p id="p-0275" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <msub>       <mi>X</mi>       <mi>k</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <mi>sin</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mfrac>          <mrow>           <mi>&#x3c0;</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <mrow>            <mrow>             <mn>2</mn>             <mo>&#x2062;</mo>             <mi>n</mi>            </mrow>            <mo>+</mo>            <mn>1</mn>           </mrow>           <mo>)</mo>          </mrow>          <mrow>           <mrow>            <mn>2</mn>            <mo>&#x2062;</mo>            <mi>N</mi>           </mrow>           <mo>+</mo>           <mn>1</mn>          </mrow>         </mfrac>         <mo>&#x2062;</mo>         <mrow>          <mo>(</mo>          <mrow>           <mi>k</mi>           <mo>+</mo>           <mn>1</mn>          </mrow>          <mo>)</mo>         </mrow>        </mrow>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mtext>      </mtext>       <mi>i</mi>      </mrow>     </mrow>     <mo>,</mo>     <mrow>      <mi>k</mi>      <mo>=</mo>      <mn>0</mn>     </mrow>     <mo>,</mo>     <mn>1</mn>     <mo>,</mo>     <mo>&#x2026;</mo>     <mtext>   </mtext>     <mo>,</mo>     <mrow>      <mi>N</mi>      <mo>-</mo>      <mn>1</mn>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>4</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0276" num="0271">DST-7 may be used in the transform process for the residual block in the size of at least one among 2&#xd7;2, 4&#xd7;4, 8&#xd7;8, 16&#xd7;16, 32&#xd7;32, 64&#xd7;64, 128&#xd7;128, and the like.</p><p id="p-0277" num="0272">In the meantime, DST-7 may be applied to a rectangular block rather than a square block. For example, DST-7 may be applied to at least one among vertical transform and horizontal transform of a rectangular block of which the horizontal size differs from the vertical size, such as 8&#xd7;4, 16&#xd7;8, 32&#xd7;4, 64&#xd7;16, and the like. When selective application of multiple transform methods is possible, DCT-2 is applied to horizontal transform and vertical transform of a square block. When selective application of multiple transform methods is impossible, DST-7 is applied to horizontal transform and vertical transform of a square block.</p><p id="p-0278" num="0273">Further, DST-7 may be used selectively on the basis of at least one among the size of the residual block, the color component (for example, the luma component, and the chroma component) of the residual block, the prediction mode corresponding to the residual block, the intra prediction mode (direction), and the shape of the residual block. For example, when the residual block is in the size of 4&#xd7;4 and is encoded in the intra mode and the component of the residual block is the luma component, DST-7 is used. Here, the prediction mode may mean inter prediction or intra prediction. Further, in the case of intra prediction, the prediction mode means an intra prediction mode or an intra prediction direction. For example, for the chroma component, selection of the transform method on the basis of the block shape may not be available. For example, when the intra prediction mode is prediction between color components, selection of the transform method on the basis of the block shape is not available. For example, the transform method for the chroma component may be specified by information signaled through a bitstream. When the current block is partitioned into multiple sub-blocks and intra prediction is performed on each of the sub-blocks, the transform method for the current block is determine on the basis of the intra prediction mode and/or the block size (horizontal and/or vertical size). For example, when the intra prediction mode is non-directional (DC or Planar) and the horizontal length(width) (or vertical length(height)) is in a predetermined range, a first transform kernel is used for horizontal transform (vertical transform). Otherwise, a second transform kernel is used. The first transform kernel may differ from the second transform kernel. For example, the first transform kernel may be DST-7, and the second transform kernel may be DCT-2. The predetermined range may range, for example, from four pixels to 16 pixels. When the size of the block is not in the predetermined range, the same kernel (for example, the second transform kernel) is used for horizontal transform and vertical transform. When the size of the block is in the predetermined range, different transform kernels are used for intra prediction modes adjacent to each other. For example, when the second transform kernel and the first transform kernel are used for horizontal transform and vertical transform in mode 27, respectively, the first transform kernel and the second transform kernel are respectively used for horizontal transform and vertical transform in modes 26 and 28 adjacent to mode 27.</p><p id="p-0279" num="0274">Hereinafter, SDST, which is one among transform methods using DST-7 as the transform kernel, will be described.</p><p id="p-0280" num="0275">Hereinafter, the block may mean one among the CU, the PU, and the TU.</p><p id="p-0281" num="0276">The SDST according to the present invention may be performed in two steps. The first step is to perform shuffling on the residual signal within the PU of the CU predicted in the inter mode or intra mode. The second step is to apply DST-7 to the residual signal within the block on which shuffling has been performed.</p><p id="p-0282" num="0277">The residual signals arranged within the current block (for example, the CU, the PU, or the TU) may be scanned in a first direction and may be rearranged in a second direction. That is, the residual signals arranged within the current block may be scanned in the first direction and may be rearranged in the second direction for performing shuffling. Here, the residual signal may mean a signal indicating a different signal between the original signal and the prediction signal. That is, the residual signal may mean a signal before performing at least one of transform and quantization. Alternatively, the residual signal may mean a signal form in which at least one of transform and quantization is performed. Further, the residual signal may mean a reconstructed residual signal. That is, the residual signal may mean a signal on which at least one of inverse transform and dequantization has been performed. Further, the residual signal may mean a signal before performing at least one of inverse transform and dequantization.</p><p id="p-0283" num="0278">In the meantime, the first direction (or scan direction) may be one among raster scan order, up-right diagonal scan order, horizontal scan order, and vertical scan order. Further, the first direction may be defined as at least one among the following (1) to (10).</p><p id="p-0284" num="0279">Scanning from the top row to the bottom row, and scanning from the left to the right in one row</p><p id="p-0285" num="0280">Scanning from the top row to the bottom row, and scanning from the Tight to the left in one row</p><p id="p-0286" num="0281">Scanning from the bottom row to the top row, and scanning from the left to the right in one row</p><p id="p-0287" num="0282">Scanning from the bottom row to the top row, and scanning from the right to the left in one row</p><p id="p-0288" num="0283">Scanning from the left column to the right column, and scanning from the top to the bottom in one column</p><p id="p-0289" num="0284">Scanning from the left column to the right column, and scanning from the bottom to the top in one column</p><p id="p-0290" num="0285">Scanning from the right column to the left column, and scanning from the top to the bottom in one column</p><p id="p-0291" num="0286">Scanning from the right column to the left column, and scanning from the bottom to the top in one column</p><p id="p-0292" num="0287">Scanning in the spiral shape: scanning from inside (or outside) the block to outside (or inside) the block, and scanning in a clockwise/counterclockwise direction</p><p id="p-0293" num="0288">Diagonal scanning: starting from one vertex within a block, diagonally scanning in top left, top right, bottom left, or bottom right direction</p><p id="p-0294" num="0289">In the meantime, regarding the second direction (or rearrangement direction), at least one among (1) to (10) scan directions may be selectively used. The first direction and the second direction may be the same, or may differ from each other.</p><p id="p-0295" num="0290">The scanning and rearrangement process for the residual signal may be performed in units of the current block.</p><p id="p-0296" num="0291">Here, the rearrangement may mean that the residual signals scanned in the first direction within the block are arranged in the second direction in a block of the same size. Here, the size of the block for scanning in the first direction may differ from the size of the block for rearrangement in the second direction.</p><p id="p-0297" num="0292">Further, the scanning and the rearrangement are described as being performed separately according to the first direction and the second direction, but the scanning and the rearrangement may be performed as one process for the first direction. For example, for the residual signal within the block, scanning may be performed from the top row to the bottom row, and scanning is performed from the right to the left in one row for storage (rearrangement) in the block.</p><p id="p-0298" num="0293">In the meantime, the scanning and rearrangement process for the residual signal may be performed in predetermined units of the sub-block within the current block. Here, the sub-block may be a block that is equal to or smaller than the current block in size. The sub-block may be a block that results from the partitioning of the current block in quad tree, binary tree forms, and the like.</p><p id="p-0299" num="0294">The sub-block unit may have a fixed size and/or shape (for example, 4&#xd7;4, 4&#xd7;8, 8&#xd7;8, . . . , N&#xd7;M, wherein N and M are positive integers). Further, the size and/or the shape of the sub-block unit may be variably derived. For example, the size and/or the shape of the sub-block unit may be determined depending on the size, the shape, and/or the prediction mode (inter and intra) of the current block.</p><p id="p-0300" num="0295">The scan direction and/or the rearrangement direction may be determined adaptively depending on the position of the sub-block. In this case, different scan directions and/or rearrangement directions may be used for sub-blocks, or all or a part of the sub-blocks of the current block may use the same scan direction and/or the same rearrangement direction.</p><p id="p-0301" num="0296">For example, for the inter-predicted block, the residual block having the same size as the block may be decoded, or the sub residual block corresponding to a part of the block may be decoded. Information for this may be signaled for the block, and the information may be, for example, a flag. When the residual block having the same size as the block is decoded, information on the transform kernel is determined by decoding information contained in a bitstream. When the sub residual block corresponding to a part of the block is decoded, the transform kernel for the sub residual block is determined on the basis of information for specifying the type of the sub residual block and/or the position within the block. For example, information on the type of the sub residual block and/or the position within the block may be contained in the bitstream for signaling. Here, when the block is larger than 32&#xd7;32, determination of the transform kernel on the basis of the type of the sub residual block and/or the position within the block is not performed. For example, for the block larger than 32&#xd7;32, a predetermined transform kernel (for example, DCT-2) may be applied, or information on the transform kernel may be explicitly signaled. Alternatively, when the width or the height of the block is larger than 32, determination of the transform kernel on the basis of the type of the sub residual block and/or the position within the block is not performed. For example, for a 64&#xd7;8 block, a predetermined transform kernel (for example, DCT-2) may be applied, or information on the transform kernel may be explicitly signaled.</p><p id="p-0302" num="0297">Information on the type of the sub residual block may be partitioning information of the block. The partitioning information of the block may be, for example, partitioning direction information indicating one between horizontal partitioning and vertical partitioning. Alternatively, the partitioning information of the block may contain partitioning ratio information. For example, the partitioning ratio may include 1:1, 1:3, and/or 3:1. The partitioning direction information and the partitioning ratio information may be signaled as separate syntax elements or as a single syntax element.</p><p id="p-0303" num="0298">Information on the position of the sub residual block may indicate the position within the block. For example, when partitioning of the block is vertical partitioning, the information on the position indicates one between the left side and the right side. Further, when partitioning of the block is horizontal partitioning, the information on the position indicates one between the top and the bottom.</p><p id="p-0304" num="0299">The transform kernel of the sub residual block may be determined on the basis of the type information and/or the position information. The transform kernel may be determined independently for horizontal transform and vertical transform. For example, the transform kernel may be determined on the basis of the partitioning direction. For example, in the case of vertical partitioning, the first transform kernel may be applied for vertical transform. In the case of horizontal partitioning, the first transform kernel may be applied for horizontal transform. For example, the first transform kernel or the second transform kernel may be applied to horizontal transform in the case of vertical partitioning and vertical transform in the case of horizontal partitioning. For example, in the case of vertical partitioning, the second transform kernel may be applied to horizontal transform at the left position, and the first transform kernel may be applied to horizontal transform at the right position. Further, in the case of horizontal partitioning, the second transform kernel may be applied to vertical transform at the top position, and the first transform kernel may be applied to vertical transform at the bottom position. For example, the first transform kernel and the second transform kernel may be DST-7 and DCT-8, respectively. For example, the first transform kernel and the second transform kernel may be DST-7 and DCT-2, respectively. However, without being limited thereto, among the various transform kernels described in the specification, any two different transform kernels may be used as first and second transform kernels. Here, the block may mean the CU or the TU. Further, the sub residual block may mean a sub-TU.</p><p id="p-0305" num="0300">In the case of only the TU within the inter-predicted PU, the transform mode information may be entropy encoded/decoded in a bypass mode. Further, in the case of at least one among the transform skip mode, a residual differential PCM (RDPCM) mode, and a lossless mode, entropy encoding/decoding of the transform mode information is omitted and the transform mode information is not signaled.</p><p id="p-0306" num="0301">Further, when the coded block flag of the block is zero, entropy encoding/decoding of the transform mode information is omitted and the transform mode information is not signaled. When the coded block flag is zero, the inverse transform process is omitted in the decoder. Thus, even when the transform mode information is not present in the decoder, reconstruction of the block is possible.</p><p id="p-0307" num="0302">However, the transform mode information is not limited to representing the transform mode through the flag, and may be implemented in the form of a pre-defined table and an index. Here, the pre-defined table may be that an available transform mode for each index is defined.</p><p id="p-0308" num="0303">Further, transform of DCT-2 or SDST may be performed separately in the horizontal direction and the vertical direction. The same transform mode may be used for the horizontal direction and the vertical direction, or different transform modes may be used.</p><p id="p-0309" num="0304">Further, the transform mode information on whether DCT-2 is used for the horizontal direction and the vertical direction, whether SDST is used, and whether DST-7 is used may be entropy encoded/decoded, respectively. The transform mode information may be, for example, signaled as an index. The transform kernels indicated by the same index may be the same for the intra-predicted block and the inter-predicted block.</p><p id="p-0310" num="0305">Further, the transform mode information may be entropy encoded/decoded in units of at least one among a CU, a PU, a TU, and a block.</p><p id="p-0311" num="0306">Further, the transform mode information may be signaled according to the luma component or the chroma component. In other words, the transform mode information may be signaled according to a Y component, a Cb component, or a Cr component. For example, when signaling the transform mode information on whether DCT-2 is performed for the Y component or SDST is performed, the transform mode information signaled for the Y component may be used as the transform mode of the block without signaling any transform mode information for at least one among the Cb component and the Cr component.</p><p id="p-0312" num="0307">Here, the transform mode information may be entropy encoded/decoding with an arithmetic coding method using a context model. When the transform mode information is implemented in the form of a pre-defined table and an index, all or a part of bins among multiple bins is entropy encoded/decoding with the arithmetic coding method using the context model.</p><p id="p-0313" num="0308">Further, the transform mode information may be entropy encoded/decoding selectively depending on the block size. For example, when the size of the current block is equal to or larger than 64&#xd7;64, the transform mode information is not entropy encoded/decoded. When the size is equal to or smaller than 32&#xd7;32, the transform mode information is entropy encoded/decoded.</p><p id="p-0314" num="0309">Further, when a non-zero transform coefficient or L quantized levels are present within the current block, the transform mode information is not entropy encoded/decoded, and one method among DCT-2, DST-7, and SDST methods is performed. Here, regardless of the position of the non-zero transform coefficient or the quantized level within the block, the transform mode information may not be entropy encoded/decoded. Further, only when the non-zero transform coefficient or the quantized level is present at the top left position within the block, the transform mode information may not be entropy encoded/decoded. Here, L may be a positive integer including zero, and may be one, for example.</p><p id="p-0315" num="0310">Further, when the non-zero transform coefficient or J or more quantized levels are present within the current block, the transform mode information is entropy encoded/decoded. Here, J is a positive integer.</p><p id="p-0316" num="0311">Further, the transform mode information is a method in which the use of some transform modes is limited according to the transform mode of the collocated block or the transform mode of the collocated block is represented by few bits, the binarization method of the transform method may vary.</p><p id="p-0317" num="0312">The above-described SDST may be limitedly used on the basis of at least one among a prediction mode, an intra prediction mode, an inter prediction mode, a TU depth, a size, and a shape of the current block.</p><p id="p-0318" num="0313">For example, SDST is used when the current block is encoded in the inter mode.</p><p id="p-0319" num="0314">The minimum/maximum depth in which SDST is allowed may be defined. In this case, when the depth of the current block is equal to or larger than the minimum depth, SDST is used. Alternatively, when the depth of the current block is equal to or smaller than the maximum depth, SDST is used. Here, the minimum/maximum depth may be a fixed value, or may be determined variably on the basis of information indicating the minimum/maximum depth. Information indicating the minimum/maximum depth may be signaled from the encoder, and may be derived from the decoder on the basis of the attribute (for example, the size, the depth, and/or the shape) of the current/neighboring block.</p><p id="p-0320" num="0315">The minimum/maximum size in which SDST is allowed may be defined. Similarly, when the size of the current block is equal to or larger than the minimum size, SDST is used. Alternatively, when the size of the current block is equal to or smaller than the maximum size, SDST is used. Here, the minimum/maximum size may be a fixed value, or may be determined variably on the basis of information indicating the minimum/maximum size. Information indicating the minimum/maximum size may be signaled from the encoder, and may be derived from the decoder on the basis of the attribute (for example, the size, the depth, and/or the shape) of the current/neighboring block. For example, when the current block is 4&#xd7;4, DCT-2 is used as the transform method, and transform mode information on whether DCT-2 is used or SDST is used is not entropy encoded/decoded.</p><p id="p-0321" num="0316">The shape of the block in which SDST is allowed may be defined. In this case, when the shape of the current block is the defined block shape, SDST is used. Further, the shape of the block in which SDST is not allowed may be defined. In this case, when the shape of the current block is the defined block shape, SDST is not used. The shape of the block in which SDST is allowed or is not allowed may be fixed, and information on this may be signaled from the encoder. Alternatively, it may be derived from the decoder on the basis of the attribute (for example, the size, the depth, and/or the shape) of the current/neighboring block. The shape of the block in which SDST is allowed or is not allowed may mean, for example, in an M&#xd7;N block, M, N, and/or the ratio between M and N.</p><p id="p-0322" num="0317">Further, when the depth of the TU is zero, DCT-2 or DST-7 is used as the transform method, and transform mode information on which transform method has been used is entropy encoded/decoded. When DST-7 is used as the transform method, the rearrangement process of the residual signal is performed. Further, when the depth of the TU is one or more, DCT-2 or SDST is used as the transform method, and transform mode information on which transform method has been used is entropy encoded/decoded.</p><p id="p-0323" num="0318">Further, the transform method may be used selectively depending on the partitioning shape of the CU and the PU or the shape of the current block.</p><p id="p-0324" num="0319">According to the embodiment, when the partitioning shape of the CU and the PU or the shape of the current block is 2N&#xd7;2N, DCT-2 is used. With respect to remaining partitioning shapes and block shapes, DCT-2 or SDST may be selectively used.</p><p id="p-0325" num="0320">Further, when the partitioning shape of the CU and the PU or the shape of the current block is 2N&#xd7;N or N&#xd7;2N, DCT-2 is used. With respect to remaining partitioning shapes and block shapes, DCT-2 or SDST may be selectively used.</p><p id="p-0326" num="0321">Further, when the partitioning shape of the CU and the PU or the shape of the current block is nR&#xd7;2N, nL&#xd7;2N, 2N&#xd7;nU, or 2N&#xd7;nD, DCT-2 is used. With respect to remaining partitioning shapes and block shapes, DCT-2 or SDST may be selectively used.</p><p id="p-0327" num="0322">In the meantime, when SDST or DST-7 is performed in units of a block that results from partitioning of the current block, scanning and inverse scanning may be performed on the transform coefficient (quantized level) in units of the block that results from the partitioning. Further, when SDST or DST-7 is performed in units of a block that results from partitioning of the current block, scanning and inverse scanning may be performed on the transform coefficient (quantized level) in units of the current block that is not partitioned.</p><p id="p-0328" num="0323">Further, transform/inverse transform using SDST or DST-7 may be performed according to at least one among the intra prediction mode (direction) of the current block, the size of the current block, and the component (the luma component or the chroma component) of the current block.</p><p id="p-0329" num="0324">Further, in transform/inverse transform using SDST or DST-7, DST-1 may be used instead of DST-7. Further, in transform/inverse transform using SDST or DST-7, DCT-4 may be used instead of DST-7.</p><p id="p-0330" num="0325">Further, in transform/inverse transform using DCT-2, the rearrangement method that is used for rearrangement of the residual signals of SDST or DST-7 may be applied. That is, even when using DCT-2, rearrangement of the residual signals or rotation of the residual signal using a predetermined angle is performed.</p><p id="p-0331" num="0326">Hereinafter, various modifications and embodiments for the shuffling method and the signaling method will be described.</p><p id="p-0332" num="0327">SDST of the present invention is intended to enhance image compression efficiency by changing transform, shuffling, rearrangement, and/or flipping methods. Performing DST-7 through shuffling of the residual signal effectively reflects the distribution characteristic of residual signals within the PU, so high compression efficiency is achieved.</p><p id="p-0333" num="0328">In the above description related to the shuffling step, the residual signal rearrangement method has been described. Hereinafter, in addition to the shuffling method for rearrangement of the residual signals, other implementation methods will be described.</p><p id="p-0334" num="0329">The rearrangement method described below may be applied to at least one of embodiments related to the SDST method described above.</p><p id="p-0335" num="0330">In order to minimize hardware complexity in implementing rearrangement of the residual signals, the residual signal rearrangement process may be implemented by a horizontal flipping method and a vertical flipping method. The residual signal rearrangement method may be implemented through flipping as shown in the following (1) to (4). Rearrangement described below may mean flipping.</p><p id="p-0336" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>r</i>&#x2032;(<i>x,y</i>)=<i>r</i>(<i>x,y</i>);no flipping&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0337" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>r</i>&#x2032;(<i>x,y</i>)=<i>r</i>(<i>w&#x2212;</i>1&#x2212;<i>x,y</i>);horizontal flipping&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0338" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>r</i>&#x2032;(<i>x,y</i>)=<i>r</i>(<i>x,h&#x2212;</i>1&#x2212;<i>y</i>);vertical flipping&#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0339" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>r</i>&#x2032;(<i>x,y</i>)=<i>r</i>(<i>w&#x2212;</i>1&#x2212;<i>x,h&#x2212;</i>1&#x2212;<i>y</i>);horizontal and vertical flipping&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0340" num="0331">The expression r&#x2032;(x,y) denotes a residual signal after rearrangement, and the expression r(x,y) denotes a residual signal before rearrangement. The width and the height of the block are designated by wand h, respectively. The position of the residual signal within the block is represented by x and y. The inverse rearrangement method of the rearrangement method using flipping may be performed in the same process as the rearrangement method. That is, the residual signals that are rearranged using horizontal flipping may be reconstructed into the original residual signal arrangement by performing horizontal flipping again. The rearrangement method performed by the encoder and the inverse rearrangement method performed by the decoder may be the same flipping method.</p><p id="p-0341" num="0332">For example, when performing horizontal flipping on the residual block on which horizontal flipping has been performed, the residual block before performing flipping is obtained, which is represented as follows.</p><p id="p-0342" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>r</i>&#x2032;(<i>w</i>&#x2212;1&#x2212;<i>x,y</i>)=<i>r</i>(<i>w</i>&#x2212;1&#x2212;(<i>w</i>&#x2212;1&#x2212;<i>x</i>),<i>y</i>)=<i>r</i>(<i>x,y</i>).<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0343" num="0333">For example, when performing vertical flipping on the residual block on which vertical flipping has been performed, the residual block before performing flipping is obtained, which is represented as follows.</p><p id="p-0344" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>r</i>&#x2032;(<i>x,h&#x2212;</i>1&#x2212;<i>y</i>)=<i>r</i>(<i>x,h&#x2212;</i>1&#x2212;(<i>h&#x2212;</i>1&#x2212;<i>y</i>))=<i>r</i>(<i>x,y</i>).<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0345" num="0334">For example, when performing horizontal and vertical flipping on the residual block on which horizontal and vertical flipping have been performed, the residual block before performing flipping is obtained, which is represented as follows.</p><p id="p-0346" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>r</i>&#x2032;(<i>w&#x2212;</i>1&#x2212;<i>x,h&#x2212;</i>1&#x2212;<i>y</i>)=<i>r</i>(<i>w&#x2212;</i>1&#x2212;(<i>w&#x2212;</i>1&#x2212;<i>x</i>),<i>h&#x2212;</i>1&#x2212;(<i>h&#x2212;</i>1&#x2212;<i>y</i>))=<i>r</i>(<i>x,y</i>).<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0347" num="0335">The residual signal shuffling/rearrangement method based on flipping may be used without partitioning the current block. That is, in the SDST method, it is described that the current block (the TU, and the like) is partitioned into sub-blocks and DST-7 is used for each sub-block. However, when using the residual signal shuffling/rearrangement method based on flipping, the current block is not partitioned into sub-blocks and flipping is performed on the entire or a part of the current block, then DST-7 transform is performed. Further, when using the residual signal shuffling/rearrangement method based on flipping, the current block is not partitioned into sub-blocks, and after performing DST-7 inverse transform, flipping is performed on all or a part of the current block.</p><p id="p-0348" num="0336">The maximum size (M&#xd7;N) and/or the minimum size (O&#xd7;P) of the block in which it is capable of performing residual signal shuffling/rearrangement based on flipping may be defined. Here, the size may include at least one among the width, which is the horizontal size (M or O), and the height, which is the vertical size (N or P). The M, N, O, and P may be positive integers. The maximum size of the block and/or the minimum size of the block may be pre-defined values in the encoder/decoder, or may be information signaled from the encoder to the decoder.</p><p id="p-0349" num="0337">For example, when the size of the current block is smaller than the minimum size in which it is capable of performing the flipping method, flipping and DST-7 transform are not performed and only DCT-2 transform is performed. Here, the SDST flag that is transform mode information indicating whether flipping and DST-7 are used as the transform mode may not be signaled.</p><p id="p-0350" num="0338">For example, when the width of the block is smaller than the minimum width in which it is capable of performing the flipping method and the height of the block is larger than the minimum height in which it is capable of performing the flipping method, one-dimensional transform in the horizontal direction is performed only with DCT-2. Regarding one-dimensional transform in the vertical direction, one-dimensional vertical transform is performed using DST-7 after vertical flipping, or one-dimensional vertical transform is performed using DST-7 without flipping. Here, the SDST flag that is transform mode information indicating whether flipping is used as the transform mode may be signaled only for one-dimensional transform in the vertical direction.</p><p id="p-0351" num="0339">For example, when the height of the block is smaller than the minimum height in which it is capable of performing the flipping method and the width of the block is larger than the minimum width in which it is capable of performing the flipping method, regarding the one-dimensional transform in the horizontal direction, one-dimensional horizontal transform is performed using DST-7 after horizontal flipping, or one-dimensional horizontal transform is performed using DST-7 without flipping. The one-dimensional transform in the vertical direction is performed only with DCT-2. Here, the SDST flag that is transform mode information indicating whether flipping is used as the transform mode may be signaled only for one-dimensional transform in the horizontal direction.</p><p id="p-0352" num="0340">For example, when the size of the current block is larger than the maximum size in which it is capable of performing the flipping method, flipping and DST-7 transform are not used and only DCT-2 transform is used. Here, the SDST flag that is transform mode information indicating whether flipping and DST-7 transform are used as the transform mode may not be signaled.</p><p id="p-0353" num="0341">For example, when the size of the current block is larger than the maximum size in which it is capable of performing the flipping method, only DCT-2 transform or DST-7 transform is used.</p><p id="p-0354" num="0342">For example, when the maximum size in which it is capable of performing the flipping method is 32&#xd7;32 and the minimum size is 4&#xd7;4, flipping and DST-7 transform are not used for a block in the size of 64&#xd7;64 and only DCT-2 transform is used. Here, for the block in the size of 64&#xd7;64, the SDST flag that is transform mode information indicating whether flipping and DST-7 are used as the transform mode may not be signaled. Further, for the block in the size of 4&#xd7;4 to 32&#xd7;32, the SDST flag that is transform mode information indicating whether flipping and DST-7 are used as the transform mode may be signaled. In this case, DST-7 transform is not used for the block in the size of 64&#xd7;64, so it is possible to save the memory space for storing DST-7 transform used for the block in the size of 64&#xd7;64.</p><p id="p-0355" num="0343">For example, when the maximum size in which it is capable of performing the flipping method is 32&#xd7;32 and the minimum size is 4&#xd7;4, not only the flipping method is used for the block in the size of 64&#xd7;64 and DCT-2 or DST-7 transform are used.</p><p id="p-0356" num="0344">For example, a square block in the size of M&#xd7;N may be partitioned into four sub-blocks in the quad tree, and the shuffling/rearrangement method may be performed on each of the sub-blocks using flipping, then DST-7 transform may be performed. Here, the flipping method may be explicitly signaled for each of the sub-blocks. The flipping method may be signaled as a fixed-length code of two bits, and may be signaled as a truncated unary code. Further, it is possible to use a binarization method based on the occurrence probability of the flipping method according to each block resulting from the partitioning. Here, M and N may be positive integers, for example, 64&#xd7;64.</p><p id="p-0357" num="0345">Information (sdst_flag or sdst flag) on use of the residual signal shuffling/rearrangement method based on flipping may be entropy encoded/decoding using the transform mode information. That is, through signaling for the transform mode information, the same method performed in the encoder may be performed in the decoder. For example, when the flag bit indicating the transform mode information has a first value, the residual signal shuffling/rearrangement method based on flipping and DST-7 are used as the transform/inverse transform method. When the flag bit has a second value, another transform/inverse transform method is used. Here, the transform mode information may be entropy encoded/decoded for each block. Here, another transform/inverse transform method may be a DCT-2 transform/inverse transform method. Further, in the case of one among the transform skip mode, the residual differential PCM (RDPCM) mode, and the lossless mode, entropy encoding/decoding of the transform mode information is omitted and the transform mode information is not signaled.</p><p id="p-0358" num="0346">The transform mode information may be entropy encoded/decoded using at least one among the depth of the current block, the size of the current block, the shape of the current block, transform mode information of the neighboring block, the coded block flag of the current block, and information on whether the transform skip mode of the current block is used. For example, when the coded block flag of the current block is zero, entropy encoding/decoding of the transform mode information is omitted and the transform mode information is not signaled. Further, the transform mode information may be predictively encoded/decoded from the transform mode information of the reconstructed block adjacent to the current block during entropy encoding/decoding. Further, the transform mode information may be signaled on the basis of at least one among coding parameters of the current block and the neighboring block.</p><p id="p-0359" num="0347">Further, using flipping method information, at least one among the four flipping methods (no flipping, horizontal flipping, vertical flipping, and horizontal and vertical flipping) may be entropy encoded/decoded in the form of a flag or an index (flipping_idx). That is, by signaling the flipping method information, the same flipping method performed in the encoder may be performed in the decoder. The transform mode information may include the flipping method information.</p><p id="p-0360" num="0348">Further, in the case of one among the transform skip mode, the residual differential PCM (RDPCM) mode, and the lossless mode, entropy encoding/decoding of the flipping method information is omitted and the flipping method information is not signaled. The flipping method information may be entropy encoded/decoded using at least one among the depth of the current block, the size of the current block, the shape of the current block, flipping method information of the neighboring block, the coded block flag of the current block, and information on whether the transform skip mode of the current block is used. For example, when the coded block flag of the current block is zero, entropy encoding/decoding of the flipping method information is omitted and the transform mode information is not signaled. Further, the flipping method information may be predictively encoded/decoded from the flipping method information of the reconstructed block adjacent to the current block during entropy encoding/decoding. Further, the flipping method information may be signaled on the basis of at least one among coding parameters of the current block and the neighboring block.</p><p id="p-0361" num="0349">In the meantime, a part of the residual signal rearrangement method described above regarding the shuffling step may be determined as the optimum rearrangement method by the encoder, and information (flipping method information) on the determined rearrangement method may be signaled to the decoder. For example, when four rearrangement methods are used, the encoder signals information on the residual signal rearrangement method to the decoder as many as two bits.</p><p id="p-0362" num="0350">Further, when the used rearrangement methods have different occurrence probabilities, the rearrangement method having the high occurrence probability is encoded using few bits and the rearrangement method having the low occurrence probability is encoded using relatively more bits. For example, four rearrangement methods are arranged in order of decreasing occurrence probability, and signaling as truncated unary codes (for example, (0, 10, 110, 111) or (1, 01, 001, 000)) is possible.</p><p id="p-0363" num="0351">Further, the occurrence probability of the rearrangement method may vary depending on coding parameters, such as the prediction mode of the current CU, the intra prediction mode (direction) of the PU, the motion vector of the neighboring block, and the like. Thus, the encoding method of information (flipping method information) on the rearrangement method may be used differently depending on the coding parameter. For example, the occurrence probability of the rearrangement method may vary according to the prediction mode of the intra prediction. Thus, for each intra mode, few bits may be assigned to the rearrangement method having the high occurrence probability and many bits may be assigned to the rearrangement method having the low occurrence probability. Alternatively, depending on a case, the rearrangement method having the extremely low occurrence probability may not be used and may not be assigned any bits.</p><p id="p-0364" num="0352">A rearrangement set including at least one among the residual signal rearrangement methods may be constructed according to at least one among the prediction mode (inter mode or intra mode) of the current block, the intra prediction mode (including a directional mode and a non-directional mode), the inter prediction mode, the block size, the block shape (a square shape or a non-square shape), a luma/chroma signal, the transform mode information, and the like. The rearrangement may mean flipping. Further, on the basis of at least one among coding parameters of the current block and the neighboring block, a rearrangement set including at least one of the residual signal rearrangement methods may be constructed.</p><p id="p-0365" num="0353">Further, according to at least one among the prediction mode of the current block, the intra prediction mode, the inter prediction mode, the block size, the block shape, the luma/chroma signal, the transform mode information, and the like, at least one of the following rearrangement sets may be selected. Further, on the basis of at least one of the coding parameters of the current block and the neighboring block, at least one of the rearrangement sets may be selected.</p><p id="p-0366" num="0354">The rearrangement set may include at least one among &#x201c;no flipping&#x201d;, &#x201c;horizontal flipping&#x201d;, &#x201c;vertical flipping&#x201d;, and &#x201c;horizontal and vertical flipping&#x201d;. Examples of the rearrangement set are shown as follows.</p><p id="p-0367" num="0355">1. No flipping</p><p id="p-0368" num="0356">2. Horizontal flipping</p><p id="p-0369" num="0357">3. Vertical flipping</p><p id="p-0370" num="0358">4. Horizontal and vertical flipping</p><p id="p-0371" num="0359">5. No flipping, and horizontal flipping</p><p id="p-0372" num="0360">6. No flipping, and vertical flipping</p><p id="p-0373" num="0361">7. No flipping, and horizontal and vertical flipping</p><p id="p-0374" num="0362">8. Horizontal flipping, and vertical flipping</p><p id="p-0375" num="0363">9. Horizontal flipping, and horizontal and vertical flipping</p><p id="p-0376" num="0364">10. Vertical flipping, and horizontal and vertical flipping</p><p id="p-0377" num="0365">11. No flipping, horizontal flipping, and vertical flipping</p><p id="p-0378" num="0366">12. No flipping, horizontal flipping, and horizontal and vertical flipping</p><p id="p-0379" num="0367">13. No flipping, vertical flipping, and horizontal and vertical flipping</p><p id="p-0380" num="0368">14. Horizontal flipping, vertical flipping, and horizontal and vertical flipping</p><p id="p-0381" num="0369">15. No flipping, horizontal flipping, vertical flipping, and horizontal and vertical flipping</p><p id="p-0382" num="0370">On the basis of the rearrangement set, at least one of the residual signal rearrangement methods may be used for rearrangement of the current block.</p><p id="p-0383" num="0371">Further, according to at least one among the prediction mode of the current block, the intra prediction mode, the inter prediction mode, the block size, the block shape, the luma/chroma signal, the transform mode information, the flipping method information, and the like, at least one of the residual signal rearrangement methods may be selected in the rearrangement set. Further, on the basis of at least one of the coding parameters of the current block and the neighboring block, at least one of the residual signal rearrangement methods may be selected in the rearrangement set.</p><p id="p-0384" num="0372">According to the prediction mode of the current block, at least one rearrangement set may be constructed. For example, when the prediction mode of the current block is the intra prediction, multiple rearrangement sets are constructed. When the prediction mode of the current block is the inter prediction, one rearrangement set is constructed.</p><p id="p-0385" num="0373">According to the luma/chroma signal of the current block, at least one rearrangement set may be constructed. For example, when the current block is the chroma signal, one rearrangement set is constructed. When the current block is the luma signal, multiple rearrangement sets are constructed.</p><p id="p-0386" num="0374">Further, on the basis of the rearrangement set, an index for the residual signal rearrangement method may be entropy encoded/decoded. Here, the index may be entropy encoded/decoded into a variable-length code or a fixed-length code.</p><p id="p-0387" num="0375">Further, on the basis of the rearrangement set, binarization and debinarization of the index for the residual signal rearrangement method may be performed. Here, the index may be subjected to binarization and debinarization into a variable-length code or a fixed-length code.</p><p id="p-0388" num="0376">Further, the rearrangement set may be in the form of a table in the encoder and the decoder, and may be computed through an equation.</p><p id="p-0389" num="0377">Further, the rearrangement set may be constructed in such a manner as to have symmetry. For example, a table for the rearrangement set may be constructed in such a manner as to have symmetry. Here, the table may be constructed in such a manner as to have symmetry for the intra prediction mode.</p><p id="p-0390" num="0378">Further, the rearrangement set may be constructed according to at least one among whether the intra prediction mode is in a particular range and whether the intra prediction mode is an even number or an odd number.</p><p id="p-0391" num="0379">The following tables show examples of a method of encoding/decoding the residual signal rearrangement method according to the prediction mode of the current block and the intra prediction mode (direction).</p><p id="p-0392" num="0380">Further, in the following tables, the use of at least one of the residual signal rearrangement methods may be indicated using the flipping method information.</p><p id="p-0393" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="84pt" align="left"/><colspec colname="3" colwidth="91pt" align="center"/><thead><row><entry namest="1" nameend="3" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row><row><entry/><entry/><entry>Residual signal</entry></row><row><entry>Prediction</entry><entry>Intra prediction direction</entry><entry>rearrangement method</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="84pt" align="left"/><colspec colname="3" colwidth="28pt" align="center"/><colspec colname="4" colwidth="21pt" align="center"/><colspec colname="5" colwidth="21pt" align="center"/><colspec colname="6" colwidth="21pt" align="center"/><tbody valign="top"><row><entry>mode</entry><entry>(intra prediction mode)</entry><entry>(1)</entry><entry>(2)</entry><entry>(3)</entry><entry>(4)</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="84pt" align="left"/><colspec colname="3" colwidth="28pt" align="char" char="."/><colspec colname="4" colwidth="21pt" align="center"/><colspec colname="5" colwidth="21pt" align="char" char="."/><colspec colname="6" colwidth="21pt" align="center"/><tbody valign="top"><row><entry>Intra</entry><entry>Horizontal direction or mode</entry><entry>0</entry><entry>&#x2014;</entry><entry>1</entry><entry>&#x2014;</entry></row><row><entry/><entry>close to horizontal direction</entry><entry/><entry/><entry/><entry/></row><row><entry>Intra </entry><entry>Vertical direction or mode </entry><entry>0</entry><entry>1</entry><entry>&#x2014;</entry><entry>&#x2014;</entry></row><row><entry/><entry>close to vertical direction</entry><entry/><entry/><entry/><entry/></row><row><entry>Intra</entry><entry>Diagonal direction at 45-</entry><entry>*</entry><entry>&#x2014;</entry><entry>&#x2014;</entry><entry>&#x2014;</entry></row><row><entry/><entry>degree angle or mode close</entry><entry/><entry/><entry/><entry/></row><row><entry/><entry>to diagonal direction at 45-</entry><entry/><entry/><entry/><entry/></row><row><entry/><entry>degree angle</entry><entry/><entry/><entry/><entry/></row><row><entry>Intra</entry><entry>Even number</entry><entry>0</entry><entry>10</entry><entry>11</entry><entry>&#x2014;</entry></row><row><entry>Intra </entry><entry>Odd number</entry><entry>0</entry><entry>&#x2014;</entry><entry>10</entry><entry>11</entry></row><row><entry>Intra</entry><entry>Other cases (otherwise)</entry><entry>0</entry><entry>110</entry><entry>10</entry><entry>111</entry></row><row><entry>Inter</entry><entry>N/A</entry><entry>00</entry><entry>01</entry><entry>10</entry><entry>11</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0394" num="0381">In Table 1, columns (1) to (4) of the residual signal rearrangement method specify the residual signal rearrangement method such as an index for scanning/rearrangement order for residual signal rearrangement described above, an index for a predetermined angle value, an index for a predetermined flipping method, or the like. In Table 1, the mark * in the column of the residual signal rearrangement method denotes that the corresponding rearrangement method is used implicitly without signaling, and the mark - denotes that the corresponding rearrangement method is not used in the corresponding case. The meaning of that the rearrangement method is used implicitly may be that the rearrangement method is used with the transform mode information (sdst_flag or sdst flag) without entropy encoding/decoding of the index for the residual signal rearrangement method. The columns (1) to (4) of the residual signal rearrangement method may refer (1) no flipping, (2) horizontal flipping, (3) vertical flipping, and (4) horizontal and vertical flipping, respectively. Further, the numerals 0, 1, 10, 11, 110, 111, and the like may be the result of binarization/debinarization used for entropy encoding/decoding the residual signal rearrangement method. As the binarization/debinarization method, a fixed-length code, a truncated unary code, a unary code, or the like may be used. As shown in Table 1, when the current block corresponds to at least one among the prediction mode and the intra prediction mode (direction), at least one rearrangement method is used in the encoder and the decoder. Here, the diagonal direction at a 45-degree angle may mean a direction toward the top left position in the current block or a direction toward the current block from the top left position in the current block.</p><p id="p-0395" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="140pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry/><entry>Residual signal </entry></row><row><entry/><entry/><entry>rearrangement method</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="21pt" align="center"/><colspec colname="3" colwidth="49pt" align="center"/><colspec colname="4" colwidth="21pt" align="center"/><colspec colname="5" colwidth="49pt" align="center"/><tbody valign="top"><row><entry/><entry>Prediction mode</entry><entry>(1)</entry><entry>(2)</entry><entry>(3)</entry><entry>(4)</entry></row><row><entry/><entry namest="offset" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="21pt" align="char" char="."/><colspec colname="3" colwidth="49pt" align="char" char="."/><colspec colname="4" colwidth="21pt" align="char" char="."/><colspec colname="5" colwidth="49pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>Intra</entry><entry>0</entry><entry>110</entry><entry>10</entry><entry>111</entry></row><row><entry/><entry>Inter</entry><entry>00</entry><entry>01</entry><entry>10</entry><entry>11</entry></row><row><entry/><entry namest="offset" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0396" num="0382">As another example, as shown in Table 2, when the current block corresponds to at least one of the prediction modes and at least one of the intra prediction modes (directions), at least one rearrangement method is used in the encoder and the decoder.</p><p id="p-0397" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="140pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 3</entry></row></thead><tbody valign="top"><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry/><entry>Residual signal </entry></row><row><entry/><entry/><entry>rearrangement method</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="21pt" align="center"/><colspec colname="3" colwidth="49pt" align="center"/><colspec colname="4" colwidth="21pt" align="center"/><colspec colname="5" colwidth="49pt" align="center"/><tbody valign="top"><row><entry/><entry>Prediction mode</entry><entry>(1)</entry><entry>(2)</entry><entry>(3)</entry><entry>(4)</entry></row><row><entry/><entry namest="offset" nameend="5" align="center" rowsep="1"/></row><row><entry/><entry>Intra and Inter</entry><entry>00</entry><entry>01</entry><entry>10</entry><entry>11</entry></row><row><entry/><entry namest="offset" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0398" num="0383">As another example, as shown in Table 3, when the current block corresponds to at least one of the prediction modes and at least one of the intra prediction modes (directions), at least one rearrangement method is used in the encoder and the decoder. Here, the residual signal rearrangement method may mean a type of transformation. For example, when the residual signal rearrangement method is (1), both horizontal transform and vertical transform mean the first transform kernel. As another example, when the residual signal rearrangement method is (2), horizontal transform and vertical transform mean the second transform kernel and the first transform kernel, respectively. As another example, when the residual signal rearrangement method is (3), horizontal transform and vertical transform mean the first transform kernel and the second transform kernel, respectively. As another example, when the residual signal rearrangement method is (4), horizontal transform and vertical transform mean the second transform kernel and the second transform kernel, respectively. For example, the first transform kernel may be DST-7, and the second transform kernel may be DCT-8. When the intra prediction mode is the Planar mode or the DC mode, information (flipping method information) on four rearrangement methods is entropy encoded/decoded using the truncated unary code based on the frequency of occurrences. In the case of inter prediction, the occurrence probabilities of the rearrangement methods (1) to (4) may be regarded to be equal, and the information on the rearrangement method may be entropy encoded/decoded into the fixed-length code of two bits.</p><p id="p-0399" num="0384">Arithmetic coding/decoding may be used for the code. Further, arithmetic coding using a context model for the code may not be used, and entropy encoding/decoding may be possible in a bypass mode.</p><p id="p-0400" num="0385">Transform/inverse transform with DST-7 may be performed for a region or a CTU within a picture, the entire picture, or the current block within a picture group without flipping, or transform/inverse transform may be performed by selecting one among two methods of performing transform/inverse transform with DCT-2. In this case, one-bit flag information (transform mode information) indicating whether to use DST-7 or DCT-2 in units of the current block may be entropy encoded/decoded. This method may be used for a case where the longer the distance from the reference sample, the greater the energy of the residual signal, or may be used to reduce computation complexity in encoding and decoding. Information on the region in which this method is used may be signaled in units of a CTU, a slice, a PPS, a SPS, or other particular regions, and a one-bit flag may be signaled in the on/off form.</p><p id="p-0401" num="0386">For a region or a CTU within a picture, the entire picture, or the current block within a picture group, transform/inverse transform may be performed by selecting one among five methods: DCT-2 transform/inverse transform, DST-7 transform/inverse transform without flipping, DST-7 transform/inverse transform after performing horizontal flipping, DST-7 transform/inverse transform after performing vertical flipping, and DST-7 transform/inverse transform after performing horizontal and vertical flipping. Information on which transform among the five methods to be selected may be selected implicitly using nearby information of the current block, and may be selected explicitly through signaling of an index (transform mode information or flipping method information). The index may be signaled into truncated unary codes in a manner that DCT-2 is 0, DST-7 without flipping is 10, DST-7 after horizontal flipping is 110, DST-7 after vertical flipping is 1110, and DST-7 after horizontal and vertical flipping is 1111. Further, according to the size and the nearby information of the current block, binarization of DCT-2 and of DST-7 may be exchanged for signaling. Further, the first binary number of the binary numbers may be signaled in units of a CU, and the remaining binary numbers may be signaled in units of a TU or a PU. Further, information may be signaled into a fixed-length code by distinguishing, among the binary numbers, the first binary number, the second binary number, and the third binary number. For example, the transform mode information or the flipping method information may be signaled in a manner that DCT-2 is 0, DST-7 without flipping is 000, DST-7 after horizontal flipping is 001, DST-7 after vertical flipping is 010, and DST-7 after horizontal and vertical flipping is 011. Further, according to the intra prediction mode, only a part of the five methods may be used. For example, when the intra prediction mode is a prediction mode close to the horizontal direction prediction mode, only three transform methods are used: DCT-2, DST-7 without flipping, and DST-7 after vertical flipping. In this case, the transform mode information or the flipping method information may be signaled in a manner that DCT-2 is 0, DST-7 without flipping is 10, and DST-7 after vertical flipping is 11.</p><p id="p-0402" num="0387"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating an embodiment of a decoding method using the SDST method according to the present invention.</p><p id="p-0403" num="0388">Referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, first, the transform mode of the current block may be determined at step <b>801</b>, and inverse transform may be performed on the residual data of the current block according to the transform mode of the current block at step <b>802</b>.</p><p id="p-0404" num="0389">Next, rearrangement may be performed on the residual data of the current block on which inverse transform has been performed according to the transform mode of the current block at step <b>803</b>.</p><p id="p-0405" num="0390">Here, the transform mode may include at least one among shuffling discrete sine transform (SDST), shuffling discrete cosine transform (SDCT), discrete sine transform (DST), and discrete cosine transform (DCT).</p><p id="p-0406" num="0391">The SDST mode may indicate a mode in which inverse transform is performed in a DST-7 transform mode and rearrangement is performed on the residual data on which inverse transform has been performed.</p><p id="p-0407" num="0392">The SDCT mode may indicate a mode in which inverse transform is performed in a DCT-2 transform mode and rearrangement is performed on the residual data on which inverse transform has been performed.</p><p id="p-0408" num="0393">The DST mode may indicate a mode in which inverse transform is performed in a DST-7 transform mode and rearrangement is not performed on the residual data on which inverse transform has been performed.</p><p id="p-0409" num="0394">The DCT mode may indicate a mode in which inverse transform is performed in a DCT-2 transform mode and rearrangement is not performed on the residual data on which inverse transform has been performed.</p><p id="p-0410" num="0395">Thus, only when the transform mode of the current block is one of SDST and SDCT, rearrangement of the residual data is performed.</p><p id="p-0411" num="0396">Although it is described that inverse transform is performed in a DST-7 transform mode for SDST and DST modes as described above, transform modes based on other DSTs, such as DST-1, DST-2, and the like, may be used.</p><p id="p-0412" num="0397">In the meantime, the determining of the transform mode of the current block at step <b>801</b> may include: obtaining transform mode information of the current block from a bitstream; and determining the transform mode of the current block on the basis of the transform mode information.</p><p id="p-0413" num="0398">Further, at the determining of the transform mode of the current block at step <b>801</b>, it may be determined on the basis of at least one among the prediction mode of the current block, depth information of the current block, the size of the current block, and the shape of the current block.</p><p id="p-0414" num="0399">Specifically, when the prediction mode of the current block is the inter prediction mode, one among SDST and SDCT is determined as the transform mode of the current block.</p><p id="p-0415" num="0400">In the meantime, the rearrangement of the residual data of the current block on which inverse transform has been performed at step <b>803</b> may include: scanning, in order in a first direction, the residual data arranged within the current block on which inverse transform has been performed: and rearranging, in order in a second direction, the residual data scanned in the first direction within the current block on which inverse transform has been performed. Here, the order in the first direction may be one among raster scan order, up-right diagonal scan order, horizontal scan order, and vertical scan order. Further, the order in the first direction may be defined as follows.</p><p id="p-0416" num="0401">(1) Scanning from the top row to the bottom row, and scanning from the left to the right in one row</p><p id="p-0417" num="0402">(2) Scanning from the top row to the bottom row, and scanning from the right to the left in one row</p><p id="p-0418" num="0403">(3) Scanning from the bottom row to the top row, and scanning from the left to the right in one row</p><p id="p-0419" num="0404">(4) Scanning from the bottom row to the top row, and scanning from the right to the left in one row</p><p id="p-0420" num="0405">(5) Scanning from the left column to the right column, and scanning from the top to the bottom in one column</p><p id="p-0421" num="0406">(6) Scanning from the left column to the right column, and scanning from the bottom to the top in one column</p><p id="p-0422" num="0407">(7) Scanning from the right column to the left column, and scanning from the top to the bottom in one column</p><p id="p-0423" num="0408">(8) Scanning from the right column to the left column, and scanning from the bottom to the top in one column</p><p id="p-0424" num="0409">(9) Scanning in the spiral shape: scanning from inside (or outside) the block to outside (or inside) the block, and scanning in a clockwise/counterclockwise direction</p><p id="p-0425" num="0410">In the meantime, regarding the order in the second direction, one of the above-described directions may be selectively used. The first direction and the second direction may be the same, or may differ from each other.</p><p id="p-0426" num="0411">Further, at the rearrangement of the residual data of the current block on which inverse transform has been performed at step <b>803</b>, rearrangement is performed in units of a sub-block within the current block. In this case, the residual data may be rearranged on the basis of the position of the sub-block within the current block.</p><p id="p-0427" num="0412">Further, at the rearrangement of the residual data of the current block on which inverse transform has been performed at step <b>803</b>, the residual data arranged within the current block on which inverse transform has been performed may be rotated at a pre-defined angle for rearrangement.</p><p id="p-0428" num="0413">Further, at the rearrangement of the residual data of the current block on which inverse transform has been performed at step <b>803</b>, according to the flipping method, flipping may be performed on the residual data arranged within the current block on which inverse transform has been performed for rearrangement. In this case, the determining of the transform mode of the current block at step <b>801</b> may include: obtaining flipping method information from a bitstream; and determining a flipping method for the current block on the basis of the flipping method information.</p><p id="p-0429" num="0414"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating an embodiment of an encoding method using the SDST method according to the present invention.</p><p id="p-0430" num="0415">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the transform mode of the current block may be determined at step <b>901</b>.</p><p id="p-0431" num="0416">Next, the residual data of the current block may be rearranged according to the transform mode of the current block at step <b>902</b>.</p><p id="p-0432" num="0417">Next, the residual data of the current block that is rearranged according to the transform mode of the current block may be transformed at step <b>903</b>.</p><p id="p-0433" num="0418">Here, the transform mode may include at least one among shuffling discrete sine transform (SDST), shuffling discrete cosine transform (SDCT), discrete sine transform (DST), and discrete cosine transform (DCT). Since SDST, SDCT, DST, and DCT modes have been described with reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a repeated description will be omitted.</p><p id="p-0434" num="0419">In the meantime, only when the transform mode of the current block is one of SDST and SDCT, rearrangement of the residual data is performed.</p><p id="p-0435" num="0420">Further, at the determining of the transform mode of the current block at step <b>901</b>, it may be determined on the basis of at least one among the prediction mode of the current block, depth information of the current block, the size of the current block, and the shape of the current block.</p><p id="p-0436" num="0421">Here, when the prediction mode of the current block is the inter prediction mode, one among SDST and SDCT is determined as the transform mode of the current block.</p><p id="p-0437" num="0422">In the meantime, the rearrangement of the residual data of the current block at step <b>902</b> may include: scanning, in order in a first direction, the residual data arranged within the current block; and rearranging, in order in a second direction, the residual data scanned in the first direction within the current block.</p><p id="p-0438" num="0423">Further, at the rearrangement of the residual data of the current block at step <b>902</b>, rearrangement is performed in units of a sub-block within the current block.</p><p id="p-0439" num="0424">In this case, at the rearrangement of the residual data of the current block at step <b>902</b>, the residual data may be rearranged on the basis of the position of the sub-block within the current block.</p><p id="p-0440" num="0425">In the meantime, at the rearrangement of the residual data of the current block at step <b>902</b>, the residual data arranged within the current block may be rotated at a pre-defined angle for rearrangement.</p><p id="p-0441" num="0426">In the meantime, at the rearrangement of the residual data of the current block at step <b>902</b>, according to the flipping method, flipping may be performed on the residual data arranged within the current block for rearrangement.</p><p id="p-0442" num="0427">An image decoder using the SDST method according to the present invention may include an inverse transform module that determines the transform mode of the current block, performs inverse transform on the residual data of the current block according to the transform mode of the current block, and rearranges the residual data of the current block on which inverse transform has been performed according to the transform mode of the current block. Here, the transform mode may include at least one among shuffling discrete sine transform (SDST), shuffling discrete cosine transform (SDCT), discrete sine transform (DST), and discrete cosine transform (DCT).</p><p id="p-0443" num="0428">An image decoder using the SDST method according to the present invention may include an inverse transform module that determines the transform mode of the current block, rearranges the residual data of the current block according to the transform mode of the current block, and performs inverse transform on the residual data of the current block which is rearranged according to the transform mode of the current block. Here, the transform mode may include at least one among shuffling discrete sine transform (SDST), shuffling discrete cosine transform (SDCT), discrete sine transform (DST), and discrete cosine transform (DCT).</p><p id="p-0444" num="0429">An image encoder using the SDST method according to the present invention may include a transform module that determines the transform mode of the current block, and rearranges the residual data of the current block according to the transform mode of the current block, and transforms the residual data of the current block which is rearranged according to the transform mode of the current block. Here, the transform mode may include at least one among shuffling discrete sine transform (SDST), shuffling discrete cosine transform (SDCT), discrete sine transform (DST), and discrete cosine transform (DCT).</p><p id="p-0445" num="0430">An image encoder using the SDST method according to the present invention may include a transform module that determines the transform mode of the current block, transforms the residual data of the current block according to the transform mode of the current block, and rearranges the residual data of the current block which is transformed according to the transform mode of the current block. Here, the transform mode may include at least one among shuffling discrete sine transform (SDST), shuffling discrete cosine transform (SDCT), discrete sine transform (DST), and discrete cosine transform (DCT).</p><p id="p-0446" num="0431">A bitstream generated by the encoding method using the SDST method according to the present invention may be provided, wherein the encoding method includes: determining the transform mode of the current block; rearranging the residual data of the current block according to the transform mode of the current block; and transforming the residual data of the current block which is rearranged according to the transform mode of the current block, wherein the transform mode may include at least one among shuffling discrete sine transform (SDST), shuffling discrete cosine transform (SDCT), discrete sine transform (DST), and discrete cosine transform (DCT).</p><p id="p-0447" num="0432">Further, the transform used in the specification may be selected from N pre-defined transform candidate sets for each block. Here, N may be a positive integer. Each of the transform candidates may specify primary horizontal transform, primary vertical transform, and secondary transform (which may be the same as the identity transform). A list of the transform candidates may vary depending on the block size and the prediction mode. The selected transform may be signaled as follows. When the coded block flag is one, a flag indicating whether a first transform of the candidate list is used is transmitted. When the flag indicating whether the first transform of the candidate list is used is zero, the following is applied: when the number of the non-zero transform coefficient levels is larger than a threshold value, a transform index indicating the used transform candidate is transmitted; otherwise, a second transform of the list is used.</p><p id="p-0448" num="0433">Further, NSST which is secondary transform is used only when DCT-2 which is primary transform is used as default transform. Further, regarding horizontal transform or vertical transform, when the width or the height is independently equal to or smaller than four, DST-7 is selected without signaling.</p><p id="p-0449" num="0434">Regarding the residual block, when the width of the block is equal to or smaller than K, DST-7 is used for one-dimensional horizontal transform instead of DCT-2. When the height of the block is equal to or smaller than L, DST-7 is used for one-dimensional vertical transform instead of DCT-2. Further, even though the width or the height of the block is equal to or smaller than K, when the intra prediction mode is a linear model (LM) chroma mode, DCT-2 is used. Here, K and L may be positive integers, for example, four. Further, the K and the L may be the same or may have different values. Further, the residual block may be a block encoded in the intra mode. Further, the residual block may be a chroma block.</p><p id="p-0450" num="0435">Instead of performing the flipping method on the residual signal, the transform kernel, or the transform matrix on which flipping has been performed may be used to perform transform/inverse transform. Here, the transform/inverse transform kernel or the transform/inverse transform matrix on which flipping has been performed may be a kernel or a matrix that has been subjected to flipping and is pre-defined in the encoder/decoder. In this case, since the transform/inverse transform matrix on which flipping has been performed is used to perform transform/inverse transform, it is possible to obtain the same effect as performing flipping on the residual signal. Here, flipping may be at least one among no flipping, horizontal flipping, vertical flipping, and horizontal and vertical flipping. In this case, it is possible to signal information on whether transform/inverse transform on which flipping has been performed is used. Further, the information on whether transform/inverse transform on which flipping has been performed is used may be signaled for each of the transform/inverse transform in the horizontal direction and the transform/inverse transform in the vertical direction.</p><p id="p-0451" num="0436">Further, instead of performing the flipping method on the residual signal, flipping may be performed on the transform kernel or the transform matrix in the encoding/decoding process to perform transform/inverse transform. In this case, since flipping is performed on the transform/inverse transform matrix to perform transform/inverse transform, it is possible to obtain the same effect as performing flipping on the residual signal. Here, flipping may be at least one among no flipping, horizontal flipping, vertical flipping, and horizontal and vertical flipping. In this case, it is possible to signal information on whether flipping is performed on the transform/inverse transform matrix. Further, the information on whether flipping is performed on the transform/inverse transform matrix may be signaled for each of the transform/inverse transform in the horizontal direction and the transform/inverse transform in the vertical direction.</p><p id="p-0452" num="0437">When the flipping method is determined on the basis of the intra prediction mode and two or more intra prediction modes of the current block are used, flipping is performed before/after transform/inverse transform of the current block as the flipping method for the non-directional mode.</p><p id="p-0453" num="0438">Further, when the flipping method is determined on the basis of the intra prediction mode and two or more intra prediction modes of the current block are used, flipping is performed before/after transform/inverse transform of the current block as the flipping method for a main directional mode. Here, the main directional mode may be at least one among a vertical mode, a horizontal mode, and a diagonal mode.</p><p id="p-0454" num="0439">When the size of the transform is equal to or larger than M&#xd7;N, all transform coefficients that are present in regions of M/2 to M, and N/2 to N during transform or after transform are set to a value of zero. Here, M and N may be positive integers, for example, 64&#xd7;64.</p><p id="p-0455" num="0440">In order to reduce memory requirements, right shift operation may be performed by K on the transform coefficient that is generated after performing the transform. Further, right shift operation may be performed by K on a temporary transform coefficient that is generated after performing the horizontal transform. Further, right shift operation may be performed by K on a temporary transform coefficient that is generated after performing the vertical transform. Here, K is a positive integer.</p><p id="p-0456" num="0441">In order to reduce memory requirements, right shift operation may be performed by K on the reconstructed residual signal that is generated after performing the inverse transform. Further, right shift operation may be performed by K on a temporary transform coefficient that is generated after performing the horizontal inverse transform. Further, right shift operation may be performed by K on a temporary transform coefficient that is generated after performing the vertical inverse transform. Here, K is a positive integer.</p><p id="p-0457" num="0442">At least one of the flipping methods may be performed on at least one among signals that are generated before performing transform/inverse transform in the horizontal direction, after performing transform/inverse transform in the horizontal direction, before performing transform/inverse transform in the vertical direction, and after performing transform/inverse transform in the vertical direction. In this case, it is possible to signal flipping method information used in the transform/inverse transform in the horizontal direction or the transform/inverse transform in the vertical direction.</p><p id="p-0458" num="0443">Further, DCT-4 may be used instead of DST-7. A DCT-4 transform/inverse transform matrix in 2N&#x2212;1 size is extracted from a DCT-2 transform/inverse transform matrix in 2N size for use, so only the DCT-2 transform/inverse transform matrix is stored in the encoder/decoder instead of DCT-4, whereby memory requirements of the encoder/decoder is reduced. Further, a DCT-4 transform/inverse transform logic in 2N&#x2212;1 size is utilized from a DCT-2 transform/inverse transform logic in 2N size, so the chip area required for implementing the encoder/decoder is reduced. Here, the above example is not applied only to the DCT-2 and the DCT-4, and the above example is applied when there is a transform matrix or transform logic shared between at least one of types of DST transform/inverse transforms and at least one of types of DCT transform/inverse transforms. That is, from one transform/inverse transform matrix or logic, another transform/inverse transform matrix or logic may be extracted for use. Further, in the case of a transform/inverse transform size, from one transform/inverse transform matrix or logic, another transform/inverse transform matrix or logic may be extracted for use. Further, from one transform/inverse transform matrix, another transform/inverse transform matrix may be extracted in at least one unit among a matrix unit, a basis vector unit, and a matrix coefficient unit.</p><p id="p-0459" num="0444">Further, when the current block is smaller than a size of M&#xd7;N, instead of the particular transform/inverse transform, another transform/inverse transform is used for transform/inverse transform of the current block. Further, when the current block is larger than a size of M&#xd7;N, instead of the particular transform/inverse transform, another transform/inverse transform is used for transform/inverse transform of the current block. Here, M and N are positive integers. The particular transform/inverse transform and another transform/inverse transform may be transform/inverse transforms pre-defined in the encoder/decoder.</p><p id="p-0460" num="0445">Further, at least one among transforms of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7, and the like used in the specification may be replaced by at least one of transforms that are computed on the basis of transforms of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7, and the like. Here, the computed transform may be transform computed by modifying a coefficient value within transform matrices of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7, and the like. Further, the coefficient value within the transform matrices of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7, and the like may have an integer value. That is, the transforms of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7, and the like may be integer transforms. Further, a coefficient value within the computed transform matrix may have an integer value. That is, the computed transform may be integer transform. Further, the computed transform may be a result of performing left shift operation by N on the coefficient value within the transform matrices of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7, and the like. Here, N may be a positive integer.</p><p id="p-0461" num="0446">DCT-Q and DST-W transforms may mean that DCT-Q and DST-W transforms and DCT-Q and DST-W inverse transform are included. Here, Q and W may have positive integers of one or more, and for example, the numerals 1 to 9 may have the same meaning as Roman numerals I to IX.</p><p id="p-0462" num="0447">Further, transforms of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7, and the like used in the specification are not limited thereto, and at least one between DCT-Q and DST-W transforms may be used by replacing the transforms of DCT-4, DCT-8, DCT-2, DST-4, DST-1, DST-7. Here, Q and W may have positive integers of one or more, and for example, the numerals 1 to 9 may have the same meaning as Roman numerals I to IX.</p><p id="p-0463" num="0448">Further, the transform used in the specification may be performed in the square transform form in the case of a square block. The transform may be performed in the non-square transform form in the case of a non-square block. In the case of a square shape region including at least one of a square block and a non-square block, transform may be performed on the region in the square transform form. In the case of a non-square shape region including at least one of a square block and a non-square block, transform may be performed on the region in the non-square transform form.</p><p id="p-0464" num="0449">Further, in the specification, information on the rearrangement method may be flipping method information.</p><p id="p-0465" num="0450">Further, the transform used in the specification may mean at least one among transform and inverse transform.</p><p id="p-0466" num="0451">The encoder may perform transform with respect to a residual block to generate a transform coefficient, quantize the transform coefficient to generate a quantized coefficient level, and entropy-encode the quantized coefficient level, in order to improve the subjective/objective image quality of an image.</p><p id="p-0467" num="0452">The decoder may entropy-decode the quantized coefficient level, dequantize the quantized coefficient level to generate the transform coefficient, and inverse transform the transform coefficient to generate the reconstructed residual block.</p><p id="p-0468" num="0453">Transform type information on which transform is used as transform and inverse transform may be explicitly entropy-encoded/decoded. In addition, transform type information on which transform is used as transform and inverse transform may be implicitly determined based on at least one of encoding parameters without being entropy-encoded/decoded.</p><p id="p-0469" num="0454">Hereinafter, embodiments of an image encoding/decoding method and apparatus for performing at least one of transform or inverse transform and a recording medium for storing a bitstream in the present invention will be described.</p><p id="p-0470" num="0455">Using at least one of the following embodiments, a block may be partitioned into N sub-blocks and at least one of prediction, transform/inverse transform, quantization/dequantization or entropy encoding/decoding may be performed. Such a mode may be referred to as a first sub-block partitioning mode (e.g., an ISP mode or an Intra Sub-Partitions mode).</p><p id="p-0471" num="0456">The block may mean a coding block, a prediction block, or a transform block. For example, the block may be a transform block.</p><p id="p-0472" num="0457">In addition, the partitioned sub-block may mean at least one of a coding block, a prediction block, or a transform block. For example, the partitioned sub-block may be a transform block.</p><p id="p-0473" num="0458">In addition, the block or the partitioned sub-block may be at least one of an intra block, an inter block or an intra block copy block. For example, the block and the sub-block may be an intra block.</p><p id="p-0474" num="0459">In addition, the block or the partitioned sub-block may be at least one of an intra prediction block, an inter prediction block or an intra block copy prediction block. For example, the block and the sub-block may be an intra prediction block.</p><p id="p-0475" num="0460">In addition, the block or the partitioned sub-block may be at least one of a luma signal block or a chroma signal block. For example, the block and the sub-block may be a luma signal block.</p><p id="p-0476" num="0461">When the block is partitioned into N sub-blocks, the block before partitioning may be a coding block, and the partitioned sub-block may be at least one of a prediction block or a transform block. That is, prediction, transform/inverse transform, quantization/dequantization, entropy encoding/decoding of a transform coefficient may be performed with a partitioned sub-block size.</p><p id="p-0477" num="0462">In addition, when the block is partitioned into N sub-blocks, the block before partitioning may be at least one of a coding block or a prediction block and the partitioned sub-block may be a transform block. That is, prediction may be performed with the size of the block before partitioning, and transform/inverse transform, quantization/dequantization, entropy encoding/decoding of a transform coefficient may be performed with a partitioned sub-block size.</p><p id="p-0478" num="0463">Whether the block is partitioned into a plurality of sub-blocks may be determined based on at least one of the area (the product of the width and the height, etc.), the size (the width, the height or a combination of the width and the height) and the shape/form (a rectangle (non-square), a square, etc.) of the block.</p><p id="p-0479" num="0464">For example, when a current block is a 64&#xd7;64 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0480" num="0465">As another example, when a current block is a 32&#xd7;32 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0481" num="0466">As another example, when a current block is a 32&#xd7;16 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0482" num="0467">As another example, when a current block is a 16&#xd7;32 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0483" num="0468">As another example, when a current block is a 4&#xd7;4 block, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0484" num="0469">As another example, when a current block is a 2&#xd7;4 block, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0485" num="0470">As another example, when the area of the current block is equal to or greater than 32, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0486" num="0471">As another example, when the area of the current block is less than 32, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0487" num="0472">As another example, when the area of the current block is 256 and the shape of the current block is a rectangle, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0488" num="0473">As another example, when the area of the current block is 16 and the shape of the current block is a square, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0489" num="0474">When the block is partitioned, the block may be partitioned into a plurality of sub-blocks in at least one partitioning direction of a vertical direction or a horizontal direction.</p><p id="p-0490" num="0475">For example, the current block may be partitioned into two sub-blocks in a vertical direction.</p><p id="p-0491" num="0476">As another example, the current block may be partitioned into two sub-blocks in a horizontal direction.</p><p id="p-0492" num="0477">As another example, the current block may be partitioned into four sub-blocks in a horizontal direction.</p><p id="p-0493" num="0478">As another example, the current block may be partitioned into four sub-blocks in a vertical direction.</p><p id="p-0494" num="0479">When the block is partitioned into N sub-blocks, N may be a positive integer and, for example, may be 2 or 4. In addition, N may be determined using at least one of the area, size, shape, or partitioning direction of the block.</p><p id="p-0495" num="0480">For example, when the current block is a 4&#xd7;8 or 8&#xd7;4 block, the current block may be partitioned into two sub-blocks in the horizontal direction or partitioned into two sub-blocks in the vertical direction.</p><p id="p-0496" num="0481">As another example, when the current block is a 16&#xd7;8 or 16&#xd7;16 block, the current block may be partitioned into four sub-blocks in the vertical direction or four sub-blocks in the horizontal direction.</p><p id="p-0497" num="0482">As another example, when the current block is an 8&#xd7;32 or 32&#xd7;32 block, the current block may be partitioned into four sub-blocks in the horizontal direction or four sub-blocks in the vertical direction.</p><p id="p-0498" num="0483">As another example, when the current block is a 16&#xd7;4, 32&#xd7;4, or 64&#xd7;4 block, the current block may be partitioned into four sub-blocks in the vertical direction. In addition, when the current block is a 16&#xd7;4, 32&#xd7;4 or 64&#xd7;4 block, the current block may be partitioned into two sub-blocks in the horizontal direction.</p><p id="p-0499" num="0484">As another example, when the current block is a 4&#xd7;16, 4&#xd7;32 or 4&#xd7;64 block, the current block may be partitioned into four sub-blocks in the horizontal direction. In addition, when the current block is a 4&#xd7;16, 4&#xd7;32 or 4&#xd7;64 block, the current block may be partitioned into two sub-blocks in the vertical direction.</p><p id="p-0500" num="0485">As another example, when the current block is a J&#xd7;4 block, the current block may be partitioned into two sub-blocks in the horizontal direction. Here, J may be a positive integer.</p><p id="p-0501" num="0486">As another example, when the current block is a 4&#xd7;K block, the current block may be partitioned into two sub-blocks in the vertical direction. Here, K may be a positive integer.</p><p id="p-0502" num="0487">As another example, when the current block is a J&#xd7;K (K&#x3e;4) block, the current block may be partitioned into four sub-blocks in the horizontal direction. Here, J may be a positive integer.</p><p id="p-0503" num="0488">As another example, when the current block is a J&#xd7;K (J&#x3e;4) block, the current block may be partitioned into four sub-blocks in the vertical direction. Here, J may be a positive integer.</p><p id="p-0504" num="0489">As another example, when the current block is a J&#xd7;K (K&#x3e;4) block, the current block may be partitioned into four sub-blocks in the vertical direction. Here, J may be a positive integer.</p><p id="p-0505" num="0490">As another example, when the area of the current block is 64, the current block may be partitioned into four sub-blocks in the horizontal direction or the vertical direction.</p><p id="p-0506" num="0491">As another example, when the current block is a 16&#xd7;4 block and the shape of the current block is a rectangle, the current block may be partitioned into four sub-blocks in the vertical direction.</p><p id="p-0507" num="0492">As another example, when the area of the current block is 1024 and the shape of the current block is a square, the current block may be partitioned into four sub-blocks in the horizontal direction or the vertical direction.</p><p id="p-0508" num="0493">In addition, the sub-block may have at least one of a minimum area, a minimum width, or a minimum height.</p><p id="p-0509" num="0494">For example, the sub-block may have S as a minimum area. Here, S may be a positive integer, and may be 16, for example.</p><p id="p-0510" num="0495">As another example, the sub-block may have J as a minimum width. Here, J may be a positive integer, and may be 4, for example.</p><p id="p-0511" num="0496">As another example, the sub-block may have K as a minimum height. Here, K may be a positive integer, and may be 4, for example.</p><p id="p-0512" num="0497">In each partitioned sub-block, a reconstructed block may be generated by adding a residual block (or a reconstructed residual block) and a prediction block. Here, at least one of reconstructed samples in each reconstructed sub-block may be used as a reference sample in intra prediction of a sub-block encoded/decoded later.</p><p id="p-0513" num="0498">Encoding/decoding order of sub-blocks partitioned from the block may be determined according to at least one of partitioning directions.</p><p id="p-0514" num="0499">For example, the encoding/decoding order of the horizontally partitioned sub-blocks may be determined as an order from an upper direction to a lower direction.</p><p id="p-0515" num="0500">As another example, the encoding/decoding order of the vertically partitioned sub-blocks may be determined as an order from a left direction to a right direction.</p><p id="p-0516" num="0501">For the partitioned sub-blocks, an intra prediction mode may be shared and used.</p><p id="p-0517" num="0502">At this time, information on the intra prediction mode for each sub-block may be entropy-encoded/decoded only once in a block before partitioning.</p><p id="p-0518" num="0503">For the partitioned sub-blocks, an intra block copy mode may be shared and used.</p><p id="p-0519" num="0504">At this time, information on the intra block copy mode for each sub-block may be entropy-encoded/decoded only once in a block before partitioning.</p><p id="p-0520" num="0505">In order to indicate a sub-block partitioning mode in which the block is partitioned into N sub-blocks and at least one of prediction, transform/inverse transform, quantization/dequantization or entropy encoding/decoding is performed in a unit of sub-block, at least one of sub-block partitioning mode information or partitioning direction information may be entropy-encoded/decoded.</p><p id="p-0521" num="0506">Here, the sub-block partitioning mode information may be used to indicate the sub-block partitioning mode. When it is indicated that the sub-block partitioning mode is used (second value), the block may be partitioned into sub-blocks and at least one of prediction, transform/inverse transform, quantization/dequantization or entropy encoding/decoding may be performed. When it is indicated that the sub-block partitioning mode is not used (first value), the block may not be partitioned into sub-blocks and at least one of prediction, transform/inverse transform, quantization/dequantization or entropy encoding/decoding may be performed. Here, the first value may be 0, and the second value may be 1.</p><p id="p-0522" num="0507">In addition, the partitioning direction information may be used to indicate whether the sub-block partitioning mode is vertical partitioning or horizontal partitioning. When the partitioning direction information has a first value, the block may be partitioned into the sub-blocks in the horizontal direction and the first value may be 0. In addition, when the partitioning direction information has a second value, the block may be partitioned into the sub-blocks in the vertical direction and the second value may be 1.</p><p id="p-0523" num="0508">When the current block does not use a closest reference sample line (first reference sample line) as a reference sample line, at least one of the sub-block partitioning mode information or the partitioning direction information may not be entropy-encoded/decoded. At this time, from the sub-block partitioning mode information, it may be inferred that the current block is not partitioned into sub-blocks.</p><p id="p-0524" num="0509">Here, the current block doing not use the closest reference sample line (first reference sample line) as the reference sample line may mean that a second or more reference sample line may be used as the reconstructed reference line around the current block.</p><p id="p-0525" num="0510">That is, only when the current block uses the closest reference sample line as the reference sample line, at least one of the sub-block partitioning mode information or the partitioning direction information may be entropy-encoded/decoded.</p><p id="p-0526" num="0511">At least one of the area, size, shape, or partitioning direction of a coefficient group used during entropy-encoding/decoding of a transform coefficient may be determined based on at least one of the area, size, shape, or partitioning direction of the sub-block.</p><p id="p-0527" num="0512">For example, when the area of the sub-block is 16, the area of the coefficient group may be determined as 16.</p><p id="p-0528" num="0513">As another example, when the area of the sub-block is 32, the area of the coefficient group may be determined as 16.</p><p id="p-0529" num="0514">As another example, when the size of the sub-block is 1&#xd7;16 or 16&#xd7;1, the size of the coefficient group may be determined as 1&#xd7;16 or 16&#xd7;1.</p><p id="p-0530" num="0515">As another example, when the size of the sub-block is 2&#xd7;8 or 8&#xd7;2, the size of the coefficient group may be determined as 2&#xd7;8 or 8&#xd7;2.</p><p id="p-0531" num="0516">As another example, when the size of the sub-block is 4&#xd7;4, the size of the coefficient group may be determined as 4&#xd7;4.</p><p id="p-0532" num="0517">As another example, when the width of the sub-block is 2, the width of the coefficient group may be determined as 2.</p><p id="p-0533" num="0518">As another example, when the width of the sub-block is 4, the width of the coefficient group may be determined as 4.</p><p id="p-0534" num="0519">As another example, when the height of the sub-block is 2, the height of the coefficient group may be determined as 2.</p><p id="p-0535" num="0520">As another example, when the height of the sub-block is 4, the height of the coefficient group may be determined as 4.</p><p id="p-0536" num="0521">As another example, when the shape of the sub-block is a rectangle (non-square), the shape of the coefficient group may be determined as a rectangle (non-square).</p><p id="p-0537" num="0522">As another example, when the shape of the sub-block is a square, the shape of the coefficient group may be determined as a square.</p><p id="p-0538" num="0523">As another example, when the size of the sub-block is 16&#xd7;4 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 8&#xd7;2.</p><p id="p-0539" num="0524">As another example, when the size of the sub-block is 4&#xd7;8 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 2&#xd7;8.</p><p id="p-0540" num="0525">As another example, when the size of the sub-block is 32&#xd7;4 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 8&#xd7;2.</p><p id="p-0541" num="0526">As another example, when the size of the sub-block is 8&#xd7;64 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 2&#xd7;8.</p><p id="p-0542" num="0527">As another example, when the size of the sub-block is 16&#xd7;4 and the partitioning direction is a vertical direction, the size of the coefficient group may be determined as 4&#xd7;4.</p><p id="p-0543" num="0528">As another example, when the size of the sub-block is 4&#xd7;8 and the partitioning direction is a horizontal direction, the size of the coefficient group may be determined as 4&#xd7;4.</p><p id="p-0544" num="0529">As another example, when the size of the sub-block is 32&#xd7;4 and the partitioning direction is a horizontal direction, the size of the coefficient group may be determined as 8&#xd7;2.</p><p id="p-0545" num="0530">As another example, when the size of the sub-block is 8&#xd7;64 and the partitioning direction is a vertical direction, the size of the coefficient group may be determined as 2&#xd7;8.</p><p id="p-0546" num="0531">For each partitioned sub-block, a coded block flag indicating whether at least one transform coefficient having a non-zero value is present in sub-block units may be entropy-encoded/decoded.</p><p id="p-0547" num="0532">For example, the coded block flag may indicate that at least one transform coefficient having a non-zero value is present in at least one sub-block in sub-block units.</p><p id="p-0548" num="0533">As another example, when m means a total number of sub-blocks and the coded block flags of m&#x2212;1 sub-blocks from the front of the sub-blocks indicate that a transform coefficient having a non-zero value is not present, it may be inferred that the coded block flag of an m-th sub-block indicates that at least one transform coefficient having a non-zero value is present.</p><p id="p-0549" num="0534">As another example, when the coded block flag is entropy-encoded/decoded in sub-block units, the coded block flag may be entropy-encoded/decoded in units of blocks before partitioning.</p><p id="p-0550" num="0535">As another example, when the coded block flag is entropy-encoded/decoded in units of blocks before partitioning, the coded block flag may not be entropy-encoded/decoded in sub-block units.</p><p id="p-0551" num="0536">Meanwhile, when the current block is in a first sub-block partitioning mode and the size of the current block is a predefined size, the size of a sub-block for intra prediction and the size of a sub-block for transform may be different from each other. That is, sub-block partitioning for intra prediction and sub-block partitioning for transform may be different from each other. Here, the predefined size may be 4&#xd7;N or 8&#xd7;N (N&#x3e;4). Here, sub-block partitioning may mean vertical partitioning.</p><p id="p-0552" num="0537">For example, when the current block is in a first sub-block partitioning mode and the size of the current block is 8&#xd7;N (N&#x3e;4), the current block may be vertically partitioned into subblocks having a size of 4&#xd7;N, for intra prediction, and the current block may be vertically partitioned into subblocks having a size of 1&#xd7;N, for transform. At this time, one-dimensional transform/inverse transform may be performed in order to perform transform having a size of 1&#xd7;N. That is, one-dimensional transform/inverse transform may be performed based on at least one of the partitioning mode of the current block or the size of the current block.</p><p id="p-0553" num="0538">As another example, when the current block is in a first sub-block partitioning mode and the size of the current block is 8&#xd7;N (N&#x3e;4), the current block may be vertically partitioned into subblocks having a size of 4&#xd7;N, for intra prediction, and the current block may be vertically partitioned into subblocks having a size of 2&#xd7;N, for transform. At this time, two-dimensional transform/inverse transform may be performed in order to perform transform having a size of 2&#xd7;N. That is, two-dimensional transform/inverse transform may be performed based on at least one of the partitioning mode of the current block or the size of the current block.</p><p id="p-0554" num="0539">Here, N may mean a positive integer and may be a positive integer less than 64 or 128.</p><p id="p-0555" num="0540">In addition, the size of the current block may mean at least one of the size of the coding block, the size of a prediction block or the size of a transform block of the current block.</p><p id="p-0556" num="0541">As in the example of <figref idref="DRAWINGS">FIG. <b>10</b></figref>, according to the embodiment of the first sub-block partitioning mode, the current block may be partitioned into two sub-blocks in the horizontal direction and may be partitioned into two sub-blocks in the vertical direction.</p><p id="p-0557" num="0542">As in the example of <figref idref="DRAWINGS">FIG. <b>11</b></figref>, according to the embodiment of the first sub-block partitioning mode, the current block may be partitioned into two sub-blocks in the horizontal direction and may be partitioned into two sub-blocks in the vertical direction.</p><p id="p-0558" num="0543">As in the example of <figref idref="DRAWINGS">FIG. <b>12</b></figref>, according to the embodiment of the first sub-block partitioning mode, the current block may be partitioned into four sub-blocks in the horizontal direction and may be partitioned into four sub-blocks in the vertical direction.</p><p id="p-0559" num="0544">Using at least one of the following embodiments, the block may be partitioned into N sub-blocks to perform at least one of transform/inverse transform, quantization/dequantization or entropy encoding/decoding in a unit of sub-block. Such a mode may be referred to as a second sub-block partitioning mode (e.g., an SBT mode or a Sub-Block Transform mode).</p><p id="p-0560" num="0545">The block may mean at least one of a coding block, a prediction block, or a transform block. For example, the block may be a transform block.</p><p id="p-0561" num="0546">In addition, the partitioned sub-block may mean at least one of a coding block, a prediction block, or a transform block. For example, the partitioned sub-block may be a transform block.</p><p id="p-0562" num="0547">In addition, the block or the partitioned sub-block may be at least one of an intra block, an inter block or an intra block copy block. For example, the block or the partitioned sub-block may be an inter block.</p><p id="p-0563" num="0548">In addition, the block or the partitioned sub-block may be at least one of an intra prediction block, an inter prediction block or an intra block copy prediction block. For example, the block may be an inter prediction block.</p><p id="p-0564" num="0549">In addition, the block or the partitioned sub-block may be at least one of a luma signal block or a chroma signal block. For example, the block and the sub-block may be a luma signal block.</p><p id="p-0565" num="0550">When the block is partitioned into N sub-blocks, the block before partitioning may be a coding block, and the partitioned sub-block may be at least one of a prediction block or a transform block. That is, transform/inverse transform, quantization/dequantization and entropy encoding/decoding of a transform coefficient may be performed with a partitioned sub-block size.</p><p id="p-0566" num="0551">In addition, When the block is partitioned into N sub-blocks, the block before partitioning may be at least one of a coding block or a prediction block, and the partitioned sub-block may be a transform block. That is, prediction is performed with the size of the block before partitioning, and transform/inverse transform, quantization/dequantization and entropy encoding/decoding of a transform coefficient may be performed with the size of the partitioned sub-block.</p><p id="p-0567" num="0552">Whether the block is partitioned into a plurality of sub-blocks may be determined based on at least one of the area (the product of the width and the height), size (the width or the height or a combination of the width and the height) or shape/form (rectangle, square, etc.) of the block.</p><p id="p-0568" num="0553">For example, when the current block is a 64&#xd7;64 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0569" num="0554">As another example, when the current block is a 32&#xd7;32 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0570" num="0555">As another example, when the current block is a 32&#xd7;16 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0571" num="0556">As another example, when the current block is a 16&#xd7;32 block, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0572" num="0557">As another example, when the current block is a 4&#xd7;4 block, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0573" num="0558">As another example, when the current block is a 2&#xd7;4 block, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0574" num="0559">As another example, when at least one of the width or the height of the current block is greater than the maximum size of a transform block, the current block may not be partitioned into a plurality of sub-blocks. That is, when at least one of the width or the height of the current block is less than or equal to the maximum size of a transform block, a second sub-block partitioning mode may be applied to the current block.</p><p id="p-0575" num="0560">As another example, when at least one of the width or the height of the current block is greater than the maximum size of a transform block, the current block may not be partitioned into a plurality of sub-blocks. That is, when both of the width and the height of the current block are less than or equal to the maximum size of a transform block, a second sub-block partitioning mode may be applied to the current block.</p><p id="p-0576" num="0561">In addition, when at least one of the width or the height of the current block is less than or equal to the maximum size of a transform block, at least one of information (the sub-block partitioning mode information, the partitioning direction information, sub-block location information or sub-block size information) indicating the second sub-block partitioning mode may be entropy-encoded/decoded. Here, the maximum size of the transform block may be determined based on transform block maximum size information signaled in a higher-level unit. For example, the maximum size of the transform block may be determined as any one of 64 or 32 based on the transform block maximum size information.</p><p id="p-0577" num="0562">As another example, when the area of the current block is equal to or greater than 32, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0578" num="0563">As another example, when the area of the current block is less than 32, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0579" num="0564">As another example, when the area of the current block is 256 and the shape of the current block is a rectangle, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0580" num="0565">As another example, when the area of the current block is 16 and the shape of the current block is a square, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0581" num="0566">When at least one of the width or the height of the current block is greater than or equal to a predefined value, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0582" num="0567">For example, when at least one of the width or the height of the current block is equal to or greater than 8, the current block may be partitioned into a plurality of sub-blocks.</p><p id="p-0583" num="0568">In contrast, when both the width and the height of the current block are less than the predefined value, the current block may not be partitioned into a plurality of sub-blocks.</p><p id="p-0584" num="0569">When the current block is in a GPM (Geometric Partitioning Mode), the transform block of the current block may not be partitioned into a plurality of sub-blocks. Here, GPM may be a prediction mode in which the prediction block of the current block is partitioned into two sub-blocks to perform prediction. When the current block is in a GPM, the prediction block of the current block may be partitioned into two sub-blocks. At this time, information on a partitioning direction for partitioning the prediction block of the current block into two sub-blocks may be entropy-encoded/decoded. Inter prediction may be performed with respect to two sub-blocks, thereby generating the prediction samples for two sub-blocks. In addition, the prediction samples for the generated two sub-blocks may be weighted-summed to derive the prediction sample of the current block. That is, when the prediction block of the current block is partitioned into at least two sub-blocks, the transform block of the current block may not be partitioned into at least two sub-blocks. Similarly, when the prediction block of the current block is not partitioned into at least two sub-blocks, the transform block of the current block may be partitioned into at least two sub-blocks.</p><p id="p-0585" num="0570">When the block is partitioned, the block may be partitioned into a plurality of sub-blocks in at least one of the vertical direction or the horizontal direction.</p><p id="p-0586" num="0571">For example, the current block may be partitioned into two sub-blocks in the vertical direction.</p><p id="p-0587" num="0572">As another example, the current block may be partitioned into two sub-blocks in the horizontal direction.</p><p id="p-0588" num="0573">When the block is partitioned into N sub-blocks, N may be a positive integer, and may be 2, for example. In addition, N may be determined using at least one of the area, size, shape, or partitioning direction of the block.</p><p id="p-0589" num="0574">For example, when the current block is a 4&#xd7;8 or 8&#xd7;4 block, the current block may be partitioned into two sub-blocks in the horizontal direction or two sub-blocks in the vertical direction.</p><p id="p-0590" num="0575">As another example, when the current block is a 16&#xd7;8 or 16&#xd7;16 block, the current block may be partitioned into two sub-blocks in the vertical direction or two sub-blocks in the horizontal direction.</p><p id="p-0591" num="0576">As another example, when the current block is an 8&#xd7;32 or 32&#xd7;32 block, the current block may be partitioned into two sub-blocks in the horizontal direction or two sub-blocks in the vertical direction.</p><p id="p-0592" num="0577">As another example, when the current block is a J&#xd7;8 block, the current block may be partitioned into two sub-blocks in the horizontal direction. Here, J may be a positive integer.</p><p id="p-0593" num="0578">As another example, when the current block is an 8&#xd7;K block, the current block may be partitioned into two sub-blocks in the vertical direction. Here, K may be a positive integer.</p><p id="p-0594" num="0579">As another example, when the current block is a J&#xd7;K(K&#x3e;8) block, the current block may be partitioned into two sub-blocks in the horizontal direction. Here, J may be a positive integer. At this time, the heights of the partitioned sub-blocks may have a ratio of 1:3 or 3:1.</p><p id="p-0595" num="0580">As another example, when the current block is a J(J&#x3e;8)&#xd7;K block, the current block may be partitioned into two sub-blocks in the vertical direction. Here, J may be a positive integer. At this time, the widths of the partitioned sub-blocks may have a ratio of 1:3 or 3:1.</p><p id="p-0596" num="0581">As another example, when the area of the current block is 64, the current block may be partitioned into two sub-blocks in the horizontal direction or the vertical direction.</p><p id="p-0597" num="0582">As another example, when the current block is a 16&#xd7;4 block and the shape of the current block is a rectangle, the current block may be partitioned into two sub-blocks in the vertical direction.</p><p id="p-0598" num="0583">As another example, when the area of the current block is 1024 and the shape of the current block is a square, the current block may be partitioned into two sub-blocks in the horizontal direction or the vertical direction.</p><p id="p-0599" num="0584">In addition, the sub-block may have at least one of a minimum area, a minimum width, or a minimum height.</p><p id="p-0600" num="0585">For example, the sub-block may have S as a minimum area. Here, S may be a positive integer, and may be 16, for example.</p><p id="p-0601" num="0586">As another example, the sub-block may have J as a minimum width. Here, J may be a positive integer, and may be 4, for example.</p><p id="p-0602" num="0587">As another example, the sub-block may have K as a minimum height. Here, K may be a positive integer, and may be 4, for example.</p><p id="p-0603" num="0588">In order to indicate the sub-block partitioning mode in which the block is partitioned into N sub-blocks to perform at least one of transform/inverse transform, quantization/dequantization or entropy encoding/decoding, at least one of the sub-block partitioning mode information, the partitioning direction information, the sub-block position information or the sub-block size information may be entropy-encoded/decoded.</p><p id="p-0604" num="0589">Here, the sub-block partitioning mode information may be used to indicate the sub-block partitioning mode. When this indicates that the sub-block partitioning mode is used (second value), the block may be partitioned into sub-blocks and at least one of transform/inverse transform, quantization/dequantization or entropy encoding/decoding may be performed. When this indicates that the sub-block partitioning mode is not used (first value), the block may not be partitioned into sub-blocks and at least one of transform/inverse transform, quantization/dequantization or entropy encoding/decoding may be performed. Here, the first value may be 0 and the second value may be 1.</p><p id="p-0605" num="0590">In addition, the partitioning direction information may be used to indicate whether the sub-block partitioning mode is partitioned in the vertical direction or the horizontal direction. When the partitioning direction information has a first value, the sub-blocks may be partitioned in the vertical direction, and the first value may be 0. In addition, when the partitioning direction information has a second value, the sub-block may be partitioned in the horizontal direction, and the second value may be 1.</p><p id="p-0606" num="0591">In addition, the sub-block position information may be used to indicate the residual signal of which of the partitioned sub-blocks is encoded/decoded. When the sub-block position information has a first value, the residual signal of the first sub-block may be encoded/decoded, and the first value may be 0. In addition, when the sub-block position information has a second value, the residual signal of the second sub-block may be coded/decoded, and the second value may be 1. In addition, when the sub-block position information has a first value, at least one of the coded block flag for the luma signal or the coded block flag for the chroma signal for the first sub-block may be entropy-encoded/decoded. In addition, when the sub-block position information has a second value, at least one of the coded block flag for the luma signal or the coded block flag for the chroma signal for the second sub-block may be entropy-encoded/decoded.</p><p id="p-0607" num="0592">In addition, the sub-block size information may be used to indicate whether the width or height of the partitioned sub-block is &#xbd; or &#xbc; of the width or height of the block. When the sub-block size information has a first value, this may indicate that the width or height of the sub-block in which the residual signal indicated by the sub-block position information is encoded/decoded is &#xbd; of the width or height of the block, and the first value may be 0. In addition, when the sub-block size information has a second value, this may indicate that the width or height of the sub-block in which the residual signal indicated by the sub-block position information is encoded/decoded is % of the width or height of the block, and the second value may be 1. For example, when there is only a case where the size of the partitioned sub-block is &#xbd; of the width or height of the block, the sub-block size information may not entropy-encoded/decoded.</p><p id="p-0608" num="0593">In each partitioned sub-block, the reconstructed block may be generated by adding a residual block (or a reconstructed residual block) and a prediction block.</p><p id="p-0609" num="0594">The encoding/decoding order of the sub-blocks partitioned from the block may be determined according to at least one of partitioning directions.</p><p id="p-0610" num="0595">For example, the encoding/decoding order of the sub-blocks partitioned in the horizontal direction may be determined as an order from an upper direction to a lower direction.</p><p id="p-0611" num="0596">As another example, the encoding/decoding order of the sub-blocks partitioned in the vertical direction may be determined as an order from a left direction to a right direction.</p><p id="p-0612" num="0597">In the partitioned sub-blocks, the coded block flag indicating whether at least one of the transform coefficients having a non-zero value is present may be entropy-encoded/decoded in sub-block units.</p><p id="p-0613" num="0598">For example, the coded block flag may indicate that at least one of the transform coefficients having a non-zero value is present in at least one sub-block in sub-block units.</p><p id="p-0614" num="0599">As another example, when the coded block flag is entropy-encoded/decoded in sub-block units, the coded block flag may not entropy-encoded/decoded in units of blocks before partitioning.</p><p id="p-0615" num="0600">As another example, when the coded block flag is entropy-encoded/decoded in units of blocks before partitioning, the coded block flag may not be entropy-encoded/decoded in sub-block units.</p><p id="p-0616" num="0601">For only the sub-block indicated by the sub-block position information, the residual signal may be entropy-encoded/decoded.</p><p id="p-0617" num="0602">At this time, since the residual signal may be always present in the sub-block indicated by the sub-block position information, it may be inferred that the coded block flag indicates that at least one non-zero transform coefficient is present.</p><p id="p-0618" num="0603">In addition, since the residual signal may not always present in the sub-block which is not indicated by the sub-block position information, it may be inferred that the coded block flag indicates that at least one non-zero transform coefficient is not present.</p><p id="p-0619" num="0604">At least one of the area, size, shape, or partitioning direction of a coefficient group used when the transform coefficient is entropy-encoded/decoded may be determined based on at least one of the area, size, shape, or partitioning direction of the sub-block.</p><p id="p-0620" num="0605">For example, when the area of the sub-block is 16, the area of the coefficient group may be determined as 16.</p><p id="p-0621" num="0606">As another example, when the area of the sub-block is 32, the area of the coefficient group may be determined as 16.</p><p id="p-0622" num="0607">As another example, when the size of the sub-block is 1&#xd7;16 or 16&#xd7;1, the size of the coefficient group may be determined as 1&#xd7;16 or 16&#xd7;1.</p><p id="p-0623" num="0608">As another example, when the size of the sub-block is 2&#xd7;8 or 8&#xd7;2, the size of the coefficient group may be determined as 2&#xd7;8 or 8&#xd7;2.</p><p id="p-0624" num="0609">As another example, when the size of the sub-block is 4&#xd7;4, the size of the coefficient group may be determined as 4&#xd7;4.</p><p id="p-0625" num="0610">As another example, when the width of the sub-block is 2, the width of the coefficient group may be determined as 2.</p><p id="p-0626" num="0611">As another example, when the width of the sub-block is 4, the width of the coefficient group may be determined as 4.</p><p id="p-0627" num="0612">As another example, when the height of the sub-block is 2, the height of the coefficient group may be determined as 2.</p><p id="p-0628" num="0613">As another example, when the height of the sub-block is 4, the height of the coefficient group may be determined as 4.</p><p id="p-0629" num="0614">As another example, when the shape of the sub-block is a rectangle (non-square), the shape of the coefficient group may be determined as a rectangle (non-square).</p><p id="p-0630" num="0615">As another example, when the shape of the sub-block is a square, the shape of the coefficient group may be determined as a square.</p><p id="p-0631" num="0616">As another example, when the size of the sub-block is 16&#xd7;4 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 8&#xd7;2.</p><p id="p-0632" num="0617">As another example, when the size of the sub-block is 4&#xd7;8 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 2&#xd7;8.</p><p id="p-0633" num="0618">As another example, when the size of the sub-block is 32&#xd7;4 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 8&#xd7;2.</p><p id="p-0634" num="0619">As another example, when the size of the sub-block is 8&#xd7;64 and the form thereof is a rectangle, the size of the coefficient group may be determined as at least one of 4&#xd7;4 or 2&#xd7;8.</p><p id="p-0635" num="0620">As another example, when the size of the sub-block is 16&#xd7;4 and the partitioning direction is a vertical direction, the size of the coefficient group may be determined as 4&#xd7;4.</p><p id="p-0636" num="0621">As another example, when the size of the sub-block is 4&#xd7;8 and the partitioning direction is a horizontal direction, the size of the coefficient group may be determined as 4&#xd7;4.</p><p id="p-0637" num="0622">As another example, when the size of the sub-block is 32&#xd7;4 and the partitioning direction is a horizontal direction, the size of the coefficient group may be determined as 8&#xd7;2.</p><p id="p-0638" num="0623">As another example, when the size of the sub-block is 8&#xd7;64 and the partitioning direction is a vertical direction, the size of the coefficient group may be determined as 2&#xd7;8.</p><p id="p-0639" num="0624">Meanwhile, the area of the coefficient group used when the transform coefficient is entropy-encoded/decoded may be determined as a predefined value. Here, the predefined value may be 4 or 16.</p><p id="p-0640" num="0625">In addition, the area or size of the transform coefficient group may be determined based on the size of the current block regardless of the color component of the current block. At this time, the size of the current block may include at least one of the width or the height of the current block.</p><p id="p-0641" num="0626">For example, when the width and height of the current block are 2, the size of the coefficient group may be determined as 2&#xd7;2.</p><p id="p-0642" num="0627">As another example, when the size of the current block is 2&#xd7;4 or 4&#xd7;2, the size of the coefficient group may be determined as 2&#xd7;2.</p><p id="p-0643" num="0628">As in the example of <figref idref="DRAWINGS">FIG. <b>13</b></figref>, according to the embodiment of the second sub-block partitioning mode, the current block may be partitioned into two sub-blocks (&#xbd; or &#xbc; of the height) in the horizontal direction, and may be partitioned into two sub-blocks (&#xbd; or &#xbc; of the width) in the vertical direction. In the example of <figref idref="DRAWINGS">FIG. <b>13</b></figref>, a gray shade may mean a block in which the residual signal is encoded/decoded among sub-blocks, and the block may be indicated using the sub-block position information.</p><p id="p-0644" num="0629">Sub-block partitioning mode use information indicating whether a mode in which the block is partitioned into N sub-blocks and at least one of prediction, transform/inverse transform, quantization/dequantization or entropy encoding/decoding is performed is used may be entropy-encoded/decoded in at least one of a parameter set or a header.</p><p id="p-0645" num="0630">Here, the sub-block partitioning mode use information may mean at least one of the first sub-block partitioning mode or the second sub-block partitioning mode.</p><p id="p-0646" num="0631">At this time, at least one of the parameter set or the header may be at least one of a video parameter set, a decoding parameter set, a sequence parameter set, an adaptation parameter set, a picture parameter set, a picture header, a slice header, a tile group header or a tile header.</p><p id="p-0647" num="0632">For example, in order to indicate whether the sub-block partitioning mode is used within a video, the sub-block partitioning mode use information may be entropy-encoded/decoded in the video parameter set.</p><p id="p-0648" num="0633">As another example, in order to indicate whether the sub-block partitioning mode is used within a decoding process, the sub-block partitioning mode use information may be entropy-encoded/decoded in the sequence parameter set.</p><p id="p-0649" num="0634">As another example, in order to indicate whether the sub-block partitioning mode is used within a sequence, the sub-block partitioning mode use information may be entropy-encoded/decoded in the sequence parameter set.</p><p id="p-0650" num="0635">As another example, in order to indicate whether the sub-block partitioning mode is used within several pictures, the sub-block partitioning mode use information may be entropy-encoded/decoded in the adaptation parameter set or the adaptation header.</p><p id="p-0651" num="0636">As another example, in order to indicate whether the sub-block partitioning mode is used within a picture, the sub-block partitioning mode use information may be entropy-encoded/decoded in the picture parameter set or the picture header.</p><p id="p-0652" num="0637">As another example, in order to indicate whether the sub-block partitioning mode is used within a slice, the sub-block partitioning mode use information may be entropy-encoded/decoded in the slice header.</p><p id="p-0653" num="0638">As another example, in order to indicate whether the sub-block partitioning mode is used within a tile group, the sub-block partitioning mode use information may be entropy-encoded/decoded in the tile group header.</p><p id="p-0654" num="0639">As another example, in order to indicate whether the sub-block partitioning mode is used within a tile, the sub-block partitioning mode use information may be entropy-encoded/decoded in the tile header.</p><p id="p-0655" num="0640">Transform/inverse transform type of each block or sub-block may be determined using at least one of the following embodiments.</p><p id="p-0656" num="0641">At least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform for the block or the sub-block may be determined based on at least one of a prediction mode, an intra prediction mode, a color component, a size, a shape (form), sub-block partitioning related information, secondary transform performance information or matrix based intra prediction performance information for the block or the sub-block. The matrix based intra prediction may indicate an intra prediction based on the matrix</p><p id="p-0657" num="0642">For example, a one-dimensional transform type indicating at least one of a horizontal transform type or a vertical transform type may be determined based on at least one of a prediction mode, an intra prediction mode, a color component, a size, a shape (form), sub-block partitioning related information, secondary transform performance information or matrix based intra prediction performance information for the block or the sub-block.</p><p id="p-0658" num="0643">As another example, a two-dimensional transform combination indicating a combination of a horizontal transform type and a vertical transform type may be determined based on at least one of an intra prediction mode, a prediction mode, a color component, a size, a shape or sub-block partitioning related information for the block or the sub-block.</p><p id="p-0659" num="0644">As another example, information indicating whether to perform transform may be determined based on at least one of an intra prediction mode, a prediction mode, a color component, a size, a shape or sub-block partitioning related information for the block or the sub-block.</p><p id="p-0660" num="0645">At this time, at least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform may be different from each other according to at least one of an intra prediction mode, a prediction mode, a color component, a size, a shape or sub-block partitioning related information for the block or the sub-block.</p><p id="p-0661" num="0646">In addition, when at least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform used for the block or the sub-block is determined based on at least one of an intra prediction mode, a prediction mode, a color component, a size, a shape (form), sub-block partitioning related information, secondary transform performance information or matrix based intra prediction performance information for the block or the sub-block, information on a one-dimensional transform type, information on a two-dimensional transform combination or information as to whether to use transform may not be entropy-encoded/decoded.</p><p id="p-0662" num="0647">That is, at least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform for the block or the sub-block may be implicitly determined according to a predetermined rule in the encoder/decoder. The predetermined rule may be set based on the coding parameter in the encoder/decoder.</p><p id="p-0663" num="0648">Here, matrix based intra prediction may mean an intra prediction mode in which at least one of a boundary averaging process, a matrix vector multiplication process or a linear interpolation process is performed to generate a prediction block.</p><p id="p-0664" num="0649">Here, transform may mean at least one of transform or inverse transform.</p><p id="p-0665" num="0650">In addition, the block may mean each sub-block partitioned from the block.</p><p id="p-0666" num="0651">Primary transform may mean at least one of DCT-J or DST-K based integer transform, such as DCT-2, DCT-8, DST-7, DCT-4, or DST-4 which is performed with respect to a residual block to generate a transform coefficient. Here, J and K may be positive integers.</p><p id="p-0667" num="0652">Primary transform may be performed using a transform matrix extracted from a transform matrix of at least one of DCT-J or DST-K based integer transform such as DCT-2, DCT-8, DST-7, DCT-4, or DST-4. That is, primary transform may be performed using the extracted transform matrix. In addition, at least one of the coefficients in the extracted transform matrix may be equal to at least one of the coefficients in the transform matrix of at least one of DCT-J or DST-K based integer transform such as DCT-2, DCT-8, DST-7, DCT-4 or DST-4. In addition, the extracted transform matrix may be included in a transform matrix to be extracted. In addition, the extracted transform matrix may be obtained by performing at least one of flipping or sign change with respect to specific coefficients in the transform matrix to be extracted.</p><p id="p-0668" num="0653">For example, at least one of DCT-J or DST-K based integer transform such as DCT-8, DST-7, DCT-4, or DST-4 may be extracted from the transform matrix of DCT-2 and used for primary transform.</p><p id="p-0669" num="0654">Here, at least one of DCT-J or DST-K based integer transform such as DCT-2, DCT-8, DST-7, DCT-4 or DST-4 may have a coefficient in a transform matrix different from at least one of DCT-J or DST-K based integer transform such as DCT-2, DCT-8, DST-7, DCT-4 or DST-4.</p><p id="p-0670" num="0655">For example, a DCT-8 based integer transform matrix may be derived by performing at least one of horizontal flipping with respect to the DST-7 based integer transform matrix or sign change with respect to at least one of DST-7 transform matrix coefficients. At this time, vertical flipping may be used instead of horizontal flipping.</p><p id="p-0671" num="0656">As another example, a DST-7 based integer transform matrix may be derived by performing at least one of horizontal flipping with respect to the DCT-8 based integer transform matrix or sign change with respect to at least one of DCT-8 transform matrix coefficients. At this time, vertical flipping may be used instead of horizontal flipping.</p><p id="p-0672" num="0657">As another example, a DCT-4 based integer transform matrix may be derived by performing at least one of horizontal flipping with respect to the DST-4 based integer transform matrix or sign change with respect to at least one of DST-4 transform matrix coefficients. At this time, vertical flipping may be used instead of horizontal flipping.</p><p id="p-0673" num="0658">As another example, a DST-4 based integer transform matrix may be derived by performing at least one of horizontal flipping with respect to the DCT-4 based integer transform matrix or sign change with respect to at least one of DCT-4 transform matrix coefficients. At this time, vertical flipping may be used instead of horizontal flipping.</p><p id="p-0674" num="0659">Secondary transform may mean at least one of transform for rotating at least one of transform coefficients based on an angle. Secondary transform may be performed after primary transform.</p><p id="p-0675" num="0660">In the encoder, secondary transform may be performed with respect to the coefficients of a low-frequency region of an upper left side of the transform coefficient subjected to primary transform. The size of the low-frequency region, to which secondary transform is applied, may be determined based on the size of the transform block.</p><p id="p-0676" num="0661">In the decoder, secondary inverse transform may be performed before primary inverse transform is performed. In the following description, secondary transform may include secondary inverse transform.</p><p id="p-0677" num="0662">Secondary transform may be referred to as LFNST (Low Frequency Non-Separable Transform) because a non-separable transform kernel is used rather than a horizontal and vertical separable transform kernel (or type).</p><p id="p-0678" num="0663">Secondary transform may be performed only for an intra prediction encoding/decoding, and a secondary transform kernel may be determined based on an intra prediction mode. Specifically, a transform set including a plurality of transform kernel may be determined based on the intra prediction mode. In addition, a transform kernel which will be applied to secondary transform may be determined in a transform set determined based on index information. Here, the transform set may include four types of transform sets.</p><p id="p-0679" num="0664">In addition, when the intra prediction mode of the current block is a CCLM mode, a transform set for a chroma block may be determined based on the intra prediction mode of a luma block corresponding to the chroma block. Here, when the luma block corresponding to the chroma block is in a matrix based intra prediction mode, this may be regarded as a PLANAR mode and the transform set for the chroma block may be determined. In addition, when the luma block corresponding to the chroma block is in an IBC mode, this may be regarded as a DC mode and the transform set for the chroma block may be determined.</p><p id="p-0680" num="0665">As another example, when the luma block corresponding to the chroma block is in a matrix based intra prediction mode, an IBC mode, or a palette mode, this may be regarded as a PLANAR mode and the transform set for the chroma block may be determined.</p><p id="p-0681" num="0666">As another example, when the luma block corresponding to the chroma block is in a matrix based intra prediction mode, an IBC mode, or a palette mode, this may be regarded as a DC mode and the transform set for the chroma block may be determined.</p><p id="p-0682" num="0667">In addition, a secondary transform kernel in the transform set may be determined using secondary transform index information. Here, the secondary transform kernel may indicate a secondary transform matrix.</p><p id="p-0683" num="0668">Whether to use transform may mean whether to use at least one of primary transform or secondary transform in the residual block. Whether to use transform may include at least one of whether to use primary transform or whether to use secondary transform. Whether to use transform may indicate whether to apply the transform skip mode. Also, transform_skip_flag may indicate the transform skip flag.</p><p id="p-0684" num="0669">For example, when transform_skip_flag which is information indicating whether to use at least one of primary transform or secondary transform has a first value (e.g., 0), this may indicate that at least one of primary transform or secondary transform is used.</p><p id="p-0685" num="0670">As another example, when transform_skip_flag which is information indicating whether to use at least one of primary transform or secondary transform has a second value (e.g., 1), this may indicate that at least one of primary transform or secondary transform is not used.</p><p id="p-0686" num="0671">The one-dimensional transform type may mean the type of primary transform and mean a horizontal transform type trTypeHor or a vertical transform type trTypeVer for at least one of the DCT-J or DST-K based integer transform type. Here, J and K may be positive integers.</p><p id="p-0687" num="0672">As the type of primary transform, first transform to N-th transform may be used. Here, N may be a positive integer of 2 or more.</p><p id="p-0688" num="0673">For example, first transform may mean DCT-2 based integer transform.</p><p id="p-0689" num="0674">As another example, when first transform is used for horizontal transform and vertical transform, trTypeHor which is a transform type for horizontal transform and trTypeVer which is a transform type for vertical transform may have values Q and R, respectively. Here, Q and R may be at least one of a negative integer, 0 or a positive integer. For example, Q and R may be 0 and 0, respectively.</p><p id="p-0690" num="0675">For example, when trTypeHor has a first value, this may mean DCT-2 based integer horizontal transform.</p><p id="p-0691" num="0676">As another example, when trTypeVer has a first value, this may mean DCT-2 based integer vertical transform.</p><p id="p-0692" num="0677">The first value may be 0.</p><p id="p-0693" num="0678">For example, second transform may mean at least one of DCT-J or DST-K based integer transform, such as DCT-8, DST-7, DCT-4, or DST-4, other than DCT-2. Here, J and K may be positive integers. That is, second transform may mean at least one of transforms other than first transform.</p><p id="p-0694" num="0679">As another example, when second transform is used for at least one of horizontal transform or vertical transform, trTypeHor which is a transform type for horizontal transform and trTypeVer which is a transform type for vertical transform may have values T and U, respectively. Here, T and U may be at least one of a negative integer, 0 or a positive integer. For example, T and U may be a value equal to or greater than 1 and a value equal to or greater than 1, respectively. In addition, T and U may be greater than Q and R, respectively.</p><p id="p-0695" num="0680">For example, when trTypeHor has a second value, this may mean DST-7 based integer horizontal transform.</p><p id="p-0696" num="0681">As another example, when trTypeHor has a third value, this may mean DCT-8 based integer horizontal transform.</p><p id="p-0697" num="0682">As another example, when trTypeVer has a second value, this may mean DST-7 based integer vertical transform.</p><p id="p-0698" num="0683">As another example, when trTypeVer has a third value, this may mean DCT-8 based integer vertical transform.</p><p id="p-0699" num="0684">The second value may be 1. In addition, the third value may be 2.</p><p id="p-0700" num="0685">Instead of DST-7, DST-4 may be used. In addition, instead of DCT-8, DCT-4 may be used.</p><p id="p-0701" num="0686">For example, first transform may be DCT-2 based integer transform. In addition, second transform may be DST-7 based integer transform. In addition, third transform may be DCT-8 based integer transform. In addition, second transform may mean at least one of second transform or third transform.</p><p id="p-0702" num="0687">As another example, first transform may be DCT-2 based integer transform. In addition, second transform may be DST-4 based integer transform. In addition, third transform may be DCT-4 based integer transform. In addition, second transform may mean at least one of second transform or third transform.</p><p id="p-0703" num="0688">That is, first transform may be DCT-2 based integer transform, and second transform to N-th transform may mean at least one of DCT-J or DST-K based integer transform such as DCT-8, DST-7, DCT-4 or DST-4, other than DCT-2. Here, N may be a positive integer equal to or greater than 3.</p><p id="p-0704" num="0689">For example, first transform may be DCT-2 based integer transform. In addition, second transform may be DST-7 based integer transform extracted from DCT-2 based integer transform matrix. In addition, third transform may be DCT-8 based integer transform extracted from DCT-2 based integer transform matrix. In addition, second transform may mean at least one of second transform or third transform.</p><p id="p-0705" num="0690">As another example, first transform may be DCT-2 based integer transform. In addition, second transform may be DST-4 based integer transform extracted from DCT-2 based integer transform matrix. In addition, third transform may be DCT-4 based integer transform extracted from DCT-2 based integer transform matrix. In addition, second transform may mean at least one of second transform or third transform.</p><p id="p-0706" num="0691">That is, first transform may be DCT-2 based integer transform, and second transform to N-th transform may mean at least one of DCT-J or DST-K based integer transform, such as DCT-8, DST-7, DCT-4 or DST-4, extracted from DCT-2 based integer transform matrix. Here, N may be a positive integer equal to or greater than 3. In addition, second transform may mean at least one of second transform to N-th transform.</p><p id="p-0707" num="0692">Instead of DCT-2, at least one of DCT-J or DST-K based integer transform such as DCT-8, DST-7, DCT-4, or DST-4 may be used.</p><p id="p-0708" num="0693">The two-dimensional transform combination may mean a combination of primary transforms and mean a combination of a horizontal transform type trTypeHor and a vertical transform type trTypeVer for at least one of DCT-J or DST-K based integer transform type. In addition, the two-dimensional transform combination may mean mts_idx which is a multi-transform selection index.</p><p id="p-0709" num="0694">For example, when first transform is used for horizontal transform and vertical transform, mts_idx which is a multi-transform selection index may have a value of P. Here, P may be at least one of a negative integer, 0 or a positive integer. For example, P may be 0.</p><p id="p-0710" num="0695">For example, when mts_idx is 0, trTypeHor and trTypeVer may have a first value (e.g., 0), respectively. That is, when mts_idx is 0, this may mean DCT-2 based integer horizontal transform and DCT-2 based integer vertical transform.</p><p id="p-0711" num="0696">As another example, when second transform is used for at least one of horizontal transform or vertical transform, mts_idx which is a multi-transform selection index may have a value of S or more. Here, S may be at least one of a negative integer, 0 or a positive integer. For example, S may be 1. In addition, S may be greater than P.</p><p id="p-0712" num="0697">For example, when mts_idx is 1, trTypeHor and trTypeVer may have a second value (e.g., 1), respectively.</p><p id="p-0713" num="0698">As another example, when mts_idx is 2, trTypeHor and trTypeVer may have a third value (e.g., 2) and a second value (e.g., 1), respectively.</p><p id="p-0714" num="0699">As another example, when mts_idx is 3, trTypeHor and trTypeVer may have a second value (e.g., 1) and a third value (e.g., 2), respectively.</p><p id="p-0715" num="0700">As another example, when mts_idx is 4, trTypeHor and trTypeVer may have a third value (e.g., 2), respectively.</p><p id="p-0716" num="0701">For example, when trTypeHor has a second value, this may mean DST-7 based integer horizontal transform.</p><p id="p-0717" num="0702">For another example, when trTypeHor has a third value, this may mean DCT-8 based integer horizontal transform.</p><p id="p-0718" num="0703">For another example, when trTypeVer has a second value, this may mean DST-7 based integer vertical transform.</p><p id="p-0719" num="0704">For another example, when trTypeVer has a third value, this may mean DCT-8 based integer vertical transform.</p><p id="p-0720" num="0705">The second value may be 1. In addition, the third value may be 2.</p><p id="p-0721" num="0706">In the above embodiment, instead of DST-7, DST-4 may be used. In addition, instead of DCT-8, DCT-4 may be used.</p><p id="p-0722" num="0707">For example, in first transform, horizontal transform and vertical transform may be DCT-2 based integer transform, respectively. In addition, in second transform, horizontal transform and vertical transform may be DST-7 and DST-7 based integer transforms, respectively. In addition, in third transform, horizontal transform and vertical transform may be DCT-8 and DST-7 based integer transforms, respectively. In addition, in fourth transform, horizontal transform and vertical transform may be DST-7 and DCT-8 based integer transforms, respectively. In addition, in fifth transform, horizontal transform and vertical transform may be DCT-8 and DCT-8 based integer transforms, respectively. In addition, second transform may mean at least one of second transform, third transform, fourth transform or fifth transform.</p><p id="p-0723" num="0708">As another example, in first transform, horizontal transform and vertical transform may be DCT-2 based integer transform, respectively. In addition, in second transform, horizontal transform and vertical transform may be DST-4 and DST-4 based integer transforms, respectively. In addition, in third transform, horizontal transform and vertical transform may be DCT-4 and DST-4 based integer transforms, respectively. In addition, in fourth transform, horizontal transform and vertical transform may be DST-4 and DCT-4 based integer transforms, respectively. In addition, in fifth transform, horizontal transform and vertical transform may be DCT-4 and DCT-4 based integer transforms, respectively. In addition, second transform may mean at least one of second transform, third transform, fourth transform or fifth transform.</p><p id="p-0724" num="0709">That is, in first transform, horizontal transform and vertical transform may be respectively DCT-2 based integer transform, and, in second transform to N-th transform, horizontal transform and vertical transform may mean at least one of DCT-J or DST-K based integer transform such as DCT-8, DST-7, DCT-4 or DST-4, other than DCT-2. Here, N may be an integer equal to or greater than 3.</p><p id="p-0725" num="0710">For example, in first transform, horizontal transform and vertical transform may be DCT-2 based integer transform, respectively. In addition, in second transform, horizontal transform and vertical transform may be DST-7 and DST-7 based integer transforms extracted from the DCT-2 based integer transform matrix, respectively. In addition, in third transform, horizontal transform and vertical transform may be DCT-8 based integer transform extracted from the DCT-2 based integer transform matrix and DST-7 based integer transform extracted from the DCT-2 based integer transform matrix, respectively. In addition, in fourth transform, horizontal transform and vertical transform may be DST-7 based integer transform extracted from the DCT-2 based integer transform matrix and DCT-8 based integer transform extracted from the DCT-2 based integer transform matrix, respectively. In addition, in fifth transform, horizontal transform and vertical transform may be DCT-8 and DCT-8 based integer transforms extracted from the DCT-2 based integer transform matrix, respectively. In addition, second transform may mean at least one of second transform, third transform, fourth transform or fifth transform.</p><p id="p-0726" num="0711">As another example, in first transform, horizontal transform and vertical transform may be DCT-2 based integer transform, respectively. In addition, in second transform, horizontal transform and vertical transform may be DST-4 and DST-4 based integer transforms extracted from the DCT-2 based integer transform matrix, respectively. In addition, in third transform, horizontal transform and vertical transform may be DCT-4 based integer transform extracted from the DCT-2 based integer transform matrix and DST-4 based integer transform extracted from the DCT-2 based integer transform matrix, respectively. In addition, in fourth transform, horizontal transform and vertical transform may be DST-4 based integer transform extracted from the DCT-2 based integer transform matrix and DCT-4 based integer transform extracted from the DCT-2 based integer transform matrix, respectively. In addition, in fifth transform, horizontal transform and vertical transform may be DCT-4 and DCT-4 based integer transforms extracted from the DCT-2 based integer transform matrix. In addition, second transform may mean at least one of second transform, third transform, fourth transform or fifth transform.</p><p id="p-0727" num="0712">That is, in first transform, horizontal transform and vertical transform may be respectively DCT-2 based integer transform, and, in second transform to N-th transform, horizontal transform and vertical transform may mean at least one of DCT-J or DST-K based integer transform such as DCT-8, DST-7, DCT-4 or DST-4 extracted from the DCT-2 based integer transform matrix. Here, N may be a positive integer equal to or greater than 3. In this case, second transform may mean at least one of second transform to N-th transform.</p><p id="p-0728" num="0713">Instead of DCT-2 transform, at least one of DCT-J or DST-K based integer transform such as DCT-8, DST-7, DCT-4, or DST-4 may be used.</p><p id="p-0729" num="0714">The prediction mode may mean the prediction mode of the block and mean which of the intra prediction mode, the inter prediction mode and the IBC (Intra Block Copy) mode is used to perform encoding/decoding.</p><p id="p-0730" num="0715">For example, when, in a specific mode, both intra prediction and inter prediction are performed to generate a prediction block, the specific mode may mean an inter prediction mode.</p><p id="p-0731" num="0716">For example, when, in the specific mode, a current image is used as a reference image and a vector is used for prediction, the specific mode may mean an intra block copy prediction mode. The intra block copy prediction mode may be an IBC mode. Here, the IBC mode may mean a mode in which a reference region is set within the current image/slice/tile/tile group/CTU, a position in the reference region is indicated by a block vector, and prediction is performed using a region indicated by the block vector.</p><p id="p-0732" num="0717">The color component may mean the color component of the block and may mean a luma (Y) or chroma component.</p><p id="p-0733" num="0718">For example, the chroma component may mean at least one of a Cb component or a Cr component. That is, the color component may mean the Y component, the Cb component, or the Cr component.</p><p id="p-0734" num="0719">As another example, the color component may mean at least one of an R component, a G component, or a B component.</p><p id="p-0735" num="0720">As another example, when an image is decomposed into multiple components and is encoded/decoded, the color component may mean the decomposed components.</p><p id="p-0736" num="0721">The sub-block partitioning related information may mean information indicating that the block is partitioned into a plurality of sub-blocks.</p><p id="p-0737" num="0722">For example, the sub-block partitioning related information may include at least one of sub-block partitioning mode information or partitioning direction information.</p><p id="p-0738" num="0723">As another example, the sub-block partitioning related information may include at least one of sub-block partitioning mode information, partitioning direction information, sub-block position information or sub-block size information.</p><p id="p-0739" num="0724">The size may mean at least one of a block size, a sub-block size or a transform size. Here, the size may mean at least one of a width, a height or a combination of the width and the height.</p><p id="p-0740" num="0725">The transform size may mean a transform size used in the corresponding block. The transform size may be less than or equal to the block size.</p><p id="p-0741" num="0726">The size may be M&#xd7;N such as 2&#xd7;2, 4&#xd7;2, 2&#xd7;4, 4&#xd7;4, 8&#xd7;4, 8&#xd7;2, 2&#xd7;8, 8&#xd7;8, 16&#xd7;8, 16&#xd7;4, 16&#xd7;2, 2&#xd7;16, 4&#xd7;16, 8&#xd7;16, 16&#xd7;16, 32&#xd7;16, 32&#xd7;8, 32&#xd7;4, 32&#xd7;2, 2&#xd7;32, 4&#xd7;32, 8&#xd7;32, 16&#xd7;32, 32&#xd7;32, 64&#xd7;32, 64&#xd7;16, 64&#xd7;8, 64&#xd7;4, 64&#xd7;2, 2&#xd7;64, 4&#xd7;64, 8&#xd7;64, 16&#xd7;64, 32&#xd7;64, 64&#xd7;64, 128&#xd7;64, 128&#xd7;32, 32&#xd7;128, 64&#xd7;128 or 128&#xd7;128. Here, M and N may be positive integers and may be the same or different. In addition, M may be S*N. N may be S*M. Here, S may be a positive integer.</p><p id="p-0742" num="0727">Here, M may mean a width and N may mean a height.</p><p id="p-0743" num="0728">For example, in the case of a block having a size of 64&#xd7;64, transform having a size of 32&#xd7;32 may be performed in an upper left region of the block. At this time, a quantization matrix having a size of 32&#xd7;32 may be used.</p><p id="p-0744" num="0729">As another example, in the case of a block having a size of 64&#xd7;32, transform having a size of 32&#xd7;32 may be performed in an upper left region of the block. At this time, a quantization matrix having a size of 32&#xd7;32 may be used.</p><p id="p-0745" num="0730">As another example, in the case of a block having a size of 32&#xd7;64, transform having a size of 16&#xd7;32 may be performed in an upper left region of the block. At this time, a quantization matrix having a size of 16&#xd7;32 may be used.</p><p id="p-0746" num="0731">As another example, in the case of a block having a size of 32&#xd7;32, transform having a size of 32&#xd7;32 may be performed in the block. At this time, a quantization matrix having a size of 32&#xd7;32 may be used.</p><p id="p-0747" num="0732">The form (or shape) may mean at least one of the form of a block, the form of a sub-block or the form of transform.</p><p id="p-0748" num="0733">The form may be a square or a non-square form.</p><p id="p-0749" num="0734">The square form may mean a square form.</p><p id="p-0750" num="0735">The non-square form may mean a rectangular form.</p><p id="p-0751" num="0736">The form of transform may mean the form of transform used in the corresponding block. When a horizontal transform size and a vertical transform size are different from each other, the form of transform may be a non-square. In addition, when a horizontal transform size and a vertical transform size are the same, the form of transform may be a square. The form of transform may be equal to or different from that of the corresponding block.</p><p id="p-0752" num="0737">The form of the quantization matrix may mean the form of the quantization matrix used in the corresponding block. When a horizontal transform size and a vertical transform size are different from each other, the form of the quantization matrix may be a non-square. In addition, when a horizontal transform size and a vertical transform size are the same, the form of the quantization matrix may be a square. The form of the quantization matrix may be equal to or different from that of the corresponding block. The form of the quantization matrix may be equal to or different from that of transform.</p><p id="p-0753" num="0738">For example, in the case of a square block having a size of 64&#xd7;64, square transform having a size of 32&#xd7;32 may be performed in the upper left region of the block. At this time, a square quantization matrix having a size of 32&#xd7;32 may be used.</p><p id="p-0754" num="0739">As another example, in the case of a square block having a size of 16&#xd7;16, square transform having a size of 16&#xd7;16 may be performed in the block. At this time, a square quantization matrix having a size of 16&#xd7;16 may be used.</p><p id="p-0755" num="0740">As another example, in the case of a non-square block having a size of 16&#xd7;4, non-square transform having a size of 16&#xd7;4 may be performed in the block. At this time, a quantization matrix having a size of 16&#xd7;4 may be used.</p><p id="p-0756" num="0741">As another example, in the case of a non-square block having a size of 2&#xd7;8, transform having a size of 2&#xd7;8 may be performed in the block. At this time, a quantization matrix having a size of 2&#xd7;8 may be used.</p><p id="p-0757" num="0742">The following shows an embodiment in which at least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform for the block or the sub-block is determined. Here, a one-dimensional transform type of at least one of horizontal transform or vertical transform for the block or the sub-block may be determined.</p><p id="p-0758" num="0743">When the width W or height H of the block or the sub-block is less than X, a horizontal transform type trTypeHor or a vertical transform type trTypeVer may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0759" num="0744">At this time, first transform may mean that trTypeHor or trTypeVer has a first value. Here, the first value may be 0.</p><p id="p-0760" num="0745">Here, X may be a positive integer, and may be 2 or 4, for example.</p><p id="p-0761" num="0746">When the width or height of the block or the sub-block is greater than Y, a horizontal transform type trTypeHor or a vertical transform type trTypeVer may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0762" num="0747">Here, Y may be a positive integer, and may be 16, 32, or 64, for example.</p><p id="p-0763" num="0748">When the width or height of the block or the sub-block is greater than or equal to X or is less than or equal to Y, a horizontal transform type trTypeHor or a vertical transform type trTypeVer may be determined as second transform indicating DST-7 based integer transform.</p><p id="p-0764" num="0749">At this time, second transform may mean that trTypeHor or trTypeVer has a second value.</p><p id="p-0765" num="0750">Here, the second value may be 1. Here, X may be a positive integer, and may be 2 or 4, for example. Here, Y may be a positive integer, and may be 16, 32, or 64, for example.</p><p id="p-0766" num="0751">In addition, when the width or height of the block or the sub-block is Z, horizontal transform or vertical transform may not be performed.</p><p id="p-0767" num="0752">Here, Z may be a positive integer including 0, and may be 1, for example.</p><p id="p-0768" num="0753">Here, all sub-blocks partitioned from the block may be transformed using the same horizontal transform type or the same vertical transform type.</p><p id="p-0769" num="0754">In addition, a one-dimensional transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined regardless of the intra prediction mode. That is, the transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined regardless of the intra prediction mode. The transform type may be selected from at least two transform types.</p><p id="p-0770" num="0755">When the current block is in the sub-block partitioning mode, the transform type for at least one of horizontal transform or vertical transform may be determined based on the width or height of the current block regardless of the intra prediction mode. Here, the sub-block partitioning mode may be a first sub-block partitioning mode (ISP mode) or a second sub-block partitioning mode (SBT mode).</p><p id="p-0771" num="0756">As in the example of Table 4, at least one of the horizontal transform type trTypeHor or the vertical transform type trTypeVer for the block or the sub-block may be determined.</p><p id="p-0772" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="91pt" align="center"/><colspec colname="2" colwidth="112pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>trTypeHor</entry><entry>trTypeVer</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>( W &#x3e;= 4 &#x26;&#x26; W &#x3c;= 16 ) ? 1 : 0</entry><entry>( H &#x3e;= 4 &#x26;&#x26; H &#x3c;= 16 ) ? 1 : 0</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0773" num="0757">For example, when the current block is in the sub-block partitioning mode, the transform type for at least one of horizontal transform or vertical transform may be determined based on Table 4 regardless of the intra prediction mode.</p><p id="p-0774" num="0758">In addition, in order to reduce implementation complexity of the encoder/decoder, the one-dimensional transform type for horizontal transform and vertical transform may be determined on the same criterion according to the width of the block and the height of the block.</p><p id="p-0775" num="0759">Conditions for determining horizontal transform and vertical transform may be the same regardless of the width of the block or the height of the block. That is, the condition for determining horizontal transform and the condition for determining vertical transform may be the same.</p><p id="p-0776" num="0760">The above conditions may mean comparison between the width or height of the current block and a specific positive integer.</p><p id="p-0777" num="0761">Here, since logic for the conditions for determining horizontal transform and vertical transform may be shared, it is possible to reduce implementation complexity of the encoder/decoder.</p><p id="p-0778" num="0762">In addition, as shown in the example of Table 4, the transform type for at least one of horizontal transform or vertical transform used in the sub-block may be determined without performing comparison between the width and height of the current block, in order to reduce computational complexity.</p><p id="p-0779" num="0763">As compared to Tables 5 and 6 below, in Table 4, since the transform type for at least one of horizontal transform or vertical transform used in the sub-block may be determined without performing comparison between the width and height of the current block, it is possible to reduce computational complexity.</p><p id="p-0780" num="0764">mts_idx which is a multi-transform selection index may be entropy-encoded/decoded to determine the two-dimensional transform combination of the block or the sub-block. The horizontal transform type trTypeHor and the vertical transform type trTypeVer may be determined using the two-dimensional transform combination table predetermined in the encoder and the decoder. At this time, the two-dimensional transform combination may mean each item in a two-dimensional transform combination table.</p><p id="p-0781" num="0765">mts_idx which is the multi-transform selection index may be entropy-encoded/decoded when the block is not partitioned into sub-blocks.</p><p id="p-0782" num="0766">The multi-transform selection index mts_idx may be determined based on lfnst_idx, that is, secondary transform performance information. In other words, the multi-transform selection index mts_idx may be entropy encoded/decoded based on lfnst_idx, that is, secondary transform performance information.</p><p id="p-0783" num="0767">When the multi-transform selection index mts_idx is not present in a bitstream, the multi-transform selection index mts_idx may be inferred as a first value (for example, 0). In other words, when the multi-transform selection index mts_idx is not entropy encoded/decoded, the multi-transform selection index mts_idx may be inferred as a first value (for example, 0).</p><p id="p-0784" num="0768">According to an embodiment, whether or not the multi-transform selection index mts_idx is signaled may be determined based on at least one of intra prediction explicit multi-transform selection enabled information (sps_explicit_mts_intra_enabled_flag) and inter prediction explicit multi-transform selection enabled information (sps_explicit_mts_inter_enabled_flag). For example, when a current block is intra predicted and intra prediction explicit multi-transform selection enabled information indicates that multi-transform is enabled for an intra prediction block, a multi-transform selection index for the current block may be signaled. On the contrary, when intra prediction explicit multi-transform selection enabled information indicates that multi-transform is not enabled for an intra prediction block, a multi-transform selection index for the current block may not be signaled.</p><p id="p-0785" num="0769">In addition, when a current block is inter predicted and inter prediction explicit multi-transform selection enabled information indicates that multi-transform is enabled for an inter prediction block, a multi-transform selection index for the current block may be signaled. On the contrary, when inter prediction explicit multi-transform selection enabled information indicates that multi-transform is not enabled for an inter prediction block, a multi-transform selection index for the current block may not be signaled.</p><p id="p-0786" num="0770">In addition, when a current block is predicted according to an IBC mode, whether or not a multi-transform selection index is signaled may be determined according to intra prediction explicit multi-transform selection enabled information and/or inter prediction explicit multi-transform selection enabled information. In addition, when a current block is predicted according to an IBC mode, a multi-transform selection index for the current block may not be signaled irrespective of intra prediction explicit multi-transform selection enabled information and inter prediction explicit multi-transform selection enabled information. Herein, when a current block is predicted according to an IBC mode, secondary transform/inverse transform may not be performed for the current block. In addition, when a current block is not an IBC mode and/or inter-prediction mode but an intra-prediction mode, secondary transform/inverse transform may be performed for the current block.</p><p id="p-0787" num="0771">As in the example of Table 5, at least one of the horizontal transform type trTypeHor or the vertical transform type trTypeVer for the block or the sub-block may be determined. According to Table 5, the two-dimensional transform combination table may be predetermined and the two-dimensional transform combination indicated by the multi-transform selection index may be determined.</p><p id="p-0788" num="0000"><tables id="TABLE-US-00005" num="00005"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="77pt" align="left"/><colspec colname="2" colwidth="28pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="28pt" align="left"/><colspec colname="5" colwidth="21pt" align="left"/><colspec colname="6" colwidth="21pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="6" rowsep="1">TABLE 5</entry></row><row><entry/><entry namest="offset" nameend="6" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>mts_idx[ x0 ][ y0 ]</entry><entry>0</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry></row><row><entry/><entry>trTypeHor</entry><entry>0</entry><entry>1</entry><entry>2</entry><entry>1</entry><entry>2</entry></row><row><entry/><entry>trTypeVer</entry><entry>0</entry><entry>1</entry><entry>1</entry><entry>2</entry><entry>2</entry></row><row><entry/><entry namest="offset" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0789" num="0772">The following shows an embodiment in which at least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform for the block or the sub-block is determined. Here, the one-dimensional transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined.</p><p id="p-0790" num="0773">When the width W or height H of the block or the sub-block is less than X, the horizontal transform type trTypeHor or the vertical transform type trTypeVer may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0791" num="0774">At this time, first transform may mean that trTypeHor or trTypeVer has a first value. Here, the first value may be 0.</p><p id="p-0792" num="0775">Here, X may be a positive integer, and may be 2 or 4, for example.</p><p id="p-0793" num="0776">When the width or height of the block or the sub-block is greater than Y, the horizontal transform type or the vertical transform type may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0794" num="0777">Here, Y may be a positive integer, and may be 16, 32, or 64, for example.</p><p id="p-0795" num="0778">When the width or height of the block or the sub-block is greater than or equal to X or is less than or equal to Y, the horizontal transform type or the vertical transform type may be determined according to the following conditions.</p><p id="p-0796" num="0779">When the partitioning direction information has a first value (0) and the sub-block position information has a first value (0), the horizontal transform type may be determined as third transform indicating DCT-8 based integer transform, and the vertical transform type may be determined as second transform indicating DST-7 based integer transform.</p><p id="p-0797" num="0780">When the partitioning direction information has a first value (0) and the sub-block position information has a second value (1), the horizontal transform type may be determined as second transform indicating DST-7 based integer transform, and the vertical transform type may be determined as second transform indicating DST-7 based integer transform.</p><p id="p-0798" num="0781">When the partitioning direction information has a second value (1) and the sub-block position information has a first value (0), the horizontal transform type may be determined as second transform indicating DST-7 based integer transform, and the vertical transform type may be determined as third transform indicating DCT-8 based integer transform.</p><p id="p-0799" num="0782">When the partitioning direction information has a second value (1) and the sub-block position information has a second value (1), the horizontal transform type may be determined as second transform indicating DST-7 based integer transform, and the vertical transform type may be determined as second transform indicating DST-7 based integer transform.</p><p id="p-0800" num="0783">At this time, second transform may mean that trTypeHor or trTypeVer has a second value. Here, the second value may be 1.</p><p id="p-0801" num="0784">At this time, third transform may mean that trTypeHor or trTypeVer has a third value. Here, the third value may be 2.</p><p id="p-0802" num="0785">Here, X may be a positive integer, and may be 2 or 4, for example. Here, Y may be a positive integer, and may be 16, 32, or 64, for example.</p><p id="p-0803" num="0786">In addition, when the width or height of the block or the sub-block is Z, horizontal transform or vertical transform may not be performed.</p><p id="p-0804" num="0787">Here, Z may be a positive integer including 0, and may be 1, for example.</p><p id="p-0805" num="0788">As in the example of Table 6, at least one of the horizontal transform type trTypeHor or the vertical transform type trTypeVer for the block or the sub-block may be determined.</p><p id="p-0806" num="0000"><tables id="TABLE-US-00006" num="00006"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="63pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><colspec colname="4" colwidth="42pt" align="left"/><thead><row><entry namest="1" nameend="4" rowsep="1">TABLE 6</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row><row><entry>partitioning direction </entry><entry>sub-block position </entry><entry/><entry/></row><row><entry>information</entry><entry>information</entry><entry>trTypeHor</entry><entry>trTypeVer</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>0</entry><entry>0</entry><entry>2</entry><entry>1</entry></row><row><entry>0</entry><entry>1</entry><entry>1</entry><entry>1</entry></row><row><entry>1</entry><entry>0</entry><entry>1</entry><entry>2</entry></row><row><entry>1</entry><entry>1</entry><entry>1</entry><entry>1</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0807" num="0789">When the width W or height H of the block or the sub-block is less than X, the horizontal transform type trTypeHor or the vertical transform type trTypeVer may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0808" num="0790">At this time, first transform may mean that trTypeHor or trTypeVer has a first value. Here, the first value may be 0.</p><p id="p-0809" num="0791">Here, X may be a positive integer, and may be 2, 4, or 8 for example.</p><p id="p-0810" num="0792">When the width or height of the block or the sub-block is greater than Y, the horizontal transform type or the vertical transform type may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0811" num="0793">Here, Y may be a positive integer, and may be 8, 16, 32, or 64, for example.</p><p id="p-0812" num="0794">When the width or height of the block or the sub-block is greater than or equal to X or is less than or equal to Y, the horizontal transform type or the vertical transform type may be determined as second transform indicating DST-7 based integer transform.</p><p id="p-0813" num="0795">At this time, second transform may mean that trTypeHor or trTypeVer has a second value. Here, the second value may be 1.</p><p id="p-0814" num="0796">Here, X may be a positive integer, and may be 2, 4, or 8, for example. Here, Y may be a positive integer, and may be 8, 16, 32, or 64, for example.</p><p id="p-0815" num="0797">In addition, when the width or height of the block or the sub-block is Z, horizontal transform or vertical transform may not be performed.</p><p id="p-0816" num="0798">Here, Z may be a positive integer including 0, and may be 1, for example.</p><p id="p-0817" num="0799">Here, all sub-blocks partitioned from the block may be transformed using the same horizontal transform type or the same vertical transform type. In addition, the one-dimensional transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined regardless of the intra prediction mode.</p><p id="p-0818" num="0800">As in the example of Table 7, at least one of the horizontal transform type trTypeHor or the vertical transform type trTypeVer for the block or the sub-block may be determined.</p><p id="p-0819" num="0000"><tables id="TABLE-US-00007" num="00007"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="91pt" align="center"/><colspec colname="2" colwidth="112pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 7</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>trTypeHor</entry><entry>trTypeVer</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>( W &#x3e;= 4 &#x26;&#x26; W &#x3c;= 8 ) ? 1 : 0</entry><entry>( H &#x3e;= &#x26;&#x26; H &#x3c;= 8 ) ? 1 : 0</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0820" num="0801">The following shows an embodiment in which at least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform for the block or the sub-block is determined. Here, the one-dimensional transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined.</p><p id="p-0821" num="0802">When the width W or height H of the block or the sub-block is less than X, the horizontal transform type trTypeHor or the vertical transform type trTypeVer may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0822" num="0803">At this time, first transform may mean that trTypeHor or trTypeVer has a first value. Here, the first value may be 0.</p><p id="p-0823" num="0804">Here, X may be a positive integer, and may be 2, 4, or 8, for example.</p><p id="p-0824" num="0805">When the width or height of the block or the sub-block is greater than Y, the horizontal transform type or the vertical transform type may be determined as first transform indicating DCT-2 based integer transform.</p><p id="p-0825" num="0806">Here, Y may be a positive integer, and may be 8, 16, 32, or 64, for example.</p><p id="p-0826" num="0807">When the width or height of the block or the sub-block is greater than or equal to X or is less than or equal to Y, the horizontal transform type or the vertical transform type may be determined as second transform indicating DST-7 based integer transform.</p><p id="p-0827" num="0808">At this time, second transform may mean that trTypeHor or trTypeVer has a second value. Here, the second value may be 1.</p><p id="p-0828" num="0809">Here, X may be a positive integer, and may be 2, 4, or 8, for example. Here, Y may be a positive integer, and may be 8, 16, 32, or 64, for example.</p><p id="p-0829" num="0810">In addition, when the width or height of the block or the sub-block is Z, horizontal transform or vertical transform may not be performed.</p><p id="p-0830" num="0811">Here, Z may be a positive integer including 0, and may be 1, for example.</p><p id="p-0831" num="0812">Here, all sub-blocks partitioned from the block may be transformed using the same horizontal transform type or the same vertical transform type. In addition, the one-dimensional transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined regardless of the intra prediction mode.</p><p id="p-0832" num="0813">As in the example of Table 8, at least one of the horizontal transform type trTypeHor or the vertical transform type trTypeVer for the block or the sub-block may be determined.</p><p id="p-0833" num="0000"><tables id="TABLE-US-00008" num="00008"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="91pt" align="center"/><colspec colname="2" colwidth="112pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 8</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>trTypeHor</entry><entry>trTypeVer</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>( W &#x3e;= 4 &#x26;&#x26; W &#x3c;= 32 ) ? 1 : 0</entry><entry>( H &#x3e;= 4 &#x26;&#x26; H &#x3c;= 32 ) ? 1 : 0</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0834" num="0814">The following shows an embodiment in which at least one of a one-dimensional transform type, a two-dimensional transform combination or whether to use transform for the block or the sub-block is determined. Here, the one-dimensional transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined.</p><p id="p-0835" num="0815">When the prediction mode of the block or the sub-block is an intra prediction mode or an intra block copy prediction mode, a one-dimensional transform type for at least one of horizontal transform or vertical transform for the block or the sub-block may be determined based on at least one of the embodiments.</p><p id="p-0836" num="0816">Various transform/inverse transform type determination methods for the block or the sub-block may be performed, and at least one of the following scan methods may be performed after transform or before inverse transform.</p><p id="p-0837" num="0817">At least one of the following scan methods may be performed with respect to a quantized coefficient level or a quantized level subjected to at least one transform or quantization in the encoder/decoder.</p><p id="p-0838" num="0818">Here, the quantized coefficient level may mean a result generated by performing transform and quantization with respect to a residual block. In addition, the quantized level may mean a result generated by performing quantization with respect to a residual block.</p><p id="p-0839" num="0819">In addition, the quantized coefficient level and the quantized level may have the same meaning and may have the same meaning as a transform coefficient. That is, the quantized coefficient level, the quantized level and the transform coefficient may mean an object when a residual block is entropy-encoded/decoded.</p><p id="p-0840" num="0820">As shown in the example of <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using diagonal scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using diagonal scan.</p><p id="p-0841" num="0821">The scan direction from the down-left side to the top-right side may be referred to as up-right diagonal scan. In addition, the scan direction from the up-right side to the down-left side may be referred to as down-left diagonal scan.</p><p id="p-0842" num="0822">The example of <figref idref="DRAWINGS">FIG. <b>14</b></figref> shows the up-right scan among diagonal scans.</p><p id="p-0843" num="0823">As in the example of <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using horizontal scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using horizontal scan.</p><p id="p-0844" num="0824">At this time, horizontal scan may be a method of preferentially scanning coefficients corresponding to a first row.</p><p id="p-0845" num="0825">As in the example of <figref idref="DRAWINGS">FIG. <b>16</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using vertical scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using vertical scan.</p><p id="p-0846" num="0826">At this time, vertical scan may be a method of preferentially scanning coefficients corresponding to a first column.</p><p id="p-0847" num="0827">As in the example of <figref idref="DRAWINGS">FIG. <b>17</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using block-based diagonal scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using block-based diagonal scan.</p><p id="p-0848" num="0828">At this time, a block size may be M&#xd7;N. Here, at least one of M or N may be a positive integer and may be 4. In addition, a block size may be equal to the size of a coefficient group used in transform coefficient encoding/decoding.</p><p id="p-0849" num="0829">The example of <figref idref="DRAWINGS">FIG. <b>17</b></figref> shows block-based up-right scan among block-based diagonal scans.</p><p id="p-0850" num="0830">At this time, the block may mean a sub-block partitioned from a block having a specific size. If the block-based scan is used, even sub-blocks in the block having the specific size may be scanned using the same scan method as the scan method in the block.</p><p id="p-0851" num="0831">As in the example of <figref idref="DRAWINGS">FIG. <b>17</b></figref>, when block-based diagonal scan is used, after a block having a size of 8&#xd7;8 is partitioned into sub-blocks each having a size of 4&#xd7;4, the sub-blocks each having a size of 4&#xd7;4 may be scanned using diagonal scan and the coefficients in the sub-block may be scanned using diagonal scan.</p><p id="p-0852" num="0832">As in the example of <figref idref="DRAWINGS">FIG. <b>18</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using block-based horizontal scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using block-based horizontal scan. At this time, a block size may be 4&#xd7;4 and blocks corresponding to a first row may be preferentially scanned.</p><p id="p-0853" num="0833">At this time, a block size may be M&#xd7;N. Here, at least one of M or N may be a positive integer and may be 4. In addition, a block size may be equal to the size of a coefficient group used in transform coefficient encoding/decoding.</p><p id="p-0854" num="0834">At this time, block-based horizontal scan may be a method of preferentially scanning coefficients corresponding to a first row.</p><p id="p-0855" num="0835">As in the example of <figref idref="DRAWINGS">FIG. <b>19</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using block-based vertical scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using block-based vertical scan.</p><p id="p-0856" num="0836">At this time, a block size may be M&#xd7;N. Here, at least one of M or N may be a positive integer and may be 4. In addition, a block size may be equal to the size of a coefficient group used in transform coefficient encoding/decoding.</p><p id="p-0857" num="0837">At this time, block-based vertical scan may be a method of preferentially scanning coefficients corresponding to a first column.</p><p id="p-0858" num="0838">As in the examples of <figref idref="DRAWINGS">FIGS. <b>14</b> to <b>19</b></figref>, scan corresponding to (a) may be used for a residual block having a size of J&#xd7;K for a J&#xd7;K block, and scan corresponding to (b) may be used for a residual block having a size of M&#xd7;N or more for a block having a size of at least one of 8&#xd7;8/16&#xd7;16/32&#xd7;32/64&#xd7;64 or a residual block having a size of M&#xd7;N. J, K, M and N may be positive integers. In addition, J and K may be less than M and N, respectively. In addition, J&#xd7;K may be 4&#xd7;4 and M&#xd7;N may be 8&#xd7;8.</p><p id="p-0859" num="0839">As in the examples of <figref idref="DRAWINGS">FIGS. <b>14</b> to <b>19</b></figref>, although only the scan method corresponding to a maximum size of 8&#xd7;8 is shown, the scan method corresponding to the size of 8&#xd7;8 is applicable to a scan method corresponding to a size greater than 8&#xd7;8, and the above scan is applicable not only to a residual block having a square form but also to a residual block having a non-square form.</p><p id="p-0860" num="0840">In order to align the quantized coefficient levels in the two-dimensional residual block having a square/non-square form in the encoder, the quantized coefficient levels in the residual block may be scanned. In addition, in order to align the one-dimensional reconstructed coefficient level array as quantized coefficient levels in the two-dimensional residual block having a square/non-square form in the decoder, the coefficient level may be scanned.</p><p id="p-0861" num="0841">As in the example of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, at least one of the quantized coefficient levels may be scanned.</p><p id="p-0862" num="0842">For example, as in the example of (a) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using diagonal scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using diagonal scan.</p><p id="p-0863" num="0843">At this time, a diagonal scan direction may be from a down-left side to an up-right side or from an up-right side to a down-left side, as in the example of (a) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>.</p><p id="p-0864" num="0844">The scan direction from the down-left side to the top-right side may be referred to as up-right diagonal scan. In addition, the scan direction from the up-right side to the down-left side may be referred to as down-left diagonal scan.</p><p id="p-0865" num="0845">The example of (a) of <figref idref="DRAWINGS">FIG. <b>20</b></figref> shows the up-right scan among diagonal scans.</p><p id="p-0866" num="0846">As another example, as in the example of (b) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using vertical scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using vertical scan.</p><p id="p-0867" num="0847">At this time, vertical scan may be a method of preferentially scanning coefficients corresponding to a first column.</p><p id="p-0868" num="0848">As another example, as in the example of (c) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using horizontal scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using horizontal scan.</p><p id="p-0869" num="0849">At this time, horizontal scan may be a method of preferentially scanning coefficients corresponding to a first row.</p><p id="p-0870" num="0850">As another example, as in the example of (d) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using block-based diagonal scan. In addition, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using block-based diagonal scan.</p><p id="p-0871" num="0851">At this time, a block size may be M&#xd7;N. Here, at least one of M or N may be a positive integer and may be 4. In addition, a block size may be equal to the size of a coefficient group used in transform coefficient encoding/decoding.</p><p id="p-0872" num="0852">The diagonal scan direction may be from the down-left side to the up-right side as in the example of (d) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>. In addition, the diagonal scan direction may be from the up-right side to the down-left side.</p><p id="p-0873" num="0853">The example of (d) of <figref idref="DRAWINGS">FIG. <b>20</b></figref> shows an example in which block-based up-right scan among block-based diagonal scans is performed with respect to an entire 8&#xd7;4 block.</p><p id="p-0874" num="0854">As another example, as in the example of (e) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, for an entire 8&#xd7;4 block, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using block-based vertical scan. In addition, for an entire 8&#xd7;4 block, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using block-based vertical scan.</p><p id="p-0875" num="0855">At this time, a block size may be M&#xd7;N. Here, at least one of M or N may be a positive integer and may be 4. In addition, a block size may be equal to the size of a coefficient group used in transform coefficient encoding/decoding.</p><p id="p-0876" num="0856">At this time, block-based vertical scan may be a method of preferentially scanning coefficients corresponding to a first column.</p><p id="p-0877" num="0857">As another example, as in the example of (f) of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, for an entire 4&#xd7;8 block, the quantized coefficient levels in a two-dimensional residual block may be aligned as a one-dimensional coefficient level array using block-based horizontal scan. In addition, for an entire 4&#xd7;8 block, a one-dimensional reconstructed coefficient level array may be aligned as quantized coefficient levels in a two-dimensional residual block using block-based horizontal scan.</p><p id="p-0878" num="0858">At this time, a block size may be M&#xd7;N. Here, at least one of M or N may be a positive integer and may be 4. In addition, a block size may be equal to the size of a coefficient group used in transform coefficient encoding/decoding.</p><p id="p-0879" num="0859">At this time, block-based horizontal scan may be a method of preferentially scanning coefficients corresponding to a first row.</p><p id="p-0880" num="0860">As in the above example, when a residual block has a non-square shape, the residual block may be scanned in the non-square shape or the residual block may be partitioned into a size of M&#xd7;N which is a specific square block unit and scan may be performed for each specific square block unit and within the specific square block unit. Here, M and N may be positive integers and may be the same or different.</p><p id="p-0881" num="0861"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows an example of the intra prediction mode values of Planar (0) and DC (1) which are a directional intra prediction mode (&#x2212;14 to 80 excluding 0 and 1) having various directions and a non-directional intra prediction mode.</p><p id="p-0882" num="0862">Table 9 shows the intra prediction mode value corresponding to the intra prediction mode.</p><p id="p-0883" num="0000"><tables id="TABLE-US-00009" num="00009"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="77pt" align="left"/><colspec colname="2" colwidth="119pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 9</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>intra prediction</entry><entry>intra prediction</entry></row><row><entry/><entry>mode value</entry><entry>mode</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>0</entry><entry>INTRA PLANAR</entry></row><row><entry/><entry>1</entry><entry>INTRA DC</entry></row><row><entry/><entry>&#x2002;2 . . . 66</entry><entry>INTRA ANGULAR2 . . .</entry></row><row><entry/><entry/><entry>INTRA ANGULAR66</entry></row><row><entry/><entry>81 . . . 83</entry><entry>INTRA LT CCLM, INTRA L</entry></row><row><entry/><entry/><entry>CCLM, INTRA T CCLM</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0884" num="0863"><figref idref="DRAWINGS">FIGS. <b>22</b> to <b>26</b></figref> are diagrams showing examples of an encoding process or a decoding process using transform according to an embodiment of the present invention.</p><p id="p-0885" num="0864">Referring to <figref idref="DRAWINGS">FIG. <b>22</b></figref>, multi-transform selection enabled information sps_mts_enabled_flag signaled from at least one of the parameter set may indicate that multi-transform selection is enabled and, when at least one of the following conditions is satisfied, implicit multi-transform selection information implicitMtsEnabled may be set to a first value (e.g., 1) indicating implicit multi-transform selection.<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0865">the current block is in an ISP mode (IntraSubPartitionsSplitType is not equal to ISP_NO_SPLIT)</li>        <li id="ul0002-0002" num="0866">the current block is in an SBT mode and the larger value of the width and height of the current block is less than or equal to 32 (cu_sbt_flag is equal to 1 and Max(nTbW, nTbH) is less than or equal to 32)</li>        <li id="ul0002-0003" num="0867">both intra prediction explicit multi-transform selection enabled information and inter prediction explicit multi-transform selection enabled information indicate that explicit multi-transform selection is not enabled and the prediction mode of the current block is an intra prediction mode (sps_explicit_mts_intra_enabled_flag and sps_explicit_mts_inter_enabled_flag are both equal to 0 and CuPredMode[xTbY][yTbY] is equal to MODE_INTRA)</li>    </ul>    </li></ul></p><p id="p-0886" num="0868">in the case where the derived implicit multi-transform selection information indicates implicit multi-transform selection (implicitMtsEnabled=1), the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as follows.<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0869">in the case of the ISP mode, the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the width and height of the current block (e.g., Table 4 above).</li>        <li id="ul0004-0002" num="0870">in the case where both intra prediction explicit multi-transform selection enabled information and inter prediction explicit multi-transform selection enabled information indicate that explicit multi-transform selection is not enabled (sps_explicit_mts_intra_enabled_flag and sps_explicit_mts_inter_enabled_flag are both equal to 0), the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the width and height of the current block (e.g., Table 4 above).</li>        <li id="ul0004-0003" num="0871">in the case of the SBT mode, the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the partitioning direction information and the sub-block position information (e.g., <figref idref="DRAWINGS">FIG. <b>26</b></figref>).</li>    </ul>    </li></ul></p><p id="p-0887" num="0872">In contrast, when the derived implicit multi-transform selection information does not indicate implicit multi-transform selection (implicitMtsEnabled=0), as the horizontal transform type trTypeHor and the vertical transform type trTypeVer, the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the signaled multi-transform selection information tu_mts_idx and Table of <figref idref="DRAWINGS">FIG. <b>25</b></figref>.</p><p id="p-0888" num="0873">Meanwhile, when the current block is a chroma component (cIdx is greater than 0), the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as first transform indicating DCT-2 based integer transform regardless of the derived implicit multi-transform selection information.</p><p id="p-0889" num="0874">Referring to <figref idref="DRAWINGS">FIG. <b>23</b></figref>, multi-transform selection enabled information sps_mts_enabled_flag signaled from at least one of the parameter set may indicate that multi-transform selection is enabled and, when at least one of the following conditions is satisfied, implicit multi-transform selection information implicitMtsEnabled may be set to a first value (e.g., 1) indicating implicit multi-transform selection.<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0875">the current block is in an ISP mode (IntraSubPartitionsSplitType is not equal to ISP_NO_SPLIT)</li>        <li id="ul0006-0002" num="0876">the current block is in an SBT mode and the larger value of the width and height of the current block is less than or equal to 32 (cu_sbt_flag is equal to 1 and Max(nTbW, nTbH) is less than or equal to 32)</li>        <li id="ul0006-0003" num="0877">both intra prediction explicit multi-transform selection enabled information and inter prediction explicit multi-transform selection enabled information indicate that explicit multi-transform selection is not enabled and the prediction mode of the current block is an intra prediction mode (sps_explicit_mts_intra_enabled_flag and sps_explicit_mts_inter_enabled_flag are both equal to 0 and CuPredMode[xTbY][yTbY] is equal to MODE_INTRA)</li>    </ul>    </li></ul></p><p id="p-0890" num="0878">in the case where the derived implicit multi-transform selection information indicates implicit multi-transform selection (implicitMtsEnabled=1), the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as follows.</p><p id="p-0891" num="0879">in the case of the ISP mode, based on the width and height of the current block (e.g., Table 4 above), the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected.</p><p id="p-0892" num="0880">in the case where both intra prediction explicit multi-transform selection enabled information and inter prediction explicit multi-transform selection enabled information indicate that explicit multi-transform selection is not enabled and the prediction mode of the current block indicates the intra prediction mode (sps_explicit_mts_intra_enabled_flag and sps_explicit_mts_inter_enabled_flag are both equal to 0 and CuPredMode[xTbY][yTbY] is equal to MODE_INTRA), the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the width and height of the current block (e.g., Table 4 above).</p><p id="p-0893" num="0881">in the case of the SBT mode, the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the partitioning direction information and the sub-block position information (e.g., <figref idref="DRAWINGS">FIG. <b>26</b></figref>).</p><p id="p-0894" num="0882">In contrast, when the derived implicit multi-transform selection information does not indicate implicit multi-transform selection (implicitMtsEnabled=0), as the horizontal transform type trTypeHor and the vertical transform type trTypeVer, the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the signaled multi-transform selection information tu_mts_idx and Table of <figref idref="DRAWINGS">FIG. <b>25</b></figref>.</p><p id="p-0895" num="0883">Meanwhile, when the current block is a chroma component (cIdx is greater than 0), the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as first transform indicating DCT-2 based integer transform regardless of the derived implicit multi-transform selection information.</p><p id="p-0896" num="0884">According to an embodiment, unlike <figref idref="DRAWINGS">FIG. <b>22</b></figref> and <figref idref="DRAWINGS">FIG. <b>23</b></figref>, when intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled and a prediction mode of a current block indicates an intra-prediction mode (sps_explicit_mts_intra_enabled_flag is equal to 0 and CuPredMode[xTbY][yTbY] is equal to MODE_INTRA), implicit multi-transform selection information (implictMtsEnabled) may be set to a second value (for example 1) indicating implicit multi-transform selection.</p><p id="p-0897" num="0885">According to an embodiment, when intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, a transform matrix index indicates that secondary transform/inverse transform is not applied to a current block, and matrix based intra-prediction mode usage information indicates that a matrix based intra-prediction mode is not applied to the current block (sps_explicit_mts_intra_enabled_flag is equal to 0, lfnst_idx[x0][y0] is equal to 0 and intra_mip_flag[x0][y0] is equal to 0), implicit multi-transform selection information (implictMtsEnabled) may be set to a second value (for example 1) indicating implicit multi-transform selection.</p><p id="p-0898" num="0886">According to an embodiment, when intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, a prediction mode of a current block indicates an intra-prediction mode, a transform matrix index indicates that secondary transform/inverse transform is not applied to a current block, and matrix based intra-prediction mode usage information indicates that a matrix based intra-prediction mode is not applied to the current block (sps_explicit_mts_intra_enabled_flag is equal to 0, CuPredMode[0][xTbY][yTbY] is equal to MODE_INTRA, lfnst_idx[x0][y0] is equal to 0 and intra_mip_flag[x0][y0] is equal to 0), implicit multi-transform selection information (implictMtsEnabled) may be set to a second value (for example 1) indicating implicit multi-transform selection.</p><p id="p-0899" num="0887">The matrix based intra-prediction mode usage information may be entropy encoded/decoded.</p><p id="p-0900" num="0888">According to another embodiment, multi-transform selection enabled information sps_mts_enabled_flag signaled from at least one of the parameter set may indicate that multi-transform selection is enabled and, when at least one of the following conditions is satisfied, implicit multi-transform selection information implicitMtsEnabled may be set to a first value (e.g., 1) indicating implicit multi-transform selection.<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0889">the current block is in an ISP mode</li>        <li id="ul0008-0002" num="0890">the current block is in an SBT mode and the larger value of the width and height of the current block is less than or equal to 32</li>        <li id="ul0008-0003" num="0891">intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, the prediction mode of the current block is an intra prediction mode, secondary inverse transform is not performed with respect to the current block, and the current block is not in a matrix based intra prediction mode.</li>    </ul>    </li></ul></p><p id="p-0901" num="0892">When the derived implicit multi-transform selection information indicates implicit multi-transform selection (implicitMtsEnabled=1), the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as follows. In the above embodiment, unlike the embodiments of <figref idref="DRAWINGS">FIGS. <b>22</b> and <b>23</b></figref>, since the horizontal transform type and the vertical transform type are selected by determining only the SBT mode, computational complexity may be reduced.<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0893">in the case of the SBT mode, based on the partitioning direction information and the sub-block location information (e.g., <figref idref="DRAWINGS">FIG. <b>26</b></figref>), the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected.</li>        <li id="ul0010-0002" num="0894">in the case of the non-SBT mode (in the case of the ISP mode), the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the width and height of the current block (e.g., Table 4 above).</li>        <li id="ul0010-0003" num="0895">in the case of the non-SBT mode (the intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, the prediction mode of the current block is an intra prediction mode, secondary inverse transform is not performed with respect to the current block, and the current block is not in a matrix based intra prediction mode), the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the width and height of the current block (e.g., Table 4 above).</li>    </ul>    </li></ul></p><p id="p-0902" num="0896">Here, the case of the non-SBT mode (the case of the ISP mode or the case where the intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, the prediction mode of the current block is an intra prediction mode, secondary inverse transform is not performed with respect to the current block, and the current block is not in a matrix based intra prediction mode) may be divided into two cases, and, in the two cases, the horizontal transform type and the vertical transform type may be determined by the same method.</p><p id="p-0903" num="0897">That is, in two cases, that is, 1) the case of the ISP mode and 2) the case where the intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, the prediction mode of the current block is an intra prediction mode, secondary inverse transform is not performed with respect to the current block, and the current block is not in a matrix based intra prediction mode, the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected based on the width and height of the current block (e.g., Table 4 above).</p><p id="p-0904" num="0898">In contrast, when the derived implicit multi-transform selection information does not indicate implicit multi-transform selection (implicitMtsEnabled=0), the horizontal transform type trTypeHor and the vertical transform type trTypeVer are selected based on the signaled multi-transform selection information and Table of <figref idref="DRAWINGS">FIG. <b>25</b></figref>.</p><p id="p-0905" num="0899">Meanwhile, when the current block is a chroma component, the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as first transform indicating DCT-2 based integer transform regardless of the derived implicit multi-transform selection information. In addition, when the current block is in an ISP mode and secondary inverse transform is performed with respect to the current block, the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as first transform indicating DCT-2 based integer transform regardless of the derived implicit multi-transform selection information.</p><p id="p-0906" num="0900">In addition, when multi-transform selection enabled information sps_mts_enabled_flag indicates that multi-transform selection is not enabled, the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as first transform indicating DCT-2 based integer transform.</p><p id="p-0907" num="0901">In addition, when multi-transform selection enabled information sps_mts_enabled_flag indicates that multi-transform selection is not enabled and implicit multi-transform selection information does not indicate implicit multi-transform selection (implicitMtsEnabled=0), the horizontal transform type trTypeHor and the vertical transform type trTypeVer may be selected as first transform indicating DCT-2 based integer transform.</p><p id="p-0908" num="0902">In the above example, when multi-transform selection enabled information sps_mts_enabled_flag indicates that multi-transform selection is enabled, multi-transform selection enabled information may be set to a first value (e.g., 1).</p><p id="p-0909" num="0903">In the above example, when implicit multi-transform selection information implicitMtsEnabled indicates implicit multi-transform selection, the implicit multi-transform selection information may be set to a first value (e.g., 1). In addition, when implicit multi-transform selection information implicitMtsEnabled does not indicate implicit multi-transform selection, implicit multi-transform selection information may be set to a second value (e.g., 0).</p><p id="p-0910" num="0904">In the above example, when intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is enabled, intra prediction explicit multi-transform selection enabled information may be set to a first value (e.g., 1). In addition, when intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, intra prediction explicit multi-transform selection enabled information may be set to a second value (e.g., 0).</p><p id="p-0911" num="0905">In the above example, when inter prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is enabled, inter prediction explicit multi-transform selection enabled information may be set to a first value (e.g., 1). In addition, when inter prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, inter prediction explicit multi-transform selection enabled information may be set to a second value (e.g., 0).</p><p id="p-0912" num="0906">For example, when the current block is in an ISP (Intra Sub-block Partitions) mode, the determination may be made based on at least one of the width or the height of the current block, regardless of the intra prediction mode of the current block. Specifically, as in the example of Table 4 above, the horizontal transform type and the vertical transform type may be determined.</p><p id="p-0913" num="0907">For example, when the current block is in an ISP (Intra Sub-block Partitions) mode, implicit multi-transform selection information may be set to a value indicating implicit multi-transform selection.</p><p id="p-0914" num="0908">In addition, when intra prediction explicit multi-transform selection enabled information indicates that explicit multi-transform selection is not enabled, the prediction mode of the current block is an intra prediction mode, secondary inverse transform is not performed with respect to the current block, and the current block is not in a matrix based intra prediction mode, the implicit multi-transform selection information may be set to a value indicating implicit multi-transform selection.</p><p id="p-0915" num="0909">Here, when implicit multi-transform selection information indicates implicit multi-transform selection, the horizontal transform type and the vertical transform type may be determined based on whether the current block is in an SBT (Sub-Block Transform) mode.</p><p id="p-0916" num="0910">Specifically, when the implicit multi-transform selection information indicates implicit multi-transform selection and the current block is not in an SBT (Sub-Block Transform) mode, the horizontal transform type and the vertical transform type may be determined regardless of the intra prediction mode of the current block. Specifically, as in the example of Table 4 above, the horizontal transform type and the vertical transform type may be determined.</p><p id="p-0917" num="0911">When the current block is in an ISP (Intra Sub-block Partitions) mode and secondary inverse transform is performed, the horizontal transform type and the vertical transform type may be determined as first transform indicating DCT-2 based integer transform regardless of implicit multi-transform selection information.</p><p id="p-0918" num="0912">When the current block is a chroma component, the horizontal transform type and the vertical transform type may be determined as first transform indicating DCT-2 based integer transform, regardless of implicit multi-transform selection information.</p><p id="p-0919" num="0913">In an encoder, for improving the subject/objective quality of an image, a primary transform coefficient may be generated by performing a primary transform for a residual block, a secondary transform coefficient may be generated by performing a secondary transform for the primary transform coefficient, a quantized coefficient level may be generated by quantizing the secondary transform coefficient, and the quantized coefficient level may be entropy encoded.</p><p id="p-0920" num="0914">In a decoder, a quantized coefficient level may be entropy decoded, a secondary transform coefficient may be generated by dequantizing the quantized coefficient level, a primary transform coefficient may be generated by secondary-inverse transforming the secondary transform coefficient, and a reconstructed residual block may be generated by primary-inverse transforming the primary transform coefficient.</p><p id="p-0921" num="0915">As shown in <figref idref="DRAWINGS">FIG. <b>27</b></figref>, a secondary transform may be performed between a primary transform and a quantization in an encoder. In addition, a secondary inverse transform may be performed between a dequantization and a primary inverse transform in a decoder. Herein, a secondary transform may be a reduced secondary transform or a low-frequency non-separable transform (LFNST).</p><p id="p-0922" num="0916">At least one of transform matrix set information (index) and a transform matrix index indicating which transform is used as primary/secondary transform and inverse transform may be explicitly entropy encoded/decoded. Transform matrix set information and the transform matrix index may be included in secondary transform index information. Alternatively, a transform matrix index may mean secondary transform index information.</p><p id="p-0923" num="0917">In addition, transform matrix set information and/or a transform matrix index indicating which transform is used as primary/secondary transform and inverse transform may not be entropy encoded/decoded. Instead, transform matrix set information and/or a transform matrix index may be implicitly determined based on at least one coding parameter.</p><p id="p-0924" num="0918">Hereinafter will be described embodiments of an image encoding/decoding method and apparatus for performing at least one of primary/secondary transform and inverse transform and a recording medium for storing a bitstream.</p><p id="p-0925" num="0919">In the present specification, a matrix A&#xd7;B may mean a matrix with A columns and B rows, unless otherwise stated. Also, in a special case, it may mean a matrix with B columns and A rows.</p><p id="p-0926" num="0920">The non-separable transform may be performed on the following input samples, thereby generating output samples.</p><p id="p-0927" num="0921">In an encoder, input samples may be primary transform coefficients. In a decoder, input samples may be dequantized secondary transform coefficients.</p><p id="p-0928" num="0922">As an example of 4&#xd7;4 input samples, input samples may be expressed by a two-dimensional matrix form, as shown in Equation 5 below.</p><p id="p-0929" num="0000"><maths id="MATH-US-00005" num="00005"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mi>X</mi>     <mo>=</mo>     <mrow>      <mo>[</mo>      <mtable>       <mtr>        <mtd>         <msub>          <mi>X</mi>          <mn>00</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>01</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>02</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>03</mn>         </msub>        </mtd>       </mtr>       <mtr>        <mtd>         <msub>          <mi>X</mi>          <mn>10</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>11</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>12</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>13</mn>         </msub>        </mtd>       </mtr>       <mtr>        <mtd>         <msub>          <mi>X</mi>          <mn>20</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>21</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>22</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>23</mn>         </msub>        </mtd>       </mtr>       <mtr>        <mtd>         <msub>          <mi>X</mi>          <mn>30</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>31</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>32</mn>         </msub>        </mtd>        <mtd>         <msub>          <mi>X</mi>          <mn>33</mn>         </msub>        </mtd>       </mtr>      </mtable>      <mo>]</mo>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>5</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0930" num="0923">4&#xd7;4 input samples in the two-dimensional matrix form may be expressed by a one-dimensional vector form, as shown in Equation 6 below.</p><p id="p-0931" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><img id="CUSTOM-CHARACTER-00001" he="3.56mm" wi="2.79mm" file="US20230007290A1-20230105-P00001.TIF" alt="custom-character" img-content="character" img-format="tif"/>={<i>x</i><sub>00</sub><i>x</i><sub>01</sub><i>x</i><sub>02</sub><i>x</i><sub>03</sub><i>x</i><sub>10</sub><i>x</i><sub>11</sub><i>x</i><sub>12</sub><i>x</i><sub>13</sub><i>x</i><sub>20</sub><i>x</i><sub>21</sub><i>x</i><sub>22</sub><i>x</i><sub>23</sub><i>x</i><sub>30</sub><i>x</i><sub>31</sub><i>x</i><sub>32</sub><i>x</i><sub>33</sub>}<sup>T</sup>&#x2003;&#x2003;[Equation 6]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0932" num="0924">The 4&#xd7;4 input samples in the two-dimensional matrix form may be expressed by a one-dimensional vector form by using at least one of a raster scan, a horizontal scan, a vertical scan, a diagonal scan (up-right diagonal scan or down-left diagonal scan), a block-based diagonal scan, a block-based horizontal scan, and a block-based vertical scan.</p><p id="p-0933" num="0925">A non-separable transform may be performed as described in Equation 7 below. Here, <img id="CUSTOM-CHARACTER-00002" he="3.22mm" wi="2.46mm" file="US20230007290A1-20230105-P00002.TIF" alt="custom-character" img-content="character" img-format="tif"/> may mean a secondary-transformed coefficient vector in an encoder. In addition, in a decoder, it may mean a one-dimensional transform coefficient vector. T may mean an example of secondary transform matrix with 16&#xd7;16 size that is used for a 4&#xd7;4 input sample.</p><p id="p-0934" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><img id="CUSTOM-CHARACTER-00003" he="3.22mm" wi="2.46mm" file="US20230007290A1-20230105-P00003.TIF" alt="custom-character" img-content="character" img-format="tif"/>=<i>T&#xb7;</i><img id="CUSTOM-CHARACTER-00004" he="3.56mm" wi="2.79mm" file="US20230007290A1-20230105-P00004.TIF" alt="custom-character" img-content="character" img-format="tif"/><i/>&#x2003;&#x2003;[Equation 7]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0935" num="0926"><img id="CUSTOM-CHARACTER-00005" he="3.22mm" wi="2.46mm" file="US20230007290A1-20230105-P00005.TIF" alt="custom-character" img-content="character" img-format="tif"/> in 16&#xd7;1 form may be configured with 4&#xd7;4 output samples by using at least one of a raster scan, a horizontal scan, a vertical scan, a diagonal scan (up-right diagonal scan or down-left diagonal scan), a block-based diagonal scan, a block-based horizontal scan, and a block-based vertical scan.</p><p id="p-0936" num="0927">A secondary transform/inverse transform may be calculated by matrix multiplication, when performing a non-separable transform.</p><p id="p-0937" num="0928">To reduce computational complexity and a memory necessary for storing a transform matrix, the dimension of the transform matrix may be reduced. A reduced secondary transform/inverse transform may be performed in a transform/inverse transform process.</p><p id="p-0938" num="0929">A reduced secondary transform may be a process of mapping a N-dimensional vector to a R-dimensional vector. Here, the N-dimensional vector for secondary transform may mean input samples. In addition, the R-dimensional vector may mean output samples. Here, N and R may be positive integers, and R may be less than N in the reduced secondary transform.</p><p id="p-0939" num="0930">N/R may mean a reduction factor. In the case of a reduced secondary transform with 4&#xd7;4 size, a reduction factor may be 1, 2, or 4. In addition, in the case of a reduced secondary transform with 8&#xd7;8 size, a reduction factor may be 2, 3, 4, 6 or 8.</p><p id="p-0940" num="0931">In a reduced secondary transform, a R&#xd7;N transform matrix may be used instead of an N&#xd7;N transform matrix, as shown in <figref idref="DRAWINGS">FIG. <b>28</b></figref>. Also, in a reduced secondary inverse transform, an N&#xd7;R transform matrix may be used instead of an N&#xd7;N transform matrix. Here, the R&#xd7;N transform matrix may mean a matrix with N columns and R rows. Here, in addition, the N&#xd7;R transform matrix may mean a matrix with R columns and N rows.</p><p id="p-0941" num="0932">Here, R rows of a transform matrix may mean a R basis vector with N dimensions. A reduced secondary inverse transform, which is an inverse transform of the reduced secondary transform, may be a transposed form of the reduced secondary transform.</p><p id="p-0942" num="0933">As shown in <figref idref="DRAWINGS">FIG. <b>29</b></figref>, a secondary transform/inverse transform may be performed in an encoder/decoder.</p><p id="p-0943" num="0934">For example, a transform matrix with a specific size may be used for a reduced secondary transform/inverse transform.</p><p id="p-0944" num="0935">In the case of a reduced secondary transform with D&#xd7;D size, a transform matrix with C&#xd7;A or C&#xd7;B size may be used.</p><p id="p-0945" num="0936">When a C&#xd7;A transform matrix is used, at least one of the primary transform coefficients included in an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0946" num="0937">In addition, when a C&#xd7;A transform matrix is used, an output sample may be included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block.</p><p id="p-0947" num="0938">In the case of a reduced secondary transform with D&#xd7;D size, a transform matrix with A&#xd7;A size may be reduced to C&#xd7;B size so that a transform matrix with C&#xd7;B size may be used.</p><p id="p-0948" num="0939">When a C&#xd7;B transform matrix is used, at least one of the primary transform coefficients included in a remaining region except a lower-right E&#xd7;E region within an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0949" num="0940">In addition, when a C&#xd7;B transform matrix is used, an output sample may be included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block.</p><p id="p-0950" num="0941">In the case of a reduced secondary inverse transform with D&#xd7;D size, a transform matrix with A&#xd7;C or B&#xd7;C size may be used.</p><p id="p-0951" num="0942">When an A&#xd7;C transform matrix is used, at least one of the dequantized secondary transform coefficients included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0952" num="0943">In addition, when an A&#xd7;C transform matrix is used, an output sample may be included in an upper-left D&#xd7;D region of a block.</p><p id="p-0953" num="0944">In the case of a reduced secondary inverse transform with D&#xd7;D size, a transform matrix with A&#xd7;A size may be reduced to B&#xd7;C size so that a transform matrix with B&#xd7;C size may be used.</p><p id="p-0954" num="0945">When a B&#xd7;C transform matrix is used, at least one of the dequantized secondary transform coefficients included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0955" num="0946">In addition, when a B&#xd7;C transform matrix is used, an output sample may be included in the remaining region except a lower-right E&#xd7;E region within an upper-left D&#xd7;D region of a block.</p><p id="p-0956" num="0947">The A, B, C, D and E may be positive integers. For example, A, B, C, D and E may be 64, 48, 16, 8 and 4, respectively.</p><p id="p-0957" num="0948">Here, C may be equal to or less than A or B.</p><p id="p-0958" num="0949">In addition, B may be equal to or less than a value of D*D.</p><p id="p-0959" num="0950">In addition, C may be a value of E*E.</p><p id="p-0960" num="0951">In addition, E may be equal to or less than D.</p><p id="p-0961" num="0952">As another example, a transform matrix with a specific size may be used for a reduced secondary transform/inverse transform.</p><p id="p-0962" num="0953">In the case of a reduced secondary transform with D&#xd7;D size, a transform matrix with C&#xd7;A or C&#xd7;B size may be used.</p><p id="p-0963" num="0954">When a C&#xd7;A transform matrix is used, at least one of the primary transform coefficients included in an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0964" num="0955">In addition, when a C&#xd7;A transform matrix is used, an output sample may be included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block.</p><p id="p-0965" num="0956">In the case of a reduced secondary transform with D&#xd7;D size, a transform matrix with A&#xd7;A size may be reduced to C&#xd7;B size so that a transform matrix with C&#xd7;B size may be used.</p><p id="p-0966" num="0957">When a C&#xd7;B transform matrix is used, at least one of the primary transform coefficients included in a remaining region except a lower-right D&#xd7;E region within an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0967" num="0958">In addition, when a C&#xd7;B transform matrix is used, an output sample may be included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block.</p><p id="p-0968" num="0959">In the case of a reduced secondary inverse transform with D&#xd7;D size, a transform matrix with A&#xd7;C or B&#xd7;C size may be used.</p><p id="p-0969" num="0960">When an A&#xd7;C transform matrix is used, at least one of the dequantized secondary transform coefficients included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0970" num="0961">In addition, when an A&#xd7;C transform matrix is used, an output sample may be included in an upper-left D&#xd7;D region of a block.</p><p id="p-0971" num="0962">In the case of a reduced secondary inverse transform with D&#xd7;D size, a transform matrix with A&#xd7;A size may be reduced to B&#xd7;C size so that a transform matrix with B&#xd7;C size may be used.</p><p id="p-0972" num="0963">When a B&#xd7;C transform matrix is used, at least one of the dequantized secondary transform coefficients included in an upper-left E&#xd7;E region within an upper-left D&#xd7;D region of a block may be used as an input sample.</p><p id="p-0973" num="0964">In addition, when a B&#xd7;C transform matrix is used, an output sample may be included in the remaining region except a lower-right D&#xd7;E region within an upper-left D&#xd7;D region of a block.</p><p id="p-0974" num="0965">The A, B, C, D and E may be positive integers. For example, A, B, C, D and E may be 64, 32, 16, 8 and 4, respectively.</p><p id="p-0975" num="0966">Here, C may be equal to or less than A or B.</p><p id="p-0976" num="0967">In addition, B may be equal to or less than a value of D*D.</p><p id="p-0977" num="0968">In addition, C may be a value of E*E.</p><p id="p-0978" num="0969">In addition, E may be equal to or less than D.</p><p id="p-0979" num="0970">For example, at least one of a reduced secondary transform, a reduced secondary inverse transform, an input sample region, and an output sample region may be different according to a size of a current block.</p><p id="p-0980" num="0971">For example, when a size of a current block is D&#xd7;D, a transform matrix with C&#xd7;B size may be used as a reduced secondary transform, and a transform matrix with B&#xd7;C size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0011" list-style="none">    <li id="ul0011-0001" num="0000">    <ul id="ul0012" list-style="none">        <li id="ul0012-0001" num="0972">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left D&#xd7;D region of a block</li>        <li id="ul0012-0002" num="0973">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;E region of a block</li>        <li id="ul0012-0003" num="0974">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;E region of a block</li>        <li id="ul0012-0004" num="0975">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left D&#xd7;D region of a block</li>    </ul>    </li></ul></p><p id="p-0981" num="0976">As another example, when a size of a current block is C&#xd7;D or D&#xd7;C, a transform matrix with B&#xd7;B size may be used as a reduced secondary transform, and a transform matrix with B&#xd7;B size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0013" list-style="none">    <li id="ul0013-0001" num="0000">    <ul id="ul0014" list-style="none">        <li id="ul0014-0001" num="0977">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left D&#xd7;D region of a block</li>        <li id="ul0014-0002" num="0978">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;D region of a block</li>        <li id="ul0014-0003" num="0979">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;D region of a block</li>        <li id="ul0014-0004" num="0980">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left D&#xd7;D region of a block</li>    </ul>    </li></ul></p><p id="p-0982" num="0981">As another example, when a size of a current block is N&#xd7;D or D&#xd7;N, a transform matrix with B&#xd7;B size may be used as a reduced secondary transform, and a transform matrix with B&#xd7;B size may be used as a reduced secondary inverse transform. Here, N may be a positive integer. For example, it may be equal to or greater than B. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0015" list-style="none">    <li id="ul0015-0001" num="0000">    <ul id="ul0016" list-style="none">        <li id="ul0016-0001" num="0982">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in at least one of two upper-left D&#xd7;D regions of a block</li>        <li id="ul0016-0002" num="0983">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in at least one of two upper-left D&#xd7;D regions of a block</li>        <li id="ul0016-0003" num="0984">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in at least one of two upper-left D&#xd7;D regions of a block</li>        <li id="ul0016-0004" num="0985">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in at least one of two upper-left D&#xd7;D regions of a block</li>    </ul>    </li></ul></p><p id="p-0983" num="0986">As another example, when a size of a current block is C&#xd7;C, a transform matrix with C&#xd7;A size may be used as a reduced secondary transform, and a transform matrix with A&#xd7;C size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0017" list-style="none">    <li id="ul0017-0001" num="0000">    <ul id="ul0018" list-style="none">        <li id="ul0018-0001" num="0987">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right D&#xd7;D region within an upper-left C&#xd7;C region of a block</li>        <li id="ul0018-0002" num="0988">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;E region of a block</li>        <li id="ul0018-0003" num="0989">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;E region of a block</li>        <li id="ul0018-0004" num="0990">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right D&#xd7;D region within an upper-left C&#xd7;C region of a block</li>    </ul>    </li></ul></p><p id="p-0984" num="0991">As another example, when a size of a current block is larger than C&#xd7;C, a transform matrix with B&#xd7;A size may be used as a reduced secondary transform, and a transform matrix with A&#xd7;B size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0019" list-style="none">    <li id="ul0019-0001" num="0000">    <ul id="ul0020" list-style="none">        <li id="ul0020-0001" num="0992">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right D&#xd7;D region within an upper-left C&#xd7;C region of a block</li>        <li id="ul0020-0002" num="0993">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;D region of a block</li>        <li id="ul0020-0003" num="0994">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left D&#xd7;D region of a block</li>        <li id="ul0020-0004" num="0995">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right D&#xd7;D region within an upper-left C&#xd7;C region of a block</li>    </ul>    </li></ul></p><p id="p-0985" num="0996">The A, B, C, D and E may be positive integers. For example, A, B, C, D and E may be 48, 16, 8, 4 and 2, respectively.</p><p id="p-0986" num="0997">Here, C may be equal to or less than A or B.</p><p id="p-0987" num="0998">In addition, B may be equal to or less than a value of D*D.</p><p id="p-0988" num="0999">In addition, C may be a value of D*E.</p><p id="p-0989" num="1000">In addition, E may be equal to or less than D.</p><p id="p-0990" num="1001">As another example, at least one of a reduced secondary transform, a reduced secondary inverse transform, an input sample region, and an output sample region may be different according to a size of a current block.</p><p id="p-0991" num="1002">For example, when a size of a current block is 4&#xd7;4, a transform matrix with 8&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0021" list-style="none">    <li id="ul0021-0001" num="0000">    <ul id="ul0022" list-style="none">        <li id="ul0022-0001" num="1003">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0022-0002" num="1004">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0022-0003" num="1005">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0022-0004" num="1006">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-0992" num="1007">As another example, when a size of a current block is 8&#xd7;4 or 4&#xd7;8, a transform matrix with 16&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;16 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0023" list-style="none">    <li id="ul0023-0001" num="0000">    <ul id="ul0024" list-style="none">        <li id="ul0024-0001" num="1008">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0024-0002" num="1009">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0024-0003" num="1010">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0024-0004" num="1011">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-0993" num="1012">As another example, when a size of a current block is N&#xd7;4 or 4&#xd7;N, a transform matrix with 16&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;16 size may be used as a reduced secondary inverse transform. Here, N may be a positive integer. For example, it may be equal to or greater than 16. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0025" list-style="none">    <li id="ul0025-0001" num="0000">    <ul id="ul0026" list-style="none">        <li id="ul0026-0001" num="1013">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>        <li id="ul0026-0002" num="1014">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>        <li id="ul0026-0003" num="1015">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>        <li id="ul0026-0004" num="1016">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>    </ul>    </li></ul></p><p id="p-0994" num="1017">As another example, when a size of a current block is 8&#xd7;8, a transform matrix with 8&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0027" list-style="none">    <li id="ul0027-0001" num="0000">    <ul id="ul0028" list-style="none">        <li id="ul0028-0001" num="1018">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0028-0002" num="1019">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0028-0003" num="1020">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0028-0004" num="1021">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>    </ul>    </li></ul></p><p id="p-0995" num="1022">As another example, when a size of a current block is larger than 8&#xd7;8, a transform matrix with 16&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;16 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0029" list-style="none">    <li id="ul0029-0001" num="0000">    <ul id="ul0030" list-style="none">        <li id="ul0030-0001" num="1023">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0030-0002" num="1024">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0030-0003" num="1025">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0030-0004" num="1026">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>    </ul>    </li></ul></p><p id="p-0996" num="1027">As another example, at least one of a reduced secondary transform, a reduced secondary inverse transform, an input sample region, and an output sample region may be different according to a size of a current block.</p><p id="p-0997" num="1028">For example, when a size of a current block is 4&#xd7;4, a transform matrix with 8&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0031" list-style="none">    <li id="ul0031-0001" num="0000">    <ul id="ul0032" list-style="none">        <li id="ul0032-0001" num="1029">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0032-0002" num="1030">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0032-0003" num="1031">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0032-0004" num="1032">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-0998" num="1033">As another example, when a size of a current block is N&#xd7;4 or 4&#xd7;N, a transform matrix with 16&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;16 size may be used as a reduced secondary inverse transform. Here, N may be a positive integer. For example, it may be equal to or greater than 8. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0033" list-style="none">    <li id="ul0033-0001" num="0000">    <ul id="ul0034" list-style="none">        <li id="ul0034-0001" num="1034">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0034-0002" num="1035">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0034-0003" num="1036">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0034-0004" num="1037">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-0999" num="1038">As another example, when a size of a current block is 8&#xd7;8, a transform matrix with 8&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0035" list-style="none">    <li id="ul0035-0001" num="0000">    <ul id="ul0036" list-style="none">        <li id="ul0036-0001" num="1039">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0036-0002" num="1040">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0036-0003" num="1041">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0036-0004" num="1042">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>    </ul>    </li></ul></p><p id="p-1000" num="1043">As another example, when a size of a current block is larger than 8&#xd7;8, a transform matrix with 16&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;16 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0037" list-style="none">    <li id="ul0037-0001" num="0000">    <ul id="ul0038" list-style="none">        <li id="ul0038-0001" num="1044">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0038-0002" num="1045">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0038-0003" num="1046">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0038-0004" num="1047">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>    </ul>    </li></ul></p><p id="p-1001" num="1048">As another example, at least one of a reduced secondary transform, a reduced secondary inverse transform, an input sample region, and an output sample region may be different according to a size of a current block.</p><p id="p-1002" num="1049">For example, when a size of a current block is 4&#xd7;4, a size of a current block is 8&#xd7;4 or 4&#xd7;8, or a size of a current block is N&#xd7;4 or 4&#xd7;N, a transform matrix with 8&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;8 size may be used as a reduced secondary inverse transform. Here, N may be a positive integer. For example, it may be equal to or greater than 16. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0039" list-style="none">    <li id="ul0039-0001" num="0000">    <ul id="ul0040" list-style="none">        <li id="ul0040-0001" num="1050">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0040-0002" num="1051">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region or upper-left 2&#xd7;4 region of a block</li>        <li id="ul0040-0003" num="1052">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region or upper-left 2&#xd7;4 region of a block</li>        <li id="ul0040-0004" num="1053">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-1003" num="1054">As another example, when a size of a current block is 8&#xd7;8, a transform matrix with 8&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0041" list-style="none">    <li id="ul0041-0001" num="0000">    <ul id="ul0042" list-style="none">        <li id="ul0042-0001" num="1055">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0042-0002" num="1056">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0042-0003" num="1057">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0042-0004" num="1058">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block.</li>    </ul>    </li></ul></p><p id="p-1004" num="1059">As another example, when a size of a current block is larger than 8&#xd7;8, a transform matrix with 16&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;16 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0043" list-style="none">    <li id="ul0043-0001" num="0000">    <ul id="ul0044" list-style="none">        <li id="ul0044-0001" num="1060">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0044-0002" num="1061">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0044-0003" num="1062">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0044-0004" num="1063">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>    </ul>    </li></ul></p><p id="p-1005" num="1064">As another example, at least one of a reduced secondary transform, a reduced secondary inverse transform, an input sample region, and an output sample region may be different according to a size of a current block.</p><p id="p-1006" num="1065">For example, when a size of a current block is 4&#xd7;4, a transform matrix with 8&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0045" list-style="none">    <li id="ul0045-0001" num="0000">    <ul id="ul0046" list-style="none">        <li id="ul0046-0001" num="1066">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0046-0002" num="1067">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0046-0003" num="1068">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0046-0004" num="1069">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-1007" num="1070">As another example, when a size of a current block is 8&#xd7;4 or 4&#xd7;8, a transform matrix with 16&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;16 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0047" list-style="none">    <li id="ul0047-0001" num="0000">    <ul id="ul0048" list-style="none">        <li id="ul0048-0001" num="1071">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0048-0002" num="1072">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0048-0003" num="1073">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0048-0004" num="1074">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-1008" num="1075">As another example, when a size of a current block is N&#xd7;4 or 4&#xd7;N, a transform matrix with 16&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;16 size may be used as a reduced secondary inverse transform. Here, N may be a positive integer. For example, it may be equal to or greater than 16. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0049" list-style="none">    <li id="ul0049-0001" num="0000">    <ul id="ul0050" list-style="none">        <li id="ul0050-0001" num="1076">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>        <li id="ul0050-0002" num="1077">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>        <li id="ul0050-0003" num="1078">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>        <li id="ul0050-0004" num="1079">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in at least one of two upper-left 4&#xd7;4 regions of a block</li>    </ul>    </li></ul></p><p id="p-1009" num="1080">As another example, when a size of a current block is 8&#xd7;8 or a size of a current block is larger than 8&#xd7;8, a transform matrix with 8&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0051" list-style="none">    <li id="ul0051-0001" num="0000">    <ul id="ul0052" list-style="none">        <li id="ul0052-0001" num="1081">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0052-0002" num="1082">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0052-0003" num="1083">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0052-0004" num="1084">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>    </ul>    </li></ul></p><p id="p-1010" num="1085">As another example, at least one of a reduced secondary transform, a reduced secondary inverse transform, an input sample region, and an output sample region may be different according to a size of a current block.</p><p id="p-1011" num="1086">For example, when a size of a current block is 4&#xd7;4, a size of a current block is 8&#xd7;4 or 4&#xd7;8, or a size of a current block is N&#xd7;4 or 4&#xd7;N, a transform matrix with 8&#xd7;16 size may be used as a reduced secondary transform, and a transform matrix with 16&#xd7;8 size may be used as a reduced secondary inverse transform. Here, N may be a positive integer. For example, it may be equal to or greater than 16. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0053" list-style="none">    <li id="ul0053-0001" num="0000">    <ul id="ul0054" list-style="none">        <li id="ul0054-0001" num="1087">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>        <li id="ul0054-0002" num="1088">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region or upper-left 2&#xd7;4 region of a block</li>        <li id="ul0054-0003" num="1089">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region or upper-left 2&#xd7;4 region of a block</li>        <li id="ul0054-0004" num="1090">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in an upper-left 4&#xd7;4 region of a block</li>    </ul>    </li></ul></p><p id="p-1012" num="1091">As another example, when a size of a current block is 8&#xd7;8 or a size of a current block is larger than 8&#xd7;8, a transform matrix with 8&#xd7;48 size may be used as a reduced secondary transform, and a transform matrix with 48&#xd7;8 size may be used as a reduced secondary inverse transform. Embodiments of input and output samples of a reduced secondary transform/inverse transform may be described as follows.<ul id="ul0055" list-style="none">    <li id="ul0055-0001" num="0000">    <ul id="ul0056" list-style="none">        <li id="ul0056-0001" num="1092">Input sample of a reduced secondary transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>        <li id="ul0056-0002" num="1093">Output sample of a reduced secondary transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0056-0003" num="1094">Input sample of a reduced secondary inverse transform: at least one of secondary transform coefficients included in an upper-left 4&#xd7;2 region of a block</li>        <li id="ul0056-0004" num="1095">Output sample of a reduced secondary inverse transform: at least one of primary transform coefficients included in a remaining region except a lower-right 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block</li>    </ul>    </li></ul></p><p id="p-1013" num="1096">As reduced secondary transform matrices, there may be a total of J transform matrix sets and a total of K non-separable transform matrices per each transform matrix set. Here, J and K may be positive integers. For example, J may be 4 and K may be 2.</p><p id="p-1014" num="1097">Transform matrix set index lfnstTrSetIdx for a current block may be entropy encoded/decoded in at least one unit of CU, PU, TU, CB, PB and TB. Herein, in a decoder, a transform matrix set may be determined by using the entropy decoded transform matrix set index lfnstTrSetIdx.</p><p id="p-1015" num="1098">A transform matrix set may be determined according to an intra-prediction mode of a current block. A transform matrix set may be determined according to at least one of coding parameters of a current block and a neighboring block. A transform matrix set may be determined according to a prediction mode of a current block.</p><p id="p-1016" num="1099">For example, different transform matrix sets may be determined between a case where a prediction mode of a current block is an intra-prediction mode and a case where the prediction mode of the current block is an IBC mode. As another example, different transform matrix sets may be determined among cases where: a prediction mode of a current block is an intra-prediction mode; the prediction mode of the current block is an inter-prediction mode; and the prediction mode of the current block is an IBC mode.</p><p id="p-1017" num="1100">A transform matrix set may be determined according to a color component of a current block. For example, different transform matrix sets may be determined between a case where a color component of a current block is Y(luma) and a case where the color component of the current block is Cb(chroma) or Cr(chroma).</p><p id="p-1018" num="1101">A transform matrix set may be determined according to a size of a current block. For example, different transform matrix sets may be determined between a case where a size (product of horizontal size and vertical size) of a current block is equal to or less than 16 and a case where the size (product of horizontal size and vertical size) of the current block is greater than 16.</p><p id="p-1019" num="1102">A transform matrix set may be determined according to a form of a current block. For example, different transform matrix sets may be determined between a case where a form of a current block is square and a case where the form of the current block is non-square.</p><p id="p-1020" num="1103">A transform matrix set may be determined according to whether or not to partition a current block into sub-blocks during prediction. For example, different transform matrix sets may be determined between a case where a current block is partitioned into sub-blocks during prediction and a case where the current block is not partitioned into sub-blocks during prediction.</p><p id="p-1021" num="1104">A transform matrix set may be determined according to whether or not to use primary transform of a current block.</p><p id="p-1022" num="1105">As shown in Table 10, different transform matrix sets may be determined according to whether or not to use primary transform of a current block. Herein, even when primary transform/inverse transform is not performed for a current block, secondary transform/inverse transform may be performed.</p><p id="p-1023" num="1106">For example, when information on whether or not to use primary transform (transform_skip_flag) has a first value (for example, 0), a first transform matrix set may be determined.</p><p id="p-1024" num="1107">In addition, when information on whether or not to use primary transform (transform_skip_flag) does not have a first value (for example, 0), a second transform matrix set may be determined.</p><p id="p-1025" num="1108">Here, the first transform matrix set and the second transform matrix set may be different from each other.</p><p id="p-1026" num="0000"><tables id="TABLE-US-00010" num="00010"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="105pt" align="left"/><colspec colname="2" colwidth="7pt" align="center"/><colspec colname="3" colwidth="77pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="3" rowsep="1">TABLE 10</entry></row><row><entry/><entry namest="offset" nameend="3" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>Information on whether</entry><entry>0</entry><entry>1</entry></row><row><entry/><entry>or not to use transform</entry><entry/><entry/></row><row><entry/><entry>(transform_skip_flag)</entry><entry/><entry/></row><row><entry/><entry>Transform matrix</entry><entry>0</entry><entry>1</entry></row><row><entry/><entry>set index</entry><entry/><entry/></row><row><entry/><entry>(IfnstTRSetIdx)</entry></row><row><entry/><entry namest="offset" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1027" num="1109">A transform matrix set may be determined according to a primary transform type of a current block.</p><p id="p-1028" num="1110">As shown in Table 11, different transform matrix sets may be determined according to a type of primary transform for a current block.</p><p id="p-1029" num="1111">For example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined.</p><p id="p-1030" num="1112">For example, when a type for primary transform is a second transform (DCT-2 based integer transform or trTypeHor is not a first value (for example, 0) or trTypeVer is not a first value (for example, 0)), a second transform matrix set may be determined.</p><p id="p-1031" num="1113">Here, the first transform matrix set and the second transform matrix set may be different from each other.</p><p id="p-1032" num="1114">As another example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a second value (for example, 1)), a second transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a second value (for example, 1)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a third value (for example, 2)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a third value (for example, 2)), a second transform matrix set may be determined. Here, the first to third transform matrix sets may be different from one another.</p><p id="p-1033" num="1115">As another example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a second value (for example, 1)), a second transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a second value (for example, 1)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a third value (for example, 2)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a third value (for example, 2)), a first transform matrix set may be determined. Here, the first to third transform matrix sets may be different from one another.</p><p id="p-1034" num="0000"><tables id="TABLE-US-00011" num="00011"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="35pt" align="center"/><colspec colname="4" colwidth="28pt" align="center"/><colspec colname="5" colwidth="35pt" align="center"/><colspec colname="6" colwidth="28pt" align="center"/><thead><row><entry namest="1" nameend="6" rowsep="1">TABLE 11</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Horizontal</entry><entry>0</entry><entry>1</entry><entry>2</entry><entry>1</entry><entry>2</entry></row><row><entry>transform type</entry><entry>(DCT-2)</entry><entry>(DCT-7)</entry><entry>(DCT-8)</entry><entry>(DCT-7)</entry><entry>(DCT-8)</entry></row><row><entry>(trTypeHor)</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>Vertical</entry><entry>0</entry><entry>1</entry><entry>4</entry><entry>2</entry><entry>2</entry></row><row><entry>transform type</entry><entry>(DCT-2)</entry><entry>(DCT-7)</entry><entry>(DCT-7)</entry><entry>(DCT-8)</entry><entry>(DCT-8)</entry></row><row><entry>(trTypeVer)</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>Transform matrix</entry><entry>0</entry><entry>3</entry><entry>2</entry><entry>1</entry><entry>0</entry></row><row><entry>set index</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>(IfnstTrSetIdx)</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1035" num="1116">As another example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a second value (for example, 1)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a second value (for example, 1)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a third value (for example, 2)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a third value (for example, 2)), a second transform matrix set may be determined. Here, the first to third transform matrix sets may be different from one another.</p><p id="p-1036" num="1117">As another example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a second value (for example, 1)), a second transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a second value (for example, 1)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a third value (for example, 2)), a fourth transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a third value (for example, 2)), a first transform matrix set may be determined. Here the first to fourth transform matrix sets may be different from one another.</p><p id="p-1037" num="1118">As another example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a second value (for example, 1)), a second transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a second value (for example, 1)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a third value (for example, 2)), a fourth transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a third value (for example, 2)), a second transform matrix set may be determined. Here the first to fourth transform matrix sets may be different from one another.</p><p id="p-1038" num="1119">As another example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a second value (for example, 1)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a second value (for example, 1)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a third value (for example, 2)), a fourth transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a third value (for example, 2)), a second transform matrix set may be determined. Here the first to fourth transform matrix sets may be different from one another.</p><p id="p-1039" num="1120">As another example, when a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), a first transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a second value (for example, 1)), a second transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a second value (for example, 1)), a third transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) or trTypeVer is a third value (for example, 2)), a fourth transform matrix set may be determined. In addition, when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) or trTypeVer is a third value (for example, 2)), a fifth transform matrix set may be determined. Here, the first to fifth transform matrix sets may be different from one another.</p><p id="p-1040" num="1121">A transform matrix set may be determined according to a two-dimensional transform combination of a current block.</p><p id="p-1041" num="1122">As shown in Table 12, different transform matrix sets may be determined according to a two-dimensional transform combination of a current block.</p><p id="p-1042" num="1123">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is not a first value (for example, 0), a second transform matrix set may be determined. Here, the first transform matrix set and the second transform matrix set may be different from each other.</p><p id="p-1043" num="1124">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a second value (for example, 1), a second transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a third value (for example, 2), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fourth value (for example, 3), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fifth value (for example, 4), a second transform matrix set may be determined. Here, the first to third transform matrix sets may be different from one another.</p><p id="p-1044" num="1125">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a second value (for example, 1), a second transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a third value (for example, 2), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fourth value (for example, 3), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fifth value (for example, 4), a first transform matrix set may be determined. Here, the first to third transform matrix sets may be different from one another.</p><p id="p-1045" num="1126">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a second value (for example, 1), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a third value (for example, 2), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fourth value (for example, 3), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fifth value (for example, 4), a second transform matrix set may be determined. Here, the first to third transform matrix sets may be different from one another.</p><p id="p-1046" num="0000"><tables id="TABLE-US-00012" num="00012"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="63pt" align="center"/><colspec colname="2" colwidth="28pt" align="char"/><colspec colname="3" colwidth="21pt" align="char"/><colspec colname="4" colwidth="35pt" align="char"/><colspec colname="5" colwidth="21pt" align="char"/><colspec colname="6" colwidth="35pt" align="char"/><thead><row><entry/><entry namest="offset" nameend="6" rowsep="1">TABLE 12</entry></row><row><entry/><entry namest="offset" nameend="6" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>Multi-transform</entry><entry>0</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry></row><row><entry/><entry>selection index</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry/><entry>(mts_idx)</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry/><entry>Transform matrix</entry><entry>0</entry><entry>3</entry><entry>2</entry><entry>1</entry><entry>0</entry></row><row><entry/><entry>set index</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry/><entry>(lfnstTrSetIdx)</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry/><entry namest="offset" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1047" num="1127">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a second value (for example, 1), a second transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a third value (for example, 2), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fourth value (for example, 3), a fourth transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fifth value (for example, 4), a first transform matrix set may be determined. Here the first to fourth transform matrix sets may be different from one another.</p><p id="p-1048" num="1128">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a second value (for example, 1), a second transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a third value (for example, 2), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fourth value (for example, 3), a fourth transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fifth value (for example, 4), a second transform matrix set may be determined. Here the first to fourth transform matrix sets may be different from one another.</p><p id="p-1049" num="1129">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a second value (for example, 1), a second transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a third value (for example, 2), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fourth value (for example, 3), a fourth transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fifth value (for example, 4), a first transform matrix set may be determined. Here the first to fourth transform matrix sets may be different from one another.</p><p id="p-1050" num="1130">For example, when the multi-transform selection index mts_idx is a first value (for example, 0), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a second value (for example, 1), a first transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a third value (for example, 2), a third transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fourth value (for example, 3), a fourth transform matrix set may be determined. In addition, when the multi-transform selection index mts_idx is a fifth value (for example, 4), a second transform matrix set may be determined. Here, the first to fifth transform matrix sets may be different from one another.</p><p id="p-1051" num="1131">According to an embodiment, after the transform matrix index lfnst_idx is signaled, the multi-transform selection index mts_idx may be signaled. In addition, a multi-transform selection index may be signaled adaptively to a transform matrix index. For example, when a transform matrix index has a first value (for example, 0), that is, when secondary transform/inverse transform is not applied to a current block, a multi-transform selection index may be signaled. On the other hand, when a transform matrix index does not have a first value, that is, when secondary transform/inverse transform is applied to a current block, a multi-transform selection index may not be signaled.</p><p id="p-1052" num="1132">Herein, a non-separable transform matrix in each transform matrix set may be determined according to the transform matrix index lfnst_idx. Here, the transform matrix index lfnst_idx may be entropy encoded/decoded. In the following case, where the transform matrix index lfnst_idx is not a first value (for example, 0), a transform index may be selected according to a value of the transform matrix index lfnst_idx, and the selected transform matrix may be used for a reduced secondary transform/inverse transform.</p><p id="p-1053" num="1133">The transform matrix index may be signaled in an intra block.</p><p id="p-1054" num="1134">The transform matrix index may be signaled when at least one of a horizontal size and a vertical size of a current block is equal to or greater than N. Here, N may be a positive integer. For example, it may be 4. The transform matrix index may be signaled when an intra sub-block partitioning type (IntraSubPartitionsSplitType) is identical with ISP_NO_SPLIT. The transform matrix index may be signaled when no matrix based intra prediction mode is used. Herein, when information on whether or not to use a matrix based intra prediction mode (intra_mip_flag) has a first value (for example, 0), a transform matrix index may be signaled.</p><p id="p-1055" num="1135">According to an embodiment, when a size of a current block is less than a predetermined threshold, a transform matrix index may be signaled. For example, when the larger value of height and width of a current block is less than a predetermined threshold, a transform matrix index may be signaled. The threshold may be a value indicating a maximum size of a transform block (MaxTbSizeY).</p><p id="p-1056" num="1136">According to an embodiment, depending on the position of a last non-zero transform coefficient of a current block, whether or not to signal the transform matrix index lfnst_idx may be determined. For example, when a last non-zero transform coefficient of a current block is positioned on the upper-left corner of the current block, since there is only one non-zero transform coefficient in the current block, second transform/inverse transform is not performed. Accordingly, in this case, the transform matrix index lfnst_idx may not be signaled. Herein, it may be determined that secondary transform/inverse transform is not performed for a current block.</p><p id="p-1057" num="1137">According to another embodiment, when there is a non-zero transform coefficient outside the application region of secondary inverse transform for a current block, the transform matrix index lfnst_idx may not be signaled. For example, the application region of secondary inverse transform of a current block may be an upper-left sub-block of the current block. A size of a sub-block of a block with 4&#xd7;4 or larger size may be determined as 4&#xd7;4. The upper-left sub-block means a sub-block immediately adjacent to the upper-left corner of the block. When a sub-block in which a last transform coefficient of a current block is positioned is not an upper-left sub-block of the current block, the transform matrix index lfnst_idx may not be signaled. Herein, it may be determined that secondary transform/inverse transform is not performed for a current block. Herein, a sub-block may mean a coefficient group.</p><p id="p-1058" num="1138">According to yet another embodiment, the application region of secondary inverse transform of a current block may be a part of an upper-left sub-block of the current block. For example, when a size of a current block is 4&#xd7;4 or 8&#xd7;8, the application region of secondary inverse transform of a current block may be determined according to first eight transform coefficients in the scanning order of an upper-left sub-block. Accordingly, when a last transform coefficient of a current block is in the 9th position or later in a scanning order, the transform matrix index lfnst_idx may not be signaled. Herein, it may be determined that secondary transform/inverse transform is not performed for a current block.</p><p id="p-1059" num="1139">The transform matrix index may be signaled when no intra residual DPCM method is used. Herein, when information on whether or not to use an intra residual DPCM method (intra_bdpcm_flag) has a first value (for example, 0), a transform matrix index may be signaled.</p><p id="p-1060" num="1140">In addition, when information on whether or not to use an intra residual DPCM method (intra_bdpcm_flag) has a first value (for example, 0), a transform skip mode flag may be implicitly determined as a first value (for example, 0). In the present specification, a transform skip mode may mean a transform omission mode. When a transform skip mode flag is a first value (for example, 0), at least one of primary transform/inverse transform and secondary transform/inverse transform may be performed. In addition, when a transform skip mode flag is a second value (for example, 1), primary transform/inverse transform and secondary transform/inverse transform may not be performed.</p><p id="p-1061" num="1141">The transform matrix index may not be signaled when an intra residual DPCM method is used. Herein, when information on whether or not to use an intra residual DPCM method (intra_bdpcm_flag) has a second value (for example, 1), a transform matrix index may not be signaled.</p><p id="p-1062" num="1142">When the intra residual DPCM method is used, a transform skip mode flag may not be encoded/decoded/obtained. In an intra residual DPCM method, a transform process of residual signal may be skipped. Accordingly, when a DPCM method is applied to the intra residual signal, a transform skip mode flag may be implicitly determined as a second value (for example, 1). In other words, transform/inverse transform may not be performed for a current block. In addition, when the intra residual DPCM method is used, since transform/inverse transform is not performed for a current block, a transform matrix index may not be signaled.</p><p id="p-1063" num="1143">When the intra residual DPCM method is not used, a transform skip mode flag indicating whether or not to perform transform/inverse transform for a residual signal of a current block may be encoded/decoded/obtained. Accordingly, whether or not transform/inverse transform is applied to a current block may be determined, according to a transform skip mode flag.</p><p id="p-1064" num="1144">A method of encoding/decoding/obtaining and determining a transform skip mode flag according to whether or not to use an intra residual DPCM method may be independently determined for each color component.</p><p id="p-1065" num="1145">The transform matrix index may be signaled when an intra reference sample line indicator is 0. Herein, when an intra reference sample line indicator (intra_luma_ref_idx) is a first value (for example, 0), a transform matrix index may be signaled. When the reference sample line indicator is 0, intra prediction may be performed by using a nearest neighboring reference sample of a current block.</p><p id="p-1066" num="1146">The transform matrix index may be signaled when an intra luma MPM flag (intra_luma_mpm_flag) is a second value (for example, 1).</p><p id="p-1067" num="1147">The transform matrix index may be signaled when at least one of a horizontal size and a vertical size of a current block is less than N. Here, N may be a positive integer. For example, it may be 128.</p><p id="p-1068" num="1148">According to an embodiment, the transform matrix index may be signaled according to the multi-transform selection index mts_idx.</p><p id="p-1069" num="1149">For example, when the multi-transform selection index mts_idx is an M-th value (for example, M&#x2212;1), the transform matrix index may be signaled. Herein, when the multi-transform selection index mts_idx is an M-th value (for example, M&#x2212;1), a reduced secondary transform/inverse transform may be performed.</p><p id="p-1070" num="1150">As another example, when the multi-transform selection index mts_idx is not an M-th value (for example, M&#x2212;1), the transform matrix index may not be signaled. Herein, when the multi-transform selection index mts_idx is not an M-th value (for example, M&#x2212;1), a reduced secondary transform/inverse transform may not be performed.</p><p id="p-1071" num="1151">Herein, M may be a positive integer equal to or greater than 1. For example, M may be 1.</p><p id="p-1072" num="1152">According to an embodiment, when a current block is not partitioned into sub-blocks, the transform matrix index may be signaled. In addition, when a current block is partitioned into sub-blocks according to a first sub-block partitioning mode or a second sub-block partitioning mode, the transform matrix index may not be signaled. The current block may be CTU/CTB, CU/CB, TU/TB, etc.</p><p id="p-1073" num="1153">According to another embodiment, the transform matrix index may be signaled, irrespective of whether or not a current block is partitioned into sub-blocks. Accordingly, secondary transform/inverse transform may be applied to a sub-block of a current block, according to the transform matrix index.</p><p id="p-1074" num="1154">The transform matrix index may be signaled when at least one of a coded block flag in CU, a Y(luma) component coded block flag in TU/TB, a Cb(chroma) component coded block flag in TU/TB and a Cr(chroma) component coded block flag in TU/TB is a second value (for example, 1).</p><p id="p-1075" num="1155">For example, when an coded block flag in CU is a second value (for example, 1), a transform matrix index may be signaled in a CU, and a reduced secondary transform/inverse transform may be performed in the corresponding CU.</p><p id="p-1076" num="1156">For another example, when a Y(luma) component coded block flag in TU/TB is a second value (for example, 1), a transform matrix index may be signaled in a TU/TB, and a reduced secondary transform/inverse transform may be performed in the corresponding TU/TB.</p><p id="p-1077" num="1157">For another example, when a Cb(chroma) component coded block flag in TU/TB is a second value (for example, 1), a transform matrix index may be signaled in a TU/TB, and a reduced secondary transform/inverse transform may be performed in the corresponding TU/TB.</p><p id="p-1078" num="1158">For another example, when a Cr(chroma) component coded block flag in TU/TB is a second value (for example, 1), a transform matrix index may be signaled in a TU/TB, and a reduced secondary transform/inverse transform may be performed in the corresponding TU/TB.</p><p id="p-1079" num="1159">When the transform matrix index is not present in a bitstream, it may be inferred as a first value (for example, 0).</p><p id="p-1080" num="1160">According to tu_joint_cbcr_residual that is an indicator for an encoding/decoding method aggregating residual signals of chroma signals (Cb component and Cr component), the transform matrix index lfnst_idx may not be entropy encoded/decoded in a block (TB, TC) where tu_joint_cbcr_residual corresponds to a second value (for example, 1). In addition, the transform matrix index lfnst_idx may be entropy encoded/decoded in a block (TB, TU) where tujoint_cbcr_residual corresponds to a first value (for example, 0).</p><p id="p-1081" num="1161">For example, when a residual signal of a specific component is not present in a bitstream due to tu_joint_cbcr_residual, the transform matrix index lfnst_idx may not be entropy encoded/decoded in a block (TB, TU) for the corresponding component.</p><p id="p-1082" num="1162">Here, tujoint_cbcr_residual may mean whether or not a residual signal of a Cb component is used to derive a residual signal of a Cb component and a Cr component.</p><p id="p-1083" num="1163">For example, when tu_joint_cbcr_residual is a first value (for example, 0), a residual signal of a Cr component may be present in a bitstream according to another syntax element value. In addition, when tu_joint_cbcr_residual is a second value (for example, 1), a residual signal of a Cb component may be used to derive a residual signal of a Cb component and a Cr component.</p><p id="p-1084" num="1164">When tu_joint_cbcr_residual means whether or not a residual signal of a Cb component is used to derive a residual signal of a Cb component and a Cr component, a residual signal for a Cr component may not be present in a bitstream. In such a case, the transform matrix index lfnst_idx may not be entropy encoded/decoded in a block (TB, TU) for a Cr component.</p><p id="p-1085" num="1165">In addition, tu_joint_cbcr_residual may mean whether or not a residual signal of a Cr component is used to derive a residual signal of a Cb component and a Cr component.</p><p id="p-1086" num="1166">For example, when tujoint_cbcr_residual is a first value (for example, 0), a residual signal of a Cb component may be present in a bitstream according to another syntax element value. In addition, when tujoint_cbcr_residual is a second value (for example, 1), a residual signal of a Cr component may be used to derive a residual signal of a Cb component and a Cr component.</p><p id="p-1087" num="1167">When tu_joint_cbcr_residual means whether or not a residual signal of a Cr component is used to derive a residual signal of a Cb component and a Cr component, a residual signal for a Cb component may not be present in a bitstream. In such a case, the transform matrix index lfnst_idx may not be entropy encoded/decoded in a block (TB, TU) for a Cb component.</p><p id="p-1088" num="1168">According to an embodiment, tujoint_cbcr_residual may be signaled when both tu_cb_coded_flag, that is, information on whether or not there is a transform coefficient of a Cb component, and tu_cr_coded_flag, that is, information on whether or not there is a transform coefficient of a Cr component indicate a second value (for example, 1). Alternatively, tujoint_cbcr_residual may be signaled, when a current block is intra predicted and either tu_cb_coded_flag, that is, information on whether or not there is a transform coefficient of a Cb component, or tu_cr_coded_flag, that is, information on whether or not there is a transform coefficient of a Cr component indicates a second value (for example, 1).</p><p id="p-1089" num="1169">When tu_joint_cbcr_residual indicates a second value (for example, 1), according to tu_cb_coded_flag, tu_cr_coded_flag and joint_cbcr_sign_flag, transform coefficients of a Cb component and a Cr component may be determined as follows.</p><p id="p-1090" num="1170">According to joint_cbcr_sign_flag indicating whether or not transform coefficients of a Cb component and a Cr component have a same sign, signs of the Cb component and the Cr component may be determined. For example, when joint_cbcr_sign_flag_indicates that transform coefficients of a Cb component and a Cr component have a same sign, it may be determined that the Cb component and the Cr component have a same sign. On the contrary, when joint_cbcr_sign_flag_indicates that transform coefficients of a Cb component and a Cr component have opposite signs, it may be determined that signs of the Cb component and the Cr component are opposite to each other.</p><p id="p-1091" num="1171">When both tu_cb_coded_flag and tu_cr_coded_flag indicate a second value (for example, 1) or when tu_cb_coded_flag indicates a second value (for example, 1) and tu_cr_coded_flag indicates a first value (for example, 0), a transform coefficient of a Cb component may be signaled. In addition, when tu_cr_coded_flag indicates a second value (for example, 1) and tu_cb_coded_flag indicates a first value (for example, 0), a transform coefficient of a Cr component may be signaled.</p><p id="p-1092" num="1172">When both tu_cb_coded_flag and tu_cr_coded_flag indicate a second value (for example, 1), it may be determined that a transform coefficient of a Cr component and a transform coefficient of a Cb component have a same absolute value. Accordingly, when joint_cbcr_sign_flag_indicates that transform coefficients of a Cb component and a Cr component have a same sign, it may be determined that the transform coefficient of the Cr component is the same as that of the signaled Cb component. On the contrary, when joint_cbcr_sign_flag indicates that transform coefficients of a Cb component and a Cr component do not have a same sign, the transform coefficient of the Cr component may be determined as &#x2212;1 times the transform coefficient of the signaled Cb component.</p><p id="p-1093" num="1173">When tu_cb_coded_flag indicates a second value (for example, 1) and tu_cr_coded_flag indicates a first value (for example, 0), an absolute value of a transform coefficient of a Cr component may be determined from a value obtained by dividing an absolute value of a transform coefficient of a Cb component by 2. Accordingly, when joint_cbcr_sign_flag_indicates that transform coefficients of a Cb component and a Cr component have a same sign, the transform coefficient of the Cr component may be determined from a value obtained by dividing the transform coefficient of the signaled Cb component by 2. On the contrary, when joint_cbcr_sign_flag indicates that transform coefficients of a Cb component and a Cr component do not have a same sign, the transform coefficient of the Cr component may be determined from a value obtained by dividing the transform coefficient of the signaled Cb component by &#x2212;2.</p><p id="p-1094" num="1174">When tu_cr_coded_flag indicates a second value (for example, 1) and tu_cb_coded_flag indicates a first value (for example, 0), an absolute value of a transform coefficient of a Cb component may be determined from a value obtained by dividing an absolute value of a transform coefficient of a Cr component by 2. Accordingly, when joint_cbcr_sign_flag_indicates that transform coefficients of a Cb component and a Cr component have a same sign, the transform coefficient of the Cb component may be determined from a value obtained by dividing the transform coefficient of the signaled Cr component by 2. On the contrary, when joint_cbcr_sign_flag_indicates that transform coefficients of a Cb component and a Cr component do not have a same sign, the transform coefficient of the Cb component may be determined from a value obtained by dividing the transform coefficient of the signaled Cr component by &#x2212;2.</p><p id="p-1095" num="1175">Information on whether or not the transform coefficient exists may mean a coding block flag.</p><p id="p-1096" num="1176">For example, when a reduced secondary transform with 8&#xd7;8 size using a 16&#xd7;48 transform matrix is performed, a transform coefficient that is not zero (non-zero coefficient) may be generated in an upper-left 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block.</p><p id="p-1097" num="1177">In other words, only a transform coefficient having a value of 0 (zero coefficient) may be generated in the remaining region except an upper-left 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block.</p><p id="p-1098" num="1178">Accordingly, when there is a non-zero transform coefficient in the remaining region except an upper-left 4&#xd7;4 region within an upper-left 8&#xd7;8 region of a block, a transform matrix index may not be entropy encoded/decoded on the ground that no reduced secondary transform is performed. In such a case, as a transform matrix index is inferred as a first value (for example, 0), reduced secondary transform/inverse transform may not be performed.</p><p id="p-1099" num="1179">In addition, irrespective of whether or not the non-zero transform coefficient exists, a transform matrix index may be entropy encoded/decoded.</p><p id="p-1100" num="1180">For example, in the case of a dual tree structure, a transform matrix index for a luma component and a transform matrix index for a chroma component may be signaled, respectively.</p><p id="p-1101" num="1181">As another example, in the case of a non-dual tree structure (or in the case of an inter-picture slice), a transform matrix index for a luma component and a transform matrix index for a chroma component may be jointly signaled.</p><p id="p-1102" num="1182">In a secondary transform, a 4&#xd7;4 non-separable transform or an 8&#xd7;8 non-separable transform may be performed according to a block (TB or TU) size.</p><p id="p-1103" num="1183">For example, a 4&#xd7;4 non-separable transform may be used, when the smaller value of the horizontal size and the vertical size of a current block is less than N. Here, N may be a positive integer. For example, N may be 8.</p><p id="p-1104" num="1184">When Mn (horizontal size of a current block, vertical size of the current block) &#x3c;8, 4&#xd7;4 non-separable transform/inverse transform may be used for the current block.</p><p id="p-1105" num="1185">Also, for example, an 8&#xd7;8 non-separable transform may be used, when the smaller value of the horizontal size and the vertical size of a current block is greater than N. Here, N may be a positive integer. For example, N may be 4.</p><p id="p-1106" num="1186">When Mn (horizontal size of a current block, vertical size of the current block) &#x3e;4, 8&#xd7;8 non-separable transform/inverse transform may be used for the current block.</p><p id="p-1107" num="1187">For example, when both the horizontal size and the vertical size of a current block are equal to or greater than N, an 8&#xd7;8 reduced secondary transform may be performed. Here, N may be a positive integer. For example, N may be 8.</p><p id="p-1108" num="1188">Otherwise, as another example, (when both the horizontal size and the vertical size of a current block are neither equal to nor greater than N), a 4&#xd7;4 reduced secondary transform may be performed. Here, N may be a positive integer. For example, N may be 8.</p><p id="p-1109" num="1189">When at least one of inter-picture slice and intra-picture slice is an intra block (at least one of a coding block, a prediction block, and a transform block), a reduced secondary transform/inverse transform may be performed for at least one of a luma component and a chroma component.</p><p id="p-1110" num="1190">In addition, a reduced secondary transform/inverse transform may be performed when the following conditions are all satisfied.</p><p id="p-1111" num="1191">The horizontal size or the vertical size of a current block is equal to or greater than N (Here, N may be a positive integer. For example, N may be 4).</p><p id="p-1112" num="1192">Transform skip mode flag (information on whether or not to use a transform: transform_skip_flag) is a first value (for example, 0).</p><p id="p-1113" num="1193">In a secondary transform, a 4&#xd7;4 non-separable transform or an 8&#xd7;8 non-separable transform may be performed according to a block (TB or TU) size.</p><p id="p-1114" num="1194">For example, a 4&#xd7;4 non-separable transform may be used, when the smaller value of the horizontal size and the vertical size of a current block is less than N. Here, N may be a positive integer. For example, N may be 8.</p><p id="p-1115" num="1195">When Min (horizontal size of a current block, vertical size of the current block) &#x3c;8, 4&#xd7;4 non-separable transform/inverse transform may be used for the current block.</p><p id="p-1116" num="1196">Also, for example, an 8&#xd7;8 non-separable transform may be used, when the smaller value of the horizontal size and the vertical size of a current block is greater than N. Here, N may be a positive integer. For example, N may be 4.</p><p id="p-1117" num="1197">When Min (horizontal size of a current block, vertical size of the current block) &#x3e;4, 8&#xd7;8 non-separable transform/inverse transform may be used for the current block.</p><p id="p-1118" num="1198">The non-separable transform may mean a reduced secondary transform.</p><p id="p-1119" num="1199">Depending on whether or not a reduced secondary transform/inverse transform is performed, deblocking filtering may be performed on a block boundary.</p><p id="p-1120" num="1200">For example, when a reduced secondary transform/inverse transform is performed for at least one of neighboring blocks adjacent to a block boundary, the block boundary may be set as a target block boundary to be deblocking filtered. Also, deblocking filtering may be performed for the block boundary.</p><p id="p-1121" num="1201">As another example, when none of the neighboring blocks adjacent to a block boundary undergoes a secondary transform/inverse transform, the block boundary may not be set as a target block boundary to be deblocking filtered. Also, deblocking filtering may not be performed for the block boundary.</p><p id="p-1122" num="1202">Hereinafter will be described syntax element information necessary for implementing a reduced secondary transform/inverse transform in an encoder/decoder, meaning of syntax element information, and an embodiment of encoding/decoding process.</p><p id="p-1123" num="1203">Syntax element information necessary for reduced secondary transform/inverse transform may include at least one of sps_lfnst_enabled_flag, which is information on whether or not a reduced secondary transform/inverse transform is performed in a sequence unit, a transform matrix index lfnst_idx, and transform matrix set information.</p><p id="p-1124" num="1204">Tables 13 to 26 show an example of syntax element information necessary for reduced secondary transform/inverse transform and an example of deriving a transform matrix set index according to an intra-prediction mode (predModeIntra). At least one of syntax elements necessary for reduced secondary transform/inverse transform may be entropy encoded/decoded in at least one of a parameter set, a header, a brick, a coding tree unit (CTU), a coding unit (Coding Unit), a prediction unit (PU), a transform unit (TU), a coding block (CB), a prediction block (PB), and a transform block (TB).</p><p id="p-1125" num="1205">Herein, a parameter set may be at least one of a video parameter set, a decoding parameter set, a sequence parameter set, an adaptation parameter set, and a picture parameter set. A header may be at least one of a picture header, a sub-picture header, a slice header, a tile group header, and a tile header.</p><p id="p-1126" num="1206">Herein, when using a syntax element for the reduced secondary transform/inverse transform in at least one of the signaled units including a parameter set, a header, a brick, a CTU, a CU, a PU, a TU, a CB, a PB, and a TB, a reduced secondary transform/inverse transform may be performed.</p><p id="p-1127" num="1207">For example, when a syntax element for the reduced secondary transform/inverse transform is entropy encoded/decoded in a sequence parameter set, a reduced secondary transform/inverse transform may be performed by using a syntax element for reduced secondary transform/inverse transform having a same syntax element value in a sequence unit.</p><p id="p-1128" num="1208">As another example, when a syntax element for the reduced secondary transform/inverse transform is entropy encoded/decoded in a slice header, a reduced secondary transform/inverse transform may be performed by using a syntax element for reduced secondary transform/inverse transform having a same syntax element value in a slice unit.</p><p id="p-1129" num="1209">As yet another example, when a syntax element for the reduced secondary transform/inverse transform is entropy encoded/decoded in an adaptation parameter set, a reduced secondary transform/inverse transform may be performed by using a syntax element for reduced secondary transform/inverse transform having a same syntax element value in a unit that refers to a same adaptation parameter set.</p><p id="p-1130" num="1210">As shown in Table 13, sps_lfnst_enabled_flag may mean information on whether or not a reduced secondary transform/inverse transform is performed in a sequence unit.</p><p id="p-1131" num="1211">For example, when sps_lfnst_enabled_flag is a first value (for example, 0), it may indicate that a reduced secondary transform/inverse transform is not performed in a sequence unit. When sps_lfnst_enabled_flag is a second value (for example, 1), it may indicate that a reduced secondary transform/inverse transform is performed in a sequence unit.</p><p id="p-1132" num="1212">As another example, sps_lfnst_enabled_flag may mean whether or not the transform matrix index lfnst_idx is present in at least one of CU, PU, TU, CB, PB, and TB.</p><p id="p-1133" num="1213">For example, when sps_lfnst_enabled_flag is a first value (for example, 0), it may indicate that the transform matrix index is not present in at least one of CU, PU, TU, CB, PB and TB. When sps_lfnst_enabled_flag is a second value (for example, 1), it may indicate that the transform matrix index is present in at least one of CU, PU, TU, CB, PB and TB.</p><p id="p-1134" num="1214">When sps_lfnst_enabled_flag is not present in a bitstream, sps_lfnst_enabled_flag may be inferred as a first value (for example, 0).</p><p id="p-1135" num="0000"><tables id="TABLE-US-00013" num="00013"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 13</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Descriptor</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="133pt" align="left"/><colspec colname="2" colwidth="63pt" align="left"/><tbody valign="top"><row><entry/><entry>seq parameter set rbsp( ) {</entry><entry/></row><row><entry/><entry>&#x2003;sps lfnst enabled flag</entry><entry>u(1)</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1136" num="1215">As shown in Tables 14 to 18, lfnst_idx[x0][y0] may a transform matrix index indicating which one of transform matrix indexes in a transform matrix set is to be used for a reduced secondary transform/inverse transform.</p><p id="p-1137" num="1216">Herein, when lfnst_idx[x0][y0] is a first value (for example, 0), a reduced secondary transform/inverse transform may not be performed in a current block. In addition, when lfnst_idx[x0][y0] is a second value (for example, 1), a first matrix indicated by lfnst_idx[x0][y0] among transform matrices of a transform matrix set in a current block may be used for a reduced secondary transform/inverse transform. In addition, when lfnst_idx[x0][y0] is a third value (for example, 2), a second matrix indicated by lfnst_idx[x0][y0] among transform matrices of a transform matrix set in a current block may be used for a reduced secondary transform/inverse transform.</p><p id="p-1138" num="1217">The lfnst_idx[x0][y0] may have a value from 0 to N. Here, N may be a positive integer. For example, N may be 2.</p><p id="p-1139" num="1218">The lfnst_idx[x0][y0] may be entropy encoded/decoded in the following case.</p><p id="p-1140" num="1219">As in the examples of Table 14 and Table 15, when numZeroOutSigCoeff is a first value (for example, 0) and (numSigCoeff&#x3e;((treeType=SINGLE_TREE)?M:N)) is satisfied, lfnst_idx[x0][y0] may be entropy encoded/decoded.</p><p id="p-1141" num="1220">Alternatively, as in the example of Table 16, when (numSigCoeff&#x3e;((treeType=SINGLE_TREE)?M:N)) is satisfied irrespective of a value of numZeroOutSigCoeff, lfnst_idx[x0][y0] may be entropy encoded/decoded.</p><p id="p-1142" num="1221">Alternatively, as in the example of Table 17, when numZeroOutSigCoeffis a first value (for example, 0), irrespective of whether or not (numSigCoeff&#x3e;((treeType=SINGLE_TREE)?M:N)) is satisfied, lfnst_idx[x0][y0] may be entropy encoded/decoded.</p><p id="p-1143" num="1222">Alternatively, as in the example of Table 18, lfnst_idx[x0][y0] may be entropy encoded/decoded, irrespective of a value of numZeroOutSigCoeff and of whether or not (numSigCoeff&#x3e;((treeType=SINGLE_TREE)?M:N)) is satisfied.</p><p id="p-1144" num="1223">Here, M and N may be positive integers. For example, M may be 2 and N may be 1.</p><p id="p-1145" num="1224">When lfnst_idx[x0][y0] is not present in a bitstream, lfnst_idx[x0][y0] may be inferred as a value of 0.</p><p id="p-1146" num="0000"><tables id="TABLE-US-00014" num="00014"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="364pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 14</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Descriptor</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="336pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>coding_unit( x0, y0, cbWidth, cbHeight, treeType ) {</entry><entry/></row><row><entry>&#x2003;if( !pcm_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;if( CuPredMode[ x0 ][ y0 ] != MODE_INTRA &#x26;&#x26; general_merge_flag[ x0 ][ y0 ] = = 0 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;cu_cbf</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;if( cu_cbf ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numZeroOutSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;transform_tree( x0, y0, cbWidth, cbHeight, treeType )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstWidth = ( treeType = = DUAL_TREE_CHROMA ) ? cbWidth / SubWidthC : cbWidth</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstHeight = ( treeType = = DUAL_TREE_CHROMA ) ? cbHeight / SubHeightC : cbHeight</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;if( Min( lfnstWidth, lfnstHeight ) &#x3e;= 4 &#x26;&#x26; sps_lfnst_enabled_flag = = 1 &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;CuPredMode[ x0 ][ y0 ] = = MODE_INTRA &#x26;&#x26; IntraSubPartitionsSplitType = = ISP_NO_SPLIT &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;!intra_mip_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( ( numSigCoeff &#x3e; ( ( treeType = = SINGLE_TREE ) ? 2 : 1 ) ) &#x26;&#x26; numZeroOutSigCoeff = = 0 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;lfnst_idx[ x0 ][ y0 ]</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;}</entry><entry/></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1147" num="0000"><tables id="TABLE-US-00015" num="00015"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="266pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 15</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Descriptor</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="238pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>residual_coding( x0, y0, log2TbWidth, log2TbHeight cIdx ) {</entry><entry/></row><row><entry>&#x2003;if( sig_coeff_flag[ xC ][ yC ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;if( !transform_skip_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numSigCoeff++</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;if( ( n &#x3e;= 8 &#x26;&#x26; i = = 0 &#x26;&#x26; ( log2TbWidth = = 2 | | log2TbWidth = = 3 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x26;&#x26; ( log2TbWidth = = log2TbHeight ) ) | | ( ( i = = 1 | | i = = 2 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x26;&#x26; log2TbWidth &#x3e;= 3 &#x26;&#x26; log2TbHeight &#x3e;= 3 ) ) </entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;numZeroOutSigCoeff++</entry><entry/></row><row><entry>&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;&#x2003;abs_level_gtx_flag[ n ][ 0 ]</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;remBinsPass1&#x2212; &#x2212;</entry><entry/></row><row><entry>&#x2003;&#x2003;if( abs_level_gtx_flag[ n ][ 0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;par_level_flag[ n ]</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;remBinsPass1&#x2212; &#x2212;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;abs_level_gtx_flag[ n ][ 1 ]</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;remBinsPass1&#x2212; &#x2212;</entry><entry/></row><row><entry>&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;&#x2003;if( lastSigScanPosSb = = &#x2212;1 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lastSigScanPosSb = n</entry><entry/></row><row><entry>&#x2003;&#x2003;firstSigScanPosSb = n</entry><entry/></row><row><entry>&#x2003;}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1148" num="0000"><tables id="TABLE-US-00016" num="00016"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="371pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 16</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Descriptor</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="343pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>coding_unit( x0, y0, cbWidth, cbHeight, treeType ) {</entry><entry/></row><row><entry>&#x2003;if( !pcm_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;if( CuPredMode[ x0 ][ y0 ] != MODE_INTRA &#x26;&#x26; general_merge_flag[ x0 ][ y0 ] = = 0 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;cu_cbf</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;if( cu_cbf ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numZeroOutSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;transform_tree( x0, y0, cbWidth, cbHeight, treeType )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstWidth = ( treeType = = DUAL_TREE_CHROMA ) ? cbWidth / SubWidthC : cbWidth</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstHeight = ( treeType = = DUAL_TREE_CHROMA ) ? cbHeight / SubHeightC : cbHeight</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;if( Min( lfnstWidth, lfnstHeight ) &#x3e;= 4 &#x26;&#x26; sps_lfnst_enabled_flag = = 1 &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;CnPredMode[ x0 ][ y0 ] = = MODE_INTRA &#x26;&#x26; IntraSubPartitionsSplitType = = ISP_NO_SPLIT &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;!intra_mip_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( numSigCoeff &#x3e; ( ( treeType = = SINGLE_TREE ) ? 2 : 1 ) )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;lfnst_idx[ x0 ][ y0 ]</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;}</entry><entry/></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1149" num="0000"><tables id="TABLE-US-00017" num="00017"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="371pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 17</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Descriptor</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="343pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>coding_unit( x0, y0, cbWidth, cbHeight, treeType ) {</entry><entry/></row><row><entry>&#x2003;if( !pcm_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;if( CuPredMode[ x0 ][ y0 ] != MODE_INTRA &#x26;&#x26; general_merge_flag[ x0 ][ y0 ] = = 0 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;cu_cbf</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;if( cu_cbf ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numZeroOutSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;transform_tree( x0, y0, cbWidth, cbHeight, treeType )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstWidth = ( treeType = =DUAL_TREE_CHROMA ) ? cbWidth / SubWidthC : cbWidth</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstHeight = ( TreeType = = DUAL_TREE_CHROMA ) ? cbHeight / SubHeightC : cbHeight</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;if( Min( lfnstWidth, lfnstHeight ) &#x3e;= 4 &#x26;&#x26; sps_lfnst_enabled_flag = = 1 &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;CuPredMode[ x0 ][ y0 ] = = MODE_INTRA &#x26;&#x26; IntraSubPartitionsSplitType = = ISP_NO_SPLIT &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;!intra_mip_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( numZeroOutSigCoeff = = 0 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;lfnst_idx[ x0 ][ y0 ]</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;}</entry><entry/></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1150" num="0000"><tables id="TABLE-US-00018" num="00018"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="357pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 18</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Descriptor</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="329pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>coding_unit( x0, y0, cbWidth, cbHeight, treeType ) {</entry><entry/></row><row><entry>&#x2003;if( !pcm_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;if( CuPredMode[ x0 ][ y0 ] != MODE_INTRA &#x26;&#x26; general_merge_flag[ x0 ][ y0 ] = = 0 )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;cu_cbf</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;if( cu_cbf ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;numZeroOutSigCoeff = 0</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;transform_tree( x0, y0, cbWidth, cbHeight, treeType )</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstWidth = ( treeType = = DUAL_TREE_CHROMA ) ? cbWidth / SubWidthC : cbWidth</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;lfnstHeight = ( treeType = = DUAL_TREE_CHROMA ) ? cbHeight / SubHeightC : cbHeight</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;if( Min( lfnstWidth, lfnstHeight ) &#x3e;= 4 &#x26;&#x26; sps_lfnst_enabled_flag = = 1 &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;CuPredMode[ x0 ][ y0 ] = = MODE_INTRA &#x26;&#x26; IntraSubPartitionsSplitType = = ISP_NO_SPLIT &#x26;&#x26;</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;!intra_mip_flag[ x0 ][ y0 ] ) {</entry><entry/></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;lfnst_idx[ x0 ][ y0 ]</entry><entry>ae(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;&#x2003;}</entry><entry/></row><row><entry>&#x2003;}</entry><entry/></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1151" num="1225">For I slice, qtbtt_dual_tree_intra_flag may mean that each CTU is partitioned into 64&#xd7;64 coding units and a 64&#xd7;64 coding unit is used as a root node of a luma component and a chroma component.</p><p id="p-1152" num="1226">For example, when qtbtt_dual_tree_intra_flag is a first value (for example, 0), each CTU may be partitioned into 64&#xd7;64 coding units and a 64&#xd7;64 coding unit may not be used as a root node of a luma component and a chroma component. On the other hand, when qtbtt_dual_tree_intra_flag is a second value (for example, 1), each CTU may be partitioned into 64&#xd7;64 coding units and a 64&#xd7;64 coding unit may be used as a root node of a luma component and a chroma component.</p><p id="p-1153" num="1227">When qtbtt_dual_tree_intra_flag is a first value (for example, 0), a single tree structure may be used for block partition for a luma component and block partition for a chroma component. According to a single tree structure, a single block partition structure is used for block partition of a luma component and block partition of a chroma component. However, according to a type of a chroma component, a block size of a luma component and a block size of the chroma component may be different from each other. A single tree type may be identified as SINGLE_TREE.</p><p id="p-1154" num="1228">When a slice type is I slice and qtbtt_dual_tree_intra_flag is a second value (for example, 1), a dual tree structure may be used for block partition for a luma component and block partition for a chroma component from a coding tree unit (for example, 64&#xd7;64 coding unit). According to a dual tree structure, different block partition structures are used for block partition of a luma component and block partition of a chroma component, respectively. In a dual tree structure, a tree type for a luma component may be identified as DUAL_TREE_LUMA. Also, in a dual tree structure, a tree type for a chroma component may be identified as DUAL_TREE_CHROMA.</p><p id="p-1155" num="1229">For the transform matrix index lfnst_idx[x0][y0], a context model applied to context-adaptive binary arithmetic coding (CABAC) may be determined according to at least one of a multi-transform selection index tu_mts_idx[x0][y0] and a tree type. The tu_mts_idx may be equivalent to mts_idx in meaning.</p><p id="p-1156" num="1230">For example, a context model index used for entropy encoding/decoding of the transform matrix index lfnst_idx[x0][y0] may be determined as follows.</p><p id="p-1157" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(tu_mts_idx[<i>x</i>0][<i>y</i>0]==0&#x26;&#x26; treeType !=SINGLE_TREE)?1:0<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1158" num="1231">For example, a context model index used for entropy encoding/decoding of the transform matrix index lfnst_idx[x0][y0] may be determined as follows.</p><p id="p-1159" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(tu_mts_idx[<i>x</i>0][<i>y</i>0]==0)?1:0<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1160" num="1232">For example, a context model index used for entropy encoding/decoding of the transform matrix index lfnst_idx[x0][y0] may be determined as follows.</p><p id="p-1161" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType !=SINGLE_TREE)?1:0<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1162" num="1233">For example, a context model index used for entropy encoding/decoding of the transform matrix index lfnst_idx[x0][y0] may be determined as 0.</p><p id="p-1163" num="1234">For example, a context model index used for entropy encoding/decoding of the transform matrix index lfnst_idx[x0][y0] may be determined according to at least one of coding parameters of a current block and a neighboring block.</p><p id="p-1164" num="1235">As another example, like the example of the multi-transform selection index, a context model index used for entropy encoding/decoding of the transform matrix index lfnst_idx[x0][y0] may be determined according to at least one of a horizontal transform type and a vertical transform type.</p><p id="p-1165" num="1236">A transform process for a scaled transform coefficient may be performed as follows.</p><p id="p-1166" num="1237">For a transform for a scaled transform coefficient, based on an upper-left sample of a current picture, an upper-left sample (xTbY, yTbY) of a current luma component transform block, a horizontal size nTbW of a current transform block, a vertical size nTbH of a current transform block, a color component index cIdx of a current block, and a scaled transform coefficient array d[x][y] with a size of (nTbW)&#xd7;(nTbH) may be input. Here, x may have a value from 0 to nTbW&#x2212;1, and y may have a value from 0 to nTbH&#x2212;1.</p><p id="p-1167" num="1238">According to a transform for a scaled transform coefficient, a residual signal array r[x][y] with a size of (nTbW)&#xd7;(nTbH) may be output. Here, x may have a value from 0 to nTbW&#x2212;1, and y may have a value from 0 to nTbH&#x2212;1.</p><p id="p-1168" num="1239">When the transform matrix index lfnst_idx[xTbY][yTbY] is not a first value (for example, 0) and transform skip mode flag (transform_skip_flag) has a first value (for example, 0) and both nTbW and nTbH are equal to or greater than 4, a transform process for a scaled transform coefficient may be performed as follows. In this case, the transform skip mode flag may mean a flag for at least one of a luma (Y) block and a chroma (Cb, Cr) block. Here, when the transform skip mode flag is a first value (for example, 0), it may mean that at least one of a primary transformation and a secondary transformation is performed. In addition, when the transform skip mode flag is a second value (for example, 1), it may mean that at least one of the primary transform and the secondary transform is not performed.</p><p id="p-1169" num="1240">Variables predModeIntra, nLfnstOutSize, log 2LfnstSize, numLfnstX, numLfnstY, and nonZeroSize may be derived as follows.</p><p id="p-1170" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>predModeIntra=(<i>c</i>Idx=0)?IntraPredMode<i>Y</i>[<i>x</i>Tb<i>Y</i>][<i>y</i>Tb<i>Y</i>]:IntraPredMode<i>C</i>[<i>x</i>Tb<i>Y</i>][<i>y</i>Tb<i>Y</i>]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1171" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>nLfnstOutSize=(<i>n</i>Tb<i>W</i>&#x3e;=8&#x26;&#x26;<i>n</i>Tb<i>H</i>&#x3e;=8)?48:16<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1172" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>log 2LfnstSize=(<i>n</i>Tb<i>W</i>&#x3e;=8&#x26;&#x26;<i>n</i>Tb<i>H</i>&#x3e;=8)?3:2<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1173" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>n</i>LfnstSize=(1&#x3c;&#x3c;log 2LfnstSize)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1174" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>numLfnst<i>X</i>=(<i>n</i>Tb<i>W</i>&#x3e;8&#x26;&#x26;<i>n</i>Tb<i>H</i>=4)?2:1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1175" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>numLfnst<i>Y</i>=(<i>n</i>Tb<i>W</i>==4&#x26;&#x26;<i>n</i>Tb<i>H</i>&#x3e;8)?2:1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1176" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>nonZeroSize=((<i>n</i>Tb<i>W</i>==4&#x26;&#x26;<i>n</i>Tb<i>H</i>=4)&#x2225;(<i>n</i>Tb<i>W</i>=8&#x26;&#x26;<i>n</i>Tb<i>H</i>==8))?8:16<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1177" num="1241">A wide angle intra prediction mode mapping process may be performed by using the following input and output.</p><p id="p-1178" num="1242">Input: predModeIntra, nTbW, nTbH and cIdx</p><p id="p-1179" num="1243">Output: predModeIntra</p><p id="p-1180" num="1244">For xSbIdx capable of having a value from 0 to numLfnstX&#x2212;1 and ySbIdx capable of having a value from 0 to numLfnstY&#x2212;1, the process may be performed as follows.</p><p id="p-1181" num="1245">A value of u[x] may be derived as follows. Here, x may have a value from 0 to nonZeroSize&#x2212;1.</p><p id="p-1182" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>xC</i>=(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+DiagScanOrder[log 2LfnstSize][log 2LfnstSize][<i>x</i>][0]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1183" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>yC</i>=(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+DiagScanOrder[log 2LfnstSize][log 2LfnstSize][<i>x</i>][1]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1184" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>u</i>[<i>x</i>]=<i>d</i>[<i>xC</i>][<i>yC</i>]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1185" num="1246">A one-dimensional low frequency non-separable transform process may be performed by using the following input and output.</p><p id="p-1186" num="1247">Input: an input sample length nonZeroSize of a scaled transform coefficient, a transform output sample length nTrS set as nLfnstOutSize, a scaled transform coefficient array u[x] that is not a value of 0, an intra-prediction mode predModeIntra, and a transform matrix index lfnst_idx[xTbY][yTbY].</p><p id="p-1187" num="1248">Here, x may have a value from 0 to nonZeroSize&#x2212;1.</p><p id="p-1188" num="1249">Output: v[x]</p><p id="p-1189" num="1250">Here, x may have a value from 0 to nLfnstOutSize&#x2212;1.</p><p id="p-1190" num="1251">The array d[(xSbIdx&#x3c;&#x3c;log 2LfnstSize)+x][(ySbIdx&#x3c;&#x3c;log 2LfnstSize)+y] may be derived as follows. Here, x and y may have a value from 0 to nLfnstSize&#x2212;1.</p><p id="p-1191" num="1252">When predModeIntra is equal to or less than 34 or when predModeIntra is the same as at least one of INTRA_LT_CCLM, INTRA_T_CCLM, and INTRA_L_CCLM, the derivation may be performed as follows.</p><p id="p-1192" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>y&#x3c;</i>4)?<i>v</i>[<i>x</i>+(<i>y</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>x</i>&#x3c;4)<i>v</i>[32<i>+x</i>+((<i>y&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1193" num="1253">Otherwise, the derivation may be performed as follows.</p><p id="p-1194" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>x&#x3c;</i>4)?<i>v</i>[<i>y</i>+(<i>x</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>y&#x3c;</i>4)<i>v</i>[32<i>+y</i>+((<i>x&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1195" num="1254">Herein, when the array d[(xSbIdx&#x3c;&#x3c;log 2LfnstSize)+x][(ySbIdx&#x3c;&#x3c;log 2LfnstSize)+y is derived, the derivation may be performed based on at least one of coding parameters except an intra prediction mode predModeIntra.</p><p id="p-1196" num="1255">As another example, the array d[(xSbIdx&#x3c;&#x3c;log 2LfnstSize)+x][(ySbIdx&#x3c;&#x3c;log 2LfnstSize)+y] may be derived as follows. Here, x and y may have a value from 0 to nLfnstSize&#x2212;1.</p><p id="p-1197" num="1256">When a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) or trTypeVer is a first value (for example, 0)), the derivation may be performed as follows.</p><p id="p-1198" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>y&#x3c;</i>4)?<i>v</i>[<i>x</i>+(<i>y</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>x</i>&#x3c;4)?<i>v</i>[32<i>+x</i>+((<i>y&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1199" num="1257">Otherwise, the derivation may be performed as follows.</p><p id="p-1200" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(ySbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>x&#x3c;</i>4)?<i>v</i>[<i>y</i>+(<i>x</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>y&#x3c;</i>4)?<i>v</i>[32<i>+y</i>+((<i>x&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1201" num="1258">As another example, the array d[(xSbIdx&#x3c;&#x3c;log 2LfnstSize)+x][(ySbIdx&#x3c;&#x3c;log 2LfnstSize)+y] may be derived as follows. Here, x and y may have a value from 0 to nLfnstSize&#x2212;1.</p><p id="p-1202" num="1259">When a type for primary transform is a first transform (DCT-2 based integer transform or trTypeHor is a first value (for example, 0) and trTypeVer is a first value (for example, 0)), when a type for primary transform is a second transform (trTypeHor is a second value (for example, 1) and trTypeVer is a second value (for example, 1)), or when a type for primary transform is a second transform (trTypeHor is a third value (for example, 2) and trTypeVer is a third value (for example 2)), the derivation may be performed as follows.</p><p id="p-1203" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>y&#x3c;</i>4)?<i>v</i>[<i>x</i>+(<i>y</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>x&#x3c;</i>4)?<i>v</i>[32<i>+x</i>+((<i>y&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1204" num="1260">Otherwise, the derivation may be performed as follows.</p><p id="p-1205" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>x&#x3c;</i>4)?<i>v</i>[<i>y</i>+(<i>x</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>y</i>&#x3c;4)?<i>v</i>[32<i>+y</i>+((<i>x&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1206" num="1261">As another example, the array d[(xSbIdx&#x3c;&#x3c;log 2LfnstSize)+x][(ySbIdx&#x3c;&#x3c;log 2LfnstSize)+y] may be derived as follows. Here, x and y may have a value from 0 to nLfnstSize&#x2212;1.</p><p id="p-1207" num="1262">When the multi-transform selection index mts_idx is a first value (for example, 0), the derivation may be performed as follows.</p><p id="p-1208" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>y&#x3c;</i>4)?<i>v</i>[<i>x</i>+(<i>y</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>x&#x3c;</i>4)?<i>v</i>[32<i>+x</i>+((<i>y</i>&#x2212;4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1209" num="1263">Otherwise, the derivation may be performed as follows.</p><p id="p-1210" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>x&#x3c;</i>4)?<i>v</i>[<i>y</i>+(<i>x</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>y</i>&#x3c;4)?<i>v</i>[32<i>+y</i>+((<i>x&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1211" num="1264">As another example, the array d[(xSbIdx&#x3c;&#x3c;log 2LfnstSize)+x][(ySbIdx&#x3c;&#x3c;log 2LfnstSize)+y] may be derived as follows. Here, x and y may have a value from 0 to nLfnstSize&#x2212;1.</p><p id="p-1212" num="1265">When the multi-transform selection index mts_idx is a first value (for example, 0), when the multi-transform selection index mts_idx is a second value (for example, 1), or when the multi-transform selection index mts_idx is a fifth value (for example, 4), the derivation may be performed as follows.</p><p id="p-1213" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>y&#x3c;</i>4)?<i>v</i>[<i>x</i>+(<i>y</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>x&#x3c;</i>4)?<i>v</i>[32<i>+x</i>+((<i>y&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1214" num="1266">Otherwise, the derivation may be performed as follows.</p><p id="p-1215" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>[(<i>x</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>x</i>][(<i>y</i>SbIdx&#x3c;&#x3c;log 2LfnstSize)+<i>y</i>]=(<i>x&#x3c;</i>4)?<i>v</i>[<i>y</i>+(<i>x</i>&#x3c;&#x3c;log 2LfnstSize)]:((<i>y&#x3c;</i>4)?<i>v</i>[32<i>+y</i>+((<i>x&#x2212;</i>4)&#x3c;&#x3c;2)]:<i>d</i>[<i>x</i>][<i>y</i>])<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1216" num="1267">Hereinafter, a wide angle intra prediction mode mapping process will be described.</p><p id="p-1217" num="1268">For a wide angle intra prediction mode mapping process, an intra-prediction mode predModeIntra, a horizontal size of a transform block nTbW, a vertical size of a transform block nTbH, and a color component index of a current block cIdx are input.</p><p id="p-1218" num="1269">According to a wide angle intra prediction mode mapping process, a modified intra-prediction mode predModeIntra is output.</p><p id="p-1219" num="1270">In a wide angle intra prediction mode mapping process, variables nW and nH may be derived as follows.</p><p id="p-1220" num="1271">When IntraSubPartitionsSplitType is the same as ISP_NO_SPLIT and cIdx is not a first value (for example, 0), the derivation may be performed as follows.</p><p id="p-1221" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>nW=n</i>Tb<i>W </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1222" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>nH=n</i>Tb<i>H </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1223" num="1272">Otherwise, the derivation may be performed as follows.</p><p id="p-1224" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>nW=n</i>Cb<i>W </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1225" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>nH=n</i>Cb<i>H </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1226" num="1273">The variable whRatio may be set as Abs(Log 2(nW/nH)). For a rectangular block (where nW is not the same as nH), predModeIntra may be modified as follows. When the following conditions are all true, predModeIntra may be set as (predModeIntra+65).<ul id="ul0057" list-style="none">    <li id="ul0057-0001" num="0000">    <ul id="ul0058" list-style="none">        <li id="ul0058-0001" num="1274">nW is greater than nH</li>        <li id="ul0058-0002" num="1275">predModeIntra is equal to or greater than 2</li>        <li id="ul0058-0003" num="1276">predModeIntra is less than (whRatio&#x3e;1)?(8+2*whRatio):8</li>    </ul>    </li></ul></p><p id="p-1227" num="1277">When the following conditions are all true, predModeIntra may be set as (predModeIntra&#x2212;67).<ul id="ul0059" list-style="none">    <li id="ul0059-0001" num="0000">    <ul id="ul0060" list-style="none">        <li id="ul0060-0001" num="1278">nH is greater than nW</li>        <li id="ul0060-0002" num="1279">predModeIntra is equal to or less than 66</li>        <li id="ul0060-0003" num="1280">predModeIntra is greater than (whRatio&#x3e;1)?(60&#x2212;2*whRatio):60</li>    </ul>    </li></ul></p><p id="p-1228" num="1281">Hereinafter, a low frequency non-separable transform process will be described.</p><p id="p-1229" num="1282">In a low frequency non-separable transform process, a transform input sample length nonZeroSize, a transform output sample length nTrS, a scaled transform coefficient array x[j] that is not a value of 0, an intra-prediction mode predModeIntra, and a transform matrix index lfnst_idx may be input. Here, j may have a value from 0 to nonZeroSize&#x2212;1.</p><p id="p-1230" num="1283">According to a low frequency non-separable transform process, a transformed sample array y[i] may be output. Here, i may have a value from 0 to nTrS&#x2212;1.</p><p id="p-1231" num="1284">In a low frequency non-separable transform process, a low frequency non-separable transform matrix may be derived. In a process of deriving a low frequency non-separable transform matrix, a transform output sample length nTrS, an intra-prediction mode predModeIntra, and a transform matrix index lfnst_idx may be input.</p><p id="p-1232" num="1285">According to a process of deriving a low frequency non-separable transform matrix, a transform matrix lowFreqTransMatrix with (nTrS)&#xd7;(nonZeroSize) size may be output.</p><p id="p-1233" num="1286">A transformed sample array y[i] may be derived as follows. Here, i may have a value from 0 to nTrS&#x2212;1.</p><p id="p-1234" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>[<i>i</i>]=Clip3(CoeffMin,CoeffMax,((&#x3a3;<sub>j=0</sub><sup>nonZeroSize-1</sup>lowFreqTransMatrix[1][<i>j</i>]*<i>x</i>[<i>j</i>])+64)&#x3e;&#x3e;7)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1235" num="1287">Here, CoeffMin and CoeffMax may mean a minimum value and a maximum value of a transform coefficient, respectively, and may be derived as follows.</p><p id="p-1236" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>CoeffMin=&#x2212;(1<i>&#x3c;&#x3c;N</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1237" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>CoeffMax=(1<i>&#x3c;&#x3c;N</i>)&#x2212;1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1238" num="1288">Here, N may be a positive integer. For example, N may be 15. When N is 15, it may mean that a value of a transform coefficient is clipped so as to be included in a 16-bit dynamic range.</p><p id="p-1239" num="1289">Hereinafter, a process of deriving a low frequency non-separable transform matrix will be described.</p><p id="p-1240" num="1290">In a process of deriving a low frequency non-separable transform matrix, a transform output sample length nTrS, an intra-prediction mode predModeIntra, and a transform matrix index lfnst_idx may be input. In addition, according to a process of deriving a low frequency non-separable transform matrix, a transform matrix lowFreqTransMatrix may be output.</p><p id="p-1241" num="1291">As in the example of Table 19, in a process of deriving a low frequency non-separable transform matrix, a transform matrix set index lfnstTrSetIdx may be derived according to an intra-prediction mode predModeIntra. Herein, by using Tables 20 to 26 instead of Table 19, a transform matrix set index lfnstTrSetIdx may be derived according to an intra-prediction mode predModeIntra.</p><p id="p-1242" num="1292">When predModeIntra is the same as at least one of INTRA_LT_CCLM, INTRA_T_CCLM, and INTRA_L_CCLM, lfnstTrSetIdx may be determined as M. Here, M may be a positive integer. For example, M may be 0.</p><p id="p-1243" num="1293">As in the examples of Tables 23 to 26, the predModeIntra may be an intra-prediction mode before a wide angle intra prediction mode mapping process is performed or while a wide angle intra prediction mode mapping process is not performed. Herein, an intra-prediction mode may have a value ranging from 0 to M. Here, M may be a maximum value (positive integer) of an intra-prediction mode. M may be 66.</p><p id="p-1244" num="1294">For example, when the examples of Tables 20 to 22 and Tables 24 to 26 are used, since the number of transform matrices to be stored in an encoder/decoder may be reduced from 4 to 3, a memory size necessary for storing transform matrices in an encoder/decoder may be reduced.</p><p id="p-1245" num="0000"><tables id="TABLE-US-00019" num="00019"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 19</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>&#x2003;&#x2002;&#x2009;predModeIntra &#x3c; 0</entry><entry>1</entry></row><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>3</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 80</entry><entry>1</entry></row><row><entry/><entry>81 &#x3c;= predModeIntra &#x3c;= 83</entry><entry>0</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1246" num="0000"><tables id="TABLE-US-00020" num="00020"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 20</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>&#x2003;&#x2002;&#x2009;predModeIntra &#x3c; 0</entry><entry>1</entry></row><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>2</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 80</entry><entry>1</entry></row><row><entry/><entry>81 &#x3c;= predModeIntra &#x3c;= 83</entry><entry>0</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1247" num="0000"><tables id="TABLE-US-00021" num="00021"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 21</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>&#x2003;&#x2002;&#x2009;predModeIntra &#x3c; 0</entry><entry>1</entry></row><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>1</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 80</entry><entry>1</entry></row><row><entry/><entry>81 &#x3c;= predModeIntra &#x3c;= 83</entry><entry>0</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1248" num="0000"><tables id="TABLE-US-00022" num="00022"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 22</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>&#x2003;&#x2002;&#x2009;predModeIntra &#x3c; 0</entry><entry>1</entry></row><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>0</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 80</entry><entry>1</entry></row><row><entry/><entry>81 &#x3c;= predModeIntra &#x3c;= 83</entry><entry>0</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1249" num="0000"><tables id="TABLE-US-00023" num="00023"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 23</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>3</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 66</entry><entry>1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1250" num="0000"><tables id="TABLE-US-00024" num="00024"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 24</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>2</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 66</entry><entry>1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1251" num="0000"><tables id="TABLE-US-00025" num="00025"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 25</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>1</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 66</entry><entry>1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1252" num="0000"><tables id="TABLE-US-00026" num="00026"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 26</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>predModeIntra</entry><entry>lfnstTrSetIdx</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="91pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>0 &#x3c;= predModeIntra &#x3c;= 1</entry><entry>0</entry></row><row><entry/><entry>&#x2002;2 &#x3c;= predModeIntra &#x3c;= 12</entry><entry>1</entry></row><row><entry/><entry>13 &#x3c;= predModeIntra &#x3c;= 23</entry><entry>2</entry></row><row><entry/><entry>24 &#x3c;= predModeIntra &#x3c;= 44</entry><entry>0</entry></row><row><entry/><entry>45 &#x3c;= predModeIntra &#x3c;= 55</entry><entry>2</entry></row><row><entry/><entry>56 &#x3c;= predModeIntra &#x3c;= 66</entry><entry>1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-1253" num="1295">As in the examples of <figref idref="DRAWINGS">FIGS. <b>30</b> to <b>32</b></figref>, a transform matrix lowFreqTransMatrix may be derived based on nTrs, lfnstTrSetIdx, and lfnst_idx.</p><p id="p-1254" num="1296">Generally, when there is a residual signal, the residual signal may be transform encoded in an encoding process and then be transmitted by being included in a bitstream. The residual signal may be derived by being inverse-transform encoded in a decoding process.</p><p id="p-1255" num="1297">Identification information (for example, a quantized transform coefficient, etc.) indicating whether or not there is residual signal-related information that is included in a bitstream and is transmitted to a decoder may be at least one of the following information.</p><p id="p-1256" num="1298">cu_cbf: may mean information on whether or not there are a quantized transform coefficient of a residual signal of a luma component block and a quantized transform coefficient of a residual signal of a chroma component block, when a luma component and a chroma component have a same block partition structure. When a luma component and a chroma component have independent block partition structures, cu_cbf may mean information on whether or not there is a quantized transform coefficient of a residual signal of a luma component block or a chroma component block. When information on whether or not there is a quantized transform coefficient of a residual signal has a first value (1), it may mean that there is a quantized transform coefficient of a residual signal of corresponding blocks. When the information has a second value (0), it may mean that there is no quantized transform coefficient of a residual signal of corresponding blocks. When a luma component and a chroma component have a same block partition structure and a quantized transform coefficient of a residual signal is present in at least one of a luma component block and a chroma component (Cb and Cr) block, cu_cbf may have a first value. On the other hand, when there is no quantized transform coefficient of a residual signal for all the components, cu_cbf may have a second value.</p><p id="p-1257" num="1299">tu_cbf_luma: may mean whether or not there is a quantized transform coefficient of a residual signal of a luma component block. When information on whether or not there is a quantized transform coefficient of a residual signal of a luma component block has a first value (1), it may mean that there is a quantized transform coefficient of a residual signal of a corresponding luma block. In addition, when the information has a second value (0), it may mean that there is no quantized transform coefficient of a residual signal of a corresponding luma block.</p><p id="p-1258" num="1300">tu_cbf_cr, tu_cbf_cb: may mean whether or not there are quantized transform coefficients of residual signals of Cr and Cb respectively among chroma components. When information on whether or not there is a quantized transform coefficient of a residual signal of a chroma component (Cr or Cb) block has a first value (1), it may mean that there is a quantized transform coefficient of a residual signal of a corresponding chroma component (Cr or Cb) block. In addition, when the information has a second value (0), it may mean that there is no quantized transform coefficient of a residual signal of a corresponding chroma component (Cr or Cb) block.</p><p id="p-1259" num="1301">Generally, only when cu_cbf has a first value (1), at least one of tu_cbf_luma, tu_cbf_cr, and tu_cbf_cb may be additionally transmitted, thereby indicating whether or not there is a quantized transform coefficient of a residual signal of a luma component, Cr as a chroma component, or Cb as a chroma component.</p><p id="p-1260" num="1302">When a luma component and a chroma component have independent block partition structures, cu_cbf may have the same information as tu_cbf_luma.</p><p id="p-1261" num="1303">Transform encoding may include at least one of primary transform/inverse transform and secondary transform/inverse transform.</p><p id="p-1262" num="1304">In a primary transform, for a transform target block, DCT-2 may be applied in horizontal and vertical directions. Alternatively, for a transform target block, DST-7 and DCT-8 may be applied to in the horizontal direction and in the vertical direction, respectively. In addition, a primary transform type applied to a transform target block may be signaled in an index form. When a primary transform type is DCT-2, a primary transform type index may have a value of 0. In addition, when a transform is performed according to a combination of DST-7 and DCT-8, a primary transform type index may have an arbitrary integer value greater than 0. For example, when a primary transform type index is 1, DST-7 may be applied both in horizontal and vertical directions. When a primary transform type index is 2, DST-7 may be applied in the horizontal direction and DCT-8 may be applied in the vertical direction. When a primary transform type index is 3, DCT-8 and DST-7 may be applied in the horizontal direction and in the vertical direction, respectively. When a primary transform type index is 4, DCT-8 may be applied both in horizontal and vertical directions.</p><p id="p-1263" num="1305">A secondary transform may be applied to a part of a primary-transformed signal. A secondary transform type may be signaled in an index form. When a secondary transform type is not applied, a secondary transform type index may have a value of 0. In addition, when a secondary transform type is applied, a secondary transform type index may have an integer value greater than 0.</p><p id="p-1264" num="1306">A kernel to be applied to a secondary inverse transform may be derived by using an index for secondary transform type signaled in a decoder. A secondary inverse transform may be performed by applying a kernel thus derived.</p><p id="p-1265" num="1307">A kernel to be applied to a primary inverse transform may be derived by using an index for primary transform type signaled in a decoder. A primary inverse transform may be performed on a secondary-inverse transformed signal by using a kernel thus derived.</p><p id="p-1266" num="1308">When applying a secondary transform, DCT-2 may be always applied to a primary transform type. When DCT-2 is applied to a primary transform, energy tends to be concentrated in the upper-left position of a primary-transformed block. In addition, when energy is concentrated in the upper-left position of a primary-transformed block, a secondary transform is highly likely to be applied. Accordingly, when DCT-2 is applied to a primary transform, the aspect of coding efficiency may be improved.</p><p id="p-1267" num="1309">In addition, when a secondary transform/inverse transform is not applied, a primary transform/inverse transform may be applied by entropy encoding/decoding an index for a primary transform type.</p><p id="p-1268" num="1310">An applicable horizontal or vertical size of primary transform and secondary transform may be limited.</p><p id="p-1269" num="1311">When a size of a CU is larger than a maximum size enabling a primary transform, the CU is implicitly partitioned until its size becomes equal to or smaller than the maximum size enabling a primary transform. A block thus partitioned may be defined as a transform unit (TU). Accordingly, one CU may consist of one or more TUs. Based on a TU, a residual signal that is generated by prediction encoding may be transformed/inverse transformed according to a predetermined transform type.</p><p id="p-1270" num="1312">According to an embodiment, a primary transform type index and a secondary transform type index may be signaled in a CU.</p><p id="p-1271" num="1313">In other words, at least one of a same primary transform type and a same secondary transform type may be applied to all the TUs included in a CU.</p><p id="p-1272" num="1314">In this case, for example, when an intra prediction signal is generated by applying an ISP method, at least one of a same primary transform type and a same secondary transform type may be applied to partitioned ISP blocks.</p><p id="p-1273" num="1315">As this method signals a smaller amount of data than applying different primary transform types and secondary transform types to each TU included in a CU, the coding efficiency may be improved.</p><p id="p-1274" num="1316">When signaling a primary transform type index and a secondary transform type index, the secondary transform type index may be signaled first and then the primary transform type index may be signaled.</p><p id="p-1275" num="1317">When a secondary transform type index is not 0 (that is, when a secondary transform is applied), since DCT-2 is always applied as a primary transform type, a primary transform type index may not be signaled but be set as 0, which is a primary transform type index value indicating DCT-2. In other words, when a secondary transform type index is not a first value (for example, 0) (that is, when a secondary transform is applied), a primary transform type index may not be signaled.</p><p id="p-1276" num="1318">When a secondary transform type index is 0 (that is, when a secondary transform is not applied), a primary transform type index may be signaled.</p><p id="p-1277" num="1319">Meanwhile, a residual signal may be encoded/decoded through a transform skip method that does not perform a primary transform for a luma component of a CU or a TU included in the CU. In this case, a primary transform type index may not be signaled either. However, since transform skip is performed in a TU, information indicating transform skip (transform_skip_flag) may be signaled in a TU. In addition, when there is a quantized transform coefficient of a residual signal of a luma component block (that is, when tu_cbf_luma has a value of 1), a primary transform type index may be signaled. Accordingly, a primary transform type index to be signaled in a CU may be signaled, when a secondary transform type index to be signaled in a CU is 0 and at least one of the following conditions is satisfied.<ul id="ul0061" list-style="none">    <li id="ul0061-0001" num="0000">    <ul id="ul0062" list-style="none">        <li id="ul0062-0001" num="1320">Residual signal is not encoded by a transform skip method for a luma component of every TU included in a CU (that is, transform_skip_flag is 0 for a luma component of every TU)</li>        <li id="ul0062-0002" num="1321">Residual signal is not encoded by a transform skip method for a luma component of at least one TU among TUs included in a CU (that is, transform_skip_flag is 0 for a luma component of at least one TU among TUs included in a CU)</li>        <li id="ul0062-0003" num="1322">Residual signal is not encoded by a transform skip method for a luma component of a first TU included in a CU (that is, transform_skip_flag of a first TU luma component included in a CU is 1)</li>        <li id="ul0062-0004" num="1323">tu_cbf_luma value of every TU included in a CU is 1</li>        <li id="ul0062-0005" num="1324">tu_cbf_luma value of at least one TU included in a CU is 1</li>        <li id="ul0062-0006" num="1325">tu_cbf_luma value of a first TU included in a CU is 1</li>    </ul>    </li></ul></p><p id="p-1278" num="1326">According to an embodiment, a primary transform type index and a secondary transform type index may be signaled in a TU.</p><p id="p-1279" num="1327">In other words, a primary transform type and a secondary transform type, which are applied to TUs included in a CU, may be different from each other.</p><p id="p-1280" num="1328">In this case, for example, when an intra prediction signal is generated by applying an ISP method, different primary and secondary transform types may be applied to each partitioned sub-block.</p><p id="p-1281" num="1329">Since an appropriate transform type is capable of being applied to each TU, the above-described transform method may improve coding accuracy, in comparison with a method of applying a same primary transform type and a same secondary transform type to all the TUs included in a CU.</p><p id="p-1282" num="1330">According to an embodiment, a secondary transform type index and a primary transform type index may be sequentially signaled.</p><p id="p-1283" num="1331">When a secondary transform type index is not 0 (that is, when a secondary transform is applied), since DCT-2 is always applied as a primary transform type, a primary transform type index may not be signaled but be set as 0, which is a primary transform type index value indicating DCT-2. In other words, when a secondary transform type index is not 0 (that is, when a secondary transform is applied), a primary transform type index may not be signaled.</p><p id="p-1284" num="1332">When a secondary transform type index is 0 (that is, when a secondary transform is not applied), a primary transform type index may be signaled.</p><p id="p-1285" num="1333">Meanwhile, a residual signal may be encoded/decoded through a transform skip method that does not perform a primary transform for a luma component of a TU. In this case, a primary transform type index may not be signaled either. Accordingly, a primary transform type index to be signaled in a TU may be signaled, when a secondary transform type index to be signaled in a TU is 0 and a luma component of a corresponding TU is not encoded through a transform skip method.</p><p id="p-1286" num="1334">As in the examples of <figref idref="DRAWINGS">FIGS. <b>33</b> to <b>36</b></figref>, lfnst_idx[x0][y0] may mean a transform matrix index indicating which transform matrix among transform matrices in a transform matrix set is to be used for a reduced secondary transform/inverse transform.</p><p id="p-1287" num="1335">In relation to a transform skip mode flag, the lfnst_idx[x0][y0] may be entropy encoded/decoded in at least one of the following cases.<ul id="ul0063" list-style="none">    <li id="ul0063-0001" num="0000">    <ul id="ul0064" list-style="none">        <li id="ul0064-0001" num="1336">As in the example of <figref idref="DRAWINGS">FIG. <b>37</b></figref>, a tree structure is a single tree type (SINGLE_TREE) and at least one of a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component, a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb), and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) is a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1288" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType=SINGLE_TREE&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][0]=0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]=0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0065" list-style="none">    <li id="ul0065-0001" num="0000">    <ul id="ul0066" list-style="none">        <li id="ul0066-0001" num="1337">As in the example of <figref idref="DRAWINGS">FIG. <b>38</b></figref>, a tree structure is a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1289" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType=DUAL_TREE_LUMA&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0067" list-style="none">    <li id="ul0067-0001" num="0000">    <ul id="ul0068" list-style="none">        <li id="ul0068-0001" num="1338">As in the example of <figref idref="DRAWINGS">FIG. <b>39</b></figref>, a tree structure is a single tree type (SINGLE_TREE) or a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1290" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>((treeType=SINGLE_TREE&#x2225;treeType=DUAL_TREE_LUMA)&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0069" list-style="none">    <li id="ul0069-0001" num="0000">    <ul id="ul0070" list-style="none">        <li id="ul0070-0001" num="1339">As in the example of <figref idref="DRAWINGS">FIG. <b>40</b></figref>, a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA), at least one of a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) is a first value (for example, 0), and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1291" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType=DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]=0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]=0)&#x26;&#x26;ChromaArrayType!=0)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0071" list-style="none">    <li id="ul0071-0001" num="0000">    <ul id="ul0072" list-style="none">        <li id="ul0072-0001" num="1340">As in the example of <figref idref="DRAWINGS">FIG. <b>41</b></figref>, a tree structure is a single tree type (SINGLE_TREE) and at least one of a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component, a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb), and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) is a first value (0), or a tree structure is a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and at least one of a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) is a first value (for example, 0), and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1292" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>((treeType=SINGLE_TREE&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][0]=0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][1]=0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]=0)))&#x2225;(treeType=DUAL_TREE_LUMA&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]=0)&#x2225;(treeType==DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0)&#x26;&#x26;ChromaArrayType!=0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0073" list-style="none">    <li id="ul0073-0001" num="0000">    <ul id="ul0074" list-style="none">        <li id="ul0074-0001" num="1341">As in the example of <figref idref="DRAWINGS">FIG. <b>42</b></figref>, a tree structure is a single tree type (SINGLE_TREE) and at least one of a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component, a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb), and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) is a first value (0), or a tree structure is a single tree type (SINGLE_TREE) or a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and at least one of a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) is a first value (for example, 0), and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1293" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>((treeType=SINGLE_TREE&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][0]=0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0))&#x2225;((treeType=SINGLE_TREE&#x2225;treeType=DUAL_TREE_LUMA)&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]=0)&#x2225;(treeType==DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0)&#x26;&#x26;ChromaArrayType!=0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0075" list-style="none">    <li id="ul0075-0001" num="0000">    <ul id="ul0076" list-style="none">        <li id="ul0076-0001" num="1342">As in the example of <figref idref="DRAWINGS">FIG. <b>43</b></figref>, a tree structure is a single tree type (SINGLE_TREE) or a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and at least one of a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb), and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) is a first value (for example, 0), and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1294" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(((treeType=SINGLE_TREE&#x2225;treeType=DUAL_TREE_LUMA)&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)&#x2225;(treeType==DUAL_TREE_CHROMA&#x26;&#x26; (transform_skip_flag[<i>x</i>0][<i>y</i>0][1]=0&#x2225;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]=0)&#x26;&#x26; ChromaArayType!=0))<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1295" num="1343">As another example, in relation to a transform skip mode flag, the lfnst_idx[x0][y0] may be entropy encoded/decoded in at least one of the following cases.<ul id="ul0077" list-style="none">    <li id="ul0077-0001" num="0000">    <ul id="ul0078" list-style="none">        <li id="ul0078-0001" num="1344">As in the example of <figref idref="DRAWINGS">FIG. <b>44</b></figref>, a tree structure is a single tree type (SINGLE_TREE), and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component, a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb), and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1296" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType==SINGLE_TREE&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0079" list-style="none">    <li id="ul0079-0001" num="0000">    <ul id="ul0080" list-style="none">        <li id="ul0080-0001" num="1345">As in the example of <figref idref="DRAWINGS">FIG. <b>45</b></figref>, a tree structure is a single tree type (SINGLE_TREE) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0)</li>    </ul>    </li>    <li id="ul0079-0002" num="1346">(treeType=SINGLE_TREE &#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)    <ul id="ul0081" list-style="none">        <li id="ul0081-0001" num="1347">As in the example of <figref idref="DRAWINGS">FIG. <b>46</b></figref>, a tree structure is a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1297" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType=DUAL_TREE_LUMA&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0082" list-style="none">    <li id="ul0082-0001" num="0000">    <ul id="ul0083" list-style="none">        <li id="ul0083-0001" num="1348">As in the example of <figref idref="DRAWINGS">FIG. <b>47</b></figref>, a tree structure is a single tree type (SINGLE_TREE) or a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1298" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>((treeType=SINGLE_TREE&#x2225;treeType=DUAL_TREE_LUMA)&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0084" list-style="none">    <li id="ul0084-0001" num="0000">    <ul id="ul0085" list-style="none">        <li id="ul0085-0001" num="1349">As in the example of <figref idref="DRAWINGS">FIG. <b>48</b></figref>, a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA), and a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1299" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType==DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]=0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0086" list-style="none">    <li id="ul0086-0001" num="0000">    <ul id="ul0087" list-style="none">        <li id="ul0087-0001" num="1350">As in the example of <figref idref="DRAWINGS">FIG. <b>49</b></figref>, a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA), a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0), and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1300" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(treeType=DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]=0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0)&#x26;&#x26;ChromaArrayType!=0)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0088" list-style="none">    <li id="ul0088-0001" num="0000">    <ul id="ul0089" list-style="none">        <li id="ul0089-0001" num="1351">As in the example of <figref idref="DRAWINGS">FIG. <b>50</b></figref>, a tree structure is a single tree type (SINGLE_TREE) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component, a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb), and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0), or a tree structure is a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0), and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1301" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>((treeType=SINGLE_TREE&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0))&#x2225;(treeType=DUAL_TREE_LUMA&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)&#x2225;(treeType=DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0)&#x26;&#x26;ChromaArrayType!=0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0090" list-style="none">    <li id="ul0090-0001" num="0000">    <ul id="ul0091" list-style="none">        <li id="ul0091-0001" num="1352">As in the example of <figref idref="DRAWINGS">FIG. <b>51</b></figref>, a tree structure is a single tree type (SINGLE_TREE) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component, a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0), or a tree structure is a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1302" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>((treeType=SINGLE_TREE&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0))&#x2225;(treeType=DUAL_TREE_LUMA&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)&#x2225;(treeType==DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0092" list-style="none">    <li id="ul0092-0001" num="0000">    <ul id="ul0093" list-style="none">        <li id="ul0093-0001" num="1353">As in the example of <figref idref="DRAWINGS">FIG. <b>52</b></figref>, a tree structure is a single tree type (SINGLE_TREE) or a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0), and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1303" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(((treeType=SINGLE_TREE&#x2225;treeType=DUAL_TREE_LUMA)&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)&#x2225;(treeType==DUAL_TREE_CHROMA&#x26;&#x26; (transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0)&#x26;&#x26; ChromaArrayType!=0))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0094" list-style="none">    <li id="ul0094-0001" num="0000">    <ul id="ul0095" list-style="none">        <li id="ul0095-0001" num="1354">As in the example of <figref idref="DRAWINGS">FIG. <b>53</b></figref>, a tree structure is a single tree type (SINGLE_TREE) or a dual tree luma type (DUAL_TREE_LUMA) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1304" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(((treeType==SINGLE_TREE&#x2225;treeType==DUAL_TREE_LUMA)&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)&#x2225;(treeType=DUAL_TREE_CHROMA&#x26;&#x26; (transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0)))<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0096" list-style="none">    <li id="ul0096-0001" num="0000">    <ul id="ul0097" list-style="none">        <li id="ul0097-0001" num="1355">As in the example of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, a tree structure is a single tree type (SINGLE_TREE) or a dual tree luma type (DUAL_TREE_LUMA) or ChromaArrayType is a first value (for example, 0) and a transform skip mode flag (transform_skip_flag[x0][y0][0]) for a luma component is a first value (for example, 0), or a tree structure is a dual tree chroma type (DUAL_TREE_CHROMA) and a transform skip mode flag (transform_skip_flag[x0][y0][1]) for a chroma component (Cb) and a transform skip mode flag (transform_skip_flag[x0][y0][2]) for a chroma component (Cr) are all a first value (for example, 0) and ChromaArrayType is not a first value (for example, 0)</li>    </ul>    </li></ul></p><p id="p-1305" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(((treeType==SINGLE_TREE&#x2225;treeType=DUAL_TREE_LUMA&#x2225;ChromaArrayType=0)&#x26;&#x26;transform_skip_flag[<i>x</i>0][<i>y</i>0][0]==0)&#x2225;(treeType==DUAL_TREE_CHROMA&#x26;&#x26;(transform_skip_flag[<i>x</i>0][<i>y</i>0][1]==0&#x26;&#x26; transform_skip_flag[<i>x</i>0][<i>y</i>0][2]==0)&#x26;&#x26;ChromaArrayType!=0))<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-1306" num="1356">As in the example of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, in relation to a transform skip mode flag, the lfnst_idx[x0][y0] may be entropy encoded/decoded according to information on whether or not there is a non-zero transform coefficient or a non-zero transform coefficient level that is encoded in a corresponding transform block/unit in a unit of transform block/unit as a color component unit.</p><p id="p-1307" num="1357">For example, when an coded block flag for a specific color component (at least one of a luma component, a Cb component, and a Cr component) is a first value (for example, 0) or a transform skip mode flag is a first value (for example, 0), lfnst_idx[x0][y0] may be entropy encoded/decoded.</p><p id="p-1308" num="1358">According to a color component, the coded block flag may mean at least one of tu_v_coded_flag, tu_cb_coded_flag, and tu_cr_coded_flag. In addition, when the coded block flag is a first value (for example, 0), it may mean that there is no non-zero transform coefficient or no non-zero transform coefficient level that is encoded in a corresponding transform block/unit in a unit of transform block/unit. In addition, when the coded block flag is a second value (for example, 1), it may mean that there is a non-zero transform coefficient or a non-zero transform coefficient level that is encoded in a corresponding transform block/unit in a unit of transform block/unit.</p><p id="p-1309" num="1359">Herein, when a transform skip mode flag is a first value (for example, 0), it may mean that at least one of a primary transform and a secondary transform is performed. In addition, when a transform skip mode flag is a second value (for example, 1), it may mean that at least one of a primary transform and a secondary transform is not performed.</p><p id="p-1310" num="1360">ChromaArrayType may mean a chroma format of a current sequence or picture.</p><p id="p-1311" num="1361">When ChromaArrayType is a first value (for example, 0), a chroma format may be determined as a 4:0:0 color format where no chroma signal is present and only a luma signal is present. When a chroma format is a 4:0:0 color format, it may be determined as monochrome without chroma component. In addition, when ChromaArrayType is a second value (for example, 1), a chroma format may be set as a 4:2:0 color format. When ChromaArrayType is a third value (for example, 2), a chroma format may be set as a 4:2:2 color format. When ChromaArrayType is a fourth value (for example, 3), a chroma format may be set as a 4:4:4 color format.</p><p id="p-1312" num="1362">ChromaArrayType may be determined based on a chroma_format_idc syntax element value and mean a form of a chroma component.</p><p id="p-1313" num="1363">According to an embodiment, based on secondary transform performance information, whether or not a secondary transform/inverse transform is applied to a current block may be determined. The secondary transform performance information may be derived according to a transform matrix index (lfnst_idx) and/or a tree structure. The secondary transform performance information may be determined for at least one of a sequence, a picture, sub-picture, a tile, a slice, a coding unit, a prediction unit, and a transform unit. According to secondary transform performance information, a default quantization matrix may be used for a block to which a secondary transform/inverse transform is applied. A default quantization matrix may mean a matrix with all the matrix coefficients having a constant value of N. Here, N may be a positive integer. For example, N may be 16.</p><p id="p-1314" num="1364">According to an embodiment, when the transform matrix index indicates a first value (for example, 0), secondary transform performance information may be determined so as to indicate that a secondary transform/inverse transform is not applied to a current block. When the transform matrix index indicates other value than a first value, secondary transform performance information may be determined so as to indicate that a secondary transform/inverse transform is applied to a current block. In other words, whether or not a secondary transform is applied to a current block may be derived from a transform matrix index.</p><p id="p-1315" num="1365">According to another embodiment, based on a tree structure, secondary transform performance information may be determined. When a tree structure is a single tree type, secondary transform performance information may be determined as follows.<ul id="ul0098" list-style="none">    <li id="ul0098-0001" num="0000">    <ul id="ul0099" list-style="none">        <li id="ul0099-0001" num="1366">For a block of a luma component, when the transform matrix index indicates a first value (for example, 0), secondary transform performance information may be determined so as to indicate that a secondary transform/inverse transform is not applied to a current block. In addition, when the transform matrix index indicates other value than a first value, secondary transform performance information may be determined so as to indicate that a secondary transform/inverse transform is applied to a current block.</li>        <li id="ul0099-0002" num="1367">However, for a block of a chroma component, secondary transform performance information may be determined so as to indicate that a secondary transform/inverse transform is not applied to a current block, irrespective of a value of a transform matrix index.</li>    </ul>    </li></ul></p><p id="p-1316" num="1368">When a tree structure is a dual tree type, secondary transform performance information may be determined irrespective of a color component of a block. For example, when the transform matrix index indicates a first value (for example, 0), secondary transform performance information may be determined so as to indicate that a secondary transform/inverse transform is not applied to a current block. When the transform matrix index indicates other value than a first value, secondary transform performance information may be determined so as to indicate that a secondary transform/inverse transform is applied to a current block.</p><p id="p-1317" num="1369"><figref idref="DRAWINGS">FIG. <b>56</b></figref> illustrates a video decoding method according to an embodiment.</p><p id="p-1318" num="1370">In the step S<b>5602</b>, a transform skip mode flag indicating whether or not a transform skip mode is applied to a current block may be obtained.</p><p id="p-1319" num="1371">According to an embodiment, for a current block, information on whether or not an intra residual DPCM method is used may be obtained. When information on whether or not an intra residual DPCM method is used shows that an intra residual DPCM method is used for the current block, it may be determined that a transform skip mode is applied to the current block. When information on whether or not an intra residual DPCM method is used shows that an intra residual DPCM method is not used for the current block, the transform skip mode flag may be obtained.</p><p id="p-1320" num="1372">According to an embodiment, for a current block, a transform skip mode flag for a luma component, a transform skip mode flag for a Cb component, and a transform skip mode flag for a Cr component may be obtained.</p><p id="p-1321" num="1373">In the step S<b>5604</b>, when a transform skip mode is applied to the current block according to a transform skip mode flag, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1322" num="1374">According to an embodiment, when a tree structure of the current block is a single tree type, the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1323" num="1375">According to an embodiment, when a tree structure of the current block is a dual tree luma type and the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1324" num="1376">According to an embodiment, when a tree structure of the current block is a dual tree chroma type, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1325" num="1377">In the step S<b>5606</b>, when a transform skip mode is not applied to the current block according to a transform skip mode flag, a transform matrix index for a secondary transform/inverse transform of the current block may be obtained. In addition, according to the transform matrix index, it may be determined whether or not a secondary transform/inverse transform is applied to the current block.</p><p id="p-1326" num="1378">According to an embodiment, when the current block is predicted according to an intra prediction mode that is not a matrix based intra prediction mode, a transform matrix index for a secondary transform/inverse transform of current block may be obtained.</p><p id="p-1327" num="1379">According to an embodiment, when a secondary transform/inverse transform is applied to a current block, a secondary transform matrix of the current block may be determined according to the transform matrix index. In addition, according to the secondary transform matrix, a secondary transform/inverse transform may be applied to the current block.</p><p id="p-1328" num="1380">According to an embodiment, whether or not a secondary transform/inverse transform is applied to the current block may be determined according to at least one of the transform matrix index, a size of the current block, and the transform skip mode flag. In addition, a secondary transform matrix of the current block may be determined according to at least one of the transform matrix index, a transform matrix set index of the current block, and the size of the current block.</p><p id="p-1329" num="1381"><figref idref="DRAWINGS">FIG. <b>57</b></figref> illustrates a video encoding method according to an embodiment.</p><p id="p-1330" num="1382">In the step S<b>5702</b>, a transform skip mode flag indicating whether or not a transform skip mode is applied to a current block may be entropy encoded.</p><p id="p-1331" num="1383">According to an embodiment, for the current block, information on whether or not an intra residual DPCM method is used may be entropy encoded. In addition, when the information on whether or not an intra residual DPCM method is used shows that an intra residual DPCM method is used for the current block, it may be determined that a transform skip mode is applied to the current block. On the other hand, when the information on whether or not an intra residual DPCM method is used shows that an intra residual DPCM method is not used for the current block, the transform skip mode flag of the current block may be entropy encoded.</p><p id="p-1332" num="1384">According to an embodiment, for the current block, a transform skip mode flag for a luma component, a transform skip mode flag for a Cb component, and a transform skip mode flag for a Cr component may be entropy encoded.</p><p id="p-1333" num="1385">In the step S<b>5704</b>, when a transform skip mode is applied to the current block according to the transform skip mode flag, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1334" num="1386">According to an embodiment, when a tree structure of the current block is a single tree type, the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1335" num="1387">According to an embodiment, when a tree structure of the current block is a dual tree luma type and the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1336" num="1388">According to an embodiment, when a tree structure of the current block is a dual tree chroma type, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component, it may be determined that a secondary transform/inverse transform is not applied to the current block.</p><p id="p-1337" num="1389">In the step S<b>5706</b>, when a transform skip mode is not applied to the current block, it may be determined whether or not a secondary transform/inverse transform is applied to the current block. In addition, according to whether or not a secondary transform/inverse transform is applied to the current block, a transform matrix index for the secondary transform/inverse transform of the current block may be entropy encoded.</p><p id="p-1338" num="1390">According to an embodiment, when a secondary transform/inverse transform is applied to the current block, a secondary transform matrix of the current block may be determined. In addition, according to whether or not a secondary transform/inverse transform is applied to the current block, the transform matrix index may be entropy encoded.</p><p id="p-1339" num="1391">According to an embodiment, whether or not a secondary transform/inverse transform is applied to the current block may be determined according to at least one of the transform matrix index, a size of the current block, and the transform skip mode flag. In addition, a secondary transform matrix of the current block may be determined according to at least one of the transform matrix index, a transform matrix set index of the current block, and the size of the current block.</p><p id="p-1340" num="1392">According to an embodiment, when the current block is predicted according to an intra prediction mode that is not a matrix based intra prediction mode, the transform matrix index may be entropy encoded.</p><p id="p-1341" num="1393">The embodiments of <figref idref="DRAWINGS">FIG. <b>56</b></figref> and <figref idref="DRAWINGS">FIG. <b>57</b></figref> are illustrative, and each step of <figref idref="DRAWINGS">FIG. <b>56</b></figref> and <figref idref="DRAWINGS">FIG. <b>57</b></figref> may be readily modified by those skilled in the art. In addition, each configuration of <figref idref="DRAWINGS">FIG. <b>56</b></figref> and <figref idref="DRAWINGS">FIG. <b>57</b></figref> may be omitted or replaced by other configuration. The video decoding method of <figref idref="DRAWINGS">FIG. <b>56</b></figref> may be performed in the decoder of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In addition, the video encoding method of <figref idref="DRAWINGS">FIG. <b>57</b></figref> may be performed in the encoder of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In addition, one or more processors may execute commands implementing each step of <figref idref="DRAWINGS">FIG. <b>56</b></figref> and <figref idref="DRAWINGS">FIG. <b>57</b></figref>. In addition, a program product including commands implementing each step of <figref idref="DRAWINGS">FIG. <b>56</b></figref> and <figref idref="DRAWINGS">FIG. <b>57</b></figref> may be stored in a memory device or be circulated online.</p><p id="p-1342" num="1394">In this specification, when predetermined information is obtained, it may mean that the information is entropy encoded from a bitstream.</p><p id="p-1343" num="1395">In an encoder, a transform/inverse transform may be performed by using at least one of the above-described embodiments in a transform/inverse transform process. Also, in a decoder, an inverse transform may be performed by using at least one of the above-described embodiments in an inverse transform process.</p><p id="p-1344" num="1396">In the above-described embodiments, on the basis of at least one coding parameter among an intra-prediction mode for a block, a prediction mode, a color component, a size, a form, subblock partition-related information, secondary transform performance information, and matrix based intra prediction performance information, at least one of a one-dimensional transform type, a two-dimensional transform combination, and whether or not a transform is used may be determined in a transform/inverse transform process.</p><p id="p-1345" num="1397">In the above-described embodiments, on the basis of at least one coding parameter among an intra-prediction mode for a block, a prediction mode, a color component, a size, a form, subblock partition-related information, secondary transform performance information, and matrix based intra prediction performance information, at least one of a reduced secondary transform/inverse transform matrix set, a reduced secondary transform/inverse transform matrix, and whether or not a reduced secondary transform/inverse transform is performed may be determined.</p><p id="p-1346" num="1398">In an encoder, quantization/dequantization may be performed by using the quantization matrix and the above-described embodiments in a quantization/dequantization process. Also, in a decoder, dequantization may be performed by using the recovered quantization matrix and the above-described embodiments in a dequantization process. The recovered quantization matrix may be a quantization matrix with a two-dimensional form.</p><p id="p-1347" num="1399">In the above-described embodiments, at least one of expressing, constructing, recovering, predicting and encoding/decoding a quantization matrix may be performed so that different quantization matrices are used in a quantization/dequantization process on the basis of at least one of a prediction mode for a block, a color component, a size, a form, a one-dimensional transform type, a two-dimensional transform combination, and whether or not a transform is used. Herein, at least one of quantization matrices, for which at least one of expressing, constructing, recovering, predicting and encoding/decoding is performed, may have at least one different coefficient in a quantization matrix according to at least one of a prediction mode, a color component, a size, a form, a one-dimensional transform type, a two-dimensional transform combination, and whether or not a transform is used.</p><p id="p-1348" num="1400">In the above-described embodiments, a transform coefficient level may be generated by using a quantization matrix for a transform coefficient during quantization in an encoder, and a transform coefficient may be generated by using a quantization matrix for a transform coefficient level during dequantization in a decoder. In the present invention, for the sake of convenience, both transform coefficient and transform coefficient level are commonly called transform coefficient.</p><p id="p-1349" num="1401">In the above-described embodiments, since an M&#xd7;N or N&#xd7;M quantization matrix is capable of being derived from a square M&#xd7;M quantization matrix, a quantization matrix expressed as M&#xd7;M size in quantization/dequantization may mean not only a square M&#xd7;M quantization matrix but also a non-square M&#xd7;N or N&#xd7;M quantization matrix. Here, M and N may be a positive integer and have a value from 2 to 64. In addition, M and N may be different values from each other.</p><p id="p-1350" num="1402">For example, since a non-square 16&#xd7;4 or 4&#xd7;16 quantization matrix is capable of being derived from a square 16&#xd7;16 quantization matrix in quantization/dequantization, a quantization matrix expressed as 16&#xd7;16 size in quantization/dequantization may mean not only a square 16&#xd7;16 quantization matrix but also a non-square 16&#xd7;4 or 4&#xd7;16 quantization matrix.</p><p id="p-1351" num="1403">In the above-described embodiments, quantization matrix information may mean information necessary for at least one of a quantization matrix and quantization matrix derivation. Herein, information necessary for deriving a quantization matrix may include at least one of information on whether or not a quantization matrix is used, information on whether or not a quantization matrix is present, information on a method of predicting a quantization matrix, a reference matrix identifier, a DC matrix coefficient or a lowest frequency matrix coefficient, and a difference value between a previously encoded/decoded quantization matrix coefficient value in a quantization matrix and a quantization matrix coefficient value to be encoded/decoded.</p><p id="p-1352" num="1404">The above embodiments of the present invention may be applied according to a size of at least one of a block and a unit. Herein, the size may be defined as a minimum size or maximum size or both so that the above embodiments are applied, or may be defined as a fixed size to which the above embodiment is applied. In addition, among the above embodiments, a first embodiment may be applied to a first size, and a second embodiment may be applied to a second size. In other words, the above embodiments may be applied in combination depending on a size. In addition, the above embodiments may be applied only when a size is equal to or greater than a minimum size and equal to or smaller than a maximum size. In other words, the above embodiments may be applied only when a block size is within a predetermined range.</p><p id="p-1353" num="1405">In addition, the above embodiments may be applied only when a size is equal to or greater than a minimum size and equal to or smaller than a maximum size. Here, the minimum size and the maximum size may be one of a block size and a unit size, respectively. In other words, a target block of a minimum size and a target block of a maximum size may be different from each other. In addition, the above embodiments may be applied when a size of current block is equal to or greater that a minimum size of a block and equal to or smaller than a maximum size of a block.</p><p id="p-1354" num="1406">For example, the above embodiments may be applied only when a size of current block is equal to or greater than 8&#xd7;8. For example, the above embodiments may be applied only when a size of current block is equal to or greater than 16&#xd7;16. For example, the above embodiments may be applied only when a size of current block is equal to or greater than 32&#xd7;32. For example, the above embodiments may be applied only when a size of current block is equal to or greater than 64&#xd7;64. For example, the above embodiments may be applied only when a size of current block is equal to or greater than 128&#xd7;128. For example, the above embodiments may be applied only when a size of current block is 4&#xd7;4. For example, the above embodiments may be applied only when a size of current block is equal to or smaller than 8&#xd7;8. For example, the above embodiments may be applied only when a size of current block is equal to or smaller than 16&#xd7;16. For example, the above embodiments may be applied only when a size of current block is equal to or greater than 8&#xd7;8 and equal to or smaller than 16&#xd7;16. For example, the above embodiments may be applied only when a size of current block is equal to or greater than 16&#xd7;16 and equal to or smaller than 64&#xd7;64.</p><p id="p-1355" num="1407">The above embodiments may be performed in the same method in an encoder and a decoder.</p><p id="p-1356" num="1408">At least one or a combination of the above embodiments may be used to encode/decode a video.</p><p id="p-1357" num="1409">A sequence of applying to above embodiment may be different between an encoder and a decoder, or the sequence applying to above embodiment may be the same in the encoder and the decoder.</p><p id="p-1358" num="1410">The above embodiment may be performed on each luma signal and chroma signal, or the above embodiment may be identically performed on luma and chroma signals.</p><p id="p-1359" num="1411">A block form to which the above embodiments of the present invention are applied may have a square form or a non-square form.</p><p id="p-1360" num="1412">Only any one of the above-described embodiment is not applied to the encoding/decoding process of the current block, but a combination of at least one of the embodiments or specific embodiments is applicable to the encoding/decoding process of the current block.</p><p id="p-1361" num="1413">At least one of syntax elements (flags, indices, etc.) entropy-coded by the encoder and entropy-decoded by the decoder may use at least one of the following binarization/debinarization methods and entropy-coding/decoding methods.<ul id="ul0100" list-style="none">    <li id="ul0100-0001" num="0000">    <ul id="ul0101" list-style="none">        <li id="ul0101-0001" num="1414">Signed 0-th order Exp_Golomb binarization/debinarization method (se(v))</li>        <li id="ul0101-0002" num="1415">Signed k-th order Exp_Golomb binarization/debinarization method (sek(v))</li>        <li id="ul0101-0003" num="1416">Unsigned 0-th order Exp_Golomb binarization/debinarization method (ue(v))</li>        <li id="ul0101-0004" num="1417">Unsigned k-th order Exp_Golomb binarization/debinarization method (uek(v))</li>        <li id="ul0101-0005" num="1418">Fixed-length binarization/debinarization method (f(n))</li>        <li id="ul0101-0006" num="1419">Truncated Rice binarization/debinarization method or Truncated Unary binarization/debinarization method (tu(v))</li>        <li id="ul0101-0007" num="1420">Truncated binary binarization/debinarization method (tb(v))</li>        <li id="ul0101-0008" num="1421">Context-adaptive arithmetic encoding/decoding method (ae(v))</li>        <li id="ul0101-0009" num="1422">Byte-unit bit string (b(8))</li>        <li id="ul0101-0010" num="1423">Signed integer binarization/debinarization method (i(n))</li>        <li id="ul0101-0011" num="1424">Unsigned integer binarization/debinarization method (u(n))</li>        <li id="ul0101-0012" num="1425">Unary binarization/debinarization method</li>    </ul>    </li></ul></p><p id="p-1362" num="1426">The above embodiment of the present invention may be applied depending on a size of at least one of a coding block, a prediction block, a transform block, a block, a current block, a coding unit, a prediction unit, a transform unit, a unit, and a current unit. Herein, the size may be defined as a minimum size or maximum size or both so that the above embodiments are applied, or may be defined as a fixed size to which the above embodiment is applied. In addition, in the above embodiments, a first embodiment may be applied to a first size, and a second embodiment may be applied to a second size. In other words, the above embodiments may be applied in combination depending on a size. In addition, the above embodiments may be applied when a size is equal to or greater that a minimum size and equal to or smaller than a maximum size. In other words, the above embodiments may be applied when a block size is included within a certain range.</p><p id="p-1363" num="1427">For example, the above embodiments may be applied when a size of current block is 8&#xd7;8 or greater. For example, the above embodiments may be applied when a size of current block is 4&#xd7;4 only. For example, the above embodiments may be applied when a size of current block is 16&#xd7;16 or smaller. For example, the above embodiments may be applied when a size of current block is equal to or greater than 16&#xd7;16 and equal to or smaller than 64&#xd7;64.</p><p id="p-1364" num="1428">The above embodiments of the present invention may be applied depending on a temporal layer. In order to identify a temporal layer to which the above embodiments may be applied, a corresponding identifier may be signaled, and the above embodiments may be applied to a specified temporal layer identified by the corresponding identifier. Herein, the identifier may be defined as the lowest layer or the highest layer or both to which the above embodiment may be applied, or may be defined to indicate a specific layer to which the embodiment is applied. In addition, a fixed temporal layer to which the embodiment is applied may be defined.</p><p id="p-1365" num="1429">For example, the above embodiments may be applied when a temporal layer of a current image is the lowest layer. For example, the above embodiments may be applied when a temporal layer identifier of a current image is 1. For example, the above embodiments may be applied when a temporal layer of a current image is the highest layer.</p><p id="p-1366" num="1430">A slice type or a tile group type to which the above embodiments of the present invention are applied may be defined, and the above embodiments may be applied depending on the corresponding slice type or tile group type.</p><p id="p-1367" num="1431">In the above-described embodiments, the methods are described based on the flowcharts with a series of steps or units, but the present invention is not limited to the order of the steps, and rather, some steps may be performed simultaneously or in different order with other steps. In addition, it should be appreciated by one of ordinary skill in the art that the steps in the flowcharts do not exclude each other and that other steps may be added to the flowcharts or some of the steps may be deleted from the flowcharts without influencing the scope of the present invention.</p><p id="p-1368" num="1432">The embodiments include various aspects of examples. All possible combinations for various aspects may not be described, but those skilled in the art will be able to recognize different combinations. Accordingly, the present invention may include all replacements, modifications, and changes within the scope of the claims.</p><p id="p-1369" num="1433">The embodiments of the present invention may be implemented in a form of program instructions, which are executable by various computer components, and recorded in a computer-readable recording medium. The computer-readable recording medium may include stand-alone or a combination of program instructions, data files, data structures, etc. The program instructions recorded in the computer-readable recording medium may be specially designed and constructed for the present invention, or well-known to a person of ordinary skilled in computer software technology field. Examples of the computer-readable recording medium include magnetic recording media such as hard disks, floppy disks, and magnetic tapes; optical data storage media such as CD-ROMs or DVD-ROMs; magneto-optimum media such as floptical disks, and hardware devices, such as read-only memory (ROM), random-access memory (RAM), flash memory, etc., which are particularly structured to store and implement the program instruction. Examples of the program instructions include not only a mechanical language code formatted by a compiler but also a high-level language code that may be implemented by a computer using an interpreter. The hardware devices may be configured to be operated by one or more software modules or vice versa to conduct the processes according to the present invention.</p><p id="p-1370" num="1434">Although the present invention has been described in terms of specific items such as detailed elements as well as the limited embodiments and the drawings, they are only provided to help more general understanding of the invention, and the present invention is not limited to the above embodiments. It will be appreciated by those skilled in the art to which the present invention pertains that various modifications and changes may be made from the above description.</p><p id="p-1371" num="1435">Therefore, the spirit of the present invention shall not be limited to the above-described embodiments, and the entire scope of the appended claims and their equivalents will fall within the scope and spirit of the invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230007290A1-20230105-M00001.NB"><img id="EMI-M00001" he="8.13mm" wi="76.20mm" file="US20230007290A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230007290A1-20230105-M00002.NB"><img id="EMI-M00002" he="5.67mm" wi="76.20mm" file="US20230007290A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003" nb-file="US20230007290A1-20230105-M00003.NB"><img id="EMI-M00003" he="8.13mm" wi="76.20mm" file="US20230007290A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004" nb-file="US20230007290A1-20230105-M00004.NB"><img id="EMI-M00004" he="5.67mm" wi="76.20mm" file="US20230007290A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00005" nb-file="US20230007290A1-20230105-M00005.NB"><img id="EMI-M00005" he="12.36mm" wi="76.20mm" file="US20230007290A1-20230105-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A video decoding method, the method comprising:<claim-text>obtaining a transform skip mode flag indicating whether transform/inverse transform is skipped in a current block;</claim-text><claim-text>when transform/inverse transform is skipped in the current block according to the transform skip mode flag, determining that secondary transform/inverse transform is skipped in the current block; and</claim-text><claim-text>when transform/inverse transform is not skipped in the current block according to the transform skip mode flag, obtaining a transform matrix index for secondary transform/inverse transform of the current block and, determining whether secondary transform/inverse transform is skipped in the current block based on the transform matrix index.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The video decoding method of <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the obtaining of the transform skip mode flag comprises obtaining a transform skip mode flag for a luma component, a transform skip mode flag for a Cb component, and a transform skip mode flag for a Cr component.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The video decoding method of <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a single-tree type, the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The video decoding method of <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual tree luma type and the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The video decoding method of <claim-ref idref="CLM-00002">claim 2</claim-ref> wherein the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual-tree chroma type, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The video decoding method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:<claim-text>when secondary transform/inverse transform is applied to the current block, determining a secondary transform matrix of the current block according to the transform matrix index; and</claim-text><claim-text>applying secondary transform/inverse transform to the current block according to the secondary transform matrix.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The video decoding method of <claim-ref idref="CLM-00006">claim 6</claim-ref>,<claim-text>wherein the determining of the secondary transform matrix of the current block comprises determining the secondary transform matrix of the current block according to at least one of the transform matrix index, a transform matrix set index of the current block, and a size of the current block.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The video decoding method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>obtaining information on whether an intra residual DPCM method is used; and</claim-text><claim-text>when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is used for the current block, determining that transform/inverse transform is skipped in the current block,</claim-text><claim-text>wherein the obtaining of the transform skip mode flag comprises obtaining the transform skip mode flag, when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is not used for the current block.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The video decoding method of <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the transform matrix index for secondary transform/inverse transform of the current block is obtained when the current block is predicted according to an intra-prediction mode that is not a matrix-based intra-prediction mode.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The video decoding method of <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the determining of, according to the transform matrix index, whether secondary transform/inverse transform is skipped in the current block comprises determining whether secondary transform/inverse transform is skipped in the current block according to at least one of the transform matrix index, the size of the current block, and the transform skip mode flag.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A video encoding method, the method comprising:<claim-text>encoding a transform skip mode flag indicating whether transform/inverse transform is skipped in a current block;</claim-text><claim-text>when a transform skip mode is skipped in the current block according to the transform skip mode flag, determining that secondary transform/inverse transform is skipped in the current block; and</claim-text><claim-text>when a transform skip mode is not skipped in the current block according to the transform skip mode flag, determining whether secondary transform/inverse transform is skipped in the current block and, encoding a transform matrix index for secondary transform/inverse transform of the current block according to whether secondary transform/inverse transform is skipped in the current block.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The video encoding method of <claim-ref idref="CLM-00011">claim 11</claim-ref>,<claim-text>wherein the encoding of the transform skip mode flag comprises encoding a transform skip mode flag for a luma component, a transform skip mode flag for a Cb component, and a transform skip mode flag for a Cr component.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The video encoding method of <claim-ref idref="CLM-00012">claim 12</claim-ref>,<claim-text>wherein the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a single-tree type, the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The video encoding method of <claim-ref idref="CLM-00012">claim 12</claim-ref>,<claim-text>wherein the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual tree luma type and the transform skip mode flag for the luma component indicates that a transform skip mode is applied to the luma component.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The video encoding method of <claim-ref idref="CLM-00012">claim 12</claim-ref>,<claim-text>wherein the determining of that secondary transform/inverse transform is skipped in the current block comprises determining that secondary transform/inverse transform is skipped in the current block, when a tree structure of the current block is a dual-tree chroma type, the transform skip mode flag for the Cb component indicates that a transform skip mode is applied to the Cb component, and the transform skip mode flag for the Cr component indicates that a transform skip mode is applied to the Cr component.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The video encoding method of <claim-ref idref="CLM-00011">claim 11</claim-ref>,<claim-text>wherein the encoding of the transform matrix index comprises:</claim-text><claim-text>when secondary transform/inverse transform is applied to the current block, determining a secondary transform matrix of the current block; and</claim-text><claim-text>depending on whether secondary transform/inverse transform is applied to the current block, encoding the transform matrix index.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The video encoding method of <claim-ref idref="CLM-00016">claim 16</claim-ref>,<claim-text>wherein the determining of the secondary transform matrix of the current block comprises determining the secondary transform matrix of the current block according to at least one of the transform matrix index, a transform matrix set index of the current block, and a size of the current block.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The video encoding method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>encoding information on whether or not an intra residual DPCM method is used; and</claim-text><claim-text>when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is used for the current block, determining that transform/inverse transform is skipped in the current block,</claim-text><claim-text>wherein the encoding of the transform skip mode flag comprises encoding the transform skip mode flag, when the information on whether an intra residual DPCM method is used indicates that the intra residual DPCM method is not used for the current block.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The video encoding method of <claim-ref idref="CLM-00011">claim 11</claim-ref>,<claim-text>wherein the encoding of the transform matrix index for secondary transform/inverse transform of the current block comprises encoding the transform matrix index, when the current block is predicted according to an intra-prediction mode that is not a matrix-based intra-prediction mode.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A computer-readable recording medium for storing a bitstream generated by encoding a video through a video encoding method,<claim-text>wherein the video encoding method comprises:</claim-text><claim-text>encoding a transform skip mode flag indicating whether transform/inverse transform is skipped in a current block;</claim-text><claim-text>when a transform skip mode is skipped in the current block according to the transform skip mode flag, determining that secondary transform/inverse transform is skipped in the current block; and</claim-text><claim-text>when a transform skip mode is not skipped in the current block according to the transform skip mode flag, determining whether secondary transform/inverse transform is skipped in the current block and, encoding a transform matrix index for secondary transform/inverse transform of the current block according to whether secondary transform/inverse transform is skipped in the current block.</claim-text></claim-text></claim></claims></us-patent-application>