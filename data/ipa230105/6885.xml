<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006886A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006886</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17530826</doc-number><date>20211119</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>IN</country><doc-number>202141030116</doc-number><date>20210705</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>12</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0893</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>455</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>12</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0893</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>45558</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2009</main-group><subgroup>45595</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">CRITERIA-BASED EXPANSION OF GROUP NODES IN A NETWORK TOPOLOGY VISUALIZATION</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>VMware, Inc.</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Parashar</last-name><first-name>Shrinivas Sharad</first-name><address><city>Pune</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Luthra</last-name><first-name>Priyanka</first-name><address><city>Pune</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Khandelwal</last-name><first-name>Tarang</first-name><address><city>Pune</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Annadata</last-name><first-name>Sarat Chandra</first-name><address><city>Pune</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Some embodiments provide a method for presenting a visualization of a topology for a logical network. In response to receiving a selection of a particular user interface (UI) item representing a particular group of logical elements, the method presents one or more filter UI items for the particular group of logical elements. Each filter UI item corresponds to a different attribute associated with the logical elements. Upon receiving selection of one or more attribute states for each attribute for which a filter UI item is presented, the method identifies logical elements in the group of logical elements that match the selected attribute states. The method presents, in the UI, an expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="191.69mm" wi="158.75mm" file="US20230006886A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="219.71mm" wi="167.81mm" file="US20230006886A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="195.50mm" wi="163.07mm" file="US20230006886A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="187.71mm" wi="134.45mm" file="US20230006886A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="243.50mm" wi="158.67mm" file="US20230006886A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="198.71mm" wi="151.30mm" file="US20230006886A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="214.71mm" wi="169.59mm" file="US20230006886A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="198.71mm" wi="151.30mm" file="US20230006886A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="174.41mm" wi="169.16mm" orientation="landscape" file="US20230006886A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="240.37mm" wi="170.26mm" orientation="landscape" file="US20230006886A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="168.66mm" wi="164.34mm" orientation="landscape" file="US20230006886A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="243.59mm" wi="171.87mm" orientation="landscape" file="US20230006886A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="192.70mm" wi="146.73mm" orientation="landscape" file="US20230006886A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Today, network topologies represent hierarchical relationships between logical elements such as gateways, segments, virtual machines (VMs), containers, etc. In a scaled environment, scenarios exist in which hundreds of child nodes are connected to a parent node (e.g., hundreds of VMs connected to a single segment), which are initially represented as a group node. When such a group node is expanded, all of the individual nodes are displayed on the graph at once, which can lead to context loss for users, while also making it difficult to focus on any specific logical elements of interest.</p><heading id="h-0002" level="1">BRIEF SUMMARY</heading><p id="p-0003" num="0002">Some embodiments of the invention provide a method for presenting a visualization of a logical network topology. In response to receiving a selection of a particular user interface (UI) item that represents a particular group of logical elements, the method presents one or more filter UI items corresponding to a different attribute associated with the logical elements of the group. Based on selection of one or more attribute states for each attribute for which a filter UI item is presented, the method identifies logical elements in the group of logical elements that match the selected attribute states and presents in the UI an expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states.</p><p id="p-0004" num="0003">The particular UI item, in some embodiments, is part of a set of UI items presented hierarchically in the UI. Each UI item in the set represents one or more logical elements of a respective type. In some embodiments, the set of UI items are arranged in the UI hierarchically by type of logical element and based on logical network connections. In some embodiments, the set of logical element types include at least virtual machine (VM), logical switch, tier-1 logical router that connects groups of logical switches, and tier-0 logical router that connects other logical elements in the logical network to external networks. The UI items representing these logical elements are presented with the logical network endpoints (e.g., VMs, containers, bare metal computers, etc.) at the bottom. In some embodiments, each logical network endpoint connects to a logical switch (each of which may have multiple connected endpoints). In turn, most logical switches connect to a tier-1 logical router (each of which may have multiple connected logical switches), and most tier-1 logical routers connect to a tier-0 logical router (each of which may have multiple connected tier-1 logical routers). Additionally, logical switches can also connect directly to tier-0 logical routers (each of which may have one or more connected logical switches in addition to connected tier-1 logical routers).</p><p id="p-0005" num="0004">The particular UI item representing the group of logical elements, in some embodiments, is a group node. In some embodiments, the UI represents a group of logical elements using a group node when the number of logical elements in the group exceeds a threshold number. Additionally, when one or more items representing logical elements and/or groups of logical elements of a first type (e.g., VMs) are logically connected to one or more logical elements in a group of logical elements of a second type (e.g., logical switches) that is higher in the hierarchy than the first type and that is represented by a group node, some embodiments group the one or more first-type logical elements using a single group node under the group node representing the second-type logical elements. In some embodiments, this is done irrespective of (i) whether the number of first-type logical elements exceeds a threshold number and (ii) whether the first-type logical elements all connect to the same second-type logical element (e.g., a group of VMs connected to different logical switches that are grouped together). In other words, when a group of parent nodes are represented as a single group node, in some embodiments, all of the child nodes of those parent nodes are also represented as a single group node under the parent group node.</p><p id="p-0006" num="0005">In order to present one or more filter UI items for the particular group of logical elements, some embodiments identify a set of potential attributes associated with the logical elements, and, for each potential attribute in the set of potential attributes, determine a current state of the attribute for each logical element in the particular group of logical elements. When at least two logical elements in the particular group have different current states for a particular attribute in the set of potential attributes, in some embodiments, a filter UI item corresponding to the particular attribute is presented. For instance, selection of a group node for VMs could bring up a filter UI item allowing selection of VMs that are powered on or powered off (or both). In some embodiments, each filter UI item presents at least two different states for the particular attribute as selectable attribute states for the attribute corresponding to the filter UI item, and for each potential attribute for which all logical elements in the particular group of logical elements have a same current state, no filter UI item is presented in the UI (e.g., if all VMs in the group are powered on, then no filter UI item is presented for the powered on/off state).</p><p id="p-0007" num="0006">The method expands the group node based on the selection of the filter UI items specifying which members of the represented group of logical elements the user wants to see emphasized. In some embodiments, the expanded version of the particular group of logical elements includes (i) a set of individual nodes that each represent a logical element with attribute states matching the filter UI item selections and (ii) one or more group nodes representing the other logical elements in the group that do not match the selected attribute states. In some embodiments, though, when the number of logical elements with attribute states matching the filter UI item selections and that are represented by nodes that are children of the same parent node exceeds a threshold, these nodes are still presented as a group node (i.e., a separate group node that includes only nodes representing logical elements that match the selected attribute state(s)). Prior to the expansion, the group node representing the group of logical elements specifies a first number of logical elements represented by the node and after the expansion, each new group node specifies a second number of logical elements represented by the new group node to reflect the filtered logical elements.</p><p id="p-0008" num="0007">When the particular group of logical elements are children of another group of logical elements that is higher in the hierarchy and also represented by a group node, some embodiments present an expanded version of the other group node in addition to an expanded version of the particular group of logical elements such that any logical elements in the other group that are logically connected to at least one of the identified logical elements are represented as individual nodes, while the remaining logical elements are represented by a group node. In this case, multiple group nodes for the particular group of logical elements. For instance, if a group of VMs is expanded, then the logical switches to which that group of VMs connect may also need to be expanded, and some of these logical switches may have groups of connected VMs that do not match the attribute states selected in the filter UI item.</p><p id="p-0009" num="0008">The preceding Summary is intended to serve as a brief introduction to some embodiments of the invention. It is not meant to be an introduction or overview of all inventive subject matter disclosed in this document. The Detailed Description that follows and the Drawings that are referred to in the Detailed Description will further describe the embodiments described in the Summary as well as other embodiments. Accordingly, to understand all the embodiments described by this document, a full review of the Summary, the Detailed Description, the Drawings, and the Claims is needed. Moreover, the claimed subject matters are not to be limited by the illustrative details in the Summary, the Detailed Description, and the Drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF FIGURES</heading><p id="p-0010" num="0009">The novel features of the invention are set forth in the appended claims. However, for purposes of explanation, several embodiments of the invention are set forth in the following figures.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a process performed in some embodiments to determine the attribute states to be presented as filter UI items for a selected group of logical elements.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a logical network topology presented in a UI diagram of some embodiments in which a group node has been selected for filtering.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a logical network topology presented in another UI diagram of some embodiments in which another group node has been selected for filtering.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a process performed in some embodiments following the process described in <figref idref="DRAWINGS">FIG. <b>1</b></figref> when one or more filter UI items for a group of logical elements have been selected.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>C</figref> illustrate UIs of a simple logical network topology in some embodiments before a user has selected any filter UI items, and after a user has selected a filter UI item, respectively.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>B</figref> illustrate UIs of a more complex logical network topology in some embodiments before a user has selected any filter UI items, and after a user has selected a filter UI item, respectively.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>B</figref> illustrate additional examples of UIs of a more complex logical network topology in some embodiments before a user has selected any filter UI items, and after a user has selected a filter UI item, respectively.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>8</b></figref> conceptually illustrates a computer system with which some embodiments of the invention are implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0019" num="0018">In the following detailed description of the invention, numerous details, examples, and embodiments of the invention are set forth and described. However, it will be clear and apparent to one skilled in the art that the invention is not limited to the embodiments set forth and that the invention may be practiced without some of the specific details and examples discussed.</p><p id="p-0020" num="0019">Some embodiments of the invention provide a method for presenting a visualization of a logical network topology. In response to receiving a selection of a particular user interface (UI) item that represents a particular group of logical elements, the method presents one or more filter UI items corresponding to a different attribute associated with the logical elements of the group. Based on selection of one or more attribute states for each attribute for which a filter UI item is presented, the method identifies logical elements in the group of logical elements that match the selected attribute states and presents in the UI an expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states.</p><p id="p-0021" num="0020">In some embodiments, the particular UI item is part of a set of UI items presented hierarchically in the UI. Each UI item in the set represents one or more logical elements of a respective type. In some embodiments, the set of UI items are arranged in the UI hierarchically by type of logical element and based on logical network connections. In some embodiments, the set of logical element types include at least virtual machine (VM), logical switch, tier-1 logical router that connects groups of logical switches, and tier-0 logical router that connects other logical elements in the logical network to external networks. The UI items representing these logical elements are presented with the logical network endpoints (e.g., VMs, containers, bare metal computers, etc.) at the bottom. In some embodiments, each logical network endpoint connects to a logical switch (each of which may have multiple connected endpoints). In turn, most logical switches connect to a tier-1 logical router (each of which may have multiple connected logical switches), and most tier-1 logical routers connect to a tier-0 logical router (each of which may have multiple connected tier-1 logical routers). Additionally, logical switches can also connect directly to tier-0 logical routers (each of which may have one or more connected logical switches in addition to connected tier-1 logical routers).</p><p id="p-0022" num="0021">The particular UI item representing the group of logical elements, in some embodiments, is a group node. In some embodiments, the UI represents a group of logical elements using a group node when the number of logical elements in the group exceeds a threshold number. Additionally, when one or more items representing logical elements and/or groups of logical elements of a first type (e.g., VMs) are logically connected to one or more logical elements in a group of logical elements of a second type (e.g., logical switches) that is higher in the hierarchy than the first type and that is represented by a group node, some embodiments group the one or more first-type logical elements using a single group node under the group node representing the second-type logical elements. In some embodiments, this is done irrespective of (i) whether the number of first-type logical elements exceeds a threshold number and (ii) whether the first-type logical elements all connect to the same second-type logical element (e.g., a group of VMs connected to different logical switches that are grouped together). In other words, when a group of parent nodes are represented as a single group node, in some embodiments, all of the child nodes of those parent nodes are also represented as a single group node under the parent group node.</p><p id="p-0023" num="0022">As mentioned, when expanding a group node representing a group of logical elements, some embodiments present one or more filter UI items for the particular group of logical elements. Specifically, some embodiments identify a set of attributes for which selectable attribute states should be presented as filter UI items and then present those attribute states for selection. In some embodiments, when the number of nodes in a set of nodes that represent logical elements with attribute states matching a selected filter UI item and that are children of the same parent node does not exceed the threshold for presenting logical elements of that type as a group node, the logical elements are represented by individual nodes in the expanded group node. Conversely, when the number of nodes in a set of nodes that represent logical elements with attribute states matching the selected filter UI item and that are children of the same parent node does exceed this threshold, the logical elements are represented by a separate group node in the expanded group node. In order to make clear which group nodes represent logical elements matching the selected filter UI item group node, in some embodiments, the group node is presented differently (e.g., with a thicker outline, with a different color, etc.) than other group nodes that do not represent logical elements with attribute states matching the selected filter UI item.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> conceptually illustrates a process <b>100</b> of some embodiments for determining attributes to be presented as filter UI items for a selected group of logical elements. In some embodiments, the process <b>100</b> is performed by a network visualization application. This application may be a stand-alone application or part of a larger network management application. The process <b>100</b> will be described below with reference to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>, which illustrate example UIs presenting different filter UI items based on different group node selections.</p><p id="p-0025" num="0024">The process <b>100</b> starts by receiving (at <b>110</b>) a selection of a group node representing a group of logical elements. As mentioned above, the types of logical elements, in some embodiments, include VMs, logical switches, tier-1 logical routers that connect groups of logical switches, tier-0 logical routers that connect other logical elements in the logical network to external networks, and/or other logical forwarding elements. The selection of a group node may be performed by a user via a cursor selection, touchscreen selection, or other selection mechanism. For example, the UI <b>200</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a logical network with a tier-0 gateway (represented by node <b>225</b>). Connected to this tier-01 gateway is a tier-1 gateway (represented by node <b>230</b>), as well as 25 segments that connect directly to the tier-0 gateway and are represented by a group node <b>210</b>. Collectively, 150 VMs connect to these 25 segments and are represented by a group node <b>235</b>. In some embodiments, when a group node is displayed for a logical element at a first level in the hierarchy (e.g., the group node <b>210</b>), all of the elements at a second level below the first level in the hierarchy that connect to any of the grouped elements are themselves grouped, even if they do not all connect to the same individual logical element in the group. Similarly, 10 segments connect to the tier-1 gateway and are represented by a group node <b>220</b>, with 40 VMs collectively connected to these 10 segments and represented by a group node <b>240</b>. In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the group node <b>210</b> representing 25 segments is selected by a cursor <b>205</b>. Similarly, the UI <b>300</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates the group node <b>220</b> representing 10 segments being selected by the cursor <b>205</b>.</p><p id="p-0026" num="0025">The process identifies (at <b>120</b>) a set of potential attributes associated with the logical elements represented by the group node. For example, if the selected group node represents a virtual machine, the potential attributes can include whether or not the VM is powered on or off, VM tags and tag scope, as well as any custom filters defined by a user (e.g., &#x201c;VM name starts with . . . &#x201d;). Additionally, examples of potential attributes for tier-1 gateway logical routers include failover mode (e.g., preemptive or non-preemptive), multicast state (e.g., enabled or disabled), DHCP state (e.g., configured or not configured), virtual private network (VPN) service state (e.g., configured or not configured), state of network address translation (NAT) rules (e.g., configured or not configured), load balancer state (e.g., configured or not configured), gateway firewall state (e.g., enabled or disabled), alarm state (i.e., whether any alarms are set), realization status, gateway tags and tag scope, and any custom filters defined by a user. Lastly, examples of potential attributes for layer-2 segments include segment type (e.g., whether the segment is an overlay logical switch or an uplink VLAN), alarm state (i.e., whether any alarms are set on any segments), DHCP state (e.g., configured or not configured), admin state (e.g., up or down), connectivity state (e.g., on or off), replication mode (e.g., hierarchical two-tier replication or head end replication), realization status, segment tags and tag scope, as well as any user-defined custom filters.</p><p id="p-0027" num="0026">The process then selects (at <b>130</b>) an attribute from the set of potential attributes identified for the logical elements, and determines (at <b>140</b>) a current state of the selected attribute for each logical element in the group. For the VM attribute of powered on/off, for example, the process determines for each VM in the group whether the VM is powered on or off at the time the group node is selected. Similarly, for a group of L2 segments, the process determines the segment type for each segment, whether any alarms are set on the segment, etc. Some of the attribute states are immutable for a given logical element (e.g., whether the segment is an overlay logical switch or a VLAN), while other attribute states can change at any time (e.g., whether a VM is powered on, whether any alarms are set on a segment, etc.).</p><p id="p-0028" num="0027">After determining the current state of the selected attribute for each logical element in the group, the process determines (at <b>150</b>) whether at least two logical elements in the group have different attribute states for the selected attribute. For example, if the selected group node represents a group of segments, and the current selected attribute is segment type, at least two of the segments would have to be determined to be of at least two different types for the attribute to be used as a filter UI item. When the process determines (at <b>150</b>) that at least two logical elements in the group do not have different attribute states for the selected attribute (i.e., all of the logical elements have the same current state for the attribute), the process transitions to <b>160</b> and does not present the selected attribute as a filter UI item. Following <b>160</b>, the process transitions to <b>180</b>.</p><p id="p-0029" num="0028">Otherwise, when the process determines (at <b>150</b>) that at least two logical elements in the selected group have different states for the selected attribute, the process transitions to <b>170</b> to present the selected attribute as a filter UI item for the group of logical elements. The process in some embodiments presents attributes as filter UI items by presenting the different attribute states as selectable filter UI items for filtering the selected group of logical elements. In some embodiments, different groups of logical elements of the same type can have different filter UI items presented for selection based on the determined current states of the attributes. For example, in the UI <b>200</b>, the selected group node <b>210</b> has a set of filter UI items <b>215</b> for three attributes including segment type (e.g., VLAN or overlay), alarms (e.g., whether any alarms are set on the segments or not), and a custom filter for filtering out segments with names that start with &#x201c;v&#x201d;. In another example, the selected group node <b>220</b> in the UI <b>300</b> has a set of filter UI items <b>325</b> allowing the segments in the group node <b>220</b> to be filter based on whether DHCP is enabled or disabled. The latter filter (DHCP enabled/disabled) is not presented for the group node <b>210</b> because all of the segments represented by that group node <b>210</b> have the same DHCP setting. Similarly, all of the segments represented by the group node <b>220</b> are the same segment type and have the same alarm state.</p><p id="p-0030" num="0029">After presenting the attributes (at <b>170</b>), the process determines (at <b>180</b>) whether there are additional attributes in the set of potential attributes for which current states need to be determined for the group of logical elements. When the process determines (at <b>180</b>) that there are additional attributes in the set, the process transitions back to <b>130</b> to select an attribute. Otherwise, when the process determines (at <b>180</b>) that there are no other attributes in the set, the process ends. It should be understood that the process <b>100</b> is a conceptual process, and the actual operations performed by a network visualization application might be slightly different. For instance, rather than serially determining the states for each attribute and whether to present options for that attribute in the UI, some embodiments examine each attribute in parallel and present all of the filter UI items together at once. In addition, while <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref> display all of the filter UI items as part of a single UI construct, other embodiments display a separate UI construct for each attribute that is presented.</p><p id="p-0031" num="0030">The method expands the group node based on the selection of the filter UI items specifying which members of the represented group of logical elements the user wants to see emphasized. In some embodiments, the expanded version of the particular group of logical elements includes (i) a set of individual nodes that each represent a logical element with attribute states matching the filter UI item selections and (ii) one or more group nodes representing the other logical elements in the group that do not match the selected attribute states. Prior to the expansion, the group node representing the group of logical elements specifies a first number of logical elements represented by the node and after the expansion, each new group node specifies a second number of logical elements represented by the new group node to reflect the filtered logical elements.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a process <b>400</b> performed in some embodiments following the selection of one or more of the filter UI items for a group of logical elements. As with the process <b>100</b> described above, the process <b>400</b> of some embodiments is performed by a network visualization application (e.g., a stand-alone application or part of a larger network management application). The process <b>400</b> will be described with reference to the UI examples illustrated in <figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>C, <b>6</b>A-<b>6</b>B, and <b>7</b>A-<b>7</b>B</figref>.</p><p id="p-0033" num="0032">The process <b>400</b> starts (at <b>405</b>) by receiving a selection of a set of attribute states for a selected group node representing a group of logical elements. These selections can be performed via a cursor controller selection, a touchscreen selection, keyboard selection, or other selection mechanism. For example, <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> illustrates a UI <b>500</b><i>a </i>of a simple logical network topology before a user has selected any filter UI items, <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates a UI <b>500</b><i>b </i>after the user has selected a filter UI item, and <figref idref="DRAWINGS">FIG. <b>5</b>C</figref> illustrates a UI <b>500</b><i>c </i>after a user has selected an alternate filter UI item.</p><p id="p-0034" num="0033">In the UI <b>500</b><i>a</i>, a cursor <b>505</b> is shown selecting a group node <b>510</b><i>a </i>representing a group of 150 VMs, causing a set of selectable filter UI items <b>515</b> to be presented. The VMs represented by the group node <b>510</b><i>a </i>logically connect to a single segment (e.g., a logical switch) represented by the node <b>530</b>, which is logically connected to a tier-0 gateway logical router represented by node <b>550</b>. In addition to its logical connection to the segment represented by node <b>530</b>, the tier-0 gateway also connects to networks external to the logical network presented in the UI <b>500</b><i>a </i>(i.e., via connections <b>560</b>), as well as to a tier-1 gateway logical router represented by node <b>540</b>. The tier-1 gateway logical router then logically connects to a segment represented by node <b>535</b>, which logically connects to another group of 40 VMs represented by group node <b>520</b>.</p><p id="p-0035" num="0034">The filter UI items <b>515</b> presented for the group node <b>510</b><i>a </i>are for filtering VMs in the group based on whether they are powered on or powered off, as shown. Additionally, each filter UI item is presented with a number denoting the number of VMs that match the attribute state. In this example, the set of filter UI items <b>515</b> indicates that 147 of the 150 VMs in the group are powered on, while 3 VMs in the group are powered off. In the UI <b>500</b><i>b</i>, the group node <b>510</b><i>a </i>from the UI <b>500</b><i>a </i>has been expanded based on a filter selection made by the cursor <b>505</b>, as reflected by the updated set of filter UI items <b>515</b><i>b </i>showing the attribute state &#x201c;powered off&#x201d; has been selected, while in the UI <b>500</b><i>c</i>, the cursor <b>505</b> is instead shown selecting the attribute state &#x201c;powered on&#x201d;, as reflected by the updated set of filter UI items <b>515</b><i>c. </i></p><p id="p-0036" num="0035">Returning to the process <b>400</b>, after receiving the selection of the set of attribute states, the process identifies (at <b>410</b>) logical elements in the group that match the selected set of attribute states. In the UI <b>500</b><i>b</i>, for example, three VMs <b>570</b>, <b>572</b>, and <b>574</b> are identified as the three VMs that are powered off. Once the logical elements have been identified, the process determines (at <b>415</b>) whether the selected group node is a child node (i.e., a node that has other nodes above it in the hierarchy). The group node <b>510</b><i>a</i>, for example, is a child node of the node <b>530</b> representing a segment. Conversely, the node <b>550</b> representing a tier-0 gateway logical router is not a child node.</p><p id="p-0037" num="0036">When the process determines (at <b>415</b>) that the selected group node is not a child node, the process transitions to <b>435</b> to determine whether the selected group node is a parent node. Otherwise, when the process determines (at <b>415</b>) that the selected group node is a child node, the process transitions to <b>420</b> to determine whether there are any group nodes above the selected group node in the hierarchy. The group node <b>510</b><i>a</i>, for example, is a child node, but does not have any group nodes above it (i.e., all of the nodes above the group node in the hierarchy are individual nodes representing individual logical elements).</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>B</figref> illustrate a more complex logical network topology presented in a UI <b>600</b><i>a </i>before any filters have been applied, and a UI <b>600</b><i>b </i>after at least one filter has been applied, respectively. In the UI <b>600</b><i>a</i>, a cursor <b>605</b> is shown selecting a group node <b>610</b><i>a </i>representing a group of 270 VMs. Based on the selection, a set of filter UI items <b>615</b><i>a </i>is presented for filtering the group of 270 VMs. The group node <b>610</b><i>a </i>of VMs is logically connected to a group node <b>630</b><i>a </i>that represents a group of 20 segments. The group node <b>630</b><i>a </i>of segments is logically connected to a group node <b>640</b><i>a </i>that represents a group of 8 tier-1 gateway logical routers that logically connect to a tier-0 gateway logical router <b>650</b>. The tier-0 gateway logical router <b>650</b> is also connected (via connections <b>660</b>) to networks external to the logical network, as well as to a node <b>635</b> representing a segment, which logically connects to a group node <b>620</b> representing a group of 90 VMs.</p><p id="p-0039" num="0038">When the process determines (at <b>420</b>) that there are not any group nodes above the selected group node in the hierarchy (e.g., like the selected group node <b>510</b><i>a</i>), the process transitions to <b>435</b> to determine whether the selected group node is a parent node. Otherwise, when the process determines (at <b>420</b>) that there is at least one group node above the selected group node in the hierarchy (e.g., like the selected group node <b>610</b><i>a</i>), the process transitions to <b>425</b> to identify logical connections between the identified logical elements of the selected group node and logical elements of group node(s) above the selected group node in the hierarchy.</p><p id="p-0040" num="0039">For example, for the UI <b>600</b><i>a</i>, the process would need to determine which of the segments represented by the group node <b>630</b><i>a </i>are logically connected to VMs represented by the group node <b>610</b><i>a </i>that were identified (i.e., during step <b>410</b>) as matching a selected filter UI item (i.e., &#x201c;powered off&#x201d;, as selected in the UI <b>600</b><i>b</i>). Additionally, the process would need to determine which of the tier-1 gateway logical routers represented by the group node <b>640</b><i>a </i>are logically connected to any of the segments identified as being logically connected to the identified VMs. While the node <b>650</b> in this example represents a single tier-0 gateway logical router, other embodiments may include a group node representing a group of tier-0 gateway logical routers for which logical connections would also need to be identified.</p><p id="p-0041" num="0040">After identifying (at <b>425</b>) the logical connections, the process determines (at <b>430</b>) the expansion of the group node(s) above the selected group node in the hierarchy. In some embodiments, logical elements in the selected group node and in group nodes above the selected group node may be expanded based on the identified logical connections and despite not being identified as logical elements that match the selected filter UI item or as logical elements that are logically connected to those identified logical elements.</p><p id="p-0042" num="0041">As illustrated in the UI <b>600</b><i>b</i>, while the expanded version of the group node <b>610</b><i>a </i>from the UI <b>600</b><i>a </i>includes group nodes <b>610</b><i>b</i>, <b>610</b><i>c</i>, <b>610</b><i>d</i>, and <b>610</b><i>e</i>, as well as individual nodes <b>670</b><i>a</i>, <b>670</b><i>b</i>, <b>670</b><i>c</i>, <b>670</b><i>d</i>, and <b>670</b><i>e</i>, expanded versions of the group nodes <b>630</b><i>a </i>and <b>640</b><i>a </i>are also presented based on their logical connections to the identified VMs <b>670</b><i>a</i>-<b>670</b><i>e</i>. For example, the expanded version of the group node <b>630</b><i>a </i>includes group nodes <b>630</b><i>b </i>and <b>630</b><i>c</i>, as well as individual nodes <b>665</b><i>a</i>, <b>665</b><i>b</i>, and <b>665</b><i>c</i>, while the expanded version of the group node <b>640</b><i>a </i>includes group node <b>640</b><i>b </i>and individual nodes <b>680</b><i>a </i>and <b>680</b><i>b</i>. While the group node <b>630</b><i>c </i>is not logically connected to any of the VMs <b>670</b><i>a</i>-<b>670</b><i>e </i>identified as matching the selected filter UI item, this group node does logically connect to the node <b>680</b><i>b </i>representing a tier-1 gateway logical router, which has a logical connection to two other nodes <b>675</b><i>b </i>and <b>675</b><i>c </i>representing segments that have logical connections to some of the VMs identified as matching the selected filter UI item, and thus the group node <b>630</b><i>c </i>is included in the expansion based on its logical connection to node <b>680</b><i>b. </i></p><p id="p-0043" num="0042">Next, the process determines (at <b>435</b>) whether the selected group node is a parent node in the hierarchy of logical elements. That is, the process determines whether there are any nodes below the selected group node in the hierarchy. The selected nodes <b>510</b><i>a </i>and <b>610</b><i>a </i>in the respective UIs <b>500</b><i>a </i>and <b>600</b><i>a</i>, for example, are not parent nodes because these group nodes represent groups of VMs and are logical network endpoints.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>B</figref> illustrate another example of a more complex logical network topology presented in a UI <b>700</b><i>a </i>before any filters have been applied, and a UI <b>700</b><i>b </i>after at least one filter has been applied, respectively. Unlike the UIs <b>500</b><i>a </i>and <b>600</b><i>a</i>, the cursor <b>705</b> in the UI <b>700</b><i>a </i>is shown selecting group node <b>730</b><i>a </i>that represents a group of 20 segments, and a set of filter UI items <b>715</b><i>a </i>is presented for filtering the group of 20 segments. The group node <b>730</b><i>a </i>is a child node of a group node <b>740</b><i>a </i>representing a group of 8 tier-1 gateway logical routers based on logical connections between the segments and tier-1 gateway logical routers represented by the group nodes. The group node <b>740</b><i>a </i>also logically connects to a tier-0 gateway logical router <b>750</b>, which connects (via connections <b>760</b>) to networks external to the logical network presented in the UI <b>700</b><i>a</i>, as well as to a node <b>735</b> representing a segment that logically connects to a group node <b>720</b> representing a group of 90 VMs. In addition to being a child node of the group node <b>740</b><i>a</i>, the group node <b>730</b><i>a </i>is also a parent node to a group node <b>710</b><i>a </i>representing a group of 270 VMs, as shown.</p><p id="p-0045" num="0044">When the process determines (at <b>435</b>) that the selected group node is not a parent node (e.g., in the UIs <b>500</b><i>a </i>and <b>600</b><i>a</i>), the process transitions to <b>445</b> to present an expanded version of the selected group node. For example, in the UI <b>500</b><i>b</i>, an expanded version of the group node <b>510</b><i>a </i>is shown to include a group node <b>510</b><i>b </i>representing 147 VMs that do not match the selected filter UI item &#x201c;powered off&#x201d;, and three individual nodes <b>570</b>-<b>574</b> representing three individual VMs from the group that do match the selected filter UI item.</p><p id="p-0046" num="0045">Conversely, in the UI <b>500</b><i>c</i>, the selected filter UI item &#x201c;powered on&#x201d; includes 147 VMs, and as such, the group node <b>510</b><i>a </i>from the UI <b>500</b><i>a </i>is now split into two group nodes. As shown, group node <b>510</b><i>c </i>represents the set of 3 VMs that are powered off and do not match the selected filter UI item, and the group node <b>510</b><i>d </i>represents the 147 VMs that are powered on and do match the selected filter UI item. While the 3 VMs that are powered off do not meet a threshold for being presented as a group node under other circumstances, they are presented as a group node in this instance because they do not match the filter UI item selected for expansion, and therefore are not expanded. The group of 147 VMs that do match the expansion criteria are still represented as a group node separate from the group node representing VMs that do not match the expansion criteria as the threshold for being presented as a group node has been exceeded. As mentioned above, the group node representing logical elements that match the selected filter UI item is presented differently (e.g., with a thicker outline, with a different color, etc.), in some embodiments, from the group node representing the logical elements that do not match the selected filter UI item. In the UI <b>500</b><i>c</i>, for example, the group node <b>510</b><i>d </i>is presented with a thicker outline than the group node <b>510</b><i>c. </i></p><p id="p-0047" num="0046">While the UI <b>500</b><i>c </i>does not include any individual nodes in its expansion, the UI <b>500</b><i>b </i>provides a selectable item <b>580</b> allowing users to collapse the expanded group node back to a single group node. When expanding group nodes, some embodiments also display UI items (e.g., item <b>580</b> in UI <b>500</b><i>b </i>or items <b>690</b> in UI <b>600</b><i>b</i>) that allow a user to collapse a portion or all of an expanded group of logical elements. For instance, selecting the UI item <b>580</b> in UI <b>500</b><i>b </i>would cause the group of VMs to collapse back into the group node <b>510</b><i>a</i>. As mentioned above, a user can expand a collapsed group node, in some embodiments, by double-clicking (i.e., with a cursor control device) on the group node.</p><p id="p-0048" num="0047">In a more complex topology, collapsing a group node can have an effect on other group nodes as well. Selecting the UI item <b>690</b> located between the tier-0 gateway node <b>650</b> and the tier-1 gateway nodes <b>680</b><i>a</i>-<i>b </i>and <b>640</b><i>b </i>in UI <b>600</b><i>b </i>would cause these tier-1 gateway nodes to collapse back into a single group node, forcing the segment nodes <b>630</b><i>b</i>-<i>c </i>and <b>675</b><i>a</i>-<i>c </i>to collapse back into their own single group node (in turn forcing the VMs to collapse back into a single group node as well. On the other hand, selection of the UI item <b>690</b> underneath the segment node <b>675</b> would only cause individual VM node <b>670</b><i>c </i>and group node <b>610</b><i>d </i>to collapse back into a single group node.</p><p id="p-0049" num="0048">In some embodiments, the collapse UI item is only provided when the number of logical elements logically connected to the same parent node (individual or group) above the logical elements in the hierarchy exceeds a threshold number. Group nodes, in some embodiments, can be expanded by users by double-clicking (i.e., with a cursor control device) on the group node. Also, in some embodiments, different types of logical elements have different specified threshold numbers. For example, groups of VMs that exceed five VMs would be provided with the option to collapse, in some embodiments, while groups of segments that exceed two segments would be provided with the option to collapse.</p><p id="p-0050" num="0049">Returning to the process <b>400</b>, when the process determines (at <b>435</b>) that the selected group node is a parent node (e.g., in the UI <b>700</b><i>a</i>), the process transitions to <b>440</b> to identify logical connections between identified logical elements of the selected group node and logical elements below the selected group node in the hierarchy. In the UI <b>700</b><i>a</i>, for example, the process would identify logical connections between any of the segments represented by the group node <b>730</b><i>a </i>that are identified as matching any selected filter UI items and any VMs represented by the group node <b>710</b><i>a. </i></p><p id="p-0051" num="0050">Next, the process presents (at <b>445</b>) an expanded version of the selected group node that shows the identified logical elements of the group as individual nodes and the remaining logical elements of the group as one or more group nodes. The process then presents (at <b>450</b>) expanded versions of any group nodes above or below the selected group node that are identified for expansion based on the logical connections between the identified logical elements of the selected group node and other logical elements.</p><p id="p-0052" num="0051">For example, in the UI <b>700</b><i>b</i>, expanded versions of the group nodes <b>710</b><i>a</i>, <b>730</b><i>a</i>, and <b>740</b><i>a </i>are presented based on a selection to filter segments for which DHCP is disabled in the selected group of segments <b>730</b><i>a </i>(i.e., selected group node <b>730</b><i>a </i>in the UI <b>700</b><i>a</i>), as indicated by the updated version of the set of filter UI items <b>715</b><i>b</i>. As shown, the expanded version of the group node <b>730</b><i>a </i>includes group nodes <b>730</b><i>b </i>and <b>730</b><i>c</i>, representing groups of eleven segments and five segments, respectively, as well as individual nodes <b>775</b><i>a</i>, <b>775</b><i>b</i>, <b>775</b><i>c</i>, and <b>775</b><i>d </i>representing the identified segments for which DHCP is disabled.</p><p id="p-0053" num="0052">Based on logical connections to the segments <b>775</b><i>a</i>-<b>775</b><i>d</i>, the expanded version of the group node <b>740</b><i>a </i>(i.e., a parent node of the selected group node <b>730</b><i>a</i>) includes a group node <b>740</b><i>b </i>representing a group of five tier-1 gateway logical routers, as well as three individual nodes <b>780</b><i>a</i>, <b>780</b><i>b</i>, and <b>780</b><i>c </i>representing three tier-1 gateway logical routers having logical connections to the identified segments <b>775</b><i>a</i>-<b>775</b><i>d</i>. Lastly, the expanded version of the group node <b>710</b><i>a </i>(i.e., the child node of the selected group node <b>730</b><i>a</i>) includes group nodes <b>710</b><i>b</i>, <b>710</b><i>c</i>, <b>710</b><i>d</i>, and <b>710</b><i>e</i>, each representing respective groups of VMs of varying numbers as illustrated, as well as individual nodes <b>770</b><i>a</i>, <b>770</b><i>b</i>, and <b>770</b><i>c </i>representing individual VMs that are logically connected to the identified segments, but do not meet the threshold number for presenting VMs as group nodes.</p><p id="p-0054" num="0053">Conversely, selectable UI items <b>790</b> are provided for collapsing the segments under each of the tier-1 gateway logical router nodes <b>780</b><i>b </i>and <b>780</b><i>c</i>, as well as for collapsing each of nodes representing the tier-1 gateway logical routers <b>740</b><i>b </i>and <b>780</b><i>a</i>-<b>780</b><i>c </i>under the tier-0 gateway logical router <b>750</b>. In some embodiments, collapsing nodes that are parent nodes causes the child nodes of those parent nodes to also be collapsed (i.e., collapsing a group of segments will cause any VMs logically connected to those segments to also be collapsed). Also, in some embodiments, when a large number (e.g., hundreds or thousands) of logical elements match the selected filter UI items, the UI presents the expanded version of the group node representing those logical elements and allows users to pan the UI to view all of the identified logical elements in the expanded version of the group node.</p><p id="p-0055" num="0054">Returning to the process <b>400</b>, after the process presents (at <b>450</b>) the expanded versions of any group nodes above or below the selected group node, the process ends. While described as happening serially for the sake of clarity, the steps of the process <b>400</b> in some embodiments are performed concurrently (i.e., all at once). Also, while only logical elements are represented in the UI examples described herein, other embodiments also present nodes in the UIs to represent physical elements that implement the logical elements. Additional details regarding the different functionalities of the UI in different embodiments can be found in U.S. patent application Ser. No. 17/185,690, which is incorporated herein by reference.</p><p id="p-0056" num="0055">Many of the above-described features and applications are implemented as software processes that are specified as a set of instructions recorded on a computer readable storage medium (also referred to as computer readable medium). When these instructions are executed by one or more processing unit(s) (e.g., one or more processors, cores of processors, or other processing units), they cause the processing unit(s) to perform the actions indicated in the instructions. Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, RAM chips, hard drives, EPROMs, etc. The computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.</p><p id="p-0057" num="0056">In this specification, the term &#x201c;software&#x201d; is meant to include firmware residing in read-only memory or applications stored in magnetic storage, which can be read into memory for processing by a processor. Also, in some embodiments, multiple software inventions can be implemented as sub-parts of a larger program while remaining distinct software inventions. In some embodiments, multiple software inventions can also be implemented as separate programs. Finally, any combination of separate programs that together implement a software invention described here is within the scope of the invention. In some embodiments, the software programs, when installed to operate on one or more electronic systems, define one or more specific machine implementations that execute and perform the operations of the software programs.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>8</b></figref> conceptually illustrates a computer system <b>800</b> with which some embodiments of the invention are implemented. The computer system <b>800</b> can be used to implement any of the above-described hosts, controllers, gateway and edge forwarding elements. As such, it can be used to execute any of the above described processes. This computer system includes various types of non-transitory machine readable media and interfaces for various other types of machine readable media. Computer system <b>800</b> includes a bus <b>805</b>, processing unit(s) <b>810</b>, a system memory <b>825</b>, a read-only memory <b>830</b>, a permanent storage device <b>835</b>, input devices <b>840</b>, and output devices <b>845</b>.</p><p id="p-0059" num="0058">The bus <b>805</b> collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices of the computer system <b>800</b>. For instance, the bus <b>805</b> communicatively connects the processing unit(s) <b>810</b> with the read-only memory <b>830</b>, the system memory <b>825</b>, and the permanent storage device <b>835</b>.</p><p id="p-0060" num="0059">From these various memory units, the processing unit(s) <b>810</b> retrieve instructions to execute and data to process in order to execute the processes of the invention. The processing unit(s) may be a single processor or a multi-core processor in different embodiments. The read-only-memory (ROM) <b>830</b> stores static data and instructions that are needed by the processing unit(s) <b>810</b> and other modules of the computer system. The permanent storage device <b>835</b>, on the other hand, is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even when the computer system <b>800</b> is off. Some embodiments of the invention use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) as the permanent storage device <b>835</b>.</p><p id="p-0061" num="0060">Other embodiments use a removable storage device (such as a floppy disk, flash drive, etc.) as the permanent storage device. Like the permanent storage device <b>835</b>, the system memory <b>825</b> is a read-and-write memory device. However, unlike storage device <b>835</b>, the system memory is a volatile read-and-write memory, such as random access memory. The system memory stores some of the instructions and data that the processor needs at runtime. In some embodiments, the invention's processes are stored in the system memory <b>825</b>, the permanent storage device <b>835</b>, and/or the read-only memory <b>830</b>. From these various memory units, the processing unit(s) <b>810</b> retrieve instructions to execute and data to process in order to execute the processes of some embodiments.</p><p id="p-0062" num="0061">The bus <b>805</b> also connects to the input and output devices <b>840</b> and <b>845</b>. The input devices enable the user to communicate information and select commands to the computer system. The input devices <b>840</b> include alphanumeric keyboards and pointing devices (also called &#x201c;cursor control devices&#x201d;). The output devices <b>845</b> display images generated by the computer system. The output devices include printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD). Some embodiments include devices such as touchscreens that function as both input and output devices.</p><p id="p-0063" num="0062">Finally, as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, bus <b>805</b> also couples computer system <b>800</b> to a network <b>865</b> through a network adapter (not shown). In this manner, the computer can be a part of a network of computers (such as a local area network (&#x201c;LAN&#x201d;), a wide area network (&#x201c;WAN&#x201d;), or an Intranet), or a network of networks (such as the Internet). Any or all components of computer system <b>800</b> may be used in conjunction with the invention.</p><p id="p-0064" num="0063">Some embodiments include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media). Some examples of such computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, read-only and recordable Blu-Ray&#xae; discs, ultra-density optical discs, any other optical or magnetic media, and floppy disks. The computer-readable media may store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations. Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.</p><p id="p-0065" num="0064">While the above discussion primarily refers to microprocessor or multi-core processors that execute software, some embodiments are performed by one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs). In some embodiments, such integrated circuits execute instructions that are stored on the circuit itself.</p><p id="p-0066" num="0065">As used in this specification, the terms &#x201c;computer&#x201d;, &#x201c;server&#x201d;, &#x201c;processor&#x201d;, and &#x201c;memory&#x201d; all refer to electronic or other technological devices. These terms exclude people or groups of people. For the purposes of the specification, the terms &#x201c;display&#x201d; or &#x201c;displaying&#x201d; mean displaying on an electronic device. As used in this specification, the terms &#x201c;computer readable medium,&#x201d; &#x201c;computer readable media,&#x201d; and &#x201c;machine readable medium&#x201d; are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral or transitory signals.</p><p id="p-0067" num="0066">While the invention has been described with reference to numerous specific details, one of ordinary skill in the art will recognize that the invention can be embodied in other specific forms without departing from the spirit of the invention. Thus, one of ordinary skill in the art would understand that the invention is not to be limited by the foregoing illustrative details, but rather is to be defined by the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for presenting a visualization of a topology for a logical network, the method comprising:<claim-text>in response to receiving a selection of a particular user interface (UI) item representing a particular group of logical elements, presenting one or more filter UI items for the particular group of logical elements, each filter UI item corresponding to a different attribute associated with the logical elements;</claim-text><claim-text>upon receiving selection of one or more attribute states for each attribute for which a filter UI item is presented, identifying logical elements in the group of logical elements that match the selected attribute states; and</claim-text><claim-text>presenting, in the UI, an expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the particular group of logical elements comprises logical elements of a particular type;</claim-text><claim-text>the UI presents a set of UI items including the particular UI item;</claim-text><claim-text>each respective UI item in the set of UI items represents one or more logical elements of a respective type; and</claim-text><claim-text>the set of UI items are arranged in the UI hierarchically by type of logical element and based on logical network connections.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the particular UI item comprises a group node, wherein the UI represents the particular group of logical elements using the group node based on the particular group of logical elements exceeding a threshold number of logical elements of the particular type.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein<claim-text>the group node is a first group node; and</claim-text><claim-text>presenting the expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states comprises presenting (i) individual nodes representing the identified logical elements and (ii) a second group node representing logical elements in the particular group that do not match the selected attribute states.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the first group node specifies a first number of logical elements represented by the first group node and the second group node specifies a second number of logical elements represented by the first group node, wherein the first number is greater than the second number.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein<claim-text>the group node is a first group node; and</claim-text><claim-text>presenting the expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states comprises presenting (i) a second group node representing the identified logical elements and (ii) a third group node representing logical elements in the particular group that do not match the selected attribute states, wherein the second group node is presented differently than the third group node to indicate the second group node represents the identified logical elements.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein:<claim-text>the particular type of logical elements is a first type, the particular group of logical elements is a first group of logical elements, and the group node is a first group node; and</claim-text><claim-text>the first group of logical elements are logically connected to a second group of logical elements of a second type that are represented in the UI by a second group node.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein presenting the expanded version of the first group of logical elements that emphasizes the identified logical elements that match the selected attribute states comprises:<claim-text>identifying, from the second set of logical elements, at least one logical element that is logically connected to at least one of the identified logical elements in the first group that match the selected attribute states;</claim-text><claim-text>presenting an expanded version of the second group node such that (i) each logical element in the second group of logical elements that is logically connected to at least one of the identified logical elements in the first group is represented by an individual node and (ii) a third group node representing logical elements in the second group that do not logically connect to any of the identified logical elements in the first group; and</claim-text><claim-text>presenting (i) individual nodes representing the identified logical elements and (ii) a fourth group node representing logical elements in the first group that do not match the selected attribute states.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the set of logical element types comprises at least virtual machine (VM), logical switch, tier-1 logical router that connects groups of logical switches, and tier-0 logical router that connects other logical elements in the logical network to external networks.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein presenting one or more filter UI items for the particular group of logical elements comprises:<claim-text>identifying a set of potential attributes associated with the logical elements;</claim-text><claim-text>for each potential attribute in the set of potential attributes, determining a current state of the attribute for each logical element in the particular group of logical elements; and</claim-text><claim-text>when at least two logical elements in the particular group have different current states for a particular attribute in the set of potential attributes, presenting a filter UI item corresponding to the particular attribute.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein each filter UI item presents at least two different states for the particular attribute as selectable attribute states for the attribute corresponding to the filter UI item.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein for each potential attribute for which all logical elements in the particular group of logical elements have a same current state, no filter UI item is presented in the UI.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A non-transitory machine-readable medium storing a program which when executed by at least one processing unit presents a visualization of a topology for a logical network, the program comprising sets of instructions for:<claim-text>in response to receiving a selection of a particular user interface (UI) item representing a particular group of logical elements, presenting one or more filter UI items for the particular group of logical elements, each filter UI item corresponding to a different attribute associated with the logical elements;</claim-text><claim-text>upon receiving selection of one or more attribute states for each attribute for which a filter UI item is presented, identifying logical elements in the group of logical elements that match the selected attribute states; and</claim-text><claim-text>presenting, in the UI, an expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the particular group of logical elements comprises logical elements of a particular type;</claim-text><claim-text>the UI presents a set of UI items including the particular UI item;</claim-text><claim-text>each respective UI item in the set of UI items represents one or more logical elements of a respective type;</claim-text><claim-text>the set of UI items are arranged in the UI hierarchically by type of logical element and based on logical network connections;</claim-text><claim-text>the particular UI item comprises a group node; and</claim-text><claim-text>the UI represents the particular group of logical elements using the group node based on the particular group of logical elements exceeding a threshold number of logical elements of the particular type.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein<claim-text>the group node is a first group node; and</claim-text><claim-text>the set of instructions for presenting the expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states comprises a set of instructions for presenting (i) individual nodes representing the identified logical elements and (ii) a second group node representing logical elements in the particular group that do not match the selected attribute states.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the first group node specifies a first number of logical elements represented by the first group node and the second group node specifies a second number of logical elements represented by the first group node, wherein the first number is greater than the second number.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein<claim-text>the group node is a first group node; and</claim-text><claim-text>the set of instructions for presenting the expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states comprises a set of instructions for presenting (i) a second group node representing the identified logical elements and (ii) a third group node representing logical elements in the particular group that do not match the selected attribute states, wherein the second group node is presented differently than the third group node to indicate the second group node represents the identified logical elements.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein:<claim-text>the particular type of logical elements is a first type, the particular group of logical elements is a first group of logical elements, and the group node is a first group node;</claim-text><claim-text>the first group of logical elements are logically connected to a second group of logical elements of a second type that are represented in the UI by a second group node; and</claim-text><claim-text>the set of instructions for presenting the expanded version of the first group of logical elements that emphasizes the identified logical elements that match the selected attribute states comprises sets of instructions for:<claim-text>identifying, from the second set of logical elements, at least one logical element that is logically connected to at least one of the identified logical elements in the first group that match the selected attribute states;</claim-text><claim-text>presenting an expanded version of the second group node such that (i) each logical element in the second group of logical elements that is logically connected to at least one of the identified logical elements in the first group is represented by an individual node and (ii) a third group node representing logical elements in the second group that do not logically connect to any of the identified logical elements in the first group; and</claim-text><claim-text>presenting (i) individual nodes representing the identified logical elements and (ii) a fourth group node representing logical elements in the first group that do not match the selected attribute states.</claim-text></claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the set of instructions for presenting one or more filter UI items for the particular group of logical elements comprises sets of instructions for:<claim-text>identifying a set of potential attributes associated with the logical elements;</claim-text><claim-text>for each potential attribute in the set of potential attributes, determining a current state of the attribute for each logical element in the particular group of logical elements; and</claim-text><claim-text>when at least two logical elements in the particular group have different current states for a particular attribute in the set of potential attributes, presenting a filter UI item corresponding to the particular attribute.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein each filter UI item presents at least two different states for the particular attribute as selectable attribute states for the attribute corresponding to the filter UI item.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein for each potential attribute for which all logical elements in the particular group of logical elements have a same current state, no filter UI item is presented in the UI.</claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. An electronic device comprising:<claim-text>a set of processing units; and</claim-text><claim-text>a non-transitory machine-readable medium storing a program which when executed by at least one of the processing units presents a visualization of a topology for a logical network, the program comprising sets of instructions for:<claim-text>in response to receiving a selection of a particular user interface (UI) item representing a particular group of logical elements, presenting one or more filter UI items for the particular group of logical elements, each filter UI item corresponding to a different attribute associated with the logical elements;</claim-text><claim-text>upon receiving selection of one or more attribute states for each attribute for which a filter UI item is presented, identifying logical elements in the group of logical elements that match the selected attribute states; and</claim-text><claim-text>presenting, in the UI, an expanded version of the particular group of logical elements that emphasizes the identified logical elements that match the selected attribute states.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>