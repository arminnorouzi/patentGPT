<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004536A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004536</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930926</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>21</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2458</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>28</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>211</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2468</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>285</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>30036</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR A DATA SEARCH ENGINE BASED ON DATA PROFILES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16405956</doc-number><date>20190507</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11474978</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930926</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62694968</doc-number><date>20180706</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Capital One Services, LLC</orgname><address><city>McLean</city><state>VA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>WALTERS</last-name><first-name>Austin</first-name><address><city>Savoy</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>PHAM</last-name><first-name>Vincent</first-name><address><city>Champaign</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>RAFFERTY</last-name><first-name>Galen</first-name><address><city>Mahomet</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>TRUONG</last-name><first-name>Anh</first-name><address><city>Champaign</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>WATSON</last-name><first-name>Mark</first-name><address><city>Urbana</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>GOODSITT</last-name><first-name>Jeremy</first-name><address><city>Champaign</city><state>IL</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Capital One Services, LLC</orgname><role>02</role><address><city>McLean</city><state>VA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods for searching data are disclosed. For example, the system may include one or more memory units storing instructions and one or more processors configured to execute the instructions to perform operations. The operations may include receiving a sample dataset and identifying a data schema of the sample dataset. The operations may include generating a sample data vector that includes statistical metrics of the sample dataset and information based on the data schema of the sample dataset. The operations may include searching a data index comprising a plurality of stored data vectors corresponding to a plurality of reference datasets. The stored data vectors may include statistical metrics of the reference datasets and information based on corresponding data schema. The operations may include generating, based on the search and the sample data vector, one or more similarity metrics of the sample dataset to individual ones of the reference datasets.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="188.21mm" wi="158.75mm" file="US20230004536A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="215.82mm" wi="172.64mm" file="US20230004536A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="179.32mm" wi="152.74mm" file="US20230004536A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="179.32mm" wi="152.74mm" file="US20230004536A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="175.94mm" wi="152.74mm" file="US20230004536A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="133.94mm" wi="131.06mm" file="US20230004536A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="199.98mm" wi="133.69mm" file="US20230004536A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Application No. 62/694,968, filed Jul. 6, 2018, the content of which is expressly incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Conventional systems and methods of searching data typically involve searching data trees for a search term (e.g., a keyword, a sequence of characters, and/or a number). For example, a conventional search engine may search for user-generated search terms in an index of website data. Results may be based on the frequency of key words and/or clustering of key words.</p><p id="p-0004" num="0003">Data analysis and data modeling efforts often need to identify data sources (e.g., to search for datasets). Problems arise, however, when applying conventional approaches to a search for datasets. Search-term based approaches may be inefficient, produce misleading or irrelevant results, and have limited scope (i.e., the search may be limited to a small number of drives, databases, or online resources). For example, search-term based methods may not account for the profile of a dataset (e.g., a data schema and/or statistical metric).</p><p id="p-0005" num="0004">For example, an agent (e.g., a user, a system, a model, or other agent) may set an objective (i.e., a desired outcome). The objective may be to identify regional voting trends and find data related to that objective. As an illustrative example, the agent may possess a sample dataset that includes addresses, phone numbers, names, dates, and voting records. The sample dataset may have a data schema (i.e., a data structure or organization). However, a search-term based search (e.g., a search for a name) may yield large numbers of irrelevant datasets because it may return results unrelated to the desired objective (e.g., it may return phone records but not voting records). A search-term based search may be slow or miss relevant results because a search term is highly specific. Further, conventional systems may not allow the user to control how the search is performed (i.e., to set search parameters such as filtering results that contain a term, etc.). For example, some systems may determine which indexes to use on a search without an understanding of which index will perform better,</p><p id="p-0006" num="0005">Therefore, in view of the shortcomings and problems with conventional approaches to searching for datasets, there is a need for unconventional approaches to data searches that are efficient, effective, customizable, and broad in scope. In particular, there is a need for unconventional systems to search data based on sample data.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">The disclosed embodiments provide unconventional methods and systems for searching datasets based on one or more data profiles. The disclosed systems and methods may be implemented using a combination of conventional hardware and software as well as specialized hardware and software, such as a machine constructed and/or programmed specifically for performing functions associated with the disclosed method steps.</p><p id="p-0008" num="0007">Consistent with the present embodiments, a system for searching datasets is disclosed. The system may include one or more memory units storing instructions and one or more processors configured to execute the instructions to perform operations. The operations may include receiving a sample dataset and identifying a data schema of the sample dataset. The operations may include generating a sample data vector that includes statistical metrics of the sample dataset and information based on the data schema of the sample dataset. The operations may include searching a data index comprising a plurality of stored data vectors corresponding to a plurality of reference datasets. The stored data vectors may include statistical metrics of the reference datasets and information based on corresponding data schema of the reference datasets. The operations may include generating, based on the search and the sample data vector, one or more similarity metrics of the sample dataset to individual ones of the reference datasets.</p><p id="p-0009" num="0008">Consistent with the present embodiments, a method for searching datasets is disclosed. The method may include receiving a sample dataset and identifying a data schema of the sample dataset. The method may include generating a sample data vector that includes statistical metrics of the sample dataset and information based on the data schema of the sample dataset. The method may include searching a data index comprising a plurality of stored data vectors corresponding to a plurality of reference datasets. The stored data vectors may include statistical metrics of the reference datasets and information based on corresponding data schema of the reference datasets. The method may include generating, based on the search and the sample data vector, one or more similarity metrics of the sample dataset to individual ones of the reference datasets.</p><p id="p-0010" num="0009">Consistent with other disclosed embodiments, non-transitory computer readable storage media may store program instructions, which are executed by at least one processor device and perform any of the methods described herein.</p><p id="p-0011" num="0010">The foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0012" num="0011">The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate several embodiments and, together with the description, serve to explain the disclosed principles. In the drawings:</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts an exemplary system for searching data, consistent with disclosed embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an exemplary data-searching system, consistent with disclosed embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an exemplary data-migration system, consistent with disclosed embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an exemplary computing environment, consistent with disclosed embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an exemplary process for profiling data, consistent with disclosed embodiments.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an exemplary process for searching for data, consistent with disclosed embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0019" num="0018">Consistent with disclosed embodiments, systems and methods to search data sources based on a sample dataset are disclosed. For example, embodiments may include submitting a sample dataset (e.g., a CSV file or other dataset). Disclosed embodiments may include searching one or more databases, computing environments, and/or data indexes based on the sample datasets. Embodiments may include receiving one or more search results. Search results may include a dataset, a data vector, and/or a data source that comprises the dataset. The dataset may be the same as or similar to the sample dataset according to a similarity metric representing a measure of similarity between data in a dataset and data in the sample dataset.</p><p id="p-0020" num="0019">The disclosed embodiments may involve profiling data and searching for data based on a data profile that may include a data schema and a statistical description of the data. Disclosed embodiments improve methods of searching remote data resources by generating data vectors based on data profiles and data indices. To achieve these improvements, disclosed embodiments may include one or more memory units for storing instructions and one or more processors configured to execute the instructions to perform operations. The embodiments provide unconventional systems and methods for generating data vectors based on data profiles, storing the data vectors in a data index, and searching the data index.</p><p id="p-0021" num="0020">Systems and methods of disclosed embodiments may involve datasets comprising actual data reflecting real-world conditions, events, and/or measurement. However, in some embodiments, disclosed systems and methods may fully or partially involve synthetic data (e.g., anonymized actual data or fake data). Datasets may involve numeric data, text data, and/or image data, For example, datasets may include transaction data, financial data, demographic data, public data, government data, environmental data, traffic data, network data, transcripts of video data, genomic data, proteomic data, and/or other data. Datasets of the embodiments may be in a variety of data formats including, but not limited to, PARQUET, AVRO, SQLITE, POSTGRESQL, MYSQL, ORACLE, HADOOP, CSV, JSON, and/or other data formats.</p><p id="p-0022" num="0021">Datasets of disclosed embodiments may have a respective data schema (i.e., structure), including a data type, key-value pair, label, metadata, field, relationship, view, index, package, procedure, function, trigger, sequence, synonym, link, directory, queue, or the like. Datasets of the embodiments may contain foreign keys, i.e., data elements that appear in multiple datasets and may be used to cross-reference data and determine relationships between datasets. Foreign keys may be unique (e.g., a personal identifier) or shared (e.g., a postal code). Datasets of the embodiments may be &#x201c;clustered,&#x201d; i.e., a group of datasets may share common features, such as overlapping data, shared statistical properties, etc. Clustered datasets may share hierarchical relationships (i.e., data lineage).</p><p id="p-0023" num="0022">Reference will now be made in detail to exemplary embodiments, examples of which are illustrated in the accompanying drawings and disclosed herein. Wherever convenient, the same reference numbers will be used throughout the drawings to refer to the same or like parts. The disclosed embodiments are described in sufficient detail to enable those skilled in the art to practice the disclosed embodiments. It is to be understood that other embodiments may be utilized and that changes may be made without departing from the scope of the disclosed embodiments. Thus, the materials, methods, and examples are illustrative only and are not intended to be necessarily limiting.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram of an exemplary system <b>100</b> for searching for data, consistent with disclosed embodiments. As shown, system <b>100</b> may include a model optimizer <b>102</b>, a model storage <b>104</b>, a data-searching system <b>106</b>, an aggregation database <b>108</b>, a data-migration system <b>110</b>, an interface <b>112</b>, a client device <b>114</b>, one or more computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n, </i>and one or more databases <b>118</b><i>a</i>, <b>118</b><i>b, </i><b>118</b><i>n, </i>Components of system <b>100</b> may be connected to each other through a network <b>120</b>.</p><p id="p-0025" num="0024">In some embodiments, aspects of system <b>100</b> may be implemented on one or more cloud services designed to generate (&#x201c;spin-up&#x201d;) one or more ephemeral container instances in response to event triggers, assign one or more tasks to a container instance, and terminate (&#x201c;spin-down&#x201d;) a container instance upon completion of a task. By implementing methods using cloud services, disclosed systems may efficiently provision resources based on demand and provide security advantages because the ephemeral container instances may be dosed and destroyed upon completion of a task, That is, the container instances do not permit access from outside using terminals or remote shell tools like SSH, RTP, FTP, or CURL, for example. Further, terminating container instances may include destroying data, thereby protecting sensitive data. Destroying data can provide security advantages because it may involve permanently deleting data (e.g., overwriting data) and associated file pointers.</p><p id="p-0026" num="0025">As will be appreciated by one skilled in the art, the components of system <b>100</b> can be arranged in various ways and implemented with any suitable combination of hardware, firmware, and/or software, as applicable. For example, as compared to the depiction in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, system <b>100</b> may include a larger or smaller number of model optimizers, model storages, data-searching systems, aggregation databases, data-migration systems, interfaces, client devices, computing environments, and/or databases. In addition, system <b>100</b> may further include other components or devices not depicted that perform or assist in the performance of one or more processes, consistent with the disclosed embodiments. The exemplary components and arrangements shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> are not intended to limit the disclosed embodiments.</p><p id="p-0027" num="0026">Model optimizer <b>102</b> may include one or more computing systems configured to manage training of models for system <b>100</b>, consistent with disclosed embodiments. Model optimizer <b>102</b> may be configured to receive models and/or datasets from other components of system <b>100</b> or other components not shown (e.g., via interface <b>112</b>). Model optimizer <b>102</b> may be configured to train models. Model optimizer <b>102</b> may be configured to generate models and/or corresponding generalized representations. In some embodiments, model optimizer <b>102</b> may be configured to export models to other components of system <b>100</b> and/or to external systems or devices.</p><p id="p-0028" num="0027">Model optimizer <b>102</b> may be configured to generate models based on instructions received from a user or another system (e.g., via interface <b>112</b>). For example, model optimizer <b>102</b> may be configured to receive a visual (graphical) depiction of a machine learning model and parse that graphical depiction into instructions for creating and training a corresponding neural network. Model optimizer <b>102</b> may be configured to select model training hyperparameters. This selection may be based on model performance feedback produced by model optimizer <b>102</b> during model training and/or received from another component of system <b>100</b>. Model optimizer <b>102</b> may be configured to provide trained models and descriptive information concerning the trained models to model storage <b>104</b>.</p><p id="p-0029" num="0028">Model optimizer <b>102</b> may be configured to train machine learning models by optimizing model parameters and/or hyperparameters (hyperparameter tuning) using an optimization technique, consistent with disclosed embodiments. The optimization technique may include a grid search, a random search, a gaussian process, a Bayesian process, a Covariance Matrix Adaptation Evolution Strategy (CMA-ES), a derivative-based search, a stochastic hill-climb, a neighborhood search, an adaptive random search, or the like. Tuning a hyperparameter may include iteratively selecting a hyperparameter and training model parameters using the hyperparameter until a training criterion is satisfied, consistent with disclosed embodiments.</p><p id="p-0030" num="0029">Model storage <b>104</b> may be configured to store models, including machine learning models, consistent with disclosed embodiments. In some embodiments, some or all components of model storage <b>104</b> may be hosted on one or more servers, one or more clusters of servers, or one or more cloud services. Model storage <b>104</b> may be connected to network <b>120</b> and may additionally or alternatively be directly connected to model optimizer <b>102</b> (not shown). In some embodiments, model storage <b>104</b> may be a component of model optimizer <b>102</b>, data-searching system <b>106</b>, or client device <b>114</b> (not shown).</p><p id="p-0031" num="0030">Model storage <b>104</b> may include one or more databases configured to store data models (e.g., machine learning models or statistical models) and descriptive information of the data models. Model storage <b>104</b> may be configured to provide information regarding available data models to a user or another system. The databases may include cloud-based databases, cloud-based buckets, or on-premises databases. The information may include model information, such as the type and/or purpose of the model and any measures of classification error. Model storage <b>104</b> may include one or more databases configured to store indexed and clustered models for use by system <b>100</b>. For example, model storage <b>104</b> may store models associated with generalized representations of those models (e.g., neural network architectures stored in TENSORFLOW or other standardized formats). The databases may include cloud-based databases (e.g., AMAZON WEB SERVICES S3 buckets) or on-premises databases.</p><p id="p-0032" num="0031">Data-searching system <b>106</b> may include a computing device, a computer, a server, a server duster, a plurality of dusters, and/or a cloud service, consistent with disclosed embodiments. Data-searching system <b>106</b> may include one or more memory units and one or more processors configured to perform operations consistent with disclosed embodiments. Data-searching system <b>106</b> may include computing systems configured to manage training of models for system <b>100</b>, profile datasets, index datasets, and perform other methods consistent with disclosed embodiments. Data-searching system <b>106</b> may be configured to receive and/or retrieve models, and/or datasets from other components of system <b>100</b> or from computing components outside system <b>100</b> (e.g., via interface <b>112</b>). In some embodiments not shown, data-searching system <b>106</b> may be a component of data-migration system <b>110</b>. Data-searching system <b>106</b> is disclosed in greater detail below (in reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0033" num="0032">Aggregation database <b>108</b> may include one or more databases configured to store data for use by system <b>100</b>, consistent with disclosed embodiments. The databases may include cloud-based databases (e.g., AMAZON WEB SERVICES S3 buckets) or on-premises databases. In some embodiments, aggregation database <b>108</b> may store one or more datasets, data vectors, and data indexes. For example, aggregation database <b>108</b> may be configured to store one or more data vectors comprising statistical metrics of a dataset and information based on a corresponding data schema of the dataset. Aggregation database <b>108</b> may include data received from other components of system <b>100</b>, including, for example, data-migration system <b>110</b> and/or data-searching system <b>106</b>.</p><p id="p-0034" num="0033">Data-migration system <b>110</b> may include a computing device, a computer, a server, a server cluster, a plurality of clusters, and/or a cloud service, consistent with disclosed embodiments. Data-migration system <b>110</b> may include one or more memory units and one or more processors configured to perform operations consistent with disclosed embodiments. Data-migration system <b>110</b> may include computing systems configured to manage movement (i.e., transfer) of data between components of system <b>100</b>, to manage movement of data between components of system <b>100</b> and computing components outside system <b>100</b>, and to perform other methods consistent with disclosed embodiments. Data-migration system <b>110</b> may be configured to receive and/or retrieve models, and/or datasets from other components of system <b>100</b> or from computing components outside system <b>100</b> (e.g., via interface <b>112</b>). In some embodiments not shown, data-migration system <b>110</b> may be a component of data-searching system <b>106</b>. Data-migration system <b>110</b> is disclosed in greater detail below (in reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>).</p><p id="p-0035" num="0034">Interface <b>112</b> may be configured to manage interactions between system <b>100</b> and other systems using network <b>120</b>, consistent with disclosed embodiments. In some aspects, interface <b>112</b> may be configured to publish data received from other components of system <b>100</b>. This data may be published in a publication and subscription framework (e.g., using APACHE KAFKA), through a network socket, in response to queries from other systems, or using other known methods. The data may be synthetic data, as described herein. As an additional example, interface <b>112</b> may be configured to provide information received from model storage <b>104</b> regarding available datasets. In various aspects, interface <b>112</b> may be configured to provide data or instructions received from other systems to components of system <b>100</b>. For example, interface <b>112</b> may be configured to receive instructions for generating data models (e.g., type of data model, data model parameters, training data indicators, training hyperparameters, or the like) from another system and provide this information to model optimizer <b>102</b>. As an additional example, interface <b>112</b> may be configured to receive data including sensitive portions from another system (e.g., in a file, a message in a publication and subscription framework, a network socket, or the like) and provide that components of system <b>100</b>.</p><p id="p-0036" num="0035">Client device <b>114</b> may include one or more memory units and one or more processors configured to perform operations consistent with disclosed embodiments. In some embodiments, client device <b>114</b> may include hardware, software, and/or firmware modules. Client device <b>114</b> may be a terminal, a kiosk, a mobile device, a tablet, a personal computer, a server, a server cluster, a cloud service, a storage device, a specialized device configured to perform methods according to disclosed embodiments, or the like.</p><p id="p-0037" num="0036">Computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n </i>may include one or more memory units and one or more processors configured to perform operations consistent with disclosed embodiments. In some embodiments, computing environments <b>116</b><i>a</i>, <b>116</b><i>b, </i><b>116</b><i>n </i>may be or include a virtual private cloud, a local computing environment (e.g., a personal computer, terminal, kiosk, or workstation), a server, a server cluster, a device (e.g., a mobile device, a tablet, a laptop, etc.), and/or another computing environment. In some embodiments, at least one computing environment may connect to system <b>100</b> via interface <b>112</b> (not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). One or more computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n </i>may be unconnected to other computing environments except via network <b>120</b> (i.e., they may be disparate computing environments). In some embodiments, one or more computing environments may be directly connected to each other (not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). As noted above, computing environments <b>116</b><i>a, </i><b>116</b><i>b</i>, <b>116</b><i>n </i>are exemplary only and system <b>100</b> may include additional or fewer computing environments. Computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n </i>are disclosed in greater detail below (in reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>).</p><p id="p-0038" num="0037">Databases <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>n </i>may include one or more databases configured to store data for use by system <b>100</b>, consistent with disclosed embodiments. The databases may include cloud-based databases (e.g., AMAZON WEB SERVICES <b>53</b> buckets) or on-premises databases, In some embodiments, one or more databases <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>n </i>may store one or more datasets, data vectors, and data indexes. For example, at least one of databases <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>n </i>may be configured to store one or more data vectors comprising statistical metrics of a dataset and information based on a corresponding data schema of the dataset. As noted above, databases <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>n </i>are exemplary only and system <b>100</b> may include additional or fewer databases.</p><p id="p-0039" num="0038">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, at least one of model optimizer <b>102</b>, model storage <b>104</b>, data-searching system <b>106</b>, aggregation database <b>108</b>, data-migration system <b>110</b>, interface <b>112</b>, client device <b>114</b>, computing environments <b>116</b><i>a, </i><b>116</b><i>b</i>, <b>116</b><i>n, </i>and/or databases <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>n </i>may connect to network <b>120</b>. Network <b>120</b> may be a public network or private network and may include, for example, a wired or wireless network, including, without limitation, a Local Area Network, a Wide Area Network, a Metropolitan Area Network, an IEEE 1002.11 wireless network (e.g., Fr), a network of networks (e.g., the Internet), a land-line telephone network, or the like. Network <b>120</b> may be connected to other networks (not depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) to connect the various system components to each other and/or to external systems or devices. In some embodiments, network <b>120</b> may be a secure network and require a password to access the network.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts exemplary data-searching system <b>106</b>, consistent with disclosed embodiments. Data-searching system <b>106</b> may include a computing device, a computer, a server, a server cluster, a plurality of clusters, and/or a cloud service, consistent with disclosed embodiments. As shown, data-searching system <b>106</b> may include one or more processors <b>210</b>, one or more I/O devices <b>220</b>, and one or more memory units <b>230</b>. In some embodiments, some or all components of data-searching system <b>106</b> may be hosted on a device, a computer, a server, a cluster of servers, or a cloud service. In some embodiments, data-searching system <b>106</b> may be a scalable system configured to efficiently manage resources and enhance security by provisioning computing resources in response to triggering events and terminating resources after completing a task (e.g., a scalable cloud service that spins up and terminates container instances).</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an exemplary configuration of data-searching system <b>106</b>. As will be appreciated by one skilled in the art, the components and arrangement of components included in data-searching system <b>106</b> may vary, For example, as compared to the depiction in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, data-searching system <b>106</b> may include a larger or smaller number of processors, I/O devices, or memory units. In addition, data-searching system <b>106</b> may further include other components or devices not depicted that perform or assist in the performance of one or more processes consistent with the disclosed embodiments. The components and arrangements shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> are not intended to limit the disclosed embodiments, as the components used to implement the disclosed processes and features may vary.</p><p id="p-0042" num="0041">Processor <b>210</b> may comprise known computing processors, including a microprocessor. Processor <b>210</b> may constitute a single-core or multiple-core processor that executes parallel processes simultaneously. For example, processor <b>210</b> may be a single-core processor configured with virtual processing technologies. In some embodiments, processor <b>210</b> may use logical processors to simultaneously execute and control multiple processes. Processor <b>210</b> may implement virtual machine technologies, or other known technologies to provide the ability to execute, control, run, manipulate, store, etc., multiple software processes, applications, programs, etc. In another embodiment, processor <b>210</b> may include a multiple-core processor arrangement (e.g., dual core, quad core, etc.) configured to provide parallel processing functionalities to allow execution of multiple processes simultaneously. One of ordinary skill in the art would understand that other types of processor arrangements could be implemented that provide for the capabilities disclosed herein. The disclosed embodiments are not limited to any type of processor(s) <b>210</b>. Processor <b>210</b> may execute various instructions stored in memory <b>230</b> to perform various functions of the disclosed embodiments described in greater detail below. Processor <b>210</b> is configured to execute functions written in one or more known programming languages. I/O devices <b>220</b> may include at least one of a display, an LED, a router, a touchscreen, a keyboard, a microphone, a speaker, a haptic device, a camera, a button, a dial, a switch, a knob, a transceiver, an input device, an output device, or another I/O device to perform methods of the disclosed embodiments. I/O devices <b>220</b> may be components of an interface of data-searching system <b>106</b> (e.g., an interface such as interface <b>112</b>).</p><p id="p-0043" num="0042">Memory <b>230</b> may be a volatile or non-volatile, magnetic, semiconductor, optical, removable, non-removable, or other type of storage device or tangible (i.e., non-transitory) computer-readable medium, consistent with disclosed embodiments. As shown, memory <b>230</b> may include data <b>231</b>, including of at least one of encrypted data or unencrypted data. Data <b>231</b> may include one or more model indexes, model parameters, model hyperparameters, model codes, dataset indexes, data vectors, and/or datasets, consistent with disclosed embodiments.</p><p id="p-0044" num="0043">Programs <b>235</b> may include one or more programs (e.g., modules, code, scripts, or functions) used to perform methods consistent with disclosed embodiments. Programs may include operating systems (not shown) that perform known operating system functions when executed by one or more processors. Disclosed embodiments may operate and function with computer systems running any type of operating system. Programs <b>235</b> may be written in one or more programming or scripting languages, One or more of such software sections or modules of memory <b>230</b> may be integrated into a computer system, non-transitory computer-readable media, or existing communications software. Programs <b>235</b> may also be implemented or replicated as firmware or circuit logic.</p><p id="p-0045" num="0044">Programs <b>235</b> may include a model-training module <b>236</b>, data-profiling module <b>237</b>, aggregator <b>238</b>, searching module <b>239</b> and/or other modules not depicted to perform methods of the disclosed embodiments. In some embodiments, modules of programs <b>235</b> may be configured to generate (&#x201c;spin up&#x201d;) one or more ephemeral container instances to perform a task and/or to assign a task to a running (warm) container instance, consistent with disclosed embodiments. Modules of programs <b>235</b> may be configured to receive, retrieve, and/or generate models, consistent with disclosed embodiments. Modules of programs <b>235</b> may be configured to receive, retrieve, and/or generate datasets (e.g., to generate synthetic datasets, data samples, or other datasets), consistent with disclosed embodiments. Modules of programs <b>235</b> may be configured to perform operations in coordination with one another.</p><p id="p-0046" num="0045">Model-training module <b>236</b> may be configured to train one or more models and/or perform hyperparameter tuning of one or more models, including machine learning models. For example, model-training module <b>236</b> may be configured to receive input of one or more thresholds, one or more loss functions, and/or one or more limits on a number of interactions and apply the input for optimizing a received model and/or corresponding generalized representation such as a neural network. In some embodiments, training of a model terminates when a training criterion is satisfied. In some embodiments, model-training module <b>236</b> is configured to adjust model parameters during training. The model parameters may include weights, coefficients, offsets, or the like. Training may be supervised or unsupervised.</p><p id="p-0047" num="0046">Model-training module <b>236</b> may be configured to select or generate model parameters (e.g., number of layers for a neural network, kernel function for a kernel density estimator, or the like), update training hyperparameters, and evaluate model characteristics. For example, model characteristics may include a model type (e.g., an INN, a convolutional neural network (CNN), a random forest, or another model type), a model parameter, a model hyperparameter (including training a hyperparameter and/or an architectural hyperparameter), a desired outcome, belongingness to a model cluster, and/or belonginess of a model training dataset to a dataset duster, the similarity of synthetic data generated by a model to actual data, or other characteristics,</p><p id="p-0048" num="0047">In some embodiments, model-training module <b>236</b> may be configured to perform a search of a hyperparameter space and select new hyperparameters. This search may or may not depend on the values of a performance metric obtained for other trained models. In some aspects, model-training module <b>236</b> may be configured to perform a grid search or a random search. The hyperparameters may include training hyperparameters, which may affect how training of the model occurs, or architectural hyperparameters, which may affect the structure of the model.</p><p id="p-0049" num="0048">Consistent with disclosed embodiments, hyperparameters may include training hyperparameters such as learning rate, batch size, number of training batches, number of epochs, chunk size, time window, input noise dimension, or the like. Hyperparameters may include architectural parameters such as number of layers in a neural network, the choice of activation function for a neural network node, the layers in a CNN or the like. For example, when the stored model comprises a generative adversarial network (GAN), training hyperparameters for the model may include a weight for a loss function penalty term that penalizes the generation of training data according to a similarity metric. As a further example, when the stored model comprises a neural network, the training hyperparameters may include a learning rate for the neural network. As an additional example, when the model is a CNN, architectural hyperparameters may include the number and type of layers in the convolutional neural network.</p><p id="p-0050" num="0049">In some embodiments, model-training module <b>236</b> may include programs to apply one or more templates to a data model (e.g., a model retrieved from model storage <b>104</b>) and apply the templates to generate a generalized representation of the retrieved model (e.g., a neural network). Model-training module <b>236</b> may include programs to provide trained generalized representations to model storage <b>104</b> for storing in association with corresponding models.</p><p id="p-0051" num="0050">Data-profiling module <b>237</b> may be configured to profile a dataset, consistent with disclosed embodiments. A data profile may include information related to a data schema (i.e., the organization or structure of a dataset), including a data type, key-value pair, a label, metadata, a field, a relationship, a view, an index, a package, a procedure, a function, a trigger, a sequence, a synonym, a link, a directory, a queue, or the like. A data profile may include a statistical profile of a dataset that includes a plurality of descriptive (statistical) metrics of the dataset. For example, the statistical metrics may include an average, a mean, a standard deviation, a range, a moment, a variance, a covariance, a covariance matrix or any other statistical metric of the selected dataset.</p><p id="p-0052" num="0051">In some embodiments a statistical metric may be a similarity metric representing a measure of similarity between data in a dataset. The similarity metric may be based on a covariance matrix, a variance, a frequency of overlapping values, or other measure of statistical similarity. In some embodiments, data-profiling module <b>237</b> implements a machine learning model (e.g., a data-profiling model) to generate the similarity metric</p><p id="p-0053" num="0052">Data-profiling module <b>237</b> may include, may be configured generate, and/or may be configured to implement one or more data-profiling models. A data-profiling model may include machine-learning models and statistical models to determine the data schema and/or a statistical profile of a dataset (i.e., to profile a dataset), consistent with disclosed embodiments. The data-profiling model may include an RNN model, a CNN model, a variational autoencoder (VAE) model, an autoencoder model, or another machine-learning model. The data-profiling model may include algorithms to determine a data type, key-value pairs, row-column data structure, statistical distributions of information such as keys or values, or other property of a data schema. The data-profiling model may be configured to implement univariate and multivariate statistical methods. The data-profiling model may include a regression model, a Bayesian model, a statistical model, a linear discriminant analysis model, or other classification model configured to determine one or more descriptive metrics of a dataset. For example, the data-profiling model may include algorithms to determine an average, a mean, a standard deviation, a quantile, a quartile, a probability distribution function, a range, a moment, a variance, a covariance, a covariance matrix, a dimension and/or dimensional relationship (e.g., as produced by dimensional analysis such as length, time, mass, etc.) or any other descriptive metric of a dataset.</p><p id="p-0054" num="0053">In some embodiments, the data-profiling model may be trained to identify complex data types, i.e. a datatype whose structure may be based on an underlying rule (e.g., a social security number, a longitude, a zip code, an account number, an international telephone number, an address, a license plate number, a driver's license number, a government identification number, a passport number, or the like). In some embodiments, the data-profiling model may be trained to identify a complex variable as an address and may be trained to further identify complex variables as including United States addresses and/or Japanese addresses. The data-profiling model may be configured to tag identified variables. In some embodiments, the data-profiling model may be configured to perform embedding (e.g., feature embedding).</p><p id="p-0055" num="0054">Data-profiling module <b>237</b> may be configured to generate a data vector based on a data profile, consistent with disclosed embodiments. A data vector may include one or more statistical metrics of a corresponding reference datasets or of a variable (e.g., a data column) of the reference dataset. A data vector may include information based on a corresponding data schema of the reference dataset. For example, the data vector may include data relating to a data schema including a data type, key-value pair, a label, metadata, a field, a relationship, a view, an index, a package, a procedure, a function, a trigger, a sequence, a synonym, a link, a directory, a queue, or the like. In some embodiments, data-profile module <b>237</b> may be configured to generate a plurality of data vectors based on corresponding data profiles. Data-profiling module <b>237</b> may be configured to generate metadata associated with a data vector. For example, data-profiling module <b>237</b> may generate a tag, a label, a unique identifier, a title, a data class name (e.g., &#x201c;health data&#x201d;, &#x201c;financial data&#x201d;, &#x201c;environmental data&#x201d;, etc.), a data format, or other metadata. Data-profiling module <b>237</b> may be configured to perform calculations on the dataset (e.g., converting measurement units, normalizing data values, classifying data values into a category, or other calculations).</p><p id="p-0056" num="0055">Data-profiling module <b>237</b> may be configured to aggregate and/or store the plurality of data vectors in a data storage, consistent with disclosed embodiments. For example, the plurality of data vectors may be stored as a data index, a matrix, in a relational database, or in another format. In some embodiments, the data vector may include statistical metrics of a plurality of data vectors based on a plurality of corresponding data profiles, consistent with disclosed embodiments. In some embodiments, the data vector may be a subset of a data profile. In some embodiments, the data vector may be the data profile. In some embodiments, the data vector may include a statistical metric of the data profile (e.g., a mean of a plurality of means).</p><p id="p-0057" num="0056">Aggregator <b>238</b> may include programs (scripts, functions, algorithms) to aggregate datasets and/or data indexes, consistent with disclosed embodiments. In some embodiments, aggregator <b>238</b> may be configured to retrieve and/or receive data (e.g., a dataset, a data vector, a data index, a model, and/or a model index), transmit data, and/or store data in a data storage. In some embodiments, aggregator <b>238</b> may be configured to transmit data to, store data in, receive data from, and/or retrieve data from other components of system <b>100</b> (e.g., data <b>231</b>; computing environments <b>116</b><i>a</i>, <b>116</b><i>b, </i><b>116</b><i>n; </i>databases <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>n; </i>aggregation database <b>108</b>; model storage <b>104</b>; data-migration system <b>110</b>; or other components). In some embodiments, aggregator <b>238</b> may be configured to transmit data to, store data in, receive data from, and/or retrieve data from a computing component outside system <b>100</b> (e.g., via interface <b>112</b>). In some embodiments, aggregator <b>238</b> may receive data from or transmit data to other modules of data-searching system <b>106</b>. In some embodiments, aggregator <b>238</b> may be configured to transmit, store, receive, and/or retrieve data according to at least one of a predetermined schedule or a triggering event. A triggering event may include receiving a notification, receiving a dataset, receiving a request, and/or another event.</p><p id="p-0058" num="0057">Searching module <b>239</b> may include programs (scripts, functions, algorithms, routines, or the like) to conduct a search, consistent with disclosed embodiments. In some embodiments, searching module <b>239</b> may include programs to generate and maintain searchable data indexes as data trees based on the data vectors (e.g., a B-Tree). In some embodiments, searching module <b>239</b> may include programs based on POSTGRESQL or other object-relational database management system. For example, searching module <b>239</b> may be configured to generate a data index (e.g., a RUM-index and/or GIN-index and/or Locality-Sensitive Hashing). The data index may be configured to be searched (e.g., as a data tree). The data index may be based on the data vectors and/or data profiles and organized for efficient searching with or without using k-nearest neighbors clustering-based methods.</p><p id="p-0059" num="0058">Searching module <b>239</b> may be configured to execute a search of the data index. In some embodiments, searching module <b>239</b> may be configured to receive search parameters such as the types of data to search or other information related to data types and schemas to guide the search of the data index. For example, the search parameters may indicate that the search will weigh the data schema of a dataset more than the particular data values or statistical metrics of the dataset. Search parameters may be received from another component of system <b>100</b> or a computing component outside system <b>100</b> (e.g., via interface <b>112</b>). In some embodiments, the search parameters may include instructions to search a data index by first comparing data schemas then by comparing statistical metrics. The search parameters may include instructions to search the data profile (i.e., schema and statistical metrics) of a dataset then to search variables (e.g., data columns) of a dataset. In some embodiments, searching module <b>239</b> may be configured to generate search parameters using a machine learning model trained to use learned features of data to improve search accuracy.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an exemplary data-migration system <b>110</b>, consistent with disclosed embodiments. Data-migration system <b>110</b> may include computing systems configured to manage movement of data between components of system <b>100</b> and/or to manage movement of data between components of system <b>100</b> and computing components outside system <b>100</b>. Data-migration system <b>110</b> may include a computing device, a computer, a server, a server duster, a plurality of dusters, and/or a cloud service, consistent with disclosed embodiments. As shown, data-migration system <b>110</b> includes one or more processors <b>310</b>, one or more I/O devices <b>320</b>, and one or more memory units <b>330</b>. In some embodiments, some or all components of data-migration system <b>110</b> may be hosted on a device, a computer, a server, a duster of servers, or a cloud service. In some embodiments, data-migration system <b>110</b> is a scalable system configured to efficiently manage resources and enhance security by provisioning computing resources in response to triggering events and terminating resources after completing a task (e.g., a scalable cloud service that spins up and terminates container instances).</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an exemplary configuration of data-migration system <b>110</b>. As will be appreciated by one skilled in the art, the components and arrangement of components included in data-migration system <b>110</b> may vary. For example, as compared to the depiction in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, data-migration system <b>110</b> may include a larger or smaller number of processors <b>310</b>, I/O devices <b>320</b>, or memory units <b>330</b>. In additon, data-migration system <b>110</b> may further include other components or devices not depicted that perform or assist in the performance of one or more processes consistent with the disclosed embodiments. The components and arrangements shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> are not intended to limit the disclosed embodiments, as the components used to impler ent the disclosed processes and features may vary.</p><p id="p-0062" num="0061">Processor <b>310</b> may comprise known computing processors, including a microprocessor. Processor <b>310</b> may constitute a single-core or multiple-core processor that executes parallel processes simultaneously. For example, processor <b>310</b> may be a single-core processor configured with virtual processing technologies. In some embodiments, processor <b>310</b> may use logical processors to simultaneously execute and control multiple processes. Processor <b>310</b> may implement virtual machine technologies, or other known technologies to provide the ability to execute, control, run, manipulate, store, etc., multiple software processes, applications, programs, etc. In another embodiment, processor <b>310</b> may include a multiple-core processor arrangement (e.g., dual core, quad core, etc.) configured to provide parallel processing functionalities to allow execution of multiple processes simultaneously. One of ordinary skill in the art would understand that other types of processor arrangements could be implemented that provide for the capabilities disclosed herein. The disclosed embodiments are not limited to any type of processor(s) <b>310</b>. Processor <b>310</b> may execute various instructions stored in memory <b>330</b> to perform various functions of the disclosed embodiments described in greater detail below. Processor <b>310</b> is configured to execute functions written in one or more known programming languages.</p><p id="p-0063" num="0062">I/O devices <b>320</b> may include at least one of a display, an LED, a router, a touchscreen, a keyboard, a microphone, a speaker, a haptic device, a camera, a button, a dial, a switch, a knob, a transceiver, an input device, an output device, or another I/O device to perform methods of the disclosed embodiments. I/O devices <b>320</b> may be components of an interface of data-migration system <b>110</b>.</p><p id="p-0064" num="0063">Memory <b>330</b> may be a volatile or non-volatile, magnetic, semiconductor, optical, removable, non-removable, or other type of storage device or tangible (i.e., non-transitory) computer-readable medium, consistent with disclosed embodiments. As shown, memory <b>330</b> may include data <b>331</b>, including of at least one of encrypted data or unencrypted data, Data <b>331</b> may include one or more model indexes, model parameters, model hyperparameters, model codes, data indexes, data vectors, and/or datasets, consistent with disclosed embodiments.</p><p id="p-0065" num="0064">Programs <b>335</b> may include one or more programs (e.g., modules, code, scripts, or functions) used to perform methods consistent with disclosed embodiments.</p><p id="p-0066" num="0065">Programs may include operating systems (not shown) that perform known operating system functions when executed by one or more processors. Disclosed embodiments may operate and function with computer systems running any type of operating system. Programs <b>335</b> may be written in one or more programming or scripting languages. One or more of such software sections or modules of memory <b>330</b> may be integrated into a computer system, non-transitory computer-readable media, or existing communications software. Programs <b>335</b> may also be implemented or replicated as firmware or circuit logic.</p><p id="p-0067" num="0066">In some embodiments, modules of programs <b>335</b> may be configured to generate (&#x201c;spin up&#x201d;) one or more ephemeral container instances to perform a task and/or to assign a task to a running (warm) container instance, consistent with disclosed embodiments. Modules of programs <b>335</b> may be configured to receive, retrieve, and/or generate models, consistent with disclosed embodiments. Modules of programs <b>335</b> may be configured to receive, retrieve, and/or generate datasets (e.g., to generate synthetic datasets, data samples, or other datasets), consistent with disclosed embodiments. Modules of programs <b>335</b> may be configured to perform operations in coordination with one another.</p><p id="p-0068" num="0067">As shown, programs <b>335</b> may include a model-training module <b>336</b>, data-profiling module <b>337</b>, aggregator <b>338</b>, migration module <b>339</b> and/or other modules not depicted to perform methods of the disclosed embodiments. Model-training module <b>336</b> may include, may be configured generate, and/or may be configured to implement any of the models, algorithms, functions, programs, scripts and/or other computing code as disclosed in reference to model-training module <b>236</b>, above. Data-profiling module <b>337</b> may include, may be configured generate, and/or may be configured to implement any of the models, algorithms, functions, programs, scripts and/or other computing code as disclosed in reference to data-profiling module <b>237</b>, above. Aggregator <b>338</b> may include, may be configured generate, and/or may be configured to implement any of the models, algorithms, functions, programs, scripts and/or other computing code as disclosed in reference to model-training module <b>236</b>, above,</p><p id="p-0069" num="0068">Migration module <b>339</b> may be configured to receive and/or retrieve data from one computing component and transmit the data to another component. The computing components may be part of system <b>100</b> or outside system <b>100</b>, Migration module <b>339</b> may be configured to generate and maintain logs or other records related to data transfers. In some embodiments, migration module <b>339</b> may be configured to generate and/or maintain logs or other records of data transfers that other components of system <b>100</b> perform. For example, migration module <b>339</b> may receive a notification that includes a statement of a data transfer to or from a component of system <b>100</b> and generate or update a log based on the notification. Migration module <b>339</b> may aggregate logs or other records of data transfer that are generated by other components of system <b>100</b>. For example, migration module <b>339</b> may receive a log from a component of system <b>100</b> and update an aggregated log file. Updating a log file or aggregated log file may include identifying and removing duplicate records.</p><p id="p-0070" num="0069">Data-migration system <b>110</b> may manage some or all dataset transfers to and from components of system <b>100</b>. For example, in some embodiments, some or all datasets that enter system <b>100</b> may be received at data-migration system <b>110</b> prior to being transferred to another component of system <b>100</b>. In some embodiments, some or all datasets that exits system <b>100</b> may be received at data-migration system <b>110</b> prior to being transferred to a computing component outside system <b>100</b>. In some embodiments, some or all datasets transferred from a component of system <b>100</b> may be received at data-migration system <b>110</b> before being transferred to another component of system <b>100</b>. In some embodiments, data-migration system <b>110</b> may maintain a log or record of some or all dataset transfers between components of system <b>100</b>. In some embodiments, data-migration system <b>110</b> may maintain a log or record of some or all dataset transfers between components of system <b>100</b> and computing components outside system <b>100</b>.</p><p id="p-0071" num="0070">In some embodiments, data-migration system <b>110</b> may be configured to receive a request to transfer data. Data-migration system <b>110</b> may be configured to transfer data based on the request. The request may include a statement indicating a data source and/or a desired data destination.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an exemplary computing environment <b>116</b>, consistent with disclosed embodiments. Computing environment <b>116</b> may be one of, for example, computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n. </i>Computing environment <b>116</b> may be or include a virtual private cloud, a local computing environment (e.g., a personal computer, terminal, kiosk, or workstation), a server, a server cluster, a device (e.g., a mobile device, a tablet, a laptop, etc.), and/or another computing environment.</p><p id="p-0073" num="0072">As shown, computing environment <b>116</b> includes one or more processors <b>410</b>, one or more I/O devices <b>420</b>, and one or more memory units <b>430</b>. In some embodiments, some or all components of computing environment <b>116</b> may be hosted on a device, a computer, a server, a duster of servers, or a cloud service. In some embodiments, computing environment <b>116</b> is a scalable system configured to efficiently manage resources and enhance security by provisioning computing resources in response to triggering events and terminating resources after completing a task (e.g., a scalable cloud service that spins up and terminates container instances).</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an exemplary configuration of computing environment <b>116</b>. As will be appreciated by one skilled in the art, the components and arrangement of components included in computing environment <b>116</b> may vary. For example, as compared to the depiction in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, computing environment <b>116</b> may include a larger or smaller number of processors <b>410</b>, I/O devices <b>420</b>, or memory units <b>430</b>. In addition, computing environment <b>116</b> may further include other components or devices not depicted that perform or assist in the performance of one or more processes consistent with the disclosed embodiments. The components and arrangements shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> are not intended to limit the disclosed embodiments, as the components used to implement the disclosed processes and features may vary.</p><p id="p-0075" num="0074">Processor <b>410</b> may comprise known computing processors, including a microprocessor. Processor <b>410</b> may constitute a single-core or multiple-core processor that executes parallel processes simultaneously. For example, processor <b>410</b> may be a single-core processor configured with virtual processing technologies. In some embodiments, processor <b>410</b> may use logical processors to simultaneously execute and control multiple processes. Processor <b>410</b> may implement virtual machine technologies, or other known technologies to provide the ability to execute, control, run, manipulate, store, etc., multiple software processes, applications, programs, etc. In another embodiment, processor <b>410</b> may include a multiple-core processor arrangement (e.g., dual core, quad core, etc.) configured to provide parallel processing functionalities to allow execution of multiple processes simultaneously. One of ordinary skill in the art would understand that other types of processor arrangements could be implemented that provide for the capabilities disclosed herein. The disclosed embodiments are not limited to any type of processor(s) <b>410</b>. Processor <b>410</b> may execute various instructions stored in memory <b>330</b> to perform various functions of the disclosed embodiments described in greater detail below. Processor <b>410</b> is configured to execute functions written in one or more known programming languages.</p><p id="p-0076" num="0075">I/O devices <b>420</b> may include at least one of a display, an LED, a router, a touchscreen, a keyboard, a microphone, a speaker, a haptic device, a camera, a button, a dial, a switch, a knob, a transceiver, an input device, an output device, or another UO device to perform methods of the disclosed embodiments. I/O devices <b>420</b> may be components of an interface of computing environment <b>116</b>.</p><p id="p-0077" num="0076">Memory <b>430</b> may be a volatile or non-volatile, magnetic, semiconductor, optical, removable, non-removable, or other type of storage device or tangible (i.e., non-transitory) computer-readable medium, consistent with disclosed embodiments. As shown, memory <b>430</b> may include data <b>431</b>, including of at least one of encrypted data or unencrypted data, Data <b>431</b> may include one or more model indexes, model parameters, model hyperparameters, model codes, data indexes, data vectors, and/or datasets, consistent with disclosed embodiments.</p><p id="p-0078" num="0077">Programs <b>435</b> may include one or more programs (e.g., modules, code, scripts, or functions) used to perform methods consistent with disclosed embodiments. Programs may include operating systems (not shown) that perform known operating system functions when executed by one or more processors. Disclosed embodiments may operate and function with computer systems running any type of operating system. Programs <b>435</b> may be written in one or more programming or scripting languages. One or more of such software sections or modules of memory <b>430</b> may be integrated into a computer system, non-transitory computer-readable media, or existing communications software. Programs <b>435</b> may also be implemented or replicated as firmware or circuit logic.</p><p id="p-0079" num="0078">In some embodiments, modules of programs <b>435</b> may be configured to generate (&#x201c;spin up&#x201d;) one or more ephemeral container instances to perform a task and/or to assign a task to a running (warm) container instance, consistent with disclosed embodiments. Modules of programs <b>435</b> may be configured to receive, retrieve, and/or generate models, consistent with disclosed embodiments. Modules of programs <b>435</b> may be configured to receive, retrieve, and/or generate datasets (e.g., to generate synthetic datasets, data samples, or other datasets), consistent with disclosed embodiments. Modules of programs <b>435</b> may be configured to perform operations in coordination with one another.</p><p id="p-0080" num="0079">As shown, programs <b>435</b> may include a model-training module <b>436</b>, data-profiling module <b>437</b>, and/or other modules not depicted to perform methods of the disclosed embodiments. Model-training module <b>436</b> may include, may be configured generate, and/or ay be configured to implement any of the models, algorithms, functions, programs, scripts and/or other computing code as disclosed in reference to model-training module <b>236</b>, above. Data-profiling module <b>437</b> may include, may be configured generate, and/or may be configured to implement any of the models, algorithms, functions, programs, scripts and/or other computing code as disclosed in reference to data-profiling module <b>237</b>, above.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an exemplary process for profiling data <b>500</b>, consistent with disclosed embodiments. In some embodiments, data-migration system <b>110</b> may perform process <b>500</b> using programs <b>335</b>. One or more of model-training module <b>336</b>, data-profiling module <b>337</b>, aggregator <b>338</b>, migration module <b>339</b>, or other module of programs <b>335</b> may perform operations of process <b>500</b>, consistent with disclosed embodiments. In some embodiments, data-searching system <b>106</b> may perform steps of process <b>500</b>. One or more of model-training module <b>236</b>, data-profiling module <b>237</b>, aggregator <b>238</b>, searching module <b>239</b>, or other module of programs <b>235</b> may perform operations of process <b>500</b>, consistent with disclosed embodiments. It should be noted that other components of system <b>100</b>, including, for example, model optimizer <b>102</b>, client device <b>114</b>, and/or one or more computing environments (e.g., computing environment <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n</i>) may perform operations of one or more steps of process <b>500</b>.</p><p id="p-0082" num="0081">Consistent with disclosed embodiments, steps of process <b>500</b> may be performed on one or more cloud services using one or more ephemeral container instances. For example, at any of the steps of process <b>500</b>, data-migration system <b>110</b> or data-searching system <b>106</b> may generate (spin up) an ephemeral container instance to execute a task, assign a task to an already-running ephemeral container instance (warm container instance), or terminate a container instance upon completion of a task. As one of skill in the art will appreciate, steps of process <b>500</b> may be performed as part of an application interface (API) call.</p><p id="p-0083" num="0082">At step <b>502</b>, data-migration system <b>110</b> may receive one or more reference datasets, consistent with disclosed embodiments. In some embodiments, receiving a reference dataset includes retrieving the reference dataset from another computing component. In some embodiments, the reference datasets may be received from client device <b>114</b>, computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n, </i>databases <b>118</b><i>a</i>, <b>118</b><i>b, </i><b>118</b><i>n, </i>and/or an external computing component (e.g., via interface <b>112</b>). In some embodiments, the reference datasets may be received based on a schedule.</p><p id="p-0084" num="0083">In some embodiments, receiving a reference dataset at step <b>502</b> includes a receiving a request. In some embodiments, the request includes a command to retrieve one or more reference datasets from another component of system <b>100</b>. In some embodiments, the request includes a command to retrieve a data vector and/or a data index. In some embodiments, a data vector and/or data index is received at step <b>502</b>, In some embodiments, data-migration system <b>110</b> generates or updates a log file based on the received or retrieved datasets, consistent with disclosed embodiments.</p><p id="p-0085" num="0084">In some embodiments, at step <b>502</b>, data-migration system transmits a dataset request to a computing component of system <b>100</b> (e.g., a computing environment <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n </i>or outside system <b>100</b>) and receives a dataset in response to the request, consistent with disclosed embodiments. The dataset request may be transmitted according to a schedule. The dataset request may be transmitted based on a triggering event, such as receiving a user request via an interface</p><p id="p-0086" num="0085">At step <b>504</b>, data-migration system <b>110</b> may identify one or more data schemas corresponding to individual ones of the one or more reference datasets, consistent with disclosed embodiments. Step <b>504</b> may include using one or more data-profiling model to identify the data schemas. The data-profiling model may be stored in, for example, model storage <b>104</b>, data <b>331</b>, or another data storage.</p><p id="p-0087" num="0086">At step <b>506</b>, data-migration system <b>110</b> may generate data vectors based on the one or more data schemas, consistent with disclosed embodiments. As previously described, the data vectors may include statistical metrics of the sample dataset and information based on the data schema of the sample dataset. Step <b>506</b> may include using one or more data-profiling models to generate data vectors. The data-profiling model may be stored in, for example, model storage <b>104</b>, data <b>331</b>, or another data storage. Step <b>506</b> may include generating metadata (e.g., one or more tags or labels) associated with the data vectors. Step <b>506</b> may include performing calculations on the dataset (e.g., converting measurement units, normalizing data values, classifying data values into a category, or other calculations) as before generating the data vectors.</p><p id="p-0088" num="0087">At step <b>508</b>, data-migration system <b>110</b> may generate a data index based on the data vectors, consistent with disclosed embodiments. The data index may include the data vectors and metadata associated with the data vectors. The data index may be a searchable data index, consistent with disclosed embodiments. For example, the data index may be stored as a tree.</p><p id="p-0089" num="0088">At step <b>510</b>, data-migration system <b>110</b> may store the data index, consistent with disclosed embodiments. Storing the data index may include storing the data index in aggregation database <b>108</b> and/or one or more data storages (e.g., data <b>231</b>, data <b>331</b>, or data <b>431</b>). Storing the data index may include storing the data vectors. Storing the data index may include generating and/or updating a log based on the data index and storing the log.</p><p id="p-0090" num="0089">It should be noted that steps of process <b>500</b> may be repeated. For example, data-migration system <b>110</b> may receive an additional dataset and/or an additional data vector and repeat steps of process <b>500</b> to update a data index,</p><p id="p-0091" num="0090">FIG, <b>6</b> depicts an exemplary process for searching for data <b>600</b>, consistent with disclosed embodiments. In some embodiments, data-searching system <b>106</b> performs process <b>600</b>. One or more of model-training module <b>236</b>, data-profiling module <b>237</b>, aggregator <b>238</b>, searching module <b>239</b>, or other module of programs <b>235</b> may perform operations of process <b>600</b>, consistent with disclosed embodiments. It should be noted that other components of system <b>100</b>, including, for example, model optimizer <b>102</b>, client device <b>114</b>, data-migration system <b>110</b>, and/or one or more computing environments (e.g., computing environment <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n</i>) may perform operations of one or more steps of process <b>600</b>.</p><p id="p-0092" num="0091">Consistent with disclosed embodiments, steps of process <b>600</b> may be performed on one or more cloud services using one or more ephemeral container instances. For example, at any of the steps of process <b>600</b>, data-migration system <b>110</b> or data-searching system <b>106</b> may generate (spin up) an ephemeral container instance to execute a task, assign a task to an already-running ephemeral container instance (warm container instance), or terminate a container instance upon completion of a task. As one of skill in the art will appreciate, steps of process <b>600</b> may be performed as part of an application interface (API) call.</p><p id="p-0093" num="0092">At step <b>602</b>, data-searching system <b>106</b> may receive a sample dataset, consistent with disclosed embodiments. In some embodiments, receiving a sample dataset includes retrieving the reference sample from another computing component. In some embodiments, the sample dataset is received from data-migration system <b>110</b>, client device <b>114</b>, computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n, </i>databases <b>118</b><i>a, </i><b>118</b><i>b</i>, <b>118</b><i>n, </i>and/or an external computing component (e.g., via interface <b>112</b>). In some embodiments, receiving a sample dataset at step <b>602</b> includes a receiving a request. In some embodiments, the request includes a command to retrieve the sample dataset from another component of system <b>100</b>. In some embodiments, the request includes a command to retrieve one or more reference datasets from another component of system <b>100</b>. In some embodiments, the request includes a command to retrieve a data vector and/or a data index. In some embodiments, a data vector and/or data index is received at step <b>602</b>.</p><p id="p-0094" num="0093">At step <b>604</b>, data-searching system <b>106</b> may identify a data schema of the sample dataset, consistent with disclosed embodiments. Step <b>604</b> may include using one or more data-profiling model to identify the data schema. The data-profiling models may be stored in, for example, model storage <b>104</b>, data <b>231</b>, or another data storage. As previously described, data-profiling model may include machine-learning models and statistical models to determine the data schema and/or a statistical profile of a dataset (i.e., to profile a dataset). The data-profiling model may include an RNN model, a CNN model, or other machine-learning model. The data-profiling model may include algorithms to determine a data type, key-value pairs, row-column data structure, statistical distributions of information such as keys or values, or other property of a data schema. The data-profiling model may be configured to implement univariate and multivariate statistical methods. The data-profiling model may include a regression model, a Bayesian model, a statistical model, a linear discriminant analysis model, or other classification model configured to determine one or more descriptive metrics of a dataset. For example, the data-profiling model may include algorithms to determine an average, a mean, a standard deviation, a quantile, a quartile, a probability distribution function, a range, a moment, a variance, a covariance, a covariance matrix, a dimension and/or dimensional relationship (e.g., as produced by dimensional analysis such as length, time, mass, etc.) or any other descriptive metric of a dataset. In some embodiments, the data-profiling model may be trained to identify complex data types, i.e. a datatype whose structure may be based on an underlying rule (e.g., a social security number, a longitude, a zip code, an account number, an international telephone number, an address, a license plate number, a driver's license number, a government identification number, a passport number, or the like)</p><p id="p-0095" num="0094">At step <b>606</b>, data-searching system <b>106</b> may generate a sample data vector based on the data schema, consistent with disclosed embodiments. As previously described, the sample data vectors may include statistical metrics of the sample dataset and information based on the data schema of the sample dataset. Step <b>606</b> may include using one or more data-profiling models to generate the sample data vector. The data-profiling model may be stored in, for example, model storage <b>104</b>, data <b>231</b>, or another data storage. Step <b>606</b> may include generating metadata (e.g., one or more tags or labels) associated with the sample data vector. Step <b>606</b> may include performing calculations on the sample dataset (e.g., converting measurement units, normalizing data values, classifying data values into a category, or other calculations) as before generating the sample data vector.</p><p id="p-0096" num="0095">At step <b>608</b>, data-searching system <b>106</b> may set search parameters, consistent with disclosed embodiments. In some embodiments, the search parameters may be received at step <b>602</b>. In some embodiments, step <b>608</b> may include sending a request for search parameter to a component of system <b>100</b> or a computing component outside system <b>100</b> and receiving the search parameters in response to the request. For example, the search parameters may include instructions to search the data index based on a comparison of data vector components representing data schemas of the datasets or data schemas of variables of the dataset (e.g., column data). The search parameters may include instructions to search the data index based on a comparison of data vector components representing statistical metrics of the dataset and/or statistical metrics of variables of the dataset. As an example, the search parameters may first specify to conduct an initial search based on comparisons of data schemas and conduct a search based on comparisons of statistical metrics. In some embodiments, the search parameters may include instructions to search the data index by searching data profiles (data schema and statistical metrics) of the datasets and searching data profiles of variables of the datasets.</p><p id="p-0097" num="0096">At step <b>610</b>, data-searching system <b>106</b> may search a data index comprising stored data vectors, consistent with disclosed embodiments. The search may be based on search parameters, consistent with disclosed embodiments. In some embodiments, the search may be conducted without k-nearest neighbor clustering. A stored vector may correspond to a reference dataset or to a variable of a reference dataset (e.g., a data column),</p><p id="p-0098" num="0097">Step <b>610</b> may include identifying the data index. The data index may be stored in, for example, aggregation database <b>108</b> or another component of system <b>100</b>, and data-searching system <b>106</b> may identify the data index based on the sample dataset or sample vector (e.g., based on metadata). In some embodiments, the data index may be received at step <b>602</b>. In some embodiments, identifying a data index may be performed based on user inputs received at step <b>610</b> (e.g., receiving an instruction via interface <b>112</b>). In some embodiments, the data index may be identified based on metadata of associated with the sample data vector.</p><p id="p-0099" num="0098">At step <b>612</b>, data-searching system <b>106</b> may generate one or more similarity metrics between the stored data vectors and the sample data vector, consistent with disclosed embodiments. As previously described, the similarity metric may represent a measure of similarity between data. For example, the similarity metric may be based on a covariance matrix, a variance, a frequency of overlapping values, or other measure of statistical similarity. The similarity metric may include a percent match and/or a confidence interval. In some embodiments, data-searching system <b>106</b> may generate the similarity metrics using one or more data-profiling models, consistent with disclosed embodiments.</p><p id="p-0100" num="0099">In some embodiments, a similarity metric may include a likelihood that a reference dataset derives from sample dataset. In some embodiments, a similarity metric may include a likelihood that the sample dataset derives from a reference dataset. For example, a dataset may derive from another dataset when the data schema and/or data values match according to a threshold or frequency. As an example, a small dataset may be a subset of a large dataset, i.e. it derives from the larger dataset. As another example, one dataset may contain some overlapping values with another dataset and both may contain values that are unique from the other dataset. In that example, either dataset may be said to derive from the other dataset.</p><p id="p-0101" num="0100">At step <b>614</b>, data-searching system <b>106</b> may provide the one or more similarity metrics, consistent with disclosed embodiments. Providing the similarity metrics at step <b>614</b> may include displaying the similarity metrics at an interface (e.g., interface <b>112</b>, a display of I/O devices <b>220</b>, and/or a display of I/O devices <b>320</b>). Providing the similarity metrics at step <b>614</b> may include transmitting the similarity metrics to another component of system <b>100</b> (e.g., to client device <b>114</b>) and/or to a computing component outside system <b>100</b> (e.g., via interface <b>112</b>).</p><p id="p-0102" num="0101">At step <b>616</b>, data-searching system <b>106</b> may select one or more data vectors, consistent with disclosed embodiments. In some embodiments, selecting data vectors may be based on the similarity metrics and one or more predetermined selection criteria. The predetermined selection criteria may be received from a user (e.g., at step <b>602</b> or as a user-input received via an interface at step <b>616</b>). The selection criteria may include a command to select any data vectors with similarity criteria falling within a range (e.g., any data vectors between 50% to 90% match). Selecting data vectors may include receiving metadata (e.g., one or more tags or labels) associated with the data vectors.</p><p id="p-0103" num="0102">At step <b>618</b>, data-searching system <b>106</b> may retrieve one or more datasets associated with the selected data vectors, consistent with disclosed embodiments, In some embodiments, data-searching system <b>106</b> retrieves the datasets from one of data <b>231</b>, aggregation database <b>108</b>, data-migration system <b>110</b>, computing environments <b>116</b><i>a, </i><b>116</b><i>b, </i><b>116</b><i>n, </i>databases <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>n, </i>and/or a computing outside system <b>100</b> (e.g., via the interface <b>112</b>). Retrieving a dataset may be based on the metadata of the selected data vectors, Retrieving a dataset may be include identifying a location (e.g., a database, an internet address) or an identifier of the dataset based on a log and the selected data vector. In some embodiments, the log may be stored in data aggregation database <b>108</b>.</p><p id="p-0104" num="0103">At step <b>620</b>, data-searching system <b>106</b> may provide the datasets associated with the selected data vectors, consistent with disclosed embodiments. Providing the datasets at step <b>620</b> may include displaying the datasets at an interface (e.g., interface <b>112</b>, a display of I/O devices <b>220</b>, and/or a display of I/O devices <b>320</b>). Providing the datasets at step <b>620</b> may include transmitting the datasets to another component of system <b>100</b> (e.g., to client device <b>114</b>) and/or to a computing component outside system <b>100</b> (e.g., via interface <b>112</b>). Providing the datasets may include storing the datasets in a data storage. Providing the datasets may include providing a link to the datasets. Providing the datasets may include providing a compressed file comprising one or more datasets. Providing the datasets may include sending a request to data-migration system <b>110</b> to transfer a dataset to a computing component, consistent with disclosed embodiments.</p><p id="p-0105" num="0104">Example Implentation: Conducting a search based on a sample dataset in .CSV-format comprising public health indicators.</p><p id="p-0106" num="0105">As an illustrative example, a researcher may be conducting a meta-analysis of a plurality of health studies to identify health indicators that predict a health outcome, such as risk factors that contribute to heart attacks. The researcher may use data-searching system <b>106</b> to expand the study by identifying additional data sources to include in the study. The researcher may possess an initial sample dataset, Advantageously, the disclosed system and method provide appropriate datasets to address the researcher's goal of expanding the study, because the system provides datasets that are similar to the sample dataset based on the structure and content of sample dataset. In contrast, conventional search methods may identify datasets that merely happen to contain keywords or other sequences of characters which overlap with the sample datasets. Hence, a conventional search may return redundant or dissimilar datasets that cannot be included in the meta-analysis.</p><p id="p-0107" num="0106">In the example, following steps of process <b>600</b> beginning with step <b>602</b>, data-searching system <b>100</b> may receive a sample dataset from the researcher's device (e.g., client device <b>114</b>), consistent with disclosed embodiments. The sample dataset may be a .CSV file. Column headers may include an identifier (e.g., an anonymous patient ID, a social security number, etc.), a data of birth, a date associated with the measurement of other parameters, and one or more other parameters. The parameters may include a current residential address, a sex, a wealth indicator (e.g., home equity, income, debt), one or more health indicators (e.g., a cholesterol measurement, a resting heart rate, a percent body fat, a weight, a height, a smoking status, or the like), and a health event (e.g., a heart attack). Row data may include records associated individual persons.</p><p id="p-0108" num="0107">In the example, data-searching system <b>106</b> identifies a data schema of the sample dataset (step <b>604</b>), consistent with disclosed embodiments. Here, the data schema may include column headers. In some cases, the columns may be unlabeled and a data-profiling model may identify a data type and provide a label (e.g., provide a column header). Identifying the data schema may include identifying complex data types using a trained model, consistent with disclosed embodiments.</p><p id="p-0109" num="0108">Next, data-searching system <b>106</b> generates a sample data vector of the sample dataset (step <b>606</b>). As an example, generating the sample data vector may include translating the residential address into Global Positioning System coordinates and developing statistical metrics of the GPS coordinates (e.g., the centroid of the GPS coordinates, parameters of a fit to a Poisson distribution or other statistical distribution of the GPS coordinates). The sample data vector may then include the statistical metrics of the GPS coordinates. In addition, generating the sample data vector may include developing a mean, median, and variance of the age of individuals in the dataset based on the date of birth and a data associated with the measurement of parameters. The sample data vector may include the mean, median, and variance of the age.</p><p id="p-0110" num="0109">Consistent with disclosed embodiments, in the example, data vectors may be generated using machine learning models (e.g., a data-profiling model) and have no human-understandable interpretation. For example, a machine-learning model comprising an autoencoder model, a VAE model, and/or other model may perform feature embedding and generate vectors based on the identified features, consistent with disclosed embodiments.</p><p id="p-0111" num="0110">Data-searching system <b>106</b> may set the search parameters (step <b>608</b>). For example, the system may receive a set of instructions from client device <b>114</b>, the instructions be based on user inputs. The instructions might specify that the search should be performed over a data index stored in aggregation database <b>108</b>. The instructions may include a command to assign a weight of 0.8 to a search parameter associated with the data schema (here, column labels). The instructions may further include a command to assign a weight of 0.05 to search parameters corresponding to each of four statistical metrics (e.g., the GPS centroid, the mean age, the median age, and the variance of the age). Alternatively, in the example, the search parameters may be determined using a machine-learning model.</p><p id="p-0112" num="0111">Data-searching system <b>106</b> may then identify a data index and perform a search of the data index (step <b>610</b>), consistent with disclosed embodiments. For example, the data index may be stored in aggregation database <b>108</b> and include stored data vectors associated with a plurality of public health datasets from a plurality of sources (i.e., systems). The systems may include systems associated with a university, a research institution, an agency (e.g., Center for Disease Control), a health care provider (e.g., a hospital), an insurance provider, the internet (e.g., a dataset retrieved from the internet by data-migration system <b>110</b>), and/or other systems.</p><p id="p-0113" num="0112">Data-searching system <b>106</b> may generate similarity metrics based on the search (step <b>612</b>), consistent with disclosed embodiments. For example, the similarity metric may indicate a &#x201c;percent match&#x201d; between one or more stored data vectors and the sample data vector. The stored and sample data vectors may include statistical metrics based on complex data types. In a search, data-searching system <b>106</b> may identify two datasets that share the same data schema as the sample data vector. Data-searching system <b>106</b> may give a first one of these datasets a 100% match because it has the same GPS centroid, mean age, median age, and variance of the age as the sample dataset, i.e., data-searching system <b>106</b> found the same dataset as the sample dataset. However, data-searching system <b>106</b> may give the second one of these datasets an 80% match because it has a different GPS centroid, mean age, median age, and variance of the age. In addition, data-searching system <b>106</b> may identify a third dataset has a 75% match because it shares some properties of the data schema and has different statistical metrics.</p><p id="p-0114" num="0113">In the example, data-searching system <b>106</b> may provide the similarity metrics to the researcher's device (step <b>614</b>). The device (e.g., client device <b>114</b>) may display the metrics via an interface. The researcher may then be able to provide user inputs to reject the 100% match data vector and select the 80%- and 75% match data vector (step <b>618</b>). For example, the researcher may be able to click an icon on the interface to select a data vector. Based on the selection, data-searching system <b>106</b> may then retrieve datasets associated with the selected data vector and provide the retrieved datasets to the user (steps <b>618</b> and <b>620</b>). For example, data-searching system <b>106</b> may determine that a vector corresponds to a dataset stored in computing environment <b>116</b><i>a </i>and retrieve or send a request to receive the corresponding dataset from computing environment <b>116</b><i>a. </i>The interface may display an option to download the retrieved dataset, and may transmit the received dataset to the a researcher's local device when the researcher selects the option.</p><p id="p-0115" num="0114">Systems and methods disclosed herein involve unconventional improvements over conventional data processing approaches. Descriptions of the disclosed embodiments are not exhaustive and are not limited to the precise forms or embodiments disclosed. Modifications and adaptations of the embodiments will be apparent from consideration of the specification and practice of the disclosed embodiments. Additionally, the disclosed embodiments are not limited to the examples discussed herein.</p><p id="p-0116" num="0115">The foregoing description has been presented for purposes of illustration. It is not exhaustive and is not limited to the precise forms or embodiments disclosed. Modifications and adaptations of the embodiments will be apparent from consideration of the specification and practice of the disclosed embodiments. For example, the described implementations include hardware and software, but systems and methods consistent with the present disclosure can be implemented as hardware alone.</p><p id="p-0117" num="0116">Computer programs based on the written description and methods of this specification are within the skill of a software developer. The various functions, scripts, programs, or modules can be created using a variety of programming techniques. For example, programs, scripts, functions, program sections or program modules can be designed in or by means of languages, including JAVASCRIPT, C, C++, JAVA, PHP, PYTHON, RUBY, PERL, BASH, or other programming or scripting languages. One or more of such software sections or modules can be integrated into a computer system, non-transitory computer-readable media, or existing communications software. The programs, modules, or code can also be implemented or replicated as firmware or circuit logic.</p><p id="p-0118" num="0117">Moreover, while illustrative embodiments have been described herein, the scope includes any and all embodiments having equivalent elements, modifications, omissions, combinations (e.g., of aspects across various embodiments), adaptations or alterations based on the present disclosure. The elements in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application, which examples are to be construed as non-exclusive. Further, the steps of the disclosed methods can be modified in any manner, including by reordering steps or inserting or deleting steps. It is intended, therefore, that the specification and examples be considered as exemplary only, with a true scope and spirit being indicated by the following claims and their full scope of equivalents.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-20" num="01-20"><claim-text><b>1</b>-<b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A system for searching data, comprising:<claim-text>at least one processor; and</claim-text><claim-text>a memory comprising instructions that, when executed by the at least one processor, cause the at least one processor to perform operations comprising:<claim-text>receiving a search request comprising a sample dataset and a vector similarity threshold of similarity between vectors;</claim-text><claim-text>in response to the received search request, performing:</claim-text><claim-text>identifying, using a data profiling model comprising a machine learning model, a data schema of the sample dataset;</claim-text><claim-text>generating a sample data vector;</claim-text><claim-text>searching a data index comprising a plurality of stored data vectors corresponding to a plurality of reference datasets, the stored data vectors comprising information describing corresponding data schemas of the reference datasets, wherein searching the data index comprises performing data schema comparisons between the data schema associated with the sample data vector and the data schemas of the reference datasets;</claim-text><claim-text>generating one or more similarity metrics of the sample dataset to individual ones of the reference datasets;</claim-text><claim-text>determining, based on the one or more similarity metrics, at least a portion of the reference datasets having at least one data vector satisfying the vector similarity threshold; and</claim-text><claim-text>returning, as a result of the received search request, the at least a portion of the reference datasets.</claim-text></claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, the operations further comprising:<claim-text>receiving a request for at least one of a sample dataset, data vector, or data index;</claim-text><claim-text>retrieving the sample dataset, data vector or data index.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the data profiling model includes at least one of an RNN model, a CNN model, or other machine learning model.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the data profiling model is trained to identify complex data types.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the data profiling model is stored with a plurality of data profiling models in a model storage.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise performing calculations on the sample dataset.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise receiving, by an aggregator, search parameters;</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The system of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the search parameters may include instructions to search the data index based on a comparison of data vector components of statistical metrics of the dataset and statistical metrics of variables of the dataset.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise identifying the data index.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise returning the at least a portion of the reference datasets by performing at least one of: storing the reference datasets in a data storage, providing a link to the reference datasets, or providing a compressed file of the reference datasets.</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. A method for searching data, comprising:<claim-text>receiving a search request comprising a sample dataset and a vector similarity threshold of similarity between vectors;</claim-text><claim-text>in response to the received search request, performing:<claim-text>identifying, using a data profiling model comprising a machine learning model, a data schema of the sample dataset;</claim-text><claim-text>searching a data index comprising a plurality of stored data vectors corresponding to a plurality of reference datasets, the stored data vectors comprising information describing corresponding data schemas of the reference datasets, wherein searching the data index comprises performing data schema comparisons between the data schema associated with the sample data vector and data schemas of the reference datasets;</claim-text><claim-text>generating one or more similarity metrics of the sample dataset to individual ones of the reference datasets;</claim-text><claim-text>determining, based on the one or more similarity metrics, at least a portion of the reference datasets having at least one data vector satisfying the vector similarity threshold; and</claim-text><claim-text>returning, as a result of the received search request, the at least a portion of the reference datasets.</claim-text></claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, the operations further comprising:<claim-text>receiving a request for at least one of a sample dataset, data vector, or data index;</claim-text><claim-text>retrieving the sample dataset, data vector or data index.</claim-text></claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the data profiling model includes at least one of an RNN model, a CNN model, or other machine learning model.</claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the data profiling model is trained to identify complex data types.</claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the data profiling model is stored with a plurality of data profiling models in a model storage.</claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise performing calculations on the sample dataset.</claim-text></claim><claim id="CLM-00037" num="00037"><claim-text><b>37</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise receiving, by an aggregator, search parameters;</claim-text></claim><claim id="CLM-00038" num="00038"><claim-text><b>38</b>. The method of <claim-ref idref="CLM-00037">claim 37</claim-ref>, wherein the search parameters may include instructions to search the data index based on a comparison of data vector components of statistical metrics of the dataset and statistical metrics of variables of the dataset.</claim-text></claim><claim id="CLM-00039" num="00039"><claim-text><b>39</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise identifying the data index.</claim-text></claim><claim id="CLM-00040" num="00040"><claim-text><b>40</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the operations further comprise returning the at least a portion of the reference datasets by at least of: storing the reference datasets in a data storage, providing a link to the reference datasets, or providing a compressed file of the reference datasets.</claim-text></claim></claims></us-patent-application>