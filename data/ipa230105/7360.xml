<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007361A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007361</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17851838</doc-number><date>20220628</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>643</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>6377</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>81</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>858</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>6332</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>658</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>643</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>6377</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>816</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>8586</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>6332</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>6582</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">BIDIRECTIONAL PRESENTATION DATASTREAM USING CONTROL AND DATA PLANE CHANNELS</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217049</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Tencent America LLC</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>HINDS</last-name><first-name>Arianne</first-name><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>WENGER</last-name><first-name>Stephan</first-name><address><city>Hillsborough</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Tencent America LLC</orgname><role>02</role><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Aspects of the disclosure provide methods and apparatuses for media processing. In some examples, an apparatus includes processing circuitry. The processing circuitry can exchange, with a server device, a plurality of control messages over a control plane channel that uses a first transport protocol. The plurality of control messages belongs to a control plane of a bidirectional protocol for immersive media distribution. The processing circuitry receives, from the server device, a first plurality of data messages over a first data plane channel that uses a second transport protocol. The first plurality of data messages belongs to a data plane of the bidirectional protocol and carries immersive media content. The processing circuitry presents the immersive media content carried by the first plurality of data messages.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="121.67mm" wi="158.75mm" file="US20230007361A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="236.47mm" wi="178.31mm" orientation="landscape" file="US20230007361A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="236.73mm" wi="181.78mm" orientation="landscape" file="US20230007361A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="181.86mm" wi="157.90mm" orientation="landscape" file="US20230007361A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="217.59mm" wi="163.91mm" orientation="landscape" file="US20230007361A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="233.93mm" wi="173.82mm" orientation="landscape" file="US20230007361A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="238.93mm" wi="164.93mm" orientation="landscape" file="US20230007361A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="233.26mm" wi="182.80mm" orientation="landscape" file="US20230007361A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="247.73mm" wi="176.87mm" orientation="landscape" file="US20230007361A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="234.78mm" wi="167.89mm" orientation="landscape" file="US20230007361A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="190.75mm" wi="145.12mm" orientation="landscape" file="US20230007361A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="238.76mm" wi="162.81mm" orientation="landscape" file="US20230007361A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="243.33mm" wi="174.07mm" orientation="landscape" file="US20230007361A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="166.45mm" wi="54.61mm" file="US20230007361A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="181.61mm" wi="147.15mm" orientation="landscape" file="US20230007361A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="239.95mm" wi="178.82mm" orientation="landscape" file="US20230007361A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="226.57mm" wi="149.61mm" file="US20230007361A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="140.04mm" wi="148.42mm" file="US20230007361A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="112.01mm" wi="147.24mm" file="US20230007361A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="229.62mm" wi="168.99mm" file="US20230007361A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="213.87mm" wi="168.83mm" file="US20230007361A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="225.89mm" wi="168.91mm" file="US20230007361A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="205.40mm" wi="168.66mm" file="US20230007361A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="208.87mm" wi="168.99mm" file="US20230007361A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="211.24mm" wi="168.32mm" file="US20230007361A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="194.90mm" wi="168.74mm" file="US20230007361A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="198.71mm" wi="168.91mm" file="US20230007361A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="209.30mm" wi="141.73mm" file="US20230007361A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="239.27mm" wi="166.62mm" file="US20230007361A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="235.37mm" wi="151.55mm" file="US20230007361A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="235.29mm" wi="180.42mm" orientation="landscape" file="US20230007361A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="187.96mm" wi="131.66mm" file="US20230007361A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="188.04mm" wi="132.33mm" file="US20230007361A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="231.56mm" wi="179.24mm" orientation="landscape" file="US20230007361A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This present disclosure claims the benefit of priority to U.S. Provisional Application No. 63/217,049, &#x201c;INTELLIGENT BIDIRECTIONAL PRESENTATION DATASTREAM USING CONTROL AND DATA PLANE CHANNELS&#x201d; filed on Jun. 30, 2021, which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure describes embodiments generally related to media processing and distribution.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent the work is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.</p><p id="p-0005" num="0004">Immersive media generally refers to media that stimulates any or all human sensory systems (visual, auditory, somatosensory, olfactory, and possibly gustatory) to create or enhance the perception of the user being physically present in the experience of the media, such as beyond what is distributed over existing commercial networks for timed two-dimensional (2D) video and corresponding audio which is known as &#x201c;legacy media&#x201d;. Both immersive media and legacy media can be characterized as either timed or untimed.</p><p id="p-0006" num="0005">Timed media refers to media that is structured and presented according to time. Examples include movie features, news reports, episodic content, all of which are organized according to periods of time. Legacy video and audio are generally considered to be timed media.</p><p id="p-0007" num="0006">Untimed media is media that is not structured by time; but rather structured by logical, spatial, and/or temporal relationships. An example includes a video game where the user has control over the experience created by the gaming device. Another example of untimed media is a still image photograph taken by a camera. Untimed media may incorporate timed media, for example, in a continuously looped audio or video segment of a scene for a video game. Conversely, timed media may incorporate untimed media, for example a video with a fixed still image as background.</p><p id="p-0008" num="0007">Immersive media-capable devices may refer to devices equipped with abilities to access, interpret, and present immersive media. Such media and devices are heterogeneous in terms of the quantity and formats of the media, and numbers and types of network resources required to distribute such media at scale, i.e., to achieve distribution equivalent to that of legacy video and audio media over networks. In contrast, legacy devices such as laptop displays, televisions, and mobile handset displays are homogenous in their capabilities since all of these devices are comprised of rectangular display screens, and consume 2D rectangular video or still images as their primary media formats.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0009" num="0008">Aspects of the disclosure provide methods and apparatuses for media processing. In some examples, an apparatus includes processing circuitry. The processing circuitry can exchange, with a server device, a plurality of control messages over a control plane channel that uses a first transport protocol. The plurality of control messages belongs to a control plane of a bidirectional protocol for immersive media distribution. The processing circuitry receives, from the server device, a first plurality of data messages over a first data plane channel that uses a second transport protocol. The first plurality of data messages belongs to a data plane of the bidirectional protocol and carries immersive media content. The processing circuitry presents the immersive media content carried by the first plurality of data messages.</p><p id="p-0010" num="0009">In some examples, the first transport protocol is transmission control protocol (TCP) and the second transport protocol is user datagram protocol (UDP).</p><p id="p-0011" num="0010">In some examples, the first transport protocol is a connection-based transport protocol, and the second transport protocol is a connectionless transport protocol.</p><p id="p-0012" num="0011">In some embodiments, the processing circuitry sets up the first data plane channel with the server device according to the plurality of control messages exchanged over the control plane channel.</p><p id="p-0013" num="0012">In some examples, the processing circuitry provides one or more specific characteristics of the apparatus to the server device over the control plane channel. The one or more specific characteristics includes at least one of a computing resource of the apparatus, a storage resource of the apparatus, a service level agreement of a network service provider at the apparatus, an immersive application requirement, a type of the apparatus, a model of the apparatus, and a neural network model at the apparatus.</p><p id="p-0014" num="0013">In some examples, the processing circuitry transmits, to the server device, a second plurality of data messages over a second data plane channel that uses the second transport protocol. The second plurality of data messages carries at least one of layer information of a neural network model at the apparatus, and rendered media content by the apparatus.</p><p id="p-0015" num="0014">In some embodiments, the apparatus is a first client device, and the plurality of control messages enables the server device to share the immersive media content with a second client device. In an example, the processing circuitry provides, in response to a request from the server device, a list of types of assets that are sharable and uniform resource identifiers (URIs) for the assets that are cached in an immutable storage via the control plane channel. In another example, the processing circuitry provides in response to a request from the server device, a status update of each asset that is accessible by the first client device via the control plane channel. In another example, the processing circuitry provides, in response to a request from the server device, a current state of a particular asset type and one of a particular server assigned identifier and a particular asset uniform resource identifier (URI) via the control plane channel.</p><p id="p-0016" num="0015">Aspects of the disclosure also provide a non-transitory computer-readable medium storing instructions which when executed by a computer cause the computer to perform the method for media processing.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0017" num="0016">Further features, the nature, and various advantages of the disclosed subject matter will be more apparent from the following detailed description and the accompanying drawings in which:</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram of an end-to-end process of timed media distribution in an example.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram of a standard media format used for streaming of timed media in an example.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram of a data-model for the representation and streaming of timed immersive media in some examples.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram of a data-model for the representation and streaming of untimed immersive media in some examples.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram of a process of capturing a natural scene and converting to a representation that can be used as an ingest format for a network that serves heterogenous client end-points in some examples.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram of a process of using three dimensional (3D) modeling tools and formats to create a representation of a synthetic scene that can be used as an ingest format for a network that serves heterogenous client end-points in some examples.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram of a network that serves a plurality of heterogenous client end-points in some examples.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram of a network providing adaptation information about the specific media represented in the media ingest format prior to the network's process of adapting the media for consumption by a specific immersive media client end-point in some examples.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a system diagram of a media adaptation process including a media render-converter that converts a source media from an ingest format to a specific format suitable for a specific client end-point in some examples.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram of a network formatting the adapted source media into a data model suitable for representation and streaming in some examples.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a system diagram of a media streaming process that fragments the data model of <figref idref="DRAWINGS">FIG. <b>11</b></figref> into the payloads of network protocol packets in some examples.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a sequence diagram of a network adapting a specific immersive media in an ingest format to a streamable and suitable distribution format for a specific immersive media client end-point in some examples.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a diagram of the ingest media formats in some examples.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows the carriage of neural network model information along with a coded video stream in some examples.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows the carriage of neural network model information along with input immersive media and assets in some examples.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>B</figref> show messages that are sent from a server side to a client side using a bidirectional protocol for immersive media distribution in some examples.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>16</b>C</figref> shows messages that are sent from a client side to a server side using a bidirectional protocol for immersive media distribution in some examples.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIGS. <b>17</b>A-<b>17</b>G</figref> show definitions of messages sent from the server side to the client side in some examples.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>18</b></figref> shows definitions of messages sent from the client side to the server side in some examples.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIGS. <b>19</b>A-<b>19</b>E</figref> show diagrams of bidirectional presentation datastream over separate control plane channels and data plane channels.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>20</b></figref> shows a diagram of a media system using a bidirectional protocol over separate control plane channels and data plane channels for distribution of immersive media in some examples.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows a flow chart outlining a process according to some embodiment of the disclosure.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>22</b></figref> shows a flow chart outlining another process according to some embodiment of the disclosure.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a schematic illustration of a computer system in accordance with an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0042" num="0041">Aspects of the disclosure provide techniques for bidirectional presentation datastream over separate data plane channels and control plane channels. The present disclosure describes embodiments generally related to architectures, structures and components for systems and networks that distribute media, including video, audio, geometric (3D) objects, haptics, associated metadata, or other content for a client presentation device. Some embodiments are directed to systems, structures, and architectures for distribution of media content to heterogenous immersive and interactive client presentation devices.</p><p id="p-0043" num="0042">Immersive media generally refers to media that stimulates any or all human sensory systems (visual, auditory, somatosensory, olfactory, and possibly gustatory) to create or enhance the perception of the user being physically present in the experience of the media, i.e., beyond what is distributed over existing commercial networks for timed two-dimensional (2D) video and corresponding audio which is known as &#x201c;legacy media&#x201d;. Both immersive media and legacy media can be characterized as either timed or untimed.</p><p id="p-0044" num="0043">Timed media refers to media that is structured and presented according to time. Examples include movie features, news reports, episodic content, all of which are organized according to periods of time. Legacy video and audio are generally considered to be timed media.</p><p id="p-0045" num="0044">Untimed media is media that is not structured by time; but rather structured by logical, spatial, and/or temporal relationships. An example includes a video game where the user has control over the experience created by the gaming device. Another example of untimed media is a still image photograph taken by a camera. Untimed media may incorporate timed media, for example, in a continuously looped audio or video segment of a scene for a video game. Conversely, timed media may incorporate untimed media, for example a video with a fixed still image as background.</p><p id="p-0046" num="0045">Immersive media-capable devices may refer to devices equipped with abilities to access, interpret, and present immersive media. Such media and devices are heterogeneous in terms of the quantity and formats of the media, and numbers and types of network resources required to distribute such media at scale, i.e., to achieve distribution equivalent to that of legacy video and audio media over networks. In contrast, legacy devices such as laptop displays, televisions, and mobile handset displays are homogenous in their capabilities since all of these devices are comprised of rectangular display screens, and consume 2D rectangular video or still images as their primary media formats. Likewise, the number of audio formats supported in legacy devices is limited to a relatively small set.</p><p id="p-0047" num="0046">The distribution of any media over networks may employ media delivery systems and architectures that reformat the media from an input or network ingest format to a final distribution format where that distribution format is not only suitable for the targeted client device and its applications, but is also conducive to being streamed over the network. Streaming of media broadly refers to the fragmenting and packetizing of the source media so that the media can be delivered over the network in consecutive smaller-sized &#x201c;chunks&#x201d; logical organized and sequenced according to either or both the media's temporal or spatial structure. In such distribution architectures and systems, the media may undergo compression or layering processes so that only the most salient media information is delivered first to the client. In some cases, the client receives all of the salient media information for some portion of the media before the client is able to present any of the same media portion to the end user.</p><p id="p-0048" num="0047">The process of reformatting an input media to match the capabilities of a target client end-point may employ a neural network process that takes a network model that may encapsulate some prior knowledge of the specific media being reformatted. For example, a specific model may be tuned to recognize outdoor park scenes (with trees, plants, grass, and other objects common to a park scene), whereas yet a different specific model may be tuned to recognize an indoor dinner scene (with a dinner table, serving utensils, persons seated at the table, and so on). In some examples, a network model can be tuned to recognize objects from a particular context, e.g., park scene objects, and a neural network process equipped with a network model that is tuned to match the contents of a specific scene can produce better visual results than a network model that is not so tuned. Hence, there is a benefit of providing scene-specific network models to a neural network process that is tasked with reformatting the input media to match the capabilities of a target client end-point.</p><p id="p-0049" num="0048">The mechanism to associate a neural network model to a specific scene for two dimensional (2D) media may be accomplished by, for example, compressing the network model and inserting the compressed network model directly into the 2D coded bitstream for a visual scene by means of a supplemental enhancement information (SEI) structured field commonly used to attach metadata to coded video streams, for example, in H.264, H.265, and H.266 video compression formats. The presence of an SEI message containing a specific neural network model within the context of a portion of a coded video bitstream may be used to indicate that the network model is to be used to interpret and adapt the video contents within the portion of the bitstream in which the model is embedded. In some examples, the SEI message may be used to signal, by means of an identifier for a network model, which neural network model(s) may be used in the absence of the actual model itself.</p><p id="p-0050" num="0049">The mechanism to associate an appropriate neural network for immersive media may be accomplished by the immersive media itself referencing the appropriate neural network model to use. This reference may be accomplished by directly embedding the network model and its parameters on an object by object basis, or scene by scene basis, or by some combination thereof. In some examples, rather than embedding the one or more neural network models within the media, the media objects or scenes may reference the particular neural network models by identifiers.</p><p id="p-0051" num="0050">In some other examples, a mechanism to reference an appropriate neural network for adaptation of media for streaming to a client end-point is for the specific client end-point itself to provide at least one neural network model, and corresponding parameters, to the adaptation process to use. Such a mechanism may be implemented by way of the client providing the neural network model(s) in a communication with the adaptation process, for example, when the client attaches itself to the network.</p><p id="p-0052" num="0051">Following the adaptation of the video to the target client end-point, an adaptation process within the network may then choose to apply a compression algorithm to the result. In addition, the compression algorithm may, in some examples, separate the adapted video signal into layers that correspond to the most salient to the least salient portions of the visual signal.</p><p id="p-0053" num="0052">In some examples, a compression and layering process, such as the progressive format of the JPEG standard (ISO/IEC 10918 Part 1), can separate the image into layers that cause the entire image to be presented first with only basic shapes and colors that are initially out of focus, i.e. from the lower-order DCT coefficients for the entire image scan, followed by additional layers of detail that cause the image to come into focus, i.e. from the higher-order DCT coefficients of the image scan.</p><p id="p-0054" num="0053">The process of breaking media into smaller portions, organizing them into the payload portions of consecutive network protocol packets, and distributing these protocol packets is referred to as streaming of the media whereas the process of converting the media into a format that is suitable for presentation on one of a variety of heterogenous client end-points that is operating one of a variety of heterogenous applications is referred to as adapting the media.</p><p id="p-0055" num="0054">The definitions of the some terms used in the present disclosure are provided in the following paragraphs.</p><p id="p-0056" num="0055">Scene graph: general data structure commonly used by vector-based graphics editing applications and modern computer games, which arranges the logical and often (but not necessarily) spatial representation of a graphical scene; a collection of nodes and vertices in a graph structure.</p><p id="p-0057" num="0056">Node: fundamental element of the scene graph comprised of information related to the logical or spatial or temporal representation of visual, audio, haptic, olfactory, gustatory, or related processing information; each node shall have at most one output edge, zero or more input edges, and at least one edge (either input or output) connected to it.</p><p id="p-0058" num="0057">Base Layer: a nominal representation of an asset, usually formulated to minimize the compute resources or time needed to render the asset, or the time to transmit the asset over a network.</p><p id="p-0059" num="0058">Enhancement Layer: a set of information that when applied to the base layer representation of an asset, augments the base layer to include features or capabilities that are not supported in the base layer.</p><p id="p-0060" num="0059">Attribute: metadata associated with a node used to describe a particular characteristic or feature of that node either in a canonical or more complex form (e.g. in terms of another node).</p><p id="p-0061" num="0060">Container: a serialized format to store and exchange information to represent all natural, all synthetic, or a mixture of synthetic and natural scenes including a scene graph and all of the media resources that are required for rendering of the scene.</p><p id="p-0062" num="0061">Serialization: the process of translating data structures or object state into a format that can be stored (for example, in a file or memory buffer) or transmitted (for example, across a network connection link) and reconstructed later (possibly in a different computer environment). When the resulting series of bits is reread according to the serialization format, it can be used to create a semantically identical clone of the original object.</p><p id="p-0063" num="0062">Renderer: a (typically software-based) application or process, based on a selective mixture of disciplines related to: acoustic physics, light physics, visual perception, audio perception, mathematics, and software development, that, given an input scene graph and asset container, emits a typically visual and/or audio signal suitable for presentation on a targeted device or conforming to the desired properties as specified by attributes of a render target node in the scene graph. For visual-based media assets, a renderer may emit a visual signal suitable for a targeted display, or for storage as an intermediate asset (e.g., repackaged into another container i.e. used in a series of rendering processes in a graphics pipeline); for audio-based media assets, a renderer may emit an audio signal for presentation in a multi-channel loudspeaker and/or binauralized headphones, or for repackaging into another (output) container. Popular examples of renderers include: Unity, Unreal.</p><p id="p-0064" num="0063">Evaluate: produces a result (e.g., similar to evaluation of a document object model for a webpage) that causes the output to move from an abstract to a concrete result.</p><p id="p-0065" num="0064">Scripting language: An interpreted programming language that can be executed by a renderer at runtime to process dynamic input and variable state changes made to the scene graph nodes, which affect rendering and evaluation of spatial and temporal object topology (including physical forces, constraints, IK, deformation, collisions), and energy propagation and transport (light, sound).</p><p id="p-0066" num="0065">Shader: a type of computer program that was originally used for shading (the production of appropriate levels of light, darkness, and color within an image) but which now performs a variety of specialized functions in various fields of computer graphics special effects or does video post-processing unrelated to shading, or even functions unrelated to graphics at all.</p><p id="p-0067" num="0066">Path tracing: a computer graphics method of rendering three-dimensional scenes such that the illumination of the scene is faithful to reality.</p><p id="p-0068" num="0067">Timed media: media that is ordered by time; e.g., with a start and end time according to a particular clock.</p><p id="p-0069" num="0068">Untimed media: media that is organized by spatial, logical, or temporal relationships; e.g., as in an interactive experience that is realized according to the actions taken by the user(s).</p><p id="p-0070" num="0069">Neural network model: a collection of parameters and tensors (e.g., matrices) that define weights (i.e., numerical values) used in well defined mathematical operations applied to the visual signal to arrive at an improved visual output which may include the interpolation of new views for the visual signal that were not explicitly provided by the original signal.</p><p id="p-0071" num="0070">According to some aspects of the disclosure, immersive media can be regarded as one or more types of media that, when presented to a human by an immersive media-capable device, stimulates any of the five senses of sight, sound, taste, touch, and hearing, in a way that is more realistic and consistent with a human's understanding of experiences within the natural world, i.e.; stimulation beyond that which would have otherwise been achieved with legacy media presented by legacy devices. In this context, the term legacy media refers to two-dimensional (2D) visual media, either still or moving picture frames, and/or corresponding audio for which the user's ability to interact is limited to pause, play, fast-forward, or rewind; legacy devices may refer to televisions, laptops, displays, and mobile devices that are constrained in their capabilities to the presentation of only legacy media.</p><p id="p-0072" num="0071">In some consumer-facing application scenarios, the presentation device for the immersive media (i.e., an immersive media-capable device) is a consumer-facing hardware device that is especially equipped with the capabilities to leverage specific information that is embodied by the immersive media such that the device can create a presentation that more closely approximates the human's understanding of, and interaction with, the physical world, i.e., beyond the capabilities of a legacy device to do so. Legacy devices are constrained in their abilities to present only legacy media, whereas immersive media devices are not likewise constrained.</p><p id="p-0073" num="0072">In the last decade, a number of immersive media-capable devices have been introduced into the consumer market, including head-mounted displays, augmented-reality glasses, hand-held controllers, haptic gloves, and game consoles. Likewise, holographic displays and other forms of volumetric displays are poised to emerge within the next decade. Despite the immediate or imminent availability of these devices, a coherent end-to-end ecosystem for the distribution of immersive media over commercial networks has failed to materialize for several reasons.</p><p id="p-0074" num="0073">One of those reasons is the lack of a single standard representation for immersive media that can address the two major use cases relative to the current distribution of media at scale, over commercial networks: 1) real-time distribution for live action events, i.e., where the content is created and distributed to the client end-point in or near real-time, and 2) non-real-time distribution, where there is no requirement to distribute the content in real-time, i.e., as the content is being physically captured or created. Respectively, these two use cases may be comparably compared to broadcast and on-demand formats of distribution as they exist today.</p><p id="p-0075" num="0074">For real-time distribution, the content can be captured by one or more camera(s), or created using computer generation techniques. In some examples, content that is captured by camera(s) is herein referred to as natural content, whereas content that is created using computer generation techniques is herein referred to as synthetic content. The media formats to represent synthetic content can be formats used by the 3D modelling, visual effects, and CAD/CAM industries and can include object formats and tools such as meshes, textures, point clouds, structured volumes, amorphous volumes (e.g., for fire, smoke, and fog), shaders, procedurally generated geometry, materials, lighting, virtual camera definitions, and animations. While synthetic content is computer generated, synthetic media formats can be used for both natural and synthetic content, however, the process to convert natural content into synthetic media formats (e.g., into synthetic representations) can be a time and compute intensive process, and therefore may be impractical for real-time applications and use cases.</p><p id="p-0076" num="0075">For real-time distribution of natural content, camera-captured content can be distributed in a raster format, which is suitable for legacy display devices because many of such devices are likewise designed to display raster formats. That is, given that legacy displays are designed homogenously to display raster formats, the distribution of raster formats is therefore optimally suitable for displays that are capable of displaying only raster formats.</p><p id="p-0077" num="0076">Immersive media-capable displays, however, are not necessarily constrained to the display of raster-based formats. Moreover, some immersive-media capable displays are unable to present media that is available only in raster-based formats. The availability of displays that are optimized to create immersive experiences based on formats other than raster-based formats is another significant reason why there is not yet a coherent end-to-end ecosystem for the distribution of immersive media.</p><p id="p-0078" num="0077">Yet another problem with creating a coherent distribution system for multiple different immersive media devices is that the current and emerging immersive media-capable devices themselves can vary significantly. For example, some immersive media devices are explicitly designed to be used by only one user at a time, e.g., head-mounted displays. Some other immersive media devices are designed so that they can be used by more than one user simultaneously, e.g., the &#x201c;looking glass factory <b>8</b>K display&#x201d; (henceforth called &#x201c;lenticular light field display&#x201d;) can display content that can be viewed by up to 12 users simultaneously, where each user is experiencing his or her own unique perspective (i.e., view) of the content that is being displayed.</p><p id="p-0079" num="0078">Further complicating the development of a coherent distribution system is that the number of unique views that each display is capable of producing can vary greatly. In most cases, legacy displays can create only a single view of the content. Whereas, the lenticular light field display can support multiple users with each user experiencing unique views of the same visual scene. To accomplish this creation of multiple views of the same scene, the lenticular light field display creates a specific volumetric viewing frustum in which 45 unique views of the same scene are required as input to the display. This means that 45 slightly different unique raster representations of the same scene need to be captured and distributed to the display in a format that is specific to this one particular display, i.e., its viewing frustum. In contrast, the viewing frustum of legacy displays is limited to a single two-dimensional plane, and hence there is no way to present more than one viewing perspective of the content via the display's viewing frustum regardless of the number of simultaneous viewers that are experiencing the display.</p><p id="p-0080" num="0079">In general, immersive media displays can vary significantly according to these following characteristics of all displays: the dimensions and volume of the viewing frustum, the number of viewers supported simultaneously, the optical technology used to fill the viewing frustum which can be point-based, ray-based, or wave-based technologies, the density of the units-of-light (either points, rays, or waves) that occupy the viewing frustum, the availability of compute power and type of compute (CPU or GPU), the source and availability of power (battery or wire), the amount of local storage or cache, and access to auxiliary resources such as cloud based compute and storage. These characteristics contribute to the heterogeneity of immersive media displays, which in contrast to the homogeneity of legacy displays, complicates the development of a single distribution system that can support all of them, including both legacy and immersive types of displays.</p><p id="p-0081" num="0080">The disclosed subject matter addresses the development of a network-based media distribution system that can support both legacy and immersive media displays as client-end points within the context of a single network. Specifically, a mechanism to adapt an input immersive media source into a format that is suitable to the specific characteristics of a client end-point device, including the application that is currently executing on that client end-point device, is presented herein. Such a mechanism of adapting an input immersive media source includes reconciling the characteristics of the input immersive media with the characteristics of the target end-point client device, including the application that is executing on the client device, and then adapting the input immersive media into a format suitable for the target end point and its application. Moreover, the adaptation process may include interpolating additional views, e.g., novel views, from the input media to create additional views that are required by the client end-point. Such interpolation may be performed with the aid of a neural network process.</p><p id="p-0082" num="0081">Note that the remainder of the disclosed subject matter assumes, without loss of generality, that the process of adapting an input immersive media source to a specific end-point client device is the same as, or similar to, the process of adapting the same input immersive media source to the specific application that is being executed on the specific client end-point device. That is, the problem of adapting an input media source to the characteristics of an end-point device are of the same complexity as the problem to adapt a specific input media source to the characteristics of a specific application.</p><p id="p-0083" num="0082">Legacy devices, supported by legacy media, have achieved wide-scale consumer adoption because they are likewise supported by an ecosystem of legacy media content providers that produce standards-based representations of legacy media, and commercial network service providers that provide network infrastructure to connect legacy devices to sources of standard legacy content. Beyond the role of distributing legacy media over networks, commercial network service providers may also facilitate the pairing of legacy client devices with access to legacy content on content distribution networks (CDNs). Once paired with access to suitable forms of content, the legacy client device can then request, or pull, the legacy content from the content server to the device for presentation to the end user. Nevertheless, an architecture where the network server pushes the appropriate media to the appropriate client is equally relevant without incurring additional complexity to the overall architecture and solution design.</p><p id="p-0084" num="0083">According to some aspects of the disclosure, a media distribution network supporting heterogeneous clients can leverage the fact that some of the assets that are adapted from an input media format to a specific target format may be reused across a set of similar display targets (client devices). For example, some assets, once converted to a format suitable for a target display may be reused across a number of such displays that have similar adaptation requirements. In some examples, the media distribution network can employ a caching mechanism to store adapted assets into a storage that is relatively immutable.</p><p id="p-0085" num="0084">According to an aspect of the disclosure, immersive media may be organized into &#x201c;scenes&#x201d; that are described by scene graphs, which are also known as scene descriptions. The scope of a scene graph is to describe visual, audio, and other forms of immersive assets that comprise a particular setting that is part of a presentation, for example, the actors and events taking place in a particular location in a building that is part of a presentation, e.g., movie. A list of all scenes that comprise a single presentation may be formulated into a manifest of scenes.</p><p id="p-0086" num="0085">In some examples, for content that is prepared in advance of having to distribute such content, a &#x201c;bill of materials&#x201d; can be created that identifies all of the assets that will be used for the entire presentation, and how often each asset is used across the various scenes within the presentation. A media distribution network can be implemented to have knowledge of the existence of cached resources that can be used to satisfy the asset requirements for a particular presentation.</p><p id="p-0087" num="0086">Some aspects of the disclosure can provide a bidirectional protocol that can be used between a media distribution network (e.g., a server device in the media distribution network that interfaces the media distribution network with client devices) and client devices. In some examples, the bidirectional protocol can be used in a media distribution network that distributes immersive media. The bidirectional protocol can support a variety of diverse client devices that require asset types in various formats. In some examples, the bidirectional protocol can enable reuse of assets that have previously been adapted for use by a particular client device.</p><p id="p-0088" num="0087">It is noted that in the present disclosure, without loss of generality, the process of adapting an input immersive media source to a specific end-point client device is the same as, or similar to, the process of adapting the same input immersive media source to the specific application that is being executed on the specific end-point client device. The techniques of adapting an input media source to the characteristics of an end-point device can be about the same as the techniques to adapt the input media source to the characteristics of a specific application.</p><p id="p-0089" num="0088">According to an aspect of the disclosure, legacy devices, supported by legacy media, have achieved wide-scale consumer adoption because they are likewise supported by an ecosystem of legacy media content providers that produce standards-based representations of legacy media, and commercial network service providers that provide network infrastructure to connect legacy devices to sources of standard legacy content. Beyond the role of distributing legacy media over networks, commercial network service providers may also facilitate the pairing of legacy client devices with access to legacy content on content distribution networks (CDNs). Once paired with access to suitable forms of content, the legacy client device can then request, or &#x201c;pull,&#x201d; the legacy content from the content server to the device for presentation to the end user. Nevertheless, a media distribution network may utilize an architecture where the network server &#x201c;pushes&#x201d; the appropriate media to the appropriate client.</p><p id="p-0090" num="0089">Some aspects of the disclosure provide a media distribution network that includes interfacing devices (also referred to as server devices) for interfacing the media distribution network with client devices. The server devices can employ a bidirectional communication protocol (also referred to as bidirectional protocol) for the communication with the client devices, and can facilitate the adaptation of media to match requirements originating from the uniqueness of the client devices, or from the application running on the client devices. The server devices can also use the bidirectional protocol to stream assets that are either newly adapted or previously adapted and cached, to a particular client device. In some examples, the server devices can use the bidirectional protocol to support the ability for the client devices to request specific assistance from the server devices, for example, to assist with rendering of an asset in preparation for the client device to present the asset.</p><p id="p-0091" num="0090">Aspects are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems), and computer readable media according to the various embodiments. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer readable program instructions.</p><p id="p-0092" num="0091">The following described exemplary embodiments relate to architectures, structures and components for systems and networks that distribute media, including video, audio, geometric (3D) objects, haptics, associated metadata, or other content for a client device. Particular embodiments are directed systems, structures, and architectures for distribution of media content to heterogenous immersive and interactive client device.</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a diagram of the end-to-end process (<b>100</b>) of timed legacy media distribution. In <figref idref="DRAWINGS">FIG. <b>1</b></figref>, timed audio-visual content is either captured by a camera or microphone (<b>101</b>A) or generated by a computer (<b>101</b>B), creating a sequence (<b>102</b>) of 2D images and associated audio that are input to a preparation module (<b>103</b>). The output of the preparation module (<b>103</b>) is edited content (e.g., for post-production including language translations, subtitles, other editing functions), referred to as a master format that is ready to be converted to a standard Mezzanine format, e.g., for on-demand media, or as a standard contribution format, e.g., for live events, by a converter module (<b>104</b>). In an example, the media is ingested by the commercial network service provider and an adaptation module (<b>105</b>) packages the media into various bitrates, temporal resolution (frame rates) or spatial resolutions (frame sizes) that are packaged into a standard distribution format. The resulting adaptations are stored onto a content distribution network (CDN) (<b>106</b>) from which various clients (<b>108</b>A)-(<b>108</b>C) make pull-requests (<b>107</b>A)-(<b>107</b>C) to fetch and present the media to the end user. It is important to note that the master format may consist of a hybrid of media from both (<b>101</b>A) or (<b>101</b>B), and that the format of (<b>101</b>A) may be obtained in real-time, e.g., such as media that is obtained from a live sporting event. Furthermore, clients (<b>108</b>A)-(<b>108</b>C) are responsible for choosing the specific adaptations that are best suited for the client's configuration and/or for the current network conditions, but it is equally possible that the network server (not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) could determine and subsequently push the appropriate content to the clients (<b>108</b>A)-(<b>108</b>C).</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a diagram of a standard media format (<b>200</b>) used for distribution of legacy timed media, e.g., video, audio, and supporting metadata (including timed text such as used for subtitles) in some examples. As noted by CDN (<b>106</b>) in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the media is stored in a standards-based distribution format onto CDNs, such as CDNs (<b>201</b>A)-(<b>201</b>C) in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The standards-based format is shown as MPD (<b>202</b>), which consists of multiple sections encompassing timed periods, such as time period (<b>203</b>A) and time period (<b>203</b>B) and the like, with a start and end time corresponding to a clock. In an example, each time period (e.g., (<b>203</b>A) (<b>203</b>B)) refers to one or more adaptation sets (<b>204</b>A)-(<b>204</b>F). Each adaptation set of (<b>204</b>A)-(<b>204</b>F) is generally used for a single type of media, e.g. video, audio, or timed text. In some examples, for any given time period (e.g., (<b>203</b>A)), multiple adaptation sets (e.g., (<b>204</b>A)-(<b>204</b>C)) may be provided, e.g., one for video, and multiple for audio such as used for translations into various languages. Each adaptation set of (<b>204</b>A)-(<b>204</b>F) refers to one or more representations (<b>205</b>) that provide information about the frame resolution (for video), frame rate, and bitrate of the media. Multiple representations (<b>205</b>) may be used to provide access to, for example, a representation (<b>205</b>) each for ultra-high-definition, high definition, or standard definition video. Each representation (<b>205</b>) refers to one or more segment files (<b>206</b>) where the media is actually stored for fetching by the client (as shown as (<b>108</b>A)-(<b>108</b>C) in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) or for distribution (in a push-based architecture) by the network media server (not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a representation of a streamable format (<b>300</b>) for heterogenous immersive media that is timed in an example; and <figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a representation of a streamable format (<b>400</b>) for heterogeneous immersive media that is untimed in an example. In the case of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, <figref idref="DRAWINGS">FIG. <b>3</b></figref> refers to a scene (<b>301</b>) for timed media. In the case of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, <figref idref="DRAWINGS">FIG. <b>4</b></figref> refers to a scene (<b>401</b>) for untimed media. For both cases, a scene may be embodied by various scene representations, or scene descriptions.</p><p id="p-0096" num="0095">For example, in some immersive media designs, a scene may be embodied by a scene graph, or as a multi-plane image (MPI), or as a multi-spherical image (MSI). Both the MPI and MSI techniques are examples of technologies that aid in the creation of display-agnostic scene representations for natural content, i.e., images of the real world captured simultaneously from one or more cameras. Scene graph technologies, on the other hand, may be employed to represent both natural and computer-generated imagery in the form of synthetic representations, however, such representations are especially compute-intensive to create for the case when the content is captured as natural scenes by one or more cameras. That is, scene graph representations of naturally-captured content are both time and compute-intensive to create, requiring complex analysis of natural images with techniques of photogrammetry or deep learning or both, in order to create synthetic representations that can subsequently be used to interpolate sufficient and adequate numbers of views to fill a target immersive client display's viewing frustum. As a result, such synthetic representations are presently impractical to consider as candidates for representing natural content, because they cannot practically be created in real-time for consideration of use cases that require real-time distribution. In some examples, the best candidate representations for computer generated imagery is to employ the use of a scene graph with synthetic models, as computer generated imagery is created using 3D modeling processes and tools.</p><p id="p-0097" num="0096">Such a dichotomy in optimal representations of both natural and computer generated content suggests that the optimal ingest format for naturally-captured content is different from the optimal ingest format for computer generated content or for natural content that is not essential for real-time distribution applications. Therefore, the disclosed subject matter targets to be robust enough to support multiple ingest formats for visually immersive media, whether they are created naturally or by computer.</p><p id="p-0098" num="0097">The following are example technologies that embody scene graphs as a format suitable for representing visual immersive media that is created using computer generated techniques, or naturally captured content for which deep learning or photogrammetry techniques are employed to create the corresponding synthetic representations of a natural scene, i.e., not essential for real-time distribution applications.</p><p id="p-0099" num="0098">1. ORBX&#xae; by OTOY</p><p id="p-0100" num="0099">ORBX by OTOY is one of several scene graph technologies that is able to support any type of visual media, timed or untimed, including ray-traceable, legacy (frame-based), volumetric, and other types of synthetic or vector-based visual formats. According to an aspect, ORBX is unique from other scene graphs because ORBX provides native support for freely available and/or open source formats for meshes, point clouds, and textures. ORBX is a scene graph that has been intentionally designed with the goal of facilitating interchange across multiple vendor technologies that operate on scene graphs. Moreover, ORBX provides a rich materials system, support for open shader language, a robust camera system, and support for Lua scripts. ORBX is also the basis of the immersive technologies media format published for license under royalty-free terms by the immersive digital experiences alliance (IDEA). In the context of real time distribution of media, the ability to create and distribute an ORBX representation of a natural scene is a function of the availability of compute resources to perform a complex analysis of the camera-captured data and synthesis of the same data into synthetic representations. To date, the availability of sufficient compute for real-time distribution is not practical, but nevertheless, not impossible.</p><p id="p-0101" num="0100">2. Universal Scene Description by Pixar</p><p id="p-0102" num="0101">Universal scene description (USD) by Pixar is another scene graph that can be used in the visual effects (VFX) and professional content production communities. USD is integrated into Nvidia's Omniverse platform which is a set of tools for developers for 3D model creation and rendering with Nvidia's GPUs. A subset of USD was published by Apple and Pixar as USDZ. USDZ is supported by Apple's ARKit.</p><p id="p-0103" num="0102">3. glTF2.0 by Khronos</p><p id="p-0104" num="0103">glTF2.0 is the most recent version of the graphics language transmission format specification written by the Khronos 3D Group. This format supports a simple scene graph format that is generally capable of supporting static (untimed) objects in scenes, including &#x201c;png&#x201d; and &#x201c;jpeg&#x201d; image formats. glTF2.0 supports simple animations, including support for translate, rotate, and scale, of basic shapes described using the glTF primitives, i.e. for geometric objects. glTF2.0 does not support timed media, and hence does not support video nor audio.</p><p id="p-0105" num="0104">It is noted that the above scene representations of immersive visual media are provided for example only, and do not limit the disclosed subject matter in its ability to specify a process to adapt an input immersive media source into a format that is suitable to the specific characteristics of a client end-point device.</p><p id="p-0106" num="0105">Moreover, any or all of the above example media representations either currently employ or may employ deep learning techniques to train and create a neural network model that enables or facilitates the selection of specific views to fill a particular display's viewing frustum based on the specific dimensions of the frustum. The views that are chosen for the particular display's viewing frustum may be interpolated from existing views that are explicitly provided in the scene representation, e.g., from the MSI or MPI techniques, or they may be directly rendered from render engines based on specific virtual camera locations, filters, or descriptions of virtual cameras for these render engines.</p><p id="p-0107" num="0106">The disclosed subject matter is therefore robust enough to consider that there is a relatively small but well known set of immersive media ingest formats that is sufficiently capable to satisfy requirements both for real-time or &#x201c;on-demand&#x201d; (e.g., non-real-time) distribution of media that is either captured naturally (e.g., with one or more cameras) or created using computer generated techniques.</p><p id="p-0108" num="0107">Interpolation of views from an immersive media ingest format by use of either neural network models or network-based render engines is further facilitated as advanced network technologies such as 5G for mobile networks, and fiber optical cable for fixed networks are deployed. That is, these advanced network technologies increase the capacity and capabilities of commercial networks because such advanced network infrastructures can support transport and delivery of increasingly larger amounts of visual information. Network infrastructure management technologies such as multi-access edge computing (MEC), software defined networks (SDN), and network functions virtualization (NFV), enable commercial network service providers to flexibly configure their network infrastructure to adapt to changes in demand for certain network resources, e.g., to respond to dynamic increases or decreases in demand for network throughputs, network speeds, roundtrip latency, and compute resources. Moreover, this inherent ability to adapt to dynamic network requirements likewise facilitates the ability of networks to adapt immersive media ingest formats to suitable distribution formats in order to support a variety of immersive media applications with potentially heterogenous visual media formats for heterogenous client end-points.</p><p id="p-0109" num="0108">Immersive media applications themselves may also have varying requirements for network resources including gaming applications which require significantly lower network latencies to respond to real-time updates in the state of the game, telepresence applications which have symmetric throughput requirements for both the uplink and downlink portions of the network, and passive viewing applications that may have increased demand for downlink resources depending on the type of client end-point display that is consuming the data. In general, any consumer-facing application may be supported by a variety of client end-points with various onboard-client capabilities for storage, compute, and power, and likewise various requirements for particular media representations.</p><p id="p-0110" num="0109">The disclosed subject matter therefore enables a sufficiently equipped network, i.e., a network that employs some or all of the characteristics of a modern network, to simultaneously support a plurality of legacy and immersive media-capable devices according to features that are specified within that:</p><p id="p-0111" num="0110">1. Provide flexibility to leverage media ingest formats that are practical for both real-time and on demand use cases for the distribution of media.</p><p id="p-0112" num="0111">2. Provide flexibility to support both natural and computer generated content for both legacy and immersive-media capable client end-points.</p><p id="p-0113" num="0112">3. Support both timed and untimed media.</p><p id="p-0114" num="0113">4. Provide a process for dynamically adapting a source media ingest format to a suitable distribution format based on the features and capabilities of the client end-point, as well as based on the requirements of the application.</p><p id="p-0115" num="0114">5. Ensure that the distribution format is streamable over IP-based networks.</p><p id="p-0116" num="0115">6. Enable the network to simultaneously serve a plurality of heterogenous client end-points that may include both legacy and immersive media-capable devices.</p><p id="p-0117" num="0116">7. Provide an exemplary media representation framework that facilitates the organization of the distribution media along scene boundaries.</p><p id="p-0118" num="0117">An end-to-end embodiment of the improvements enabled by the disclosed subject matter is achieved according to the processing and components described the detailed description of <figref idref="DRAWINGS">FIG. <b>3</b></figref> through <figref idref="DRAWINGS">FIG. <b>15</b></figref>.</p><p id="p-0119" num="0118"><figref idref="DRAWINGS">FIG. <b>3</b></figref> and <figref idref="DRAWINGS">FIG. <b>4</b></figref> respectively employ an exemplary encompassing distribution format that can be adapted from an ingest source format to match the capabilities of a specific client end-point. As described above, the media that is shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> is timed and the media that is shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> is untimed. The specific encompassing format is robust enough in its structure to accommodate a large variety of media attributes that each may be layered based on the amount of salient information that each layer contributes to the presentation of the media. It is noted that the layering process can be applied in, for example progressive JPEG and scalable video architectures (e.g., specified in ISO/IEC 14496-10 Scalable Advanced Video Coding).</p><p id="p-0120" num="0119">According to an aspect, the media that is streamed according to the encompassing media format is not limited to legacy visual and audio media, but may include any type of media information that is capable of producing a signal that interacts with machines to stimulate the human senses for sight, sound, taste, touch, and smell.</p><p id="p-0121" num="0120">According to another aspect, the media that is streamed according to the encompassing media format can be both timed or untimed media, or a mixture of both.</p><p id="p-0122" num="0121">According to another aspect, the encompassing media format is furthermore streamable by enabling a layered representation for media objects by use of a base layer and enhancement layer architecture. In one example, the separate base layer and enhancement layers are computed by application of multi-resolution or multi-tesselation analysis techniques for media objects in each scene. This is analogous to the progressively rendered image formats specified in ISO/IEC 10918-1 (JPEG), and ISO/IEC 15444-1 (JPEG2000), but not limited to raster-based visual formats. In an example, a progressive representation for a geometric object could be a multi-resolution representation of the object computed using wavelet analysis.</p><p id="p-0123" num="0122">In another example of the layered representation of the media format, the enhancement layers apply different attributes to the base layer, such as refining the material properties of the surface of a visual object that is represented by the base layer. In yet another example, the attributes may refine the texture of the surface of the base layer object, such as changing the surface from a smooth to a porous texture, or from a matted surface to a glossy surface.</p><p id="p-0124" num="0123">In yet another example of the layered representation, the surfaces of one or more visual objects in the scene may be altered from being Lambertian to being ray-traceable.</p><p id="p-0125" num="0124">In yet another example of the layered representation, the network will distribute the base-layer representation to the client so that the client may create a nominal presentation of the scene while the client awaits the transmission of additional enhancement layers to refine the resolution or other characteristics of the base representation.</p><p id="p-0126" num="0125">According to another aspect, the resolution of the attributes or refining information in the enhancement layers is not explicitly coupled with the resolution of the object in the base layer as it is today in existing MPEG video and JPEG image standards.</p><p id="p-0127" num="0126">According to another aspect, the encompassing media format supports any type of information media that can be presented or actuated by a presentation device or machine, thereby enabling the support of heterogenous media formats to heterogenous client end-points. In one embodiment of a network that distributes the media format, the network will first query the client end-point to determine the client's capabilities, and if the client is not capable of meaningfully ingesting the media representation then the network will either remove the layers of attributes that are not supported by the client, or adapt the media from its current format into a format that is suitable for the client end-point. In one example of such adaptation, the network would convert a volumetric visual media asset into a 2D representation of the same visual asset, by use of a Network-Based Media Processing protocol. In another example of such adaptation, the network may employ a neural network process to reformat the media to an appropriate format or optionally synthesize views that are needed by the client end-point.</p><p id="p-0128" num="0127">According to another aspect, the manifest for a complete or partially-complete immersive experience (live streaming event, game, or playback of on-demand asset) is organized by scenes which is the minimal amount of information that rendering and game engines can currently ingest in order to create a presentation. The manifest includes a list of the individual scenes that are to be rendered for the entirety of the immersive experience requested by the client. Associated with each scene are one or more representations of the geometric objects within the scene corresponding to streamable versions of the scene geometry. One embodiment of a scene representation refers to a low resolution version of the geometric objects for the scene. Another embodiment of the same scene refers to an enhancement layer for the low resolution representation of the scene to add additional detail, or increase tessellation, to the geometric objects of the same scene. As described above, each scene may have more than one enhancement layer to increase the detail of the geometric objects of the scene in a progressive manner.</p><p id="p-0129" num="0128">According to another aspect, each layer of the media objects that are referenced within a scene is associated with a token (e.g., URI) that points to the address of where the resource can be accessed within the network. Such resources are analogous to CDN's where the content may be fetched by the client.</p><p id="p-0130" num="0129">According to another aspect, the token for a representation of a geometric object may point to a location within the network or to a location within the client. That is, the client may signal to the network that its resources are available to the network for network-based media processing.</p><p id="p-0131" num="0130"><figref idref="DRAWINGS">FIG. <b>3</b></figref> describes an embodiment of the encompassing media format for timed media in some examples. In some examples, the timed scene manifest includes a scene (also referred to as scene information) (<b>301</b>). The scene (<b>301</b>) refers to a list of components (<b>302</b>) that separately describe processing information and types of media assets that comprise scene (<b>301</b>). Components (<b>302</b>) refer to assets (<b>303</b>) that further refer to base layers (<b>304</b>) and attribute enhancement layers (<b>305</b>).</p><p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. <b>4</b></figref> describes an embodiment of the encompassing media format for untimed media in some examples. The untimed scene manifest includes a scene (<b>401</b>). The scene (also referred to as scene information) (<b>401</b>) is not associated with a start and end duration according to a clock. The scene (<b>401</b>) refers to a list of components (<b>402</b>) that separately describe processing information and types of media assets that comprise the scene (<b>401</b>). Components (<b>402</b>) refer to assets (<b>403</b>) (e.g., visual, audio, and haptic assets) that further refer to base layers (<b>404</b>) and attribute enhancement layers (<b>405</b>). Furthermore, the scene (<b>401</b>) refers to other scenes (<b>411</b>) that are for untimed media. The scene (<b>401</b>) may also refer to a timed media scene (<b>407</b>), in some examples.</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a diagram of process (<b>500</b>) to synthesize an ingest format from natural content. The process (<b>500</b>) includes a first sub-process for content capture and a second sub-process of ingest format synthesis for natural images.</p><p id="p-0134" num="0133">In the <figref idref="DRAWINGS">FIG. <b>5</b></figref> example, in the first sub-process, camera unit can be used to capture natural image content (<b>509</b>). For example, camera unit (<b>501</b>) can use a single camera lens to capture a scene of a person. Camera unit (<b>502</b>) can capture a scene with five diverging fields of view by mounting five camera lenses around a ring-shaped object. The arrangement in (<b>502</b>) is an exemplary arrangement for capturing omnidirectional content for VR applications. Camera unit (<b>503</b>) captures a scene with seven converging fields of view by mounting seven camera lenses on the inner diameter portion of a sphere. The arrangement in (<b>503</b>) is an exemplary arrangement for capturing light fields for light field or holographic immersive displays.</p><p id="p-0135" num="0134">In the <figref idref="DRAWINGS">FIG. <b>5</b></figref> example, in the second sub-process, the natural image content (<b>509</b>) is synthesized. For example, the natural image content (<b>509</b>) is provided as input to a synthesis module (<b>504</b>) that may, in an example, employ a neural network training module (<b>505</b>) using a collection of training images (<b>506</b>) to produce a capture neural network model (<b>508</b>). Another process commonly used in lieu of training process is photogrammetry. If the model (<b>508</b>) is created during process (<b>500</b>) depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, then the model (<b>508</b>) becomes one of the assets in the ingest format (<b>507</b>) for the natural content. Exemplary embodiments of the ingest format (<b>507</b>) include MPI and MSI.</p><p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a diagram of a process (<b>600</b>) to create an ingest format for synthetic media (<b>608</b>), e.g., computer-generated imagery. In the <figref idref="DRAWINGS">FIG. <b>6</b></figref> example, LIDAR camera (<b>601</b>) captures point clouds (<b>602</b>) of a scene. Computer-generated imagery (CGI) tools, 3D modelling tools, or another animation processes to create synthetic content are employed on computer (<b>603</b>) to create (<b>604</b>) CGI assets over a network. Motion capture suit with sensors (<b>605</b>A) are worn on actor (<b>605</b>) to capture a digital recording of the motion for actor (<b>605</b>) to produce animated motion capture (MoCap) Data (<b>606</b>). Data (<b>602</b>), (<b>604</b>), and (<b>606</b>) are provided as input to a synthesis module (<b>607</b>) which likewise may, for example, use a neural network and training data to create a neural network model (not shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>).</p><p id="p-0137" num="0136"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a network media distribution system (<b>700</b>) that supports a variety of legacy and heterogenous immersive-media capable displays as client end-points in some examples. In the <figref idref="DRAWINGS">FIG. <b>7</b></figref> example, content acquisition module (<b>701</b>) captures or creates the media using example embodiments in <figref idref="DRAWINGS">FIG. <b>6</b></figref> or <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Ingest formats are created in content preparation module (<b>702</b>) and then are transmitted to one or more client end-points in a network media distribution system using transmission module (<b>703</b>). Gateways (<b>704</b>) may serve customer premise equipment to provide network access to various client end-points for the network. Set top boxes (<b>705</b>) may also serve as customer premise equipment to provide access to aggregated content by the network service provider. Radio demodulators (<b>706</b>) may serve as mobile network access points for mobile devices (e.g., as with mobile handset and displays (<b>713</b>)). In one or more embodiments, legacy 2D televisions (<b>707</b>) may be directly connected to gateways (<b>704</b>), set-top boxes (<b>705</b>), or WiFi routers (<b>708</b>). A computer laptop with a legacy 2D display (<b>709</b>) may be a client end-point connected to a WiFi router (<b>708</b>). A head mounted 2D (raster-based) display (<b>710</b>) may also connected to a router (<b>708</b>). A Lenticular light field display (<b>711</b>) may be connected to a gateway (<b>704</b>). The display (<b>711</b>) may be comprised of local compute GPUs (<b>711</b>A), storage devices (<b>711</b>B), and a visual presentation unit (<b>711</b>C) that creates multiple views using a ray-based lenticular optical technology. A Holographic Display (<b>712</b>) may be connected to a set top box (<b>705</b>) and may include local compute CPUs (<b>712</b>A), GPUs (<b>712</b>B), storage devices (<b>712</b>C), and a Fresnal pattern, wave-based holographic visualization unit (<b>712</b>D). An augmented reality headset (<b>714</b>) may be connected to a radio demodulator (<b>706</b>) and may include a GPU (<b>714</b>A), a storage device (<b>714</b>B), a battery (<b>714</b>C), and a volumetric visual presentation component (<b>714</b>D). A dense light field display (<b>715</b>) may be connected to a WiFi router (<b>708</b>) and may include multiple GPUs (<b>715</b>A), CPUs (<b>715</b>B), and storage devices (<b>715</b>C); an eye tracking device (<b>715</b>D); a camera (<b>715</b>E); and a dense ray-based light field panel (<b>715</b>F).</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a diagram of an immersive media distribution module (<b>800</b>) that is capable of serving legacy and heterogenous immersive media-capable displays as previously depicted in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. Content is either created or acquired in module (<b>801</b>), which is embodied in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and <figref idref="DRAWINGS">FIG. <b>6</b></figref> for natural and CGI content respectively. Content is then converted into an ingest format using the create network ingest format module (<b>802</b>). Some examples of the module (<b>802</b>) are embodied in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. and <figref idref="DRAWINGS">FIG. <b>6</b></figref> for natural and CGI content respectively. The ingest media format is transmitted to the network and stored on storage device (<b>803</b>). In some other examples, the storage device may reside in the immersive media content producer's network, and accessed remotely by the immersive media network distribution module (<b>800</b>) as depicted by the dashed line that bisects. Client and application specific information is, in some examples, available on a remote storage device (<b>804</b>), which may optionally exist remotely in an alternate cloud network in an example.</p><p id="p-0139" num="0138">As depicted in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a client interface module (<b>805</b>) (e.g., referred to as server device in some examples) serves as the primary source and sink of information to execute the major tasks of the distribution network. In this particular embodiment, the client interface module (<b>805</b>) may be implemented in unified format with other components of the network. Nevertheless the tasks depicted by the client interface module (<b>805</b>) in <figref idref="DRAWINGS">FIG. <b>8</b></figref> form elements of the disclosed subject matter in some examples. The client interface module (<b>805</b>) may further employ a bidirectional protocol for communication with the client device to facilitate all processing and distribution of the media in accordance with the characteristics of the client device. Furthermore, the bidirectional protocol may be implemented across different delivery channels, i.e., a control plane channel and a data plane channel.</p><p id="p-0140" num="0139">According to some aspects of the disclosure, the client interface module (<b>805</b>) may further employ a bidirectional protocol for communication with client devices to facilitate processing and distribution of the media (e.g., immersive media) in accordance with the characteristics of the client devices.</p><p id="p-0141" num="0140">The client interface module (<b>805</b>) receives information about the features and attributes of client devices, such as a client (<b>808</b>) (also referred to as client device (<b>808</b>)) in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, and furthermore collects requirements regarding the application currently running on the client (<b>808</b>). This information may be obtained from device (<b>804</b>), or in an alternate embodiment, may be obtained by directly querying the client (<b>808</b>). In some examples, a bidirectional protocol is used to enable direct communication between the client interface module (<b>805</b>) and the client (<b>808</b>). For example, the client interface module (<b>805</b>) can send a direct query to the client (<b>808</b>). An example of messages in the bidirectional protocol is provided with reference to <figref idref="DRAWINGS">FIGS. <b>16</b>A-C</figref>, <figref idref="DRAWINGS">FIGS. <b>17</b>A-G</figref> and <figref idref="DRAWINGS">FIG. <b>18</b></figref>.</p><p id="p-0142" num="0141">The client interface module (<b>805</b>) also initiates and communicates with media adaptation and fragmentation module (<b>810</b>) which will be described in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. As ingest media is adapted and fragmented by the module (<b>810</b>), the media is, in some examples, transferred to an intermedia storage device depicted as the media prepared for distribution storage device (<b>809</b>). As the distribution media is prepared and stored in device (<b>809</b>), the client interface module (<b>805</b>) ensures that immersive client (<b>808</b>), via its network interface (<b>808</b>B), either receives the distribution media and corresponding descriptive information (<b>806</b>) either through a push request, or client (<b>808</b>) itself may initiate a pull request of the media (<b>806</b>) from storage device (<b>809</b>). The immersive client (<b>808</b>) may, in some examples, employ GPUs (or CPUs not shown) (<b>808</b>C). The distribution format of the media is stored in client (<b>808</b>)'s storage device or storage cache (<b>808</b>D). Finally, the immersive client (<b>808</b>) visually presents the media via its visualization component (<b>808</b>A).</p><p id="p-0143" num="0142">Throughout the process of streaming the immersive media to the immersive client (<b>808</b>), the client interface module (<b>805</b>) can monitor the status of the client's progress via client progress and status feedback channel (<b>807</b>).</p><p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts a diagram of a media adaptation process so that the ingested source media may be appropriately adapted to match the requirements of the immersive client (<b>808</b>) in some examples. A media adaptation module (<b>901</b>) is comprised of multiple components that facilitate the adaptation of the ingest media into an appropriate distribution format for immersive client (<b>808</b>). In <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the media adaptation module (<b>901</b>) receives input network status (<b>905</b>) to track the current traffic load on the network. The immersive client (<b>808</b>) information can include attributes and features description, application features and description as well as application current status, and a client neural network model (if available) to aid in mapping the geometry of the client's frustum to the interpolation capabilities of the ingest immersive media. The media adaptation module (<b>901</b>) ensures that the adapted output, as it is created, is stored into a client-adapted media storage device (<b>906</b>).</p><p id="p-0145" num="0144">In some examples, the media adaptation module (<b>901</b>) employs a renderer (<b>901</b>B) or a neural network processor (<b>901</b>C) to adapt the specific ingest source media to a format that is suitable for the client. In an example, the media adaptation module (<b>901</b>) receives client information (<b>904</b>) from a client interface module (<b>903</b>), such as a server device in an example. The client information (<b>904</b>) can include client description and current status, can application description and the current status, and can include client neural network model. The neural network processor (<b>901</b>C) uses neural network models (<b>901</b>A). Examples of such a neural network processor (<b>901</b>C) include the deepview neural network model generator as described in MPI and MSI. In some examples, the media is in a 2D format, but the client requires a 3D format, then the neural network processor (<b>901</b>C) can invoke a process to use highly correlated images from a 2D video signal to derive a volumetric representation of the scene depicted in the video. An example of such a process could be the neural radiance fields from one or few images process developed at the University of California, Berkley. An example of a suitable renderer (<b>901</b>B) could be a modified version of the OTOY Octane renderer (not shown) which would be modified to interact directly with the media adaptation module (<b>901</b>). The media adaptation module (<b>901</b>) may, in some examples, employ media compressors (<b>901</b>D) and media decompressors (<b>901</b>E) depending on the need for these tools with respect to the format of the ingest media and the format required by immersive client (<b>808</b>).</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an adapted media packaging process that ultimately converts the adapted media from media adaptation module (<b>1001</b>) (e.g., corresponding to the media adaption module (<b>901</b>) <figref idref="DRAWINGS">FIG. <b>9</b></figref>) now residing on client adapted media storage device (<b>1002</b>) in some examples. For example, a media packaging module (<b>1003</b>) formats the adapted media from the media adaption module (<b>1001</b>) into a robust distribution format (<b>1004</b>), for example, the exemplary formats shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> or <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Manifest Information (<b>1004</b>A) provides immersive client (<b>808</b>) with a list of the scene data that the client (<b>808</b>) can expect to receive and also provides a list of visual assets and corresponding metadata, and audio assets and corresponding metadata.</p><p id="p-0147" num="0146"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a fragmentation process in some examples. In the <figref idref="DRAWINGS">FIG. <b>11</b></figref> example, a packetizer (<b>1102</b>) fragments various adapted media (<b>1101</b>) into individual packets (<b>1103</b>) that are suitable for streaming to the immersive client (<b>808</b>), shown as client end point (<b>1104</b>) on network.</p><p id="p-0148" num="0147"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a sequence diagram of a network adapting a specific immersive media in an ingest format to a streamable and suitable distribution format for a specific immersive media client end-point in some examples.</p><p id="p-0149" num="0148">The components and communications shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref> are explained as follows: client (<b>1201</b>) (also referred to as client end-point in some examples) initiates a media request (<b>1208</b>) to a network distribution interface (<b>1202</b>). The media request (<b>1208</b>) includes information to identify the media that is requested by the client (<b>1201</b>), either by URN or other standard nomenclature. The network distribution interface (<b>1202</b>) responds to media request (<b>1208</b>) with profiles request (<b>1209</b>), which requests that client (<b>1201</b>) provide information about its currently available resources (including compute, storage, percent battery charged, and other information to characterize the current operating status of the client). The profiles request (<b>1209</b>) also requests that the client provide one or more neural network models that can be used by the network for neural network inferencing to extract or interpolate the correct media views to match the features of the client's presentation system, if such models are available at the client. Response (<b>1210</b>) from client (<b>1201</b>) to the network distribution interface (<b>1202</b>) provides a client token, application token, and one or more neural network model tokens (if such neural network model tokens are available at the client). The network distribution interface (<b>1202</b>) then provides client (<b>1201</b>) with a session ID token (<b>1211</b>). The network distribution interface (<b>1202</b>) then requests ingest media server (<b>1203</b>) with ingest media request (<b>1212</b>), which includes the URN or standard nomenclature name for the media identified in request (<b>1208</b>). The ingest media server (<b>1203</b>) replies to the request (<b>1212</b>) with a response (<b>1213</b>) which includes an ingest media token. The network distribution interface (<b>1202</b>) then provides the media token from the response (<b>1213</b>) in a call (<b>1214</b>) to client (<b>1201</b>). The network distribution interface (<b>1202</b>) then initiates the adaptation process for the media request (<b>1208</b>) by providing the adaptation interface (<b>1204</b>) with the ingest media token, client token, application token, and neural network model tokens (<b>1215</b>). The adaptation interface (<b>1204</b>) requests access to the ingest media by providing the ingest media server (<b>1203</b>) with the ingest media token at call (<b>1216</b>) to request access to the ingest media assets. The ingest media server (<b>1203</b>) responds to request (<b>1216</b>) with an ingest media access token in response (<b>1217</b>) to the adaptation interface (<b>1204</b>). The adaptation interface (<b>1204</b>) then requests that media adaptation module (<b>1205</b>) adapt the ingest media located at the ingest media access token for the client, application, and neural network inference models corresponding to the session ID token created at (<b>1213</b>). Request (<b>1218</b>) from the adaptation interface (<b>1204</b>) to media adaptation module (<b>1205</b>) contains the required tokens and session ID. The media adaptation module (<b>1205</b>) provides the network distribution interface (<b>1202</b>) with adapted media access token and session ID in update (<b>1219</b>). The network distribution interface (<b>1202</b>) provides the packaging module (<b>1206</b>) with adapted media access token and session ID in interface call (<b>1220</b>). The packaging module (<b>1206</b>) provides response (<b>1221</b>) to the network distribution interface (<b>1302</b>) with the packaged media access token and session ID in response message (<b>1221</b>). The packaging module (<b>1206</b>) provides packaged assets, URNs, and the packaged media access token for the session ID to the packaged media server (<b>1207</b>) in response (<b>1222</b>). Client (<b>1201</b>) executes request (<b>1223</b>) to initiate the streaming of media assets corresponding to the packaged media access token received in response message (<b>1221</b>). The client (<b>1201</b>) executes other requests and provides status updates in message (<b>1224</b>) to the network distribution interface (<b>1202</b>).</p><p id="p-0150" num="0149"><figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts the ingest media format and assets (<b>902</b>) of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, in some examples, consisting of two parts: immersive media and assets in 3D format (<b>1301</b>) and 2D format (<b>1302</b>). The 2D format (<b>1302</b>) may be a single view coded video stream, e.g., ISO/IEC 14496 Part 10 Advanced Video Coding, or it may be a coded video stream that contains multiple views, e.g., multi-view compression amendment to ISO/IEC 14496 Part 10.</p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. <b>14</b></figref> depicts the carriage of neural network model information along with a coded video stream. In <figref idref="DRAWINGS">FIG. <b>14</b></figref>, coded video stream (<b>1401</b>) includes the neural network model and corresponding parameters directly carried by one or more SEI messages (<b>1401</b>A) and coded video stream (<b>1401</b>B). Whereas in coded video stream (<b>1402</b>), the one or more SEI messages carries an identifier for the neural network model and its corresponding parameters (<b>1402</b>A) and the coded video bitstream (<b>1402</b>B). In the scenario for (<b>1402</b>), the neural network model and parameters are stored outside of the coded video stream, for example, in (<b>901</b>A) of <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0152" num="0151"><figref idref="DRAWINGS">FIG. <b>15</b></figref> depicts the carriage of neural network model information in the ingested immersive media and assets 3D format (<b>1501</b>) (corresponding to immersive media and assets in 3D format (<b>1301</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). The ingested immersive media and assets 3D format (<b>1501</b>) refers to scenes <b>1</b> through N depicted as (<b>1502</b>). Each scene (<b>1502</b>) refers to geometry (<b>1503</b>) and processing parameters (<b>1504</b>). Geometry (<b>1503</b>) may contain references (<b>1503</b>A) to neural network models. Processing parameters (<b>1504</b>) may also contain references (<b>1504</b>A) to a neural network model. Both (<b>1504</b>A) and (<b>1503</b>A) may refer to the network model directly stored with the scene or to identifiers that refer to neural network models that reside outside of the ingested media, for example, network models stored in (<b>901</b>A) of <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0153" num="0152">It is noted that the various modules in the present disclosure can be individual devices, or can be components in a device. In some examples, a module can be an individual device, and can be coupled with other devices. In some examples, a module can be processing circuitry, and can be interconnected with other processing circuitry. In some examples, a module can be software instruction module, and can be executed by one or more processors.</p><p id="p-0154" num="0153">Some aspects of the disclosure provide a bidirectional protocol with bidirectional messages that allow a media distribution network's client interface (i.e., also referred to as a server device) to communicate directly with a client presentation end-point (i.e., also referred to as a client device). In some examples, the bidirectional protocol can be implemented in a network layer above transport layer. In some examples, using the bidirectional protocol, the server device can obtain information about the client-specific characteristics and supported features of the client device. In some examples, using the bidirectional protocol, the server device can manage the distribution of the media to the client device by establishing a unique session and operating context for the adaptation and distribution of the media to the client device. In some examples, using the bidirectional protocol, the server device can respond to situations during the session when or if the client device needs to rely on the network to supplement the client device's resources, e.g., for compute or storage, in the presentation of the specific media. In some examples, the bidirectional protocol can assist the sever device in an adaptation process of the input media to match the capabilities of the client device. In some examples, the bidirectional protocol can enable the efficient re-use of specific media assets for presentation across multiple client devices when or if such re-use is permitted by the content creator, e.g., the studio or client devices. In some examples, using the bidirectional protocol, the server device can facilitate the client device's near real-time presentation of the media according to existing service level agreements between a network operator (also known as wireless service provider, wireless carrier, mobile network carrier) and the client device. In some examples, using the bidirectional protocol, the server device can facilitate the client device's near real-time presentation of the media according to the requirements of the application, e.g., an interactive game vs. a linear passive viewing experience.</p><p id="p-0155" num="0154">According to an aspect of the disclosure, the bidirectional protocol is used to form bidirectional presentation datastream for the server device communicating directly with the client device. The bidirectional presentation datastream includes a series of messages that are exchanged between the server device and the client device in order to facilitate the timely adaptation of the input media to a suitable distribution format for the client device, and the streaming of adapted media to the client device for presentation.</p><p id="p-0156" num="0155">The bidirectional protocol can be used to build a media distribution network that can support a variety of diverse client devices that require asset types in various formats, and that can reuse assets that have previously been adapted for use by a particular client.</p><p id="p-0157" num="0156"><figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>C</figref> provide a list of messages that can be exchanged between a server device (e.g., shown as client interface module (<b>805</b>) in <figref idref="DRAWINGS">FIG. <b>8</b></figref>) and a client device (e.g., shown as immersive client (<b>808</b>) in <figref idref="DRAWINGS">FIG. <b>8</b></figref>) in some examples. In some examples, the list of messages can include the messages and information (<b>806</b>) that are originated from the server device and sent to the client device, and can include the feedback and status (<b>807</b>) that are originated from the client device and sent to the server device.</p><p id="p-0158" num="0157"><figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>B</figref> show a first group of messages (messages that are numbered <b>1</b> through <b>20</b>) that are sent from the server device to the client device; and <figref idref="DRAWINGS">FIG. <b>16</b>C</figref> shows a second group of messages (messages that are numbered <b>21</b> through <b>31</b>) that are sent from the client device to the server device according to some embodiments.</p><p id="p-0159" num="0158"><figref idref="DRAWINGS">FIGS. <b>17</b>A-<b>17</b>G</figref> show a table of semantic information for the first group of messages in some examples. <figref idref="DRAWINGS">FIG. <b>18</b></figref> shows a table of semantic information for the second group of messages in some examples.</p><p id="p-0160" num="0159">It is noted that the messages in <figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>C</figref>, <figref idref="DRAWINGS">FIGS. <b>17</b>A-<b>17</b>G</figref>, and <figref idref="DRAWINGS">FIG. <b>18</b></figref> are for illustration. The messages in the bidirectional protocol can be modified and/or omitted. Additional messages can be added.</p><p id="p-0161" num="0160">In some implementation, a media distribution network can use messages defined by the bidirectional protocol to facilitate the adaptation and the streaming of media, such as immersive media content. In some examples, the bidirectional protocol can include specific messages that signal actions to execute. For example, a specific message can cause the client device to send its processing characteristics to the server device, so that upon receiving the processing characteristic of the client device, the server device is equipped with sufficient information to meaningfully adapt the ingested media to a format suitable for the client device. In another example, messages can be exchanged between the server device and client device to allow the server device to send a manifest of scenes for a presentation that an end-user of the client device wishes to experience. For example, upon receiving such a manifest, the client device can begin the necessary steps to prepare to create the presentation, including requesting each of the assets for the first scene, the second scene, and so on. The server device in turn may respond to each request for an asset by either sending the asset directly to the client from a media source or by informing the client to fetch the asset from a nearby database. In response to message requests, the client device or the server device may respond with an acknowledgement to indicate the request in the message was successfully performed, or a negative acknowledgement to indicate that an error occurred.</p><p id="p-0162" num="0161">Some aspects of the disclosure provide techniques to facilitate the implementation of the bidirectional protocol. For example, messages in the bidirectional protocol are separated into two categories: control messages and data messages. In some examples, the data messages include media data for delivery, and the control messages includes control information for delivering the data messages. For example, the control messages can include setup information to prepare the delivery of the data messages, the handling information during the delivery of the data messages, checking information after the delivery of the data messages and the like.</p><p id="p-0163" num="0162">Further, separate communication techniques are used to deliver the control messages and the data messages. For example, first communication techniques that enable fast delivery can be used to deliver data messages, and second communication techniques that ensure reliable delivery can be used to deliver control messages. For example, lower-latency network transport protocol, such as user datagram protocol (UDP) can be used to deliver the data messages, and a connection based network transport protocol that is more reliable, such as transmission control protocol (TCP) can be used to deliver the control messages. The TCP can ensure ordering, reliability and integrity. The UDP reduces overhead and latency, and can send bulk quantity of data units.</p><p id="p-0164" num="0163">In some examples, control messages form a control plane, and a control plane channel refers to integral components in a media distribution network architecture for delivery of the control messages. In an example, a control plane channel can be setup according to TCP protocol to deliver the control messages. Further, data messages form a data plane, and a data plane channel refers to integral components in a media distribution network architecture for delivery of the data messages. In an example, a data plane channel can be setup according to UDP to deliver the data messages.</p><p id="p-0165" num="0164">In this way, media data can be transmitted over the data plane channel with less delay, and control information, such as setup information, monitoring information and status notification for assisting the transmission over the data plane channel, can be transmitted over the control plane channel to ensure successfully data message transmissions or to detect errors in the transmission over the data plane channel and trigger retransmission over the data plane channel.</p><p id="p-0166" num="0165">According to an aspect of the disclosure, the bidirectional communication with separate control plane channel and data plane channel can be used to build a media distribution network that can support a variety of diverse client devices that require asset types in various formats, and that can reuse assets that have previously been adapted for use by a particular client device. With the separation of bidirectional communication over the control plane channel and the data plane channel, in some examples, a more robust and efficient media distribution network can be implemented with the data messages being carried over a transport layer that requires less latency but is less reliable, while the control messages are carried over a more reliable transport layer that is also slower to deliver messages.</p><p id="p-0167" num="0166"><figref idref="DRAWINGS">FIG. <b>19</b>A</figref> shows a block diagram of a media system (<b>1900</b>) according to some embodiments of the disclosure. The media system (<b>1900</b>) includes a sever device (<b>1901</b>) and a client device (<b>1906</b>). The server device (<b>1901</b>) is also referred to as client interface module in a media distribution network (e.g., client interface module (<b>805</b>)) in some examples. In the <figref idref="DRAWINGS">FIG. <b>19</b>A</figref> example, communication channels (<b>1902</b>), (<b>1903</b>), (<b>1904</b>) and (<b>1905</b>) can be setup for bidirectional communication between the server device (<b>1901</b>) and the client device (<b>1906</b>). In some examples, a communication channel can refer to a physical transmission medium or can refer to a logical connection over multiplexed medium in telecommunications and computer networking.</p><p id="p-0168" num="0167">Specifically, the communication channel (<b>1902</b>) is configured to deliver control messages from the server device (<b>1901</b>) to the client device (<b>1906</b>). <figref idref="DRAWINGS">FIG. <b>19</b>B</figref> shows a list of control messages from the bidirectional protocol in <figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>C</figref> that can be delivered by the communication channel (<b>1902</b>).</p><p id="p-0169" num="0168">The communication channel (<b>1903</b>) is configured to deliver control messages from the client device (<b>1906</b>) to the server device (<b>1901</b>). <figref idref="DRAWINGS">FIG. <b>19</b>C</figref> shows a list of control messages from the bidirectional protocol in <figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>C</figref> that can be delivered by the communication channel (<b>1903</b>).</p><p id="p-0170" num="0169">In some examples, the communication channel (<b>1902</b>) and the communication channel (<b>1903</b>) can be a control plane channel that is bidirectional. The control messages in <figref idref="DRAWINGS">FIG. <b>19</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>19</b>C</figref> form a control plane of the bidirectional protocol.</p><p id="p-0171" num="0170">The communication channel (<b>1904</b>) is configured to deliver data messages from the server device (<b>1901</b>) to the client device (<b>1906</b>). <figref idref="DRAWINGS">FIG. <b>19</b>D</figref> shows a list of control messages from the bidirectional protocol in <figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>C</figref> that can be delivered by the communication channel (<b>1904</b>).</p><p id="p-0172" num="0171">The communication channel (<b>1905</b>) is configured to deliver data messages from the client device (<b>1906</b>) to the server device (<b>1901</b>). <figref idref="DRAWINGS">FIG. <b>19</b>E</figref> shows a list of control messages from the bidirectional protocol in <figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>C</figref> that can be delivered by the communication channel (<b>1905</b>).</p><p id="p-0173" num="0172">In some examples, the communication channel (<b>1904</b>) is a data plane channel that is unidirectional, and the communication channel (<b>1905</b>) is another data plane channel that is unidirectional. The data messages in <figref idref="DRAWINGS">FIG. <b>19</b>D</figref> and <figref idref="DRAWINGS">FIG. <b>19</b>E</figref> form a data plane of the bidirectional protocol.</p><p id="p-0174" num="0173">It is noted that messages in <figref idref="DRAWINGS">FIGS. <b>19</b>B-<b>19</b>E</figref> are for illustration. The messages in the communication channels (<b>1902</b>)-(<b>1905</b>) can be modified and/or omitted. Additional messages can be added.</p><p id="p-0175" num="0174"><figref idref="DRAWINGS">FIG. <b>20</b></figref> shows a block diagram of a media system (<b>2000</b>) for illustrating the use of a bidirectional protocol in some examples. In some examples, the bidirectional protocol can include the messages in <figref idref="DRAWINGS">FIGS. <b>16</b>A-<b>16</b>C</figref>, <figref idref="DRAWINGS">FIGS. <b>17</b>A-<b>17</b>G</figref>, and <figref idref="DRAWINGS">FIG. <b>18</b></figref>. The messages can be separated into the control plane and the data plane according to <figref idref="DRAWINGS">FIGS. <b>19</b>A-<b>19</b>E</figref>.</p><p id="p-0176" num="0175">The media system (<b>2000</b>) can be used in various use applications, such as immersive media application, augmented reality (AR) application, virtual reality application, video game application, sports game animation application, a teleconference and telepresence application, a media streaming application, and the like.</p><p id="p-0177" num="0176">The media system (<b>2000</b>) includes a server device (<b>2010</b>) and a plurality of media client devices, such as client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C) shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>, that can be connected by a network (not shown). In an example, the server device (<b>2010</b>) can include one or more devices with immersive media coding functionalities. In an example, the server device (<b>2010</b>) includes a single computing device, such as a desktop computer, a laptop computer, a server computer, a tablet computer and the like. In another example, the server device (<b>2010</b>) includes data center(s), server farm(s), and the like. The server device (<b>2010</b>) can receive input media content, such as immersive content, video content, audio content and the like, and the like. The client devices (e.g., the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C)) respectively include one or more devices with media presentation functionality for media applications. In an example, a media client device can include a presenting device, such as a desktop computer, a laptop computer, a server computer, a tablet computer, a head mounted display (HMD) device, a lenticular light field display, and the like. The media client device can present media in accordance to suitable media presenting format in some examples.</p><p id="p-0178" num="0177">The server device (<b>2010</b>) can be implemented using any suitable technology. In the <figref idref="DRAWINGS">FIG. <b>20</b></figref> example, the server device (<b>2010</b>) includes a processing circuit (<b>2030</b>) and an interface circuit (<b>2011</b>) coupled together.</p><p id="p-0179" num="0178">The processing circuit (<b>2030</b>) can include any suitable processing circuitry, such as one or more central processing units (CPUs), one or more graphics processing units (GPUs), application specific integrated circuit, and the like. In the <figref idref="DRAWINGS">FIG. <b>20</b></figref> example, the processing circuit (<b>2030</b>) is configured to form messages according to the bidirectional protocol and can interpret messages according to the bidirectional protocol. Further, the processing circuitry (<b>2030</b>) can generate a media stream that carries media content. In some examples, the media stream can be adapted based on messages that are exchanged between the server device (<b>2010</b>) and the media client devices.</p><p id="p-0180" num="0179">The interface circuit (<b>2011</b>) can interface the server device (<b>2010</b>) with the network. The interface circuit (<b>2011</b>) can include a receiving portion that receives signals from the network and a transmitting portion that transmits signals to the network. For example, the interface circuit (<b>2011</b>) can transmit signals that carry messages to other devices, such as the client device (<b>2060</b>A), the client device (<b>2060</b>B), the client device (<b>2060</b>C), and the like via the network. The interface circuit (<b>2011</b>) can receive signals that carry messages from the media client devices, such as the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C).</p><p id="p-0181" num="0180">The network is suitably coupled with the server device (<b>2010</b>) and the client devices (e.g., the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C)) via wired and/or wireless connections, such as Ethernet connections, fiber-optic connections, WiFi connections, cellular network connections and the like.</p><p id="p-0182" num="0181">The client devices (e.g., the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C)) are respectively configured for media presentation and bidirectional communication using the bidirectional protocol.</p><p id="p-0183" num="0182">The media client devices, such as the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>B) can be implemented using any suitable technology. In the <figref idref="DRAWINGS">FIG. <b>20</b></figref> example, the client devices (<b>2060</b>A) and (<b>2060</b>B) are shown, but not limited to head mounted displays (HMDs) with earphones as user equipment that can be used by respective users, such as user A and user B. The client device (<b>2060</b>C) is shown, but not limited to a lenticular light field display that can display content that can be viewed by up to multiple users simultaneously, where each user is experiencing his or her own unique perspective (i.e., view) of the content that is being displayed.</p><p id="p-0184" num="0183">In <figref idref="DRAWINGS">FIG. <b>20</b></figref>, the client device (<b>2060</b>A) includes an interface circuit (<b>2061</b>A), and a processing circuit (<b>2070</b>A) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. The client device (<b>2060</b>B) includes an interface circuit (<b>2061</b>B), and a processing circuit (<b>2070</b>B) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. The client device (<b>2060</b>C) includes an interface circuit (<b>2061</b>C), and a processing circuit (<b>2070</b>C) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>.</p><p id="p-0185" num="0184">The interface circuit (<b>2061</b>A) can interface the client device (<b>2060</b>A) with the network. The interface circuit (<b>2061</b>A) can include a receiving portion that receives signals from the network and a transmitting portion that transmits signals to the network. For example, the interface circuit (<b>2061</b>A) can receive signals carrying messages from the server device (<b>2010</b>), and can transmit signals carrying messages to the server device (<b>2010</b>).</p><p id="p-0186" num="0185">The processing circuit (<b>2070</b>A) can include suitable processing circuitry, such as CPU, GPU, application specific integrated circuits and the like. The processing circuit (<b>2070</b>A) can be configured to include various components, such as media decoders, a render and the like.</p><p id="p-0187" num="0186">Similarly, the interface circuit (<b>2061</b>B) can interface the client device (<b>2060</b>B) with the network. The interface circuit (<b>2061</b>B) can include a receiving portion that receives signals from the network and a transmitting portion that transmits signals to the network. For example, the interface circuit (<b>2061</b>B) can receive signals carrying messages from the server device (<b>2010</b>), and can transmit signals carrying messages to the server device (<b>2010</b>).</p><p id="p-0188" num="0187">The processing circuit (<b>2070</b>B) can include suitable processing circuitry, such as CPU, GPU, application specific integrated circuits and the like. The processing circuit (<b>2070</b>B) can be configured to include various components, such as media decoders, a render and the like.</p><p id="p-0189" num="0188">Similarly, the interface circuit (<b>2061</b>C) can interface the client device (<b>2060</b>C) with the network. The interface circuit (<b>2061</b>C) can include a receiving portion that receives signals from the network and a transmitting portion that transmits signals to the network. For example, the interface circuit (<b>2061</b>C) can receive signals carrying messages from the server device (<b>2010</b>), and can transmit signals carrying messages to the server device (<b>2010</b>).</p><p id="p-0190" num="0189">The processing circuit (<b>2070</b>C) can include suitable processing circuitry, such as CPU, GPU, application specific integrated circuits and the like. The processing circuit (<b>2070</b>C) can be configured to include various components, such as media decoders, a render and the like.</p><p id="p-0191" num="0190">According to an aspect of the disclosure, the server device (<b>2010</b>) and the client device (<b>2060</b>A) can setup a control plane channel (<b>2001</b>) for exchanging (transmitting and/or receiving) control messages in between; the server device (<b>2010</b>) and the client device (<b>2060</b>B) can setup a control plane channel (<b>2003</b>) for exchanging control messages in between; and the server device (<b>2010</b>) and the client device (<b>2060</b>C) can setup a control plane channel (<b>2005</b>) for exchanging control messages in between. In an example, the control plane channels (<b>2001</b>), (<b>2003</b>) and (<b>2005</b>) can use TCP, and can perform bidirectional transmission of the control messages.</p><p id="p-0192" num="0191">In some examples, data plane channels can be setup in the media system (<b>2000</b>) based on the control messages exchanged in the channel plane channels (<b>2001</b>), (<b>2003</b>) and (<b>2005</b>). In an example, a data plane channel (<b>2002</b>) can be setup between the server device (<b>2010</b>) and the client device (<b>2060</b>A) based on control messages exchanged over the control plane channel (<b>2001</b>); a data plane channel (<b>2004</b>) can be setup between the server device (<b>2010</b>) and the client device (<b>2060</b>B) based on control messages exchanged over the control plane channel (<b>2003</b>); a data plane channel (<b>2006</b>) can be setup between the server device (<b>2010</b>) and the client device (<b>2060</b>C) based on control messages exchanged over the control plane channel (<b>2005</b>). In an example, the data plane channels (<b>2002</b>), (<b>2004</b>) and (<b>2006</b>) can use UDP, and can perform unidirectional transmission of the data messages.</p><p id="p-0193" num="0192">In some examples, using the control plane channels (<b>2001</b>), (<b>2003</b>) and (<b>2005</b>), the server device (<b>2010</b>) can obtain information about the client-specific characteristics and supported features of the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C). In an example, the server device (<b>2010</b>) can generate respective messages to the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C) to request information from the respective media client devices via the control channel planes (<b>2001</b>), (<b>2003</b>) and (<b>2005</b>). The information can include but not limited to a computing resource of the media client device, a storage resource of the media client device, a service level agreement of a network service provider with the media client device, an immersive application requirement of the media client device, a type of the media client device, a model of the media client device, a neural network model at the client device. The client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C) can provide the requested information in response to the received messages from the server device (<b>2010</b>) via the control plane channels (<b>2001</b>), (<b>2003</b>) and (<b>2005</b>). In some examples, the client devices (<b>2060</b>A), (<b>2060</b>B) and (<b>2060</b>C) can provide the client-specific characteristics and supported features voluntarily without being requested.</p><p id="p-0194" num="0193">In some examples, using the control messages exchanged over the control plane channels (<b>2001</b>), (<b>2003</b>) and (<b>2005</b>), the server device (<b>2010</b>) can manage the distribution of the media to the media client devices by establishing a unique session and operating context for the adaptation and distribution of the media to the media client device. In some examples, the control messages exchanged over the control plane channels (<b>2001</b>), (<b>2003</b>) and (<b>2005</b>), can assist the media sever device (<b>2010</b>) in an adaptation process of the input media to match the capabilities of the media client device.</p><p id="p-0195" num="0194">For example, the server device (<b>2010</b>) can establish a first unique session (e.g., the data plane channel (<b>2002</b>)) with the client device (<b>2060</b>A) based on control messages exchanged over the control plane channel (<b>2001</b>). The server device (<b>2010</b>) can generate a first media stream that is adapted from the input media to match the capabilities of the client device (<b>2060</b>A). The data plane channel (<b>2002</b>) can provide the first media stream to the client device (<b>2060</b>A).</p><p id="p-0196" num="0195">The server device (<b>2010</b>) can establish a second unique session (e.g., the data plane channel (<b>2004</b>)) with the client device (<b>2060</b>B) based on control messages exchanged over the control plane channel (<b>2003</b>). The server device (<b>2010</b>) can generate a second media stream that is adapted from the input media to match the capabilities of the client device (<b>2060</b>B). The data plane channel (<b>2004</b>) can provide the second media stream to the client device (<b>2060</b>B).</p><p id="p-0197" num="0196">The server device (<b>2010</b>) can establish a third unique session (e.g., the data plane channel (<b>2006</b>)) with the client device (<b>2060</b>C) based on control messages exchanged over the control plane channel (<b>2005</b>). The server device (<b>2010</b>) can generate a third media stream that is adapted from the input media to match the capabilities of the client device (<b>2060</b>C). The data plane channel (<b>2006</b>) can provide the third media stream to the client device (<b>2060</b>C).</p><p id="p-0198" num="0197">In some examples, using the control plane channels, the server device (<b>2010</b>) can respond to situations during the session when or if the media client device needs to rely on the network to supplement the client device's resources, e.g., for compute or storage, in the presentation of the specific media. In an example, the client device (<b>2060</b>B) informs the server device (<b>2010</b>) that the client device (<b>2060</b>B) needs to rely on the network to supplement computing resource (e.g., computing resource for rendering) via the control plane channel (<b>2003</b>). The server device (<b>2010</b>) can determine to provide supplement computing resource to the client device (<b>2060</b>B). For example, the server device (<b>2010</b>) can perform computation heavy media processing on the media data for the client device (<b>2020</b>B).</p><p id="p-0199" num="0198">In some examples, using the control plane channels can enable the efficient re-use of specific media assets for presentation across multiple client devices when or if such re-use is permitted by the content creator, e.g., the studio or client devices. In an example, the server device (<b>2010</b>) can determine to reuse of media assets of the client device (<b>2060</b>A) to the client device (<b>2060</b>B). For example, the server device (<b>2010</b>) can obtain information of rendered media assets in cache (e.g., in a storage (<b>2099</b>)) from the client device (<b>2060</b>A) via the control plane channel (<b>2001</b>), and provide the information to the client device (<b>2060</b>B) via the control plane channel (<b>2003</b>). Then, the client device (<b>2060</b>B) can access the cache for the rendered media assets according to the information. It is noted that the storage (<b>2099</b>) can be an internal component of the client device (<b>2060</b>A) or can be an external component of the client device (<b>2060</b>A).</p><p id="p-0200" num="0199">In another example, the server device (<b>2010</b>) may request the client device (<b>2060</b>A) to send back rendered media assets to the server device (<b>2010</b>), and then the server device (<b>2010</b>) can provide the received media assets to the client device (<b>2060</b>B). In an example, via the control plane channel (<b>2001</b>), another data plane channel (<b>2007</b>) is setup to send back rendered media assets from the client device (<b>2060</b>A) to the server device (<b>2010</b>).</p><p id="p-0201" num="0200"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows a flow chart outlining a process (<b>2100</b>) according to an embodiment of the disclosure. The process (<b>2100</b>) can be used in a server device, such as the sever device (<b>2010</b>). In various embodiments, the process (<b>2100</b>) is executed by processing circuitry, such as the processing circuit (<b>2030</b>) in the server device (<b>2010</b>), and the like. In some embodiments, the process (<b>2100</b>) is implemented in software instructions, thus when the processing circuit executes the software instructions, the processing circuit performs the process (<b>2100</b>). The process starts at (S<b>2101</b>) and proceeds to (S<b>2110</b>).</p><p id="p-0202" num="0201">At (S<b>2110</b>), the server device exchanges, with a client device, a plurality of control messages over a control plane channel that uses a first transport protocol. The plurality of control messages belong to a control plane of a bidirectional protocol for immersive media distribution. The bidirectional protocol for immersive media distribution can be implemented in a network layer above transport layer, such as application layer, presentation layer, and the like in the open system interconnection (OSI) model in an example.</p><p id="p-0203" num="0202">At (S<b>2120</b>), the server device transmits, to the client device, a first plurality of data messages over a first data plane channel that uses a second transport protocol. The first plurality of data messages belongs to a data plane of the bidirectional protocol and carries at least immersive media content, such as 3D graphic data.</p><p id="p-0204" num="0203">In some examples, the first transport protocol is transmission control protocol (TCP) and the second transport protocol is user datagram protocol (UDP).</p><p id="p-0205" num="0204">In some examples, the first transport protocol is a connection based transport protocol and can be bidirectional. The second transport protocol is a connectionless transport protocol, and can be unidirectional.</p><p id="p-0206" num="0205">In some examples, the server device can setup the first data plane channel with the client device according to the plurality of control messages exchanged over the control plane channel.</p><p id="p-0207" num="0206">In some examples, the server device can receive one or more specific characteristics of the client device over the control plane channel, and can adapt a media stream carried in the first plurality of data messages according to the one or more specific characteristics. In some examples, the one or more specific characteristics can include at least one of a computing resource of the client device, a storage resource of the client device, a service level agreement of a network service provider at the client device, an immersive application requirement, a type of the client device, a model of the client device, and a neural network model at the client device.</p><p id="p-0208" num="0207">In some examples, the server device can receive, from the client device, a second plurality of data messages over a second data plane channel that uses the second transport protocol. The second plurality of data messages carries at least one of layer information of a neural network model at the client device and rendered media content by the client device. In an example, the server device can send the rendered media content by the client device to another client device.</p><p id="p-0209" num="0208">In some embodiments, the client device is a first client device, and the plurality of control messages enables the server device to share the immersive media content with a second client device. In an example, the server device can receive, in response to a request from the server device, a list of types of assets that are sharable and uniform resource identifiers (URIs) for the assets that are cached in an immutable storage via the control plane channel from the first client device. In another example, the server device can receive, in response to a request from the server device, a status update of each asset that is accessible by the first client device via the control plane channel. In another example, the server device can receive, in response to a request from the server device, a current state of a particular asset type and one of a particular server assigned identifier and a particular asset uniform resource identifier (URI) via the control plane channel from the first client device. The server device can provide control messages to the second client device over a control plane channel between the server device and the second client device, the control messages can allow the second client device to access the immersive media content of the first client device, such as the cached assets.</p><p id="p-0210" num="0209">Then, the process proceeds to (S<b>2199</b>) and terminates.</p><p id="p-0211" num="0210">The process (<b>2100</b>) can be suitably adapted. Step(s) in the process (<b>2100</b>) can be modified and/or omitted. Additional step(s) can be added. Any suitable order of implementation can be used.</p><p id="p-0212" num="0211"><figref idref="DRAWINGS">FIG. <b>22</b></figref> shows a flow chart outlining a process (<b>2200</b>) according to an embodiment of the disclosure. The process (<b>2200</b>) can be used in a client device, such as the client device (<b>2060</b>A), the client device (<b>2060</b>B), the client device (<b>2060</b>C), and the like. In various embodiments, the process (<b>2200</b>) is executed by processing circuitry, such as the processing circuit (<b>2070</b>A), the processing circuit (<b>2070</b>B), the processing circuit (<b>2070</b>C) and the like. In some embodiments, the process (<b>2200</b>) is implemented in software instructions, thus when the processing circuitry executes the software instructions, the processing circuitry performs the process (<b>2200</b>). The process starts at (S<b>2201</b>) and proceeds to (S<b>2210</b>).</p><p id="p-0213" num="0212">At (S<b>2210</b>), the client device exchanges, with a server device, a plurality of control messages over a control plane channel that uses a first transport protocol. The plurality of control messages belong to a control plane of a bidirectional protocol for immersive media distribution. The bidirectional protocol for immersive media distribution can be implemented in a network layer above transport layer, such as application layer, presentation layer, and the like in the open system interconnection (OSI) model in an example.</p><p id="p-0214" num="0213">At (S<b>2220</b>), the client device receives, from the server device, a first plurality of data messages over a first data plane channel that uses a second transport protocol. The first plurality of data messages belongs to a data plane of the bidirectional protocol and carries at least immersive media content.</p><p id="p-0215" num="0214">At (S<b>2230</b>), the client device can present the immersive media content carried by the first plurality of data messages.</p><p id="p-0216" num="0215">In some examples, the first transport protocol is transmission control protocol (TCP) and the second transport protocol is user datagram protocol (UDP).</p><p id="p-0217" num="0216">In some examples, the first transport protocol is a connection-based transport protocol and is bidirectional, and the second transport protocol is a connectionless transport protocol and is unidirectional.</p><p id="p-0218" num="0217">In some examples, the client device sets up the first data plane channel with the server device according to the plurality of control messages exchanged over the control plane channel.</p><p id="p-0219" num="0218">In some examples, the client device provides one or more specific characteristics of the client device to the server device over the control plane channel. The one or more specific characteristics includes at least one of a computing resource of the client device, a storage resource of the client device, a service level agreement of a network service provider at the client device, an immersive application requirement, a type of the client device, a model of the client device, and a neural network model at the client device.</p><p id="p-0220" num="0219">In some examples, the client device can transmit to the server device, a second plurality of data messages over a second data plane channel that uses the second transport protocol. The second plurality of data messages carries at least one of layer information of a neural network model at the client device, or rendered media content by the client device.</p><p id="p-0221" num="0220">In some examples, the client device is a first client device, and the plurality of control messages enables the server device to share the immersive media content with a second client device. In an example, the first client device provides, in response to a request from the server device, a list of types of assets that are sharable and uniform resource identifiers (URIs) for the assets that are cached in an immutable storage via the control plane channel. In another example, the first client device provides, in response to a request from the server device, a status update of each asset that is accessible by the first client device via the control plane channel. In another example, the first client device provides, in response to a request from the server device, a current state of a particular asset type and one of a particular server assigned identifier and a particular asset uniform resource identifier (URI) via the control plane channel. The server device can use the information received from the first client device to control the second client device to access the immersive media content, such as the cached assets.</p><p id="p-0222" num="0221">Then, the process proceeds to (S<b>2299</b>) and terminates.</p><p id="p-0223" num="0222">The process (<b>2200</b>) can be suitably adapted. Step(s) in the process (<b>2200</b>) can be modified and/or omitted. Additional step(s) can be added. Any suitable order of implementation can be used.</p><p id="p-0224" num="0223">The techniques described above, can be implemented as computer software using computer-readable instructions and physically stored in one or more computer-readable media. For example, <figref idref="DRAWINGS">FIG. <b>23</b></figref> shows a computer system (<b>2300</b>) suitable for implementing certain embodiments of the disclosed subject matter.</p><p id="p-0225" num="0224">The computer software can be coded using any suitable machine code or computer language, that may be subject to assembly, compilation, linking, or like mechanisms to create code comprising instructions that can be executed directly, or through interpretation, micro-code execution, and the like, by one or more computer central processing units (CPUs), Graphics Processing Units (GPUs), and the like.</p><p id="p-0226" num="0225">The instructions can be executed on various types of computers or components thereof, including, for example, personal computers, tablet computers, servers, smartphones, gaming devices, internet of things devices, and the like.</p><p id="p-0227" num="0226">The components shown in <figref idref="DRAWINGS">FIG. <b>23</b></figref> for computer system (<b>2300</b>) are exemplary in nature and are not intended to suggest any limitation as to the scope of use or functionality of the computer software implementing embodiments of the present disclosure. Neither should the configuration of components be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary embodiment of a computer system (<b>2300</b>).</p><p id="p-0228" num="0227">Computer system (<b>2300</b>) may include certain human interface input devices. Such a human interface input device may be responsive to input by one or more human users through, for example, tactile input (such as: keystrokes, swipes, data glove movements), audio input (such as: voice, clapping), visual input (such as: gestures), olfactory input (not depicted). The human interface devices can also be used to capture certain media not necessarily directly related to conscious input by a human, such as audio (such as: speech, music, ambient sound), images (such as: scanned images, photographic images obtain from a still image camera), video (such as two-dimensional video, three-dimensional video including stereoscopic video).</p><p id="p-0229" num="0228">Input human interface devices may include one or more of (only one of each depicted): keyboard (<b>2301</b>), mouse (<b>2302</b>), trackpad (<b>2303</b>), touch screen (<b>2310</b>), data-glove (not shown), joystick (<b>2305</b>), microphone (<b>2306</b>), scanner (<b>2307</b>), camera (<b>2308</b>).</p><p id="p-0230" num="0229">Computer system (<b>2300</b>) may also include certain human interface output devices. Such human interface output devices may be stimulating the senses of one or more human users through, for example, tactile output, sound, light, and smell/taste. Such human interface output devices may include tactile output devices (for example tactile feedback by the touch-screen (<b>2310</b>), data-glove (not shown), or joystick (<b>2305</b>), but there can also be tactile feedback devices that do not serve as input devices), audio output devices (such as: speakers (<b>2309</b>), headphones (not depicted)), visual output devices (such as screens (<b>2310</b>) to include CRT screens, LCD screens, plasma screens, OLED screens, each with or without touch-screen input capability, each with or without tactile feedback capability&#x2014;some of which may be capable to output two dimensional visual output or more than three dimensional output through means such as stereographic output; virtual-reality glasses (not depicted), holographic displays and smoke tanks (not depicted)), and printers (not depicted).</p><p id="p-0231" num="0230">Computer system (<b>2300</b>) can also include human accessible storage devices and their associated media such as optical media including CD/DVD ROM/RW (<b>2320</b>) with CD/DVD or the like media (<b>2321</b>), thumb-drive (<b>2322</b>), removable hard drive or solid state drive (<b>2323</b>), legacy magnetic media such as tape and floppy disc (not depicted), specialized ROM/ASIC/PLD based devices such as security dongles (not depicted), and the like.</p><p id="p-0232" num="0231">Those skilled in the art should also understand that term &#x201c;computer readable media&#x201d; as used in connection with the presently disclosed subject matter does not encompass transmission media, carrier waves, or other transitory signals.</p><p id="p-0233" num="0232">Computer system (<b>2300</b>) can also include an interface (<b>2354</b>) to one or more communication networks (<b>2355</b>). Networks can for example be wireless, wireline, optical. Networks can further be local, wide-area, metropolitan, vehicular and industrial, real-time, delay-tolerant, and so on. Examples of networks include local area networks such as Ethernet, wireless LANs, cellular networks to include GSM, 3G, 4G, 5G, LTE and the like, TV wireline or wireless wide area digital networks to include cable TV, satellite TV, and terrestrial broadcast TV, vehicular and industrial to include CANBus, and so forth. Certain networks commonly require external network interface adapters that attached to certain general purpose data ports or peripheral buses (<b>2349</b>) (such as, for example USB ports of the computer system (<b>2300</b>)); others are commonly integrated into the core of the computer system (<b>2300</b>) by attachment to a system bus as described below (for example Ethernet interface into a PC computer system or cellular network interface into a smartphone computer system). Using any of these networks, computer system (<b>2300</b>) can communicate with other entities. Such communication can be uni-directional, receive only (for example, broadcast TV), uni-directional send-only (for example CANbus to certain CANbus devices), or bi-directional, for example to other computer systems using local or wide area digital networks. Certain protocols and protocol stacks can be used on each of those networks and network interfaces as described above.</p><p id="p-0234" num="0233">Aforementioned human interface devices, human-accessible storage devices, and network interfaces can be attached to a core (<b>2340</b>) of the computer system (<b>2300</b>).</p><p id="p-0235" num="0234">The core (<b>2340</b>) can include one or more Central Processing Units (CPU) (<b>2341</b>), Graphics Processing Units (GPU) (<b>2342</b>), specialized programmable processing units in the form of Field Programmable Gate Areas (FPGA) (<b>2343</b>), hardware accelerators for certain tasks (<b>2344</b>), graphics adapters (<b>2350</b>), and so forth. These devices, along with Read-only memory (ROM) (<b>2345</b>), Random-access memory (<b>2346</b>), internal mass storage such as internal non-user accessible hard drives, SSDs, and the like (<b>2347</b>), may be connected through a system bus (<b>2348</b>). In some computer systems, the system bus (<b>2348</b>) can be accessible in the form of one or more physical plugs to enable extensions by additional CPUs, GPU, and the like. The peripheral devices can be attached either directly to the core's system bus (<b>2348</b>), or through a peripheral bus (<b>2349</b>). In an example, the screen (<b>2310</b>) can be connected to the graphics adapter (<b>2350</b>). Architectures for a peripheral bus include PCI, USB, and the like.</p><p id="p-0236" num="0235">CPUs (<b>2341</b>), GPUs (<b>2342</b>), FPGAs (<b>2343</b>), and accelerators (<b>2344</b>) can execute certain instructions that, in combination, can make up the aforementioned computer code. That computer code can be stored in ROM (<b>2345</b>) or RAM (<b>2346</b>). Transitional data can be also be stored in RAM (<b>2346</b>), whereas permanent data can be stored for example, in the internal mass storage (<b>2347</b>). Fast storage and retrieve to any of the memory devices can be enabled through the use of cache memory, that can be closely associated with one or more CPU (<b>2341</b>), GPU (<b>2342</b>), mass storage (<b>2347</b>), ROM (<b>2345</b>), RAM (<b>2346</b>), and the like.</p><p id="p-0237" num="0236">The computer readable media can have computer code thereon for performing various computer-implemented operations. The media and computer code can be those specially designed and constructed for the purposes of the present disclosure, or they can be of the kind well known and available to those having skill in the computer software arts.</p><p id="p-0238" num="0237">As an example and not by way of limitation, the computer system having architecture (<b>2300</b>), and specifically the core (<b>2340</b>) can provide functionality as a result of processor(s) (including CPUs, GPUs, FPGA, accelerators, and the like) executing software embodied in one or more tangible, computer-readable media. Such computer-readable media can be media associated with user-accessible mass storage as introduced above, as well as certain storage of the core (<b>2340</b>) that are of non-transitory nature, such as core-internal mass storage (<b>2347</b>) or ROM (<b>2345</b>). The software implementing various embodiments of the present disclosure can be stored in such devices and executed by core (<b>2340</b>). A computer-readable medium can include one or more memory devices or chips, according to particular needs. The software can cause the core (<b>2340</b>) and specifically the processors therein (including CPU, GPU, FPGA, and the like) to execute particular processes or particular parts of particular processes described herein, including defining data structures stored in RAM (<b>2346</b>) and modifying such data structures according to the processes defined by the software. In addition or as an alternative, the computer system can provide functionality as a result of logic hardwired or otherwise embodied in a circuit (for example: accelerator (<b>2344</b>)), which can operate in place of or together with software to execute particular processes or particular parts of particular processes described herein. Reference to software can encompass logic, and vice versa, where appropriate. Reference to a computer-readable media can encompass a circuit (such as an integrated circuit (IC)) storing software for execution, a circuit embodying logic for execution, or both, where appropriate. The present disclosure encompasses any suitable combination of hardware and software.</p><p id="p-0239" num="0238">While this disclosure has described several exemplary embodiments, there are alterations, permutations, and various substitute equivalents, which fall within the scope of the disclosure. It will thus be appreciated that those skilled in the art will be able to devise numerous systems and methods which, although not explicitly shown or described herein, embody the principles of the disclosure and are thus within the spirit and scope thereof.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of media streaming in a client device, comprising:<claim-text>exchanging, with a server device, a plurality of control messages over a control plane channel that uses a first transport protocol, the plurality of control messages belonging to a control plane of a bidirectional protocol for immersive media distribution;</claim-text><claim-text>receiving, from the server device, a first plurality of data messages over a first data plane channel that uses a second transport protocol, the first plurality of data messages belonging to a data plane of the bidirectional protocol and carrying immersive media content; and</claim-text><claim-text>presenting the immersive media content carried by the first plurality of data messages.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first transport protocol is transmission control protocol (TCP) and the second transport protocol is user datagram protocol (UDP).</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first transport protocol is a connection-based transport protocol, and the second transport protocol is a connectionless transport protocol.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>setting up the first data plane channel with the server device according to the plurality of control messages exchanged over the control plane channel.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>providing one or more specific characteristics of the client device to the server device over the control plane channel, the one or more specific characteristics comprising at least one of:</claim-text><claim-text>a computing resource of the client device;</claim-text><claim-text>a storage resource of the client device;</claim-text><claim-text>a service level agreement of a network service provider at the client device;</claim-text><claim-text>an immersive application requirement;</claim-text><claim-text>a type of the client device;</claim-text><claim-text>a model of the client device; and</claim-text><claim-text>a neural network model at the client device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>transmitting, to the server device, a second plurality of data messages over a second data plane channel that uses the second transport protocol, the second plurality of data messages carrying at least one of:<claim-text>layer information of a neural network model at the client device; and</claim-text><claim-text>rendered media content by the client device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client device is a first client device, and the plurality of control messages enables the server device to share the immersive media content with a second client device.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the exchanging the plurality of control messages further comprises:<claim-text>providing, in response to a request from the server device, a list of types of assets that are sharable and uniform resource identifiers (URIs) for the assets that are cached in an immutable storage via the control plane channel.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the exchanging the plurality of control messages further comprises:<claim-text>providing, in response to a request from the server device, a status update of each asset that is accessible by the first client device via the control plane channel.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the exchanging the plurality of control messages further comprises:<claim-text>providing, in response to a request from the server device, a current state of a particular asset type and one of a particular server assigned identifier and a particular asset uniform resource identifier (URI) via the control plane channel.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. An apparatus for media streaming, comprising processing circuitry configured to:<claim-text>exchange, with a server device, a plurality of control messages over a control plane channel that uses a first transport protocol, the plurality of control messages belonging to a control plane of a bidirectional protocol for immersive media distribution;</claim-text><claim-text>receive, from the server device, a first plurality of data messages over a first data plane channel that uses a second transport protocol, the first plurality of data messages belonging to a data plane of the bidirectional protocol and carrying immersive media content; and</claim-text><claim-text>present the immersive media content carried by the first plurality of data messages.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the first transport protocol is transmission control protocol (TCP) and the second transport protocol is user datagram protocol (UDP).</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the first transport protocol is a connection-based transport protocol, and the second transport protocol is a connectionless transport protocol.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processing circuitry is configured to:<claim-text>setup the first data plane channel with the server device according to the plurality of control messages exchanged over the control plane channel.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processing circuitry is configured to:<claim-text>provide one or more specific characteristics of the apparatus to the server device over the control plane channel, the one or more specific characteristics comprising at least one of:</claim-text><claim-text>a computing resource of the apparatus;</claim-text><claim-text>a storage resource of the apparatus;</claim-text><claim-text>a service level agreement of a network service provider at the apparatus;</claim-text><claim-text>an immersive application requirement;</claim-text><claim-text>a type of the apparatus;</claim-text><claim-text>a model of the apparatus; and</claim-text><claim-text>a neural network model at the apparatus.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processing circuitry is configured to:<claim-text>transmit, to the server device, a second plurality of data messages over a second data plane channel that uses the second transport protocol, the second plurality of data messages carrying at least one of:<claim-text>layer information of a neural network model at the apparatus; and</claim-text><claim-text>rendered media content by the apparatus.</claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the apparatus is a first client device, and the plurality of control messages enables the server device to share the immersive media content with a second client device.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processing circuitry is configured to:<claim-text>provide, in response to a request from the server device, a list of types of assets that are sharable and uniform resource identifiers (URIs) for the assets that are cached in an immutable storage via the control plane channel.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processing circuitry is configured to:<claim-text>provide in response to a request from the server device, a status update of each asset that is accessible by the first client device via the control plane channel.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processing circuitry is configured to:<claim-text>provide, in response to a request from the server device, a current state of a particular asset type and one of a particular server assigned identifier and a particular asset uniform resource identifier (URI) via the control plane channel.</claim-text></claim-text></claim></claims></us-patent-application>