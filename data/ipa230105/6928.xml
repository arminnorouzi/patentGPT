<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006929A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006929</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943147</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>745</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>028</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>66</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>49</main-group><subgroup>35</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>302</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>745</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>028</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>66</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>4633</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0272</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0281</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>49</main-group><subgroup>35</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>029</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>306</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD AND SYSTEM OF APPLICATION-AWARE ROUTING WITH CROWDSOURCING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16699719</doc-number><date>20191201</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11444872</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943147</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15407767</doc-number><date>20170117</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10498652</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16699719</doc-number></document-id></child-doc></relation></continuation><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>15097282</doc-number><date>20160412</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10135789</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>15407767</doc-number></document-id></child-doc></relation></continuation-in-part><us-provisional-application><document-id><country>US</country><doc-number>62146786</doc-number><date>20150413</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Nicira, Inc.</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Mayya</last-name><first-name>Ajit Ramachandra</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Thakore</last-name><first-name>Parag Pritam</first-name><address><city>Los Gatos</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Connors</last-name><first-name>Stephen Craig</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Mukundan</last-name><first-name>Sunil</first-name><address><city>Chennai</city><country>IN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Speeter</last-name><first-name>Thomas Harold</first-name><address><city>San Martin</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In one aspect, a computerized method of an application routing service includes the step of using a deep-packet inspection (DPI) technique on a first network flow to identify an applications The method includes the step of storing an Internet-protocol (IP) address and a port number used by the application and an identity of the application in a databases The method includes the step of detecting a second network flow. The method includes the step of identifying the IP address and the port number of the application in the second network flow. The method includes the step of looking up the IP address and the port number in the database. The method includes the step of identifying the application based on the IP address and the port number.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="181.36mm" wi="144.53mm" file="US20230006929A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="197.53mm" wi="157.73mm" file="US20230006929A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="200.24mm" wi="161.80mm" file="US20230006929A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="168.06mm" wi="157.73mm" file="US20230006929A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="216.15mm" wi="151.47mm" file="US20230006929A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="201.34mm" wi="155.53mm" file="US20230006929A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="201.34mm" wi="155.19mm" file="US20230006929A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="207.43mm" wi="146.56mm" file="US20230006929A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="236.90mm" wi="144.02mm" file="US20230006929A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="229.79mm" wi="156.38mm" file="US20230006929A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="199.73mm" wi="182.63mm" file="US20230006929A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a claims priority and is a continuation of U.S. application Provisional Ser. No. 15/097,282 filed on Apr. 12, 2016. U.S. patent application Ser. No. 15/097,282 claims priority from U.S. Provisional Patent Application No. 62/146,786 filed 13 Apr. 2015. This application is hereby incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">This application relates generally to computer networking, and more specifically to a system, article of manufacture and method of establishing a cloud-based multipath routing protocol.</p><heading id="h-0003" level="1">DESCRIPTION OF THE RELATED ART</heading><p id="p-0004" num="0003">Deep-packet inspection (DPI) can be used to identify an application is inside a data flow. For example, a voice-call service (e.g. Skype&#xae;, etc.) application can be executed. Various routing decisions can be implemented based on the identity of the application. However, a DPI engine may not be able to identify the voice-call service application from the first packet. For example, this can be a TCP send to set up a connection. If a networking system wishes to make a routing decision (e.g. use a specific wide-area network (WAN) link for a Skype&#xae; call, etc.), it may not be able to do so on the first packet. The decision must wait until after the until the voice-call service protocol starts passing back and forth and the DPI engine identifies the voice-call service application signature. Accordingly, improvements to application-aware routing are desired.</p><heading id="h-0004" level="1">BRIEF SUMMARY OF THE INVENTION</heading><p id="p-0005" num="0004">In one aspect, a computerized method of an application routing service includes the step of using a deep-packet inspection (DPI) technique on a first network flow to identify an application. The method includes the step of storing an Internet-protocol (IP) address and a port number used by the application and an identity of the application in a database. The method includes the step of detecting a second network flow. The method includes the step of identifying the IP address and the port number of the application in the second network flow. The method includes the step of looking up the IP address and the port number in the database. The method includes the step of identifying the application based on the IP address and the port number.</p><p id="p-0006" num="0005">In another aspect, A computerized method useful for implementing an application routing service includes the step of extracting from a data packet of a network flow a layer three (3) information and a layer four (4) information. The method includes the step of querying a local application routing cache to obtain an application name based on the layer three (3) information and the layer four (4) information. The method includes the step of providing a routing decision based on the application name.</p><p id="p-0007" num="0006">In yet another aspect, a computerized method useful for implementing an application routing service includes, with an edge device, using deep-packet inspection (DPI) to identify a network flow, wherein the network flow is identified with an Internet protocol (IP) identity and a port number of the network flow. The edge device stores the IP identity and the port number of the network flow in a local application routing database. The edge device reports the IP identity and the port number to a specified Orchestrator. Another edge device requests the IP identity and the port number from the specified Orchestrator. The other edge device receives the IP identity and the port number from the specified Orchestrator. The other edge device identifies an application in another network flow using the IP identity and the port number.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example self-healing network with redundant gateways, according to some embodiments.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example system that includes autonomous gateways, according to some embodiments</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a system of an instant VPN, according to some embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates another example of a system of an instant VPN, according to some embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>5</b>A-B</figref> illustrates an example of a system of a cloud multipath to an Internet endpoint, according to some embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example process of an application-aware routing, according to some embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates another example process of an application-aware routing, according to some embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates application-aware routing with crowdsourcing, according to some embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts an exemplary computing system that can be configured to perform any one of the processes provided herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0017" num="0016">The Figures described above are a representative set, and are not exhaustive with respect to embodying the invention.</p><heading id="h-0006" level="1">DESCRIPTION</heading><p id="p-0018" num="0017">Disclosed are a system, method, and article of manufacture for application-aware routing with crowdsourcing. The following description is presented to enable a person of ordinary skill in the art to make and use the various embodiments. Descriptions of specific devices, techniques, and applications are provided only as examples. Various modifications to the examples described herein can be readily apparent to those of ordinary skill in the art, and the general principles defined herein may be applied to other examples and applications without departing from the spirit and scope of the various embodiments.</p><p id="p-0019" num="0018">Reference throughout this specification to &#x201c;one embodiment,&#x201d; &#x201c;an embodiment,&#x201d; &#x2018;one example,&#x2019; or similar language means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, appearances of the phrases &#x201c;in one embodiment,&#x201d; &#x201c;in an embodiment,&#x201d; and similar language throughout this specification may, but do not necessarily, all refer to the same embodiment.</p><p id="p-0020" num="0019">Furthermore, the described features, structures, or characteristics of the invention may be combined in any suitable manner in one or more embodiments. In the following description, numerous specific details are provided, such as examples of programming, software modules, user selections, network transactions, database queries, database structures, hardware modules, hardware circuits, hardware chips, etc., to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art can recognize, however, that the invention may be practiced without one or more of the specific details, or with other methods, components, materials, and so forth. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.</p><p id="p-0021" num="0020">The schematic flow chart diagrams included herein are generally set forth as logical flow chart diagrams. As such, the depicted order and labeled steps are indicative of one embodiment of the presented method. Other steps and methods may be conceived that are equivalent in function, logic, or effect to one or more steps, or portions thereof, of the illustrated method. Additionally, the format and symbols employed are provided to explain the logical steps of the method and are understood not to limit the scope of the method. Although various arrow types and line types may be employed in the flow chart diagrams, and they are understood not to limit the scope of the corresponding method. Indeed, some arrows or other connectors may be used to indicate only the logical flow of the method. For instance, an arrow may indicate a waiting or monitoring period of unspecified duration between enumerated steps of the depicted method. Additionally, the order in which a particular method occurs may or may not strictly adhere to the order of the corresponding steps shown.</p><p id="p-0022" num="0021">Definitions</p><p id="p-0023" num="0022">Example definitions for some embodiments are now provided.</p><p id="p-0024" num="0023">Cloud computing can involve deploying groups of remote servers and/or software networks that allow centralized data storage and online access to computer services or resources. These groups of remote servers and/or software networks can be a collection of remote computing services.</p><p id="p-0025" num="0024">Cloud Edge (CE) can include a cloud multipath to an Internet endpoint.</p><p id="p-0026" num="0025">Customer-premises equipment (CPE) can be any terminal and associated equipment located at a subscriber's premises and connected with a carrier's telecommunication channel at the demarcation point.</p><p id="p-0027" num="0026">Edge device can be a device that provides an entry point into enterprise or service provider core networks. An edge device can be software running in a virtual machine (VM) located in a branch office and/or customer premises.</p><p id="p-0028" num="0027">Flow can be a grouping of packets that match a five (5) tuple which is a combination of Source IP Address (SIP), Destination IP Address (DIP), L4 Source Port (SPORT) and L4 Destination Port (DPORT) and the L4 protocol (PROTO).</p><p id="p-0029" num="0028">Forward error correction (FEC) (e.g. channel coding) can be a technique used for controlling errors in data transmission over unreliable or noisy communication channels.</p><p id="p-0030" num="0029">Deep learning can be a type of machine learning based on a set of algorithms that attempt to model high-level abstractions in data by using model architectures, with complex structures or otherwise, composed of multiple non-linear transformations</p><p id="p-0031" num="0030">Deep Packet Inspection (DPI) can be the ability to analyze the different layers of a packet on the network.</p><p id="p-0032" num="0031">Gateway can be a node (e.g. a route) on a computer network that serves as an access point to another network.</p><p id="p-0033" num="0032">Internet Protocol Security (IPsec) can be a protocol suite for securing Internet Protocol (IP) communications by authenticating and encrypting each IP packet of a communication session.</p><p id="p-0034" num="0033">Multipath routing can be a routing technique of using multiple alternative paths through a network.</p><p id="p-0035" num="0034">Multilink bundle can be a collection of simultaneously opened bandwidth channels that are coherently and logically controlled by preset commands.</p><p id="p-0036" num="0035">Multiprotocol Label Switching (MPLS) can be a mechanism in telecommunications networks that directs data from one network node to the next based on short path labels rather than long network addresses, thus avoiding complex lookups in a routing table.</p><p id="p-0037" num="0036">Orchestrator can include a software component that provides multi-tenant and role based centralized configuration management and visibility.</p><p id="p-0038" num="0037">Quality of Service (QoS) can include the ability to define a guaranteed set of actions such as routing, resource constraints (e.g. bandwidth, latency etc.).</p><p id="p-0039" num="0038">Session can be a semi-permanent interactive information interchange between two or more communicating devices.</p><p id="p-0040" num="0039">Software as a service (SaaS) can be a software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted.</p><p id="p-0041" num="0040">Tunneling protocol can allow a network user to access or provide a network service that the underlying network does not support or provide directly.</p><p id="p-0042" num="0041">Virtual Desktop infrastructure (VDI) is a desktop-oriented service that hosts user desktop environments on remote servers and/or blade PCs. Users access the desktops over a network using a remote display protocol.</p><p id="p-0043" num="0042">Virtual private network (VPN) can extend a private network across a public network, such as the Internet. It can enable users to send and receive data across shared or public networks as if their computing devices were directly connected to the private network, and thus benefit from the functionality, security and management policies of the private network.</p><p id="p-0044" num="0043">Voice over IP (VoIP) can a methodology and group of technologies for the delivery of voice communications and multimedia sessions over Internet Protocol (IP) networks, such as the Internet.</p><p id="p-0045" num="0044">Additional example definitions are provided herein.</p><p id="p-0046" num="0045">Scalable, Self-Healing Network Cloud Service for Branch Networking</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example self-healing network <b>100</b> with redundant gateways, according to some embodiments. In network <b>100</b>, data traffic can be routed to different gateways for different purposes. Multiple gateways can serve the same destination utilizing dynamic routing protocol. As services (e.g. SaaS <b>102</b>) in the Internet (e.g. computer networks <b>104</b>) may not centrally located. The combination of the Internet's wide distribution of services and/or changes in the transport quality across can lead to the use of different egress points to access different destinations. This is accomplished by deploying multiple gateways (e.g. gateways A-B <b>106</b>-<b>108</b>) in stand-alone or redundant configurations.</p><p id="p-0048" num="0047">An Orchestrator can inform each edge device (e.g. VCE <b>110</b>) of a list of gateways it has been assigned. Additionally, routes and/or services can be assigned a subset of the gateway list that can be used for communication with a specific destination. The edge device can then perform a static determination by metrics assigned to each gateway. For example, each gateway can be assigned a metric based on geographic distance from the edge and/or a dynamic determination based on empirically measured loss, latency and/or jitter to the gateway across the Internet.</p><p id="p-0049" num="0048">In the redundant configuration of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, gateways A-B <b>106</b>-<b>108</b> can support dynamic routing protocols on the non-edge device side. This can ensure that the gateway chosen for traffic destined from the edge to the gateway is also advertised from the gateway upstream as the route with the lowest cost for return traffic. Various attributes of gateways are now discussed.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example system <b>200</b> that includes autonomous gateways, according to some embodiments. Gateway High Availability (HA) and horizontal scalability can be inherent as configuration is edge-driven and not configured on gateway <b>204</b>. Edge tunnel initialization can configure, gateway <b>204</b>. Edge devices <b>208</b> A-B can communicate QoS information to gateway <b>204</b> so they have information on how to treat network traffic. Implementing versioning in the flow header can ensures that gateway <b>204</b> have the correct QoS information. This is accomplished by creating flows with a version number of one (1) on the edge and incrementing this version every time a policy change is enacted on the edge. If the gateway receives a message with a higher than expected version number in the header, it will request the edge to send the updated policy information.</p><p id="p-0051" num="0050">It is noted that each individual gateway is a self-contained autonomous entity. This is accomplished by driving configuration of gateway <b>204</b> through the edge devices <b>208</b> A-B rather than gateway <b>204</b> being directly configured by the Orchestrator. In the initial negotiation, edge devices <b>208</b> A-B can send an MP_INIT message (e.g. an initial MP tunnel establishment handshake message exchange between the edge device and the gateway device) which contains all the information needed to identify the edge device and serve as a secure and unsecure gateway for edge device traffic. This can include a logical identifier for the enterprise which is used for virtual routing and/or forwarding. The logical identifier can also be used for subnets that are routable behind edge devices <b>208</b> A-B.</p><p id="p-0052" num="0051">If edge devices <b>208</b> A-B is the first edge device belonging to the enterprise to connect to gateway <b>204</b>, a new virtual routing and forwarding (VRF) table can be created for the enterprise. Edge devices <b>208</b> A-B's subnets can be inserted into the enterprise VRF. If edge devices <b>208</b> A-B are not the first from an enterprise to connect, the enterprise logical identifier can be used to index into the existing VRF and edge devices <b>208</b> A-B's subnets can be added to the existing table.</p><p id="p-0053" num="0052">In another example, when a new flow is created on an edge device, the parameters used to perform QoS and/or routing on the flow can be transmitted along with the first packet to any of the gateway <b>204</b> that are handling the flow. In this manner gateway <b>204</b> can be inherently highly available. If the gateway service is removed and replaced with a new gateway service instance, edge devices <b>208</b> A-B can send a new MP_INIT which can recreate the VRF and then continue sending data traffic uninterrupted through the gateway.</p><p id="p-0054" num="0053">By this same token, gateway <b>204</b> can be highly available because the edge can switch between gateways without interrupting customer traffic. For example, when an Orchestrator inserts an additional gateway in a gateway list that can be assigned an edge device. The edge device can then connect and begin using the gateway seamlessly without any requirement for Orchestrator to gateway communication. This removes the need for the Orchestrator to synchronize configuration changes on the edge device and the gateway as the edge device is used as the intermediary.</p><p id="p-0055" num="0054">In another example, a gateway need not be a single gateway instance but the Internet Protocol (IP) address may be the external facing IP address of a gateway load balancer. The gateway load balancer can start and stop individual gateway instances. If the gateway load balancers detect that an instance is near its CPU and/or throughput capacity, it can shift traffic to an alternate gateway transparently and/or create a new gateway and begin steering connections to it. When gateway reboots, upgrades or maintenance are required, the gateway load balancer can steer traffic away from those instances that require maintenance to make these operations transparent to the end user.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a system <b>300</b> of an instant VPN, according to some embodiments. The edge device (e.g. edge devices <b>306</b>-<b>310</b>) and gateway <b>304</b> can automatically negotiate IPsec tunnels alongside their unsecure Velocloud Multipath Protocol (VCMP) tunnels in preparation for the transmission of secure traffic. This can be performed irrespective of whether or not a VPN has been enabled on the device. In this manner, the network can be prepared to transmit secure traffic at any time. Leveraging this, an &#x201c;Instant VPN&#x201d; can be delivered by toggling VPN on or off on Orchestrator <b>302</b>. Each edge device has a list of local subnets that are sent to gateway <b>304</b> during MP_INIT. Each subnet is can include an indication of whether or not it is reachable over VPN. When VPN is enabled on Orchestrator <b>302</b>, each edge device can be informed that its subnets are reachable over VPN and each edge device can update its gateways with this information. When VPN is disabled on Orchestrator <b>302</b>, each edge device can be informed that its subnets are not reachable over VPN. The edge device can update gateway <b>304</b> accordingly.</p><p id="p-0057" num="0056">Between each edge device and its associated gateways can be a routing protocol. The routing protocol can relay state information to peers that are one hop away. For example, edge device A <b>306</b> can have a subnet A. Edge device B <b>308</b> can have subnet B. When the user enables VPN on Orchestrator <b>302</b>, edge device A <b>306</b> and edge device B <b>308</b> can inform the gateways that their local subnets A and Bare reachable over VPN. The gateway(s) can then inform peers in the enterprise VRF. In this way, a message can be sent to edge device B <b>308</b> instructing it that subnet A is now reachable through it. A message can also be sent to edge device A <b>306</b> instructing it that subnet B is now reachable through it. When an edge device loses connectivity to a gateway, gateway <b>304</b> can relay to peers in the VRF that the subnet is no longer reachable and the edge device updates the routing/forwarding table to mark all routes via that unreachable gateway. In this way, gateways can be added or removed, and/or routes added and removed, without restarts and/or loss of connectivity assuming at least one gateway is connected at all times.</p><p id="p-0058" num="0057">In some examples, &#x201c;Always on&#x201d; IPsec tunnels can be provided. Enable/disable VPN operations can include the insertion and/or removal of routes for the appropriate VPN zone. VRF can include enterprise logical identifier on gateway ensuring multi-tenancy.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates another example of a system <b>400</b> of an instant VPN, according to some embodiments. A special edge device called a Datacenter Edge (DCE) <b>404</b> can be deployed as customer premise equipment. DCE <b>404</b> can be deployed in an enterprise data center, along with Orchestrator <b>402</b>, DCE <b>404</b> can subsume some of the functionality of the gateway, including this route protocol management. A typical use case for this deployment can be in a pure MPLS network <b>406</b> in which there are no public Internet links and thus no public Internet gateways. In one example, route propagation can occur the same as described supra except that the VRF and routing protocol messages are managed by DCE <b>404</b>. MPLS network <b>406</b> can connect with edge devices <b>408</b>-<b>412</b>.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIGS. <b>5</b>A-B</figref> illustrate an example of system <b>500</b> of a cloud-based multipath routing technique to an Internet endpoint (e.g. a cloud edge <b>516</b>), according to some embodiments. Edge device <b>506</b> and gateway <b>518</b> can implement a multipath solution to deliver a reliable connection across the public Internet for outbound connections (e.g. between server <b>508</b> and client <b>502</b>) initiated from the edge (e.g. edge device <b>506</b>) through gateway <b>518</b>, as well as for their return traffic. This can include multilink bundle(s). An alternate use case can include when the network traffic is initiated from an outside source. For example, the network traffic can be initiated from the Internet to server <b>508</b> in a branch office behind edge device <b>506</b>.</p><p id="p-0061" num="0060">In an example deployment, this can be implemented by enabling a set of inbound firewall rules that allow network traffic in one or more of the wide area network (WAN) links attached to the edge device. Such an inbound connection can use a single link. For example, a session established on link A <b>510</b> may fail if link A <b>510</b> fails, and similarly for link B <b>512</b>. Therefore, there is a desire to be able to support inbound connections reliably without compromising the security of the deployment.</p><p id="p-0062" num="0061">This can be achieved by cloud edge (CE) device <b>516</b>. CE <b>516</b> can be implemented in a cloud-computing environment. CE <b>516</b> can join the same VRF as that of edge device <b>506</b>.</p><p id="p-0063" num="0062">Edge device <b>506</b> can be used to accesses various resources (e.g. server <b>508</b>) to be reliably accessed. In one example, edge device <b>505</b> can be set to deny inbound traffic by default. Edge device <b>506</b> can allow an administrator to specify various sources and destinations of traffic that are permitted (e.g. client <b>502</b>).</p><p id="p-0064" num="0063">For example, a rule could be created that enable the public IP address of a client <b>502</b> to reach server <b>508</b> via a public IP address <b>514</b>. Public IP address <b>514</b> can be assigned to the &#x201c;LAN&#x201d; side of CE <b>516</b>. The administrator can then connect to public IP address <b>514</b> in the cloud rather than the IP address of one of the links at the site directly. Client <b>502</b> can then securely connect over a VPN to server <b>508</b> inside the network. CE <b>516</b> can be located anywhere in the (e.g. public) Internet <b>504</b>. In one example, CE <b>516</b> can be located in any of a public Cloud Service Providers (CSPs). For example, CE <b>516</b> can be implemented in a proprietary cloud-computing platform such as, inter alia, Amazon EC2&#xae; and the like. It is noted that resources from Server <b>508</b> may arrive via Link A <b>510</b> and/or Link B <b>512</b>. Accordingly, this traffic can continue even if one of the links completely fails. In this way, system <b>500</b> can provide resiliency for the network as Link A <b>510</b> and/or Link B <b>512</b> can be used simultaneously and service can continue even if one of the links fails.</p><p id="p-0065" num="0064">An intelligent edge device (e.g. edge device <b>506</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>) can provide intelligent QoS. For example, applications may respond differently to key network parameters like latency, jitter, bandwidth, packet loss and processing capabilities such as available CPU cycles. For example, a VoIP application may use low bandwidth and may be sensitive to jitter, packet loss. The VoIP application may also consume a large number of CPU cycles despite the low throughput (e.g. because of smaller packet sizes). In contrast, VDI may use high bandwidth and low latency but may not very sensitive to jitter. Accordingly, a network stack can implement a suite of link optimization and remediation technologies to achieve the dual goal of optimal network resource utilization and remediating adverse network events, such as, inter alia: FEC to compensate for packet loss; jitter buffering to counter jitter; and per-packet load balancing to aggregate bandwidth usage and ensure the lowest latency path.</p><p id="p-0066" num="0065">Smart QoS can map application flow into a traffic class and priority queue. A combination of the traffic class and priority queue can then decide the optimal routing, load balancing and remediation to be used for that flow given the prevailing network conditions at that point of time. The network stack can use the following innovations to adapt to dynamic network conditions:</p><p id="p-0067" num="0066">In an intelligent default, the distributed management plane (e.g. an Orchestrator) sets up the edge device with a set of default QoS settings for each application. Each application can then be tagged with an SLA. The SLA can indicate a hint to the edge device for the prioritization and/or sensitivity for that particular application.</p><p id="p-0068" num="0067">In an intelligent pre-emption, a multi-tenant, geo-diverse, network transport agnostic overlay network can be implemented. This can create a situation where the network can pre-empt adverse and/or localized network events by statistical and heuristics based analysis of the network monitoring data that is collected at the Orchestrator. This can remediate certain network conditions that are not addressed by adaptive QoS (e.g. tail drops which result in large number of packets dropped indiscriminately in the core of a service provider network) due to time taken to adapt and the fact that such a loss cannot be really compensated. In a geo-localized region, in the event of constant tail drops for a network service provider, the service can proactively turn on aggressive FEC (e.g. &#x2018;always-on FEC&#x2019;) for sensitive applications in both the specific geo-location. In one example, a slightly larger geography for sites that are using the same provider can be used in lieu of the specific geo-location. The &#x2018;always-on FEC&#x2019; can also be configured at the Orchestrator in order to pre-empt network errors and react faster to network errors.</p><p id="p-0069" num="0068">Adaptive QoS can be implemented by monitoring and/or instrumenting network paths. For example, adaptive QoS can be implemented to remediate a network condition that may not conform to the configured SLA for that application. To offset the overheads as a result of the continuous monitoring, the QoE (e.g. user responsiveness) can be periodically or constantly computed to reduce/augment the network monitoring.</p><p id="p-0070" num="0069">Smart QoS can utilize deep learning methods. In addition to responding to dynamic network conditions, the smart QoS can work in tandem with application performance monitoring (APM) to adjust traffic priority based on L7 data. When the DPI engine fails to identify the application, the network stack can utilize statistical parameters (e.g. packet arrival rate, throughput) and heuristics (e.g. User Datagram Protocol (UDP) can be used by real-time applications) to identify the right set of technologies to provide the best performance.</p><p id="p-0071" num="0070">A slow learning with crowdsourcing example is now discussed. Slow learning (e.g. to implement application-aware routing) with crowdsourcing methods can include generating a prepopulated list of well-known applications augmented by mid-flow detected data from a DPI engine. This can enable determination of an application with a first-received packet. Prepopulated data is automatically validated by a DPI engine. Any changes can be fed back locally as well as communicated to the Orchestrator. Some or all data can be shared to other edges/enterprises via the Orchestrator. In one example, L3, L4 network information can be used to create a composite application-routing database. As used herein, L3 network information can include network layer (layer 3) information. As used herein, L4 network information can include transport layer (layer 4) information. The application-routing database (e.g. a local application routing cache, etc.) can be populated by three different types of learning/sources. The first source of information built into the database can include a pre-populated map of DIP/DPORT (Destination Internet Protocol Address/Destination Port Number) to application types (e.g. termed fast learning). A second source of information can include a map of DIP/DPORT to applications that is learned from &#x2018;mid-flow&#x2019; application detection by the DPI engine (e.g. slow learning). The third source of information can also include a map of DIP/DPORT to application names. This can include crowd-sourced (e.g. DIP/OPORT to application name mapping) information that is anonymized and aggregated at the Orchestrator. This mapping can then be shared across different enterprises (e.g. crowd-sourced learning).</p><p id="p-0072" num="0071">Various methods of populating, updating and recovering the application-routing database are now provided. The application-routing database can be pre-populated with the set of known applications that can be identified by the DIP/DPORT and/or packaged as a part of the CPE. Alternatively, it can be downloaded from the Orchestrator. Additionally, an IT Administrator may enter customized DIP/DPORT to application mappings which can be added to the application routing database in the edge device via the Orchestrator. This method can be a component of fast learning.</p><p id="p-0073" num="0072">The application-routing database can also be updated by &#x2018;mid-flow&#x2019; DPI detection data as a result of slow learning methods on the edge device. In addition to this, the fast learning data and slow learning updates from different enterprises can be anonymized and/or aggregated at the Orchestrator. It can be sent down to all the edge device(s) under the management of the Orchestrator. These updates can be part of the crowd-sourced learning methods.</p><p id="p-0074" num="0073">An example application-routing database recovery method is now provided. When an edge device first communicates with the Orchestrator, it can receive the data for pre-population of the application-routing database. This information can include any updates. Updates from slow learning and/or crowd-sourced learning can be synchronized to shared memory areas in the edge device. The updates can be recovered from service outages.</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example process <b>600</b> of an applications-aware routing, according to some embodiments. In step <b>602</b>, the layer 3 (L3) and/or layer 4 (L4) information is extracted and matched against the application routing database (e.g. database in <figref idref="DRAWINGS">FIG. <b>6</b></figref>). In step <b>604</b>, if this flow does not find a match in the database, then process <b>600</b> moves to step <b>608</b>. If &#x2018;yes&#x2019;, then process <b>600</b> moves to step <b>606</b>. In step <b>606</b>, the matched application is used to look-up and apply the application specific routing policies. In step <b>608</b>, on failure to find a match in the database, the flow is passed over to the DPI engine. The classification from the DPI engine is used to populate the database for future flows. The current flow may obtain some default routing policies as well. In this way, when the same application flow is encountered again, it can find a successful match in database. The application specific routing policy can then be applied for that application flow. A worst-case guarantee of application routing from the second flow can be provided in some examples. It is noted that in the seven-layer OSI model of computer networking, the network layer is L3 and the transport layer is L4.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates another example process <b>700</b> of an application-aware routing, according to some embodiments. For example, in an alternative step <b>608</b>, the L3, L4 information can be communicated to an application routing lookup service (e.g. can be a local service synchronized with an aggregated crowd source updated remote service running in the Orchestrator like DNS). In one embodiment, an application-routing database can reside in the Orchestrator. At set intervals (e.g. every thirty (30) seconds, etc.) the edge-device can request the current state of the application-routing database from the Orchestrator and update the local application routing database. Optionally, the cached entries can be expired using a TTL (Time-to-Live) value.</p><p id="p-0077" num="0076">In step <b>702</b>, at a specified period, process <b>700</b> can request the current state of the application-routing database from the orchestrator and update the local application routing database. In step <b>704</b>, L3, L4 information is extracted from a packet and a query is made to the local application routing database to identify application name. In step <b>706</b>, it can be determined whether step <b>704</b> successful? If &#x2018;no&#x2019;, then process <b>700</b> use a default routing policy in step <b>708</b>. If &#x2018;yes&#x2019;, then the application name that was matched is used to make a routing decision in step <b>710</b>. In step <b>712</b>, process <b>700</b> can continue to test the flow with the DPI engine for the veracity of the application type. In case of a mismatch send a message to the orchestrator informing the mismatch, the orchestrator then decides whether to change the corresponding entry based similar updates from other crowd-sourced participants. In step <b>714</b>, the flow is passed over to the dpi engine and the classification from the dpi engine is used to populate the local application routing cache and send a message to the orchestrator to add an entry.</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates application-aware routing with crowdsourcing, according to some embodiments. In step <b>802</b>, process <b>800</b> can use DPI to identify a network flow. In step <b>804</b>, process <b>800</b> store internet protocol (IP) identity and port number of the network flow. In step <b>806</b>, process <b>800</b> report learned IP identity and port number to an applicable Orchestrator. In step <b>808</b>, process <b>800</b> another edge requests the updated IP identity and port number and receives it. In step <b>810</b>, process <b>800</b> the IP identity and port number is received on the other edge and matches the application routing database now even though it has never seen that packet locally or implemented DPI.</p><p id="p-0079" num="0078">Additional Exemplary Computer Architecture and Systems</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts an exemplary computing system <b>900</b> that can be configured to perform any one of the processes provided herein. In this context, computing system <b>900</b> may include, for example, a processor, memory, storage, and I/O devices (e.g., monitor, keyboard, disk drive, Internet connection, etc.). However, computing system <b>900</b> may include circuitry or other specialized hardware for carrying out some or all aspects of the processes. In some operational settings, computing system <b>900</b> may be configured as a system that includes one or more units, each of which is configured to carry out some aspects of the processes either in software, hardware, or some combination thereof.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts computing system <b>900</b> with a number of components that may be used to perform any of the processes described herein. The main system <b>902</b> includes a motherboard <b>904</b> having an I/O section <b>906</b>, one or more central processing units (CPU) <b>908</b>, and a memory section <b>910</b>, which may have a flash memory card <b>912</b> related to it. The I/O section <b>906</b> can be connected to a display <b>914</b>, a keyboard and/or other user input (not shown), a disk storage unit <b>916</b>, and a media drive unit <b>918</b>. The media drive unit <b>918</b> can read/write a computer-readable medium <b>920</b>, which can contain programs <b>922</b> and/or data. Computing system <b>900</b> can include a web browser. Moreover, it is noted that computing system <b>900</b> can be configured to include additional systems in order to fulfill various functionalities. Computing system <b>900</b> can communicate with other computing devices based on various computer communication protocols such a Wi-Fi, Bluetooth&#xae; (and/or other standards for exchanging data over short distances includes those using short-wavelength radio transmissions), USB, Ethernet, cellular, an ultrasonic local area communication protocol, etc.</p><heading id="h-0007" level="1">CONCLUSION</heading><p id="p-0082" num="0081">Although the present embodiments have been described with reference to specific example embodiments, various modifications and changes can be made to these embodiments without departing from the broader spirit and scope of the various embodiments. For example, the various devices, modules, etc. described herein can be enabled and operated using hardware circuitry, firmware, software or any combination of hardware, firmware, and software (e.g., embodied in a machine-readable medium).</p><p id="p-0083" num="0082">In addition, it can be appreciated that the various operations, processes, and methods disclosed herein can be embodied in a machine-readable medium and/or a machine accessible medium compatible with a data processing system (e.g., a computer system), and can be performed in any order (e.g., including using means for achieving the various operations). Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. In some embodiments, the machine-readable medium can be a non-transitory form of machine-readable medium.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-16" num="01-16"><claim-text><b>1</b>-<b>16</b>. (canceled)</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A method of routing data messages through a network defined by a plurality of edge devices deployed at a plurality of sites of an entity and a gateway deployed at a different site than the plurality of sites, the method comprising:<claim-text>at a first edge device:<claim-text>receiving a first flow;</claim-text><claim-text>performing a deep packet inspection (DPI) operation to identify an application associated with the first flow;</claim-text><claim-text>based on the identified application, performing a routing decision to forward the first flow through the network.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the routing decision comprises selecting a particular link from a plurality of links for the first flow based on the identified application.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> further comprising storing an application identifier that identifies the application in a local storage for use to process all packets of the first flow.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00019">claim 19</claim-ref> further comprising sending the application identifier to a second edge device for the second edge device to use.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The method of <claim-ref idref="CLM-00019">claim 19</claim-ref> further comprising:<claim-text>creating a record that associates an Internet Protocol (IP) address and a port number of the first flow with the application identifier;</claim-text><claim-text>said record stored in the local storage;</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref> further comprising sending the record to a second edge device to use to associate a second flow received by the second edge device with the application identifier by matching an IP address and port number of the second flow with the IP address and port number in the record.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the IP address and port number are destination IP address and port number of the first flow.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref> further comprising:<claim-text>passing records from the local storage to a set of crowd-sourced participants;</claim-text><claim-text>receiving records from local storages of other crowd-sourced participants to use to perform routing decisions.</claim-text></claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref> further comprising:<claim-text>at a specified period, requesting a latest version of application routing data from an Orchestrator; and</claim-text><claim-text>updating the local storage with the latest version of application routing data from the Orchestrator,</claim-text><claim-text>wherein the Orchestrator provides a centralized management of the edge devices.</claim-text></claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein performing DPI comprises passing the first flow to a DPI Engine to perform the DPI operation.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. A non-transitory machine readable medium storing a program for execution on a first edge device of a network to route data messages through a network defined by a plurality of edge devices deployed at a plurality of sites of an entity, the program comprising sets of instructions for:<claim-text>receiving a first flow;</claim-text><claim-text>performing a deep packet inspection (DPI) operation to identify an application associated with the first flow;</claim-text><claim-text>based on the identified application, performing a routing decision to forward the first flow through the network.</claim-text></claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the routing decision comprises selecting a particular link from a plurality of links for the first flow based on the identified application.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref> further comprising storing an application identifier that identifies the application in a local storage for use to process all packets of the first flow.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00019">claim 19</claim-ref> further comprising sending the application identifier to a second edge device for the second edge device to use.</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00019">claim 19</claim-ref> further comprising:<claim-text>creating a record that associates an Internet Protocol (IP) address and a port number of the first flow with the application identifier;</claim-text><claim-text>said record stored in the local storage;</claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref> further comprising sending the record to a second edge device to use to associate a second flow received by the second edge device with the application identifier by matching an IP address and port number of the second flow with the IP address and port number in the record.</claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the IP address and port number are destination IP address and port number of the first flow.</claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref> further comprising:<claim-text>passing records from the local storage to a set of crowd-sourced participants;</claim-text><claim-text>receiving records from local storages of other crowd-sourced participants to use to perform routing decisions.</claim-text></claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref> further comprising:<claim-text>at a specified period, requesting a latest version of application routing data from an Orchestrator; and</claim-text><claim-text>updating the local storage with the latest version of application routing data from the Orchestrator,</claim-text><claim-text>wherein the Orchestrator provides a centralized management of the edge devices.</claim-text></claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. The non-transitory machine readable medium of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the set of instructions for performing DPI comprises a set of instructions for passing the first flow to a DPI Engine to perform the DPI operation.</claim-text></claim></claims></us-patent-application>