<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004835A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004835</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17454838</doc-number><date>20211115</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>08</class><subclass>B</subclass><main-group>21</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>08</class><subclass>B</subclass><main-group>21</main-group><subgroup>182</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">MACHINE-LEARNING-BASED TECHNIQUES FOR DETERMINING RESPONSE TEAM PREDICTIONS FOR INCIDENT ALERTS IN A COMPLEX PLATFORM</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63202924</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>ATLASSIAN PTY LTD</orgname><address><city>Sydney</city><country>AU</country></address></addressbook><residence><country>AU</country></residence></us-applicant><us-applicant sequence="01" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>ATLASSIAN, INC.</orgname><address><city>San Franciscos</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>SAWHNEY</last-name><first-name>Mayank</first-name><address><city>Hyderabad</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>RAO</last-name><first-name>Shashank Prasad</first-name><address><city>Noida</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>PRASAD</last-name><first-name>Akshar</first-name><address><city>Bengaluru</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>KHANDELWAL</last-name><first-name>Saloni</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Various embodiments of the present invention provide methods, apparatuses, systems, computing devices, and/or the like that are configured accurately and programmatically train a responder prediction machine learning model for generating response team predictions based on the systematic collection of one or more responder prediction training corpuses comprising one or more alert related datasets in a responder prediction server system. For example, the responder prediction server system may extract one or more alert attributes for each of the one or more alert related datasets for training one or more responder prediction machine learning models and/or one or more prioritization machine learning models. The responder prediction machine learning model and prioritization machine learning models may process one or more alerts, in real-time, to generate one or more response team prediction objects for rendering in a response team suggestion interface.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="189.82mm" wi="158.75mm" file="US20230004835A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="243.42mm" wi="194.31mm" file="US20230004835A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="147.15mm" wi="203.62mm" file="US20230004835A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="127.34mm" wi="199.14mm" file="US20230004835A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="186.35mm" wi="72.05mm" file="US20230004835A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="186.94mm" wi="67.65mm" file="US20230004835A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="186.94mm" wi="67.65mm" file="US20230004835A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="108.46mm" wi="72.05mm" file="US20230004835A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="181.78mm" wi="72.05mm" file="US20230004835A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="107.70mm" wi="65.70mm" file="US20230004835A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="155.36mm" wi="205.15mm" file="US20230004835A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="259.50mm" wi="176.95mm" file="US20230004835A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="223.94mm" wi="186.35mm" file="US20230004835A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">The complexity of enterprise software has matured to a degree that there are now more potential failure points than ever. The impact of an incident can be devastating. Some estimates suggest that major incidents can cost an organization $300,000 per hour that an enterprise software system is down. Applicant has identified many deficiencies and problems associated with existing methods, apparatuses, and systems for generating and transmitting response prediction alerts to initiate responder action to address possible incidents in complex platform. Through applied effort, ingenuity, and innovation, these identified deficiencies and problems have been solved by developing solutions that are embodied in accordance with the embodiments of the present invention, many examples of which are described in detail herein.</p><heading id="h-0002" level="1">BRIEF SUMMARY</heading><p id="p-0003" num="0002">In general, embodiments of the present invention provide methods, apparatuses, systems, computing devices, and/or the like that are configured to effectively and efficiently extract one or more alerts from an alert monitoring service tool assigned to a complex platform; apply a responder prediction machine learning model to determine a response team prediction for each alert; determine, based on each response team prediction, a client identifier set for of the response team prediction; and transmit the response team prediction to a prediction service API.</p><p id="p-0004" num="0003">In accordance with another aspect, a computer-implemented method of training a responder prediction machine learning model for generating response team predictions comprising: collecting alert related datasets originating from one or more alert monitoring service tools over a predetermined time period; extracting alert attributes from the alert related datasets to create a responder prediction training corpus, wherein the alert attributes comprise an alert identifier, a tag identifier, a log identifier, a description identifier, and a responder team identifier; training the responder prediction machine learning model using the responder prediction training corpus; and storing the responder prediction machine learning model following training to a responder prediction model repository, wherein the responder prediction model repository is accessible by a responder prediction service.</p><p id="p-0005" num="0004">In some embodiments, the computer-implemented method may further comprise: collecting second alert related datasets originating from the one or more alert monitoring service tools over a second predetermined time period; extracting second alert attributes from the second alert related datasets to create a second responder prediction training corpus; training the responder prediction machine learning model using the second responder prediction training corpus; and storing the responder prediction machine learning model following training to the responder prediction model repository.</p><p id="p-0006" num="0005">In some embodiments, the computer-implemented method may comprise: receiving one or more alerts from an alert monitoring service tool; and applying, for each of the one or more alerts, a responder prediction machine learning model to determine a response team prediction object for each alert. In some embodiments, the computer-implemented method may comprise applying a score to each response team prediction object of the one or more alerts. In some embodiments, the computer-implemented method may comprise: determining the score of the response team prediction object using at least one of a user input or a closing alert, and wherein the score is calculated by comparing the response team prediction object with at least one of the user input or the closing alert. In some embodiments, the computer-implemented method may comprise training the responder prediction machine learning model in a subsequent stage using the score associated with each response team prediction object of the one or more alerts. In some embodiments, the computer-implemented method is provided, wherein the score is applied to the responder prediction machine learning model to determine one or more future response team prediction objects.</p><p id="p-0007" num="0006">In some embodiments, the computer-implemented method may comprise training a prioritization machine learning model comprising: training the prioritization machine learning model using the responder prediction training corpus, the alert attributes of the responder prediction training corpus further comprising a prioritization weight identifier; and storing the prioritization machine learning model following training to the responder prediction model repository, wherein the responder prediction model repository is accessible by a responder prediction service. In some embodiments, the computer-implemented method may comprise collecting second alert related datasets originating from the one or more alert monitoring service tools over a second predetermined time period; extracting second alert attributes from the second alert related datasets to create a second responder prediction training corpus; training the prioritization machine learning model using the second responder prediction training corpus; and storing the prioritization machine learning model following training to the responder prediction model repository.</p><p id="p-0008" num="0007">In accordance with another aspect, an apparatus for generating a response team prediction associated with one or more alerts, the apparatus comprising at least one processor and at least one memory including program code, the at least one memory and program code configured to, with the processor, cause the apparatus to at least: receive one or more alerts from an alert monitoring service tool; for each of the one or more alerts, apply a responder prediction machine learning model to determine a response team prediction object for each alert; and cause rendering of a response team suggestion interface based on the response team prediction object.</p><p id="p-0009" num="0008">In some embodiments, the apparatus is provided, wherein the response team prediction object is transmitted to a prediction service API that is configured to indicate an alert notification comprising at least one of the response team prediction, a dataset of routing information associated with at least a client identifier set for the response team prediction, or the alert associated with the response team prediction.</p><p id="p-0010" num="0009">In some embodiments, the apparatus is provided, wherein the responder prediction machine learning model comprises a pre-training with an extracted alert related dataset associated with a complex platform. In some embodiments, the apparatus is provided, wherein the extracted alert related dataset comprises data extracted from a predetermined time period.</p><p id="p-0011" num="0010">In some embodiments, the apparatus is provided, wherein the at least one memory and program code configured to, with the processor, cause the apparatus to at least: receive one or more alerts from an alert monitoring service tool; and for each of the one or more alerts, apply a prioritization machine learning model to determine a prioritization weight for each alert. In some embodiments, the apparatus is provided, wherein an operation sequence of processing for the responder prediction machine learning model is applied to the one or more alerts based on the prioritization weight for each of the one or more alerts. In some embodiments, the apparatus is provided, wherein an operation sequence for determining the response team prediction object is applied to the alerts based on the prioritization weight for each alert. In some embodiments, the apparatus is provided, wherein an operation sequence for the rendering of the response team suggestion interface based on the response team prediction object is based on the prioritization weight for each of the one or more alerts used to generate the response team prediction object.</p><p id="p-0012" num="0011">In some embodiments, the apparatus is provided, wherein a score is determined by the response team prediction associated with an alert and at least one of user input or a closing alert. In some embodiments, the apparatus is provided, wherein the score is applied to the responder prediction machine learning model to determine one or more future response team predictions.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEW OF THE DRAWINGS</heading><p id="p-0013" num="0012">Having thus described some embodiments in general terms, references will now be made to the accompanying drawings, which are not drawn to scale, and wherein:</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example responder prediction server system architecture within which at least some embodiments of the present invention may operate;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of an example responder prediction server computing device structured in accordance with at least some embodiments of the present invention;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of an example client computing device structured in accordance with at least some embodiments of the present invention;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart diagram of an example process for training a responder prediction machine-learning model in accordance with at least some embodiments of the present invention;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart diagram of an example process for determining a response team prediction object and rendering a response team suggestion interface based on an alert in accordance with at least some of the embodiments of the present invention;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart diagram of an example process for training a responder prediction machine learning model using a second responder prediction training corpus in accordance with at least some of the embodiments of the present invention;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart diagram of an example process for training a prioritization machine learning model using a responder prediction training corpus in accordance with at least some of the embodiments of the present invention;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart diagram of an example process for training a prioritization machine learning model using a second responder prediction training corpus in accordance with at least some of the embodiments of the present invention;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart diagram of an example process for determining a prioritization weight for an alert in accordance with at least some of the embodiments of the present invention;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>10</b></figref> provides an operational example of a response team suggestion interface in accordance with at least some of the embodiments of the present invention;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>11</b></figref> provides exemplary training operations performed in accordance with at least some of the embodiments of the present invention; and</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>12</b></figref> provides exemplary processing operations performed in accordance with at least some of the embodiments of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION OF VARIOUS EMBODIMENTS</heading><p id="p-0026" num="0025">Various embodiments of the present invention will now be described more fully hereinafter with reference to the accompanying drawings, in which some, but not all embodiments of the disclosure are shown. Indeed, the disclosure may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein. Rather, these embodiments are provided so that this disclosure will satisfy applicable legal requirements. The term &#x201c;or&#x201d; is used herein in both the alternative and conjunctive sense, unless otherwise indicated. The terms &#x201c;illustrative,&#x201d; &#x201c;example,&#x201d; and &#x201c;exemplary&#x201d; are used to be examples with no indication of quality level. Like numbers refer to like elements throughout.</p><heading id="h-0005" level="1">Overview</heading><p id="p-0027" num="0026">Various embodiments of the present invention address technical problems associated with generating and transmitting response team predictions for routing incident alerts generated by alert monitoring tools of complex platforms (e.g., monolithic software platforms and/or service-oriented platforms). Modern complex platforms are supported by vast software development and IT teams. Such teams are consistently changing and developing new and varied expertise. Given that large complex platforms can produce over 1,000,000 incident alerts or cautions per day, it is important that such incident alerts are quickly assessed and accurately routed to an appropriate response team.</p><p id="p-0028" num="0027">Various embodiments discussed herein can be utilized by a responder prediction service. The responder prediction service is disposed in communication with an alert monitoring service tool that is configured to identify incident alerts generated by a complex platform. The responder prediction service may extract the alerts generated by the alert monitoring service tool and apply a responder prediction machine learning model to process the alerts to generate a response team prediction. The response team prediction may comprise an alert identifier which may be used by a responder prediction enrichment service to generate a client identifier set associated with an appropriate software development or IT team (e.g., the appropriate responder or response team data) associated with the monolith software platform that is adept at handling the identified alert. The responder prediction service then proceeds to transmit the identified alert to the responder prediction enrichment service, which may in turn transmit the enriched response team prediction to the client devices of the appropriate responder team based on the client identifier set.</p><p id="p-0029" num="0028">The claimed invention is configured to produce response team predictions efficiently and effectively and thereby reduce or eliminate manual routing of alerts to responder teams. The claimed invention is further configured to reduce or eliminate errors in determining appropriate response team(s) and/or in routing alerts to such response teams. Various embodiments discussed herein further reduce the time needed to determine appropriate response teams and thereby reduce the overall time needed for an issue to be detected and resolved. For instance, various embodiments discussed herein may reduce the time needed to determine appropriate response teams to within 300 milliseconds from the incident alert being received from an alert monitoring service tool.</p><p id="p-0030" num="0029">In some embodiments, when detecting incident alerts on a complex platform, various embodiments of the present invention enable: (i) returning relevant response team predictions based on incident alerts extracted from an alert monitoring service tool; (ii) efficient links to response team predictions based on incident alerts, such that proper response team predictions are returned in less time than alternative procedures and means; (iii) integrating response team predictions into a prediction service API; (iv) rendering a response team suggestion interface; and (v) testing responder prediction machine learning models iteratively with feedback, such that the responder prediction machine learning model is updated iteratively throughout its life and throughout the growth cycle of the monolith software platform. In some embodiments, a service-oriented platform may be used by various embodiments of the present invention to enable: (i) returning relevant response team predictions based on incident alerts extracted from an alert monitoring service tool monitoring the service-oriented platform; (ii) efficient links to response team predictions based on incident alerts, such that proper response team predictions are returned in less time than alternative procedures and means; (iii) integrating response team predictions into a prediction service API; (iv) rendering a response team suggestion interface; and (v) testing responder prediction machine learning models iteratively with feedback, such that the responder prediction machine learning model is updated iteratively throughout its life and throughout the growth cycle of the service-oriented platform.</p><heading id="h-0006" level="1">Definitions</heading><p id="p-0031" num="0030">The term &#x201c;complex platform,&#x201d; or &#x201c;application platform,&#x201d; refer to a software platform comprising one or more types of software applications (e.g., monolithic platform and/or service-oriented platform), which may be described in more detail below.</p><p id="p-0032" num="0031">The terms &#x201c;monolithic platform,&#x201d; or &#x201c;monolithic software platform,&#x201d; refer to a software application designed to embody a single-tiered architecture in which the front end and back end systems are combined into a single platform. Monolithic software platforms are self-contained in that they can perform each operation needed to complete their intended purpose or function. Such example monolithic platforms may include Micros&#x2122; by Atlassian&#xae; platform or DynamoDB&#xae; by Amazon&#xae;.</p><p id="p-0033" num="0032">The term &#x201c;service-oriented platform&#x201d; refers to a software application designed to embody a modular programming architecture based on specific service types, wherein the modular programming may comprise existing services combined by user specification in order to create a custom software application. In some embodiments, the services within the modular programming may configure GUI for user interaction with each service in an individual manner without affecting other services within the service-oriented platform.</p><p id="p-0034" num="0033">A service-oriented platform is typically characterized by large networks of interdependent services and microservices that support a myriad of software features and applications. Indeed, some large service-oriented platforms may be comprised of topologies of 1,500 or more interdependent services and microservices. Such service-oriented platforms are nimble, highly configurable, and enable robust collaboration and communication between users at individual levels, team levels, and enterprise levels.</p><p id="p-0035" num="0034">Service-oriented platforms typically include large numbers of software applications. Each software application includes a number of features, with many features (e.g., user authentication features) shared between multiple software applications. Other features are supported only by one associated software application or a defined subset of software applications.</p><p id="p-0036" num="0035">A given service-oriented platform could support hundreds of software applications and hundreds of thousands of features. Those applications and features could be supported by thousands of services and microservices that exist in vast and ever-changing interdependent layers. Adding to this complexity is the fact that at any given time, a great number of software development teams may be constantly, yet unexpectedly, releasing code updates that change various software services, launch new software services, change existing features of existing software applications, add new software applications, add new features to existing software applications, and/or the like. Still further complexity is added by the fact that, at any given time, the configured rules with respect to directing alerts to a response team (e.g., by identifying a response team) may be incorrect or out-of-date, or the response team may comprise response team data that is out-of-date (e.g., team members or team ownership of the response team identified in the response team prediction object has changed). Service-oriented platforms may allow for such changes to be made within one or more applications and features within such applications.</p><p id="p-0037" num="0036">The term &#x201c;alert monitoring service tool&#x201d; refers to a software service that is configured to monitor a complex platform (e.g., monolithic software platform and/or service-oriented platform) and detect alerts, cautions, problems, errors, issues, or incidents. An example alert monitoring service tool is Opsgenie&#xae; by Atlassian&#xae;. Alert monitoring service tools may also generate one or more incident alerts (i.e., alerts) of the complex platform (e.g., monolithic platform and/or service-oriented platform) that may be extracted for application of responder prediction machine learning models. Such example alert monitoring service tools may include SignalFX&#xae; by Splunk&#xae;, Opsgenie&#xae; by Atlassian&#xae;, or DynamoDB&#xae; by Amazon&#xae; in combination with AWS Lambda&#x2122; by Amazon&#xae;.</p><p id="p-0038" num="0037">The term &#x201c;alert&#x201d; refers to a data object that is configured as information, text, and/or other media used to describe the operating functionality of a complex platform (e.g., monolithic platform and/or the service-oriented platform). Such operating functionality may include indicators regarding the complex platform's performance (e.g., whether the complex platform and its functions are running at peak speed or slower than peak speed, if certain functions or capabilities are not running at peak performance or not running at all, etc.). Alert(s) include alert attributes as defined below. Alert(s) may be generated by an alert monitoring service tool and stored in a storage subsystem of the responder prediction server computing device. Alert(s) and/or alert attributes may be configured as a group or corpus of input data objects that are supplied as an input to train at least the responder prediction machine learning model. Alert(s) associated with a complex platform (e.g., monolithic platform and/or service-oriented platform) are also used by a responder prediction machine learning model to generate a response team prediction.</p><p id="p-0039" num="0038">The term &#x201c;alert related dataset&#x201d; refers to a collection of alerts and alert related data that are received from one or more alert monitoring services tools over a predetermined time period. Alert related datasets further comprise response team routing data for each alert identified in the alert related dataset. The alert related dataset may be stored in the storage subsystem of the responder prediction server system, such as the responder prediction model repository.</p><p id="p-0040" num="0039">The term &#x201c;alert attribute&#x201d; refers to data, text, identifiers, metadata, or other alert related characteristics or features that are extracted from alert related datasets and used to create a responder prediction training corpus as defined below. Alert attributes are extracted from alert related datasets by a responder prediction service as defined below. Example alert attributes include an alert identifier, a tag identifier, a log identifier, a description identifier, and a responder team identifier. Example alert attributes, in some embodiments, may further include a service identifier and a prioritization weight identifier.</p><p id="p-0041" num="0040">The term &#x201c;alert identifier&#x201d; refers to one or more items of data by which an alert may be identified within a responder prediction server system. For example, an alert identifier may comprise text string(s), numerical character(s), alphabetical character(s), alphanumeric code(s), ASCII character(s), a pointer, an IP address, a MAC address, a memory address, other unique identifier, or a combination thereof.</p><p id="p-0042" num="0041">The term &#x201c;responder prediction machine learning model&#x201d; refers to a machine learning model that is trained and otherwise configured to receive alerts (e.g., incident alerts) of a complex platform and generate response team predictions. The configuration data for a corresponding responder prediction machine learning model is stored on a storage subsystem associated with a responder prediction service. The responder prediction machine learning model may be trained using one or more training corpuses (e.g., a responder prediction training corpus). Once the responder prediction machine learning model has been trained, the responder prediction machine learning model may process one or more alerts generated by an alert monitoring service tool and output a response team prediction to a prediction service API. Such example responder prediction machine learning models may comprise a Na&#xef;ve Bayes machine learning model which is trained using the Bayes theorem and the assumption that each input variable is independent from the other input variables; a machine learning model trained to cluster the alerts; word embedding using a Long Short-Term Model (LS&#x2122;) and Natural Language Processor (NLP); word embedding using an LS&#x2122;, NLP, and a Convolutional Neural Network (CNN); and/or a graph-based model. In some embodiments, a Na&#xef;ve Bayes machine learning model may be trained to predict the probability of a phrase associated with n-grams, wherein certain phrases may contain a higher probability of being associated with a particular responder team. In some embodiments, a clustering of alerts is based on embedded natural language values for each alert, wherein the alerts and the associated embedded natural language values are similar for specific responder teams such that only one responder team is identified for each of the plurality of alerts within a cluster. In some embodiments, a plurality of Natural Language Processors (NLPs) and an LS&#x2122; may be trained to tokenize natural language values of the alert attributes and embed the phrases (e.g., words associated with a responder team) in vectors associated with other similar phrases. In some embodiments, a plurality of NLPs, an LS&#x2122;, and a sequential CNN may be trained to tokenize the alert attributes using one of a plurality of NLPs which may be associated with specific alert attributes, embedding each natural language processed phrase from the alert attributes within an individual word vector graph for each alert attribute, and using a sequential CNN to concatenate each of the word vector graphs associated with the alert attributes. In some embodiments, a graph-based model may be used on the alert attributes, wherein various responder teams and users within the responder teams may be graphed as nodes and may be connected to alerts based on alert attributes (e.g., alert type identifier, tag identifier, description identifier, prioritization weight, etc.). In some embodiments, the graph-based model may be trained using graph neural networks on previous alert attributes associated with previous responder teams and users of the responder teams. In addition, a deep neural network (DNN) may be used in the present invention as the responder prediction machine learning model, wherein two or more responder prediction machine learning models may be used to output a response team prediction.</p><p id="p-0043" num="0042">The term &#x201c;response team prediction object&#x201d; refers to a data object that describes the dataset generated by the responder prediction machine learning model for a corresponding alert. Response team predictions comprise a client identifier set associated with client devices for response team members having expertise that is appropriate to address a particular incident alert and/or a confidence score associated with the response team and response team members generated by the responder prediction machine learning model. In some embodiments, the response team prediction may be stored on the storage subsystem of the responder prediction server computing device.</p><p id="p-0044" num="0043">The term &#x201c;prioritization machine learning model&#x201d; refers to a machine learning model that is configured to process the output of the responder prediction machine learning model such that the response team predictions are rearranged into a new order or sequence based on the associated prioritization weights assigned to each alert. The prioritization machine learning model may be configured to process the alerts and the response team predictions generated by the responder prediction machine learning model, in order to generate an operation sequence of an order to send out the response prediction alerts. The prioritization machine learning model may be trained using extracted data sets associated with past operation sequences (e.g., such as those operation sequences created by a human operator or those operation sequences defined in a separate data object defining a complex platform's specific policy). The prioritization machine learning model may be stored in a storage subsystem of the responder prediction server computing device such as the responder prediction model repository.</p><p id="p-0045" num="0044">The term &#x201c;prioritization weight identifier&#x201d; refers to a descriptor of a data object associated with an alert that indicates the priority level for the alert. For example, an alert monitoring service tool identifier may comprise text string(s), numerical character(s), alphabetical character(s), alphanumeric code(s), ASCII character(s), a pointer, an IP address, a MAC address, a memory address, other unique identifier, or a combination thereof. In some circumstances, prior prioritization weight identifiers associated with prior alerts are processed by a machine learning model (e.g., the prioritization machine learning model) such that the machine learning model may be trained to identify a predicted or suggested prioritization weight identifier for a new alert. Past prioritization weight identifiers are associated with one or more prioritization weights generated from a previous predetermined time period (e.g., a high priority value, such as &#x201c;P1,&#x201d; may be associated with high priority alerts and lower priority values&#x2014;such as &#x201c;P2,&#x201d; &#x201c;P3,&#x201d; and the like&#x2014;may be associated with lower priority alerts). The prioritization weight identifier may be stored in the storage subsystem of the responder prediction server system, like the responder prediction model repository.</p><p id="p-0046" num="0045">The term &#x201c;responder prediction training corpus&#x201d; refers to data objects that are configured to train the one or more machine learning models of the responder prediction server system. Such training corpuses (e.g., a first responder prediction training corpus, a second responder prediction training corpus, a third responder prediction training corpus, etc.) may comprise data objects generated by a complex platform over a predetermined time period, wherein the training corpus may embody previous data objects associated with previously generated alerts. For example, a responder prediction training corpus may comprise alert attributes extracted from alert related datasets generated within a predetermined time period (e.g., a year). Such training corpuses may be stored in the storage subsystem and the responder prediction service of the responder prediction server system such as the responder prediction model repository.</p><p id="p-0047" num="0046">The term &#x201c;predetermined time period&#x201d; refers to a data object that describes a defined subset of time within a complex platform, such that the predetermined time period may be used to process only those alerts of the complex platform for that predetermined time period and any associated response teams generated from those alerts. In some embodiments, the predetermined time period may comprise multiple sets of predetermined time periods (e.g., a first predetermined time period, a second predetermined time period, a third predetermined time period, etc.). The predetermined time period may be stored in the storage subsystem of the responder prediction server system, such as the responder prediction model repository, or in the prediction service API of the responder prediction server system, such that alert related datasets may be generated based on the predetermined time period and the alert related datasets may have been stored in the storage subsystem of the responder prediction server system or in the prediction service API of the responder prediction server system.</p><p id="p-0048" num="0047">The term &#x201c;description identifier&#x201d; refers to one or more items of data by which a description of the alert may be generated by the complex platform and captured by the alert monitoring service tool when extracting the alert. For example, a description identifier may comprise text string(s), numerical character(s), alphabetical character(s), alphanumeric code(s), ASCII character(s), a pointer, an IP address, a MAC address, a memory address, other unique identifier, or a combination thereof.</p><p id="p-0049" num="0048">The term &#x201c;log identifier&#x201d; refers to one or more items of data by which a historical log of current alerts, past alerts, and responder teams may be captured by the alert monitoring service tool within a responder prediction server system (e.g., a log identifier may comprise data by which a log of actions taken on an alert are stored, which may include data of an alert being acknowledged by one or more responder teams, data of an alert being resolved by one or more responder teams, and/or data of one or more responder teams being added to an alert). For example, a log identifier may comprise text string(s), numerical character(s), alphabetical character(s), alphanumeric code(s), ASCII character(s), a pointer, an IP address, a MAC address, a memory address, other unique identifier, or a combination thereof.</p><p id="p-0050" num="0049">The term &#x201c;tag identifier&#x201d; refers to one or more items of data b which an alert is tagged by the complex platform within a responder prediction server system. For example, a tag identifier may comprise text string(s), numerical character(s), alphabetical character(s), alphanumeric code(s), ASCII character(s), a pointer, an IP address, a MAC address, a memory address, other unique identifier, or a combination thereof.</p><p id="p-0051" num="0050">The term &#x201c;service identifier&#x201d; refers to one or more items of data by which a service may be identified as associated with specific responder teams within a responder prediction server system. For example, a service identifier may comprise text string(s), numerical character(s), alphabetical character(s), alphanumeric code(s), ASCII character(s), a pointer, an IP address, a MAC address, a memory address, other unique identifier, or a combination thereof. In some embodiments, the service identifier may comprise data indicating the upstream and downstream services for each specific service associated with specific responder teams. In some embodiments, the service identifier may comprise service tier level data to indicate the importance of the service (e.g., the importance of the service to a company/user using the complex platform) for the user of the complex platform (e.g., monolithic platform and/or the service-oriented platform). In some embodiments, the service identifier may comprise data associated with other service identifiers which may indicate the number of impacted services from an alert of a specific service.</p><p id="p-0052" num="0051">The term &#x201c;response team identifier&#x201d; refers to one or more items of data by which a response team may be identified within a responder prediction server system. For example, a response team identifier may comprise text string(s), numerical character(s), alphabetical character(s), alphanumeric code(s), ASCII character(s), a pointer, an IP address, a MAC address, a memory address, other unique identifier, or a combination thereof. The response team identifier may be used as a means to classify specific response teams for the response team prediction object.</p><p id="p-0053" num="0052">The term &#x201c;responder prediction service&#x201d; refers to an application, program, platform, and/or software module configured for applying one or more responder prediction machine learning models to one or more alerts of a complex platform to generate a response team prediction object. The responder prediction service may be configured to access a responder prediction model repository to access updated or newly trained responder machine learning models.</p><p id="p-0054" num="0053">The term &#x201c;response team suggestion interface&#x201d; refers to a graphical user interface configured to indicate a response team prediction based on the data objects and machine learning model(s) (e.g., responder prediction machine learning model and/or prioritization machine learning model) stored in the responder prediction model repository.</p><heading id="h-0007" level="1">DETAILED DESCRIPTION</heading><heading id="h-0008" level="1">Example System Architecture</heading><p id="p-0055" num="0054">Systems, computer program products, and methods of the present invention may be embodied by any of a variety of devices. For example, the systems and methods of an example embodiment may be embodied by a networked computing device (e.g., an enterprise platform), such as a server or other network entity, configured to communicate with one or more devices, such as one or more client devices, one or more user devices, and one or more external services. Additionally, or alternatively, the computing device may include fixed computing devices, such as a personal computer or a computer workstation. Still further, example embodiments may be embodied by any of a variety of mobile devices, such as a portable digital assistant (PDA), mobile telephone, smartphone, laptop computer, tablet computer, wearable computer, or any combination of the aforementioned devices.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts an exemplary architecture <b>100</b> for generating a response team prediction object associated with an alert. The architecture <b>100</b> includes one or more client computing devices <b>102</b> and a responder prediction server system <b>101</b>. The responder prediction server system <b>101</b> is configured to store an alert extractor unit, a responder prediction model repository <b>108</b>, and responder prediction service <b>106</b>.</p><p id="p-0057" num="0056">In some embodiments, the responder prediction server system <b>101</b> is configured to train one or more machine learning models to generate a response team prediction object based on one or more extracted alerts from the alert extractor unit <b>113</b> which may be transmitted from an alert monitoring service tool <b>151</b>. The alert monitoring service tool <b>151</b> may be configured to collect one or more alert related datasets over a predetermined time period. An alert extractor unit <b>113</b> may be configured to extract the collected alert related dataset(s) and transmit said one or more alert related datasets to the responder prediction service <b>106</b> for processing and transmit the one or more alert related datasets to a responder prediction machine learning model <b>155</b> for training. The responder prediction service <b>106</b> may be configured to generate a response team prediction object&#x2014;which may be aggregated in a response team prediction data unit <b>114</b> to be transmitted to a response prediction API <b>171</b>&#x2014;based on a responder prediction machine learning model <b>155</b>, which is trained using a response prediction model training unit <b>115</b>. The response prediction model training unit <b>115</b> may be configured to train one or more machine learning models (e.g., a responder prediction machine learning model <b>155</b> and/or a prioritization machine learning model <b>175</b>) using an alert related datasets unit <b>111</b> received from an alert extractor unit <b>113</b>. The prediction service API <b>171</b> may be configured to transmit the response team prediction data unit <b>114</b> to the a responder prediction enrichment service <b>181</b>, which may enrich the response team object of the response team prediction data unit <b>114</b> with response team data (e.g., data associated with the response teams including email addresses, names, and other correspondence information). In some embodiments, the responder prediction enrichment service <b>181</b> may be housed within the client computing device <b>102</b> as an API, such that the prediction service API <b>171</b> may be in direct communication, over a network, with the client computing device <b>102</b> to transmit the response team prediction data unit <b>114</b>. In some embodiments, the responder prediction enrichment service <b>181</b> of the client computing devices <b>102</b>, may enrich the response team prediction object of the response team prediction data unit <b>114</b> and configure the GUI of the client computing device <b>102</b>, wherein the content of the configured GUI (e.g., response team suggestion interface) of the client computing device <b>102</b> may comprise the response team prediction as a viewable, by a user of the client computing devices <b>102</b>, configuration of the response team prediction object(s).</p><p id="p-0058" num="0057">The responder prediction server system may be configured to provide a response team prediction object based on one or more extracted alerts (i.e., real-time alert data <b>152</b>) from the alert extractor unit <b>113</b> which may be transmitted from an alert monitoring service tool <b>151</b>. The extracted alert may be processed by a responder prediction machine learning model <b>155</b> trained by the response prediction model training unit <b>115</b>. The responder prediction machine learning model <b>155</b> may be configured to output a response team prediction object which may be aggregated with other response team prediction objects associated with one or more alerts and stored in the response team prediction data unit <b>114</b>. The response team prediction data unit <b>114</b> comprising the one or more response team prediction objects may be transmitted for storage to the responder prediction model repository <b>108</b> along with the associated alerts (e.g., alert data <b>152</b>). The responder prediction model repository <b>108</b> may be configured to store at least the responder prediction machine learning model <b>155</b>, the training data (e.g., the one or more alert related datasets) used by the responder prediction machine learning model <b>155</b>, the alert data <b>152</b> (e.g., real-time alert data), and the response team prediction data unit <b>114</b> (e.g., the response team prediction object) generated by the responder prediction machine learning model processing the alert data.</p><p id="p-0059" num="0058">The present invention may be further described by reference to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>, <b>4</b></figref>, and <b>5</b>. With respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a client computing device <b>102</b> may be provided to allow access by an end user to the responder prediction server system <b>101</b>. The responder prediction server system <b>101</b> may comprise system modules such as an alert extractor unit <b>113</b>, an alert monitoring service tool <b>151</b>, a response prediction model training unit <b>115</b>, a responder prediction service <b>106</b>, a storage subsystem <b>108</b>, and a prediction service API <b>171</b>.</p><p id="p-0060" num="0059">In some embodiments, an end user may access the responder prediction server system <b>101</b> using the client computing device <b>102</b>. In some embodiments, an alert monitoring service tool <b>151</b> may receive an alert (e.g., alert data <b>152</b>) when a complex platform is not running at peak performance, at regular predetermined intervals, or when one or more predetermined criteria or complex platform attributes reach predetermined levels. Such alerts may start the process herein described, of processing the alert through a responder prediction service <b>106</b> (e.g., a responder prediction machine learning model <b>155</b> and/or prioritization machine learning model <b>175</b>) and returning a response team prediction object to a prediction service API <b>171</b>.</p><p id="p-0061" num="0060">With respect to training the response predication service <b>106</b> and its responder prediction machine learning model <b>155</b>, a response prediction model training unit <b>115</b> may comprise an alert related datasets unit <b>111</b>. The alert related datasets unit <b>111</b> may be used to create the first training corpus and/or a second training corpus which may both comprise a collected set of alert related datasets (e.g., alert related datasets extracted from specific predetermined time periods or alert related datasets extracted from specific response teams). The responder prediction machine learning model <b>155</b> may be trained iteratively based on the first training corpus and the second training corpus, and additional training corpuses generated as the machine learning models process one or more alerts. Each training corpus comprises alerts and associated response team prediction objects or manually determined response team routes for those alerts.</p><p id="p-0062" num="0061">Once the responder prediction machine learning model <b>155</b> has been trained, an alert monitoring service tool <b>151</b> may extract alert data <b>152</b> from a complex platform (which may be associated with the responder prediction machine learning model's training). The alert data <b>152</b> may be processed by the responder prediction service <b>106</b> such that it is input into the responder prediction machine learning model <b>155</b>. Once the responder prediction machine learning model <b>155</b> has processed the alert data <b>152</b>, the responder prediction machine learning model <b>155</b> may output the correct response team prediction object. The response team prediction object of the response team prediction data unit <b>114</b> may be stored in the responder prediction model repository <b>108</b> along with the alert data extracted from the alert monitoring service tool <b>151</b>.</p><p id="p-0063" num="0062">In some embodiments, the response team prediction object(s) of the response team prediction data unit <b>114</b> may be sent back to the response prediction model training unit <b>115</b> to further train the responder prediction machine learning model <b>155</b> by updating the cache of alert related datasets unit <b>111</b>. In some embodiments, the response team prediction object(s) of the response team prediction data unit <b>114</b> may be processed by the response prediction model training unit <b>115</b> and then pushed to a prediction service API <b>171</b>, which may transmit the response team prediction object back to an end user or other user interface via the client computer device <b>102</b> after enriching the response team prediction object using the responder prediction enrichment service <b>181</b>.</p><p id="p-0064" num="0063">The client computing devices <b>102</b> and the responder prediction server system <b>101</b> may communicate over one or more networks. A network may include any wired or wireless communication network including, for example, a wired or wireless local area network (LAN), personal area network (PAN), metropolitan area network (MAN), wide area network (WAN), or the like, as well as any hardware, software and/or firmware required to implement it (such as, e.g., network routers, etc.). For example, a network may include a cellular telephone, an 802.11, 802.16, 802.20, and/or WiMax network. Further, a network may include a public network, such as the Internet, a private network, such as an intranet, or combinations thereof, and may utilize a variety of networking protocols now available or later developed including, but not limited to Transmission Control Protocol/Internet Protocol (TCP/IP) based networking protocols. For instance, the networking protocol may be customized to suit the needs of the page management system. In some embodiments, the protocol is a custom protocol of JavaScript Object Notation (JSON) objects sent via a Web Socket channel. In some embodiments, the protocol is JSON over RPC, JSON over REST/HTTP, and the like.</p><heading id="h-0009" level="1">Exemplary Document Collaboration Server Computing Device</heading><p id="p-0065" num="0064">The responder prediction server system <b>101</b> may be embodied by one or more computing systems, such as apparatus <b>200</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The apparatus <b>200</b> may include processor <b>202</b>, memory <b>204</b>, input/output circuitry <b>206</b>, and communications circuitry <b>208</b>. The apparatus <b>200</b> may be configured to execute the operations described herein. Although these components <b>202</b>-<b>208</b> are described with respect to functional limitations, it should be understood that the particular implementations necessarily include the use of particular hardware. It should also be understood that certain of these components <b>202</b>-<b>208</b> may include similar or common hardware. For example, two sets of circuitries may both leverage use of the same processor, network interface, storage medium, or the like to perform their associated functions, such that duplicate hardware is not required for each set of circuitries.</p><p id="p-0066" num="0065">In some embodiments, the processor <b>202</b> (and/or co-processor or any other processing circuitry assisting or otherwise associated with the processor) may be in communication with the memory <b>204</b> via a bus for passing information among components of the apparatus. The memory <b>204</b> is non-transitory and may include, for example, one or more volatile and/or non-volatile memories. In other words, for example, the memory <b>204</b> may be an electronic storage device (e.g., a computer-readable storage medium). The memory <b>204</b> may be configured to store information, data, content, applications, instructions, or the like for enabling the apparatus to carry out various functions in accordance with example embodiments of the present invention.</p><p id="p-0067" num="0066">The processor <b>202</b> may be embodied in a number of different ways and may, for example, include one or more processing devices configured to perform independently. In some preferred and non-limiting embodiments, the processor <b>202</b> may include one or more processors configured in tandem via a bus to enable independent execution of instructions, pipelining, and/or multithreading. The use of the term &#x201c;processing circuitry&#x201d; may be understood to include a single core processor, a multi-core processor, multiple processors internal to the apparatus, and/or remote or &#x201c;cloud&#x201d; processors.</p><p id="p-0068" num="0067">In some preferred and non-limiting embodiments, the processor <b>202</b> may be configured to execute instructions stored in the memory <b>204</b> or otherwise accessible to the processor <b>202</b>. In some preferred and non-limiting embodiments, the processor <b>202</b> may be configured to execute hard-coded functionalities. As such, whether configured by hardware or software methods, or by a combination thereof, the processor <b>202</b> may represent an entity (e.g., physically embodied in circuitry) capable of performing operations according to an embodiment of the present invention while configured accordingly. Alternatively, as another example, when the processor <b>202</b> is embodied as an executor of software instructions, the instructions may specifically configure the processor <b>202</b> to perform the algorithms and/or operations described herein when the instructions are executed.</p><p id="p-0069" num="0068">In some embodiments, the apparatus <b>200</b> may include input/output circuitry <b>206</b> that may, in turn, be in communication with processor <b>202</b> to provide output to the user and, in some embodiments, to receive an indication of a user input. The input/output circuitry <b>206</b> may comprise a user interface and may include a display, and may comprise a web user interface, a mobile application, a query-initiating computing device, a kiosk, or the like. In some embodiments, the input/output circuitry <b>206</b> may also include a keyboard, a mouse, a joystick, a touch screen, touch areas, soft keys, a microphone, a speaker, or other input/output mechanisms. The processor and/or user interface circuitry comprising the processor may be configured to control one or more functions of one or more user interface elements through computer program instructions (e.g., software and/or firmware) stored on a memory accessible to the processor (e.g., memory <b>204</b>, and/or the like).</p><p id="p-0070" num="0069">The communications circuitry <b>208</b> may be any means such as a device or circuitry embodied in either hardware or a combination of hardware and software that is configured to receive and/or transmit data from/to a network and/or any other device, circuitry, or module in communication with the apparatus <b>200</b>. In this regard, the communications circuitry <b>208</b> may include, for example, a network interface for enabling communications with a wired or wireless communication network. For example, the communications circuitry <b>208</b> may include one or more network interface cards, antennae, buses, switches, routers, modems, and supporting hardware and/or software, or any other device suitable for enabling communications via a network. Additionally, or alternatively, the communications circuitry <b>208</b> may include the circuitry for interacting with the antenna/antennae to cause transmission of signals via the antenna/antennae or to handle receipt of signals received via the antenna/antennae.</p><p id="p-0071" num="0070">It is also noted that all or some of the information discussed herein can be based on data that is received, generated and/or maintained by one or more components of apparatus <b>200</b>. In some embodiments, one or more external systems (such as a remote cloud computing and/or data storage system) may also be leveraged to provide at least some of the functionality discussed herein.</p><heading id="h-0010" level="1">Exemplary Client Computing Device</heading><p id="p-0072" num="0071">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a client computing device may be embodied by one or more computing systems, such as apparatus <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The apparatus <b>300</b> may include processor <b>302</b>, memory <b>304</b>, input/output circuitry <b>306</b>, and a communications circuitry <b>308</b>. Although these components <b>302</b>-<b>308</b> are described with respect to functional limitations, it should be understood that the particular implementations necessarily include the use of particular hardware. It should also be understood that certain of these components <b>302</b>-<b>308</b> may include similar or common hardware. For example, two sets of circuitries may both leverage use of the same processor, network interface, storage medium, or the like to perform their associated functions, such that duplicate hardware is not required for each set of circuitries.</p><p id="p-0073" num="0072">In some embodiments, the processor <b>302</b> (and/or co-processor or any other processing circuitry assisting or otherwise associated with the processor) may be in communication with the memory <b>304</b> via a bus for passing information among components of the apparatus. The memory <b>304</b> is non-transitory and may include, for example, one or more volatile and/or non-volatile memories. In other words, for example, the memory <b>304</b> may be an electronic storage device (e.g., a computer-readable storage medium). The memory <b>304</b> may include one or more databases. Furthermore, the memory <b>304</b> may be configured to store information, data, content, applications, instructions, or the like for enabling the apparatus <b>300</b> to carry out various functions in accordance with example embodiments of the present invention.</p><p id="p-0074" num="0073">The processor <b>302</b> may be embodied in a number of different ways and may, for example, include one or more processing devices configured to perform independently. In some preferred and non-limiting embodiments, the processor <b>302</b> may include one or more processors configured in tandem via a bus to enable independent execution of instructions, pipelining, and/or multithreading. The use of the term &#x201c;processing circuitry&#x201d; may be understood to include a single core processor, a multi-core processor, multiple processors internal to the apparatus, and/or remote or &#x201c;cloud&#x201d; processors.</p><p id="p-0075" num="0074">In some preferred and non-limiting embodiments, the processor <b>302</b> may be configured to execute instructions stored in the memory <b>304</b> or otherwise accessible to the processor <b>302</b>. In some preferred and non-limiting embodiments, the processor <b>302</b> may be configured to execute hard-coded functionalities. As such, whether configured by hardware or software methods, or by a combination thereof, the processor <b>302</b> may represent an entity (e.g., physically embodied in circuitry) capable of performing operations according to an embodiment of the present invention while configured accordingly. Alternatively, as another example, when the processor <b>302</b> is embodied as an executor of software instructions (e.g., computer program instructions), the instructions may specifically configure the processor <b>302</b> to perform the algorithms and/or operations described herein when the instructions are executed.</p><p id="p-0076" num="0075">In some embodiments, the apparatus <b>300</b> may include input/output circuitry <b>306</b> that may, in turn, be in communication with processor <b>302</b> to provide output to the user and, in some embodiments, to receive an indication of a user input. The input/output circuitry <b>306</b> may comprise a user interface and may include a display, and may comprise a web user interface, a mobile application, a query-initiating computing device, a kiosk, or the like.</p><p id="p-0077" num="0076">In embodiments in which the apparatus <b>300</b> is embodied by a limited interaction device, the input/output circuitry <b>306</b> includes a touch screen and does not include, or at least does not operatively engage (i.e., when configured in a tablet mode), other input accessories such as tactile keyboards, track pads, mice, etc. In other embodiments in which the apparatus is embodied by a non-limited interaction device, the input/output circuitry <b>306</b> may include may include at least one of a tactile keyboard (e.g., also referred to herein as keypad), a mouse, a joystick, a touch screen, touch areas, soft keys, and other input/output mechanisms. The processor and/or user interface circuitry comprising the processor may be configured to control one or more functions of one or more user interface elements through computer program instructions (e.g., software and/or firmware) stored on a memory accessible to the processor (e.g., memory <b>304</b>, and/or the like).</p><p id="p-0078" num="0077">The communications circuitry <b>308</b> may be any means such as a device or circuitry embodied in either hardware or a combination of hardware and software that is configured to receive and/or transmit data from/to a network and/or any other device, circuitry, or module in communication with the apparatus <b>300</b>. In this regard, the communications circuitry <b>308</b> may include, for example, a network interface for enabling communications with a wired or wireless communication network. For example, the communications circuitry <b>308</b> may include one or more network interface cards, antennae, buses, switches, routers, modems, and supporting hardware and/or software, or any other device suitable for enabling communications via a network. Additionally, or alternatively, the communications circuitry <b>308</b> may include the circuitry for interacting with the antenna/antennae to cause transmission of signals via the antenna/antennae or to handle receipt of signals received via the antenna/antennae.</p><p id="p-0079" num="0078">It is also noted that all or some of the information discussed herein can be based on data that is received, generated and/or maintained by one or more components of apparatus <b>300</b>. In some embodiments, one or more external systems (such as a remote cloud computing and/or data storage system) may also be leveraged to provide at least some of the functionality discussed herein.</p><heading id="h-0011" level="1">Example Data Flows and Operations</heading><heading id="h-0012" level="1">Example Model Training Operations</heading><p id="p-0080" num="0079">Provided below are techniques for training at least a responder prediction machine learning model. In some embodiments, similar techniques may be used to train a prioritization machine learning model which may be used in conjunction with the responder prediction machine learning model to generate a response team prediction object.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart diagram of an example process <b>400</b> for performing operations that are configured to train a responder prediction machine learning model. Via the various operations of process <b>400</b>, the responder prediction server system <b>101</b> can train one or more responder prediction machine learning models to generate one or more response team prediction objects based on one or more alerts (real-time alerts) in an efficient manner without human interaction which may, in turn, be transmitted to a prediction service API <b>171</b> to generate a response team suggestion interface for transmission to a client computing device <b>102</b>.</p><p id="p-0082" num="0081">The process <b>400</b> begins at operation <b>401</b> when the alert extractor unit <b>113</b> extracts one or more alert related datasets from an alert monitoring service tool <b>151</b>. The alert related datasets may be comprised within an alert related dataset unit <b>111</b>. The alert related datasets may be extracted from a predetermined time period, such as a predetermined time period from a previous time period. For example, a predetermined time period may comprise 24 hours (such as the previous 24 hours leading up to the time of extraction of the alert related datasets), days (such as the previous week leading up to the time of extraction of the alert related datasets), months (such as a time period of the last month leading up to the time of extraction, the time period of the last 2 months, 3 months, 4 months, 5 months, 6 months, 7 months, 8 months, 9 months, 10 months, 11 months, 12 months, or any time period within those listed herein), years (such as a time period of the last year, last two years, three years leading up to the time of extraction of the alert related datasets, or any time within those listed herein). In some embodiments, the selected predetermined time period may be selected from any time in which the complex platform has been running (e.g., has comprised a data object, a program, source code, etc.). In some embodiments, the selected predetermined time period may be selected from any time in which an alert has been generated (either manually by a human operator or programmatically, such as by an Opsgenie&#xae; program created by Atlassian&#xae;) for the complex platform.</p><p id="p-0083" num="0082">The alert related datasets extracted over this predetermined time period may comprise any alerts generated for the complex platform, including any alerts created by a human operator of the complex platform, a tenant of the complex platform (e.g., a consumer request to fix an issue identified by the tenant), a programmatic alerting program (e.g., Opsgenie&#xae; created by Atlassian&#xae;), or semi-programmatically (e.g., an alert generated by a program such as Opsgenie&#xae; by Atlassian&#xae;, which may only identify a source, wherein the alert is later identified by type by a human operator or tenant).</p><p id="p-0084" num="0083">The alert related datasets extracted, or collected, by the alert extractor unit <b>113</b> may be transmitted to the responder prediction service <b>106</b>. At step <b>402</b>, the responder prediction service <b>106</b> may extract the alert attributes from the alert related datasets to create a responder prediction training corpus. The alert attributes extracted from the alert related datasets may comprise an alert identifier, a tag identifier, a description identifier, a log identifier, and a responder team identifier. In some embodiments, the alert attributes may further comprise a prioritization weight identifier and/or a service identifier.</p><p id="p-0085" num="0084">The alert identifier associated with the alert attributes of an alert related dataset may classify specific types of alerts of the alert related dataset, based on the unique identifiers of the alert identifier. For example, the alert identifier may comprise CPU errors, storage errors (e.g., low storage availability), bug error preventing source code from running, front-end API errors, security threats, login errors, tenant, integration errors, data transfer errors, or any other errors known in the field. The alert identifier may be used within the alert related datasets to train the responder prediction machine learning model to predict an alert identifier of an alert processed at a future period of time, after training the responder prediction machine learning model. The type of alert identifier classified within an alert related dataset may be used by a machine learning model, such as the responder prediction machine learning model, to reduce the possible responder team predictions that the machine learning model may choose from. For instance, if an alert identifier for an alert related dataset comprises a classification of a CPU error, the responder prediction machine learning model may limit the possible response team prediction objects to only those teams that may work on a CPU error or those teams familiar with CPU errors. In some embodiments, each responder prediction machine learning model may process every alert attribute and a consensus of the responder prediction objects generated by the responder prediction machine learning model may be used to predict a responder prediction team.</p><p id="p-0086" num="0085">In some embodiments, a plurality of responder prediction machine learning models may be clustered together to process sequentially or concurrently with each other responder prediction machine learning model to process specific alert attributes (e.g., a specific responder prediction machine learning model to process only one specific alert attribute). In some embodiments, the plurality of responder prediction machine learning models may comprise one or more aggregation layers after the training of the responder prediction machine learning models by one or more alert related datasets. In some embodiments, the aggregation layer may comprise one or more assigned weights and outputs from the responder prediction machine learning models, wherein the aggregation layer may take the input of one or more assigned weights and outputs from training of the responder prediction machine learning models and convert the one or more weights and outputs into a single feature space. In some embodiments, the aggregation layer may comprise a process to aggregate the weights and outputs of the responder prediction machine learning models by using a matrix dot product layer. In some embodiments, the aggregation layer may comprise a process to aggregate the weights and outputs of the responder prediction machine learning model by using a fully connected neural network layer that performs non-linear feature combination to place the weights and outputs into a common feature space. In some embodiments, the aggregation layer may comprise an output of one or more features (e.g., a common feature space may comprise the same number of cells&#x2014;for example, the responder prediction machine learning models previously trained&#x2014;as the input of the fully connected neural network) such that the dimension of the output feature is equal to the size of the aggregation layer. In some embodiments, the output feature may be used in the responder prediction machine learning models to predict the response team prediction object(s).</p><p id="p-0087" num="0086">The service identifier associated with the alert attributes of an alert related dataset may classify the responder teams associated with the specific service, the upstream and downstream services for the specific service, the service tier level, and/or the number of other impacted services associated with the specific service. The service identifier may classify the responder team based on the type of error identified (e.g., alert identifier), and may further identify the service team (i.e., response team) associated with the service or type of error based on the alert. For example, if the alert identifier is classified as a CPU error, the service identifier may likewise classify only CPU responder teams. Based on the service identifier processed by the responder prediction machine learning model, the responder prediction machine learning model may limit the possible response team prediction objects to only those teams that may work on a CPU error or those teams familiar with CPU errors to select from for generating a responder team prediction object. Likewise, if the alert identifier is classified as bug error preventing source code from running, front-end API errors, security threats, login errors, tenant, integration errors, data transfer errors; the service identifier may also be classified as source code teams or those familiar with the source code, front-end API teams or those familiar with the front-end API, security teams or those familiar with the security of the complex platform, login and tenant supervising teams, or data integration teams or those familiar with data integration, respectively.</p><p id="p-0088" num="0087">The response team identifier associated with the alert attributes of an alert related dataset may identify, or classify, a specific team or specific teams for each alert of the alert related datasets. The response team identifier may comprise data objects identifying specific teams, team members, correspondence data of each team member, or other specific identifying information of a responder team that previously attended to one or more alerts. The response team identifier may be processed by a responder prediction machine learning model for training so that the responder prediction machine learning model may generate the same or similar response team identifiers when processing an alert (e.g., a real-time alert). The alert attributes of the associated alert related datasets may be aggregated to generate a responder prediction training corpus.</p><p id="p-0089" num="0088">At step <b>403</b>, the responder prediction machine learning model may be trained using the training corpus of the associated alert related datasets. The responder prediction machine learning model may process each of the alert attributes (alert identifier, log identifier, description identifier, tag identifier, and responder team identifier) in order to identify relationships and patterns between each alert attribute. By identifying the patterns between each alert attribute, the responder prediction machine learning model may process an alert comprising one, two, or three of the alert attributes to determine a likely responder team identifier of an alert (i.e., real-time alert).</p><p id="p-0090" num="0089">At step <b>404</b>, the responder prediction machine learning model, after training with the training corpus, may be stored in a responder prediction model repository.</p><p id="p-0091" num="0090">The responder prediction model repository <b>108</b> may be embodied as a data storage device such as a Network Attached Storage (NAS) device or devices, or as a separate database server or servers. The responder prediction model repository <b>108</b> may include information accessed or stored by the responder prediction service <b>106</b> to facilitate the operations of the responder prediction server system <b>101</b>. The responder prediction model repository <b>108</b> may further store a plurality of machine learning models (e.g., the responder prediction machine learning model and/or the prioritization machine learning model), alert related datasets used to train the machine learning models (e.g., one or more training corpuses), alert data, response team data (e.g., identifying data associated with specific response teams or members of response teams) associated with the specific alert, or a response team prediction data unit comprising a database of possible response teams and identifying data associated with the possible response teams.</p><p id="p-0092" num="0091">In some embodiments, the responder prediction machine learning model may be further trained using a second training corpus comprising a second alert related dataset, like the process depicted in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, comprising process <b>600</b>. The process of <b>600</b> begins at operation <b>601</b> with the responder prediction service <b>106</b> collecting a second alert related dataset from the alert extractor unit <b>113</b>. At step <b>602</b>, the responder prediction service <b>106</b> may extract a second set of alert attributes from the second alert related dataset in order to generate a second responder prediction training corpus. The second alert related dataset may be extracted based on an alert monitoring service tool (e.g., alert monitoring service tool <b>151</b>) over a second predetermined time period. For instance, the alert monitoring service tool may only transmit alert related datasets associated with a specific second predetermined time period such as a predetermined time period taking place after the predetermined time period of <figref idref="DRAWINGS">FIG. <b>4</b></figref>. In some embodiments, the second predetermined time period may comprise a portion of the predetermined time period of <figref idref="DRAWINGS">FIG. <b>4</b></figref> such that there is an overlap of time and data in the alert related dataset and the second alert related dataset. In some embodiments, the second predetermined time period may comprise a time period before the predetermined time period of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, such that the second alert related dataset comprises older in time alert attributes which may not be as up-to-date as the predetermined time period used to train the responder prediction machine learning model of method <b>400</b>. Similar to the predetermined time period of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the second predetermined time period may also comprise time such as days, months, years, or any time within those periods. In some embodiments, the second predetermined time period may comprise a time period after the predetermined time period of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, such that the second alert related dataset comprises current alert attributes. In some embodiments, a user may select, via a GUI, the second predetermined time period from a plurality of possible predetermined time periods.</p><p id="p-0093" num="0092">The second alert attributes of the of the second alert related datasets may be extracted by the responder prediction service <b>106</b> to generate the second responder prediction training corpus. Similar to the alert attributes of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the second alert attributes may also comprise an alert identifier, a description identifier, a log identifier, a tag identifier, and a responder team identifier for each associated alert related dataset of the second alert related datasets.</p><p id="p-0094" num="0093">At step <b>603</b>, the responder prediction machine learning model may be trained using the second responder prediction training corpus. At step <b>604</b>, the responder prediction machine learning model may be stored in the responder prediction model repository. The responder prediction model repository may store the versions of the responder prediction machine learning model as separate versions and track updates to the responder prediction machine learning model as it is trained and stored to the responder prediction model repository.</p><p id="p-0095" num="0094">An example training operation may be shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, wherein <figref idref="DRAWINGS">FIG. <b>11</b></figref> provides example training operations performed on the responder prediction machine learning model. In some embodiments, alert related datasets may be extracted from an alert monitoring service tool <b>151</b> at <b>1101</b>. The alert attributes of the alert related datasets may be extracted by a responder prediction service <b>106</b> at <b>1102</b>. A responder prediction training corpus is generated at <b>1103</b> based on the extracted alert attributes. The responder prediction training corpus of <b>1103</b> is processed by the responder prediction machine learning model to train the responder prediction machine learning model at <b>1105</b>. Once the responder prediction machine learning model has been trained with the responder prediction training corpus of <b>1103</b>, the responder prediction machine learning model is stored in the responder prediction model repository <b>108</b> at <b>1106</b>. In some embodiments, an acknowledgement of receipt by the responder prediction model repository <b>108</b> may be transmitted to the responder prediction service <b>106</b> at <b>1107</b>.</p><p id="p-0096" num="0095">In some embodiments, the responder prediction service <b>106</b> may return a status or acknowledgement of the responder prediction machine learning model to the monitoring service tool <b>151</b> at <b>1108</b>A. In some embodiments, the responder prediction service <b>106</b> may request second alert related datasets at <b>1108</b>B for further training of the responder prediction machine learning model. In some embodiments, the monitoring service tool <b>151</b> may automatically send the second alert related datasets to the responder prediction service <b>106</b> in combination with the alert related dataset of <b>1101</b>. In some embodiments, the monitoring service tool <b>151</b> may automatically send the second alert related datasets to the responder prediction service <b>106</b> after the monitoring service tool <b>151</b> has received the status of the responder prediction machine learning model at <b>1108</b>A.</p><p id="p-0097" num="0096">In some embodiments, the monitoring service tool <b>151</b> may extract second alert related datasets and transmit the second alert related datasets to the responder prediction service <b>106</b> at <b>1111</b>. In some embodiments, the responder prediction service <b>106</b> may extract second alert attributes from the second alert related datasets at <b>1112</b>. Based on the second alert attributes, the responder prediction service <b>106</b> may generate a second responder prediction training corpus at <b>1113</b>. The second responder prediction training corpus generated at <b>1113</b> by the responder prediction service <b>106</b> may be processed by the responder prediction machine learning model at <b>1115</b> in order to train the responder prediction machine learning model. In some embodiments, once the responder prediction machine learning model has been further trained by the second responder prediction machine learning model at <b>1115</b>, the responder prediction machine learning model may be stored by the responder prediction model repository <b>108</b> at <b>1116</b>. In some embodiments, once the responder prediction machine learning model has been stored at <b>1116</b>, the responder prediction model repository <b>108</b> may return a status or acknowledgement of the responder prediction machine learning model to the responder prediction service <b>106</b> at <b>1117</b>. In some embodiments, the responder prediction service <b>106</b> may, after receiving acknowledgement from the responder prediction model repository <b>108</b>, return the status of the responder prediction machine learning model at <b>1118</b>A. In some embodiments, the status of the responder prediction machine learning model may comprise an acknowledgement from the responder prediction model repository <b>108</b> that the responder prediction service <b>106</b> is performing and/or to indicate that an alert was processed successfully. In some embodiments, the status of the responder prediction machine learning model may indicate that the responder prediction service <b>106</b> is not performing and that an error was returned by one or more components (e.g., responder prediction machine learning model, prioritization machine learning model, response prediction model training unit, etc.) of the responder prediction service <b>106</b>.</p><p id="p-0098" num="0097">In some embodiments, a prioritization machine learning model <b>175</b> may be trained within the responder prediction server system <b>101</b>. For example, and as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a prioritization machine learning model <b>175</b> may be trained using responder prediction corpus of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, wherein the responder prediction corpus comprising alert attributes further comprises an alert attribute of a prioritization weight identifier. The prioritization weight identifier of the responder prediction corpus used to train the prioritization machine learning model may comprise prioritization weights generated from a previous predetermined time period (e.g., the predetermined time period of the responder prediction training corpus of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, or a different predetermined time period than the responder prediction training corpus of <figref idref="DRAWINGS">FIG. <b>4</b></figref>). The prioritization weight may be used to identify certain orders or sequences of processing the alerts through the responder prediction machine learning model <b>155</b> or the prioritization weight may be used to identify certain orders or sequences of transmitting the alerts to the prediction responder teams (i.e., order to transmitting the responder team prediction objects to the prediction service API and/or the client computing devices). For example, a higher prioritization weight (e.g., P1) associated with an alert processed by a responder prediction machine learning model may be processed before an alert comprising a lower processing weight (e.g., P2, P3, P4, etc.). Alternatively, the prioritization weights may be listed alternatively with P1 being the lowest, and the last alert processed, and any number above P1 comprising higher priority (e.g., P2 is higher than P1 but lower than P3, P3 is higher than P2 but lower than P4, P4 is higher than P3 but lower than P5, all the way up to PN).</p><p id="p-0099" num="0098">In some embodiments, the prioritization machine learning model <b>175</b> may be trained based on a prioritization weight identifier comprised within an alert attribute of the responder prediction training corpus. The prioritization weight identifier may review each of the alerts associated with the alert related datasets of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, further including the associated prioritization weight identifiers, and based on at least the associated prioritization weight identifiers and the other alert attributes (i.e., alert identifier, service identifier, tag identifier, log identifier, description identifier, and responder team identifier), the prioritization machine learning model <b>175</b> may be trained to learn associations between each of the alert attributes. For example, the prioritization machine learning model <b>175</b> may identify certain relationships of the alert attributes, for each of the alerts within an alert related dataset, to certain patterns between alert identifiers, service identifiers, tag identifiers, log identifiers, description identifiers, and/or responder team identifiers of the alert attributes and a prioritization weight identifier.</p><p id="p-0100" num="0099">At step <b>702</b>, the prioritization machine learning model <b>175</b> may be stored in the responder prediction model repository <b>108</b>.</p><p id="p-0101" num="0100">In some embodiments, the prioritization machine learning model <b>175</b> may be trained with a second alert related dataset comprising second alert attributes. For example, and as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, second alert related datasets may be extracted and collected from one or more monitoring service tools (e.g., <b>151</b>) and transmitted to a responder prediction service <b>106</b>, at step <b>801</b>. The responder prediction service <b>106</b> may extract second alert attributes from the second alert related datasets in order to create a second responder prediction training corpus at step <b>802</b>. At step <b>803</b>, the prioritization machine learning model <b>175</b> may be trained using the second responder prediction training corpus. Once the prioritization machine learning model has been trained with the second responder prediction training corpus, the prioritization machine learning model <b>175</b> may be stored in the responder prediction model repository <b>108</b>.</p><heading id="h-0013" level="1">Example Model Processing Operations</heading><p id="p-0102" num="0101">Provided below are technique for generating a response team prediction object from one or more responder prediction machine learning models and, optionally, one or more prioritization machine learning models.</p><p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart diagram of an example process <b>500</b> for performing operations that are configured to determine a response team prediction object and rendering a response team suggestion interface based on said response team prediction object. Via the various operations of process <b>500</b>, the responder prediction server system <b>101</b> may train one or more machine learning models, including a responder prediction machine learning model and/or a prioritization machine learning model. The responder prediction server system <b>101</b> may use the trained machine learning model(s) to process one or more alerts in order to generate a response team prediction object. Once a responder team prediction object has been generated, it may transmitted to a prediction service API <b>171</b>, which may generate the response team prediction object and confidence score based on the responder team prediction object and transmit the response team prediction object and confidence score to the responder prediction enrichment service <b>181</b> or directly to the client computing device <b>102</b> which may comprise the responder prediction enrichment service <b>181</b>. In some embodiments, the responder prediction enrichment service <b>181</b> may configure a GUI of the client computing device with response team identifier data (e.g., data comprising response team name, response team participants, client computing device data of response team users, etc.) and may render a GUI with the response team identifier data associated with the responder team prediction object. The GUI rendered by the responder prediction enrichment service <b>181</b> may comprise response team predictions as user-viewable configuration of the response team prediction object(s).</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts a flowchart diagram of an example process for determining a response team prediction object and rendering a response team suggestion interface based on an alert and the associated response team prediction object. The responder prediction server system <b>101</b> is configured to store an alert extractor unit, a response prediction model training unit <b>115</b>, a responder prediction model repository <b>108</b>, and responder prediction service <b>106</b>.</p><p id="p-0105" num="0104">In some embodiments, the responder prediction server system <b>101</b> is configured to train the responder prediction machine learning model <b>155</b> and prioritization machine learning model <b>175</b>, which may both be used by the responder prediction service <b>106</b>, to process one or more alerts to generate a response team prediction object, and stored in a responder prediction model repository <b>108</b>. The alert monitoring service tool <b>151</b> may be configured to collect one or more alerts (e.g., real-time alerts). The alert monitoring service tool <b>151</b> may then transmit the collected one or more alerts to the responder prediction service <b>106</b>, at step <b>501</b>. The responder prediction machine learning model <b>155</b>, which may be housed in the responder prediction service <b>106</b>, may apply the responder prediction machine learning model <b>155</b> to the one or more alerts at step <b>502</b>. At step <b>503</b> and based on the processing of the one or more alerts by the responder prediction machine learning model <b>155</b>, a responder team prediction object for each alert may be determined.</p><p id="p-0106" num="0105">At step <b>504</b>, a response team suggestion interface based on the response team prediction object is rendered by the responder prediction service <b>106</b>. In some embodiments, the response team suggestion interface may be transmitted to the client computing device <b>102</b> from a prediction service API in communication with the responder prediction service <b>106</b>. In some embodiments, the prediction service API may do the rendering of the response team suggestion interface based on a transmitted response team prediction object from the responder prediction service <b>106</b>.</p><p id="p-0107" num="0106">In some embodiments, a prioritization machine learning model <b>175</b> may also be applied to the one or more alerts to determine a prioritization associated with each alert. An example processing operation may be shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, wherein <figref idref="DRAWINGS">FIG. <b>9</b></figref> provides receiving one or more responder prediction data objects from the responder prediction machine learning model <b>155</b> at step <b>901</b>. The one or more outputs may be applied to a prioritization machine learning model to determine a prioritization weight for each responder prediction data objects at step <b>902</b>. The prioritization machine learning model may process the one or more responder prediction data objects after the responder prediction machine learning model, such that the output of the responder prediction machine learning model <b>155</b> (e.g., responder prediction data object) is processed by the prioritization machine learning model <b>175</b>. In such an embodiment, the prioritization machine learning model may generate a rearranged sequence of the one or more response team prediction objects based on the one or more alerts, wherein if an alert associated with the response team prediction object is assigned a higher priority (e.g., P1), then the response team prediction object may be rearranged to the top of the sequence of the one or more response team prediction objects and transmitted to the prediction service API <b>171</b> and subsequently to the client computing device <b>102</b> (or the responder prediction enrichment service <b>181</b>), as a response team suggestion interface comprising a response team prediction, before other response team prediction objects of lower priority are transmitted to the prediction service API <b>171</b>. Alternatively, if the response team prediction object is assigned a lower priority (e.g., P2, P3, P4, etc.), then the response team prediction object may be rearranged to the bottom of the sequence of the one or more response team prediction objects and transmitted to the prediction service API <b>171</b> and subsequently to the client computing device (or the responder prediction enrichment service <b>181</b>), as the response team suggestion interface comprising a response team prediction, after other response team prediction objects of higher priority have been transmitted to the prediction service API <b>171</b>.</p><p id="p-0108" num="0107">An example processing operation to generate a response team prediction object and rendering a response team suggestion interface may be shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, wherein <figref idref="DRAWINGS">FIG. <b>12</b></figref> provides example processing operations performed on the one or more alerts received from the alert monitoring service tool <b>151</b>. In some embodiments, one or more alerts are extracted by an alert monitoring service tool <b>151</b> and transmitted to the responder prediction service <b>106</b> at <b>1201</b>. The one or more alerts are applied to a responder prediction machine learning model at <b>1213</b> to generate one or more response team prediction objects, at <b>1213</b> and <b>1214</b>, respectively. In some embodiments, a prioritization machine learning model <b>175</b> may be applied to the one or more alerts to generate a prioritization weight of each of the one or more alerts before the one or more alerts are processed by the responder prediction machine learning model <b>155</b>. In some embodiments, a prioritization machine learning model <b>175</b> may be applied to the one or more response team prediction objects generated from the responder prediction machine learning model <b>155</b> to generate a prioritization weight of each of the response team prediction objects.</p><p id="p-0109" num="0108">In some embodiments, the responder prediction service <b>106</b> may store the one or more response team prediction objects in the responder prediction model repository <b>108</b>, at <b>1215</b>. The one or more response team prediction objects stored in the responder prediction model repository <b>108</b> may comprise a prioritization weight generated by a prioritization machine learning model <b>175</b>. In some embodiments, the prioritization weights of the associated response team prediction objects may determine a sequence of storing the one or more response team prediction objects in the responder prediction model repository <b>108</b> (e.g., a response team prediction object with a higher prioritization weight may be stored before a response team prediction object with a lower prioritization weight).</p><p id="p-0110" num="0109">In some embodiments, the responder prediction model repository <b>108</b> may transmit an acknowledgment of the update of the responder prediction machine learning model stored in the responder prediction model repository <b>108</b> at <b>1216</b>. In some embodiments, the responder prediction model repository <b>108</b> may transmit an acknowledgement of an update of the prioritization machine learning model stored in the responder prediction model repository <b>108</b> to the responder prediction service <b>106</b>.</p><p id="p-0111" num="0110">In some embodiments, the responder prediction service <b>106</b> may generate a response team suggestion interface at <b>1217</b> to for rendering on a client computing device <b>102</b>. In some embodiments, the responder prediction service <b>106</b> may generate the response team suggestion interface at <b>1217</b> and transmit the response team suggestion interface to the client computing device <b>102</b> at <b>1218</b>. In some embodiments, the responder prediction service <b>106</b> may generate the response team suggestion interface at <b>1217</b> and transmit the response team suggestion interface to a prediction service API <b>171</b> that is in communication with a client computing device <b>102</b>. In some embodiments, the responder prediction service <b>106</b> may generate the response team prediction object for each of the one or more alerts at <b>1214</b>, and after transmitting the one or more response team prediction objects to the responder prediction model repository <b>108</b> at <b>1215</b> and receiving acknowledgement at <b>1216</b>, the responder prediction service <b>106</b> may transmit the one or more response team prediction objects to the prediction service API <b>171</b> to generate the response team suggestion interface. In some embodiments, the prediction service API <b>171</b> may transmit the generated response team suggestion interface to the client computing device <b>102</b>. In some embodiments, feedback from the client computing device may be transmitted back to the responder prediction service <b>106</b> as a binary indication that the response team prediction objects generated by the responder prediction service <b>106</b> was correct or incorrect (e.g., a user of the client device may select a &#x201c;button&#x201d; configured on the GUI to indicate whether the response team prediction was correct&#x2014;check&#x2014;or incorrect&#x2014;cross-mark (&#x201c;X&#x201d;)). A person of skill in the art will understand that any feedback function or configured GUI comprising a feedback interface may be used by the invention described herein to receive user interaction data of the performance of the responder prediction service <b>106</b> and that the feedback function is not limited &#x201c;buttons&#x201d; comprising checks or cross-marks (e.g., &#x201c;X&#x201d;).</p><heading id="h-0014" level="1">Example User Interface Configurations</heading><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an example GUI configured on a client computing device <b>102</b> in accordance with a response team suggestion interface. With respect to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, a GUI of a client computing device <b>102</b> may be configured to indicate one or more response team predictions in the response team suggestion interface. The response team prediction(s) in the response team suggestion interface may comprise indications of an alert, or error, type at <b>1005</b> and <b>1015</b>, wherein <b>1005</b> describes the type of effort as &#x201c;increased network accessibility&#x201d; and <b>1015</b> describes the alert as a &#x201c;login error&#x201d; and further describes the region of the alert as the &#x201c;EU region.&#x201d;). In some embodiments, the response team suggestion interface may further comprise the identification of the response team(s) for each of the one or more response team predictions (e.g., <b>1003</b>, <b>1013</b>, <b>1023</b>, <b>1033</b>). In some embodiments, the identification of the response team(s) for each of the one or more response team predictions may comprise one or more response teams that may be notified of the alert (e.g., <b>1013</b> comprises both the &#x201c;DBA Team&#x201d; and the &#x201c;Platform Team&#x201d; as response teams; <b>1023</b> and <b>1033</b> both identify a &#x201c;DBA Team&#x201d; and &#x201c;Front-End Team&#x201d;, respectively, for the associated response team prediction). In some embodiments, the GUI may be configured on the client computing device <b>102</b> to comprise buttons for user feedback for each of the one or more response team predictions, wherein the buttons may comprise a positive indication of user feedback that the response team prediction is correct (e.g., a &#x201c;check&#x201d; as shown at <b>1061</b>, <b>1062</b>, and <b>1063</b>) or negative indication of user feedback that the response team prediction is incorrect (e.g., an &#x201c;X&#x201d; as shown at <b>1051</b>, <b>1052</b>, and <b>1053</b>). By indicating that a response team prediction is correct or incorrect via GUI (e.g., through selection of the check or &#x201c;X&#x201d;) the client computing device <b>102</b> may transmit the feedback to the responder prediction server system <b>101</b> for further training of the one or more machine learning models within the responder prediction service <b>106</b> (e.g., responder prediction machine learning model <b>155</b> and/or prioritization machine learning model <b>175</b>).</p><p id="p-0113" num="0112">In some embodiments, the response team prediction of the response team suggestion interface may comprise a temporal indication (e.g., <b>1006</b>) of when the alert was detected in the complex platform.</p><p id="p-0114" num="0113">In some embodiments, the GUI of the client computing device <b>102</b> may be configured to indicate the prioritization weight (<b>1002</b>, <b>1012</b>, <b>1022</b>) for each of the response team predictions within the response team suggestion interface. In some embodiments, the response team predictions may be organized based on the associated prioritization weights. For example, the response team predictions of <figref idref="DRAWINGS">FIG. <b>10</b></figref> are organized with the highest prioritization weight <b>1002</b> (&#x201c;P1&#x201d;) at the top of the GUI and the lowest prioritization weight <b>1022</b> (&#x201c;P3&#x201d;) at the bottom of the GUI.</p><p id="p-0115" num="0114">It is to be understood the implementations are not limited to particular systems or processes described which may, of course, vary. It is also to be understood that the terminology used herein is for the purpose of describing particular implementations only and is not intended to be limiting. As used in this specification, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; include plural referents unless the content clearly indicates otherwise. Thus, for example, references to &#x201c;an image&#x201d; includes a combination of two or more images and references to &#x201c;a graphic&#x201d; includes different types and/or combinations of graphics.</p><p id="p-0116" num="0115">Although the present disclosure has been described in detail, it should be understood that various changes, substitutions and alterations may be made herein without departing from the spirit and scope of the disclosure as defined by the appended claims. Moreover, the scope of the present application is not intended to be limited to the particular embodiments of the process, machine, manufacture, composition of matter, means, methods, and steps described in the specification. As one of ordinary skill in the art will readily appreciate form the disclosure, processes, machines, manufacture, compositions of matter, means, methods, or steps, presently existing or later to be developed that perform substantially the same function or achieve substantially the same result as the corresponding embodiments described herein may be utilized according to the present disclosure. Accordingly, the appended claims are intended to include within their scope such processes, machines, manufacture, compositions of matter, means, methods, or steps.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>That which is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method of training a responder prediction machine learning model for generating response team predictions comprising:<claim-text>collecting alert related datasets originating from one or more alert monitoring service tools over a predetermined time period;</claim-text><claim-text>extracting alert attributes from the alert related datasets to create a responder prediction training corpus, wherein the alert attributes comprise an alert identifier, a tag identifier, a log identifier, a description identifier, and a responder team identifier;</claim-text><claim-text>training the responder prediction machine learning model using the responder prediction training corpus; and</claim-text><claim-text>storing the responder prediction machine learning model following training to a responder prediction model repository, wherein the responder prediction model repository is accessible by a responder prediction service.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:<claim-text>collecting second alert related datasets originating from the one or more alert monitoring service tools over a second predetermined time period;</claim-text><claim-text>extracting second alert attributes from the second alert related datasets to create a second responder prediction training corpus;</claim-text><claim-text>training the responder prediction machine learning model using the second responder prediction training corpus; and</claim-text><claim-text>storing the responder prediction machine learning model following training to the responder prediction model repository.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving one or more alerts from an alert monitoring service tool; and</claim-text><claim-text>applying, for each of the one or more alerts, a responder prediction machine learning model to determine a response team prediction object for each alert.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising applying a score to each response team prediction object of the one or more alerts.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising determining the score of the response team prediction object using at least one of a user input or a closing alert, and wherein the score is calculated by comparing the response team prediction object with at least one of the user input or the closing alert.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising training the responder prediction machine learning model in a subsequent stage using the score associated with each response team prediction object of the one or more alerts.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the score is applied to the responder prediction machine learning model to determine one or more future response team prediction objects.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising training a prioritization machine learning model comprising:<claim-text>training the prioritization machine learning model using the responder prediction training corpus, the alert attributes of the responder prediction training corpus further comprising a prioritization weight identifier; and</claim-text><claim-text>storing the prioritization machine learning model following training to the responder prediction model repository, wherein the responder prediction model repository is accessible by a responder prediction service.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>collecting second alert related datasets originating from the one or more alert monitoring service tools over a second predetermined time period;</claim-text><claim-text>extracting second alert attributes from the second alert related datasets to create a second responder prediction training corpus;</claim-text><claim-text>training the prioritization machine learning model using the second responder prediction training corpus; and</claim-text><claim-text>storing the prioritization machine learning model following training to the responder prediction model repository.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. An apparatus for generating a response team prediction associated with one or more alerts, the apparatus comprising at least one processor and at least one memory including program code, the at least one memory and program code configured to, with the processor, cause the apparatus to at least:<claim-text>receive one or more alerts from an alert monitoring service tool;</claim-text><claim-text>for each of the one or more alerts, apply a responder prediction machine learning model to determine a response team prediction object for each alert; and</claim-text><claim-text>cause rendering of a response team suggestion interface based on the response team prediction object.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the response team prediction object is transmitted to a prediction service API that is configured to indicate an alert notification comprising at least one of the response team prediction, a dataset of routing information associated with at least a client identifier set for the response team prediction, or the alert associated with the response team prediction.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the responder prediction machine learning model comprises a pre-training with an extracted alert related dataset associated with a complex platform.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the extracted alert related dataset comprises data extracted from a predetermined time period.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the at least one memory and program code configured to, with the processor, cause the apparatus to at least:<claim-text>receive one or more alerts from an alert monitoring service tool; and</claim-text><claim-text>for each of the one or more alerts, apply a prioritization machine learning model to determine a prioritization weight for each alert.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein an operation sequence of processing for the responder prediction machine learning model is applied to the one or more alerts based on the prioritization weight for each of the one or more alerts.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein an operation sequence for determining the response team prediction object is applied to the alerts based on the prioritization weight for each alert.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein an operation sequence for the rendering of the response team suggestion interface based on the response team prediction object is based on the prioritization weight for each of the one or more alerts used to generate the response team prediction object.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein a score is determined by the response team prediction associated with an alert and at least one of user input or a closing alert.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the score is applied to the responder prediction machine learning model to determine one or more future response team predictions.</claim-text></claim></claims></us-patent-application>