<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007482A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007482</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17826429</doc-number><date>20220527</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>FR</country><doc-number>21 05497</doc-number><date>20210527</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>069</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>069</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0894</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0855</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3239</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD FOR PROVISIONING KEYS IN A NETWORK OF CONNECTED OBJECTS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>COMMISSARIAT A L'ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES</orgname><address><city>Paris</city><country>FR</country></address></addressbook><residence><country>FR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>HENNEBERT</last-name><first-name>Christine</first-name><address><city>Grenoble Cedex 09</city><country>FR</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>COMMISSARIAT A L'ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES</orgname><role>03</role><address><city>Paris</city><country>FR</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method provisions keys in a network of connected objects, including a plurality of such objects as well as a programming station. The nodes of the network could communicate over a main channel and over a secure auxiliary channel, distinct from the main channel. After a first phase of authentication and mutual identification with the nodes of the network, a terminal including a secure hardware element, broadcasts, in a second phase, a set of secret keys to each node, via the auxiliary channel, the set of secret keys including a first secret key intended to authenticate the nodes belonging to the network and a second secret key, intended to encrypt the exchanges over the main channel. In a third phase, the programming station performs a discovery of the nodes of the network.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="95.17mm" wi="158.75mm" file="US20230007482A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="238.17mm" wi="143.68mm" orientation="landscape" file="US20230007482A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="205.32mm" wi="183.73mm" file="US20230007482A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="245.45mm" wi="126.75mm" file="US20230007482A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="140.97mm" wi="139.53mm" file="US20230007482A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="225.81mm" wi="162.39mm" orientation="landscape" file="US20230007482A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="249.51mm" wi="172.64mm" file="US20230007482A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="178.48mm" wi="191.26mm" file="US20230007482A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="208.03mm" wi="185.00mm" file="US20230007482A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="214.97mm" wi="163.15mm" orientation="landscape" file="US20230007482A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates to the general field of wireless sensor networks or WSNs. In particular, it finds application in the field of smart home and more generally of home automation.</p><heading id="h-0002" level="1">PRIOR ART</heading><p id="p-0003" num="0002">A smart home involves networks of objects such as sensors and actuators, connected to the Internet. The sensors may measure physical quantities such as the pressure, the temperature, the contact, the presence of gas, the light in the visible or the infrared, etc. and the actuators may act on the environment by controlling a switch, the closure or the opening of a gate, roller shutters, by modifying a setpoint temperature, by unlocking a door, etc.</p><p id="p-0004" num="0003">In general, the network of connected objects further comprises a programming station used to transmit commands to said objects and enabling the installer or the user to monitor the network. Depending on the used communication protocol, the topology of the network may be a mesh network or a star network.</p><p id="p-0005" num="0004">Such a network of connected objects is in the form of a local network connected to the Internet via a gateway. In general, the communication protocols within this network are proprietary but could alternatively use standards such as ZigBee or 6LowPAN based on low-consumption (physical and link) low layers of IEEE 802.15.4.</p><p id="p-0006" num="0005">The function of the gateway is to pass on data and/or commands between a server of the Cloud and the sensors/actuators of the network. While the communication between the gateway and the server is secure, the data transmission within the network of connected objects is not necessarily so.</p><p id="p-0007" num="0006">In order to protect the connected objects against attacks, aiming for example in the context of home automation to take control of an actuator, it is necessary to encrypt the communications within the network of connected objects.</p><p id="p-0008" num="0007">To this end, it is possible to use secure pairing techniques between devices based on a Diffie-Hellman protocol to share a symmetrical key. Nonetheless, this supposes that the connected objects are provided with enough capabilities to perform asymmetrical elliptic-curve cryptographic computations, which is not the case in general.</p><p id="p-0009" num="0008">Other techniques could allow sharing a common secret key like that of the secure multi-party computing or MPC (Multi Party Computing) enabling a plurality of pairs to agree on a common result. Nonetheless, the latter can be implemented only for a unique communication channel.</p><p id="p-0010" num="0009">An objective of the present invention is to provide a method for provisioning keys within a network of connected objects enabling these to securely communicate. A secondary objective of the present invention is to provide a method for provisioning keys which is simple and robust, in particular in case of addition or replacement of a connected object, and in case of change of the owner of the network.</p><heading id="h-0003" level="1">DISCLOSURE OF THE INVENTION</heading><p id="p-0011" num="0010">The present invention is defined by a method for provisioning keys in a wireless network whose nodes comprise a programming station and a plurality of connected objects, characterised in that it implements a terminal including a secure hardware element in which secret keys are stored, the different nodes of the network being able to communicate over a main channel and over an auxiliary channel, distinct from the main channel, said terminal being able to communicate with the different nodes of the network only over the auxiliary channel, said method comprising:</p><p id="p-0012" num="0011">a first phase during which the terminal and each node of the network authenticate and mutually identify themselves via the auxiliary channel by means of a public key of the manufacturer;</p><p id="p-0013" num="0012">a second phase during which the terminal securely distributes a set of secret keys to the different nodes of the network, said set of secret keys comprising a first secret key AuthN), intended to authenticate the nodes belonging to the network and a second secret key (ConfN) intended to encrypt exchanges over the main channel;</p><p id="p-0014" num="0013">a third phase during which the programming station discovers the network by means of a discovery message broadcast to the connected objects, the discovery message being authenticated by means of the first secret key and, in case of successful authentication of said message by a connected object, sending of an acknowledgment message to the programming station, encrypted by the second secret key.</p><p id="p-0015" num="0014">According to a first embodiment of the invention, each node is equipped with a first antenna adapted to emit and receive over the principal channel and with a second antenna adapted to emit and receive over the auxiliary channel, the propagation over the auxiliary channel having a range substantially shorter than the propagation over the main channel.</p><p id="p-0016" num="0015">Advantageously, the terminal, resp. each node of the network, is provided with a unique identifier of the manufacturer and embeds a binary code, said binary code being hashed by means of a hash function, the result of hashing being concatenated with said unique identifier, the whole being signed by a private key corresponding to the public key of the manufacturer and the signed result being stored in the terminal, resp. node in the form of a signed identifier, and that, in the first phase, the terminal transmits its signed identifier to each node of the network, the node authenticating the terminal from the signed identifier of the terminal and from said public key of the manufacturer and that, conversely, each node transmits its signed identifier to the terminal, the terminal authenticating each node from the signed identifier of the node and from said public key of the manufacturer.</p><p id="p-0017" num="0016">In case of success of authentication of the terminal by a node, the identifier of the terminal is stored in an EEPROM memory of this node.</p><p id="p-0018" num="0017">In the second phase, the terminal transmits, via the auxiliary channel, said set of secret keys to each node and that, in the case where the identifier of the terminal is stored in the node, the latter stores said set of secret keys in the EEPROM memory of the node and switches its emitter/receiver to the main channel.</p><p id="p-0019" num="0018">According to a second embodiment, the auxiliary channel between the station and each node is encrypted by means of a symmetrical link key obtained from an ephemeral session key, of the identifier of the terminal as well as the identifier of said node.</p><p id="p-0020" num="0019">The ephemeral session key could then be obtained by means of a Diffie-Hellman exchange between the terminal and the programming station.</p><p id="p-0021" num="0020">Preferably, in the second phase, the terminal transmits, in a first step, said set of secret keys to the programming station, said set of secret keys being encrypted by means of the ephemeral session key.</p><p id="p-0022" num="0021">In the second phase, the terminal advantageously transmits, in a second step, said set of secret keys to each node, said set of secret keys being encrypted by means of the symmetrical link key associated to the terminal and to this node, said symmetrical link key being obtained as a hash of the ephemeral key concatenated with the unique identifier of the terminal and with the unique identifier of the node.</p><p id="p-0023" num="0022">Irrespective of the embodiment, in the third phase, when a node successfully authenticates a discovery message emitted by the programming station, it sends to it an acknowledgement message signed by the second secret key, the programming station then storing the identifier of said object in its local memory after having decrypted it with the second secret key.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading><p id="p-0024" num="0023">Other features and advantages of the invention will appear upon reading a preferred embodiment of the invention, described with reference to the appended figures wherein:</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically represents an example of a network of connected objects to which the method for provisioning keys according to the present invention could be applied;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b></figref> represents a secure dongle allowing provisioning keys in the network of connected objects of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically represents the inner architecture of the secure dongle of <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>4</b></figref> represents a programming station allowing programming the connected objects of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically represents the inner architecture of the programming station of <figref idref="DRAWINGS">FIG. <b>4</b></figref>;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>6</b></figref> schematically represents the inner architecture of a connected object in the network of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>7</b></figref> schematically represents a phase of authentication and mutual identification between the secure dongle and a node of the network;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>8</b></figref> schematically represents a step of transmission of secret keys by the secure dongle to the programming station, in the context of a first embodiment of the invention;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>9</b></figref> schematically represents a step of transmission of secret keys by the secure dongle to a connected object, in the context of the first embodiment of the invention;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>10</b></figref> schematically represents a step of transmission of secret keys by the secure dongle to the programming station, in the context of a second embodiment of the invention;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>11</b></figref> schematically represents a step of transmission of secret keys by the secure dongle to a connected object, in the context of the second embodiment of the invention;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>12</b></figref> schematically represents a phase of discovering the network of connected objects by the programming station.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0037" num="0036">Next, a network of connected objects will be considered, as example and without prejudice to generalisation, in a home automation context. Nonetheless, a person skilled in the art should understand in the description of the embodiments that the method for provisioning keys according to the present invention could apply to any network of connected objects that should operate in a secure manner, for example to an industrial network of connected objects (IIoT or Industrial IoT).</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically represents an example of a network of connected objects in the home automation field.</p><p id="p-0039" num="0038">A secure communication terminal, <b>100</b>, external to the network, for example a dongle or else a smartphone provided with a dedicated application. This terminal includes a secure hardware area or SE (Secure Element) in which secret keys are stored. It allows provisioning the secret keys in the network, in other words distributing these keys to the different nodes of the network, as described later on. In the next description, we will assume, without prejudice to generalisation, that this terminal is a dongle.</p><p id="p-0040" num="0039">The network comprises a programming station, <b>101</b>, provided with a user interface to parameterise the connected objects and monitor the operation of the network.</p><p id="p-0041" num="0040">In general, the connected objects themselves (<b>102</b><i>a</i>, <b>102</b><i>b</i>, <b>102</b><i>c</i>) are sensors or actuators which could emit data to and/or receive data originating from an IP gateway (not represented) connected to the Internet. The IP gateway may be integrated into the programming station.</p><p id="p-0042" num="0041">The different nodes of the network (programming station, connected objects) are provided with a radio main channel (main channel) by means of which the different nodes of the network could transmit useful data once the network is configured.</p><p id="p-0043" num="0042">The nodes of the network are further provided with an auxiliary channel (out-of-band channel), distinct from the main channel, allowing distributing secret keys used for the authentication of the nodes and for securing the communications within the network.</p><p id="p-0044" num="0043">According to a first embodiment, the auxiliary channel uses a distinct physical layer, based on a short-range propagation (NFC, VLC, LiFi, ultrasound channel, for example).</p><p id="p-0045" num="0044">The embedded software in the nodes should then be capable of switching from one physical layer to another and, where appropriate, from a protocol stack to another.</p><p id="p-0046" num="0045">According to a second embodiment, the auxiliary channel is obtained by configuring the physical layer of the main channel so as to reduce the range of the propagation. The software embedded in the nodes should then be capable of quickly switching the configuration of the physical layer of the used standard (typically IEEE 802.15.4).</p><p id="p-0047" num="0046">The different nodes of the network are described in more details hereinafter.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically represents an example of a secure dongle which could be used in the network of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0049" num="0048">This dongle, powered by a battery, <b>210</b>, is equipped with an emitter/receiver, <b>220</b>, only capable of emitting and receiving over the auxiliary channel (for example NFC or ultrasound), a start-up button, <b>230</b>, and one or two button(s), <b>241</b>, <b>242</b> allowing in particular making words or commands scroll on the screen, <b>250</b>.</p><p id="p-0050" num="0049">The dongle has a protocol stack enabling it to establish a communication over the auxiliary channel with each node of the network.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically represents the inner architecture of the dongle of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0052" num="0051">The architecture of the dongle is split into a non-secure area, <b>310</b>, and a secure area, <b>320</b>.</p><p id="p-0053" num="0052">The non-secure area comprises a CPU, <b>315</b>, a RAM memory, <b>311</b> and a flash memory, <b>313</b>, in which the code monitoring the dongle is stored. The processor <b>315</b> manages the buttons, <b>317</b>, the screen, <b>318</b>, as well as the protocol stack of the auxiliary channel, <b>319</b>.</p><p id="p-0054" num="0053">In turn, the secure area is in the form of a secure hardware element SE (secure element), also called security hardware component, capable of storing the secret keys in a protected memory area (EEPROM), <b>321</b>. It further comprises a secure processor, <b>325</b>, capable of assessing cryptographic functions and primitives, in particular signing and encrypting data by means of these keys. Where appropriate, the secure element may comprise a hardware accelerator in the form of a special-purpose coprocessor (cryptoprocessor), <b>323</b>. The cryptographic functions are recorded in a flash memory, <b>327</b>, of the secure area.</p><p id="p-0055" num="0054">Finally, the secure area comprises a generator of random numbers, TRNG (True Random Number Generator), <b>329</b>, using a physical entropy source.</p><p id="p-0056" num="0055">The secure hardware element, <b>320</b>, has a high security level in order to be robust to physical and logical attacks, preferably an EAL5 security level. Preferably, the generator of random numbers meets the requirements of the standard AIS31.</p><p id="p-0057" num="0056">Advantageously, access to the secure area is done only on interruption. For example, as we will see later on, a simultaneous press on the buttons <b>317</b>, triggers reading of the secret keys stored in the EEPROM memory, <b>321</b>, by the CPU <b>315</b>.</p><p id="p-0058" num="0057">Upon the first start-up of the dongle, the generator of random numbers generates a seed (master seed) and a series of passwords (pass phrase) is derived therefrom.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>4</b></figref> represents a programming station allowing programming the connected objects of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0060" num="0059">The programming station is powered by a battery and possibly a low-voltage power supply, <b>410</b>, and is provided with a user interface (screen, menu keys, keyboard, etc.), <b>420</b> enabling the user to configure the mode of the station and send commands to the different connected objects. The screen allows presenting the menu of the functions and returning information to the user.</p><p id="p-0061" num="0060">According to the first embodiment, the programming station is equipped with two distinct stations. The first antenna, <b>431</b>, is used to communicate over the main channel in emission/reception with the connected objects. The second antenna, <b>432</b>, is used to receive over the auxiliary channel messages from the secure dongle and, where appropriate, return back acknowledgements of receipt and identification messages.</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically represents the inner architecture of the programming station of <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0063" num="0062">The programming station comprises a microcontroller, <b>510</b>, for example a 32-bit microcontroller, capable of assessing asymmetrical elliptic-curve cryptographic functions. The programming station is provided in its flash memory, <b>523</b>, with a library of cryptographic primitives enabling it to compute standard elliptic-curve cryptographic functions: generation of an ephemeral pair of public/private keys, digital signature and ECDSA verification.</p><p id="p-0064" num="0063">The microcontroller manages the buttons, <b>524</b>, the screen, <b>525</b>, as well as the layers of the protocol stacks of the auxiliary channel, <b>526</b>, and of the main channel, <b>527</b>.</p><p id="p-0065" num="0064">Unlike the dongle, the programming station does not comprise any secure hardware element. Indeed, as we will see later on, the secret keys are transferred to the programming station and stored in an EEPROM-type permanent memory, <b>521</b>. Finally, the programming station is provided with a RAM memory, <b>522</b>.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>6</b></figref> schematically represents the inner architecture of a connected object in the network of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0067" num="0066">The connected objects have a simple architecture involving little hardware resources. They include a microcontroller (16-bit or 32-bit), <b>610</b>, a flash memory, <b>621</b>, in which the operating code is stored, a RAM memory, <b>622</b>, and, where appropriate, an EEPROM memory, <b>623</b>, secret keys supplied by the dongle could be permanently stored. The code comprises functions allowing verifying an ECDSA digital signature from a public key contained in a digital certificate, so as to be able to authenticate the secure dongle, as described later on.</p><p id="p-0068" num="0067">The microcontroller manages the layers of the protocol stacks of the auxiliary channel, <b>624</b>, and of the main channel, <b>625</b>, like in the programming station.</p><p id="p-0069" num="0068">According to the first embodiment, each of the connected objects is equipped with two distinct antennas, the first antenna being used to communicate in emission/reception over the main channel with the programming station as well as with the gateway, the second antenna being used to receive over the auxiliary channel messages from the secure dongle and, where appropriate, return back acknowledgements of receipt and identification messages.</p><p id="p-0070" num="0069">The method for provisioning keys in the network comprises a first phase in which the dongle and the different nodes of the network authenticate and mutually identify themselves and a second phase in which the dongle securely distributes secret keys to the different nodes of the network. These two phases are followed by a third phase of discovering the nodes and forming the network by the programming station. Only the second phase depends on the embodiment, the first and third phases being common to both embodiments.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>7</b></figref> schematically represents a phase of authentication and mutual identification between the secure dongle and the different nodes of the network.</p><p id="p-0072" num="0071">It should be noted beforehand that each node of the network (programming station, connected object, gateway) has a unique identifier assigned thereto by the manufacturer of the hardware. Moreover, the embedded binary code (firmware) in each of the nodes is hashed by means of a hash function (for example SHA-1, SHA256, Keccak). The result of hashing is concatenated with the identifier of the node and the whole is then signed with the private key of the manufacturer, for example by means of the ECDSA algorithm. The concatenated set and the signature thus obtained, called digital signature of the node, are stored with the binary code embedded in the flash memory of the node (in other words all computations are performed and stored upon manufacture of the node). Each node also embeds the digital certificate of the manufacturer and is therefore provided with the public key associated to the private key that has been used for the signature.</p><p id="p-0073" num="0072">In a prior step, <b>700</b>, the installer accesses the controls of the dongle by entering a password or a confidential code (PIN code).</p><p id="p-0074" num="0073">In a first step <b>710</b>, the dongle sends, via the auxiliary channel, a request for authentication to the node (programming station, connected object).</p><p id="p-0075" num="0074">The latter returns back, in <b>720</b>, over the auxiliary channel, an authentication message comprising the hash of its firmware, concatenated with its identifier, as well as the digital signature of the node, i.e. the signature of the hash of the firmware concatenated with the identifier of the node.</p><p id="p-0076" num="0075">Afterwards, in <b>730</b>, the dongle verifies by means of the ECDSA verification algorithm, that the digital signature is actually correct using the public key of the manufacturer. The public key needed to perform this verification is contained in the digital certificate of the manufacturer, embedded in the dongle.</p><p id="p-0077" num="0076">If the verification of the digital signature is conclusive, the node is authenticated, its identifier is stored as such in the EEPROM memory of the secure hardware element and the success of the authentication is signalled, for example by means of a message displayed on the screen of the dongle or a luminous/audible signal. It should be noted that this verification takes place only once, when the network is deployed, or else when a new node is added. Before proceeding with this verification, the dongle verifies that the identifier is not already in its EEPROM memory. If so, the verification of the digital signature, costly in terms of computations, is omitted.</p><p id="p-0078" num="0077">If the verification of the digital signature fails, an authentication failure message is displayed on the screen of the dongle.</p><p id="p-0079" num="0078">If the signature verification has been conclusive or the node has been already authenticated, the dongle, in turn, transmits, in <b>740</b>, an authentication message to the node. This message comprises a hash of the binary code (firmware) embedded in the dongle, concatenated with its identifier, the concatenated set being then signed with the private key of the manufacturer. The obtained signature is stored with the binary code embedded in the flash memory of the dongle (in other words these computations are performed upon manufacture).</p><p id="p-0080" num="0079">In turn, the node verifies, in <b>750</b>, by means of the ECDSA verification algorithm, that the digital signature is actually correct using the public key of the manufacturer. The public key needed to perform this verification is contained in the digital certificate of the manufacturer, embedded in the node.</p><p id="p-0081" num="0080">The success or the failure of this verification is signalled to the installer, by an audible and/or luminous signal.</p><p id="p-0082" num="0081">In case of success of the verification, the identifier of the dongle is stored in the EEPROM memory of the node.</p><p id="p-0083" num="0082">It should be noted that the failure of the authentication of the node or of the dongle could originate from the fact that the public key certificate stored in either one is obsolete. For this reason, the dongle preferably performs the signature verification at first. Thus, it could try several certificate versions (and therefore several public keys), to verify the digital signature of the node. If the dongle is provided with a plurality of digital signatures associated to different certificate versions, in other words if its memory contains the signatures (of the concatenated set formed by the hash of its firmware and its identifier) by means of the private keys corresponding to the versioned public keys, it could transmit to the node (at step <b>740</b>) that one associated to the version of the certificate that has enabled it to authenticate the node (at step <b>730</b>).</p><p id="p-0084" num="0083">Once the authentication and mutual identification phase is successfully performed, the secure dongle securely transmits a set of secret keys to the programming station.</p><p id="p-0085" num="0084">This set of secret keys comprises a first secret key ConfN used to encrypt information exchanged over the main channel and a second secret key, AuthN used to authenticate all of the nodes belonging to the network. Where appropriate, an initialisation vector or nonce IV will also be transmitted as a parameter of the encryption algorithm (AES for example).</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>8</b></figref> schematically represents a phase of transmitting secret keys by the secure dongle to the programming station, in the context of a first embodiment of the invention.</p><p id="p-0087" num="0086">In this embodiment, it is recalled that the transmission is done by means of an auxiliary channel based on a physical layer distinct from that of the main channel. The confidentiality of the transmission between the dongle and the nodes of the network is guaranteed by the short range of the propagation over the auxiliary channel.</p><p id="p-0088" num="0087">In a prior step, <b>800</b>, the installer accesses the controls of the dongle by introducing his password or PIN code.</p><p id="p-0089" num="0088">At step <b>810</b>, after having entered his installer code, he configures the programming station in an &#x201c;installation&#x201d; mode, for example by selecting this mode in a drop-down menu and then activates the &#x201c;reception of the secret keys&#x201d; function in the installation sub-menu. The activation of this function switches the emitter/receiver of the programming station in the reception mode to the antenna of the auxiliary channel for a time period with a predetermined duration (for example a few minutes).</p><p id="p-0090" num="0089">In <b>820</b>, the phase of authentication and mutual identification, herein between the dongle and the programming station, is represented as a reminder.</p><p id="p-0091" num="0090">At step <b>830</b>, the installer triggers the transmission of all secret keys by the dongle, for example by simultaneously pressing on the buttons <b>317</b> represented in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The secret keys are received by the programming station and stored in its EEPROM in <b>840</b> if the dongle has been successfully identified in the authentication phase, <b>820</b>.</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>9</b></figref> schematically represents a phase of transmission of secret keys by the secure dongle to a connected object, in the context of the first embodiment of the invention.</p><p id="p-0093" num="0092">This transmission phase is launched upon initialisation of the connected object, in particular upon first start-up (switching ON the cell). The EEPROM memory of the connected object is then automatically in the write enable mode (write enable) and the embedded code (firmware) starts execution thereof. The antenna of the object is automatically switched to the auxiliary channel using a short-range propagation.</p><p id="p-0094" num="0093">In a prior step, <b>900</b>, the installer accesses the controls of the dongle by entering a password or a confidential code (PIN code).</p><p id="p-0095" num="0094">In <b>910</b>, he then initialises the connected object for example by turning it on and places the dongle proximate to the considered object.</p><p id="p-0096" num="0095">In <b>920</b>, the phase of authentication and mutual identification between the dongle and the connected object has been recalled.</p><p id="p-0097" num="0096">At step <b>930</b>, the installer triggers the transmission of all secret keys by the dongle, for example by simultaneously pressing on the button <b>317</b> of the dongle represented in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The secret keys are received by the connected object and stored in its EEPROM in <b>940</b> if the dongle has been successfully identified in the authentication phase <b>920</b>. When the secret keys have been saved in memory, the connected object signals it by means of an audible/luminous signal (for example a green LED).</p><p id="p-0098" num="0097">Once the keys are saved, the antenna of the connected object is automatically switched to the main channel.</p><p id="p-0099" num="0098">The secret key transmission process is repeated for each of the connected objects intended to be part of the network. Afterwards, the connected objects thus provisioned are deployed on site.</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>10</b></figref> schematically represents a step of transmission of secret keys by the secure dongle to the programming station, in the context of a second embodiment of the invention.</p><p id="p-0101" num="0100">In this second embodiment, the transmission of the secrets is secured by means of an ephemeral session key, EPKEK (Ephemeral Partial Key Encryption Key), a symmetrical key obtained through a Diffie-Hellmann exchange between the dongle and the programming station. It should be noted that this ephemeral session key construction does not involve the connected objects. Thus, only the dongle and the programming station should embed asymmetrical cryptographic primitives.</p><p id="p-0102" num="0101">Steps <b>1000</b>, <b>1010</b>, <b>1020</b> are respectively identical to steps <b>800</b>, <b>810</b>, <b>820</b> described with reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref> for the first embodiment.</p><p id="p-0103" num="0102">At step <b>1030</b>, the dongle and the programming station use a Diffie-Hellmann key exchange protocol to build a symmetrical session key, EPKEK.</p><p id="p-0104" num="0103">At step <b>1040</b>, the installer triggers the transmission of all secret keys by the dongle in the secure mode, for example by simultaneously pressing on the buttons <b>317</b> of the dongle represented in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The secret keys are encrypted by means of the symmetrical session key, EPKEK, before being transmitted to the programming station.</p><p id="p-0105" num="0104">At step <b>1050</b>, the secret keys thus encrypted are received by the programming station, decrypted by means of the key EPKEK, and then stored in its EEPROM.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>11</b></figref> schematically represents a phase of distributing secret keys to the connected nodes by the dongle, in the context of the second embodiment of the invention.</p><p id="p-0107" num="0106">Firstly, as represented in the upper portion of the figure, the programming station broadcasts the session key to all connected objects. More specifically, after having entered his confidential code in <b>1100</b> on the programming station, the installer orders in <b>1110</b> the broadcast of the session key to all connected objects. This broadcast being carried out in the clear over the main channel, the session key is not secret. It is recorded in the EEPROM memory of each connected object in <b>1120</b>.</p><p id="p-0108" num="0107">Secondly, as represented in the lower portion of the figure, after the installer has introduced his confidential code in the dongle in <b>1130</b> and turned on the battery of each connected object in <b>1135</b>, he triggers in <b>1140</b> a phase of authentication and mutual identification between the dongle and the connected objects, as described in connection with the first embodiment. At the end of this phase, the dongle has recorded in its EEPROM memory the identifiers of the connected objects and, conversely, each connected object has recorded the identifier of the dongle in its EEPROM memory. Furthermore, when the dongle has successfully authenticated the connected objects of the network, the latter knows the version of the digital certificate embedded in these objects.</p><p id="p-0109" num="0108">Unlike the first embodiment, each pair formed by the dongle and a node of the network (programming station or connected object) then computes, in <b>1150</b>, a symmetrical link key, KEK(Ido,Idd) where Ido is the identifier of the connected object and Idd is the identifier of the dongle. More specifically, the dongle and the node compute the link key, each independently:</p><p id="p-0110" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>KEK</i>(<i>Ido,Idd</i>)=Hash(<i>EPKEK&#x2225;Ido&#x2225;Idd&#x2225;Idv</i>)&#x2003;&#x2003;[Math. 1]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0111" num="0000">where Idv is the identifier of the version of the digital certificate of the public key of the manufacturer, associated to the private key having been used to sign the code embedded in the connected object. It should be noted that the identifiers Ido, Idd and My are known by both the dongle and the connected object, at the end of the authentication and mutual identification phase. Where appropriate, the link key could be truncated into a predetermined number of bits (for example the first 128 bits) of the hash result.</p><p id="p-0112" num="0109">Upon request of the installer in <b>1160</b> (materialised by a press on both buttons <b>317</b>), the dongle transmits in <b>1170</b>, over the auxiliary channel, all secret keys in the form of a message encoded by the link key KEK(Ido,Idd). Of course, this operation is repeated for each connected object of the network. After reception of the message and decryption, the secret keys are then recorded in the EEPROM memory of the connected object in <b>1180</b>.</p><p id="p-0113" num="0110">Once the secret keys are broadcast to the programming station and to the connected objects, the programming station launches a phase of discovering the network in the secure mode. This phase is identical whether in the first or the second embodiment.</p><p id="p-0114" num="0111"><figref idref="DRAWINGS">FIG. <b>12</b></figref> schematically represents a phase of discovering the network of connected objects by the programming station.</p><p id="p-0115" num="0112">After having input his confidential code in <b>1200</b> on the programming station, the installer orders the latter in <b>1210</b> to discover the nodes of the network. The programming station then broadcasts, over the main channel, a message for discovering the nodes of the network in the secure mode. This discovery message is authenticated by generating an authentication code of this message or MAC (Message Authentication Code), for example by means of the CBC-MAC algorithm or the HMAC algorithm, starting from the secret key AuthN. The discovery message and its MAC code are broadcast to all connected nodes.</p><p id="p-0116" num="0113">When a connected object receives said discovery message with its authentication code AuthN, the latter propagates it to the neighbouring nodes, in <b>1220</b>. Afterwards, it reads the secret keys AuthN and ConfN in its EEPROM memory and verifies the authentication code of the discovery message using the secret key, AuthN.</p><p id="p-0117" num="0114">If the authentication code is successfully verified (in other words if the discovery message has actually been generated by the programming station of the network), the connected object sends back to the programming station an acknowledgment message including its identifier, IdoIdo, in <b>1230</b>. This acknowledgment message is authenticated by generating an authentication code MAC using the secret key, AuthN, then encrypted using the secret key ConfN.</p><p id="p-0118" num="0115">Upon reception of an acknowledgment message, the programming station decrypts the latter with the secret key ConfN, then verifies with the secret key AuthN that it actually originates from a node of the network. When the acknowledgment message has been actually authenticated by the programming station, the latter saves the identifier of the connected object having replied, Ido. In other words, only the connected objects, configured beforehand using the dongle, could be incorporated in the network. Finally, the programming station records the topology of its network.</p><p id="p-0119" num="0116">The present method for provisioning keys in a network of connected objects allows adding a new object (sensor or actuator for example) after the network has been initially deployed. For this purpose, the installer should be provided with the dongle having been used during the initial deployment. For example, in the context of the first embodiment, it is possible to proceed as explained with reference to <figref idref="DRAWINGS">FIG. <b>9</b></figref>. In other words, after introduction of the PIN code in the dongle and start-up of the connected object to be added, an authentication and mutual identification phase is launched. The secret keys stored in the dongle are transmitted to the connected object via the auxiliary channel. After recording the secret keys in the EEPROM memory of the object, the latter switches its emitter/receiver to the main channel while keeping the EEPROM memory in the write mode (Write Enable).</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for provisioning keys in a wireless network whose nodes comprise a programming station and a plurality of connected objects, wherein it implements a terminal including a secure hardware element in which secret keys are stored, the different nodes of the network being able to communicate over a main channel and over an auxiliary channel, distinct from the main channel, said terminal being able to communicate with the different nodes of the network only over the auxiliary channel, said method comprising:<claim-text>a first phase during which the terminal and each node of the network authenticate and mutually identify themselves via the auxiliary channel with a public key of the manufacturer;</claim-text><claim-text>a second phase during which the terminal securely distributes a set of secret keys to the different nodes of the network, said set of secret keys comprising a first secret key (AuthN), configured to authenticate the nodes belonging to the network and a second secret key (ConfN) configured to encrypt exchanges over the main channel;</claim-text><claim-text>a third phase during which the programming station discovers the network with a discovery message broadcast to the connected objects, the discovery message being authenticated with the first secret key and, in case of successful authentication of said message by a connected object, sending of an acknowledgment message to the programming station, encrypted by the second secret key.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each node is equipped with a first antenna adapted to emit and receive over the principal channel and with a second antenna adapted to emit and receive over the auxiliary channel, the propagation over the auxiliary channel having a range substantially shorter than the propagation over the main channel.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the terminal, resp. each node of the network, is provided with a unique identifier of the manufacturer and embeds a binary code, said binary code being hashed with a hash function, the result of hashing being concatenated with said unique identifier, the whole being signed by a private key corresponding to the public key of the manufacturer and the signed result being stored in the terminal, resp. node in the form of a signed identifier, and, in the first phase, the terminal transmits its signed identifier to each node of the network, the node authenticating the terminal from the signed identifier of the terminal and from said public key of the manufacturer and, conversely, each node transmits its signed identifier to the terminal, the terminal authenticating each node from the signed identifier of the node and from said public key of the manufacturer.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein in case of success of authentication of the terminal by a node, the identifier of the terminal is stored in an EEPROM memory of said node.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein, in the second phase, the terminal transmits, via the auxiliary channel, said set of secret keys to each node and, in the case where the identifier of the terminal is stored in the node, the latter stores said set of secret keys in the EEPROM memory of the node and switches its emitter/receiver to the main channel.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the auxiliary channel between the station and each node is encrypted with a symmetrical link key obtained from an ephemeral session key, of the identifier of the terminal as well as the identifier of said node.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the ephemeral session key is obtained with a Diffie-Hellman exchange between the terminal and the programming station.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein in the second phase, the terminal transmits, in a first step, said set of secret keys to the programming station, said set of secret keys being encrypted with the ephemeral session key.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein, in the second phase, the terminal transmits, in a second step, said set of secret keys to each node, said set of secret keys being encrypted with the symmetrical link key associated to the terminal and to said node, said symmetrical link key being obtained as a hash of the ephemeral key concatenated with the unique identifier of the terminal and with the unique identifier of the node.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method for provisioning keys in a wireless network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, in the third phase, when a node successfully authenticates a discovery message emitted by the programming station, it sends to it an acknowledgement message signed by the second secret key, the programming station then storing the identifier of said object in its local memory after having decrypted it with the second secret key.</claim-text></claim></claims></us-patent-application>