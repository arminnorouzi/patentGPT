<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005187A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005187</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17945352</doc-number><date>20220915</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">THREE-DIMENSIONAL DATA ENCODING METHOD, THREE-DIMENSIONAL DATA DECODING METHOD, THREE-DIMENSIONAL DATA ENCODING DEVICE, AND THREE-DIMENSIONAL DATA DECODING DEVICE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/JP2021/012783</doc-number><date>20210326</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17945352</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>63000666</doc-number><date>20200327</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Panasonic Intellectual Property Corporation of America</orgname><address><city>Torrance</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>SUGIO</last-name><first-name>Toshiyasu</first-name><address><city>Osaka</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>IGUCHI</last-name><first-name>Noritaka</first-name><address><city>Osaka</city><country>JP</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A three-dimensional data encoding method includes: calculating a prediction residual that is a difference between information of a three-dimensional point included in point cloud data and a predicted value; and generates a bitstream including first information with respect to the prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="114.89mm" wi="158.75mm" file="US20230005187A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="207.69mm" wi="162.98mm" orientation="landscape" file="US20230005187A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="174.24mm" wi="126.41mm" file="US20230005187A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="193.46mm" wi="123.02mm" orientation="landscape" file="US20230005187A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="42.25mm" wi="79.59mm" file="US20230005187A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="201.42mm" wi="92.20mm" orientation="landscape" file="US20230005187A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="41.91mm" wi="80.77mm" file="US20230005187A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="201.68mm" wi="93.56mm" orientation="landscape" file="US20230005187A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="116.67mm" wi="120.65mm" orientation="landscape" file="US20230005187A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="86.53mm" wi="80.26mm" orientation="landscape" file="US20230005187A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="190.58mm" wi="82.04mm" orientation="landscape" file="US20230005187A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="112.78mm" wi="118.28mm" orientation="landscape" file="US20230005187A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="185.34mm" wi="143.59mm" file="US20230005187A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="156.21mm" wi="127.17mm" file="US20230005187A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="112.52mm" wi="133.10mm" file="US20230005187A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="143.59mm" wi="138.60mm" file="US20230005187A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="105.83mm" wi="142.41mm" file="US20230005187A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="41.91mm" wi="82.13mm" file="US20230005187A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="205.32mm" wi="93.90mm" orientation="landscape" file="US20230005187A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="41.91mm" wi="80.77mm" file="US20230005187A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="204.98mm" wi="93.90mm" orientation="landscape" file="US20230005187A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="222.59mm" wi="127.93mm" orientation="landscape" file="US20230005187A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="203.79mm" wi="60.03mm" orientation="landscape" file="US20230005187A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="194.48mm" wi="152.32mm" orientation="landscape" file="US20230005187A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="69.51mm" wi="94.91mm" file="US20230005187A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="118.19mm" wi="102.45mm" file="US20230005187A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="233.09mm" wi="99.74mm" orientation="landscape" file="US20230005187A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="149.10mm" wi="151.05mm" file="US20230005187A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="130.73mm" wi="150.03mm" file="US20230005187A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="183.47mm" wi="122.34mm" orientation="landscape" file="US20230005187A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="174.07mm" wi="124.12mm" orientation="landscape" file="US20230005187A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="212.43mm" wi="113.88mm" orientation="landscape" file="US20230005187A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="155.11mm" wi="122.60mm" file="US20230005187A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="210.14mm" wi="157.90mm" orientation="landscape" file="US20230005187A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="233.76mm" wi="100.67mm" file="US20230005187A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="182.29mm" wi="76.28mm" file="US20230005187A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="182.37mm" wi="158.58mm" file="US20230005187A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="202.69mm" wi="77.89mm" file="US20230005187A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="235.12mm" wi="139.62mm" file="US20230005187A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00039" num="00039"><img id="EMI-D00039" he="225.30mm" wi="127.51mm" file="US20230005187A1-20230105-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00040" num="00040"><img id="EMI-D00040" he="236.47mm" wi="86.11mm" file="US20230005187A1-20230105-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00041" num="00041"><img id="EMI-D00041" he="223.10mm" wi="82.55mm" file="US20230005187A1-20230105-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00042" num="00042"><img id="EMI-D00042" he="189.48mm" wi="145.37mm" orientation="landscape" file="US20230005187A1-20230105-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00043" num="00043"><img id="EMI-D00043" he="119.63mm" wi="133.60mm" file="US20230005187A1-20230105-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00044" num="00044"><img id="EMI-D00044" he="231.56mm" wi="149.61mm" file="US20230005187A1-20230105-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00045" num="00045"><img id="EMI-D00045" he="176.19mm" wi="116.33mm" file="US20230005187A1-20230105-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00046" num="00046"><img id="EMI-D00046" he="178.22mm" wi="145.03mm" file="US20230005187A1-20230105-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00047" num="00047"><img id="EMI-D00047" he="178.99mm" wi="98.64mm" file="US20230005187A1-20230105-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00048" num="00048"><img id="EMI-D00048" he="177.88mm" wi="107.44mm" file="US20230005187A1-20230105-D00048.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00049" num="00049"><img id="EMI-D00049" he="180.34mm" wi="70.27mm" file="US20230005187A1-20230105-D00049.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00050" num="00050"><img id="EMI-D00050" he="176.53mm" wi="131.15mm" file="US20230005187A1-20230105-D00050.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00051" num="00051"><img id="EMI-D00051" he="212.60mm" wi="90.85mm" file="US20230005187A1-20230105-D00051.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00052" num="00052"><img id="EMI-D00052" he="152.40mm" wi="124.80mm" file="US20230005187A1-20230105-D00052.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00053" num="00053"><img id="EMI-D00053" he="217.68mm" wi="118.28mm" file="US20230005187A1-20230105-D00053.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00054" num="00054"><img id="EMI-D00054" he="228.85mm" wi="134.54mm" file="US20230005187A1-20230105-D00054.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00055" num="00055"><img id="EMI-D00055" he="177.80mm" wi="98.21mm" file="US20230005187A1-20230105-D00055.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00056" num="00056"><img id="EMI-D00056" he="90.85mm" wi="98.04mm" file="US20230005187A1-20230105-D00056.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00057" num="00057"><img id="EMI-D00057" he="214.63mm" wi="145.03mm" orientation="landscape" file="US20230005187A1-20230105-D00057.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00058" num="00058"><img id="EMI-D00058" he="129.12mm" wi="98.13mm" file="US20230005187A1-20230105-D00058.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00059" num="00059"><img id="EMI-D00059" he="226.82mm" wi="140.12mm" file="US20230005187A1-20230105-D00059.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00060" num="00060"><img id="EMI-D00060" he="219.88mm" wi="98.04mm" file="US20230005187A1-20230105-D00060.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00061" num="00061"><img id="EMI-D00061" he="129.54mm" wi="98.04mm" file="US20230005187A1-20230105-D00061.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00062" num="00062"><img id="EMI-D00062" he="208.20mm" wi="98.21mm" file="US20230005187A1-20230105-D00062.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00063" num="00063"><img id="EMI-D00063" he="215.14mm" wi="81.03mm" file="US20230005187A1-20230105-D00063.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00064" num="00064"><img id="EMI-D00064" he="220.22mm" wi="112.61mm" file="US20230005187A1-20230105-D00064.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00065" num="00065"><img id="EMI-D00065" he="220.30mm" wi="112.61mm" file="US20230005187A1-20230105-D00065.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00066" num="00066"><img id="EMI-D00066" he="232.75mm" wi="145.46mm" file="US20230005187A1-20230105-D00066.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00067" num="00067"><img id="EMI-D00067" he="238.17mm" wi="151.38mm" file="US20230005187A1-20230105-D00067.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00068" num="00068"><img id="EMI-D00068" he="173.23mm" wi="98.21mm" file="US20230005187A1-20230105-D00068.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00069" num="00069"><img id="EMI-D00069" he="173.91mm" wi="98.21mm" file="US20230005187A1-20230105-D00069.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00070" num="00070"><img id="EMI-D00070" he="224.11mm" wi="117.01mm" file="US20230005187A1-20230105-D00070.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00071" num="00071"><img id="EMI-D00071" he="232.75mm" wi="132.25mm" orientation="landscape" file="US20230005187A1-20230105-D00071.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00072" num="00072"><img id="EMI-D00072" he="125.05mm" wi="159.43mm" file="US20230005187A1-20230105-D00072.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00073" num="00073"><img id="EMI-D00073" he="154.18mm" wi="155.70mm" file="US20230005187A1-20230105-D00073.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00074" num="00074"><img id="EMI-D00074" he="210.06mm" wi="129.62mm" orientation="landscape" file="US20230005187A1-20230105-D00074.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00075" num="00075"><img id="EMI-D00075" he="206.67mm" wi="103.46mm" orientation="landscape" file="US20230005187A1-20230105-D00075.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00076" num="00076"><img id="EMI-D00076" he="216.07mm" wi="99.14mm" file="US20230005187A1-20230105-D00076.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00077" num="00077"><img id="EMI-D00077" he="208.36mm" wi="96.60mm" file="US20230005187A1-20230105-D00077.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00078" num="00078"><img id="EMI-D00078" he="154.18mm" wi="155.70mm" file="US20230005187A1-20230105-D00078.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00079" num="00079"><img id="EMI-D00079" he="180.42mm" wi="131.83mm" orientation="landscape" file="US20230005187A1-20230105-D00079.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00080" num="00080"><img id="EMI-D00080" he="172.72mm" wi="133.60mm" orientation="landscape" file="US20230005187A1-20230105-D00080.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00081" num="00081"><img id="EMI-D00081" he="208.45mm" wi="121.58mm" file="US20230005187A1-20230105-D00081.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00082" num="00082"><img id="EMI-D00082" he="174.50mm" wi="128.78mm" orientation="landscape" file="US20230005187A1-20230105-D00082.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00083" num="00083"><img id="EMI-D00083" he="85.09mm" wi="126.49mm" file="US20230005187A1-20230105-D00083.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00084" num="00084"><img id="EMI-D00084" he="181.44mm" wi="92.96mm" orientation="landscape" file="US20230005187A1-20230105-D00084.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00085" num="00085"><img id="EMI-D00085" he="196.93mm" wi="147.74mm" file="US20230005187A1-20230105-D00085.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00086" num="00086"><img id="EMI-D00086" he="120.99mm" wi="117.01mm" file="US20230005187A1-20230105-D00086.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00087" num="00087"><img id="EMI-D00087" he="183.64mm" wi="152.82mm" orientation="landscape" file="US20230005187A1-20230105-D00087.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00088" num="00088"><img id="EMI-D00088" he="140.63mm" wi="89.92mm" orientation="landscape" file="US20230005187A1-20230105-D00088.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00089" num="00089"><img id="EMI-D00089" he="106.34mm" wi="90.17mm" file="US20230005187A1-20230105-D00089.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00090" num="00090"><img id="EMI-D00090" he="209.21mm" wi="66.80mm" file="US20230005187A1-20230105-D00090.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a U.S. continuation application of PCT International Patent Application Number PCT/JP2021/012783 filed on Mar. 26, 2021, claiming the benefit of priority of U.S. Provisional Patent Application No. 63/000,666 filed on Mar. 27, 2020, the entire contents of which are hereby incorporated by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><heading id="h-0003" level="1">1. Technical Field</heading><p id="p-0003" num="0002">The present disclosure relates to a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, and a three-dimensional data decoding device.</p><heading id="h-0004" level="1">2. Description of the Related Art</heading><p id="p-0004" num="0003">Devices or services utilizing three-dimensional data are expected to find their widespread use in a wide range of fields, such as computer vision that enables autonomous operations of cars or robots, map information, monitoring, infrastructure inspection, and video distribution. Three-dimensional data is obtained through various means including a distance sensor such as a rangefinder, as well as a stereo camera and a combination of a plurality of monocular cameras.</p><p id="p-0005" num="0004">Methods of representing three-dimensional data include a method known as a point cloud scheme that represents the shape of a three-dimensional structure by a point cloud in a three-dimensional space. In the point cloud scheme, the positions and colors of a point cloud are stored. While point cloud is expected to be a mainstream method of representing three-dimensional data, a massive amount of data of a point cloud necessitates compression of the amount of three-dimensional data by encoding for accumulation and transmission, as in the case of a two-dimensional moving picture (examples include Moving Picture Experts Group-4 Advanced Video Coding (MPEG-4 AVC) and High Efficiency Video Coding (HEVC) standardized by MPEG).</p><p id="p-0006" num="0005">Meanwhile, point cloud compression is partially supported by, for example, an open-source library (Point Cloud Library) for point cloud-related processing.</p><p id="p-0007" num="0006">Furthermore, a technique for searching for and displaying a facility located in the surroundings of the vehicle by using three-dimensional map data is known (see, for example, Patent Literature (PTL) 1 (International Publication WO 2014/020663)).</p><heading id="h-0005" level="1">SUMMARY</heading><p id="p-0008" num="0007">There has been a demand for improving coding efficiency in a three-dimensional data encoding process and a three-dimensional data decoding process.</p><p id="p-0009" num="0008">The present disclosure has an object to provide a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, or a three-dimensional data decoding device that is capable of improving coding efficiency.</p><p id="p-0010" num="0009">A three-dimensional data encoding method according to one aspect of the present disclosure includes: calculating a prediction residual that is a difference between information of a three-dimensional point included in point cloud data and a predicted value; and generating a bitstream including first information with respect to the prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information.</p><p id="p-0011" num="0010">A three-dimensional data decoding method according to one aspect of the present disclosure includes: obtaining, from a bitstream, first information with respect to a prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information, the prediction residual being a difference between information of a three-dimensional point included in point cloud data and a predicted value; and calculating the information of the three-dimensional point by adding the predicted value to the prediction residual, using the first information, the second information, and the third information.</p><p id="p-0012" num="0011">The present disclosure provides a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, or a three-dimensional data decoding device that is capable of improving coding efficiency.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0013" num="0012">These and other objects, advantages and features of the disclosure will become apparent from the following description thereof taken in conjunction with the accompanying drawings that illustrate a specific embodiment of the present disclosure.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating a configuration of a three-dimensional data encoding and decoding system according to Embodiment 1;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram illustrating a structure example of point cloud data according to Embodiment 1;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating a structure example of a data file indicating the point cloud data according to Embodiment 1;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram illustrating types of the point cloud data according to Embodiment 1;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating a structure of a first encoder according to Embodiment 1;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating the first encoder according to Embodiment 1;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating a structure of a first decoder according to Embodiment 1;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating the first decoder according to Embodiment 1;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 1;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram showing an example of geometry information according to Embodiment 1;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram showing an example of an octree representation of geometry information according to Embodiment 1;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 1;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram of an attribute information encoder according to Embodiment 1;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram of an attribute information decoder according to Embodiment 1;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a block diagram showing a configuration of the attribute information encoder according to the variation of Embodiment 1;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of the attribute information encoder according to Embodiment 1;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a block diagram showing a configuration of the attribute information decoder according to the variation of Embodiment 1;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a block diagram of the attribute information decoder according to Embodiment 1;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a diagram illustrating a structure of a second encoder according to Embodiment 1;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a block diagram illustrating the second encoder according to Embodiment 1;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a diagram illustrating a structure of a second decoder according to Embodiment 1;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a block diagram illustrating the second decoder according to Embodiment 1;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a diagram illustrating a protocol stack related to PCC encoded data according to Embodiment 1;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a diagram illustrating structures of an encoder and a multiplexer according to Embodiment 2;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a diagram illustrating a structure example of encoded data according to Embodiment 2;</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a diagram illustrating a structure example of encoded data and a NAL unit according to Embodiment 2;</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a diagram illustrating a semantics example of pec_nal_unit_type according to Embodiment 2;</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is a diagram illustrating an example of a transmitting order of NAL units according to Embodiment 2;</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is a flowchart of processing performed by a three-dimensional data encoding device according to Embodiment 2;</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is a flowchart of processing performed by a three-dimensional data decoding device according to Embodiment 2;</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flowchart of multiplexing processing according to Embodiment 2;</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>32</b></figref> is a flowchart of demultiplexing processing according to Embodiment 2;</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>33</b></figref> is a diagram showing a structure of a distribution system according to Embodiment 3;</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a diagram showing an example structure of a bitstream of an encoded three-dimensional map according to Embodiment 3;</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>35</b></figref> is a diagram for describing an advantageous effect on encoding efficiency according to Embodiment 3;</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is a flowchart of processes performed by a server according to Embodiment 3;</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a flowchart of processes performed by a client according to Embodiment 3;</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>38</b></figref> is a diagram showing an example syntax of a submap according to Embodiment 3;</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>39</b></figref> is a diagram schematically showing a switching process of an encoding type according to Embodiment 3;</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>40</b></figref> is a diagram showing an example syntax of a submap according to Embodiment 3;</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>41</b></figref> is a flowchart of a three-dimensional data encoding process according to Embodiment 3;</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>42</b></figref> is a flowchart of a three-dimensional data decoding process according to Embodiment 3;</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>43</b></figref> is a diagram schematically showing an operation of a variation of the switching process of the encoding type according to Embodiment 3;</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>44</b></figref> is a diagram schematically showing an operation of a variation of the switching process of the encoding type according to Embodiment 3;</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>45</b></figref> is a diagram schematically showing an operation of a variation of the switching process of the encoding type according to Embodiment 3;</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a diagram schematically showing an operation of a variation of a calculation process of a differential value according to Embodiment 3;</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>47</b></figref> is a diagram schematically showing an operation of a variation of the calculation process of the differential value according to Embodiment 3;</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a diagram schematically showing an operation of a variation of the calculation process of the differential value according to Embodiment 3;</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>49</b></figref> is a diagram schematically showing an operation of a variation of the calculation process of the differential value according to Embodiment 3;</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>50</b></figref> is a diagram showing an example syntax of a volume according to Embodiment 3;</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>51</b></figref> is a diagram illustrating an example of a prediction tree used in a three-dimensional data encoding method according to Embodiment 4;</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>52</b></figref> is a flowchart illustrating an example of a three-dimensional data encoding method according to Embodiment 4;</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>53</b></figref> is a flowchart illustrating an example of a three-dimensional data decoding method according to Embodiment 4;</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>54</b></figref> is a diagram for describing a method of generating a prediction tree according to Embodiment 4;</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram for describing a first example of prediction modes according to Embodiment 4;</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a diagram illustrating a second example of a table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a diagram illustrating a specific example of the second example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>58</b></figref> is a diagram illustrating a third example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>59</b></figref> is a diagram illustrating a fourth example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>60</b></figref> is a diagram illustrating a fifth example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>61</b></figref> is a diagram illustrating a sixth example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>62</b></figref> is a diagram illustrating a seventh example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>63</b></figref> is a diagram illustrating a first example of a binarization table in a case where a prediction mode value is binarized and encoded according to Embodiment 4;</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>64</b></figref> is a diagram illustrating a second example of the binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4;</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>65</b></figref> is a diagram illustrating a third example of the binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4;</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>66</b></figref> is a diagram for describing an example of encoding of binary data in a binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4;</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>67</b></figref> is a flowchart illustrating an example of encoding of a prediction mode value according to Embodiment 4;</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>68</b></figref> is a flowchart illustrating an example of decoding of a prediction mode value according to Embodiment 4;</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>69</b></figref> is a diagram illustrating another example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4;</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>70</b></figref> is a diagram for describing an example of encoding of binary data in a binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4;</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>71</b></figref> is a flowchart illustrating another example of encoding of a prediction mode value according to Embodiment 4;</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>72</b></figref> is a flowchart illustrating another example of decoding of a prediction mode value according to Embodiment 4;</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>73</b></figref> is a flowchart illustrating an example of a process of determining whether or not to fix the prediction mode value according to condition A in encoding according to Embodiment 4;</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>74</b></figref> is a flowchart illustrating an example of a process of determining whether to set the prediction mode value at a fixed value or decode the prediction mode value according to condition A in decoding according to Embodiment 4;</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>75</b></figref> is a diagram illustrating an example of a syntax of a header of geometry information according to Embodiment 4;</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>76</b></figref> is a diagram illustrating an example of a syntax of geometry information according to Embodiment 4;</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>77</b></figref> is a diagram illustrating another example of the syntax of geometry information according to Embodiment 4;</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>78</b></figref> is a diagram illustrating an example of a prediction tree used in a three-dimensional data encoding method according to Embodiment 5;</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>79</b></figref> is a diagram illustrating another example of a syntax of geometry information according to Embodiment 5;</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>80</b></figref> is a diagram illustrating an example of a configuration of a prediction tree used for encoding of both geometry information and attribute information according to Embodiment 5;</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>81</b></figref> is a flowchart illustrating an example of a three-dimensional data encoding method according to a modification of Embodiment 5;</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>82</b></figref> is a flowchart illustrating an example of a three-dimensional data decoding method according to a modification of Embodiment 5;</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>83</b></figref> is a diagram illustrating an example of a syntax of a header of attribute information according to Embodiment 5;</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>84</b></figref> is a diagram illustrating another example of a syntax of attribute information according to Embodiment 5;</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>85</b></figref> is a diagram illustrating an example of a syntax of geometry information and attribute information according to Embodiment 5;</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>86</b></figref> is a flowchart of a process by a three-dimensional data encoding device according to Embodiments 4 and 5;</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>87</b></figref> is a flowchart of a process by a three-dimensional data decoding device according to Embodiments 4 and 5;</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>88</b></figref> is a diagram illustrating a syntax example of header information according to Embodiment 6;</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>89</b></figref> is a diagram illustrating a syntax example of encoded data of geometry information according to Embodiment 6;</p><p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. <b>90</b></figref> is a diagram illustrating a syntax example of header information according to Embodiment 6;</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>91</b></figref> is a diagram illustrating a syntax example of encoded data of geometry information according to Embodiment 6;</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>92</b></figref> is a flowchart of encoding processing of prediction residual according to Embodiment 6;</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>93</b></figref> is a flowchart of decoding processing of prediction residual according to Embodiment 6;</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>94</b></figref> is a flowchart of encoding processing of residual_bitcount according to Embodiment 6;</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>95</b></figref> is a flowchart of decoding processing of residual_bitcount according to Embodiment 6;</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>96</b></figref> is a flowchart of three-dimensional data encoding processing according to Embodiment 6;</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>97</b></figref> is a flowchart of three-dimensional data decoding processing according to Embodiment 6;</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIG. <b>98</b></figref> is a block diagram of a three-dimensional data creation device according to Embodiment 7;</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>99</b></figref> is a flowchart of a three-dimensional data creation method according to Embodiment 7;</p><p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. <b>100</b></figref> is a diagram showing a structure of a system according to Embodiment 7;</p><p id="p-0114" num="0113"><figref idref="DRAWINGS">FIG. <b>101</b></figref> is a block diagram of a client device according to Embodiment 7;</p><p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. <b>102</b></figref> is a block diagram of a server according to Embodiment 7;</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>103</b></figref> is a flowchart of a three-dimensional data creation process performed by the client device according to Embodiment 7;</p><p id="p-0117" num="0116"><figref idref="DRAWINGS">FIG. <b>104</b></figref> is a flowchart of a sensor information transmission process performed by the client device according to Embodiment 7;</p><p id="p-0118" num="0117"><figref idref="DRAWINGS">FIG. <b>105</b></figref> is a flowchart of a three-dimensional data creation process performed by the server according to Embodiment 7;</p><p id="p-0119" num="0118"><figref idref="DRAWINGS">FIG. <b>106</b></figref> is a flowchart of a three-dimensional map transmission process performed by the server according to Embodiment 7;</p><p id="p-0120" num="0119"><figref idref="DRAWINGS">FIG. <b>107</b></figref> is a diagram showing a structure of a variation of the system according to Embodiment 7;</p><p id="p-0121" num="0120"><figref idref="DRAWINGS">FIG. <b>108</b></figref> is a diagram showing a structure of the server and client devices according to Embodiment 7;</p><p id="p-0122" num="0121"><figref idref="DRAWINGS">FIG. <b>109</b></figref> is a diagram illustrating a configuration of a server and a client device according to Embodiment 7;</p><p id="p-0123" num="0122"><figref idref="DRAWINGS">FIG. <b>110</b></figref> is a flowchart of a process performed by the client device according to Embodiment 7;</p><p id="p-0124" num="0123"><figref idref="DRAWINGS">FIG. <b>111</b></figref> is a diagram illustrating a configuration of a sensor information collection system according to Embodiment 7;</p><p id="p-0125" num="0124"><figref idref="DRAWINGS">FIG. <b>112</b></figref> is a diagram illustrating an example of a system according to Embodiment 7;</p><p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. <b>113</b></figref> is a diagram illustrating a variation of the system according to Embodiment 7;</p><p id="p-0127" num="0126"><figref idref="DRAWINGS">FIG. <b>114</b></figref> is a flowchart illustrating an example of an application process according to Embodiment 7;</p><p id="p-0128" num="0127"><figref idref="DRAWINGS">FIG. <b>115</b></figref> is a diagram illustrating the sensor range of various sensors according to Embodiment 7;</p><p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. <b>116</b></figref> is a diagram illustrating a configuration example of an automated driving system according to Embodiment 7;</p><p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. <b>117</b></figref> is a diagram illustrating a configuration example of a bitstream according to Embodiment 7;</p><p id="p-0131" num="0130"><figref idref="DRAWINGS">FIG. <b>118</b></figref> is a flowchart of a point cloud selection process according to Embodiment 7;</p><p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. <b>119</b></figref> is a diagram illustrating a screen example for point cloud selection process according to Embodiment 7;</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>120</b></figref> is a diagram illustrating a screen example of the point cloud selection process according to Embodiment 7; and</p><p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. <b>121</b></figref> is a diagram illustrating a screen example of the point cloud selection process according to Embodiment 7.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DETAILED DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0135" num="0134">A three-dimensional data encoding method according to one aspect of the present disclosure includes: calculating a prediction residual that is a difference between information of a three-dimensional point included in point cloud data and a predicted value; and generating a bitstream including first information indicating the prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information.</p><p id="p-0136" num="0135">According to this, since the three-dimensional data encoding method can adaptively change the bit count of the first information indicating the prediction residual, and the bit count of the second information indicating the bit count of the first information, the coding efficiency can be improved.</p><p id="p-0137" num="0136">For example, the information of the three-dimensional point may be geometry information of the three-dimensional point, and in the calculating, the predicted value may be calculated using a prediction tree indicating a reference relation.</p><p id="p-0138" num="0137">For example, the geometry information may include components, in the calculating, the prediction residual may be calculated for each of the components, and the bitstream may include, for each of the components, the first information, the second information, and the third information.</p><p id="p-0139" num="0138">According to this, since the three-dimensional data encoding method can adaptively change the bit count of first information, and the bit count of the second information for each component of geometry information, the coding efficiency can be improved.</p><p id="p-0140" num="0139">For example, the third information may be provided for each of processing units including three-dimensional points.</p><p id="p-0141" num="0140">For example, the first information may indicate a bit count obtained by subtracting one from the bit count indicated in the second information.</p><p id="p-0142" num="0141">For example, the bitstream may further include fourth information indicating whether the prediction residual is zero, and fifth information indicating whether the prediction residual is positive or negative, and the first information may indicate a value obtained by subtracting one from an absolute value of the prediction residual.</p><p id="p-0143" num="0142">A three-dimensional data decoding method according to one aspect of the present disclosure includes: obtaining, from a bitstream, first information indicating a prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information, the prediction residual being a difference between information of a three-dimensional point included in point cloud data and a predicted value; and calculating the information of the three-dimensional point by adding the predicted value to the prediction residual indicated in the first information, using the first information, the second information, and the third information.</p><p id="p-0144" num="0143">According to this, the three-dimensional data decoding method can decode a bitstream whose coding efficiency has been improved.</p><p id="p-0145" num="0144">For example, the information of the three-dimensional point may be geometry information of the three-dimensional point, and in the calculating, the predicted value may be calculated using a prediction tree indicating a reference relation.</p><p id="p-0146" num="0145">For example, the geometry information may include components, the bitstream includes, for each of the components, the first information, the second information, and the third information.</p><p id="p-0147" num="0146">For example, the third information may be provided for each of processing units including three-dimensional points.</p><p id="p-0148" num="0147">For example, the first information may indicate a bit count obtained by subtracting one from the bit count indicated in the second information.</p><p id="p-0149" num="0148">For example, the bitstream may further include fourth information indicating whether the prediction residual is zero, and fifth information indicating whether the prediction residual is positive or negative, and the first information may indicate a value obtained by subtracting one from an absolute value of the prediction residual.</p><p id="p-0150" num="0149">A three-dimensional data encoding device according to one aspect of the present disclosure includes a processor and memory. Using the memory, the processor calculates a prediction residual that is a difference between information of a three-dimensional point included in point cloud data and a predicted value; and generates a bitstream including first information indicating the prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information.</p><p id="p-0151" num="0150">According to this, since the three-dimensional data encoding device can adaptively change the bit count of the first information indicating the prediction residual, and the bit count of the second information indicating the bit count of the first information, the coding efficiency can be improved.</p><p id="p-0152" num="0151">A three-dimensional data decoding device according to one aspect of the present disclosure includes a processor and memory. Using the memory, the processor obtains, from a bitstream, first information indicating a prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information, the prediction residual being a difference between information of a three-dimensional point included in point cloud data and a predicted value; and calculates the information of the three-dimensional point by adding the predicted value to the prediction residual indicated in the first information, using the first information, the second information, and the third information.</p><p id="p-0153" num="0152">According to this, the three-dimensional data decoding device can decode a bitstream whose coding efficiency has been improved.</p><p id="p-0154" num="0153">It is to be noted that these general or specific aspects may be implemented as a system, a method, an integrated circuit, a computer program, or a computer-readable recording medium such as a CD-ROM, or may be implemented as any combination of a system, a method, an integrated circuit, a computer program, and a recording medium.</p><p id="p-0155" num="0154">Hereinafter, embodiments will be specifically described with reference to the drawings. It is to be noted that each of the following embodiments indicate a specific example of the present disclosure. The numerical values, shapes, materials, constituent elements, the arrangement and connection of the constituent elements, steps, the processing order of the steps, etc., indicated in the following embodiments are mere examples, and thus are not intended to limit the present disclosure. Among the constituent elements described in the following embodiments, constituent elements not recited in any one of the independent claims will be described as optional constituent elements.</p><heading id="h-0008" level="1">Embodiment 1</heading><p id="p-0156" num="0155">When using encoded data of a point cloud in a device or for a service in practice, required information for the application is desirably transmitted and received in order to reduce the network bandwidth. However, conventional encoding structures for three-dimensional data have no such a function, and there is also no encoding method for such a function.</p><p id="p-0157" num="0156">Embodiment 1 described below relates to a three-dimensional data encoding method and a three-dimensional data encoding device for encoded data of a three-dimensional point cloud that provides a function of transmitting and receiving required information for an application, a three-dimensional data decoding method and a three-dimensional data decoding device for decoding the encoded data, a three-dimensional data multiplexing method for multiplexing the encoded data, and a three-dimensional data transmission method for transmitting the encoded data.</p><p id="p-0158" num="0157">In particular, at present, a first encoding method and a second encoding method are under investigation as encoding methods (encoding schemes) for point cloud data. However, there is no method defined for storing the configuration of encoded data and the encoded data in a system format. Thus, there is a problem that an encoder cannot perform an MUX process (multiplexing), transmission, or accumulation of data.</p><p id="p-0159" num="0158">In addition, there is no method for supporting a format that involves two codecs, the first encoding method and the second encoding method, such as point cloud compression (PCC).</p><p id="p-0160" num="0159">With regard to this embodiment, a configuration of PCC-encoded data that involves two codecs, a first encoding method and a second encoding method, and a method of storing the encoded data in a system format will be described.</p><p id="p-0161" num="0160">A configuration of a three-dimensional data (point cloud data) encoding and decoding system according to this embodiment will be first described. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram showing an example of a configuration of the three-dimensional data encoding and decoding system according to this embodiment. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the three-dimensional data encoding and decoding system includes three-dimensional data encoding system <b>4601</b>, three-dimensional data decoding system <b>4602</b>, sensor terminal <b>4603</b>, and external connector <b>4604</b>.</p><p id="p-0162" num="0161">Three-dimensional data encoding system <b>4601</b> generates encoded data or multiplexed data by encoding point cloud data, which is three-dimensional data. Three-dimensional data encoding system <b>4601</b> may be a three-dimensional data encoding device implemented by a single device or a system implemented by a plurality of devices. The three-dimensional data encoding device may include a part of a plurality of processors included in three-dimensional data encoding system <b>4601</b>.</p><p id="p-0163" num="0162">Three-dimensional data encoding system <b>4601</b> includes point cloud data generation system <b>4611</b>, presenter <b>4612</b>, encoder <b>4613</b>, multiplexer <b>4614</b>, input/output unit <b>4615</b>, and controller <b>4616</b>. Point cloud data generation system <b>4611</b> includes sensor information obtainer <b>4617</b>, and point cloud data generator <b>4618</b>.</p><p id="p-0164" num="0163">Sensor information obtainer <b>4617</b> obtains sensor information from sensor terminal <b>4603</b>, and outputs the sensor information to point cloud data generator <b>4618</b>. Point cloud data generator <b>4618</b> generates point cloud data from the sensor information, and outputs the point cloud data to encoder <b>4613</b>.</p><p id="p-0165" num="0164">Presenter <b>4612</b> presents the sensor information or point cloud data to a user. For example, presenter <b>4612</b> displays information or an image based on the sensor information or point cloud data.</p><p id="p-0166" num="0165">Encoder <b>4613</b> encodes (compresses) the point cloud data, and outputs the resulting encoded data, control information (signaling information) obtained in the course of the encoding, and other additional information to multiplexer <b>4614</b>. The additional information includes the sensor information, for example,</p><p id="p-0167" num="0166">Multiplexer <b>4614</b> generates multiplexed data by multiplexing the encoded data, the control information, and the additional information input thereto from encoder <b>4613</b>. A format of the multiplexed data is a file format for accumulation or a packet format for transmission, for example,</p><p id="p-0168" num="0167">Input/output unit <b>4615</b> (a communication unit or interface, for example) outputs the multiplexed data to the outside. Alternatively, the multiplexed data may be accumulated in an accumulator, such as an internal memory. Controller <b>4616</b> (or an application executor) controls each processor. That is, controller <b>4616</b> controls the encoding, the multiplexing, or other processing.</p><p id="p-0169" num="0168">Note that the sensor information may be input to encoder <b>4613</b> or multiplexer <b>4614</b>. Alternatively, input/output unit <b>4615</b> may output the point cloud data or encoded data to the outside as it is.</p><p id="p-0170" num="0169">A transmission signal (multiplexed data) output from three-dimensional data encoding system <b>4601</b> is input to three-dimensional data decoding system <b>4602</b> via external connector <b>4604</b>.</p><p id="p-0171" num="0170">Three-dimensional data decoding system <b>4602</b> generates point cloud data, which is three-dimensional data, by decoding the encoded data or multiplexed data. Note that three-dimensional data decoding system <b>4602</b> may be a three-dimensional data decoding device implemented by a single device or a system implemented by a plurality of devices. The three-dimensional data decoding device may include a part of a plurality of processors included in three-dimensional data decoding system <b>4602</b>.</p><p id="p-0172" num="0171">Three-dimensional data decoding system <b>4602</b> includes sensor information obtainer <b>4621</b>, input/output unit <b>4622</b>, demultiplexer <b>4623</b>, decoder <b>4624</b>, presenter <b>4625</b>, user interface <b>4626</b>, and controller <b>4627</b>.</p><p id="p-0173" num="0172">Sensor information obtainer <b>4621</b> obtains sensor information from sensor terminal <b>4603</b>.</p><p id="p-0174" num="0173">Input/output unit <b>4622</b> obtains the transmission signal, decodes the transmission signal into the multiplexed data (file format or packet), and outputs the multiplexed data to demultiplexer <b>4623</b>.</p><p id="p-0175" num="0174">Demultiplexer <b>4623</b> obtains the encoded data, the control information, and the additional information from the multiplexed data, and outputs the encoded data, the control information, and the additional information to decoder <b>4624</b>.</p><p id="p-0176" num="0175">Decoder <b>4624</b> reconstructs the point cloud data by decoding the encoded data.</p><p id="p-0177" num="0176">Presenter <b>4625</b> presents the point cloud data to a user. For example, presenter <b>4625</b> displays information or an image based on the point cloud data. User interface <b>4626</b> obtains an indication based on a manipulation by the user. Controller <b>4627</b> (or an application executor) controls each processor. That is, controller <b>4627</b> controls the demultiplexing, the decoding, the presentation, or other processing.</p><p id="p-0178" num="0177">Note that input/output unit <b>4622</b> may obtain the point cloud data or encoded data as it is from the outside. Presenter <b>4625</b> may obtain additional information, such as sensor information, and present information based on the additional information. Presenter <b>4625</b> may perform a presentation based on an indication from a user obtained on user interface <b>4626</b>.</p><p id="p-0179" num="0178">Sensor terminal <b>4603</b> generates sensor information, which is information obtained by a sensor. Sensor terminal <b>4603</b> is a terminal provided with a sensor or a camera. For example, sensor terminal <b>4603</b> is a mobile body, such as an automobile, a flying object, such as an aircraft, a mobile terminal, or a camera.</p><p id="p-0180" num="0179">Sensor information that can be generated by sensor terminal <b>4603</b> includes (1) the distance between sensor terminal <b>4603</b> and an object or the reflectance of the object obtained by LiDAR, a millimeter wave radar, or an infrared sensor or (2) the distance between a camera and an object or the reflectance of the object obtained by a plurality of monocular camera images or a stereo-camera image, for example, The sensor information may include the posture, orientation, gyro (angular velocity), position (GPS information or altitude), velocity, or acceleration of the sensor, for example, The sensor information may include air temperature, air pressure, air humidity, or magnetism, for example,</p><p id="p-0181" num="0180">External connector <b>4604</b> is implemented by an integrated circuit (LSI or IC), an external accumulator, communication with a cloud server via the Internet, or broadcasting, for example,</p><p id="p-0182" num="0181">Next, point cloud data will be described. <figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram showing a configuration of point cloud data. <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram showing a configuration example of a data file describing information of the point cloud data.</p><p id="p-0183" num="0182">Point cloud data includes data on a plurality of points. Data on each point includes geometry information (three-dimensional coordinates) and attribute information associated with the geometry information. A set of a plurality of such points is referred to as a point cloud. For example, a point cloud indicates a three-dimensional shape of an object.</p><p id="p-0184" num="0183">Geometry information (position), such as three-dimensional coordinates, may be referred to as geometry. Data on each point may include attribute information (attribute) on a plurality of types of attributes. A type of attribute is color or reflectance, for example,</p><p id="p-0185" num="0184">One item of attribute information (in other words, a piece of attribute information or an attribute information item) may be associated with one item of geometry information (in other words, a piece of geometry information or a geometry information item), or attribute information on a plurality of different types of attributes may be associated with one item of geometry information. Alternatively, items of attribute information on the same type of attribute may be associated with one item of geometry information.</p><p id="p-0186" num="0185">The configuration example of a data file shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> is an example in which geometry information and attribute information are associated with each other in a one-to-one relationship, and geometry information and attribute information on N points forming point cloud data are shown.</p><p id="p-0187" num="0186">The geometry information is information on three axes, specifically, an x-axis, a y-axis, and a z-axis, for example, The attribute information is RGB color information, for example, A representative data file is ply file, for example,</p><p id="p-0188" num="0187">Next, types of point cloud data will be described. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram showing types of point cloud data. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, point cloud data includes a static object and a dynamic object.</p><p id="p-0189" num="0188">The static object is three-dimensional point cloud data at an arbitrary time (a time point). The dynamic object is three-dimensional point cloud data that varies with time. In the following, three-dimensional point cloud data associated with a time point will be referred to as a PCC frame or a frame.</p><p id="p-0190" num="0189">The object may be a point cloud whose range is limited to some extent, such as ordinary video data, or may be a large point cloud whose range is not limited, such as map information.</p><p id="p-0191" num="0190">There are point cloud data having varying densities. There may be sparse point cloud data and dense point cloud data.</p><p id="p-0192" num="0191">In the following, each processor will be described in detail. Sensor information is obtained by various means, including a distance sensor such as LiDAR or a range finder, a stereo camera, or a combination of a plurality of monocular cameras. Point cloud data generator <b>4618</b> generates point cloud data based on the sensor information obtained by sensor information obtainer <b>4617</b>. Point cloud data generator <b>4618</b> generates geometry information as point cloud data, and adds attribute information associated with the geometry information to the geometry information.</p><p id="p-0193" num="0192">When generating geometry information or adding attribute information, point cloud data generator <b>4618</b> may process the point cloud data. For example, point cloud data generator <b>4618</b> may reduce the data amount by omitting a point cloud whose position coincides with the position of another point cloud. Point cloud data generator <b>4618</b> may also convert the geometry information (such as shifting, rotating or normalizing the position) or render the attribute information.</p><p id="p-0194" num="0193">Note that, although <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows point cloud data generation system <b>4611</b> as being included in three-dimensional data encoding system <b>4601</b>, point cloud data generation system <b>4611</b> may be independently provided outside three-dimensional data encoding system <b>4601</b>.</p><p id="p-0195" num="0194">Encoder <b>4613</b> generates encoded data by encoding point cloud data according to an encoding method previously defined. In general, there are the two types of encoding methods described below. One is an encoding method using geometry information, which will be referred to as a first encoding method, hereinafter. The other is an encoding method using a video codec, which will be referred to as a second encoding method, hereinafter.</p><p id="p-0196" num="0195">Decoder <b>4624</b> decodes the encoded data into the point cloud data using the encoding method previously defined.</p><p id="p-0197" num="0196">Multiplexer <b>4614</b> generates multiplexed data by multiplexing the encoded data in an existing multiplexing method. The generated multiplexed data is transmitted or accumulated. Multiplexer <b>4614</b> multiplexes not only the PCC-encoded data but also another medium, such as a video, an audio, subtitles, an application, or a file, or reference time information. Multiplexer <b>4614</b> may further multiplex attribute information associated with sensor information or point cloud data.</p><p id="p-0198" num="0197">Multiplexing schemes or file formats include ISOBMFF, MPEG-DASH, which is a transmission scheme based on ISOBMFF, MMT, MPEG-2 TS Systems, or RMP, for example,</p><p id="p-0199" num="0198">Demultiplexer <b>4623</b> extracts PCC-encoded data, other media, time information and the like from the multiplexed data.</p><p id="p-0200" num="0199">Input/output unit <b>4615</b> transmits the multiplexed data in a method suitable for the transmission medium or accumulation medium, such as broadcasting or communication. Input/output unit <b>4615</b> may communicate with another device over the Internet or communicate with an accumulator, such as a cloud server.</p><p id="p-0201" num="0200">As a communication protocol, http, ftp, TCP, UDP or the like is used. The pull communication scheme or the push communication scheme can be used.</p><p id="p-0202" num="0201">A wired transmission or a wireless transmission can be used. For the wired transmission, Ethernet (registered trademark), USB, RS-232C, HDMI (registered trademark), or a coaxial cable is used, for example, For the wireless transmission, wireless LAN, Wi-Fi (registered trademark), Bluetooth (registered trademark), or a millimeter wave is used, for example,</p><p id="p-0203" num="0202">As a broadcasting scheme, DVB-T2, DVB-S2, DVB-C2, ATSC3.0, or ISDB-S3 is used, for example,</p><p id="p-0204" num="0203"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram showing a configuration of first encoder <b>4630</b>, which is an example of encoder <b>4613</b> that performs encoding in the first encoding method. <figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram showing first encoder <b>4630</b>. First encoder <b>4630</b> generates encoded data (encoded stream) by encoding point cloud data in the first encoding method. First encoder <b>4630</b> includes geometry information encoder <b>4631</b>, attribute information encoder <b>4632</b>, additional information encoder <b>4633</b>, and multiplexer <b>4634</b>.</p><p id="p-0205" num="0204">First encoder <b>4630</b> is characterized by performing encoding by keeping a three-dimensional structure in mind. First encoder <b>4630</b> is further characterized in that attribute information encoder <b>4632</b> performs encoding using information obtained from geometry information encoder <b>4631</b>. The first encoding method is referred to also as geometry-based PCC (GPCC).</p><p id="p-0206" num="0205">Point cloud data is PCC point cloud data like a PLY file or PCC point cloud data generated from sensor information, and includes geometry information (position), attribute information (attribute), and other additional information (metadata). The geometry information is input to geometry information encoder <b>4631</b>, the attribute information is input to attribute information encoder <b>4632</b>, and the additional information is input to additional information encoder <b>4633</b>.</p><p id="p-0207" num="0206">Geometry information encoder <b>4631</b> generates encoded geometry information (compressed geometry), which is encoded data, by encoding geometry information. For example, geometry information encoder <b>4631</b> encodes geometry information using an N-ary tree structure, such as an octree. Specifically, in the case of an octree, a current space (target space) is divided into eight nodes (subspaces), 8-bit information (occupancy code) that indicates whether each node includes a point cloud or not is generated. A node including a point cloud is further divided into eight nodes, and 8-bit information that indicates whether each of the eight nodes includes a point cloud or not is generated. This process is repeated until a predetermined level is reached or the number of the point clouds included in each node becomes equal to or less than a threshold.</p><p id="p-0208" num="0207">Attribute information encoder <b>4632</b> generates encoded attribute information (compressed attribute), which is encoded data, by encoding attribute information using configuration information generated by geometry information encoder <b>4631</b>. For example, attribute information encoder <b>4632</b> determines a reference point (reference node) that is to be referred to in encoding a current point (in other words, a current node or a target node) to be processed based on the octree structure generated by geometry information encoder <b>4631</b>. For example, attribute information encoder <b>4632</b> refers to a node whose parent node in the octree is the same as the parent node of the current node, of peripheral nodes or neighboring nodes. Note that the method of determining a reference relationship is not limited to this method.</p><p id="p-0209" num="0208">The process of encoding attribute information may include at least one of a quantization process, a prediction process, and an arithmetic encoding process. In this case, &#x201c;refer to&#x201d; means using a reference node for calculating a predicted value of attribute information or using a state of a reference node (occupancy information that indicates whether a reference node includes a point cloud or not, for example) for determining a parameter of encoding. For example, the parameter of encoding is a quantization parameter in the quantization process or a context or the like in the arithmetic encoding.</p><p id="p-0210" num="0209">Additional information encoder <b>4633</b> generates encoded additional information (compressed metadata), which is encoded data, by encoding compressible data of additional information.</p><p id="p-0211" num="0210">Multiplexer <b>4634</b> generates encoded stream (compressed stream), which is encoded data, by multiplexing encoded geometry information, encoded attribute information, encoded additional information, and other additional information. The generated encoded stream is output to a processor in a system layer (not shown).</p><p id="p-0212" num="0211">Next, first decoder <b>4640</b>, which is an example of decoder <b>4624</b> that performs decoding in the first encoding method, will be described. <figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram showing a configuration of first decoder <b>4640</b>. <figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram showing first decoder <b>4640</b>. First decoder <b>4640</b> generates point cloud data by decoding encoded data (encoded stream) encoded in the first encoding method in the first encoding method. First decoder <b>4640</b> includes demultiplexer <b>4641</b>, geometry information decoder <b>4642</b>, attribute information decoder <b>4643</b>, and additional information decoder <b>4644</b>.</p><p id="p-0213" num="0212">An encoded stream (compressed stream), which is encoded data, is input to first decoder <b>4640</b> from a processor in a system layer (not shown).</p><p id="p-0214" num="0213">Demultiplexer <b>4641</b> separates encoded geometry information (compressed geometry), encoded attribute information (compressed attribute), encoded additional information (compressed metadata), and other additional information from the encoded data.</p><p id="p-0215" num="0214">Geometry information decoder <b>4642</b> generates geometry information by decoding the encoded geometry information. For example, geometry information decoder <b>4642</b> restores the geometry information on a point cloud represented by three-dimensional coordinates from encoded geometry information represented by an N-ary structure, such as an octree.</p><p id="p-0216" num="0215">Attribute information decoder <b>4643</b> decodes the encoded attribute information based on configuration information generated by geometry information decoder <b>4642</b>. For example, attribute information decoder <b>4643</b> determines a reference point (reference node) that is to be referred to in decoding a current point (current node) to be processed based on the octree structure generated by geometry information decoder <b>4642</b>. For example, attribute information decoder <b>4643</b> refers to a node whose parent node in the octree is the same as the parent node of the current node, of peripheral nodes or neighboring nodes. Note that the method of determining a reference relationship is not limited to this method.</p><p id="p-0217" num="0216">The process of decoding attribute information may include at least one of an inverse quantization process, a prediction process, and an arithmetic decoding process. In this case, &#x201c;refer to&#x201d; means using a reference node for calculating a predicted value of attribute information or using a state of a reference node (occupancy information that indicates whether a reference node includes a point cloud or not, for example) for determining a parameter of decoding. For example, the parameter of decoding is a quantization parameter in the inverse quantization process or a context or the like in the arithmetic decoding.</p><p id="p-0218" num="0217">Additional information decoder <b>4644</b> generates additional information by decoding the encoded additional information. First decoder <b>4640</b> uses additional information required for the decoding process for the geometry information and the attribute information in the decoding, and outputs additional information required for an application to the outside.</p><p id="p-0219" num="0218">Next, an example configuration of a geometry information encoder will be described. <figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of geometry information encoder <b>2700</b> according to this embodiment. Geometry information encoder <b>2700</b> includes octree generator <b>2701</b>, geometry information calculator <b>2702</b>, encoding table selector <b>2703</b>, and entropy encoder <b>2704</b>.</p><p id="p-0220" num="0219">Octree generator <b>2701</b> generates an octree, for example, from input position information, and generates an occupancy code of each node of the octree. Geometry information calculator <b>2702</b> obtains information that indicates whether a neighboring node of a current node (target node) is an occupied node or not. For example, geometry information calculator <b>2702</b> calculates occupancy information on a neighboring node from an occupancy code of a parent node to which a current node belongs (information that indicates whether a neighboring node is an occupied node or not). Geometry information calculator <b>2702</b> may save an encoded node in a list and search the list for a neighboring node. Note that geometry information calculator <b>2702</b> may change neighboring nodes in accordance with the position of the current node in the parent node.</p><p id="p-0221" num="0220">Encoding table selector <b>2703</b> selects an encoding table used for entropy encoding of the current node based on the occupancy information on the neighboring node calculated by geometry information calculator <b>2702</b>. For example, encoding table selector <b>2703</b> may generate a bit sequence based on the occupancy information on the neighboring node and select an encoding table of an index number generated from the bit sequence.</p><p id="p-0222" num="0221">Entropy encoder <b>2704</b> generates encoded geometry information and metadata by entropy-encoding the occupancy code of the current node using the encoding table of the selected index number. Entropy encoder may add, to the encoded geometry information, information that indicates the selected encoding table.</p><p id="p-0223" num="0222">In the following, an octree representation and a scan order for geometry information will be described. Geometry information (geometry data) is transformed into an octree structure (octree transform) and then encoded. The octree structure includes nodes and leaves. Each node has eight nodes or leaves, and each leaf has voxel (VXL) information. <figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram showing an example structure of geometry information including a plurality of voxels. <figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram showing an example in which the geometry information shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> is transformed into an octree structure. Here, of leaves shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, leaves 1, 2, and 3 represent voxels VXL<b>1</b>, VXL<b>2</b>, and VXL<b>3</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, respectively, and each represent VXL containing a point cloud (referred to as a valid VXL, hereinafter).</p><p id="p-0224" num="0223">Specifically, node <b>1</b> corresponds to the entire space comprising the geometry information in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. The entire space corresponding to node <b>1</b> is divided into eight nodes, and among the eight nodes, a node containing valid VXL is further divided into eight nodes or leaves. This process is repeated for every layer of the tree structure. Here, each node corresponds to a subspace, and has information (occupancy code) that indicates where the next node or leaf is located after division as node information. A block in the bottom layer is designated as a leaf and retains the number of the points contained in the leaf as leaf information.</p><p id="p-0225" num="0224">Next, an example configuration of a geometry information decoder will be described. <figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram of geometry information decoder <b>2710</b> according to this embodiment. Geometry information decoder <b>2710</b> includes octree generator <b>2711</b>, geometry information calculator <b>2712</b>, encoding table selector <b>2713</b>, and entropy decoder <b>2714</b>.</p><p id="p-0226" num="0225">Octree generator <b>2711</b> generates an octree of a space (node) based on header information, metadata or the like of a bitstream. For example, octree generator <b>2711</b> generates an octree by generating a large space (root node) based on the sizes of a space in an x-axis direction, a y-axis direction, and a z-axis direction added to the header information and dividing the space into two parts in the x-axis direction, the y-axis direction, and the z-axis direction to generate eight small spaces A (nodes A<b>0</b> to A<b>7</b>). Nodes A<b>0</b> to A<b>7</b> are sequentially designated as a current node.</p><p id="p-0227" num="0226">Geometry information calculator <b>2712</b> obtains occupancy information that indicates whether a neighboring node of a current node is an occupied node or not. For example, geometry information calculator <b>2712</b> calculates occupancy information on a neighboring node from an occupancy code of a parent node to which a current node belongs. Geometry information calculator <b>2712</b> may save a decoded node in a list and search the list for a neighboring node. Note that geometry information calculator <b>2712</b> may change neighboring nodes in accordance with the position of the current node in the parent node.</p><p id="p-0228" num="0227">Encoding table selector <b>2713</b> selects an encoding table (decoding table) used for entropy decoding of the current node based on the occupancy information on the neighboring node calculated by geometry information calculator <b>2712</b>. For example, encoding table selector <b>2713</b> may generate a bit sequence based on the occupancy information on the neighboring node and select an encoding table of an index number generated from the bit sequence.</p><p id="p-0229" num="0228">Entropy decoder <b>2714</b> generates position information by entropy-decoding the occupancy code of the current node using the selected encoding table. Note that entropy decoder <b>2714</b> may obtain information on the selected encoding table by decoding the bitstream, and entropy-decode the occupancy code of the current node using the encoding table indicated by the information.</p><p id="p-0230" num="0229">In the following, configurations of an attribute information encoder and an attribute information decoder will be described. <figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram showing an example configuration of attribute information encoder A<b>100</b>. The attribute information encoder may include a plurality of encoders that perform different encoding methods. For example, the attribute information encoder may selectively use any of the two methods described below in accordance with the use case.</p><p id="p-0231" num="0230">Attribute information encoder A<b>100</b> includes LoD attribute information encoder A<b>101</b> and transformed-attribute-information encoder A<b>102</b>. LoD attribute information encoder A<b>101</b> classifies three-dimensional points into a plurality of layers based on geometry information on the three-dimensional points, predicts attribute information on three-dimensional points belonging to each layer, and encodes a prediction residual therefor. Here, each layer into which a three-dimensional point is classified is referred to as a level of detail (LoD).</p><p id="p-0232" num="0231">Transformed-attribute-information encoder A<b>102</b> encodes attribute information using region adaptive hierarchical transform (RAHT). Specifically, transformed-attribute-information encoder A<b>102</b> generates a high frequency component and a low frequency component for each layer by applying RAHT or Haar transform to each item of attribute information based on the geometry information on three-dimensional points, and encodes the values by quantization, entropy encoding or the like.</p><p id="p-0233" num="0232"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram showing an example configuration of attribute information decoder A<b>110</b>. The attribute information decoder may include a plurality of decoders that perform different decoding methods. For example, the attribute information decoder may selectively use any of the two methods described below for decoding based on the information included in the header or metadata.</p><p id="p-0234" num="0233">Attribute information decoder A<b>110</b> includes LoD attribute information decoder A<b>111</b> and transformed-attribute-information decoder A<b>112</b>. LoD attribute information decoder A<b>111</b> classifies three-dimensional points into a plurality of layers based on the geometry information on the three-dimensional points, predicts attribute information on three-dimensional points belonging to each layer, and decodes attribute values thereof.</p><p id="p-0235" num="0234">Transformed-attribute-information decoder A<b>112</b> decodes attribute information using region adaptive hierarchical transform (RAHT). Specifically, transformed-attribute-information decoder A<b>112</b> decodes each attribute value by applying inverse RAHT or inverse Haar transform to the high frequency component and the low frequency component of the attribute value based on the geometry information on the three-dimensional point.</p><p id="p-0236" num="0235"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a block diagram showing a configuration of attribute information encoder <b>3140</b> that is an example of LoD attribute information encoder A<b>101</b>.</p><p id="p-0237" num="0236">Attribute information encoder <b>3140</b> includes LoD generator <b>3141</b>, periphery searcher <b>3142</b>, predictor <b>3143</b>, prediction residual calculator <b>3144</b>, quantizer <b>3145</b>, arithmetic encoder <b>3146</b>, inverse quantizer <b>3147</b>, decoded value generator <b>3148</b>, and memory <b>3149</b>.</p><p id="p-0238" num="0237">LoD generator <b>3141</b> generates an LoD using geometry information on a three-dimensional point.</p><p id="p-0239" num="0238">Periphery searcher <b>3142</b> searches for a neighboring three-dimensional point neighboring each three-dimensional point using a result of LoD generation by LoD generator <b>3141</b> and distance information indicating distances between three-dimensional points.</p><p id="p-0240" num="0239">Predictor <b>3143</b> generates a predicted value of an item of attribute information on a current (target) three-dimensional point to be encoded.</p><p id="p-0241" num="0240">Prediction residual calculator <b>3144</b> calculates (generates) a prediction residual of the predicted value of the item of the attribute information generated by predictor <b>3143</b>.</p><p id="p-0242" num="0241">Quantizer <b>3145</b> quantizes the prediction residual of the item of attribute information calculated by prediction residual calculator <b>3144</b>.</p><p id="p-0243" num="0242">Arithmetic encoder <b>3146</b> arithmetically encodes the prediction residual quantized by quantizer <b>3145</b>. Arithmetic encoder <b>3146</b> outputs a bitstream including the arithmetically encoded prediction residual to the three-dimensional data decoding device, for example,</p><p id="p-0244" num="0243">The prediction residual may be binarized by quantizer <b>3145</b> before being arithmetically encoded by arithmetic encoder <b>3146</b>.</p><p id="p-0245" num="0244">Arithmetic encoder <b>3146</b> may initialize the encoding table used for the arithmetic encoding before performing the arithmetic encoding. Arithmetic encoder <b>3146</b> may initialize the encoding table used for the arithmetic encoding for each layer. Arithmetic encoder <b>3146</b> may output a bitstream including information that indicates the position of the layer at which the encoding table is initialized.</p><p id="p-0246" num="0245">Inverse quantizer <b>3147</b> inverse-quantizes the prediction residual quantized by quantizer <b>3145</b>.</p><p id="p-0247" num="0246">Decoded value generator <b>3148</b> generates a decoded value by adding the predicted value of the item of attribute information generated by predictor <b>3143</b> and the prediction residual inverse-quantized by inverse quantizer <b>3147</b> together.</p><p id="p-0248" num="0247">Memory <b>3149</b> is a memory that stores a decoded value of an item of attribute information on each three-dimensional point decoded by decoded value generator <b>3148</b>. For example, when generating a predicted value of a three-dimensional point yet to be encoded, predictor <b>3143</b> may generate the predicted value using a decoded value of an item of attribute information on each three-dimensional point stored in memory <b>3149</b>.</p><p id="p-0249" num="0248"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of attribute information encoder <b>6600</b> that is an example of transformation attribute information encoder A<b>102</b>. Attribute information encoder <b>6600</b> includes sorter <b>6601</b>, Haar transformer <b>6602</b>, quantizer <b>6603</b>, inverse quantizer <b>6604</b>, inverse Haar transformer <b>6605</b>, memory <b>6606</b>, and arithmetic encoder <b>6607</b>.</p><p id="p-0250" num="0249">Sorter <b>6601</b> generates the Morton codes by using the geometry information of three-dimensional points, and sorts the plurality of three-dimensional points in the order of the Morton codes. Haar transformer <b>6602</b> generates the coding coefficient by applying the Haar transform to the attribute information. Quantizer <b>6603</b> quantizes the coding coefficient of the attribute information.</p><p id="p-0251" num="0250">Inverse quantizer <b>6604</b> inverse quantizes the coding coefficient after the quantization. Inverse Haar transformer <b>6605</b> applies the inverse Haar transform to the coding coefficient. Memory <b>6606</b> stores the values of items of attribute information of a plurality of decoded three-dimensional points. For example, the attribute information of the decoded three-dimensional points stored in memory <b>6606</b> may be utilized for prediction and the like of an unencoded three-dimensional point.</p><p id="p-0252" num="0251">Arithmetic encoder <b>6607</b> calculates ZeroCnt from the coding coefficient after the quantization, and arithmetically encodes ZeroCnt. Additionally, arithmetic encoder <b>6607</b> arithmetically encodes the non-zero coding coefficient after the quantization. Arithmetic encoder <b>6607</b> may binarize the coding coefficient before the arithmetic encoding. In addition, arithmetic encoder <b>6607</b> may generate and encode various kinds of header information.</p><p id="p-0253" num="0252"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a block diagram showing a configuration of attribute information decoder <b>3150</b> that is an example of LoD attribute information decoder A<b>111</b>.</p><p id="p-0254" num="0253">Attribute information decoder <b>3150</b> includes LoD generator <b>3151</b>, periphery searcher <b>3152</b>, predictor <b>3153</b>, arithmetic decoder <b>3154</b>, inverse quantizer <b>3155</b>, decoded value generator <b>3156</b>, and memory <b>3157</b>.</p><p id="p-0255" num="0254">LoD generator <b>3151</b> generates an LoD using geometry information on a three-dimensional point decoded by the geometry information decoder (not shown in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0256" num="0255">Periphery searcher <b>3152</b> searches for a neighboring three-dimensional point neighboring each three-dimensional point using a result of LoD generation by LoD generator <b>3151</b> and distance information indicating distances between three-dimensional points.</p><p id="p-0257" num="0256">Predictor <b>3153</b> generates a predicted value of attribute information item on a current three-dimensional point to be decoded.</p><p id="p-0258" num="0257">Arithmetic decoder <b>3154</b> arithmetically decodes the prediction residual in the bitstream obtained from attribute information encoder <b>3140</b> shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>. Note that arithmetic decoder <b>3154</b> may initialize the decoding table used for the arithmetic decoding. Arithmetic decoder <b>3154</b> initializes the decoding table used for the arithmetic decoding for the layer for which the encoding process has been performed by arithmetic encoder <b>3146</b> shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>. Arithmetic decoder <b>3154</b> may initialize the decoding table used for the arithmetic decoding for each layer. Arithmetic decoder <b>3154</b> may initialize the decoding table based on the information included in the bitstream that indicates the position of the layer for which the encoding table has been initialized.</p><p id="p-0259" num="0258">Inverse quantizer <b>3155</b> inverse-quantizes the prediction residual arithmetically decoded by arithmetic decoder <b>3154</b>.</p><p id="p-0260" num="0259">Decoded value generator <b>3156</b> generates a decoded value by adding the predicted value generated by predictor <b>3153</b> and the prediction residual inverse-quantized by inverse quantizer <b>3155</b> together. Decoded value generator <b>3156</b> outputs the decoded attribute information data to another device.</p><p id="p-0261" num="0260">Memory <b>3157</b> is a memory that stores a decoded value of an item of attribute information on each three-dimensional point decoded by decoded value generator <b>3156</b>. For example, when generating a predicted value of a three-dimensional point yet to be decoded, predictor <b>3153</b> generates the predicted value using a decoded value of an item of attribute information on each three-dimensional point stored in memory <b>3157</b>.</p><p id="p-0262" num="0261"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a block diagram of attribute information decoder <b>6610</b> that is an example of transformation attribute information decoder A<b>112</b>. Attribute information decoder <b>6610</b> includes arithmetic decoder <b>6611</b>, inverse quantizer <b>6612</b>, inverse Haar transformer <b>6613</b>, and memory <b>6614</b>.</p><p id="p-0263" num="0262">Arithmetic decoder <b>6611</b> arithmetically decodes ZeroCnt and the coding coefficient included in a bitstream. Note that arithmetic decoder <b>6611</b> may decode various kinds of header information.</p><p id="p-0264" num="0263">Inverse quantizer <b>6612</b> inverse quantizes the arithmetically decoded coding coefficient. Inverse Haar transformer <b>6613</b> applies the inverse Haar transform to the coding coefficient after the inverse quantization. Memory <b>6614</b> stores the values of items of attribute information of a plurality of decoded three-dimensional points. For example, the attribute information of the decoded three-dimensional points stored in memory <b>6614</b> may be utilized for prediction of an undecoded three-dimensional point.</p><p id="p-0265" num="0264">Next, second encoder <b>4650</b>, which is an example of encoder <b>4613</b> that performs encoding in the second encoding method, will be described. <figref idref="DRAWINGS">FIG. <b>19</b></figref> is a diagram showing a configuration of second encoder <b>4650</b>. <figref idref="DRAWINGS">FIG. <b>20</b></figref> is a block diagram showing second encoder <b>4650</b>.</p><p id="p-0266" num="0265">Second encoder <b>4650</b> generates encoded data (encoded stream) by encoding point cloud data in the second encoding method. Second encoder <b>4650</b> includes additional information generator <b>4651</b>, geometry image generator <b>4652</b>, attribute image generator <b>4653</b>, video encoder <b>4654</b>, additional information encoder <b>4655</b>, and multiplexer <b>4656</b>.</p><p id="p-0267" num="0266">Second encoder <b>4650</b> is characterized by generating a geometry image and an attribute image by projecting a three-dimensional structure onto a two-dimensional image, and encoding the generated geometry image and attribute image in an existing video encoding scheme. The second encoding method is referred to as video-based PCC (VPCC).</p><p id="p-0268" num="0267">Point cloud data is PCC point cloud data like a PLY file or PCC point cloud data generated from sensor information, and includes geometry information (position), attribute information (attribute), and other additional information (metadata).</p><p id="p-0269" num="0268">Additional information generator <b>4651</b> generates map information on a plurality of two-dimensional images by projecting a three-dimensional structure onto a two-dimensional image.</p><p id="p-0270" num="0269">Geometry image generator <b>4652</b> generates a geometry image based on the geometry information and the map information generated by additional information generator <b>4651</b>. The geometry image is a distance image in which distance (depth) is indicated as a pixel value, for example, The distance image may be an image of a plurality of point clouds viewed from one point of view (an image of a plurality of point clouds projected onto one two-dimensional plane), a plurality of images of a plurality of point clouds viewed from a plurality of points of view, or a single image integrating the plurality of images.</p><p id="p-0271" num="0270">Attribute image generator <b>4653</b> generates an attribute image based on the attribute information and the map information generated by additional information generator <b>4651</b>. The attribute image is an image in which attribute information (color (RGB), for example) is indicated as a pixel value, for example, The image may be an image of a plurality of point clouds viewed from one point of view (an image of a plurality of point clouds projected onto one two-dimensional plane), a plurality of images of a plurality of point clouds viewed from a plurality of points of view, or a single image integrating the plurality of images.</p><p id="p-0272" num="0271">Video encoder <b>4654</b> generates an encoded geometry image (compressed geometry image) and an encoded attribute image (compressed attribute image), which are encoded data, by encoding the geometry image and the attribute image in a video encoding scheme. Note that, as the video encoding scheme, any well-known encoding method can be used. For example, the video encoding scheme is AVC or HEVC.</p><p id="p-0273" num="0272">Additional information encoder <b>4655</b> generates encoded additional information (compressed metadata) by encoding the additional information, the map information and the like included in the point cloud data.</p><p id="p-0274" num="0273">Multiplexer <b>4656</b> generates an encoded stream (compressed stream), which is encoded data, by multiplexing the encoded geometry image, the encoded attribute image, the encoded additional information, and other additional information. The generated encoded stream is output to a processor in a system layer (not shown).</p><p id="p-0275" num="0274">Next, second decoder <b>4660</b>, which is an example of decoder <b>4624</b> that performs decoding in the second encoding method, will be described. <figref idref="DRAWINGS">FIG. <b>21</b></figref> is a diagram showing a configuration of second decoder <b>4660</b>. <figref idref="DRAWINGS">FIG. <b>22</b></figref> is a block diagram showing second decoder <b>4660</b>. Second decoder <b>4660</b> generates point cloud data by decoding encoded data (encoded stream) encoded in the second encoding method in the second encoding method. Second decoder <b>4660</b> includes demultiplexer <b>4661</b>, video decoder <b>4662</b>, additional information decoder <b>4663</b>, geometry information generator <b>4664</b>, and attribute information generator <b>4665</b>.</p><p id="p-0276" num="0275">An encoded stream (compressed stream), which is encoded data, is input to second decoder <b>4660</b> from a processor in a system layer (not shown).</p><p id="p-0277" num="0276">Demultiplexer <b>4661</b> separates an encoded geometry image (compressed geometry image), an encoded attribute image (compressed attribute image), an encoded additional information (compressed metadata), and other additional information from the encoded data.</p><p id="p-0278" num="0277">Video decoder <b>4662</b> generates a geometry image and an attribute image by decoding the encoded geometry image and the encoded attribute image in a video encoding scheme. Note that, as the video encoding scheme, any well-known encoding method can be used. For example, the video encoding scheme is AVC or HEVC.</p><p id="p-0279" num="0278">Additional information decoder <b>4663</b> generates additional information including map information or the like by decoding the encoded additional information.</p><p id="p-0280" num="0279">Geometry information generator <b>4664</b> generates geometry information from the geometry image and the map information. Attribute information generator <b>4665</b> generates attribute information from the attribute image and the map information.</p><p id="p-0281" num="0280">Second decoder <b>4660</b> uses additional information required for decoding in the decoding, and outputs additional information required for an application to the outside.</p><p id="p-0282" num="0281">In the following, a problem with the PCC encoding scheme will be described. <figref idref="DRAWINGS">FIG. <b>23</b></figref> is a diagram showing a protocol stack relating to PCC-encoded data. <figref idref="DRAWINGS">FIG. <b>23</b></figref> shows an example in which PCC-encoded data is multiplexed with other medium data, such as a video (HEVC, for example) or an audio, and transmitted or accumulated.</p><p id="p-0283" num="0282">A multiplexing scheme and a file format have a function of multiplexing various encoded data and transmitting or accumulating the data. To transmit or accumulate encoded data, the encoded data has to be converted into a format for the multiplexing scheme. For example, with HEVC, a technique for storing encoded data in a data structure referred to as a NAL unit and storing the NAL unit in ISOBMFF is prescribed.</p><p id="p-0284" num="0283">At present, a first encoding method (Codec1) and a second encoding method (Codec2) are under investigation as encoding methods for point cloud data. However, there is no method defined for storing the configuration of encoded data and the encoded data in a system format. Thus, there is a problem that an encoder cannot perform an MUX process (multiplexing), transmission, or accumulation of data.</p><p id="p-0285" num="0284">Note that, in the following, the term &#x201c;encoding method&#x201d; means any of the first encoding method and the second encoding method unless a particular encoding method is specified.</p><heading id="h-0009" level="1">Embodiment 2</heading><p id="p-0286" num="0285">In this embodiment, types of the encoded data (geometry information (geometry), attribute information (attribute), and additional information (metadata)) generated by first encoder <b>4630</b> or second encoder <b>4650</b> described above, a method of generating additional information (metadata), and a multiplexing process in the multiplexer will be described. The additional information (metadata) may be referred to as a parameter set or control information (signaling information).</p><p id="p-0287" num="0286">In this embodiment, the dynamic object (three-dimensional point cloud data that varies with time) described above with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref> will be described, for example, However, the same method can also be used for the static object (three-dimensional point cloud data associated with an arbitrary time point).</p><p id="p-0288" num="0287"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a diagram showing configurations of encoder <b>4801</b> and multiplexer <b>4802</b> in a three-dimensional data encoding device according to this embodiment. Encoder <b>4801</b> corresponds to first encoder <b>4630</b> or second encoder <b>4650</b> described above, for example, Multiplexer <b>4802</b> corresponds to multiplexer <b>4634</b> or <b>4656</b> described above.</p><p id="p-0289" num="0288">Encoder <b>4801</b> encodes a plurality of PCC (point cloud compression) frames of point cloud data to generate a plurality of pieces of encoded data (multiple compressed data) of geometry information, attribute information, and additional information.</p><p id="p-0290" num="0289">Multiplexer <b>4802</b> integrates a plurality of types of data (geometry information, attribute information, and additional information) into a NAL unit, thereby converting the data into a data configuration that takes data access in the decoding device into consideration.</p><p id="p-0291" num="0290"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a diagram showing a configuration example of the encoded data generated by encoder <b>4801</b>. Arrows in the drawing indicate a dependence involved in decoding of the encoded data. The source of an arrow depends on data of the destination of the arrow. That is, the decoding device decodes the data of the destination of an arrow, and decodes the data of the source of the arrow using the decoded data. In other words, &#x201c;a first entity depends on a second entity&#x201d; means that data of the second entity is referred to (used) in processing (encoding, decoding, or the like) of data of the first entity.</p><p id="p-0292" num="0291">First, a process of generating encoded data of geometry information will be described. Encoder <b>4801</b> encodes geometry information of each frame to generate encoded geometry data (compressed geometry data) for each frame. The encoded geometry data is denoted by G(i). i denotes a frame number or a time point of a frame, for example,</p><p id="p-0293" num="0292">Furthermore, encoder <b>4801</b> generates a geometry parameter set (GPS(i)) for each frame. The geometry parameter set includes a parameter that can be used for decoding of the encoded geometry data. The encoded geometry data for each frame depends on an associated geometry parameter set.</p><p id="p-0294" num="0293">The encoded geometry data formed by a plurality of frames is defined as a geometry sequence. Encoder <b>4801</b> generates a geometry sequence parameter set (referred to also as geometry sequence PS or geometry SPS) that stores a parameter commonly used for a decoding process for the plurality of frames in the geometry sequence. The geometry sequence depends on the geometry SPS.</p><p id="p-0295" num="0294">Next, a process of generating encoded data of attribute information will be described. Encoder <b>4801</b> encodes attribute information of each frame to generate encoded attribute data (compressed attribute data) for each frame. The encoded attribute data is denoted by A(i). <figref idref="DRAWINGS">FIG. <b>25</b></figref> shows an example in which there are attribute X and attribute Y, and encoded attribute data for attribute X is denoted by AX(i), and encoded attribute data for attribute Y is denoted by AY(i).</p><p id="p-0296" num="0295">Furthermore, encoder <b>4801</b> generates an attribute parameter set (APS(i)) for each frame. The attribute parameter set for attribute X is denoted by AXPS(i), and the attribute parameter set for attribute Y is denoted by AYPS(i). The attribute parameter set includes a parameter that can be used for decoding of the encoded attribute information. The encoded attribute data depends on an associated attribute parameter set.</p><p id="p-0297" num="0296">The encoded attribute data formed by a plurality of frames is defined as an attribute sequence. Encoder <b>4801</b> generates an attribute sequence parameter set (referred to also as attribute sequence PS or attribute SPS) that stores a parameter commonly used for a decoding process for the plurality of frames in the attribute sequence. The attribute sequence depends on the attribute SPS.</p><p id="p-0298" num="0297">In the first encoding method, the encoded attribute data depends on the encoded geometry data.</p><p id="p-0299" num="0298"><figref idref="DRAWINGS">FIG. <b>25</b></figref> shows an example in which there are two types of attribute information (attribute X and attribute Y). When there are two types of attribute information, for example, two encoders generate data and metadata for the two types of attribute information. For example, an attribute sequence is defined for each type of attribute information, and an attribute SPS is generated for each type of attribute information.</p><p id="p-0300" num="0299">Note that, although <figref idref="DRAWINGS">FIG. <b>25</b></figref> shows an example in which there is one type of geometry information, and there are two types of attribute information, the present disclosure is not limited thereto. There may be one type of attribute information or three or more types of attribute information. In such cases, encoded data can be generated in the same manner. If the point cloud data has no attribute information, there may be no attribute information. In such a case, encoder <b>4801</b> does not have to generate a parameter set associated with attribute information.</p><p id="p-0301" num="0300">Next, a process of generating encoded data of additional information (metadata) will be described. Encoder <b>4801</b> generates a PCC stream PS (referred to also as PCC stream PS or stream PS), which is a parameter set for the entire PCC stream. Encoder <b>4801</b> stores a parameter that can be commonly used for a decoding process for one or more geometry sequences and one or more attribute sequences in the stream PS. For example, the stream PS includes identification information indicating the codec for the point cloud data and information indicating an algorithm used for the encoding, for example, The geometry sequence and the attribute sequence depend on the stream PS.</p><p id="p-0302" num="0301">Next, an access unit and a GOF will be described. In this embodiment, concepts of access unit (AU) and group of frames (GOF) are newly introduced.</p><p id="p-0303" num="0302">An access unit is a basic unit for accessing data in decoding, and is formed by one or more pieces of data and one or more pieces of metadata. For example, an access unit is formed by geometry information and one or more pieces of attribute information associated with a same time point. A GOF is a random access unit, and is formed by one or more access units.</p><p id="p-0304" num="0303">Encoder <b>4801</b> generates an access unit header (AU header) as identification information indicating the top of an access unit. Encoder <b>4801</b> stores a parameter relating to the access unit in the access unit header. For example, the access unit header includes a configuration of or information on the encoded data included in the access unit. The access unit header further includes a parameter commonly used for the data included in the access unit, such as a parameter relating to decoding of the encoded data.</p><p id="p-0305" num="0304">Note that encoder <b>4801</b> may generate an access unit delimiter that includes no parameter relating to the access unit, instead of the access unit header. The access unit delimiter is used as identification information indicating the top of the access unit. The decoding device identifies the top of the access unit by detecting the access unit header or the access unit delimiter.</p><p id="p-0306" num="0305">Next, generation of identification information for the top of a GOF will be described. As identification information indicating the top of a GOF, encoder <b>4801</b> generates a GOF header. Encoder <b>4801</b> stores a parameter relating to the GOF in the GOF header. For example, the GOF header includes a configuration of or information on the encoded data included in the GOF. The GOF header further includes a parameter commonly used for the data included in the GOF, such as a parameter relating to decoding of the encoded data.</p><p id="p-0307" num="0306">Note that encoder <b>4801</b> may generate a GOF delimiter that includes no parameter relating to the GOF, instead of the GOF header. The GOF delimiter is used as identification information indicating the top of the GOF. The decoding device identifies the top of the GOF by detecting the GOF header or the GOF delimiter.</p><p id="p-0308" num="0307">In the PCC-encoded data, the access unit is defined as a PCC frame unit, for example, The decoding device accesses a PCC frame based on the identification information for the top of the access unit.</p><p id="p-0309" num="0308">For example, the GOF is defined as one random access unit. The decoding device accesses a random access unit based on the identification information for the top of the GOF. For example, if PCC frames are independent from each other and can be separately decoded, a PCC frame can be defined as a random access unit.</p><p id="p-0310" num="0309">Note that two or more PCC frames may be assigned to one access unit, and a plurality of random access units may be assigned to one GOF.</p><p id="p-0311" num="0310">Encoder <b>4801</b> may define and generate a parameter set or metadata other than those described above. For example, encoder <b>4801</b> may generate supplemental enhancement information (SEI) that stores a parameter (an optional parameter) that is not always used for decoding.</p><p id="p-0312" num="0311">Next, a configuration of encoded data and a method of storing encoded data in a NAL unit will be described.</p><p id="p-0313" num="0312">For example, a data format is defined for each type of encoded data. <figref idref="DRAWINGS">FIG. <b>26</b></figref> is a diagram showing an example of encoded data and a NAL unit.</p><p id="p-0314" num="0313">For example, as shown in <figref idref="DRAWINGS">FIG. <b>26</b></figref>, encoded data includes a header and a payload. The encoded data may include length information indicating the length (data amount) of the encoded data, the header, or the payload. The encoded data may include no header.</p><p id="p-0315" num="0314">The header includes identification information for identifying the data, for example, The identification information indicates a data type or a frame number, for example,</p><p id="p-0316" num="0315">The header includes identification information indicating a reference relationship, for example, The identification information is stored in the header when there is a dependence relationship between data, for example, and allows an entity to refer to another entity. For example, the header of the entity to be referred to includes identification information for identifying the data. The header of the referring entity includes identification information indicating the entity to be referred to.</p><p id="p-0317" num="0316">Note that, when the entity to be referred to or the referring entity can be identified or determined from other information, the identification information for identifying the data or identification information indicating the reference relationship can be omitted.</p><p id="p-0318" num="0317">Multiplexer <b>4802</b> stores the encoded data in the payload of the NAL unit. The NAL unit header includes pcc_nal_unit_type, which is identification information for the encoded data. <figref idref="DRAWINGS">FIG. <b>27</b></figref> is a diagram showing a semantics example of pcc_nal_unit_type.</p><p id="p-0319" num="0318">As shown in <figref idref="DRAWINGS">FIG. <b>27</b></figref>, when pcc_codec_type is codec 1 (Codec1: first encoding method), values 0 to 10 of pcc_nal_unit_type are assigned to encoded geometry data (Geometry), encoded attribute X data (AttributeX), encoded attribute Y data (AttributeY), geometry PS (Geom. PS), attribute XPS (AttrX. S), attribute YPS (AttrY. PS), geometry SPS (Geometry Sequence PS), attribute X SPS (AttributeX Sequence PS), attribute Y SPS (AttributeY Sequence PS), AU header (AU Header), and GOF header (GOF Header) in codec 1. Values of 11 and greater are reserved in codec 1.</p><p id="p-0320" num="0319">When pcc_codec_type is codec 2 (Codec2: second encoding method), values of 0 to 2 of pec_nal_unit_type are assigned to data A (DataA), metadata A (MetaDataA), and metadata B (MetaDataB) in the codec. Values of 3 and greater are reserved in codec 2.</p><p id="p-0321" num="0320">Next, an order of transmission of data will be described. In the following, restrictions on the order of transmission of NAL units will be described.</p><p id="p-0322" num="0321">Multiplexer <b>4802</b> transmits NAL units on a GOF basis or on an AU basis. Multiplexer <b>4802</b> arranges the GOF header at the top of a GOF, and arranges the AU header at the top of an AU.</p><p id="p-0323" num="0322">In order to allow the decoding device to decode the next AU and the following AUs even when data is lost because of a packet loss or the like, multiplexer <b>4802</b> may arrange a sequence parameter set (SPS) in each AU.</p><p id="p-0324" num="0323">When there is a dependence relationship for decoding between encoded data, the decoding device decodes the data of the entity to be referred to and then decodes the data of the referring entity. In order to allow the decoding device to perform decoding in the order of reception without rearranging the data, multiplexer <b>4802</b> first transmits the data of the entity to be referred to.</p><p id="p-0325" num="0324"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is a diagram showing examples of the order of transmission of NAL units. <figref idref="DRAWINGS">FIG. <b>28</b></figref> shows three examples, that is, geometry information-first order, parameter-first order, and data-integrated order.</p><p id="p-0326" num="0325">The geometry information-first order of transmission is an example in which information relating to geometry information is transmitted together, and information relating to attribute information is transmitted together. In the case of this order of transmission, the transmission of the information relating to the geometry information ends earlier than the transmission of the information relating to the attribute information.</p><p id="p-0327" num="0326">For example, according to this order of transmission is used, when the decoding device does not decode attribute information, the decoding device may be able to have an idle time since the decoding device can omit decoding of attribute information. When the decoding device is required to decode geometry information early, the decoding device may be able to decode geometry information earlier since the decoding device obtains encoded data of the geometry information earlier.</p><p id="p-0328" num="0327">Note that, although in <figref idref="DRAWINGS">FIG. <b>28</b></figref> the attribute X SPS and the attribute Y SPS are integrated and shown as the attribute SPS, the attribute X SPS and the attribute Y SPS may be separately arranged.</p><p id="p-0329" num="0328">In the parameter set-first order of transmission, a parameter set is first transmitted, and data is then transmitted.</p><p id="p-0330" num="0329">As described above, as far as the restrictions on the order of transmission of NAL units are met, multiplexer <b>4802</b> can transmit NAL units in any order. For example, order identification information may be defined, and multiplexer <b>4802</b> may have a function of transmitting NAL units in a plurality of orders. For example, the order identification information for NAL units is stored in the stream PS.</p><p id="p-0331" num="0330">The three-dimensional data decoding device may perform decoding based on the order identification information. The three-dimensional data decoding device may indicate a desired order of transmission to the three-dimensional data encoding device, and the three-dimensional data encoding device (multiplexer <b>4802</b>) may control the order of transmission according to the indicated order of transmission.</p><p id="p-0332" num="0331">Note that multiplexer <b>4802</b> can generate encoded data having a plurality of functions merged to each other as in the case of the data-integrated order of transmission, as far as the restrictions on the order of transmission are met. For example, as shown in <figref idref="DRAWINGS">FIG. <b>28</b></figref>, the GOF header and the AU header may be integrated, or AXPS and AYPS may be integrated. In such a case, an identifier that indicates data having a plurality of functions is defined in pec_nal_unit_type.</p><p id="p-0333" num="0332">In the following, variations of this embodiment will be described. There are levels of PSs, such as a frame-level PS, a sequence-level PS, and a PCC sequence-level PS. Provided that the PCC sequence level is a higher level, and the frame level is a lower level, parameters can be stored in the manner described below.</p><p id="p-0334" num="0333">The value of a default PS is indicated in a PS at a higher level. If the value of a PS at a lower level differs from the value of the PS at a higher level, the value of the PS is indicated in the PS at the lower level. Alternatively, the value of the PS is not described in the PS at the higher level but is described in the PS at the lower level. Alternatively, information indicating whether the value of the PS is indicated in the PS at the lower level, at the higher level, or at both the levels is indicated in both or one of the PS at the lower level and the PS at the higher level. Alternatively, the PS at the lower level may be merged with the PS at the higher level. If the PS at the lower level and the PS at the higher level overlap with each other, multiplexer <b>4802</b> may omit transmission of one of the PSs.</p><p id="p-0335" num="0334">Note that encoder <b>4801</b> or multiplexer <b>4802</b> may divide data into slices or tiles and transmit each of the divided slices or tiles as divided data. The divided data includes information for identifying the divided data, and a parameter used for decoding of the divided data is included in the parameter set. In this case, an identifier that indicates that the data is data relating to a tile or slice or data storing a parameter is defined in pec_nal_unit_type.</p><p id="p-0336" num="0335">In the following, a process relating to order identification information will be described. <figref idref="DRAWINGS">FIG. <b>29</b></figref> is a flowchart showing a process performed by the three-dimensional data encoding device (encoder <b>4801</b> and multiplexer <b>4802</b>) that involves the order of transmission of NAL units.</p><p id="p-0337" num="0336">First, the three-dimensional data encoding device determines the order of transmission of NAL units (geometry information-first or parameter set-first) (S<b>4801</b>). For example, the three-dimensional data encoding device determines the order of transmission based on a specification from a user or an external device (the three-dimensional data decoding device, for example).</p><p id="p-0338" num="0337">If the determined order of transmission is geometry information-first (if &#x201c;geometry information-first&#x201d; in S<b>4802</b>), the three-dimensional data encoding device sets the order identification information included in the stream PS to geometry information-first (S<b>4803</b>). That is, in this case, the order identification information indicates that the NAL units are transmitted in the geometry information-first order. The three-dimensional data encoding device then transmits the NAL units in the geometry information-first order (S<b>4804</b>).</p><p id="p-0339" num="0338">On the other hand, if the determined order of transmission is parameter set-first (if &#x201c;parameter set-first&#x201d; in S<b>4802</b>), the three-dimensional data encoding device sets the order identification information included in the stream PS to parameter set-first (S<b>4805</b>). That is, in this case, the order identification information indicates that the NAL units are transmitted in the parameter set-first order. The three-dimensional data encoding device then transmits the NAL units in the parameter set-first order (S<b>4806</b>).</p><p id="p-0340" num="0339"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is a flowchart showing a process performed by the three-dimensional data decoding device that involves the order of transmission of NAL units. First, the three-dimensional data decoding device analyzes the order identification information included in the stream PS (S<b>4811</b>).</p><p id="p-0341" num="0340">If the order of transmission indicated by the order identification information is geometry information-first (if &#x201c;geometry information-first&#x201d; in S<b>4812</b>), the three-dimensional data decoding device decodes the NAL units based on the determination that the order of transmission of the NAL units is geometry information-first (S<b>4813</b>).</p><p id="p-0342" num="0341">On the other hand, if the order of transmission indicated by the order identification information is parameter set-first (if &#x201c;parameter set-first&#x201d; in S<b>4812</b>), the three-dimensional data decoding device decodes the NAL units based on the determination that the order of transmission of the NAL units is parameter set-first (S<b>4814</b>).</p><p id="p-0343" num="0342">For example, if the three-dimensional data decoding device does not decode attribute information, in step S<b>4813</b>, the three-dimensional data decoding device does not obtain the entire NAL units but can obtain a part of a NAL unit relating to the geometry information and decode the obtained NAL unit to obtain the geometry information.</p><p id="p-0344" num="0343">Next, a process relating to generation of an AU and a GOF will be described. <figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flowchart showing a process performed by the three-dimensional data encoding device (multiplexer <b>4802</b>) that relates to generation of an AU and a GOF in multiplexing of NAL units.</p><p id="p-0345" num="0344">First, the three-dimensional data encoding device determines the type of the encoded data (S<b>4821</b>). Specifically, the three-dimensional data encoding device determines whether the encoded data to be processed is AU-first data, GOF-first data, or other data.</p><p id="p-0346" num="0345">If the encoded data is GOF-first data (if &#x201c;GOF-first&#x201d; in S<b>4822</b>), the three-dimensional data encoding device generates NAL units by arranging a GOF header and an AU header at the top of the encoded data belonging to the GOF (S<b>4823</b>).</p><p id="p-0347" num="0346">If the encoded data is AU-first data (if &#x201c;AU-first&#x201d; in S<b>4822</b>), the three-dimensional data encoding device generates NAL units by arranging an AU header at the top of the encoded data belonging to the AU (S<b>4824</b>).</p><p id="p-0348" num="0347">If the encoded data is neither GOF-first data nor AU-first data (if &#x201c;other than GOF-first and AU-first&#x201d; in S<b>4822</b>), the three-dimensional data encoding device generates NAL units by arranging the encoded data to follow the AU header of the AU to which the encoded data belongs (S<b>4825</b>).</p><p id="p-0349" num="0348">Next, a process relating to access to an AU and a GOF will be described. <figref idref="DRAWINGS">FIG. <b>32</b></figref> is a flowchart showing a process performed by the three-dimensional data decoding device that involves accessing to an AU and a GOF in demultiplexing of a NAL unit.</p><p id="p-0350" num="0349">First, the three-dimensional data decoding device determines the type of the encoded data included in the NAL unit by analyzing nal_unit_type in the NAL unit (S<b>4831</b>). Specifically, the three-dimensional data decoding device determines whether the encoded data included in the NAL unit is AU-first data, GOF-first data, or other data.</p><p id="p-0351" num="0350">If the encoded data included in the NAL unit is GOF-first data (if &#x201c;GOF-first&#x201d; in S<b>4832</b>), the three-dimensional data decoding device determines that the NAL unit is a start position of random access, accesses the NAL unit, and starts the decoding process (S<b>4833</b>).</p><p id="p-0352" num="0351">If the encoded data included in the NAL unit is AU-first data (if &#x201c;AU-first&#x201d; in S<b>4832</b>), the three-dimensional data decoding device determines that the NAL unit is AU-first, accesses the data included in the NAL unit, and decodes the AU (S<b>4834</b>).</p><p id="p-0353" num="0352">If the encoded data included in the NAL unit is neither GOF-first data nor AU-first data (if &#x201c;other than GOF-first and AU-first&#x201d; in S<b>4832</b>), the three-dimensional data decoding device does not process the NAL unit.</p><heading id="h-0010" level="1">Embodiment 3</heading><p id="p-0354" num="0353">In the present embodiment, a representation means of three-dimensional points (point cloud) in encoding of three-dimensional data will be described.</p><p id="p-0355" num="0354"><figref idref="DRAWINGS">FIG. <b>33</b></figref> is a block diagram showing a structure of a distribution system of three-dimensional data according to the present embodiment. The distribution system shown in <figref idref="DRAWINGS">FIG. <b>33</b></figref> includes server <b>1501</b> and a plurality of clients <b>1502</b>.</p><p id="p-0356" num="0355">Server <b>1501</b> includes storage <b>1511</b> and controller <b>1512</b>. Storage <b>1511</b> stores encoded three-dimensional map <b>1513</b> that is encoded three-dimensional data.</p><p id="p-0357" num="0356"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a diagram showing an example structure of a bitstream of encoded three-dimensional map <b>1513</b>. The three-dimensional map is divided into a plurality of submaps and each submap is encoded. Each submap is appended with a random-access (RA) header including subcoordinate information. The subcoordinate information is used for improving encoding efficiency of the submap. This subcoordinate information indicates subcoordinates of the submap. The subcoordinates are coordinates of the submap having reference coordinates as reference. Note that the three-dimensional map including the plurality of submaps is referred to as an overall map. Coordinates that are a reference in the overall map (e.g. origin) are referred to as the reference coordinates. In other words, the subcoordinates are the coordinates of the submap in a coordinate system of the overall map. In other words, the subcoordinates indicate an offset between the coordinate system of the overall map and a coordinate system of the submap. Coordinates in the coordinate system of the overall map having the reference coordinates as reference are referred to as overall coordinates. Coordinates in the coordinate system of the submap having the subcoordinates as reference are referred to as differential coordinates.</p><p id="p-0358" num="0357">Client <b>1502</b> transmits a message to server <b>1501</b>. This message includes position information on client <b>1502</b>. Controller <b>1512</b> included in server <b>1501</b> obtains a bitstream of a submap located closest to client <b>1502</b>, based on the position information included in the received message. The bitstream of the submap includes the subcoordinate information and is transmitted to client <b>1502</b>. Decoder <b>1521</b> included in client <b>1502</b> obtains overall coordinates of the submap having the reference coordinates as reference, using this subcoordinate information. Application <b>1522</b> included in client <b>1502</b> executes an application relating to a self-location, using the obtained overall coordinates of the submap.</p><p id="p-0359" num="0358">The submap indicates a partial area of the overall map. The subcoordinates are the coordinates in which the submap is located in a reference coordinate space of the overall map. For example, in an overall map called A, there is submap A called AA and submap B called AB. When a vehicle wants to consult a map of AA, decoding begins from submap A, and when the vehicle wants to consult a map of AB, decoding begins from submap B. The submap here is a random-access point. To be specific, A is Osaka Prefecture, AA is Osaka City, and AB is Takatsuki City.</p><p id="p-0360" num="0359">Each submap is transmitted along with the subcoordinate information to the client. The subcoordinate information is included in header information of each submap, a transmission packet, or the like.</p><p id="p-0361" num="0360">The reference coordinates, which serve as a reference for the subcoordinate information of each submap, may be appended to header information of a space at a higher level than the submap, such as header information of the overall map.</p><p id="p-0362" num="0361">The submap may be formed by one space (SPC). The submap may also be formed by a plurality of SPCs.</p><p id="p-0363" num="0362">The submap may include a Group of Spaces (GOS). The submap may be formed by a world. For example, in a case where there are a plurality of objects in the submap, the submap is formed by a plurality of SPCs when assigning the plurality of objects to separate SPCs. The submap is formed by one SPC when assigning the plurality of objects to one SPC.</p><p id="p-0364" num="0363">An advantageous effect on encoding efficiency when using the subcoordinate information will be described next. <figref idref="DRAWINGS">FIG. <b>35</b></figref> is a diagram for describing this advantageous effect. For example, a high bit count is necessary in order to encode three-dimensional point A, which is located far from the reference coordinates, shown in <figref idref="DRAWINGS">FIG. <b>35</b></figref>. A distance between the subcoordinates and three-dimensional point A is shorter than a distance between the reference coordinates and three-dimensional point A. As such, it is possible to improve encoding efficiency by encoding coordinates of three-dimensional point A having the subcoordinates as reference more than when encoding the coordinates of three-dimensional point A having the reference coordinates as reference. The bitstream of the submap includes the subcoordinate information. By transmitting the bitstream of the submap and the reference coordinates to a decoding end (client), it is possible to restore the overall coordinates of the submap in the decoder end.</p><p id="p-0365" num="0364"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is a flowchart of processes performed by server <b>1501</b>, which is a transmission end of the submap.</p><p id="p-0366" num="0365">Server <b>1501</b> first receives a message including position information on client <b>1502</b> from client <b>1502</b> (S<b>1501</b>). Controller <b>1512</b> obtains an encoded bitstream of the submap based on the position information on the client from storage <b>1511</b> (S<b>1502</b>). Server <b>1501</b> then transmits the encoded bitstream of the submap and the reference coordinates to client <b>1502</b> (S<b>1503</b>).</p><p id="p-0367" num="0366"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a flowchart of processes performed by client <b>1502</b>, which is a receiver end of the submap.</p><p id="p-0368" num="0367">Client <b>1502</b> first receives the encoded bitstream of the submap and the reference coordinates transmitted from server <b>1501</b> (S<b>1511</b>). Client <b>1502</b> next obtains the subcoordinate information of the submap by decoding the encoded bitstream (S<b>1512</b>). Client <b>1502</b> next restores the differential coordinates in the submap to the overall coordinates, using the reference coordinates and the subcoordinates (S<b>1513</b>).</p><p id="p-0369" num="0368">An example syntax of information relating to the submap will be described next. In the encoding of the submap, the three-dimensional data encoding device calculates the differential coordinates by subtracting the subcoordinates from the coordinates of each point cloud (three-dimensional points). The three-dimensional data encoding device then encodes the differential coordinates into the bitstream as a value of each point cloud. The encoding device encodes the subcoordinate information indicating the subcoordinates as the header information of the bitstream. This enables the three-dimensional data decoding device to obtain overall coordinates of each point cloud. For example, the three-dimensional data encoding device is included in server <b>1501</b> and the three-dimensional data decoding device is included in client <b>1502</b>.</p><p id="p-0370" num="0369"><figref idref="DRAWINGS">FIG. <b>38</b></figref> is a diagram showing an example syntax of the submap. NumOfPoint shown in <figref idref="DRAWINGS">FIG. <b>38</b></figref> indicates a total number of point clouds included in the submap. sub_coordinate_x, sub_coordinate_y, and sub_coordinate_z are the subcoordinate information. sub_coordinate_x indicates an x-coordinate of the subcoordinates. sub_coordinate_y indicates a y-coordinate of the subcoordinates. sub_coordinate_z indicates a z-coordinate of the subcoordinates.</p><p id="p-0371" num="0370">diff_x[i], diff_y[i], and diff_z[i] are differential coordinates of an i-th point cloud in the submap. diff_x[i] is a differential value between an x-coordinate of the i-th point cloud and the x-coordinate of the subcoordinates in the submap. diff_y[i] is a differential value between a y-coordinate of the i-th point cloud and the y-coordinate of the subcoordinates in the submap. diff_z[i] is a differential value between a z-coordinate of the i-th point cloud and the z-coordinate of the subcoordinates in the submap.</p><p id="p-0372" num="0371">The three-dimensional data decoding device decodes point_cloud[i]_x, point_cloud[i]y, and point_cloud[i]_z, which are overall coordinates of the i-th point cloud, using the expression below. point_cloud[i]_x is an x-coordinate of the overall coordinates of the i-th point cloud. point_cloud[i]_y is a y-coordinate of the overall coordinates of the i-th point cloud. point_cloud[i]_z is a z-coordinate of the overall coordinates of the i-th point cloud.</p><p id="p-0373" num="0372">point_cloud[i]_x=sub_coordinate_x+diff_x[i]</p><p id="p-0374" num="0373">point_cloud[i]_y=sub_coordinate_y+diff_y[i]</p><p id="p-0375" num="0374">point_cloud[i]_z=sub_coordinate_z+diff_z[i]</p><p id="p-0376" num="0375">A switching process for applying octree encoding will be described next. The three-dimensional data encoding device selects, when encoding the submap, whether to encode each point cloud using an octree representation (hereinafter, referred to as octree encoding) or to encode the differential values from the subcoordinates (hereinafter, referred to as non-octree encoding). <figref idref="DRAWINGS">FIG. <b>39</b></figref> is a diagram schematically showing this operation. For example, the three-dimensional data encoding device applies octree encoding to the submap, when the total number of point clouds in the submap is at least a predetermined threshold. The three-dimensional data encoding device applies non-octree encoding to the submap, when the total number of point clouds in the submap is lower than the predetermined threshold. This enables the three-dimensional data encoding device to improve encoding efficiency, since it is possible to appropriately select whether to use octree encoding or non-octree encoding, in accordance with a shape and density of objects included in the submap.</p><p id="p-0377" num="0376">The three-dimensional data encoding device appends, to a header and the like of the submap, information indicating whether octree encoding or non-octree encoding has been applied to the submap (hereinafter, referred to as octree encoding application information). This enables the three-dimensional data decoding device to identify whether the bitstream is obtained by octree encoding the submap or non-octree encoding the submap.</p><p id="p-0378" num="0377">The three-dimensional data encoding device may calculate encoding efficiency when applying octree encoding and encoding efficiency when applying non-octree encoding to the same point cloud, and apply an encoding method whose encoding efficiency is better to the submap.</p><p id="p-0379" num="0378"><figref idref="DRAWINGS">FIG. <b>40</b></figref> is a diagram showing an example syntax of the submap when performing this switching. coding_type shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref> is information indicating the encoding type and is the above octree encoding application information. coding_type=00 indicates that octree encoding has been applied. coding_type=01 indicates that non-octree encoding has been applied. coding_type=10 or 11 indicates that an encoding method and the like other than the above encoding methods has been applied.</p><p id="p-0380" num="0379">When the encoding type is non-octree encoding (non_octree), the submap includes NumOfPoint and the subcoordinate information (sub_coordinate_x, sub_coordinate_y, and sub_coordinate_z).</p><p id="p-0381" num="0380">When the encoding type is octree encoding (octree), the submap includes octree_info. octree_info is information necessary to the octree encoding and includes, for example, depth information.</p><p id="p-0382" num="0381">When the encoding type is non-octree encoding (non_octree), the submap includes the differential coordinates (diff_x[i], diff_y[i], and diff_z[i]).</p><p id="p-0383" num="0382">When the encoding type is octree encoding (octree), the submap includes octree_data, which is encoded data relating to the octree encoding.</p><p id="p-0384" num="0383">Note that an example has been described here in which an xyz coordinate system is used as the coordinate system of the point cloud, but a polar coordinate system may also be used.</p><p id="p-0385" num="0384"><figref idref="DRAWINGS">FIG. <b>41</b></figref> is a flowchart of a three-dimensional data encoding process performed by the three-dimensional data encoding device. Three-dimensional data encoding device first calculates a total number of point clouds in a current submap, which is the submap to be processed (S<b>1521</b>). The three-dimensional data encoding device next determines whether when the calculated total number of point clouds is at least a predetermined threshold (S<b>1522</b>).</p><p id="p-0386" num="0385">When the total number of point clouds is at least the predetermined threshold (YES in S<b>1522</b>), the three-dimensional data encoding device applies octree encoding to the current submap (S<b>1523</b>). The three-dimensional data encoding device appends, to a header of the bitstream, octree encoding application information indicating that octree encoding has been applied to the current submap (S<b>1525</b>).</p><p id="p-0387" num="0386">In contrast, when the total number of point clouds is lower than the predetermined threshold (NO in S<b>1522</b>), the three-dimensional data encoding device applies non-octree encoding to the current submap (S<b>1524</b>). The three-dimensional data encoding device appends, to the header of the bitstream, octree encoding application information indicating that non-octree encoding has been applied to the current submap (S<b>1525</b>).</p><p id="p-0388" num="0387"><figref idref="DRAWINGS">FIG. <b>42</b></figref> is a flowchart of a three-dimensional data decoding process performed by the three-dimensional data decoding device. The three-dimensional data decoding device first decodes the octree encoding application information from the header of the bitstream (S<b>1531</b>). The three-dimensional data decoding device next determines whether the encoding type applied to the current submap is octree encoding, based on the decoded octree encoding application information (S<b>1532</b>).</p><p id="p-0389" num="0388">When the octree encoding application information indicates that the encoding type is octree encoding (YES in S<b>1532</b>), the three-dimensional data decoding device decodes the current submap through octree decoding (S<b>1533</b>). In contrast, when the octree encoding application information indicates that the encoding type is non-octree encoding (NO in S<b>1532</b>), the three-dimensional data decoding device decodes the current submap through non-octree decoding (S<b>1534</b>).</p><p id="p-0390" num="0389">Hereinafter, variations of the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>43</b></figref> to <figref idref="DRAWINGS">FIG. <b>45</b></figref> are diagrams schematically showing operations of variations of the switching process of the encoding type.</p><p id="p-0391" num="0390">As illustrated in <figref idref="DRAWINGS">FIG. <b>43</b></figref>, the three-dimensional data encoding device may select whether to apply octree encoding or non-octree encoding per space. In this case, the three-dimensional data encoding device appends the octree encoding application information to a header of the space. This enables the three-dimensional data decoding device to determine whether octree encoding has been applied per space. In this case, the three-dimensional data encoding device sets subcoordinates per space, and encodes a differential value, which is a value of the subcoordinates subtracted from coordinates of each point cloud in the space.</p><p id="p-0392" num="0391">This enables the three-dimensional data encoding device to improve encoding efficiency, since it is possible to appropriately select whether to apply octree encoding, in accordance with a shape of objects or the total number of point clouds in the space.</p><p id="p-0393" num="0392">As illustrated in <figref idref="DRAWINGS">FIG. <b>44</b></figref>, the three-dimensional data encoding device may select whether to apply octree encoding or non-octree encoding per volume. In this case, the three-dimensional data encoding device appends the octree encoding application information to a header of the volume. This enables the three-dimensional data decoding device to determine whether octree encoding has been applied per volume. In this case, the three-dimensional data encoding device sets subcoordinates per volume, and encodes a differential value, which is a value of the subcoordinates subtracted from coordinates of each point cloud in the volume.</p><p id="p-0394" num="0393">This enables the three-dimensional data encoding device to improve encoding efficiency, since it is possible to appropriately select whether to apply octree encoding, in accordance with a shape of objects or the total number of point clouds in the volume.</p><p id="p-0395" num="0394">In the above description, an example has been shown in which the difference, which is the subcoordinates of each point cloud subtracted from the coordinates of each point cloud, is encoded as the non-octree encoding, but is not limited thereto, and any other type of encoding method other than the octree encoding may be used. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>45</b></figref>, the three-dimensional data encoding device may not only encode the difference from the subcoordinates as the non-octree encoding, but also use a method in which a value of the point cloud in the submap, the space, or the volume itself is encoded (hereinafter, referred to as original coordinate encoding).</p><p id="p-0396" num="0395">In this case, the three-dimensional data encoding device stores, in the header, information indicating that original coordinate encoding has been applied to a current space (submap, space, or volume). This enables the three-dimensional data decoding device to determine whether original coordinate encoding has been applied to the current space.</p><p id="p-0397" num="0396">When applying original coordinate encoding, the three-dimensional data encoding device may perform the encoding without applying quantization and arithmetic encoding to original coordinates. The three-dimensional data encoding device may encode the original coordinates using a predetermined fixed bit length. This enables three-dimensional data encoding device to generate a stream with a fixed bit length at a certain time.</p><p id="p-0398" num="0397">In the above description, an example has been shown in which the difference, which is the subcoordinates of each point cloud subtracted from the coordinates of each point cloud, is encoded as the non-octree encoding, but is not limited thereto.</p><p id="p-0399" num="0398">For example, the three-dimensional data encoding device may sequentially encode a differential value between the coordinates of each point cloud. <figref idref="DRAWINGS">FIG. <b>46</b></figref> is a diagram for describing an operation in this case. For example, in the example shown in <figref idref="DRAWINGS">FIG. <b>46</b></figref>, the three-dimensional data encoding device encodes a differential value between coordinates of point cloud PA and predicted coordinates, using the subcoordinates as the predicted coordinates, when encoding point cloud PA. The three-dimensional data encoding device encodes a differential value between point cloud PB and predicted coordinates, using the coordinates of point cloud PA as the predicted coordinates, when encoding point cloud PB. The three-dimensional data encoding device encodes a differential value between point cloud PC and predicted coordinates, using the coordinates of point cloud PB as the predicted coordinates, when encoding point cloud PC. In this manner, the three-dimensional data encoding device may set a scan order to a plurality of point clouds, and encode a differential value between coordinates of a current point cloud to be processed and coordinates of a point cloud immediately before the current point cloud in the scan order.</p><p id="p-0400" num="0399">In the above description, the subcoordinates are coordinates in the lower left front corner of the submap, but a location of the subcoordinates is not limited thereto. <figref idref="DRAWINGS">FIG. <b>47</b></figref> to <figref idref="DRAWINGS">FIG. <b>49</b></figref> are diagrams showing other examples of the location of the subcoordinates. The location of the subcoordinates may be set to any coordinates in the current space (submap, space, or volume). In other words, the subcoordinates may be, as stated above, coordinates in the lower left front corner of the current space. As illustrated in <figref idref="DRAWINGS">FIG. <b>47</b></figref>, the subcoordinates may be coordinates in a center of the current space. As illustrated in <figref idref="DRAWINGS">FIG. <b>48</b></figref>, the subcoordinates may be coordinates in an upper right rear corner of the current space. The subcoordinates are not limited to being coordinates in the lower left front corner or the upper right rear corner of the current space, but may also be coordinates in any corner of the current space.</p><p id="p-0401" num="0400">The location of the subcoordinates may be the same as coordinates of a certain point cloud in the current space (submap, space, or volume). For example, in the example shown in <figref idref="DRAWINGS">FIG. <b>49</b></figref>, the coordinates of the subcoordinates coincide with coordinates of point cloud PD.</p><p id="p-0402" num="0401">In the present embodiment, an example has been shown that switches between applying octree encoding or non-octree encoding, but is not necessarily limited thereto. For example, the three-dimensional data encoding device may switch between applying a tree structure other than an octree or a non-tree structure other than the tree-structure. For example, the other tree structure is a k&#xb7;d tree in which splitting is performed using perpendicular planes on one coordinate axis. Note that any other method may be used as the other tree structure.</p><p id="p-0403" num="0402">In the present embodiment, an example has been shown in which coordinate information included in a point cloud is encoded, but is not necessarily limited thereto. The three-dimensional data encoding device may encode, for example, color information, a three-dimensional feature quantity, or a feature quantity of visible light using the same method as for the coordinate information. For example, the three-dimensional data encoding device may set an average value of the color information included in each point cloud in the submap to subcolor information, and encode a difference between the color information and the subcolor information of each point cloud.</p><p id="p-0404" num="0403">In the present embodiment, an example has been shown in which an encoding method (octree encoding or non-octree encoding) with good encoding efficiency is selected in accordance with a total number of point clouds and the like, but is not necessarily limited thereto. For example, the three-dimensional data encoding device, which is a server end, may store a bitstream of a point cloud encoded through octree encoding, a bitstream of a point cloud encoded through non-octree encoding, and a bitstream of a point cloud encoded through both methods, and switch the bitstream to be transmitted to the three-dimensional data decoding device, in accordance with a transmission environment or a processing power of the three-dimensional data decoding device.</p><p id="p-0405" num="0404"><figref idref="DRAWINGS">FIG. <b>50</b></figref> is a diagram showing an example syntax of a volume when applying octree encoding. The syntax shown in <figref idref="DRAWINGS">FIG. <b>50</b></figref> is basically the same as the syntax shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref>, but differs in that each piece of information is information in units of volumes. To be specific, NumOfPoint indicates a total number of point clouds included in the volume. sub_coordinate_x, sub_coordinate_y, and sub_coordinate_z are the subcoordinate information of the volume.</p><p id="p-0406" num="0405">diff_x[i], diff_y[i], and diff_z[i] are differential coordinates of an i-th point cloud in the volume. diff_x[i] is a differential value between an x-coordinate of the i-th point cloud and the x-coordinate of the subcoordinates in the volume. diff_y[i] is a differential value between a y-coordinate of the i-th point cloud and the y-coordinate of the subcoordinates in the volume. diff_z[i] is a differential value between a z-coordinate of the i-th point cloud and the z-coordinate of the subcoordinates in the volume.</p><p id="p-0407" num="0406">Note that when it is possible to calculate a relative position of the volume in the space, the three-dimensional data encoding device does not need to include the subcoordinate information in a header of the volume. In other words, the three-dimensional data encoding device may calculate the relative position of the volume in the space without including the subcoordinate information in the header, and use the calculated position as the subcoordinates of each volume.</p><p id="p-0408" num="0407">As stated above, the three-dimensional data encoding device according to the present embodiment determines whether to encode, using an octree structure, a current space unit among a plurality of space units (e.g. submaps, spaces, or volumes) included in three-dimensional data (e.g. S<b>1522</b> in <figref idref="DRAWINGS">FIG. <b>41</b></figref>). For example, the three-dimensional data encoding device determines that the current space unit is to be encoded using the octree structure, when a total number of the three-dimensional points included in the current space unit is higher than a predetermined threshold. The three-dimensional data encoding device determines that the current space unit is not to be encoded using the octree structure, when the total number of the three-dimensional points included in the current space unit is lower than or equal to the predetermined threshold.</p><p id="p-0409" num="0408">When it is determined that the current space unit is to be encoded using the octree structure (YES in S<b>1522</b>), the three-dimensional data encoding device encodes the current space unit using the octree structure (S<b>1523</b>). When it is determined that the current space unit is not to be encoded using the octree structure (NO in S<b>1522</b>), the three-dimensional data encoding device encodes the current space unit using a different method that is not the octree structure (S<b>1524</b>). For example, in the different method, the three-dimensional data encoding device encodes coordinates of three-dimensional points included in the current space unit. To be specific, in the different method, the three-dimensional data encoding device encodes a difference between reference coordinates of the current space unit and the coordinates of the three-dimensional points included in the current space unit.</p><p id="p-0410" num="0409">The three-dimensional data encoding device next appends, to a bitstream, information that indicates whether the current space unit has been encoded using the octree structure (S<b>1525</b>).</p><p id="p-0411" num="0410">This enables the three-dimensional data encoding device to improve encoding efficiency since it is possible to reduce the amount of data of the encoded signal.</p><p id="p-0412" num="0411">For example, the three-dimensional data encoding device includes a processor and memory, the processor using the memory to perform the above processes.</p><p id="p-0413" num="0412">The three-dimensional data decoding device according to the present embodiment decodes, from a bitstream, information that indicates whether to decode, using an octree structure, a current space unit among a plurality of space units (e.g. submaps, spaces, or volumes) included in three-dimensional data (e.g. S<b>1531</b> in <figref idref="DRAWINGS">FIG. <b>42</b></figref>). When the information indicates that the current space unit is to be decoded using the octree structure (YES in S<b>1532</b>), the three-dimensional data decoding device decodes the current space unit using the octree structure (S<b>1533</b>).</p><p id="p-0414" num="0413">When the information indicates not to decode the current space unit using the octree structure (NO in S<b>1532</b>), the three-dimensional data decoding device decodes the current space unit using a different method that is not the octree structure (S<b>1534</b>). For example, in the different method, the three-dimensional data decoding device decodes coordinates of three-dimensional points included in the current space unit. To be specific, in the different method, the three-dimensional data decoding device decodes a difference between reference coordinates of the current space unit and the coordinates of the three-dimensional points included in the current space unit.</p><p id="p-0415" num="0414">This enables the three-dimensional data decoding device to improve encoding efficiency since it is possible to reduce the amount of data of the encoded signal.</p><p id="p-0416" num="0415">For example, three-dimensional data decoding device includes a processor and memory. The processor uses the memory to perform the above processes.</p><heading id="h-0011" level="1">Embodiment 4</heading><p id="p-0417" num="0416">According to a three-dimensional data encoding device according to Embodiment 4, geometry information of a plurality of three-dimensional points is encoded using a prediction tree generated based on the geometry information.</p><p id="p-0418" num="0417"><figref idref="DRAWINGS">FIG. <b>51</b></figref> is a diagram illustrating an example of a prediction tree used in the three-dimensional data encoding method according to Embodiment 4. <figref idref="DRAWINGS">FIG. <b>52</b></figref> is a flowchart illustrating an example of the three-dimensional data encoding method according to Embodiment 4. <figref idref="DRAWINGS">FIG. <b>53</b></figref> is a flowchart illustrating an example of a three-dimensional data decoding method according to Embodiment 4.</p><p id="p-0419" num="0418">As shown in <figref idref="DRAWINGS">FIG. <b>51</b></figref> and <figref idref="DRAWINGS">FIG. <b>52</b></figref>, in the three-dimensional data encoding method, a prediction tree is generated using a plurality of three-dimensional points, and node information included in each node in the prediction tree is then encoded. In this way, a bitstream including encoded node information is obtained. Each item of node information is information concerning one node of the prediction tree, for example, Each item of node information includes geometry information of one node, an index of the one node, the number of child nodes of the one node, a prediction mode used for encoding the geometry information of the one node, and a prediction residual.</p><p id="p-0420" num="0419">As shown in <figref idref="DRAWINGS">FIG. <b>51</b></figref> and <figref idref="DRAWINGS">FIG. <b>53</b></figref>, in the three-dimensional data decoding device, each item of encoded node information included in the bitstream is decoded, and then the geometry information is decoded while generating the prediction tree.</p><p id="p-0421" num="0420">Next, a method of generating a prediction tree will be described with reference to <figref idref="DRAWINGS">FIG. <b>54</b></figref>.</p><p id="p-0422" num="0421"><figref idref="DRAWINGS">FIG. <b>54</b></figref> is a diagram for describing a method of generating a prediction tree according to Embodiment 4.</p><p id="p-0423" num="0422">In the method of generating a prediction tree, as shown in Part (a) of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the three-dimensional data encoding device first adds point 0 as an initial point of the prediction tree. Geometry information of point 0 is represented by coordinates including three elements (x0, y0, z0). The geometry information of point 0 may be represented by coordinates of the three-dimensional Cartesian coordinate system or coordinates of the polar coordinate system.</p><p id="p-0424" num="0423">child_count is incremented by 1 each time one child node is added to the node for which the child_count is set. Once the generation of the prediction tree is completed, child_count of each node indicates the number of child nodes of the node, and is added to the bitstream. pred_mode indicates the prediction mode for predicting values of the geometry information of each node. Details of the prediction mode will be described later.</p><p id="p-0425" num="0424">As shown in Part (b) of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the three-dimensional data encoding device then adds point 1 to the prediction tree. In this step, the three-dimensional data encoding device may search the point cloud already added to the prediction tree for a point nearest to point 1 and add point 1 as a child node of the nearest point. Geometry information of point 1 is represented by coordinates including three elements (x1, y1, z1). The geometry information of point 1 may be represented by coordinates of the three-dimensional Cartesian coordinate system or coordinates of the polar coordinate system. In the case of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, point 0 is the nearest point of point 1, and point 1 is added as a child node of point 0. The three-dimensional data encoding device then increments by 1 the value indicated by child_count of point 0.</p><p id="p-0426" num="0425">Note that the predicted value of the geometry information of each node may be calculated when adding the node to the prediction tree. For example, in the case of Part (b) of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the three-dimensional data encoding device may add point 1 as a child node of point 0 and calculate the geometry information of point 0 as a predicted value. In that case, pred_mode=1 may be set. pred_mode is prediction mode information (prediction mode value) indicating a prediction mode. After calculating the predicted value, the three-dimensional data encoding device may calculate residual_value (prediction residual) of point 1. Here, residual_value is a difference value obtained by subtracting the predicted value calculated in the prediction mode indicated by pred_mode from the geometry information of the node. As described, according to the three-dimensional data encoding method, the difference value with respect to the predicted value, rather than the geometry information itself, is encoded, so that the encoding efficiency can be improved.</p><p id="p-0427" num="0426">As shown in Part (c) of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the three-dimensional data encoding device then adds point 2 to the prediction tree. In this step, the three-dimensional data encoding device may search the point cloud already added to the prediction tree for a point nearest to point 2 and add point 2 as a child node of the nearest point. Geometry information of point 2 is represented by coordinates including three elements (x2. y2, z2). The geometry information of point 2 may be represented by coordinates of the three-dimensional Cartesian coordinate system or coordinates of the polar coordinate system. In the case of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, point 1 is the nearest point of point 2, and point 2 is added as a child node of point 1. The three-dimensional data encoding device then increments by 1 the value indicated by child_count of point 1.</p><p id="p-0428" num="0427">As shown in Part (d) of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the three-dimensional data encoding device then adds point 3 to the prediction tree. In this step, the three-dimensional data encoding device may search the point cloud already added to the prediction tree for a point nearest to point 3 and add point 3 as a child node of the nearest point. Geometry information of point 3 is represented by coordinates including three elements (x3, y3, z3). The geometry information of point 3 may be represented by coordinates of the three-dimensional Cartesian coordinate system or coordinates of the polar coordinate system. In the case of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, point 0 is the nearest point of point 3, and point 3 is added as a child node of point 0. The three-dimensional data encoding device then increments by 1 the value indicated by child_count of point 0.</p><p id="p-0429" num="0428">In this way, the three-dimensional data encoding device adds all points to the prediction tree and ends the generation of the prediction tree. When the generation of the prediction tree ends, any node having child_count=0 is a leaf of the prediction tree. After the generation of the prediction tree ends, the three-dimensional data encoding device encodes child_count, pred_mode, and residual_value of each node selected in the depth-first order from the root node. Selecting a node in the depth-first order means that the three-dimensional data encoding device selects, as a node subsequent to a node selected, a child node that has not been selected yet of the one or more child nodes of the selected node. When the selected node has no child node, the three-dimensional data encoding device selects a child node that has not been selected yet of the parent node of the selected node.</p><p id="p-0430" num="0429">Note that the order of encoding is not limited to the depth-first order, but may be the width-first order, for example, When selecting a node in the width-first order, the three-dimensional data encoding device selects, as a node subsequent to a node selected, a node that has not been selected yet of the one or more nodes at the same depth (layer) as the selected node. When there is no node at the same depth as the selected node, the three-dimensional data encoding device selects a node that has not been selected yet of the one or more nodes at the subsequent depth.</p><p id="p-0431" num="0430">Note that points 0 to 3 are examples of three-dimensional points.</p><p id="p-0432" num="0431">Note that although child_count, pred_mode, and residual_value are calculated when adding each point to the prediction tree in the three-dimensional data encoding method described above, the present invention is not necessarily limited to this, and they may be calculated after the generation of the prediction tree ends.</p><p id="p-0433" num="0432">The three-dimensional data encoding device to which a plurality of three-dimensional points are input may re-order the input three-dimensional points in ascending or descending Morton order and process the three-dimensional points in the latter order. This allows the three-dimensional data encoding device to efficiently search for the nearest point of the three-dimensional point to be processed and improve the encoding efficiency. The three-dimensional data encoding device need not re-order the three-dimensional points and may process the three-dimensional points in the order of input. For example, the three-dimensional data encoding device may generate a prediction tree without a branch in the order of input of a plurality of three-dimensional points. Specifically, the three-dimensional data encoding device may add an input three-dimensional point subsequent to a predetermined three-dimensional point in the order of input of a plurality of three-dimensional points as a child node of the predetermined three-dimensional point.</p><p id="p-0434" num="0433">Next, a first example of prediction modes will be described with reference to <figref idref="DRAWINGS">FIG. <b>55</b></figref>. <figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram for describing a first example of prediction modes according to Embodiment 4. <figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram illustrating a part of a prediction tree.</p><p id="p-0435" num="0434">As shown below, eight prediction modes may be set. As an example, a case where a predicted value for point c is calculated as shown in <figref idref="DRAWINGS">FIG. <b>55</b></figref> will be described. In the prediction tree, as shown, the parent node of point c is point p0, the grandparent node of point c is point p1, and the great grandparent node of point c is point p2. Note that point c, point p0, point p1, and point p2 are examples of three-dimensional points.</p><p id="p-0436" num="0435">A prediction mode whose prediction mode value is 0 (referred to as prediction mode 0. hereinafter) may be set without prediction. That is, in prediction mode 0, the three-dimensional data encoding device may calculate geometry information of input point c as a predicted value of point c.</p><p id="p-0437" num="0436">A prediction mode whose prediction mode value is 1 (referred to as prediction mode 1, hereinafter) may be set for a differential prediction with respect to point p0. That is, the three-dimensional data encoding device may calculate geometry information of point p0, which is the parent node of point c, as a predicted value of point c.</p><p id="p-0438" num="0437">A prediction mode whose prediction mode value is 2 (referred to as prediction mode 2, hereinafter) may be set for a linear prediction based on point p0 and point p1. That is, the three-dimensional data encoding device may calculate, as a predicted value of point c, a prediction result of a linear prediction based on geometry information of point p0, which is the parent node of point c, and geometry information of point p1, which is the grandparent node of point c.</p><p id="p-0439" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Predicted value=2<i>&#xd7;p</i>0<i>&#x2212;p</i>1&#x2003;&#x2003;(Equation T1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0440" num="0438">In Equation T1, p0 denotes geometry information of point p0, and p1 denotes geometry information of point p1.</p><p id="p-0441" num="0439">A prediction mode whose prediction mode value is 3 (referred to as prediction mode 3, hereinafter) may be set for a parallelogram prediction based on point p0, point p1, and point p2. That is, the three-dimensional data encoding device may calculate, as a predicted value of point c, a prediction result of a parallelogram prediction based on geometry information of point p0, which is the parent node of point c, geometry information of point p1, which is the grandparent node of point c, and geometry information of point p2, which is the great grandparent node of point c. Specifically, the three-dimensional data encoding device calculates a predicted value of point c in prediction mode 3 according to the following equation T2.</p><p id="p-0442" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Predicted value=<i>p</i>0<i>+p</i>1<i>&#x2212;p</i>2&#x2003;&#x2003;(Equation T2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0443" num="0440">In Equation T2, p0 denotes geometry information of point p0, p1 denotes geometry information of point p1, and p2 denotes geometry information of point p2.</p><p id="p-0444" num="0441">A prediction mode whose prediction mode value is 4 (referred to as prediction mode 4, hereinafter) may be set for a differential prediction with respect to point p1. That is, the three-dimensional data encoding device may calculate geometry information of point p1, which is the grandparent node of point c, as a predicted value of point c.</p><p id="p-0445" num="0442">A prediction mode whose prediction mode value is 5 (referred to as prediction mode 5, hereinafter) may be set for a differential prediction with respect to point p2. That is, the three-dimensional data encoding device may calculate geometry information of point p2, which is the great grandparent node of point c, as a predicted value of point c.</p><p id="p-0446" num="0443">A prediction mode whose prediction mode value is 6 (referred to as prediction mode 6, hereinafter) may be set for an average of geometry information of any two or more of point p0, point p1, and point p2. That is, the three-dimensional data encoding device may calculate, as a predicted value of point c, an average value of any two or more of geometry information of point p0, which is the parent node of point c, geometry information of point p1, which is the grandparent node of point c, and geometry information of point p2, which is the great grandparent node of point c. For example, when the three-dimensional data encoding device uses geometry information of point p0 and geometry information of point p1 for calculation of a predicted value, the three-dimensional data encoding device calculates a predicted value of point c in prediction mode 6 according to the following Equation T3.</p><p id="p-0447" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Predicted value=(<i>p</i>0<i>+p</i>1)/2&#x2003;&#x2003;(Equation T3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0448" num="0444">In Equation T3, p0 denotes geometry information of point p0, and p1 denotes geometry information of point p1.</p><p id="p-0449" num="0445">A prediction mode whose prediction mode value is 7 (referred to as prediction mode 7, hereinafter) may be set for a non-linear prediction based on distance d0 between point p0 and point p1 and distance d1 between point p2 and point p1. That is, the three-dimensional data encoding device may calculate, as a predicted value of point c, a prediction result of a non-linear prediction based on distance d0 and distance d1.</p><p id="p-0450" num="0446">Note that the prediction method assigned to each prediction mode is not limited to the example described above. The eight prediction modes described above and the eight prediction methods described above need not be combined in the manner described above, and can be combined in any manner. For example, when prediction modes are encoded by an entropy encoding, such as arithmetic encoding, a prediction method of high frequency of use may be assigned to prediction mode 0. In this way, the encoding efficiency can be improved. The three-dimensional data encoding device may can also improve the encoding efficiency by dynamically changing the assignment of prediction modes according to the frequency of use of the prediction modes while performing the encoding process. For example, the three-dimensional data encoding device may count the frequency of use of each prediction mode in the encoding and assign a prediction mode indicated by a smaller value to a prediction method of a higher frequency of use. In this way, the encoding efficiency can be improved. Note that M denotes a prediction mode count indicating the number of prediction modes, and in the example described above, there are eight prediction modes 0 to 7, and therefore, M=8.</p><p id="p-0451" num="0447">As predicted values (px, py, pz) of geometry information (x, y, z) of a three-dimensional point, the three-dimensional data encoding device may calculate predicted values used for calculation of geometry information of a three-dimensional point to be encoded based on geometry information of a three-dimensional point that is at a short distance from the three-dimensional point to be encoded among peripheral three-dimensional points of the three-dimensional point to be encoded. The three-dimensional data encoding device may add prediction mode information (pred_mode) for each three-dimensional point so that a predicted value to be calculated can be selected according to the prediction mode.</p><p id="p-0452" num="0448">For example, when the total number of prediction modes is M, it is possible that geometry information of nearest three-dimensional point p0 is assigned to prediction mode 0, . . . , and geometry information of three-dimensional point p2 is assigned to prediction mode M&#x2212;1, and the prediction mode used for prediction is added for each three-dimensional point to the bitstream.</p><p id="p-0453" num="0449">Note that prediction mode count M may be added to the bitstream. The value of prediction mode count M need not be added to the bitstream, and may be defined by profile, level or the like of a standard. The value of prediction mode count M calculated from number N of three-dimensional points used for prediction may also be used. For example, prediction mode count M may be calculated according to M=N+1.</p><p id="p-0454" num="0450"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a diagram illustrating a second example of a table that indicates a predicted value calculated in each prediction mode according to Embodiment 4.</p><p id="p-0455" num="0451">The table shown in <figref idref="DRAWINGS">FIG. <b>56</b></figref> is an example in the case where number N of three-dimensional points used for prediction is 4, and prediction mode count M=5.</p><p id="p-0456" num="0452">In the second example, a predicted value of geometry information of point c is calculated based on geometry information of at least any one of point p0, point p1, and point p2. The prediction mode is added for each three-dimensional point to be encoded. The predicted value is calculated according to the prediction mode added.</p><p id="p-0457" num="0453"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a diagram illustrating a specific example of the second example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4.</p><p id="p-0458" num="0454">For example, the three-dimensional data encoding device may select prediction mode 1 and encode geometry information (x, y, z) of a three-dimensional point to be encoded based on predicted values (p0x, p0y, p0z), respectively. In that case, &#x201c;1&#x201d;, which is a prediction mode value indicating selected prediction mode 1, is added to the bitstream.</p><p id="p-0459" num="0455">As described, when selecting a prediction mode for calculating a predicted value of each of three elements included in the geometry information of the three-dimensional point to be encoded, the three-dimensional data encoding device may select a prediction mode common to the three elements.</p><p id="p-0460" num="0456"><figref idref="DRAWINGS">FIG. <b>58</b></figref> is a diagram illustrating a third example of the table that indicates a predicted value calculated in each prediction mode according to Embodiment 4.</p><p id="p-0461" num="0457">The table shown in <figref idref="DRAWINGS">FIG. <b>58</b></figref> is an example in the case where number N of three-dimensional points used for prediction is 2, and prediction mode count M=5.</p><p id="p-0462" num="0458">In the third example, a predicted value of geometry information of point c is calculated based on geometry information of at least any one of point p0 and point p1. The prediction mode is added for each three-dimensional point to be encoded. The predicted value is calculated according to the prediction mode added.</p><p id="p-0463" num="0459">Note that, when the number of peripheral three-dimensional points of point c (neighboring point count) is less than 3, as in the third example, any prediction mode to which no predicted value has been assigned may be set as &#x201c;not available&#x201d;. When a prediction mode set as &#x201c;not available&#x201d; occurs, another prediction method may be assigned to the prediction mode. For example, geometry information of point p2 may be assigned to the prediction mode as a predicted value. Alternatively, a predicted value assigned to another prediction mode may be assigned to the prediction mode. For example, geometry information of point p1, which is assigned to prediction mode 4, may be assigned to prediction mode 3, which is set as &#x201c;not available&#x201d;. In that case, geometry information of point p2 may be re-assigned to prediction mode 4. In this way, when a prediction mode set as &#x201c;not available&#x201d; occurs, the encoding efficiency can be improved by re-assigning a prediction method.</p><p id="p-0464" num="0460">Note that when geometry information has three elements, such as in the case of the three-dimensional Cartesian coordinate system or the polar coordinate system, predicted values may be calculated in different modes for the three elements. For example, when the three elements are represented by x, y, and z of coordinates (x, y, z) in the three-dimensional Cartesian coordinate system, the predicted value of each of the three elements may be calculated in a prediction mode selected for the element. For example, prediction mode values of prediction mode pred_mode_x for calculating a predicted value of element x (that is, x coordinate), prediction mode pred_mode_y for calculating a predicted value of element y (that is, y coordinate), and prediction mode pred_mode_z for calculating a predicted value of element z (that is, z coordinate) may be selected.</p><p id="p-0465" num="0461">In that case, as the prediction mode values indicating the prediction modes of the elements, the values in the tables in <figref idref="DRAWINGS">FIG. <b>59</b></figref> to <figref idref="DRAWINGS">FIG. <b>61</b></figref> described later may be used, and these prediction mode values may be added to the bitstream. Note that although coordinates in the three-dimensional Cartesian coordinate system have been described above as an example of geometry information, the description holds true for coordinates in the polar coordinate system.</p><p id="p-0466" num="0462">As described, when selecting a prediction mode for calculating a predicted value of each of three elements included in the geometry information of the three-dimensional point to be encoded, the three-dimensional data encoding device may select a different prediction mode for each of three elements.</p><p id="p-0467" num="0463">Predicted values of two or more of a plurality of elements of geometry information may be calculated in a common prediction mode. For example, when the three elements are represented by x, y, and z of coordinates (x, y, z) in the three-dimensional Cartesian coordinate system, a prediction mode value of prediction mode pred_mode_x for calculating a predicted value of element x and prediction mode pred_mode_yz for calculating predicted values of elements y and z may be selected. In that case, as the prediction mode values indicating the prediction modes of the elements, the values in the tables in <figref idref="DRAWINGS">FIG. <b>59</b></figref> and <figref idref="DRAWINGS">FIG. <b>62</b></figref> described later may be used, and these prediction mode values may be added to the bitstream.</p><p id="p-0468" num="0464">As described, when selecting a prediction mode for calculating a predicted value of each of three elements included in the geometry information of the three-dimensional point to be encoded, the three-dimensional data encoding device may select a common prediction mode for two of the three elements and select a different prediction mode than the prediction mode for the two elements for the remaining one element.</p><p id="p-0469" num="0465"><figref idref="DRAWINGS">FIG. <b>59</b></figref> is a diagram illustrating a fourth example of the table that indicates a predicted value calculated in each prediction mode. Specifically, the fourth example is an example in the case where geometry information used for a predicted value is the value of element x of geometry information of a peripheral three-dimensional point.</p><p id="p-0470" num="0466">As shown in <figref idref="DRAWINGS">FIG. <b>59</b></figref>, a predicted value calculated in prediction mode pred_mode_x represented by a prediction mode value of &#x201c;0&#x201d; is 0. A predicted value calculated in prediction mode pred_mode_x represented by a prediction mode value of &#x201c;1&#x201d; is p0x, which is the x coordinate of point p0. A predicted value calculated in prediction mode pred_mode_x represented by a prediction mode value of &#x201c;2&#x201d; is (2&#xd7;p0x&#x2212;p1x), which is the prediction result of the linear prediction based on the x coordinate of point p0 and the x coordinate of point p1.</p><p id="p-0471" num="0467">A predicted value calculated in prediction mode pred_mode_x represented by a prediction mode value of &#x201c;3&#x201d; is (p0x+p1x&#x2212;p2x), which is the prediction result of the parallelogram prediction based on the x coordinate of point p0, the x coordinate of point p1, and the x coordinate of point p2. A predicted value calculated in prediction mode pred_mode_x represented by a prediction mode value of &#x201c;4&#x201d; is p1x, which is the x coordinate of point p1.</p><p id="p-0472" num="0468">Note that when prediction mode pred_mode_x represented by a prediction mode value of &#x201c;1&#x201d; in the table of <figref idref="DRAWINGS">FIG. <b>59</b></figref> is selected, for example, the x coordinate of the geometry information of the three-dimensional point to be encoded may be encoded using predicted value p0x. In that case, &#x201c;1&#x201d; as the prediction mode value is added to the bitstream.</p><p id="p-0473" num="0469"><figref idref="DRAWINGS">FIG. <b>60</b></figref> is a diagram illustrating a fifth example of the table that indicates a predicted value calculated in each prediction mode. Specifically, the fifth example is an example in the case where geometry information used for a predicted value is the value of element y of geometry information of a peripheral three-dimensional point.</p><p id="p-0474" num="0470">As shown in <figref idref="DRAWINGS">FIG. <b>60</b></figref>, a predicted value calculated in prediction mode pred_mode_y represented by a prediction mode value of &#x201c;0&#x201d; is 0. A predicted value calculated in prediction mode pred_mode_y represented by a prediction mode value of &#x201c;1&#x201d; is p0y, which is the y coordinate of point p0. A predicted value calculated in prediction mode pred_mode_y represented by a prediction mode value of &#x201c;2&#x201d; is (2&#xd7;p0y&#x2212;p1y), which is the prediction result of the linear prediction based on the y coordinate of point p0 and the y coordinate of point p1.</p><p id="p-0475" num="0471">A predicted value calculated in prediction mode pred_modev represented by a prediction mode value of &#x201c;3&#x201d; is (p0y+p1y&#x2212;p2y), which is the prediction result of the parallelogram prediction based on the y coordinate of point p0, the y coordinate of point p1, and the y coordinate of point p2. A predicted value calculated in prediction mode pred_mode_v represented by a prediction mode value of &#x201c;4&#x201d; is p1y, which is the y coordinate of point p1.</p><p id="p-0476" num="0472">Note that when prediction mode pred_modev represented by a prediction mode value of &#x201c;1&#x201d; in the table of <figref idref="DRAWINGS">FIG. <b>60</b></figref> is selected, for example, the y coordinate of the geometry information of the three-dimensional point to be encoded may be encoded using predicted value p0y. In that case. &#x201c;1&#x201d; as the prediction mode value is added to the bitstream.</p><p id="p-0477" num="0473"><figref idref="DRAWINGS">FIG. <b>61</b></figref> is a diagram illustrating a sixth example of the table that indicates a predicted value calculated in each prediction mode. Specifically, the sixth example is an example in the case where geometry information used for a predicted value is the value of element z of geometry information of a peripheral three-dimensional point.</p><p id="p-0478" num="0474">As shown in <figref idref="DRAWINGS">FIG. <b>61</b></figref>, a predicted value calculated in prediction mode pred_mode_z represented by a prediction mode value of &#x201c;0&#x201d; is 0. A predicted value calculated in prediction mode pred_mode_z represented by a prediction mode value of &#x201c;1&#x201d; is p0z, which is the z coordinate of point p0. A predicted value calculated in prediction mode pred_mode_z represented by a prediction mode value of &#x201c;2&#x201d; is (2&#xd7;p0z&#x2212;p1z), which is the prediction result of the linear prediction based on the z coordinate of point p0 and the z coordinate of point p1.</p><p id="p-0479" num="0475">A predicted value calculated in prediction mode pred_mode_z represented by a prediction mode value of &#x201c;3&#x201d; is (p0z+p1z&#x2212;p2z), which is the prediction result of the parallelogram prediction based on the z coordinate of point p0, the z coordinate of point p1, and the z coordinate of point p2. A predicted value calculated in prediction mode pred_mode_z represented by a prediction mode value of &#x201c;4&#x201d; is p1z, which is the z coordinate of point p1.</p><p id="p-0480" num="0476">Note that when prediction mode pred_mode_z represented by a prediction mode value of &#x201c;1&#x201d; in the table of <figref idref="DRAWINGS">FIG. <b>61</b></figref> is selected, for example, the z coordinate of the geometry information of the three-dimensional point to be encoded may be encoded using predicted value p0z. In that case, &#x201c;1&#x201d; as the prediction mode value is added to the bitstream.</p><p id="p-0481" num="0477"><figref idref="DRAWINGS">FIG. <b>62</b></figref> is a diagram illustrating a seventh example of the table that indicates a predicted value calculated in each prediction mode. Specifically, the seventh example is an example in the case where geometry information used for a predicted value are the values of element y and element z of geometry information of a peripheral three-dimensional point.</p><p id="p-0482" num="0478">As shown in <figref idref="DRAWINGS">FIG. <b>62</b></figref>, predicted values calculated in prediction mode pred_mode_yz represented by a prediction mode value of &#x201c;0&#x201d; are 0. Predicted values calculated in prediction mode pred_mode_yz represented by a prediction mode value of &#x201c;1&#x201d; are (p0y, p0z), which are the y coordinate and z coordinate of point p0. Predicted values calculated in prediction mode pred_mode_yz represented by a prediction mode value of &#x201c;2&#x201d; are (2&#xd7;p0y&#x2212;p1y, 2&#xd7;p0z&#x2212;p1z), which are the prediction result of the linear prediction based on the y coordinate and z coordinate of point p0 and the y coordinate and z coordinate of point p1.</p><p id="p-0483" num="0479">Predicted values calculated in prediction mode pred_mode_yz represented by a prediction mode value of &#x201c;3&#x201d; are (p0y+p1y&#x2212;p2y, p0z+p1z&#x2212;p2z), which are the prediction result of the parallelogram prediction based on the y coordinate and z coordinate of point p0, the y coordinate and z coordinate of point p1, and the y coordinate and z coordinate of point p2. Predicted values calculated in prediction mode pred_mode_yz represented by a prediction mode value of &#x201c;4&#x201d; are (ply, p1z), which are the y coordinate and z coordinate of point p1.</p><p id="p-0484" num="0480">Note that when prediction mode pred_mode_yz represented by a prediction mode value of &#x201c;1&#x201d; in the table of <figref idref="DRAWINGS">FIG. <b>62</b></figref> is selected, for example, the y coordinate and z coordinate of the geometry information of the three-dimensional point to be encoded may be encoded using predicted values (p0y, p0z). In that case, &#x201c;1&#x201d; as the prediction mode value is added to the bitstream.</p><p id="p-0485" num="0481">In the tables of the fourth to seventh examples, the correspondence between the prediction modes and the prediction methods for calculating predicted values are the same as the correspondence in the table of the second example described above.</p><p id="p-0486" num="0482">The prediction mode in the encoding may be selected by RD optimization. For example, cost cost(P) in the case where certain prediction mode P is selected may be calculated, and prediction mode P for which cost(P) is at the minimum may be selected. Cost cost(P) may be calculated from prediction residual residual_value(P) in the case where the predicted value in prediction mode P is used, number of bits bit(P) required for encoding prediction mode P, and a X value, which is an adjustment parameter, according to equation D1.</p><p id="p-0487" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>cost(<i>P</i>)=abs(residual_value(<i>P</i>))+&#x3bb;&#xd7;bit(<i>P</i>)&#x2003;&#x2003;(Equation D1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0488" num="0483">abs(x) denotes an absolute value of x.</p><p id="p-0489" num="0484">Instead of abs(x), the square of x may be used.</p><p id="p-0490" num="0485">By using above equation D1, a prediction mode can be selected by considering the balance between the magnitude of the prediction residual and the number of bits required for encoding the prediction mode. Note that the adjustment parameter &#x3bb; may be set to be different values according to the value of a quantization scale. For example, it is possible that when the quantization scale is small (when the bit rate is high), the &#x3bb; value is decreased so that a prediction mode in which prediction residual residual_value(P) is small is selected and the prediction precision is improved as far as possible, while when the quantization scale is large (when the bit rate is low), the &#x3bb; value is increased so that an appropriate prediction mode is selected by considering number of bits bit(P) required for encoding prediction mode P.</p><p id="p-0491" num="0486">Note that the case where the quantization scale is small means a case where the quantization scale is smaller than a first quantization scale, for example, The case where the quantization scale is large means a case where the quantization scale is larger than a second quantization scale that is larger than or equal to the first quantization scale. The &#x3bb; value may be set to be smaller as the quantization scale is smaller.</p><p id="p-0492" num="0487">Prediction residual residual_value(P) is calculated by subtracting the predicted value in prediction mode P from the geometry information of the three-dimensional point to be encoded. Note that instead of reflecting prediction residual residual_value(P) in the cost calculation, prediction residual residual_value(P) may be quantized, inverse-quantized, and added to the predicted value to determine a decoded value, and the difference (encoding error) between the original geometry information of the three-dimensional point and the decoded value obtained using prediction mode P may be reflected in the cost value. This allows a prediction mode with a small encoding error to be selected.</p><p id="p-0493" num="0488">When a prediction mode is binarized and then encoded, for example, number of bits bit(P) required for encoding prediction mode P may be the bit count after the binarization.</p><p id="p-0494" num="0489">For example, when prediction mode count M=5, as shown in <figref idref="DRAWINGS">FIG. <b>63</b></figref>, a prediction mode value representing a prediction mode with a truncated unary code having a maximum value of 5 based on prediction mode count M may be binarized In that case, number of bits bit(P) required for encoding the prediction mode value is 1 when the prediction mode value is &#x201c;0&#x201d;, 2 when the prediction mode value is &#x201c;1&#x201d;, 3 when the prediction mode value is &#x201c;2&#x201d;, and 4 when the prediction mode value is &#x201c;3&#x201d; or &#x201c;4&#x201d;. By using the truncated unary code, the bit count decreases as the value of the prediction mode value decreases. Therefore, the code amount can be reduced for a prediction mode value representing a prediction mode that is likely to be selected, for example, a prediction mode in which a predicted value with which cost(P) is likely to be at the minimum is calculated, such as the predicted value of 0 calculated when the prediction mode value is &#x201c;0&#x201d; or the geometry information of three-dimensional point p0 calculated as a predicted value when the prediction mode value is &#x201c;1&#x201d;, that is, the geometry information of a three-dimensional point that is at a small distance from the three-dimensional point to be encoded.</p><p id="p-0495" num="0490">As described, the three-dimensional data encoding device may encode the prediction mode value representing selected prediction mode with the prediction mode count. Specifically, the three-dimensional data encoding device may encode a prediction mode value with a truncated unary code whose maximum value is the prediction mode count.</p><p id="p-0496" num="0491">When the maximum value of the prediction mode count is not determined, as shown in <figref idref="DRAWINGS">FIG. <b>64</b></figref>, a prediction mode value representing a prediction mode may be binarized with a unary code. When the probabilities of occurrence of the prediction modes are close to each other, as shown in <figref idref="DRAWINGS">FIG. <b>65</b></figref>, a prediction mode value representing a prediction mode may be binarized with a fixed code to reduce the code amount.</p><p id="p-0497" num="0492">As the value of number of bits bit(P) required for encoding the prediction mode value representing prediction mode P, binary data of the prediction mode value representing prediction mode P may be arithmetically encoded, and the code amount of the arithmetically encoded binary data may be used. In that case, the cost can be calculated with more precise required bit count bit(P), so that a prediction mode can be more properly selected.</p><p id="p-0498" num="0493">Note that <figref idref="DRAWINGS">FIG. <b>63</b></figref> is a diagram illustrating a first example of a binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4. Specifically, the first example is an example in which prediction mode count M=5, and a prediction mode value is binarized with a truncated unary code.</p><p id="p-0499" num="0494">Note that <figref idref="DRAWINGS">FIG. <b>64</b></figref> is a diagram illustrating a second example of the binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4. Specifically, the second example is an example in which prediction mode count M=5, and a prediction mode value is binarized with a unary code.</p><p id="p-0500" num="0495">Note that <figref idref="DRAWINGS">FIG. <b>65</b></figref> is a diagram illustrating a third example of the binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4. Specifically, the third example is an example in which prediction mode count M=5, and a prediction mode value is binarized with a fixed code.</p><p id="p-0501" num="0496">The prediction mode value representing the prediction mode (pred_mode) may be binarized and then arithmetically encoded before being added to the bitstream. The prediction mode value may be binarized with a truncated unary code using the value of prediction mode count M as described above, for example, In that case, the maximum bit count after the binarization of the prediction mode value is M&#x2212;1.</p><p id="p-0502" num="0497">The binary data resulting from the binarization may be arithmetically encoded using an encoding table. In that case, the encoding efficiency may be improved by encoding the binary data using a different encoding table for each bit. Furthermore, in order to reduce the number of encoding tables, the leading one bit of the binary data may be encoded using encoding table A for the leading bit, and each bit of the remaining bits of the binary data may be encoded using encoding table B for the remaining bits. For example, when encoding binary data &#x201c;1110&#x201d; whose prediction mode value is &#x201c;3&#x201d; shown in <figref idref="DRAWINGS">FIG. <b>66</b></figref>, the leading one bit &#x201c;1&#x201d; may be encoded using encoding table A, and each bit of the remaining bits &#x201c;110&#x201d; may be encoded using encoding table B.</p><p id="p-0503" num="0498">Note that <figref idref="DRAWINGS">FIG. <b>66</b></figref> is a diagram for describing an example of encoding of binary data in a binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4. The binarization table in <figref idref="DRAWINGS">FIG. <b>66</b></figref> is an example in the case where prediction mode count M=5, and a prediction mode value is binarized with a truncated unary code.</p><p id="p-0504" num="0499">In this way, the encoding efficiency can be improved by using a different encoding table depending on the position of the bit in the binary data, while reducing the number of encoding tables. Note that, when encoding the remaining bits, each bit may be arithmetically encoded using a different encoding table, or each bit may be decoded using a different encoding table based on the result of the arithmetic encoding.</p><p id="p-0505" num="0500">When a prediction mode value is binarized and encoded with a truncated unary code using prediction mode count M, prediction mode count M used for the truncated unary code may be added to the header or the like of the bitstream, in order that the prediction mode can be identified from the binary data decoded on the decoder side. The header of the bitstream is a sequence parameter set (SPS), a geometry parameter set (GPS), or a slice header, for example, Maximum possible value MaxM of the prediction mode count may be defined by a standard or the like, and the value of MaxM&#x2212;M (M&#x3c;=MaxM) may be added to the header. Prediction mode count M need not be added to the stream, and may be defined by profile or level of a standard or the like.</p><p id="p-0506" num="0501">Note that the prediction mode value binarized with a truncated unary code can be arithmetically encoded by using different encoding tables for the leading bit part and the remaining part as described above. Note that the probabilities of occurrence of 0 and 1 in each encoding table may be updated according to the value of the binary data that has actually occurred. The probabilities of occurrence of 0 and 1 in one of the encoding tables may be fixed. By reducing the number of updates of the probabilities of occurrence in this way, the processing amount can be reduced. For example, it is possible that the probabilities of occurrence for the leading bit part is updated, while the probabilities of occurrence for the remaining bit part is fixed.</p><p id="p-0507" num="0502"><figref idref="DRAWINGS">FIG. <b>67</b></figref> is a flowchart illustrating an example of encoding of a prediction mode value according to Embodiment 4. <figref idref="DRAWINGS">FIG. <b>68</b></figref> is a flowchart illustrating an example of decoding of a prediction mode value according to Embodiment 4.</p><p id="p-0508" num="0503">As shown in <figref idref="DRAWINGS">FIG. <b>67</b></figref>, in encoding of a prediction mode value, the prediction mode value is first binarized with a truncated unary code using prediction mode count M (S<b>9701</b>).</p><p id="p-0509" num="0504">The binary data of the truncated unary code is then arithmetically encoded (S<b>9702</b>). In this way, the binary data is included in the bitstream as a prediction mode.</p><p id="p-0510" num="0505">As shown in <figref idref="DRAWINGS">FIG. <b>68</b></figref>, in decoding of a prediction mode value, a bitstream is first arithmetically decoded using prediction mode count M to generate binary data of a truncated unary code (S<b>9711</b>).</p><p id="p-0511" num="0506">A prediction mode value is then calculated from the binary data of the truncated unary code (S<b>9712</b>).</p><p id="p-0512" num="0507">Although an example where a prediction mode value representing a prediction mode (pred_mode) is binarized with a truncated unary code using the value of prediction mode count M has been shown as a method of binarizing a prediction mode value representing a prediction mode (pred_mode), the present invention is not necessarily limited to this. For example, a prediction mode value may be binarized with a truncated unary code using number L (L&#x3c;=M) of prediction modes to which a predicted value is assigned. For example, when prediction mode count M=5, if there is one peripheral three-dimensional point available for prediction of a certain three-dimensional point to be encoded, two prediction modes may be &#x201c;available&#x201d;, and the remaining three prediction modes may be &#x201c;not available&#x201d; as shown in <figref idref="DRAWINGS">FIG. <b>69</b></figref>. For example, as shown in <figref idref="DRAWINGS">FIG. <b>69</b></figref>, when prediction modes M=5, there may be one peripheral three-dimensional point of the three-dimensional point to be encoded that is available for prediction, and no predicted value may be assigned to the prediction modes represented by prediction mode values of &#x201c;2&#x201d;, &#x201c;3&#x201d;, and &#x201c;4&#x201d;.</p><p id="p-0513" num="0508">In that case, as shown in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, if the prediction mode value is binarized with a truncated unary code whose maximum value is number L of prediction modes to which a predicted value is assigned, the bit count after the binarization may be able to be reduced compared with the case where the prediction mode value is binarized with a truncated unary code using prediction mode count M. In this case, for example, L=3, and therefore, the bit count can be reduced by binarizing the prediction mode value with a truncated unary code whose maximum value is 3. In this way, by binarizing the prediction mode value with a truncated unary code whose maximum value is number L of prediction modes to which a predicted value is assigned, the bit count after the binarization of the prediction mode value can be reduced.</p><p id="p-0514" num="0509">The binary data resulting from the binarization may be arithmetically encoded using an encoding table. In that case, the encoding efficiency may be improved by encoding the binary data using a different encoding table for each bit. Furthermore, in order to reduce the number of encoding tables, the leading one bit of the binary data may be encoded using encoding table A for the leading bit, and each bit of the remaining bits of the binary data may be encoded using encoding table B for the remaining bits. For example, when encoding binary data &#x201c;1&#x201d; whose prediction mode value is &#x201c;1&#x201d; shown in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, the leading one bit &#x201c;1&#x201d; is encoded using encoding table A. There is no remaining bit, and therefore, further encoding is not needed. If there is any remaining bit, the remaining bit may be encoded using encoding table B.</p><p id="p-0515" num="0510">Note that <figref idref="DRAWINGS">FIG. <b>70</b></figref> is a diagram for describing an example of encoding of binary data in a binarization table in the case where a prediction mode value is binarized and encoded according to Embodiment 4. The binarization table in <figref idref="DRAWINGS">FIG. <b>70</b></figref> is an example in the case where a prediction mode value is binarized with a truncated unary code, provided with number L of prediction modes to which a predicted value is assigned is 2.</p><p id="p-0516" num="0511">In this way, the encoding efficiency can be improved by using a different encoding table depending on the position of the bit in the binary data, while reducing the number of encoding tables. Note that, when encoding the remaining bits, each bit may be arithmetically encoded using a different encoding table, or each bit may be decoded using a different encoding table based on the result of the arithmetic encoding.</p><p id="p-0517" num="0512">When a prediction mode value is binarized and encoded with a truncated unary code using number L of prediction modes to which a predicted value is assigned, a prediction mode may be decoded on the decoder side by assigning a predicted value to a prediction mode in the same manner as in the encoding to calculate number L and using calculated number L to decode the prediction mode, in order that the prediction mode can be identified from the binary data decoded on the decoder side.</p><p id="p-0518" num="0513">Note that the prediction mode value binarized with a truncated unary code can be arithmetically encoded by using different encoding tables for the leading bit part and the remaining part as described above. Note that the probabilities of occurrence of 0 and 1 in each encoding table may be updated according to the value of the binary data that has actually occurred. The probabilities of occurrence of 0 and 1 in one of the encoding tables may be fixed. By reducing the number of updates of the probabilities of occurrence in this way, the processing amount can be reduced. For example, it is possible that the probabilities of occurrence for the leading bit part is updated, while the probabilities of occurrence for the remaining bit part is fixed.</p><p id="p-0519" num="0514"><figref idref="DRAWINGS">FIG. <b>71</b></figref> is a flowchart illustrating another example of encoding of a prediction mode value according to Embodiment 4. <figref idref="DRAWINGS">FIG. <b>72</b></figref> is a flowchart illustrating another example of decoding of a prediction mode value according to Embodiment 4.</p><p id="p-0520" num="0515">As shown in <figref idref="DRAWINGS">FIG. <b>71</b></figref>, in encoding of a prediction mode value, number L of prediction modes to which a predicted value is assigned is first calculated (S<b>9721</b>).</p><p id="p-0521" num="0516">The prediction mode value is then binarized with a truncated unary code using number L (S<b>9722</b>).</p><p id="p-0522" num="0517">The binary data of the truncated unary code is then arithmetically encoded (S<b>9723</b>).</p><p id="p-0523" num="0518">As shown in <figref idref="DRAWINGS">FIG. <b>72</b></figref>, in decoding of a prediction mode value, number L of prediction modes to which a predicted value is assigned is first calculated (S<b>9731</b>).</p><p id="p-0524" num="0519">The bitstream is then arithmetically decoded using number L to generate binary data of a truncated unary code (S<b>9732</b>).</p><p id="p-0525" num="0520">A prediction mode value is then calculated from the binary data of the truncated unary code (S<b>9733</b>).</p><p id="p-0526" num="0521">The prediction mode value need not be added to every geometry information. For example, it is possible that when a certain condition is satisfied, the prediction mode is fixed, and no prediction mode value is added to the bitstream, while when the certain condition is not satisfied, a prediction mode is selected, and a prediction mode value is added to the bitstream. For example, it is possible that when condition A is satisfied, the prediction mode value is fixed at &#x201c;2&#x201d;, and the predicted value is calculated by linear prediction based on peripheral three-dimensional points, and when condition A is not satisfied, one prediction mode is selected from among a plurality of prediction modes, and the prediction mode value representing the selected prediction mode is added to the bitstream.</p><p id="p-0527" num="0522">Certain condition A may be that distance d0 between point p1 and point p0 and distance d1 between point p2 and point p1 are calculated, and absolute difference value distdiff=|d0&#x2212;d1| is less than threshold Thfix. When the absolute difference value is less than threshold Thfix, the three-dimensional data encoding device determines that the difference between the predicted value of the linear prediction and the geometry information of the point to be processed is small, fixes the prediction mode value at &#x201c;2&#x201d;, and encodes no prediction mode value. In this way, the three-dimensional data encoding device can generate an appropriate predicted value while reducing the code amount required for encoding the prediction mode. Note that when the absolute difference value is greater than or equal to threshold Thfix, the three-dimensional data encoding device may select a prediction mode and encode the prediction mode value representing the selected prediction mode.</p><p id="p-0528" num="0523">Note that threshold Thfix may be added to the header or the like of the bitstream, and the encoder may be able to encode by changing the value of threshold Thfix. For example, in encoding at high bit rate, the encoder may set the value of threshold Thfix to be smaller than in encoding at low bit rate and add the value of threshold Thfix to the header, thereby increasing the cases where encoding is performed by selecting a prediction mode, so that the prediction residual is minimized. In encoding at low bit rate, the encoder sets the value of threshold Thfix to be greater than in encoding at high bit rate, adds the value of threshold Thfix to the header, and perform the encoding with a fixed prediction mode. In this way, by increasing the cases where encoding is performed with a fixed prediction mode in encoding at low bit rate, the encoding efficiency can be improved while reducing the bit amount involved with the encoding of the prediction mode. Threshold Thfix need not be added to the bitstream, and may be defined by profile or level of a standard.</p><p id="p-0529" num="0524">N peripheral three-dimensional points of the three-dimensional point to be encoded that are used for prediction are N three-dimensional points encoded and decoded the distance from the three-dimensional point to be encoded is less than threshold THd. The maximum value of N may be added to the bitstream as NumNeighborPoint. The value of N need not always agree with the value of NumNeighborPoint, such as when the number of peripheral three-dimensional points encoded and decoded is less than the value of NumNeighborPoint.</p><p id="p-0530" num="0525">Although an example has been shown where the prediction mode value is fixed at &#x201c;2&#x201d; when absolute difference value distdiff used for prediction is less than threshold Thfix[i], the present invention is not necessarily limited to this, and the prediction mode value may be fixed at any of &#x201c;0&#x201d; to &#x201c;M&#x2212;1&#x201d;. The prediction mode value fixed may be added to the bitstream.</p><p id="p-0531" num="0526"><figref idref="DRAWINGS">FIG. <b>73</b></figref> is a flowchart illustrating an example of a process of determining whether or not to fix the prediction mode value according to condition A in encoding according to Embodiment 4. <figref idref="DRAWINGS">FIG. <b>74</b></figref> is a flowchart illustrating an example of a process of determining whether to set the prediction mode value at a fixed value or decode the prediction mode value according to condition A in decoding according to Embodiment 4.</p><p id="p-0532" num="0527">As shown in <figref idref="DRAWINGS">FIG. <b>73</b></figref>, the three-dimensional data encoding device first calculates distance d0 between point p1 and point p0 and distance d1 between point p2 and point p1, and calculates absolute difference value distdiff=|d0&#x2212;d1 (S<b>9741</b>).</p><p id="p-0533" num="0528">The three-dimensional data encoding device then determines whether absolute difference value distdiff is less than threshold Thfix or not (S<b>9742</b>).</p><p id="p-0534" num="0529">Note that threshold Thfix may be encoded and added to the header or the like of the stream.</p><p id="p-0535" num="0530">When absolute difference value distdiff is less than threshold Thfix (if Yes in S<b>9742</b>), the three-dimensional data encoding device determines the prediction mode value to be &#x201c;2&#x201d; (S<b>9743</b>).</p><p id="p-0536" num="0531">On the other hand, when absolute difference value distdiff is greater than or equal to threshold Thfix (if No in S<b>9742</b>), the three-dimensional data encoding device sets one prediction mode from among a plurality of prediction modes (S<b>9744</b>).</p><p id="p-0537" num="0532">The three-dimensional data encoding device then arithmetically encodes the prediction mode value representing the set prediction mode (S<b>9745</b>). Specifically, the three-dimensional data encoding device arithmetically encodes the prediction mode value by performing steps S<b>9701</b> and S<b>9702</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>67</b></figref>. Note that the three-dimensional data encoding device may arithmetically encode prediction mode pred_mode after binarizing the prediction mode with a truncated unary code using the number of prediction modes to which a predicted value is assigned. That is, the three-dimensional data encoding device may arithmetically encode the prediction mode value by performing steps S<b>9721</b> to S<b>9723</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>71</b></figref>.</p><p id="p-0538" num="0533">The three-dimensional data encoding device calculates a predicted value in the prediction mode determined in step S<b>9743</b> or the prediction mode set in step S<b>9745</b>, and outputs the calculated predicted value (S<b>9746</b>). When using the prediction mode value determined in step S<b>9743</b>, the three-dimensional data encoding device calculates the predicted value in the prediction mode represented by the prediction mode value of &#x201c;2&#x201d; by linear prediction based on the geometry information of N peripheral three-dimensional points.</p><p id="p-0539" num="0534">As shown in <figref idref="DRAWINGS">FIG. <b>74</b></figref>, the three-dimensional data decoding device first calculates distance d0 between point p1 and point p0 and distance d1 between point p2 and point p1, and calculates absolute difference value distdiff=|d0&#x2212;d1| (S<b>9751</b>).</p><p id="p-0540" num="0535">The three-dimensional data decoding device then determines whether absolute difference value distdiff is less than threshold Thfix or not (S<b>9752</b>). Note that threshold Thfix may be set by decoding the header or the like of the stream.</p><p id="p-0541" num="0536">When absolute difference value distdiff is less than threshold Thfix (if Yes in S<b>9752</b>), the three-dimensional data decoding device determines the prediction mode value to be &#x201c;2&#x201d; (S<b>9753</b>).</p><p id="p-0542" num="0537">On the other hand, when absolute difference value distdiff is greater than or equal to threshold Thfix (if No in S<b>9752</b>), the three-dimensional data decoding device decodes the prediction mode value from the bitstream (S<b>9754</b>).</p><p id="p-0543" num="0538">The three-dimensional data decoding device calculates a predicted value in the prediction mode represented by the prediction mode value determined in step S<b>9753</b> or the prediction mode value decoded in step S<b>9754</b>, and outputs the calculated predicted value (S<b>9755</b>). When using the prediction mode value determined in step S<b>9753</b>, the three-dimensional data decoding device calculates the predicted value in the prediction mode represented by the prediction mode value of &#x201c;2&#x201d; by linear prediction based on the geometry information of N peripheral three-dimensional points.</p><p id="p-0544" num="0539"><figref idref="DRAWINGS">FIG. <b>75</b></figref> is a diagram illustrating an example of a syntax of a header of geometry information. NumNeighborPoint, NumPredMode, Thfix, QP, and unique_point_per_leaf in the syntax in <figref idref="DRAWINGS">FIG. <b>75</b></figref> will be sequentially described.</p><p id="p-0545" num="0540">NumNeighborPoint denotes an upper limit of the number of peripheral points used for generation of a predicted value of geometry information of a three-dimensional point. When number M of peripheral points is less than NumNeighborPoint (M&#x3c;NumNeighborPoint), a predicted value may be calculated using the M peripheral points in the predicted value calculation process.</p><p id="p-0546" num="0541">NumPredMode denotes total number M of prediction modes used for prediction of geometry information. Note that maximum possible value MaxM of the prediction mode count may be defined by a standard or the like. The three-dimensional data encoding device may add the value of (MaxM&#x2212;M) (0&#x3c;M&#x3c;=MaxM) to the header as NumPredMode, and binarize and encode (MaxM&#x2212;1) with a truncated unary code. Prediction mode count NumPredMode need not be added to the bitstream, and the value of NumPredMode may be defined by profile or level of a standard or the like. The prediction mode count may be defined as NumNeighborPoint+NumPredMode.</p><p id="p-0547" num="0542">Thfix is a threshold for determining whether to fix the prediction mode or not. Distance d0 between point p1 and point p0 and distance d1 between point p2 and point p1 used for prediction are calculated, and the prediction mode is fixed to be &#x3b1; if absolute difference value distdiff=d0&#x2212;d1 is less than threshold Thfix[i]. &#x3b1; is a prediction mode for calculating a predicted value based on a linear prediction, and is &#x201c;2&#x201d; in the embodiment described here. Note that Thfix need not be added to the bitstream, and the value may be defined by profile or level of a standard or the like.</p><p id="p-0548" num="0543">QP denotes a quantization parameter used for quantizing geometry information. The three-dimensional data encoding device may calculate a quantization step from the quantization parameter, and quantize geometry information using the calculated quantization step.</p><p id="p-0549" num="0544">unique_point_per_leaf is information that indicates whether a duplicated point (a point having the same geometry information as another point) is included in the bitstream or not. When unique_point_per_leaf=1, it shows that there are no duplicated points in the bitstream. When unique_point_per_leaf=0, it shows that there is one or more duplicated points in the bitstream.</p><p id="p-0550" num="0545">Note that although the determination of whether to fix the prediction mode or not has been described as being performed using the absolute difference value between distance d0 and distance d1 in this embodiment, the present invention is not limited to this, and the determination may be made in any manner. For example, the determination may be performed by calculating distance d0 between point p1 and point p0. Specifically, it may be determined that point p1 cannot be used for prediction and the prediction mode value may be fixed at &#x201c;1&#x201d; (a predicted value of p0) when distance d0 is greater than a threshold, and a prediction mode may be set otherwise. In this way, the encoding efficiency can be improved while reducing the overhead.</p><p id="p-0551" num="0546">NumNeighborPoint, NumPredMode, Thfix, and unique_point_per_leaf described above may be entropy-encoded and added to the header. For example, these values may be binarized and arithmetically encoded. These values may be encoded with a fixed length, in order to reduce the processing amount.</p><p id="p-0552" num="0547"><figref idref="DRAWINGS">FIG. <b>76</b></figref> is a diagram illustrating an example of a syntax of geometry information. NumOfPoint, child_count, pred_mode, and residual_value[j] in the syntax in <figref idref="DRAWINGS">FIG. <b>76</b></figref> will be sequentially described.</p><p id="p-0553" num="0548">NumOfPoint denotes the total number of three-dimensional points included in a bitstream.</p><p id="p-0554" num="0549">child_count denotes the number of child nodes of an i-th three-dimensional point (node[i]).</p><p id="p-0555" num="0550">pred_mode denotes a prediction mode for encoding or decoding geometry information of the i-th three-dimensional point. pred_mode assumes a value from 0 to M&#x2212;1 (M denotes the total number of prediction modes). When pred_mode is not in the bitstream (when the condition that distdiff&#x3e;=Thfix[i]&#x26;&#x26; NumPredMode&#x3e;1 is not satisfied), pred_mode may be estimated to be fixed value &#x3b1;. &#x3b1; is a prediction mode for calculating a predicted value based on a linear prediction, and is &#x201c;2&#x201d; in the embodiment described here. Note that a is not limited to &#x201c;2&#x201d;, and any value of 0 to M&#x2212;1 may be set as an estimated value. An estimated value in the case where pred_mode is not in the bitstream may be additionally added to the header or the like. pred_mode may be binarized and arithmetically encoded with a truncated unary code using the number of prediction modes to which a predicted value is assigned.</p><p id="p-0556" num="0551">Note that when NumPredMode=1, that is, when the prediction mode count is 1, the three-dimensional data encoding device need not encode a prediction mode value representing a prediction mode and may generate a bitstream that includes no prediction mode value. When the three-dimensional data decoding device obtains a bitstream that includes no prediction mode value, the three-dimensional data decoding device may calculate a predicted value of a particular prediction mode in the predicted value calculation. The particular prediction mode is a previously determined prediction mode.</p><p id="p-0557" num="0552">residual_value[j] denotes encoded data of a prediction residual between geometry information and a predicted value thereof. residual_value[0] may represent element x of the geometry information, residual_value[1] may represent element y of the geometry information, and residual_value[2] may represent element z of the geometry information.</p><p id="p-0558" num="0553"><figref idref="DRAWINGS">FIG. <b>77</b></figref> is a diagram illustrating another example of the syntax of geometry information. The example in <figref idref="DRAWINGS">FIG. <b>77</b></figref> is a modification of the example in <figref idref="DRAWINGS">FIG. <b>76</b></figref>.</p><p id="p-0559" num="0554">As shown in <figref idref="DRAWINGS">FIG. <b>77</b></figref>, pred_mode may denote a prediction mode for each of three elements of geometry information (x, y, z). That is, pred_mode[0] denotes a prediction mode for element x, pred_mode[1] denotes a prediction mode for element y, and pred_mode[2] denotes a prediction mode for element z. pred_mode[0], pred_mode[1], and pred_mode[2] may be added to the bitstream.</p><heading id="h-0012" level="1">Embodiment 5</heading><p id="p-0560" num="0555"><figref idref="DRAWINGS">FIG. <b>78</b></figref> is a diagram illustrating an example of a prediction tree used in a three-dimensional data encoding method according to Embodiment 5.</p><p id="p-0561" num="0556">In Embodiment 5, unlike Embodiment 4, the depth of each node may be calculated when generating a prediction tree in the prediction tree generation method.</p><p id="p-0562" num="0557">For example, the root of the prediction tree may be set at a depth=0, the child nodes of the root are set at a depth=1, and the child nodes of the child nodes may be set at a depth=2. Here, a possible value of pred_mode may be changed according to the value of the depth. That is, in setting the prediction mode, the three-dimensional data encoding device may set a prediction mode for predicting each three-dimensional point based on the depth of the three-dimensional point in the hierarchical structure. For example, pred_mode may be limited to a value smaller than or equal to the value of the depth. That is, the prediction mode value may be set to be a value smaller than or equal to the value of the depth of each three-dimensional point in the hierarchical structure.</p><p id="p-0563" num="0558">When pred_mode is binarized and arithmetically encoded with a truncated unary code according to the prediction mode count, pred_mode may be binarized with a truncated unary code using the prediction mode count=min (depth, prediction mode count M). In this way, the bit length of the binary data of pred_mode in the case where depth&#x3c;M can be reduced, and the encoding efficiency can be improved.</p><p id="p-0564" num="0559">An example has been shown where, in the prediction tree generation method, when three-dimensional point A is added to the prediction tree, nearest point B thereof is searched for, and three-dimensional point A is added to the child nodes of three-dimensional point B. Here, as the method of searching for the nearest point, any method can be used. For example, the kd-tree method can be used to search for the nearest point. In that case, the nearest point can be efficiently searched for, and the encoding efficiency can be improved.</p><p id="p-0565" num="0560">Alternatively, the nearest neighbor method may be used to search for the nearest point. In that case, the nearest point can be searched for while reducing the processing load, and the processing amount and the encoding efficiency can be balanced. When searching for the nearest point in the nearest neighbor method, a search range may be set. In that case, the processing amount can be reduced.</p><p id="p-0566" num="0561">The three-dimensional data encoding device may quantize and encode prediction residual residual_value. For example, the three-dimensional data encoding device may add quantization parameter QP to the header of a slice or the like, quantize residual_value using Qstep calculated from QP, and binarize and arithmetically encode the quantized value. In that case, the three-dimensional data decoding device may decode the geometry information by applying an inverse quantization to the quantized value of residual_value using the same Qstep and adding the result to the predicted value. In that case, the decoded geometry information may be added to the prediction tree. In this way, even when the quantization is applied, the three-dimensional data encoding device or the three-dimensional data decoding device can calculate the predicted value from the decoded geometry information, so that the three-dimensional data encoding device can generate a bitstream that can be properly decoded by the three-dimensional data decoding device. Note that although an example has been shown where the nearest point of a three-dimensional point is searched for and added to the prediction tree when generating the prediction tree, the present invention is not necessarily limited to this, and the prediction tree can be generated in any method or in any order. For example, when the input three-dimensional points are data obtained by lidar, the prediction tree may be generated by adding the three-dimensional points in the order of scanning of lidar. In that case, the prediction precision can be improved, and the encoding efficiency can be improved.</p><p id="p-0567" num="0562"><figref idref="DRAWINGS">FIG. <b>79</b></figref> is a diagram illustrating another example of the syntax of geometry information. residual_is_zero, residual_sign, residual_bitcount_minus1, and residual_bit[k] in the syntax in <figref idref="DRAWINGS">FIG. <b>79</b></figref> will be sequentially described.</p><p id="p-0568" num="0563">residual_is_zero is information that indicates whether residual_value is 0 or not. For example, when residual_is_zero=1, it shows that residual_value is 0, and when residual_is_zero=0, it shows that residual_value is not 0. Note that when pred_mode=0 (without prediction, and the predicted value being 0), the possibility that residual_value is 0 is low, so that residual_is_zero need not be encoded and added to the bitstream. When pred_mode=0, the three-dimensional data decoding device need not decode residual_is_zero from the bitstream, and may estimate that residual_is_zero=0.</p><p id="p-0569" num="0564">residual_sign is sign information (sign bit) that indicates whether residual_value is positive or negative. For example, when residual_sign=1, it shows that residual_value is negative, and when residual_sign=0, it shows that residual_value is positive.</p><p id="p-0570" num="0565">Note that when pred_mode=0, the predicted value is 0, and therefore, residual_value is always positive or 0. Therefore, the three-dimensional data encoding device need not encode residual_sign and add residual_sign to the bitstream. That is, when a prediction mode in which the predicted value is calculated to be 0 is set, the three-dimensional data encoding device need not encode the sign information that indicates whether the prediction residual is positive or negative and may generate a bitstream including no sign information. When pred_mode=0, the three-dimensional data decoding device need not decode residual_sign from the bitstream, and may estimate that residual_sign=0. That is, when the three-dimensional data decoding device obtains a bitstream including no sign information that indicates whether the prediction residual is positive or negative, the three-dimensional data decoding device can regard the prediction residual as 0 or a positive value.</p><p id="p-0571" num="0566">residual_bitcount_minus1 indicates a number obtained by subtracting 1 from the bit count of residual_bit. That is, residual_bitcount is equal to a number obtained by adding 1 to residual_bitcount_minus1.</p><p id="p-0572" num="0567">residual_bit[k] denotes k-th bit information in the case where the absolute value of residual_value is binarized with a fixed length in accordance with the value of residual_bitcount.</p><p id="p-0573" num="0568">Note that when condition A is defined as &#x201c;unique_point_per_leaf=1 (there is no duplicated point) when geometry information of any one of point p0, point p1, and point p2 is directly used as a predicted value as in prediction mode 1&#x201d;, all of residual_is_zero[0] for element x, residual_is_zero[1] for element y, and residual_is_zero[2] for element z are not 0 at the same time, and therefore, residual_is_zero for any one element need not be added to the bitstream.</p><p id="p-0574" num="0569">For example, when condition A is true, and residual_is_zero[0] and residual_is_zero[1] are 0, the three-dimensional data encoding device need not add residual_is_zero[2] to the bitstream. In that case, the three-dimensional data decoding device may estimate that residual_is_zero[2], which has not been added to the bitstream, is 1.</p><p id="p-0575" num="0570">(Modifications)</p><p id="p-0576" num="0571">Although an example where a prediction tree is generated using geometry information (x, y, z) of three-dimensional points, and the geometry information is encoded and decoded has been shown in this embodiment, the present invention is not necessarily limited to this. For example, the predictive encoding using the prediction tree may be applied to the encoding of attribute information (such as color or reflectance) of three-dimensional points. The prediction tree generated in the encoding of geometry information may be used in the encoding of attribute information. In that case, a prediction tree does not have to be generated in the encoding of attribute information, and the processing amount can be reduced.</p><p id="p-0577" num="0572"><figref idref="DRAWINGS">FIG. <b>80</b></figref> is a diagram illustrating an example of a configuration of a prediction tree used for encoding of both geometry information and attribute information.</p><p id="p-0578" num="0573">As shown in <figref idref="DRAWINGS">FIG. <b>80</b></figref>, each node in this prediction tree includes child_count, g_pred_mode, g_residual_value, a_pred_mode, and a_residual_value. g_pred_mode denotes a prediction mode for geometry information. g_residual_value denotes a prediction residual for geometry information. a_pred_mode denotes a prediction mode for attribute information. a_residual_value denotes a prediction mode for attribute information.</p><p id="p-0579" num="0574">Here, child_count may be shared by geometry information and attribute information. In this way, the overhead can be reduced, and the encoding efficiency can be improved.</p><p id="p-0580" num="0575">Note that child_count may be independently added for each of geometry information and attribute information. In this way, the three-dimensional data decoding device can independently decode geometry information and attribute information. For example, the three-dimensional data decoding device can decode attribute information alone.</p><p id="p-0581" num="0576">Note that the three-dimensional data encoding device may generate a different prediction tree for each of geometry information and attribute information. In this way, the three-dimensional data encoding device can generate an appropriate prediction tree for each of geometry information and attribute information and can improve the encoding efficiency. In that case, the three-dimensional data encoding device may add, to the bitstream, information (such as child_count) required by the three-dimensional data decoding device to reconstruct the prediction tree for each of the geometry information and the attribute information. Note that the three-dimensional data encoding device may add, to the header or the like, identification information that indicates whether or not the prediction tree is to be shared by the geometry information and the attribute information. In this way, whether the prediction tree is to be shared by the geometry information and the attribute information can be adaptively switched, and the balance between the encoding efficiency and the processing amount can be controlled.</p><p id="p-0582" num="0577"><figref idref="DRAWINGS">FIG. <b>81</b></figref> is a flowchart illustrating an example of a three-dimensional data encoding method according to a modification of Embodiment 5.</p><p id="p-0583" num="0578">The three-dimensional data encoding device generates a prediction tree using geometry information of a plurality of three-dimensional points (S<b>9761</b>).</p><p id="p-0584" num="0579">The three-dimensional data encoding device then encodes node information included in each node in the prediction tree and a prediction residual of geometry information (S<b>9762</b>). Specifically, the three-dimensional data encoding device calculates a predicted value for predicting geometry information of each node, calculates a prediction residual, which is the difference between the calculated predicted value and the geometry information of the node, and encodes the node information and the prediction residual of the geometry information.</p><p id="p-0585" num="0580">The three-dimensional data encoding device then encodes the node information included in each node in the prediction tree and a prediction residual of attribute information (S<b>9763</b>). Specifically, the three-dimensional data encoding device calculates a predicted value for predicting attribute information of each node, calculates a prediction residual, which is the difference between the calculated predicted value and the attribute information of the node, and encodes the node information and the prediction residual of the attribute information.</p><p id="p-0586" num="0581"><figref idref="DRAWINGS">FIG. <b>82</b></figref> is a flowchart illustrating an example of a three-dimensional data decoding method according to a modification of Embodiment 5.</p><p id="p-0587" num="0582">The three-dimensional data decoding device decodes node information to reconstruct the prediction tree (S<b>9771</b>).</p><p id="p-0588" num="0583">The three-dimensional data decoding device then decodes geometry information of a node (S<b>9772</b>). Specifically, the three-dimensional data decoding device decodes geometry information of each node by calculating a predicted value for the geometry information and summing the calculated predicted value and the obtained prediction residual.</p><p id="p-0589" num="0584">The three-dimensional data decoding device then decodes attribute information of a node (S<b>9773</b>). Specifically, the three-dimensional data decoding device decodes attribute information of each node by calculating a predicted value for the attribute information and summing the calculated predicted value and the obtained prediction residual.</p><p id="p-0590" num="0585">The three-dimensional data decoding device then determines whether decoding of all nodes is completed or not (S<b>9774</b>). When decoding of all nodes is completed, the three-dimensional data decoding device ends the three-dimensional data decoding method. When decoding of all nodes is not completed. the three-dimensional data decoding device performs steps S<b>9771</b> to S<b>9773</b> for the node(s) yet to be processed.</p><p id="p-0591" num="0586"><figref idref="DRAWINGS">FIG. <b>83</b></figref> is a diagram illustrating an example of a syntax of a header of attribute information. NumNeighborPoint, NumPredMode, Thfix. QP, and unique_point_per_leaf in the syntax in <figref idref="DRAWINGS">FIG. <b>83</b></figref> will be sequentially described.</p><p id="p-0592" num="0587">NumNeighborPoint denotes an upper limit of the number of peripheral points used for generation of a predicted value of attribute information of a three-dimensional point. When number M of peripheral points is less than NumNeighborPoint (M&#x3c;NumNeighborPoint), a predicted value may be calculated using the M peripheral points in the predicted value calculation process.</p><p id="p-0593" num="0588">NumPredMode denotes total number M of prediction modes used for prediction of attribute information. Note that maximum possible value MaxM of the prediction mode count may be defined by a standard or the like. The three-dimensional data encoding device may add the value of (MaxM&#x2212;M) (0&#x3c;M&#x3c;=MaxM) to the header as NumPredMode, and binarize and encode (MaxM&#x2212;1) with a truncated unary code. Prediction mode count NumPredMode need not be added to the bitstream, and the value of NumPredMode may be defined by profile or level of a standard or the like. The prediction mode count may be defined as NumNeighborPoint+NumPredMode.</p><p id="p-0594" num="0589">Thfix is a threshold for determining whether to fix the prediction mode or not. Distance d0 between point p1 and point p0 and distance d1 between point p2 and point p1 used for prediction are calculated, and the prediction mode is fixed to be &#x3b1; if absolute difference value distdiff=|d0&#x2212;d1| is less than threshold Thfix[i]. &#x3b1; is a prediction mode for calculating a predicted value based on a linear prediction, and is &#x201c;2&#x201d; in the embodiment described here. Note that Thfix need not be added to the bitstream, and the value may be defined by profile or level of a standard or the like.</p><p id="p-0595" num="0590">QP denotes a quantization parameter used for quantizing attribute information. The three-dimensional data encoding device may calculate a quantization step from the quantization parameter, and quantize attribute information using the calculated quantization step.</p><p id="p-0596" num="0591">unique_point_per_leaf is information that indicates whether a duplicated point (a point having the same geometry information as another point) is included in the bitstream or not. When unique_point_per_leaf=1, it shows that there are no duplicated points in the bitstream. When unique_point_per_leaf=0, it shows that there is one or more duplicated points in the bitstream.</p><p id="p-0597" num="0592">Note that although the determination of whether to fix the prediction mode or not has been described as being performed using the absolute difference value between distance d0 and distance d1 in this embodiment, the present invention is not limited to this, and the determination may be made in any manner. For example, the determination may be performed by calculating distance d0 between point p1 and point p0. Specifically, it may be determined that point p1 cannot be used for prediction and the prediction mode value may be fixed at &#x201c;1&#x201d; (a predicted value of p0) when distance d0 is greater than a threshold, and a prediction mode may be set otherwise. In this way, the encoding efficiency can be improved while reducing the overhead.</p><p id="p-0598" num="0593">It is possible that NumNeighborPoint, NumPredMode, Thfix, or unique_point_per_leaf described above is shared with the geometry information and is not added to attribute_header. In this way, the overhead can be reduced.</p><p id="p-0599" num="0594">NumNeighborPoint, NumPredMode, Thfix, and unique_point_per_leaf described above may be entropy-encoded and added to the header. For example, these values may be binarized and arithmetically encoded. These values may be encoded with a fixed length, in order to reduce the processing amount.</p><p id="p-0600" num="0595"><figref idref="DRAWINGS">FIG. <b>84</b></figref> is a diagram illustrating another example of a syntax of attribute information. NumOfPoint, child_count, pred_mode, dimension, residual_is_zero, residual_sign, residual_bitcount_minus1, and residual_bit[k] in the syntax in <figref idref="DRAWINGS">FIG. <b>84</b></figref> will be sequentially described.</p><p id="p-0601" num="0596">NumOfPoint denotes the total number of three-dimensional points included in a bitstream. NumOfPoint may be the same as NumOfPoint of the geometry information.</p><p id="p-0602" num="0597">child_count denotes the number of child nodes of an i-th three-dimensional point (node[i]). Note that this child_count may be the same as child_count of the geometry information. When this child_count is the same as child_count of the geometry information, this child_count need not be added to attribute_data. In this way, the overhead can be reduced.</p><p id="p-0603" num="0598">pred_mode denotes a prediction mode for encoding or decoding attribute information of the i-th three-dimensional point. pred_mode assumes a value from 0 to M&#x2212;1 (M denotes the total number of prediction modes). When pred_mode is not in the bitstream (when the conditions that distdiff&#x3e;=Thfix[i] &#x26;&#x26; NumPredMode&#x3e;1 are not satisfied), pred_mode may be estimated to be fixed value &#x3b1;. &#x3b1; is a prediction mode for calculating a predicted value based on a linear prediction, and is &#x201c;2&#x201d; in the embodiment described here. Note that a is not limited to &#x201c;2&#x201d;, and any value of 0 to M&#x2212;1 may be set as an estimated value. An estimated value in the case where pred_mode is not in the bitstream may be additionally added to the header or the like. pred_mode may be binarized and arithmetically encoded with a truncated unary code using the number of prediction modes to which a predicted value is assigned.</p><p id="p-0604" num="0599">dimension is information that indicates the dimension of the attribute information. dimension may be added to the header, such as SPS. For example, dimension may be set at &#x201c;3&#x201d; when the attribute information is color, and may be set at &#x201c;1&#x201d; when the attribute information is reflectance.</p><p id="p-0605" num="0600">residual_is_zero is information that indicates whether residual_value is 0 or not. For example, when residual_is_zero=1, it shows that residual_value is 0, and when residual_is_zero=0, it shows that residual_value is not 0. Note that when pred_mode=0 (without prediction, and the predicted value being 0), the possibility that residual_value is 0 is low, so that residual_is_zero need not be encoded and added to the bitstream. When pred_mode=0, the three-dimensional data decoding device need not decode residual_is_zero from the bitstream, and may estimate that residual_is_zero=0.</p><p id="p-0606" num="0601">residual_sign is sign information (sign bit) that indicates whether residual_value is positive or negative. For example, when residual_sign=1, it shows that residual_value is negative, and when residual_sign=0, it shows that residual_value is positive.</p><p id="p-0607" num="0602">Note that when pred_mode=0 (without prediction, the predicted value being 0), residual_value is always positive, and therefore, the three-dimensional data encoding device need not encode residual_sign and add residual_sign to the bitstream. That is, when the prediction residual is positive, the three-dimensional data encoding device need not encode the sign information that indicates whether the prediction residual is positive or negative and may generate a bitstream including no sign information, and when the prediction residual is negative, the three-dimensional data encoding device may generate a bitstream including the sign information. When pred_mode=0, the three-dimensional data decoding device need not decode residual_sign from the bitstream, and may estimate that residual_sign=0. That is, the three-dimensional data decoding device can regard the prediction residual as a positive value when the three-dimensional data decoding device obtains a bitstream including no sign information that indicates whether the prediction residual is positive or negative, and can regard the prediction residual as a negative value when the three-dimensional data decoding device obtains a bitstream including the sign information.</p><p id="p-0608" num="0603">residual_bitcount_minus1 indicates a number obtained by subtracting 1 from the bit count of residual_bit. That is, residual_bitcount is equal to a number obtained by adding 1 to residual_bitcount_minus1.</p><p id="p-0609" num="0604">residual_bit[k] denotes k-th bit information in the case where the absolute value of residual_value is binarized with a fixed length in accordance with the value of residual_bitcount.</p><p id="p-0610" num="0605">Note that when condition A is defined as &#x201c;unique_point_per_leaf=1 (there is no duplicated point) when attribute information of any one of point p0, point p1, and point p2 is directly used as a predicted value as in prediction mode 1&#x201d;, all of residual_is_zero[0] for element x, residual_is_zero[1] for element y, and residual_is_zero[2] for element z are not 0 at the same time, and therefore, residual_is_zero for any one element need not be added to the bitstream.</p><p id="p-0611" num="0606">For example, when condition A is true, and residual_is_zero[0] and residual_is_zero[1] are 0, the three-dimensional data encoding device need not add residual_is_zero[2] to the bitstream. In that case, the three-dimensional data decoding device may estimate that residual_is_zero[2], which has not been added to the bitstream, is 1.</p><p id="p-0612" num="0607"><figref idref="DRAWINGS">FIG. <b>85</b></figref> is a diagram illustrating an example of a syntax of geometry information and attribute information.</p><p id="p-0613" num="0608">As shown in <figref idref="DRAWINGS">FIG. <b>85</b></figref>, encoded information of geometry information and attribute information may be stored in one data unit. Here, g_* represents encoded information concerning geometry, and a_* represents encoded information concerning attribute information. In this way, geometry information and attribute information can be decoded at the same time.</p><p id="p-0614" num="0609">As described above, the three-dimensional data encoding device according to one aspect of the present embodiment performs the process shown by <figref idref="DRAWINGS">FIG. <b>86</b></figref>. The three-dimensional encoding device performs a three-dimensional data encoding method for encoding three-dimensional points having a hierarchical structure. The three-dimensional data encoding device sets one prediction mode out of two or more prediction modes each for calculating a predicted value of an item of first geometry information of a first three-dimensional point using one or more items of second geometry information of one or more second three-dimensional points surrounding the first three-dimensional point (S<b>9781</b>). Next, the three-dimensional data encoding device calculates a predicted value of the one prediction mode set (S<b>9782</b>). Then, the three-dimensional data encoding device calculates a prediction residual that is a difference between the item of first geometry information and the predicted value calculated (S<b>9783</b>). After that, the three-dimensional data encoding device generates a first bitstream including the one prediction mode set and the prediction residual (S<b>9784</b>). In the setting (S<b>9781</b>), the one prediction mode is set based on a depth of the first three-dimensional point in the hierarchical structure.</p><p id="p-0615" num="0610">According to this, geometry information can be encoded using a predicted value in one prediction mode among two or more prediction modes that is set based on the depth in the hierarchical structure, so that the encoding efficiency of the geometry information can be improved.</p><p id="p-0616" num="0611">For example, in the setting (S<b>9784</b>), the three-dimensional data encoding device sets a prediction mode value that is less than or equal to a value of the depth of the first three-dimensional point in the hierarchical structure. The prediction mode value indicates the one prediction mode.</p><p id="p-0617" num="0612">For example, the first bitstream further includes a prediction mode count indicating a total number of the two or more prediction modes.</p><p id="p-0618" num="0613">For example, in the generating (S<b>9784</b>), the three-dimensional data encoding device encodes a prediction mode value indicating the one prediction mode set using the prediction mode count. The first bitstream includes the prediction mode value encoded as the one prediction mode set.</p><p id="p-0619" num="0614">For example, in the generating (S<b>9784</b>), the three-dimensional data encoding device encodes the prediction mode value using a truncated unary code in which the prediction mode count is set as a maximum value. Therefore, the code amount of the prediction mode value can be reduced.</p><p id="p-0620" num="0615">For example, each of the item of first geometry information and the one or more items of second geometry information includes three elements. In the setting (S<b>9781</b>), the three-dimensional data encoding device sets, for the three elements in common, a prediction mode for calculating a predicted value of each of the three elements included in the item of first geometry information. Therefore, the code amount of the prediction mode value can be reduced.</p><p id="p-0621" num="0616">For example, each of the item of first geometry information and the one or more items of second geometry information includes three elements. In the setting (S<b>9781</b>), the three-dimensional data encoding device sets, for the three elements independently of each other, a prediction mode for calculating a predicted value of each of the three elements included in the item of first geometry information. Therefore, the three-dimensional data decoding device can independently decode each element.</p><p id="p-0622" num="0617">For example, each of the item of first geometry information and the one or more items of second geometry information includes three elements. In the setting (S<b>9781</b>), the three-dimensional data encoding device sets, for two elements among the three elements in common, a prediction mode for calculating a predicted value of each of the three elements included in the item of first geometry information, and sets the prediction mode for a remaining one element independently of the two elements. Therefore, the code amount of the prediction mode value can be reduced for the two elements. Therefore, the three-dimensional data decoding device can independently decode the remaining one element.</p><p id="p-0623" num="0618">For example, in the generating (S<b>9784</b>), when the prediction mode count is 1, the three-dimensional data encoding device does not encode the prediction mode value, and generates a second bitstream not including the prediction mode value indicating the one prediction mode. Therefore, the code amount of the bitstream can be reduced.</p><p id="p-0624" num="0619">For example, in the generating (S<b>9784</b>), when a prediction mode in which the predicted value calculated in the calculating is 0 is set, the three-dimensional data encoding device does not encode an item of positive and negative information, and generates a third bitstream not including the item of positive and negative information, the item of positive and negative information indicating whether the prediction residual is positive or negative. Therefore, the code amount of the bitstream can be reduced.</p><p id="p-0625" num="0620">For example, the three-dimensional data encoding device includes a processor and memory, and the processor performs the above-described process using the memory.</p><p id="p-0626" num="0621">The three-dimensional data decoding device according to one aspect of the present embodiment performs the process shown by <figref idref="DRAWINGS">FIG. <b>87</b></figref>. The three-dimensional data decoding device performs a three-dimensional decoding method for decoding three-dimensional points having a hierarchical structure. The three-dimensional data decoding device obtains a first bitstream including an encoded prediction mode of a first three-dimensional point among the three-dimensional points and an encoded prediction residual (S<b>9791</b>). Next, the three-dimensional data decoding device decodes a prediction mode value indicating the encoded prediction mode, and the encoded prediction residual (S<b>9792</b>). Then, the three-dimensional data decoding device calculates a predicted value of a prediction mode obtained in the decoding and indicated by the prediction mode value (S<b>9793</b>). After that, the three-dimensional data decoding device calculates an item of first geometry information of the first three-dimensional point by adding the predicted value and a prediction residual obtained in the decoding (S<b>9794</b>). The encoded prediction mode included in the first bitstream is a prediction mode set based on a depth of the first three-dimensional point in the hierarchical structure.</p><p id="p-0627" num="0622">According to this, geometry information can be encoded using a predicted value in one prediction mode among two or more prediction modes that is set based on the depth in the hierarchical structure, so that the encoding efficiency of the geometry information can be improved.</p><p id="p-0628" num="0623">For example, the prediction mode value indicating the encoded prediction mode included in the first bitstream is less than or equal to a value of the depth of the first three-dimensional point in the hierarchical structure.</p><p id="p-0629" num="0624">For example, the first bitstream includes a prediction mode count indicating a total number of two or more prediction modes.</p><p id="p-0630" num="0625">For example, in the decoding (S<b>9792</b>), the three-dimensional data decoding device decodes the prediction mode value using a truncated unary code in which the total number of the two or more prediction modes is set as a maximum value.</p><p id="p-0631" num="0626">For example, each of the item of first geometry information and one or more items of second geometry information of one or more second three-dimensional points includes three elements, the one or more second three-dimensional points surrounding the first three-dimensional point. A prediction mode for calculating a predicted value of each of the three elements included in the item of first geometry information is set for the three elements in common.</p><p id="p-0632" num="0627">For example, each of the item of first geometry information and one or more items of second geometry information of one or more second three-dimensional points includes three elements, the one or more second three-dimensional points surrounding the first three-dimensional point. A prediction mode for calculating a predicted value of each of the three elements included in the item of first geometry information is set for the three elements independently of each other.</p><p id="p-0633" num="0628">For example, each of the item of first geometry information and one or more items of second geometry information of one or more second three-dimensional points includes three elements, the one or more second three-dimensional points surrounding the first three-dimensional point. A prediction mode for calculating a predicted value of each of the three elements included in the item of first geometry information is set for two elements among the three elements in common, and is set for a remaining one element independently of the two elements.</p><p id="p-0634" num="0629">For example, in the obtaining (S<b>9791</b>), when a second bitstream not including the prediction mode value is obtained in the obtaining, the three-dimensional data decoding device calculates a predicted value of a specific prediction mode in the calculating of the predicted value.</p><p id="p-0635" num="0630">For example, in the obtaining (S<b>9791</b>), when a third bitstream not including positive and negative information is obtained in the obtaining, the three-dimensional data decoding device uses the prediction residual as 0 or a positive number in the calculating of the item of first geometry information (S<b>9794</b>).</p><p id="p-0636" num="0631">For example, the three-dimensional data decoding device includes a processor and memory, and the processor performs the above-described process using the memory.</p><heading id="h-0013" level="1">Embodiment 6</heading><p id="p-0637" num="0632"><figref idref="DRAWINGS">FIG. <b>88</b></figref> is a diagram illustrating a syntax example of header information (pc_header) included in a bitstream. This header information is, for example, an SPS (Sequence Parameter Set), a GPS (Geometry Parameter Set), or a slice header, etc. An SPS is control information (metadata) on entire encoded data, and a GPS is control information (for example, metadata, etc.) on geometry information. Additionally, an SPS, a GPS, and a slice are control information common to a plurality of three-dimensional points (a plurality of nodes). In addition, an SPS and a GPS are control information common to one or a plurality of processing units (for example, slices).</p><p id="p-0638" num="0633">Header information illustrated in <figref idref="DRAWINGS">FIG. <b>88</b></figref> includes geo_bit_depth. geo_bit_depth represents the bit accuracy of geometry information. Here, the bit accuracy is the bit count required for representing the range of values that the value can take. For example, geo_bit_depth=32 may indicate that geometry information is 32-bit accuracy, and geo_bit_depth=8 may indicate that geometry information is 8-bit accuracy.</p><p id="p-0639" num="0634">Note that the three-dimensional encoding device may set, to geo_bit_depth, the bit accuracy of the geometry information of an input three-dimensional point cloud. For example, when encoding the geometry information of a three-dimensional point cloud of 32-bit accuracy obtained by LiDAR, etc., the three-dimensional encoding device may set geo_bit_depth to 32. Additionally, when a three-dimensional point cloud of 32-bit accuracy obtained by a LiDAR, etc. is obtained, and the obtained three-dimensional point cloud is quantized into 16-bit accuracy and then encoded, the three-dimensional encoding device may set geo_bit_depth to 16. Accordingly, the bit accuracy of the geometry information of the encoded three-dimensional point cloud can be transmitted to the three-dimensional decoding device. Note that the value of geo_bit_depth may not be added to a header, and may be specified by the profile or level of the standard, etc. Accordingly, the header amount can be reduced. Note that, when the value of geo_bit_depth is limited to a power of 2, such as 4, 8, 16, and 32, the three-dimensional encoding device may add the value of log 2 (geo_bit_depth) (2, 3, 4, or 5) to a header. Accordingly, the header amount can be reduced. Note that log 2(x) is the logarithm of x with base 2.</p><p id="p-0640" num="0635">Additionally, the three-dimensional encoding device may set the value of geo_bit_depth so as to be able to represent the range of values that the geometry information of a three-dimensional point to be encoded can take. For example, when the geometry information of a three-dimensional point to be encoded can take values of 0 to 253, the values of 0 to 253 can be represented by setting geo_bit_depth=8. Additionally, when the geometry information of a three-dimensional point to be encoded can take values of 0 to 1020, the values of 0 to 1020 can be represented by setting geo_bit_depth=10. That is, when the geometry information of a three-dimensional point to be encoded can take values of 0 to value, the values of 0 to value can be represented by setting geo_bit_depth=1+i log 2 (value&#x2212;1). Note that i log 2(x) represents an integer value of log 2(x) rounded down to the nearest whole number.</p><p id="p-0641" num="0636">Note that, when the geometry information of a three-dimensional point cloud to be encoded takes the range of values from &#x2212;value1 to value2, the three-dimensional encoding device may convert the range of values of the geometry information into 0 to value2+value1 by adding value1 to all the geometry information. Accordingly, the value of geo_bit_depth can be set with the above-described method.</p><p id="p-0642" num="0637">Additionally, when the range of values that each component of the geometry information (x, y, z) of a three-dimensional point can take is different, the three-dimensional encoding device may set geo_bit_depth so as to be able to represent the maximum value of all of the components. For example, when x takes values of 0 to 244, y takes values of 0 to 125, and z takes values of 0 to 62, the three-dimensional encoding device may set geo_bit_depth=8 so that 0 to 244 for x can be represented. Accordingly, since it is not necessary to add geo_bit_depth to a header for each of x, y, and z, the header amount can be reduced.</p><p id="p-0643" num="0638">Note that, in the present embodiment, although the example has been illustrated in which geo_bit_depth is applied to the encoding scheme with a prediction tree, it is not necessarily limited to this, and geo_bit_depth may also be applied at the time of, for example, octree encoding. For example, in a case of octree encoding, the value of geo_bit_depth represents the size of a bounding box. Note that geo_bit_depth added to a header may be utilized in common for the prediction tree encoding and the octree encoding. Accordingly, since it becomes unnecessary to add geo_bit_depth to a header individually for the prediction tree encoding and the octree encoding, the header amount can be reduced.</p><p id="p-0644" num="0639">Note that the three-dimensional encoding device may add geo_bit_depth to a slice header. Accordingly, the three-dimensional encoding device can appropriately set geo_bit_depth according to the values that the geometry information of a three-dimensional point cloud for each slice can take. Note that, when geo_bit_depth is not changed for each slice, the three-dimensional encoding device may add geo_bit_depth to a header of an SPS or a GPS, etc. Accordingly, the header amount can be reduced.</p><p id="p-0645" num="0640"><figref idref="DRAWINGS">FIG. <b>89</b></figref> is a diagram illustrating a syntax example of encoded data (geometry_data) of geometry information. For example, this encoded data is encoded data of a processing unit (for example, a slice) including a plurality of three-dimensional points. As illustrated in <figref idref="DRAWINGS">FIG. <b>89</b></figref>, the encoded data of geometry information includes child_count, pred_mode, residual_is_zero, residual_sign, bitcount [k], and residual_bit [k].</p><p id="p-0646" num="0641">child_count indicates the number of child nodes that the i-th three-dimensional point (node[i]) has among a plurality of three-dimensional points included in a processing unit.</p><p id="p-0647" num="0642">pred_mode indicates the prediction mode used for generation of a predicted value. Note that pred_mode=0 indicates that, for example, prediction is not used.</p><p id="p-0648" num="0643">residual_is_zero, residual_sign, bitcount [k]. and residual_bit [k] are information indicating the prediction residual that is the difference between the geometry information of node[i] and the predicted value. residual_is_zero indicates whether or not the prediction residual is 0. residual_sign indicates the positive/negative (sign) of the prediction residual.</p><p id="p-0649" num="0644">Additionally, the three-dimensional encoding device calculates numbitcount using geo_bit_depth included in header information. Specifically, numbitcount is calculated using numbitcount=1+i log 2 (geo_bit_depth&#x2212;1).</p><p id="p-0650" num="0645">numbitcount represents the bit count of residual_bitcount. Note that the three-dimensional encoding device may add numbitcount calculated from geo_bit_depth to a header of a slice, etc. Accordingly, the three-dimensional decoding device can obtain numbitcount by decoding the header. Therefore, since the three-dimensional decoding device need not calculate numbitcount from geo_bit_depth, the processing amount of the three-dimensional decoding device can be reduced.</p><p id="p-0651" num="0646">bitcount [k] indicates the bit count of a prediction residual (residual data). residual_bit [k] indicates the value of each bit of the prediction residual. k=0 to numbitcount&#x2212;1, and bitcount [k] represents the value of the k-th bit at the time when residual_bitcount is binarized.</p><p id="p-0652" num="0647">residual_bit [k] indicates the value of each bit of the prediction residual. Specifically, residual_bit [k] indicates the value obtained by subtracting 1 from the absolute value of the prediction residual. residual_bit [k] indicates the value of the k-th bit at the time when the absolute value of the prediction residual (residual_value) is binarized according to the value of residual_bitcount.</p><p id="p-0653" num="0648">Note that the three-dimensional encoding device may add geo_bit_depth to a header required for prediction tree encoding, etc. For example, the three-dimensional encoding device may add geo_bit_depth to a slice header for prediction tree encoding, and need not add geo_bit_depth to a slice header for octree encoding. Accordingly, the header amount can be reduced.</p><p id="p-0654" num="0649"><figref idref="DRAWINGS">FIG. <b>90</b></figref> is a diagram illustrating a modification of a syntax example of header information (pc_header). The header information illustrated in <figref idref="DRAWINGS">FIG. <b>90</b></figref> is different from the header information illustrated in <figref idref="DRAWINGS">FIG. <b>88</b></figref> in that it includes geo_bit_depth [3], instead of geo_bit_depth.</p><p id="p-0655" num="0650">geo_bit_depth [3] represents the bit accuracy of each component of geometry information (x, y, z). For example, geo_bit_depth [0] may represent the bit accuracy of x, geo_bit_depth [1] may represent the bit accuracy of y, and geo_bit_depth [2] may represent the bit accuracy of z.</p><p id="p-0656" num="0651">Note that the three-dimensional encoding device may set the bit accuracy of the geometry information of an input three-dimensional point cloud to be encoded to the value of geo_bit_depth [3]. For example, when encoding the geometry information (x, y, z) of a three-dimensional point cloud in which the bit accuracy of each component obtained by LiDAR, etc. is 32-bit accuracy, the three-dimensional encoding device may set geo_bit_depth [0]=geo_bit_depth [1]=geo_bit_depth [2]=32. Additionally, when obtaining a three-dimensional point cloud in which the bit accuracy of each component obtained by a LiDAR, etc. is 32-bit accuracy, quantizing the obtained three-dimensional point cloud into 16-bit accuracy, and then encoding it, the three-dimensional encoding device may set geo_bit_depth [0]=geo_bit_depth [1]=geo_bit_depth [2]=16. Accordingly, the bit accuracy of the geometry information of the encoded three-dimensional point cloud can be transmitted to the three-dimensional decoding device.</p><p id="p-0657" num="0652">Note that the three-dimensional encoding device may reduce the header amount by adding any one value of geo_bit_depth [3] to a header, and adding the differences between the one value and the remaining two values to the header. For example, the three-dimensional encoding device may add geo_bit_depth [0], geo_bit_depth [1]&#x2212;geo_bit_depth [0], and geo_bit_depth [2]&#x2212;geo_bit_depth [0] to a header.</p><p id="p-0658" num="0653">Additionally, the three-dimensional encoding device may set the value of geo_bit_depth [3] so as to be able to represent the range of values that each geometry information (x, y, z) of a three-dimensional point to be encoded can take. For example, when x takes values of 0 to 244, y takes values of 0 to 125, and z takes values of 0 to 62, geo_bit_depth [0]=8, geo_bit_depth [1]=7, and geo_bit_depth [2]=6 may be set. Accordingly, since appropriate geo_bit_depth can be set to each (x, y, z), the bit amount of residual_bitcount can be reduced.</p><p id="p-0659" num="0654">Note that, when the geometry information x of a three-dimensional point to be encoded can take values of 0 to 253, the values of 0 to 253 can be represented by setting geo_bit_depth [0]=8. Additionally, when the geometry information x of a three-dimensional point to be encoded can take values of 0 to 1020, the values of 0 to 1020 can be represented by setting geo_bit_depth [0]=10. That is, when the geometry information x of a three-dimensional point to be encoded can take values of 0 to value, the values of 0 to value can be represented by setting geo_bit_depth [0]=1+i log 2 (value&#x2212;1). Note that i log 2(x) represents an integer value of log 2(x) rounded down to the nearest whole number.</p><p id="p-0660" num="0655">Note that, when the geometry information x of a three-dimensional point cloud to be encoded takes the range of values of &#x2212;value1 to value2, the three-dimensional encoding device may convert the range of values of the geometry information into 0 to value2+value1 by adding value1 to all the geometry information x. Accordingly, the value of geo_bit_depth [0] can be set with the above-described method.</p><p id="p-0661" num="0656">Note that, in the present embodiment, although the example has been illustrated in which geo_bit_depth [3] is applied to the encoding scheme with a prediction tree, it is not necessarily limited to this, and geo_bit_depth [3] may also be applied at the time of, for example, octree encoding. For example, in a case of octree encoding, the value (x, y, z) of geo_bit_depth [3] can be used as the value representing the size of a bounding box. Note that geo_bit_depth [3] added to a header may be utilized in common for the prediction tree encoding and the octree encoding. Accordingly, since it becomes unnecessary to add geo_bit_depth [3] to a header individually for the prediction tree encoding and the octree encoding, the header amount can be reduced.</p><p id="p-0662" num="0657">Note that the three-dimensional encoding device may add geo_bit_depth [3] to a slice header. Accordingly, the three-dimensional encoding device can appropriately set geo_bit_depth [3] according to the values that the geometry information of a three-dimensional point cloud for each slice can take. Note that, when geo_bit_depth [3] is not changed for each slice, the three-dimensional encoding device may add geo_bit_depth [3] to a header of an SPS or a GPS, etc. Accordingly, the header amount can be reduced.</p><p id="p-0663" num="0658"><figref idref="DRAWINGS">FIG. <b>91</b></figref> is a diagram illustrating a syntax example of the encoded data (geometry_data) of the geometry information in this case. The syntax example illustrated in <figref idref="DRAWINGS">FIG. <b>91</b></figref> is different from the syntax example illustrated in <figref idref="DRAWINGS">FIG. <b>89</b></figref> in that numbitcount is calculated for each component of geometry information. Specifically, numbitcount is calculated using numbitcount=1+i log 2 (geo_bit_depth [j]&#x2212;1).</p><p id="p-0664" num="0659">Note that the three-dimensional encoding device may add numbitcount calculated from geo_bit_depth [3] to the header of a slice, etc. for each of x, y, and z. For example, the three-dimensional encoding device may add numbitcount [0], numbitcount [1], and numbitcount [2] to a header. For example, numbitcount [0] represents the bit count of residual_bitcount of x, numbitcount [1] represents the bit count of residual_bitcount of y, and numbitcount [2] represents the bit count of residual_bitcount of z.</p><p id="p-0665" num="0660">Accordingly, the three-dimensional decoding device can obtain numbitcount [3] by decoding a header. Therefore, since the three-dimensional decoding device need not calculate numbitcount from geo_bit_depth [3], the processing amount can be reduced.</p><p id="p-0666" num="0661"><figref idref="DRAWINGS">FIG. <b>92</b></figref> is a flowchart of encoding processing of a prediction residual (residual_value) in the three-dimensional encoding device. <figref idref="DRAWINGS">FIG. <b>92</b></figref> illustrates a flow of the encoding processing of the prediction residual of any one component of geometry information (x, y, z). That is, the processing illustrated in <figref idref="DRAWINGS">FIG. <b>92</b></figref> is repeatedly performed for each component.</p><p id="p-0667" num="0662">First, the three-dimensional encoding device encodes residual_is_zero (S<b>10801</b>). That is, the three-dimensional encoding device adds residual_is_zero to a bitstream. For example, the three-dimensional encoding device sets residual_is_zero=1 when residual_value=0, and otherwise, sets residual_is_zero=0.</p><p id="p-0668" num="0663">When residual_is_zero is 1 (Yes in S<b>10802</b>), the three-dimensional encoding device ends the processing. On the other hand, when residual_is_zero is 0 (No in S<b>10802</b>), the three-dimensional encoding device determines whether pred_mode is not 0 (S<b>10803</b>). For example, pred_mode=0 means that prediction is not used (the predicted value=0).</p><p id="p-0669" num="0664">When pred_mode is not 0 (Yes in S<b>10803</b>), the three-dimensional encoding device encodes residual_sign (S<b>10804</b>). That is, the three-dimensional encoding device adds residual_sign to a bitstream. On the other hand, when pred_mode is 0 (No in S<b>10803</b>), the three-dimensional encoding device does not encode residual_sign. That is, the three-dimensional encoding device does not add residual_sign to the bitstream.</p><p id="p-0670" num="0665">Next, the three-dimensional encoding device calculates residual_value=abs (residual_value)&#x2212;1 (S<b>10805</b>). Here, abs(x) represents the absolute value of x. That is, the three-dimensional encoding device calculates the value obtained by subtracting 1 from the absolute value of a prediction residual. Note that, since it is indicated that the prediction residual is not zero by residual_is_zero=0, the residual data need not indicate the prediction residual=0, the code amount can thus be reduced by subtracting 1 in the above.</p><p id="p-0671" num="0666">Next, the three-dimensional encoding device calculates residual_bitcount=1+i log 2 (residual_value) (S<b>10806</b>). Here, i log 2(x) represents an integer value of log 2(x) rounded down to the nearest whole number. Additionally, residual_bitcount represents the bit count of residual data (residual_bit [k]).</p><p id="p-0672" num="0667">Next, the three-dimensional encoding device encodes residual_bitcount (S<b>10807</b>). That is, the three-dimensional encoding device adds residual_bitcount to the bitstream.</p><p id="p-0673" num="0668">Next, the three-dimensional encoding device sets residual_bitcount=residual_bitcount&#x2212;1 (S<b>10808</b>). That is, the three-dimensional encoding device subtracts 1 from residual_bitcount. This is because the case where the most significant bit becomes zero is excluded. For example, when the bit count is 8 (values 0 to 256), since the case where the bit count is 7 (values 0 to 127) is excluded, the range of values that can be taken is 128 to 255, and this range can be represented with 7 bits.</p><p id="p-0674" num="0669">Next, the three-dimensional encoding device initializes k to 0 (S<b>10809</b>). When k&#x3c;residual_bitcount is satisfied (Yes in S<b>10810</b>), the three-dimensional encoding device calculates residual_bit[k]=((residual_value&#x3e;&#x3e;k) &#x26; 1) (S<b>10811</b>). That is, the three-dimensional encoding device calculates the value (0 or 1) of the k-th bit of residual data. Next, the three-dimensional encoding device encodes residual_bit [k] (S<b>10812</b>). That is, the three-dimensional encoding device adds residual_bit [k] to the bitstream.</p><p id="p-0675" num="0670">Next, the three-dimensional encoding device sets k=k+1 (S<b>10813</b>). That is, the three-dimensional encoding device increments k by 1. Additionally, the three-dimensional encoding device performs the processing from S<b>10810</b> onward on the next bit. That is, residual_bit [k] of residual_bitcount bits is sequentially generated.</p><p id="p-0676" num="0671">On the other hand, when k&#x3c;residual_bitcount is not satisfied (No in S<b>10810</b>), that is, when residual_bit [k] of all the bits has been encoded, the three-dimensional encoding device ends the processing.</p><p id="p-0677" num="0672"><figref idref="DRAWINGS">FIG. <b>93</b></figref> is a flowchart of decoding processing of prediction residual (residual_value) by the three-dimensional decoding device. <figref idref="DRAWINGS">FIG. <b>93</b></figref> illustrates a flow of the decoding processing of the prediction residual of any one component of geometry information (x, y, z). That is, the processing illustrated in <figref idref="DRAWINGS">FIG. <b>93</b></figref> is repeatedly performed for each component.</p><p id="p-0678" num="0673">First, the three-dimensional decoding device decodes residual_is_zero from a bitstream (S<b>10821</b>). That is, the three-dimensional decoding device obtains residual_is_zero from a bitstream.</p><p id="p-0679" num="0674">When residual_is_zero is 1 (Yes in S<b>10822</b>), the three-dimensional decoding device sets the prediction residual (residual_value) to 0 (S<b>10823</b>), and ends the processing.</p><p id="p-0680" num="0675">On the other hand, when residual_is_zero is 0 (No in S<b>10822</b>), the three-dimensional decoding device obtains (decodes) pred_mode from the bitstream, and determines whether the obtained pred_mode is not 0 (S<b>10824</b>).</p><p id="p-0681" num="0676">When pred_mode is not zero (Yes in S<b>10824</b>), the three-dimensional decoding device decodes residual_sign from the bitstream (S<b>10825</b>). That is, the three-dimensional decoding device obtains residual_sign from the bitstream.</p><p id="p-0682" num="0677">When pred_mode is zero (No in S<b>10824</b>), the three-dimensional decoding device sets residual_sign to zero (S<b>10826</b>). That is, the three-dimensional decoding device considers that the value of residual_sign is zero.</p><p id="p-0683" num="0678">Next, the three-dimensional decoding device decodes residual_bitcount from the bitstream (S<b>10827</b>). That is, the three-dimensional decoding device obtains residual_bitcount from the bitstream.</p><p id="p-0684" num="0679">Next, the three-dimensional decoding device sets residual_bitcount=residual_bitcount&#x2212;1 (S<b>10828</b>). That is, the three-dimensional decoding device subtracts 1 from residual_bitcount. This is performed with a similar intention to that in S<b>10808</b> illustrated in <figref idref="DRAWINGS">FIG. <b>92</b></figref>.</p><p id="p-0685" num="0680">Next, the three-dimensional decoding device determines whether residual_bitcount&#x3c;1 is satisfied (S<b>10829</b>). That is, the three-dimensional decoding device determines whether residual_bitcount is 0.</p><p id="p-0686" num="0681">Here, when the decoded residual_bitcount has the value 1, residual_bitcount after subtracting 1 in step S<b>10828</b> has the value 0. Therefore, in this case, residual_bitcount&#x3c;1 is satisfied (Yes in S<b>10829</b>), and the three-dimensional decoding device sets the prediction residual (residual_value) to residual_bitcount+1 (S<b>10830</b>). That is, residual_value=0+1=1.</p><p id="p-0687" num="0682">Additionally, when the decoded residual_bitcount has the value 0, residual_bitcount after subtracting 1 in step S<b>10828</b> has the value&#x2212;1. Therefore, in this case, residual_bitcount&#x3c;1 is satisfied (Yes in S<b>10829</b>), and the three-dimensional decoding device sets the prediction residual (residual_value) to residual_bitcount+1 (S<b>10830</b>). That is, residual_value=&#x2212;1+1=0.</p><p id="p-0688" num="0683">That is, when residual_value=0 or 1, the value is determined by the value of the decoded residual_bitcount.</p><p id="p-0689" num="0684">On the other hand, when residual_bitcount&#x3c;1 is not satisfied (No in S<b>10829</b>). the three-dimensional decoding device performs initialization. Specifically, the three-dimensional decoding device sets k=0, and residual_value=1&#x3c;&#x3c;residual_bitcount (S<b>10831</b>).</p><p id="p-0690" num="0685">Next, the three-dimensional decoding device decodes residual_bit [k] from the bitstream (S<b>10832</b>). That is, the three-dimensional decoding device obtains residual_bit [k] from the bitstream.</p><p id="p-0691" num="0686">Next, the three-dimensional decoding device calculates residual_value+=residual_bit[k]&#x3c;&#x3c;k (S<b>10833</b>). That is, the three-dimensional decoding device adds the value corresponding to the k-th bit of the residual data to the prediction residual (residual_value).</p><p id="p-0692" num="0687">Next, the three-dimensional decoding device sets k=k+1 (S<b>10834</b>). That is, the three-dimensional decoding device increments k by 1. When k&#x3c;residual_bitcount is satisfied (Yes in S<b>10835</b>), the processing of S<b>10832</b> to S<b>10834</b> is performed on the next bit. That is, residual_bit [k] of residual_bitcount bits is sequentially processed.</p><p id="p-0693" num="0688">On the other hand, when k&#x3c;residual_bitcount is not satisfied (No in S<b>10835</b>), that is, when residual_bit [k] of all the bits has been decoded, the three-dimensional decoding device sets residual_value=residual_value+1. That is, the three-dimensional decoding device adds 1 to residual_value (S<b>10836</b>). This processing is the processing corresponding to step S<b>10805</b> illustrated in <figref idref="DRAWINGS">FIG. <b>92</b></figref>, and is the processing for restoring the value obtained by subtracting 1 in step S<b>10805</b>.</p><p id="p-0694" num="0689">Next, the three-dimensional decoding device determines whether residual_sign that is obtained in step S<b>10825</b>, or that is set in step S<b>10826</b> is 1 (S<b>10837</b>). Here, residual_sign=1 indicates that, for example, the prediction residual is negative.</p><p id="p-0695" num="0690">When residual_sign is 1 (Yes in S<b>10837</b>), the three-dimensional decoding device calculates residual_value=(&#x2212;1)*residual_value (S<b>10838</b>). From the above, the prediction residual is decoded from the bitstream.</p><p id="p-0696" num="0691"><figref idref="DRAWINGS">FIG. <b>94</b></figref> is a flowchart of encoding processing (S<b>10807</b>) of residual_bitcount. <figref idref="DRAWINGS">FIG. <b>94</b></figref> illustrates a flow of the encoding processing of residual_bitcount of any one component of geometry information (x, y, z).</p><p id="p-0697" num="0692">First, the three-dimensional encoding device calculates numbitcount=1+i log 2 (geo_bit_depth&#x2212;1) (S<b>10841</b>). Here, i log 2(x) represents an integer value of log 2(x) rounded down to the nearest whole number.</p><p id="p-0698" num="0693">Additionally, as geo_bit_depth, for example, geo_bit_depth [0] may be used in the case of x, geo_bit_depth [1] may be used in the case of y, and geo_bit_depth [2] may be used in the case of z.</p><p id="p-0699" num="0694">Additionally, the three-dimensional encoding device may add numbitcount calculated from geo_bit_depth to a header of a slice, etc.</p><p id="p-0700" num="0695">Accordingly, the three-dimensional decoding device can obtain numbitcount by decoding the header. Accordingly, since the three-dimensional decoding device need not calculate numbitcount from geo_bit_depth, the processing amount can be reduced.</p><p id="p-0701" num="0696">Next, the three-dimensional encoding device initializes k to 0 (S<b>10842</b>). Next, the three-dimensional encoding device calculates bitcount[k]=((residual_bitcount&#x3e;&#x3e;k) &#x26; 1) (S<b>10843</b>). That is, the three-dimensional encoding device calculates the value (0 or 1) of the k-th bit of bitcount from residual_bitcount. Next, the three-dimensional encoding device encodes bitcount [k] (S<b>10844</b>). That is, the three-dimensional encoding device adds bitcount [k] to the bitstream.</p><p id="p-0702" num="0697">Next, the three-dimensional encoding device sets k=k+1 (S<b>10845</b>). That is, the three-dimensional encoding device increments k by 1.</p><p id="p-0703" num="0698">When k&#x3c;numbitcount is satisfied (Yes in S<b>10846</b>), the processing of S<b>10843</b> to S<b>10845</b> is performed on the next bit. That is, bitcount [k] of numbitcount bits is sequentially generated.</p><p id="p-0704" num="0699">On the other hand, when k&#x3c;numbitcount is not satisfied (No in S<b>10846</b>), that is, when bitcount [k] of all the bits has been encoded, the three-dimensional encoding device ends the processing.</p><p id="p-0705" num="0700"><figref idref="DRAWINGS">FIG. <b>95</b></figref> is a flowchart of the decoding processing (S<b>10827</b>) of residual_bitcount. <figref idref="DRAWINGS">FIG. <b>95</b></figref> illustrates a flow of the decoding processing of residual_bitcount of any one component of geometry information (x, y, z).</p><p id="p-0706" num="0701">First, the three-dimensional decoding device calculates numbitcount=1+i log 2 (geo_bit_depth&#x2212;1) (S<b>10851</b>). Additionally, as geo_bit_depth, for example, geo_bit_depth [0] may be used in the case of x, geo_bit_depth [1] may be used in the case of y, and geo_bit_depth [2] may be used in the case of z.</p><p id="p-0707" num="0702">Additionally, when numbitcount is added to the header, the three-dimensional decoding device may decode (obtain) numbitcount from the header, and use the obtained numbitcount. Accordingly, the three-dimensional decoding device need not calculate numbitcount from geo_bit_depth, and the processing amount can be reduced.</p><p id="p-0708" num="0703">Next, the three-dimensional decoding device initializes k and residual_bitcount to zero (S<b>10852</b>). Next, the three-dimensional decoding device decodes bitcount [k] from the bitstream (S<b>10853</b>). That is, the three-dimensional decoding device obtains bitcount [k] from the bitstream.</p><p id="p-0709" num="0704">Next, the three-dimensional decoding device calculates residual_bitcount+=bitcount[k]&#x3c;&#x3c;k (S<b>10854</b>). That is, the three-dimensional decoding device adds the value corresponding to the k-th bit of bitcount to residual_bitcount.</p><p id="p-0710" num="0705">Next, the three-dimensional decoding device sets k=k+1 (S<b>10855</b>). That is, the three-dimensional decoding device increments k by 1. When k&#x3c;numbitcount is satisfied (Yes in S<b>10856</b>), the processing of S<b>10853</b> to S<b>10855</b> is performed on the next bit. That is, bitcount [k] of k bits is sequentially processed.</p><p id="p-0711" num="0706">On the other hand, when k&#x3c;numbitcount is not satisfied (No in S<b>10856</b>), that is, when bitcount [k] of all the bits has been decoded, the three-dimensional decoding device ends the processing.</p><p id="p-0712" num="0707">As described above, the three-dimensional data encoding device according to the present embodiment performs the process shown in <figref idref="DRAWINGS">FIG. <b>96</b></figref>. The three-dimensional data encoding device calculates a prediction residual that is a difference between information (e.g., at least one of geometry information or attribute information) of a three-dimensional point included in point cloud data and a predicted value (S<b>10861</b>); and generates a bitstream including first information (e.g., residual_bit[k]) indicating the prediction residual, second information (e.g., bitcount[k]) indicating a bit count of the first information, and third information (e.g., numbitcount) indicating a bit count of the second information (S<b>10862</b>).</p><p id="p-0713" num="0708">According to this, since the three-dimensional data encoding device can adaptively change the bit count of the first information indicating the prediction residual, and the bit count of the second information indicating the bit count of the first information, the coding efficiency can be improved.</p><p id="p-0714" num="0709">For example, the information of the three-dimensional point is geometry information of the three-dimensional point, and in the calculating, the three-dimensional data encoding device calculates the predicted value using a prediction tree indicating a reference relation.</p><p id="p-0715" num="0710">For example, the geometry information includes components (e.g., x, y, z), in the calculating, the three-dimensional data encoding device calculates the prediction residual for each of the components, and the bitstream includes, for each of the components, the first information, the second information, and the third information.</p><p id="p-0716" num="0711">According to this, since the three-dimensional data encoding device can adaptively change the bit count of first information, and the bit count of the second information for each component of geometry information, the coding efficiency can be improved.</p><p id="p-0717" num="0712">For example, the third information is provided for each of processing units (e.g., slices) including three-dimensional points. For example, the first information indicates a bit count obtained by subtracting one from the bit count indicated in the second information.</p><p id="p-0718" num="0713">For example, the bitstream further includes fourth information (e.g., residual_is_zero) indicating whether the prediction residual is zero, and fifth information (e.g., residual_sign) indicating whether the prediction residual is positive or negative, and the first information (residual_bit[k]) indicates a value obtained by subtracting one from an absolute value of the prediction residual.</p><p id="p-0719" num="0714">For example, the three-dimensional data encoding device includes a processor and memory, and the processor performs the above process using the memory.</p><p id="p-0720" num="0715">The three-dimensional data decoding device according to the present embodiment performs the process shown in <figref idref="DRAWINGS">FIG. <b>97</b></figref>. The three-dimensional data decoding device obtains, from a bitstream, first information (e.g., residual_bit[k]) indicating a prediction residual, second information (e.g., bitcount[k]) indicating a bit count of the first information, and third information (e.g., numbitcount) indicating a bit count of the second information, the prediction residual being a difference between information (e.g., at least one of geometry information or attribute information) of a three-dimensional point included in point cloud data and a predicted value (S<b>10871</b>); and calculates the information of the three-dimensional point by adding the predicted value to the prediction residual indicated in the first information, using the first information, the second information, and the third information (S<b>10872</b>).</p><p id="p-0721" num="0716">According to this, the three-dimensional data decoding device can decode a bitstream whose coding efficiency has been improved.</p><p id="p-0722" num="0717">For example, the information of the three-dimensional point is geometry information of the three-dimensional point, and in the calculating, the three-dimensional data decoding device calculates the predicted value using a prediction tree indicating a reference relation.</p><p id="p-0723" num="0718">For example, the geometry information includes components (e.g., x, y, z), the bitstream includes, for each of the components, the first information, the second information, and the third information, and in the calculating, the three-dimensional data decoding device calculates each of the components of the geometry information using the first information, the second information, and the third information.</p><p id="p-0724" num="0719">For example, the third information is provided for each of processing units (e.g., slices) including three-dimensional points. For example, the first information indicates a bit count obtained by subtracting one from the bit count indicated in the second information.</p><p id="p-0725" num="0720">For example, the bitstream further includes fourth information (e.g., residual_is_zero) indicating whether the prediction residual is zero, and fifth information (e.g., residual_sign) indicating whether the prediction residual is positive or negative, and the first information (residual_bit[k]) indicates a value obtained by subtracting one from an absolute value of the prediction residual.</p><p id="p-0726" num="0721">For example, the three-dimensional data decoding device includes a processor and memory, and the processor performs the above process using the memory.</p><heading id="h-0014" level="1">Embodiment 7</heading><p id="p-0727" num="0722">The following describes the structure of three-dimensional data creation device <b>810</b> according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>98</b></figref> is a block diagram of an exemplary structure of three-dimensional data creation device <b>810</b> according to the present embodiment. Such three-dimensional data creation device <b>810</b> is equipped, for example, in a vehicle. Three-dimensional data creation device <b>810</b> transmits and receives three-dimensional data to and from an external cloud-based traffic monitoring system, a preceding vehicle, or a following vehicle, and creates and stores three-dimensional data.</p><p id="p-0728" num="0723">Three-dimensional data creation device <b>810</b> includes data receiver <b>811</b>, communication unit <b>812</b>, reception controller <b>813</b>, format converter <b>814</b>, a plurality of sensors <b>815</b>, three-dimensional data creator <b>816</b>, three-dimensional data synthesizer <b>817</b>, three-dimensional data storage <b>818</b>, communication unit <b>819</b>, transmission controller <b>820</b>, format converter <b>821</b>, and data transmitter <b>822</b>.</p><p id="p-0729" num="0724">Data receiver <b>811</b> receives three-dimensional data <b>831</b> from a cloud-based traffic monitoring system or a preceding vehicle. Three-dimensional data <b>831</b> includes, for example, information on a region undetectable by sensors <b>815</b> of the own vehicle, such as a point cloud, visible light video, depth information, sensor position information, and speed information.</p><p id="p-0730" num="0725">Communication unit <b>812</b> communicates with the cloud-based traffic monitoring system or the preceding vehicle to transmit a data transmission request, etc. to the cloud-based traffic monitoring system or the preceding vehicle.</p><p id="p-0731" num="0726">Reception controller <b>813</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>812</b> to establish communication with the communications partner.</p><p id="p-0732" num="0727">Format converter <b>814</b> applies format conversion. etc. on three-dimensional data <b>831</b> received by data receiver <b>811</b> to generate three-dimensional data <b>832</b>. Format converter <b>814</b> also decompresses or decodes three-dimensional data <b>831</b> when three-dimensional data <b>831</b> is compressed or encoded.</p><p id="p-0733" num="0728">A plurality of sensors <b>815</b> are a group of sensors, such as visible light cameras and infrared cameras, that obtain information on the outside of the vehicle and generate sensor information <b>833</b>. Sensor information <b>833</b> is, for example, three-dimensional data such as a point cloud (point group data), when sensors <b>815</b> are laser sensors such as LiDARs. Note that a single sensor may serve as a plurality of sensors <b>815</b>.</p><p id="p-0734" num="0729">Three-dimensional data creator <b>816</b> generates three-dimensional data <b>834</b> from sensor information <b>833</b>. Three-dimensional data <b>834</b> includes, for example, information such as a point cloud, visible light video, depth information, sensor position information, and speed information.</p><p id="p-0735" num="0730">Three-dimensional data synthesizer <b>817</b> synthesizes three-dimensional data <b>834</b> created on the basis of sensor information <b>833</b> of the own vehicle with three-dimensional data <b>832</b> created by the cloud-based traffic monitoring system or the preceding vehicle, etc., thereby forming three-dimensional data <b>835</b> of a space that includes the space ahead of the preceding vehicle undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0736" num="0731">Three-dimensional data storage <b>818</b> stores generated three-dimensional data <b>835</b>, etc.</p><p id="p-0737" num="0732">Communication unit <b>819</b> communicates with the cloud-based traffic monitoring system or the following vehicle to transmit a data transmission request, etc. to the cloud-based traffic monitoring system or the following vehicle.</p><p id="p-0738" num="0733">Transmission controller <b>820</b> exchanges information such as information on supported formats with a communications partner via communication unit <b>819</b> to establish communication with the communications partner. Transmission controller <b>820</b> also determines a transmission region, which is a space of the three-dimensional data to be transmitted, on the basis of three-dimensional data formation information on three-dimensional data <b>832</b> generated by three-dimensional data synthesizer <b>817</b> and the data transmission request from the communications partner.</p><p id="p-0739" num="0734">More specifically, transmission controller <b>820</b> determines a transmission region that includes the space ahead of the own vehicle undetectable by a sensor of the following vehicle, in response to the data transmission request from the cloud-based traffic monitoring system or the following vehicle. Transmission controller <b>820</b> judges, for example, whether a space is transmittable or whether the already transmitted space includes an update, on the basis of the three-dimensional data formation information to determine a transmission region. For example, transmission controller <b>820</b> determines, as a transmission region, a region that is: a region specified by the data transmission request; and a region, corresponding three-dimensional data <b>835</b> of which is present. Transmission controller <b>820</b> then notifies format converter <b>821</b> of the format supported by the communications partner and the transmission region.</p><p id="p-0740" num="0735">Of three-dimensional data <b>835</b> stored in three-dimensional data storage <b>818</b>, format converter <b>821</b> converts three-dimensional data <b>836</b> of the transmission region into the format supported by the receiver end to generate three-dimensional data <b>837</b>. Note that format converter <b>821</b> may compress or encode three-dimensional data <b>837</b> to reduce the data amount.</p><p id="p-0741" num="0736">Data transmitter <b>822</b> transmits three-dimensional data <b>837</b> to the cloud-based traffic monitoring system or the following vehicle. Such three-dimensional data <b>837</b> includes, for example, information on a blind spot, which is a region hidden from view of the following vehicle, such as a point cloud ahead of the own vehicle, visible light video, depth information, and sensor position information.</p><p id="p-0742" num="0737">Note that an example has been described in which format converter <b>814</b> and format converter <b>821</b> perform format conversion, etc., but format conversion may not be performed.</p><p id="p-0743" num="0738">With the above structure, three-dimensional data creation device <b>810</b> obtains, from an external device, three-dimensional data <b>831</b> of a region undetectable by sensors <b>815</b> of the own vehicle, and synthesizes three-dimensional data <b>831</b> with three-dimensional data <b>834</b> that is based on sensor information <b>833</b> detected by sensors <b>815</b> of the own vehicle, thereby generating three-dimensional data <b>835</b>. Three-dimensional data creation device <b>810</b> is thus capable of generating three-dimensional data of a range undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0744" num="0739">Three-dimensional data creation device <b>810</b> is also capable of transmitting, to the cloud-based traffic monitoring system or the following vehicle, etc., three-dimensional data of a space that includes the space ahead of the own vehicle undetectable by a sensor of the following vehicle, in response to the data transmission request from the cloud-based traffic monitoring system or the following vehicle.</p><p id="p-0745" num="0740">The following describes the steps performed by three-dimensional data creation device <b>810</b> of transmitting three-dimensional data to a following vehicle.</p><p id="p-0746" num="0741"><figref idref="DRAWINGS">FIG. <b>99</b></figref> is a flowchart showing exemplary steps performed by three-dimensional data creation device <b>810</b> of transmitting three-dimensional data to a cloud-based traffic monitoring system or a following vehicle.</p><p id="p-0747" num="0742">First, three-dimensional data creation device <b>810</b> generates and updates three-dimensional data <b>835</b> of a space that includes space on the road ahead of the own vehicle (S<b>801</b>). More specifically, three-dimensional data creation device <b>810</b> synthesizes three-dimensional data <b>834</b> created on the basis of sensor information <b>833</b> of the own vehicle with three-dimensional data <b>831</b> created by the cloud-based traffic monitoring system or the preceding vehicle, etc., for example, thereby forming three-dimensional data <b>835</b> of a space that also includes the space ahead of the preceding vehicle undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0748" num="0743">Three-dimensional data creation device <b>810</b> then judges whether any change has occurred in three-dimensional data <b>835</b> of the space included in the space already transmitted (S<b>802</b>).</p><p id="p-0749" num="0744">When a change has occurred in three-dimensional data <b>835</b> of the space included in the space already transmitted due to, for example, a vehicle or a person entering such space from outside (Yes in S<b>802</b>), three-dimensional data creation device <b>810</b> transmits, to the cloud-based traffic monitoring system or the following vehicle, the three-dimensional data that includes three-dimensional data <b>835</b> of the space in which the change has occurred (S<b>803</b>).</p><p id="p-0750" num="0745">Three-dimensional data creation device <b>810</b> may transmit three-dimensional data in which a change has occurred, at the same timing of transmitting three-dimensional data that is transmitted at a predetermined time interval, or may transmit three-dimensional data in which a change has occurred soon after the detection of such change. Stated differently, three-dimensional data creation device <b>810</b> may prioritize the transmission of three-dimensional data of the space in which a change has occurred to the transmission of three-dimensional data that is transmitted at a predetermined time interval.</p><p id="p-0751" num="0746">Also, three-dimensional data creation device <b>810</b> may transmit, as three-dimensional data of a space in which a change has occurred, the whole three-dimensional data of the space in which such change has occurred, or may transmit only a difference in the three-dimensional data (e.g., information on three-dimensional points that have appeared or vanished, or information on the displacement of three-dimensional points).</p><p id="p-0752" num="0747">Three-dimensional data creation device <b>810</b> may also transmit, to the following vehicle, meta-data on a risk avoidance behavior of the own vehicle such as hard breaking warning, before transmitting three-dimensional data of the space in which a change has occurred. This enables the following vehicle to recognize at an early stage that the preceding vehicle is to perform hard braking, etc., and thus to start performing a risk avoidance behavior at an early stage such as speed reduction.</p><p id="p-0753" num="0748">When no change has occurred in three-dimensional data <b>835</b> of the space included in the space already transmitted (No in S<b>802</b>), or after step S<b>803</b>, three-dimensional data creation device <b>810</b> transmits, to the cloud-based traffic monitoring system or the following vehicle, three-dimensional data of the space included in the space having a predetermined shape and located ahead of the own vehicle by distance L (S<b>804</b>).</p><p id="p-0754" num="0749">The processes of step S<b>801</b> through step S<b>804</b> are repeated, for example at a predetermined time interval.</p><p id="p-0755" num="0750">When three-dimensional data <b>835</b> of the current space to be transmitted includes no difference from the three-dimensional map, three-dimensional data creation device <b>810</b> may not transmit three-dimensional data <b>837</b> of the space.</p><p id="p-0756" num="0751">In the present embodiment, a client device transmits sensor information obtained through a sensor to a server or another client device.</p><p id="p-0757" num="0752">A structure of a system according to the present embodiment will first be described. <figref idref="DRAWINGS">FIG. <b>100</b></figref> is a diagram showing the structure of a transmission/reception system of a three-dimensional map and sensor information according to the present embodiment. This system includes server <b>901</b>, and client devices <b>902</b>A and <b>902</b>B. Note that client devices <b>902</b>A and <b>902</b>B are also referred to as client device <b>902</b> when no particular distinction is made therebetween.</p><p id="p-0758" num="0753">Client device <b>902</b> is, for example, a vehicle-mounted device equipped in a mobile object such as a vehicle. Server <b>901</b> is, for example, a cloud-based traffic monitoring system, and is capable of communicating with the plurality of client devices <b>902</b>.</p><p id="p-0759" num="0754">Server <b>901</b> transmits the three-dimensional map formed by a point cloud to client device <b>902</b>. Note that a structure of the three-dimensional map is not limited to a point cloud, and may also be another structure expressing three-dimensional data such as a mesh structure.</p><p id="p-0760" num="0755">Client device <b>902</b> transmits the sensor information obtained by client device <b>902</b> to server <b>901</b>. The sensor information includes, for example, at least one of information obtained by LiDAR, a visible light image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0761" num="0756">The data to be transmitted and received between server <b>901</b> and client device <b>902</b> may be compressed in order to reduce data volume, and may also be transmitted uncompressed in order to maintain data precision. When compressing the data, it is possible to use a three-dimensional compression method on the point cloud based on, for example, an octree structure. It is possible to use a two-dimensional image compression method on the visible light image, the infrared image, and the depth image. The two-dimensional image compression method is, for example, MPEG-4 AVC or HEVC standardized by MPEG.</p><p id="p-0762" num="0757">Server <b>901</b> transmits the three-dimensional map managed by server <b>901</b> to client device <b>902</b> in response to a transmission request for the three-dimensional map from client device <b>902</b>. Note that server <b>901</b> may also transmit the three-dimensional map without waiting for the transmission request for the three-dimensional map from client device <b>902</b>. For example, server <b>901</b> may broadcast the three-dimensional map to at least one client device <b>902</b> located in a predetermined space. Server <b>901</b> may also transmit the three-dimensional map suited to a position of client device <b>902</b> at fixed time intervals to client device <b>902</b> that has received the transmission request once. Server <b>901</b> may also transmit the three-dimensional map managed by server <b>901</b> to client device <b>902</b> every time the three-dimensional map is updated.</p><p id="p-0763" num="0758">Client device <b>902</b> sends the transmission request for the three-dimensional map to server <b>901</b>. For example, when client device <b>902</b> wants to perform the self-location estimation during traveling, client device <b>902</b> transmits the transmission request for the three-dimensional map to server <b>901</b>.</p><p id="p-0764" num="0759">Note that in the following cases, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b>. Client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when the three-dimensional map stored by client device <b>902</b> is old. For example, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when a fixed period has passed since the three-dimensional map is obtained by client device <b>902</b>.</p><p id="p-0765" num="0760">Client device <b>902</b> may also send the transmission request for the three-dimensional map to server <b>901</b> before a fixed time when client device <b>902</b> exits a space shown in the three-dimensional map stored by client device <b>902</b>. For example, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when client device <b>902</b> is located within a predetermined distance from a boundary of the space shown in the three-dimensional map stored by client device <b>902</b>. When a movement path and a movement speed of client device <b>902</b> are understood, a time when client device <b>902</b> exits the space shown in the three-dimensional map stored by client device <b>902</b> may be predicted based on the movement path and the movement speed of client device <b>902</b>.</p><p id="p-0766" num="0761">Client device <b>902</b> may also send the transmission request for the three-dimensional map to server <b>901</b> when an error during alignment of the three-dimensional data and the three-dimensional map created from the sensor information by client device <b>902</b> is at least at a fixed level.</p><p id="p-0767" num="0762">Client device <b>902</b> transmits the sensor information to server <b>901</b> in response to a transmission request for the sensor information from server <b>901</b>. Note that client device <b>902</b> may transmit the sensor information to server <b>901</b> without waiting for the transmission request for the sensor information from server <b>901</b>. For example, client device <b>902</b> may periodically transmit the sensor information during a fixed period when client device <b>902</b> has received the transmission request for the sensor information from server <b>901</b> once. Client device <b>902</b> may determine that there is a possibility of a change in the three-dimensional map of a surrounding area of client device <b>902</b> having occurred, and transmit this information and the sensor information to server <b>901</b>, when the error during alignment of the three-dimensional data created by client device <b>902</b> based on the sensor information and the three-dimensional map obtained from server <b>901</b> is at least at the fixed level.</p><p id="p-0768" num="0763">Server <b>901</b> sends a transmission request for the sensor information to client device <b>902</b>. For example, server <b>901</b> receives position information, such as GPS information, about client device <b>902</b> from client device <b>902</b>. Server <b>901</b> sends the transmission request for the sensor information to client device <b>902</b> in order to generate a new three-dimensional map, when it is determined that client device <b>902</b> is approaching a space in which the three-dimensional map managed by server <b>901</b> contains little information, based on the position information about client device <b>902</b>. Server <b>901</b> may also send the transmission request for the sensor information, when wanting to (i) update the three-dimensional map, (ii) check road conditions during snowfall, a disaster, or the like, or (iii) check traffic congestion conditions, accident/incident conditions, or the like.</p><p id="p-0769" num="0764">Client device <b>902</b> may set an amount of data of the sensor information to be transmitted to server <b>901</b> in accordance with communication conditions or bandwidth during reception of the transmission request for the sensor information to be received from server <b>901</b>. Setting the amount of data of the sensor information to be transmitted to server <b>901</b> is, for example, increasing/reducing the data itself or appropriately selecting a compression method.</p><p id="p-0770" num="0765"><figref idref="DRAWINGS">FIG. <b>101</b></figref> is a block diagram showing an example structure of client device <b>902</b>. Client device <b>902</b> receives the three-dimensional map formed by a point cloud and the like from server <b>901</b>, and estimates a self-location of client device <b>902</b> using the three-dimensional map created based on the sensor information of client device <b>902</b>. Client device <b>902</b> transmits the obtained sensor information to server <b>901</b>.</p><p id="p-0771" num="0766">Client device <b>902</b> includes data receiver <b>1011</b>, communication unit <b>1012</b>, reception controller <b>1013</b>, format converter <b>1014</b>, sensors <b>1015</b>, three-dimensional data creator <b>1016</b>, three-dimensional image processor <b>1017</b>, three-dimensional data storage <b>1018</b>, format converter <b>1019</b>, communication unit <b>1020</b>, transmission controller <b>1021</b>, and data transmitter <b>1022</b>.</p><p id="p-0772" num="0767">Data receiver <b>1011</b> receives three-dimensional map <b>1031</b> from server <b>901</b>. Three-dimensional map <b>1031</b> is data that includes a point cloud such as a WLD or a SWLD. Three-dimensional map <b>1031</b> may include compressed data or uncompressed data.</p><p id="p-0773" num="0768">Communication unit <b>1012</b> communicates with server <b>901</b> and transmits a data transmission request (e.g., transmission request for three-dimensional map) to server <b>901</b>.</p><p id="p-0774" num="0769">Reception controller <b>1013</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1012</b> to establish communication with the communications partner.</p><p id="p-0775" num="0770">Format converter <b>1014</b> performs a format conversion and the like on three-dimensional map <b>1031</b> received by data receiver <b>1011</b> to generate three-dimensional map <b>1032</b>. Format converter <b>1014</b> also performs a decompression or decoding process when three-dimensional map <b>1031</b> is compressed or encoded. Note that format converter <b>1014</b> does not perform the decompression or decoding process when three-dimensional map <b>1031</b> is uncompressed data.</p><p id="p-0776" num="0771">Sensors <b>1015</b> are a group of sensors, such as LiDARs, visible light cameras, infrared cameras, or depth sensors that obtain information about the outside of a vehicle equipped with client device <b>902</b>, and generate sensor information <b>1033</b>. Sensor information <b>1033</b> is, for example, three-dimensional data such as a point cloud (point group data) when sensors <b>1015</b> are laser sensors such as LiDARs. Note that a single sensor may serve as sensors <b>1015</b>.</p><p id="p-0777" num="0772">Three-dimensional data creator <b>1016</b> generates three-dimensional data <b>1034</b> of a surrounding area of the own vehicle based on sensor information <b>1033</b>. For example, three-dimensional data creator <b>1016</b> generates point cloud data with color information on the surrounding area of the own vehicle using information obtained by LiDAR and visible light video obtained by a visible light camera.</p><p id="p-0778" num="0773">Three-dimensional image processor <b>1017</b> performs a self-location estimation process and the like of the own vehicle, using (i) the received three-dimensional map <b>1032</b> such as a point cloud, and (ii) three-dimensional data <b>1034</b> of the surrounding area of the own vehicle generated using sensor information <b>1033</b>. Note that three-dimensional image processor <b>1017</b> may generate three-dimensional data <b>1035</b> about the surroundings of the own vehicle by merging three-dimensional map <b>1032</b> and three-dimensional data <b>1034</b>, and may perform the self-location estimation process using the created three-dimensional data <b>1035</b>.</p><p id="p-0779" num="0774">Three-dimensional data storage <b>1018</b> stores three-dimensional map <b>1032</b>, three-dimensional data <b>1034</b>, three-dimensional data <b>1035</b>, and the like.</p><p id="p-0780" num="0775">Format converter <b>1019</b> generates sensor information <b>1037</b> by converting sensor information <b>1033</b> to a format supported by a receiver end. Note that format converter <b>1019</b> may reduce the amount of data by compressing or encoding sensor information <b>1037</b>. Format converter <b>1019</b> may omit this process when format conversion is not necessary. Format converter <b>1019</b> may also control the amount of data to be transmitted in accordance with a specified transmission range.</p><p id="p-0781" num="0776">Communication unit <b>1020</b> communicates with server <b>901</b> and receives a data transmission request (transmission request for sensor information) and the like from server <b>901</b>.</p><p id="p-0782" num="0777">Transmission controller <b>1021</b> exchanges information. such as information on supported formats, with a communications partner via communication unit <b>1020</b> to establish communication with the communications partner.</p><p id="p-0783" num="0778">Data transmitter <b>1022</b> transmits sensor information <b>1037</b> to server <b>901</b>. Sensor information <b>1037</b> includes, for example, information obtained through sensors <b>1015</b>, such as information obtained by LiDAR, a luminance image obtained by a visible light camera, an infrared image obtained by an infrared camera, a depth image obtained by a depth sensor, sensor position information, and sensor speed information.</p><p id="p-0784" num="0779">A structure of server <b>901</b> will be described next. <figref idref="DRAWINGS">FIG. <b>102</b></figref> is a block diagram showing an example structure of server <b>901</b>. Server <b>901</b> transmits sensor information from client device <b>902</b> and creates three-dimensional data based on the received sensor information. Server <b>901</b> updates the three-dimensional map managed by server <b>901</b> using the created three-dimensional data. Server <b>901</b> transmits the updated three-dimensional map to client device <b>902</b> in response to a transmission request for the three-dimensional map from client device <b>902</b>.</p><p id="p-0785" num="0780">Server <b>901</b> includes data receiver <b>1111</b>, communication unit <b>1112</b>, reception controller <b>1113</b>, format converter <b>1114</b>, three-dimensional data creator <b>1116</b>, three-dimensional data merger <b>1117</b>, three-dimensional data storage <b>1118</b>, format converter <b>1119</b>, communication unit <b>1120</b>, transmission controller <b>1121</b>, and data transmitter <b>1122</b>.</p><p id="p-0786" num="0781">Data receiver <b>1111</b> receives sensor information <b>1037</b> from client device <b>902</b>. Sensor information <b>1037</b> includes, for example, information obtained by LiDAR, a luminance image obtained by a visible light camera, an infrared image obtained by an infrared camera, a depth image obtained by a depth sensor, sensor position information, sensor speed information, and the like.</p><p id="p-0787" num="0782">Communication unit <b>1112</b> communicates with client device <b>902</b> and transmits a data transmission request (e.g., transmission request for sensor information) and the like to client device <b>902</b>.</p><p id="p-0788" num="0783">Reception controller <b>1113</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1112</b> to establish communication with the communications partner.</p><p id="p-0789" num="0784">Format converter <b>1114</b> generates sensor information <b>1132</b> by performing a decompression or decoding process when received sensor information <b>1037</b> is compressed or encoded. Note that format converter <b>1114</b> does not perform the decompression or decoding process when sensor information <b>1037</b> is uncompressed data.</p><p id="p-0790" num="0785">Three-dimensional data creator <b>1116</b> generates three-dimensional data <b>1134</b> of a surrounding area of client device <b>902</b> based on sensor information <b>1132</b>. For example, three-dimensional data creator <b>1116</b> generates point cloud data with color information on the surrounding area of client device <b>902</b> using information obtained by LiDAR and visible light video obtained by a visible light camera.</p><p id="p-0791" num="0786">Three-dimensional data merger <b>1117</b> updates three-dimensional map <b>1135</b> by merging three-dimensional data <b>1134</b> created based on sensor information <b>1132</b> with three-dimensional map <b>1135</b> managed by server <b>901</b>.</p><p id="p-0792" num="0787">Three-dimensional data storage <b>1118</b> stores three-dimensional map <b>1135</b> and the like.</p><p id="p-0793" num="0788">Format converter <b>1119</b> generates three-dimensional map <b>1031</b> by converting three-dimensional map <b>1135</b> to a format supported by the receiver end. Note that format converter <b>1119</b> may reduce the amount of data by compressing or encoding three-dimensional map <b>1135</b>. Format converter <b>1119</b> may omit this process when format conversion is not necessary. Format converter <b>1119</b> may also control the amount of data to be transmitted in accordance with a specified transmission range.</p><p id="p-0794" num="0789">Communication unit <b>1120</b> communicates with client device <b>902</b> and receives a data transmission request (transmission request for three-dimensional map) and the like from client device <b>902</b>.</p><p id="p-0795" num="0790">Transmission controller <b>1121</b> exchanges information. such as information on supported formats, with a communications partner via communication unit <b>1120</b> to establish communication with the communications partner.</p><p id="p-0796" num="0791">Data transmitter <b>1122</b> transmits three-dimensional map <b>1031</b> to client device <b>902</b>. Three-dimensional map <b>1031</b> is data that includes a point cloud such as a WLD or a SWLD. Three-dimensional map <b>1031</b> may include one of compressed data and uncompressed data.</p><p id="p-0797" num="0792">An operational flow of client device <b>902</b> will be described next. <figref idref="DRAWINGS">FIG. <b>103</b></figref> is a flowchart of an operation when client device <b>902</b> obtains the three-dimensional map.</p><p id="p-0798" num="0793">Client device <b>902</b> first requests server <b>901</b> to transmit the three-dimensional map (point cloud, etc.) (S<b>1001</b>). At this point, by also transmitting the position information about client device <b>902</b> obtained through GPS and the like, client device <b>902</b> may also request server <b>901</b> to transmit a three-dimensional map relating to this position information.</p><p id="p-0799" num="0794">Client device <b>902</b> next receives the three-dimensional map from server <b>901</b> (S<b>1002</b>). When the received three-dimensional map is compressed data, client device <b>902</b> decodes the received three-dimensional map and generates an uncompressed three-dimensional map (S<b>1003</b>).</p><p id="p-0800" num="0795">Client device <b>902</b> next creates three-dimensional data <b>1034</b> of the surrounding area of client device <b>902</b> using sensor information <b>1033</b> obtained by sensors <b>1015</b> (S<b>1004</b>). Client device <b>902</b> next estimates the self-location of client device <b>902</b> using three-dimensional map <b>1032</b> received from server <b>901</b> and three-dimensional data <b>1034</b> created using sensor information <b>1033</b> (S<b>1005</b>).</p><p id="p-0801" num="0796"><figref idref="DRAWINGS">FIG. <b>104</b></figref> is a flowchart of an operation when client device <b>902</b> transmits the sensor information. Client device <b>902</b> first receives a transmission request for the sensor information from server <b>901</b> (S<b>1011</b>). Client device <b>902</b> that has received the transmission request transmits sensor information <b>1037</b> to server <b>901</b> (S<b>1012</b>). Note that client device <b>902</b> may generate sensor information <b>1037</b> by compressing each piece of information using a compression method suited to each piece of information, when sensor information <b>1033</b> includes a plurality of pieces of information obtained by sensors <b>1015</b>.</p><p id="p-0802" num="0797">An operational flow of server <b>901</b> will be described next. <figref idref="DRAWINGS">FIG. <b>105</b></figref> is a flowchart of an operation when server <b>901</b> obtains the sensor information. Server <b>901</b> first requests client device <b>902</b> to transmit the sensor information (S<b>1021</b>). Server <b>901</b> next receives sensor information <b>1037</b> transmitted from client device <b>902</b> in accordance with the request (S<b>1022</b>). Server <b>901</b> next creates three-dimensional data <b>1134</b> using the received sensor information <b>1037</b> (S<b>1023</b>). Server <b>901</b> next reflects the created three-dimensional data <b>1134</b> in three-dimensional map <b>1135</b> (S<b>1024</b>).</p><p id="p-0803" num="0798"><figref idref="DRAWINGS">FIG. <b>106</b></figref> is a flowchart of an operation when server <b>901</b> transmits the three-dimensional map. Server <b>901</b> first receives a transmission request for the three-dimensional map from client device <b>902</b> (S<b>1031</b>). Server <b>901</b> that has received the transmission request for the three-dimensional map transmits the three-dimensional map to client device <b>902</b> (S<b>1032</b>). At this point, server <b>901</b> may extract a three-dimensional map of a vicinity of client device <b>902</b> along with the position information about client device <b>902</b>, and transmit the extracted three-dimensional map. Server <b>901</b> may compress the three-dimensional map formed by a point cloud using, for example, an octree structure compression method, and transmit the compressed three-dimensional map.</p><p id="p-0804" num="0799">The following describes variations of the present embodiment.</p><p id="p-0805" num="0800">Server <b>901</b> creates three-dimensional data <b>1134</b> of a vicinity of a position of client device <b>902</b> using sensor information <b>1037</b> received from client device <b>902</b>. Server <b>901</b> next calculates a difference between three-dimensional data <b>1134</b> and three-dimensional map <b>1135</b>, by matching the created three-dimensional data <b>1134</b> with three-dimensional map <b>1135</b> of the same area managed by server <b>901</b>. Server <b>901</b> determines that a type of anomaly has occurred in the surrounding area of client device <b>902</b>, when the difference is greater than or equal to a predetermined threshold. For example, it is conceivable that a large difference occurs between three-dimensional map <b>1135</b> managed by server <b>901</b> and three-dimensional data <b>1134</b> created based on sensor information <b>1037</b>, when land subsidence and the like occurs due to a natural disaster such as an earthquake.</p><p id="p-0806" num="0801">Sensor information <b>1037</b> may include information indicating at least one of a sensor type, a sensor performance, and a sensor model number. Sensor information <b>1037</b> may also be appended with a class ID and the like in accordance with the sensor performance. For example, when sensor information <b>1037</b> is obtained by LiDAR, it is conceivable to assign identifiers to the sensor performance. A sensor capable of obtaining information with precision in units of several millimeters is class <b>1</b>, a sensor capable of obtaining information with precision in units of several centimeters is class <b>2</b>, and a sensor capable of obtaining information with precision in units of several meters is class <b>3</b>. Server <b>901</b> may estimate sensor performance information and the like from a model number of client device <b>902</b>. For example, when client device <b>902</b> is equipped in a vehicle, server <b>901</b> may determine sensor specification information from a type of the vehicle. In this case, server <b>901</b> may obtain information on the type of the vehicle in advance, and the information may also be included in the sensor information. Server <b>901</b> may change a degree of correction with respect to three-dimensional data <b>1134</b> created using sensor information <b>1037</b>, using obtained sensor information <b>1037</b>. For example, when the sensor performance is high in precision (class <b>1</b>), server <b>901</b> does not correct three-dimensional data <b>1134</b>. When the sensor performance is low in precision (class <b>3</b>), server <b>901</b> corrects three-dimensional data <b>1134</b> in accordance with the precision of the sensor. For example, server <b>901</b> increases the degree (intensity) of correction with a decrease in the precision of the sensor.</p><p id="p-0807" num="0802">Server <b>901</b> may simultaneously send the transmission request for the sensor information to the plurality of client devices <b>902</b> in a certain space. Server <b>901</b> does not need to use all of the sensor information for creating three-dimensional data <b>1134</b> and may, for example, select sensor information to be used in accordance with the sensor performance, when having received a plurality of pieces of sensor information from the plurality of client devices <b>902</b>. For example, when updating three-dimensional map <b>1135</b>, server <b>901</b> may select high-precision sensor information (class <b>1</b>) from among the received plurality of pieces of sensor information, and create three-dimensional data <b>1134</b> using the selected sensor information.</p><p id="p-0808" num="0803">Server <b>901</b> is not limited to only being a server such as a cloud-based traffic monitoring system, and may also be another (vehicle-mounted) client device. <figref idref="DRAWINGS">FIG. <b>107</b></figref> is a diagram of a system structure in this case.</p><p id="p-0809" num="0804">For example, client device <b>902</b>C sends a transmission request for sensor information to client device <b>902</b>A located nearby, and obtains the sensor information from client device <b>902</b>A. Client device <b>902</b>C then creates three-dimensional data using the obtained sensor information of client device <b>902</b>A, and updates a three-dimensional map of client device <b>902</b>C. This enables client device <b>902</b>C to generate a three-dimensional map of a space that can be obtained from client device <b>902</b>A. and fully utilize the performance of client device <b>902</b>C. For example, such a case is conceivable when client device <b>902</b>C has high performance.</p><p id="p-0810" num="0805">In this case, client device <b>902</b>A that has provided the sensor information is given rights to obtain the high-precision three-dimensional map generated by client device <b>902</b>C. Client device <b>902</b>A receives the high-precision three-dimensional map from client device <b>902</b>C in accordance with these rights.</p><p id="p-0811" num="0806">Server <b>901</b> may send the transmission request for the sensor information to the plurality of client devices <b>902</b> (client device <b>902</b>A and client device <b>902</b>B) located nearby client device <b>902</b>C. When a sensor of client device <b>902</b>A or client device <b>902</b>B has high performance, client device <b>902</b>C is capable of creating the three-dimensional data using the sensor information obtained by this high-performance sensor.</p><p id="p-0812" num="0807"><figref idref="DRAWINGS">FIG. <b>108</b></figref> is a block diagram showing a functionality structure of server <b>901</b> and client device <b>902</b>. Server <b>901</b> includes, for example, three-dimensional map compression/decoding processor <b>1201</b> that compresses and decodes the three-dimensional map and sensor information compression/decoding processor <b>1202</b> that compresses and decodes the sensor information.</p><p id="p-0813" num="0808">Client device <b>902</b> includes three-dimensional map decoding processor <b>1211</b> and sensor information compression processor <b>1212</b>. Three-dimensional map decoding processor <b>1211</b> receives encoded data of the compressed three-dimensional map, decodes the encoded data, and obtains the three-dimensional map. Sensor information compression processor <b>1212</b> compresses the sensor information itself instead of the three-dimensional data created using the obtained sensor information, and transmits the encoded data of the compressed sensor information to server <b>901</b>. With this structure, client device <b>902</b> does not need to internally store a processor that performs a process for compressing the three-dimensional data of the three-dimensional map (point cloud, etc.), as long as client device <b>902</b> internally stores a processor that performs a process for decoding the three-dimensional map (point cloud, etc.). This makes it possible to limit costs, power consumption, and the like of client device <b>902</b>.</p><p id="p-0814" num="0809">As stated above, client device <b>902</b> according to the present embodiment is equipped in the mobile object, and creates three-dimensional data <b>1034</b> of a surrounding area of the mobile object using sensor information <b>1033</b> that is obtained through sensor <b>1015</b> equipped in the mobile object and indicates a surrounding condition of the mobile object. Client device <b>902</b> estimates a self-location of the mobile object using the created three-dimensional data <b>1034</b>. Client device <b>902</b> transmits obtained sensor information <b>1033</b> to server <b>901</b> or another client device <b>902</b>.</p><p id="p-0815" num="0810">This enables client device <b>902</b> to transmit sensor information <b>1033</b> to server <b>901</b> or the like. This makes it possible to further reduce the amount of transmission data compared to when transmitting the three-dimensional data. Since there is no need for client device <b>902</b> to perform processes such as compressing or encoding the three-dimensional data, it is possible to reduce the processing amount of client device <b>902</b>. As such, client device <b>902</b> is capable of reducing the amount of data to be transmitted or simplifying the structure of the device.</p><p id="p-0816" num="0811">Client device <b>902</b> further transmits the transmission request for the three-dimensional map to server <b>901</b> and receives three-dimensional map <b>1031</b> from server <b>901</b>. In the estimating of the self-location, client device <b>902</b> estimates the self-location using three-dimensional data <b>1034</b> and three-dimensional map <b>1032</b>.</p><p id="p-0817" num="0812">Sensor information <b>1033</b> includes at least one of information obtained by a laser sensor, a luminance image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0818" num="0813">Sensor information <b>1033</b> includes information that indicates a performance of the sensor.</p><p id="p-0819" num="0814">Client device <b>902</b> encodes or compresses sensor information <b>1033</b>, and in the transmitting of the sensor information, transmits sensor information <b>1037</b> that has been encoded or compressed to server <b>901</b> or another client device <b>902</b>. This enables client device <b>902</b> to reduce the amount of data to be transmitted.</p><p id="p-0820" num="0815">For example, client device <b>902</b> includes a processor and memory. The processor performs the above processes using the memory.</p><p id="p-0821" num="0816">Server <b>901</b> according to the present embodiment is capable of communicating with client device <b>902</b> equipped in the mobile object, and receives sensor information <b>1037</b> that is obtained through sensor <b>1015</b> equipped in the mobile object and indicates a surrounding condition of the mobile object. Server <b>901</b> creates three-dimensional data <b>1134</b> of a surrounding area of the mobile object using received sensor information <b>1037</b>.</p><p id="p-0822" num="0817">With this, server <b>901</b> creates three-dimensional data <b>1134</b> using sensor information <b>1037</b> transmitted from client device <b>902</b>. This makes it possible to further reduce the amount of transmission data compared to when client device <b>902</b> transmits the three-dimensional data. Since there is no need for client device <b>902</b> to perform processes such as compressing or encoding the three-dimensional data, it is possible to reduce the processing amount of client device <b>902</b>. As such, server <b>901</b> is capable of reducing the amount of data to be transmitted or simplifying the structure of the device.</p><p id="p-0823" num="0818">Server <b>901</b> further transmits a transmission request for the sensor information to client device <b>902</b>.</p><p id="p-0824" num="0819">Server <b>901</b> further updates three-dimensional map <b>1135</b> using the created three-dimensional data <b>1134</b>, and transmits three-dimensional map <b>1135</b> to client device <b>902</b> in response to the transmission request for three-dimensional map <b>1135</b> from client device <b>902</b>.</p><p id="p-0825" num="0820">Sensor information <b>1037</b> includes at least one of information obtained by a laser sensor, a luminance image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0826" num="0821">Sensor information <b>1037</b> includes information that indicates a performance of the sensor.</p><p id="p-0827" num="0822">Server <b>901</b> further corrects the three-dimensional data in accordance with the performance of the sensor. This enables the three-dimensional data creation method to improve the quality of the three-dimensional data.</p><p id="p-0828" num="0823">In the receiving of the sensor information, server <b>901</b> receives a plurality of pieces of sensor information <b>1037</b> received from a plurality of client devices <b>902</b>, and selects sensor information <b>1037</b> to be used in the creating of three-dimensional data <b>1134</b>, based on a plurality of pieces of information that each indicates the performance of the sensor included in the plurality of pieces of sensor information <b>1037</b>. This enables server <b>901</b> to improve the quality of three-dimensional data <b>1134</b>.</p><p id="p-0829" num="0824">Server <b>901</b> decodes or decompresses received sensor information <b>1037</b>, and creates three-dimensional data <b>1134</b> using sensor information <b>1132</b> that has been decoded or decompressed. This enables server <b>901</b> to reduce the amount of data to be transmitted.</p><p id="p-0830" num="0825">For example, server <b>901</b> includes a processor and memory. The processor performs the above processes using the memory.</p><p id="p-0831" num="0826">The following will describe a variation of the present embodiment. <figref idref="DRAWINGS">FIG. <b>109</b></figref> is a diagram illustrating a configuration of a system according to the present embodiment. The system illustrated in <figref idref="DRAWINGS">FIG. <b>109</b></figref> includes server <b>2001</b>, client device <b>2002</b>A. and client device <b>2002</b>B.</p><p id="p-0832" num="0827">Client device <b>2002</b>A and client device <b>2002</b>B are each provided in a mobile object such as a vehicle, and transmit sensor information to server <b>2001</b>. Server <b>2001</b> transmits a three-dimensional map (a point cloud) to client device <b>2002</b>A and client device <b>2002</b>B.</p><p id="p-0833" num="0828">Client device <b>2002</b>A includes sensor information obtainer <b>2011</b>, storage <b>2012</b>, and data transmission possibility determiner <b>2013</b>. It should be noted that client device <b>2002</b>B has the same configuration. Additionally, when client device <b>2002</b>A and client device <b>2002</b>B are not particularly distinguished below, client device <b>2002</b>A and client device <b>2002</b>B are also referred to as client device <b>2002</b>.</p><p id="p-0834" num="0829"><figref idref="DRAWINGS">FIG. <b>110</b></figref> is a flowchart illustrating operation of client device <b>2002</b> according to the present embodiment.</p><p id="p-0835" num="0830">Sensor information obtainer <b>2011</b> obtains a variety of sensor information using sensors (a group of sensors) provided in a mobile object. In other words, sensor information obtainer <b>2011</b> obtains sensor information obtained by the sensors (the group of sensors) provided in the mobile object and indicating a surrounding state of the mobile object. Sensor information obtainer <b>2011</b> also stores the obtained sensor information into storage <b>2012</b>. This sensor information includes at least one of information obtained by LiDAR, a visible light image, an infrared image, or a depth image. Additionally, the sensor information may include at least one of sensor position information, speed information, obtainment time information, or obtainment location information. Sensor position information indicates a position of a sensor that has obtained sensor information. Speed information indicates a speed of the mobile object when a sensor obtained sensor information. Obtainment time information indicates a time when a sensor obtained sensor information. Obtainment location information indicates a position of the mobile object or a sensor when the sensor obtained sensor information.</p><p id="p-0836" num="0831">Next, data transmission possibility determiner <b>2013</b> determines whether the mobile object (client device <b>2002</b>) is in an environment in which the mobile object can transmit sensor information to server <b>2001</b> (S<b>2002</b>). For example, data transmission possibility determiner <b>2013</b> may specify a location and a time at which client device <b>2002</b> is present using GPS information etc., and may determine whether data can be transmitted. Additionally, data transmission possibility determiner <b>2013</b> may determine whether data can be transmitted, depending on whether it is possible to connect to a specific access point.</p><p id="p-0837" num="0832">When client device <b>2002</b> determines that the mobile object is in the environment in which the mobile object can transmit the sensor information to server <b>2001</b> (YES in S<b>2002</b>), client device <b>2002</b> transmits the sensor information to server <b>2001</b> (S<b>2003</b>). In other words, when client device <b>2002</b> becomes capable of transmitting sensor information to server <b>2001</b>, client device <b>2002</b> transmits the sensor information held by client device <b>2002</b> to server <b>2001</b>. For example, an access point that enables high-speed communication using millimeter waves is provided in an intersection or the like. When client device <b>2002</b> enters the intersection. client device <b>2002</b> transmits the sensor information held by client device <b>2002</b> to server <b>2001</b> at high speed using the millimeter-wave communication.</p><p id="p-0838" num="0833">Next, client device <b>2002</b> deletes from storage <b>2012</b> the sensor information that has been transmitted to server <b>2001</b> (S<b>2004</b>). It should be noted that when sensor information that has not been transmitted to server <b>2001</b> meets predetermined conditions, client device <b>2002</b> may delete the sensor information. For example, when an obtainment time of sensor information held by client device <b>2002</b> precedes a current time by a certain time, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. In other words, when a difference between the current time and a time when a sensor obtained sensor information exceeds a predetermined time, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. Besides, when an obtainment location of sensor information held by client device <b>2002</b> is separated from a current location by a certain distance, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. In other words, when a difference between a current position of the mobile object or a sensor and a position of the mobile object or the sensor when the sensor obtained sensor information exceeds a predetermined distance, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. Accordingly, it is possible to reduce the capacity of storage <b>2012</b> of client device <b>2002</b>.</p><p id="p-0839" num="0834">When client device <b>2002</b> does not finish obtaining sensor information (NO in S<b>2005</b>), client device <b>2002</b> performs step S<b>2001</b> and the subsequent steps again. Further, when client device <b>2002</b> finishes obtaining sensor information (YES in S<b>2005</b>), client device <b>2002</b> completes the process.</p><p id="p-0840" num="0835">Client device <b>2002</b> may select sensor information to be transmitted to server <b>2001</b>, in accordance with communication conditions. For example, when high-speed communication is available, client device <b>2002</b> preferentially transmits sensor information (e.g., information obtained by LiDAR) of which the data size held in storage <b>2012</b> is large. Additionally, when high-speed communication is not readily available, client device <b>2002</b> transmits sensor information (e.g., a visible light image) which has high priority and of which the data size held in storage <b>2012</b> is small. Accordingly, client device <b>2002</b> can efficiently transmit sensor information held in storage <b>2012</b>, in accordance with network conditions</p><p id="p-0841" num="0836">Client device <b>2002</b> may obtain, from server <b>2001</b>, time information indicating a current time and location information indicating a current location. Moreover, client device <b>2002</b> may determine an obtainment time and an obtainment location of sensor information based on the obtained time information and location information. In other words, client device <b>2002</b> may obtain time information from server <b>2001</b> and generate obtainment time information using the obtained time information. Client device <b>2002</b> may also obtain location information from server <b>2001</b> and generate obtainment location information using the obtained location information.</p><p id="p-0842" num="0837">For example, regarding time information, server <b>2001</b> and client device <b>2002</b> perform clock synchronization using a means such as the Network Time Protocol (NTP) or the Precision Time Protocol (PTP). This enables client device <b>2002</b> to obtain accurate time information. What's more, since it is possible to synchronize clocks between server <b>2001</b> and client devices <b>2002</b>, it is possible to synchronize times included in pieces of sensor information obtained by separate client devices <b>2002</b>. As a result, server <b>2001</b> can handle sensor information indicating a synchronized time. It should be noted that a means of synchronizing clocks may be any means other than the NTP or PTP. In addition, GPS information may be used as the time information and the location information.</p><p id="p-0843" num="0838">Server <b>2001</b> may specify a time or a location and obtain pieces of sensor information from client devices <b>2002</b>. For example, when an accident occurs, in order to search for a client device in the vicinity of the accident, server <b>2001</b> specifies an accident occurrence time and an accident occurrence location and broadcasts sensor information transmission requests to client devices <b>2002</b>. Then, client device <b>2002</b> having sensor information obtained at the corresponding time and location transmits the sensor information to server <b>2001</b>. In other words, client device <b>2002</b> receives, from server <b>2001</b>, a sensor information transmission request including specification information specifying a location and a time. When sensor information obtained at a location and a time indicated by the specification information is stored in storage <b>2012</b>, and client device <b>2002</b> determines that the mobile object is present in the environment in which the mobile object can transmit the sensor information to server <b>2001</b>, client device <b>2002</b> transmits, to server <b>2001</b>, the sensor information obtained at the location and the time indicated by the specification information. Consequently, server <b>2001</b> can obtain the pieces of sensor information pertaining to the occurrence of the accident from client devices <b>2002</b>, and use the pieces of sensor information for accident analysis etc.</p><p id="p-0844" num="0839">It should be noted that when client device <b>2002</b> receives a sensor information transmission request from server <b>2001</b>, client device <b>2002</b> may refuse to transmit sensor information. Additionally, client device <b>2002</b> may set in advance which pieces of sensor information can be transmitted. Alternatively, server <b>2001</b> may inquire of client device <b>2002</b> each time whether sensor information can be transmitted.</p><p id="p-0845" num="0840">A point may be given to client device <b>2002</b> that has transmitted sensor information to server <b>2001</b>. This point can be used in payment for, for example, gasoline expenses. electric vehicle (EV) charging expenses, a highway toll, or rental car expenses. After obtaining sensor information, server <b>2001</b> may delete information for specifying client device <b>2002</b> that has transmitted the sensor information. For example, this information is a network address of client device <b>2002</b>. Since this enables the anonymization of sensor information, a user of client device <b>2002</b> can securely transmit sensor information from client device <b>2002</b> to server <b>2001</b>. Server <b>2001</b> may include servers. For example, by servers sharing sensor information, even when one of the servers breaks down, the other servers can communicate with client device <b>2002</b>. Accordingly, it is possible to avoid service outage due to a server breakdown.</p><p id="p-0846" num="0841">A specified location specified by a sensor information transmission request indicates an accident occurrence location etc., and may be different from a position of client device <b>2002</b> at a specified time specified by the sensor information transmission request. For this reason, for example, by specifying, as a specified location, a range such as within XX meters of a surrounding area, server <b>2001</b> can request information from client device <b>2002</b> within the range. Similarly, server <b>2001</b> may also specify, as a specified time, a range such as within N seconds before and after a certain time. As a result, server <b>2001</b> can obtain sensor information from client device <b>2002</b> present for a time from t&#x2212;N to t+N and in a location within XX meters from absolute position S. When client device <b>2002</b> transmits three-dimensional data such as LiDAR, client device <b>2002</b> may transmit data created immediately after time t.</p><p id="p-0847" num="0842">Server <b>2001</b> may separately specify information indicating, as a specified location, a location of client device <b>2002</b> from which sensor information is to be obtained, and a location at which sensor information is desirably obtained. For example, server <b>2001</b> specifies that sensor information including at least a range within YY meters from absolute position S is to be obtained from client device <b>2002</b> present within XX meters from absolute position S. When client device <b>2002</b> selects three-dimensional data to be transmitted, client device <b>2002</b> selects one or more pieces of three-dimensional data so that the one or more pieces of three-dimensional data include at least the sensor information including the specified range. Each of the one or more pieces of three-dimensional data is a random-accessible unit of data. In addition, when client device <b>2002</b> transmits a visible light image, client device <b>2002</b> may transmit pieces of temporally continuous image data including at least a frame immediately before or immediately after time t.</p><p id="p-0848" num="0843">When client device <b>2002</b> can use physical networks such as 5G, Wi-Fi, or modes in 5G for transmitting sensor information, client device <b>2002</b> may select a network to be used according to the order of priority notified by server <b>2001</b>. Alternatively, client device <b>2002</b> may select a network that enables client device <b>2002</b> to ensure an appropriate bandwidth based on the size of transmit data. Alternatively, client device <b>2002</b> may select a network to be used, based on data transmission expenses etc. A transmission request from server <b>2001</b> may include information indicating a transmission deadline, for example, performing transmission when client device <b>2002</b> can start transmission by time t. When server <b>2001</b> cannot obtain sufficient sensor information within a time limit, server <b>2001</b> may issue a transmission request again.</p><p id="p-0849" num="0844">Sensor information may include header information indicating characteristics of sensor data along with compressed or uncompressed sensor data. Client device <b>2002</b> may transmit header information to server <b>2001</b> via a physical network or a communication protocol that is different from a physical network or a communication protocol used for sensor data. For example, client device <b>2002</b> transmits header information to server <b>2001</b> prior to transmitting sensor data. Server <b>2001</b> determines whether to obtain the sensor data of client device <b>2002</b>, based on a result of analysis of the header information. For example, header information may include information indicating a point cloud obtainment density, an elevation angle, or a frame rate of LiDAR, or information indicating, for example, a resolution, an SN ratio, or a frame rate of a visible light image. Accordingly, server <b>2001</b> can obtain the sensor information from client device <b>2002</b> having the sensor data of determined quality.</p><p id="p-0850" num="0845">As stated above, client device <b>2002</b> is provided in the mobile object, obtains sensor information that has been obtained by a sensor provided in the mobile object and indicates a surrounding state of the mobile object, and stores the sensor information into storage <b>2012</b>. Client device <b>2002</b> determines whether the mobile object is present in an environment in which the mobile object is capable of transmitting the sensor information to server <b>2001</b>, and transmits the sensor information to server <b>2001</b> when the mobile object is determined to be present in the environment in which the mobile object is capable of transmitting the sensor information to server <b>2001</b>.</p><p id="p-0851" num="0846">Additionally, client device <b>2002</b> further creates, from the sensor information, three-dimensional data of a surrounding area of the mobile object, and estimates a self-location of the mobile object using the three-dimensional data created.</p><p id="p-0852" num="0847">Besides, client device <b>2002</b> further transmits a transmission request for a three-dimensional map to server <b>2001</b>, and receives the three-dimensional map from server <b>2001</b>. In the estimating, client device <b>2002</b> estimates the self-location using the three-dimensional data and the three-dimensional map.</p><p id="p-0853" num="0848">It should be noted that the above process performed by client device <b>2002</b> may be realized as an information transmission method for use in client device <b>2002</b>.</p><p id="p-0854" num="0849">In addition, client device <b>2002</b> may include a processor and memory. Using the memory, the processor may perform the above process.</p><p id="p-0855" num="0850">Next, a sensor information collection system according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>111</b></figref> is a diagram illustrating a configuration of the sensor information collection system according to the present embodiment. As illustrated in <figref idref="DRAWINGS">FIG. <b>111</b></figref>, the sensor information collection system according to the present embodiment includes terminal <b>2021</b>A, terminal <b>2021</b>B, communication device <b>2022</b>A, communication device <b>2022</b>B, network <b>2023</b>, data collection server <b>2024</b>, map server <b>2025</b>, and client device <b>2026</b>. It should be noted that when terminal <b>2021</b>A and terminal <b>2021</b>B are not particularly distinguished, terminal <b>2021</b>A and terminal <b>2021</b>B are also referred to as terminal <b>2021</b>. Additionally, when communication device <b>2022</b>A and communication device <b>2022</b>B are not particularly distinguished, communication device <b>2022</b>A and communication device <b>2022</b>B are also referred to as communication device <b>2022</b>.</p><p id="p-0856" num="0851">Data collection server <b>2024</b> collects data such as sensor data obtained by a sensor included in terminal <b>2021</b> as position-related data in which the data is associated with a position in a three-dimensional space.</p><p id="p-0857" num="0852">Sensor data is data obtained by, for example, detecting a surrounding state of terminal <b>2021</b> or an internal state of terminal <b>2021</b> using a sensor included in terminal <b>2021</b>. Terminal <b>2021</b> transmits, to data collection server <b>2024</b>, one or more pieces of sensor data collected from one or more sensor devices in locations at which direct communication with terminal <b>2021</b> is possible or at which communication with terminal <b>2021</b> is possible by the same communication system or via one or more relay devices.</p><p id="p-0858" num="0853">Data included in position-related data may include, for example, information indicating an operating state, an operating log, a service use state, etc. of a terminal or a device included in the terminal. In addition, the data include in the position-related data may include, for example, information in which an identifier of terminal <b>2021</b> is associated with a position or a movement path etc. of terminal <b>2021</b>.</p><p id="p-0859" num="0854">Information indicating a position included in position-related data is associated with, for example, information indicating a position in three-dimensional data such as three-dimensional map data. The details of information indicating a position will be described later.</p><p id="p-0860" num="0855">Position-related data may include at least one of the above-described time information or information indicating an attribute of data included in the position-related data or a type (e.g., a model number) of a sensor that has created the data, in addition to position information that is information indicating a position. The position information and the time information may be stored in a header area of the position-related data or a header area of a frame that stores the position-related data. Further, the position information and the time information may be transmitted and/or stored as metadata associated with the position-related data, separately from the position-related data.</p><p id="p-0861" num="0856">Map server <b>2025</b> is connected to, for example, network <b>2023</b>, and transmits three-dimensional data such as three-dimensional map data in response to a request from another device such as terminal <b>2021</b>. Besides, as described in the aforementioned embodiments, map server <b>2025</b> may have, for example, a function of updating three-dimensional data using sensor information transmitted from terminal <b>2021</b>.</p><p id="p-0862" num="0857">Data collection server <b>2024</b> is connected to, for example, network <b>2023</b>, collects position-related data from another device such as terminal <b>2021</b>, and stores the collected position-related data into a storage of data collection server <b>2024</b> or a storage of another server. In addition, data collection server <b>2024</b> transmits, for example, metadata of collected position-related data or three-dimensional data generated based on the position-related data, to terminal <b>2021</b> in response to a request from terminal <b>2021</b>.</p><p id="p-0863" num="0858">Network <b>2023</b> is, for example, a communication network such as the Internet. Terminal <b>2021</b> is connected to network <b>2023</b> via communication device <b>2022</b>. Communication device <b>2022</b> communicates with terminal <b>2021</b> using one communication system or switching between communication systems. Communication device <b>2022</b> is a communication satellite that performs communication using, for example, (1) a base station compliant with Long-Term Evolution (LTE) etc., (2) an access point (AP) for Wi-Fi or millimeter-wave communication etc., (3) a low-power wide-area (LPWA) network gateway such as SIGFOX, LoRaWAN, or Wi-SUN, or (4) a satellite communication system such as DVB-S2.</p><p id="p-0864" num="0859">It should be noted that a base station may communicate with terminal <b>2021</b> using a system classified as an LPWA network such as Narrowband Internet of Things (NB IoT) or LTE-M, or switching between these systems.</p><p id="p-0865" num="0860">Here, although, in the example given, terminal <b>2021</b> has a function of communicating with communication device <b>2022</b> that uses two types of communication systems, and communicates with map server <b>2025</b> or data collection server <b>2024</b> using one of the communication systems or switching between the communication systems and between communication devices <b>2022</b> to be a direct communication partner: a configuration of the sensor information collection system and terminal <b>2021</b> is not limited to this. For example, terminal <b>2021</b> need not have a function of performing communication using communication systems, and may have a function of performing communication using one of the communication systems. Terminal <b>2021</b> may also support three or more communication systems. Additionally, each terminal <b>2021</b> may support a different communication system.</p><p id="p-0866" num="0861">Terminal <b>2021</b> includes, for example, the configuration of client device <b>902</b> illustrated in <figref idref="DRAWINGS">FIG. <b>101</b></figref>. Terminal <b>2021</b> estimates a self-location etc. using received three-dimensional data. Besides, terminal <b>2021</b> associates sensor data obtained from a sensor and position information obtained by self-location estimation to generate position-related data.</p><p id="p-0867" num="0862">Position information appended to position-related data indicates, for example, a position in a coordinate system used for three-dimensional data. For example, the position information is coordinate values represented using a value of a latitude and a value of a longitude. Here, terminal <b>2021</b> may include, in the position information, a coordinate system serving as a reference for the coordinate values and information indicating three-dimensional data used for location estimation, along with the coordinate values. Coordinate values may also include altitude information.</p><p id="p-0868" num="0863">The position information may be associated with a data unit or a space unit usable for encoding the above three-dimensional data. Such a unit is, for example, WLD, GOS, SPC, VLM, or VXL. Here, the position information is represented by, for example, an identifier for identifying a data unit such as the SPC corresponding to position-related data. It should be noted that the position information may include, for example, information indicating three-dimensional data obtained by encoding a three-dimensional space including a data unit such as the SPC or information indicating a detailed position within the SPC, in addition to the identifier for identifying the data unit such as the SPC. The information indicating the three-dimensional data is, for example, a file name of the three-dimensional data.</p><p id="p-0869" num="0864">As stated above, by generating position-related data associated with position information based on location estimation using three-dimensional data, the system can give more accurate position information to sensor information than when the system appends position information based on a self-location of a client device (terminal <b>2021</b>) obtained using a GPS to sensor information. As a result, even when another device uses the position-related data in another service, there is a possibility of more accurately determining a position corresponding to the position-related data in an actual space, by performing location estimation based on the same three-dimensional data.</p><p id="p-0870" num="0865">It should be noted that although the data transmitted from terminal <b>2021</b> is the position-related data in the example given in the present embodiment, the data transmitted from terminal <b>2021</b> may be data unassociated with position information. In other words, the transmission and reception of three-dimensional data or sensor data described in the other embodiments may be performed via network <b>2023</b> described in the present embodiment.</p><p id="p-0871" num="0866">Next, a different example of position information indicating a position in a three-dimensional or two-dimensional actual space or in a map space will be described. The position information appended to position-related data may be information indicating a relative position relative to a keypoint in three-dimensional data. Here, the keypoint serving as a reference for the position information is encoded as, for example, SWLD, and notified to terminal <b>2021</b> as three-dimensional data.</p><p id="p-0872" num="0867">The information indicating the relative position relative to the keypoint may be, for example, information that is represented by a vector from the keypoint to the point indicated by the position information, and indicates a direction and a distance from the keypoint to the point indicated by the position information. Alternatively, the information indicating the relative position relative to the keypoint may be information indicating an amount of displacement from the keypoint to the point indicated by the position information along each of the x axis, the y axis, and the z axis. Additionally, the information indicating the relative position relative to the keypoint may be information indicating a distance from each of three or more keypoints to the point indicated by the position information. It should be noted that the relative position need not be a relative position of the point indicated by the position information represented using each keypoint as a reference, and may be a relative position of each keypoint represented with respect to the point indicated by the position information. Examples of position information based on a relative position relative to a keypoint include information for identifying a keypoint to be a reference, and information indicating the relative position of the point indicated by the position information and relative to the keypoint. When the information indicating the relative position relative to the keypoint is provided separately from three-dimensional data, the information indicating the relative position relative to the keypoint may include, for example, coordinate axes used in deriving the relative position, information indicating a type of the three-dimensional data, and/or information indicating a magnitude per unit amount (e.g., a scale) of a value of the information indicating the relative position.</p><p id="p-0873" num="0868">The position information may include, for each keypoint, information indicating a relative position relative to the keypoint. When the position information is represented by relative positions relative to keypoints, terminal <b>2021</b> that intends to identify a position in an actual space indicated by the position information may calculate candidate points of the position indicated by the position information from positions of the keypoints each estimated from sensor data, and may determine that a point obtained by averaging the calculated candidate points is the point indicated by the position information. Since this configuration reduces the effects of errors when the positions of the keypoints are estimated from the sensor data, it is possible to improve the estimation accuracy for the point in the actual space indicated by the position information. Besides, when the position information includes information indicating relative positions relative to keypoints, if it is possible to detect any one of the keypoints regardless of the presence of keypoints undetectable due to a limitation such as a type or performance of a sensor included in terminal <b>2021</b>, it is possible to estimate a value of the point indicated by the position information.</p><p id="p-0874" num="0869">A point identifiable from sensor data can be used as a keypoint. Examples of the point identifiable from the sensor data include a point or a point within a region that satisfies a predetermined keypoint detection condition, such as the above-described three-dimensional feature or feature of visible light data is greater than or equal to a threshold value.</p><p id="p-0875" num="0870">Moreover, a marker etc. placed in an actual space may be used as a keypoint. In this case, the maker may be detected and located from data obtained using a sensor such as LiDAR or a camera. For example, the marker may be represented by a change in color or luminance value (degree of reflection), or a three-dimensional shape (e.g., unevenness). Coordinate values indicating a position of the marker, or a two-dimensional bar code or a bar code etc. generated from an identifier of the marker may be also used.</p><p id="p-0876" num="0871">Furthermore, a light source that transmits an optical signal may be used as a marker. When a light source of an optical signal is used as a marker, not only information for obtaining a position such as coordinate values or an identifier but also other data may be transmitted using an optical signal. For example, an optical signal may include contents of service corresponding to the position of the marker, an address for obtaining contents such as a URL, or an identifier of a wireless communication device for receiving service, and information indicating a wireless communication system etc. for connecting to the wireless communication device. The use of an optical communication device (a light source) as a marker not only facilitates the transmission of data other than information indicating a position but also makes it possible to dynamically change the data.</p><p id="p-0877" num="0872">Terminal <b>2021</b> finds out a correspondence relationship of keypoints between mutually different data using, for example, a common identifier used for the data, or information or a table indicating the correspondence relationship of the keypoints between the data. When there is no information indicating a correspondence relationship between keypoints, terminal <b>2021</b> may also determine that when coordinates of a keypoint in three-dimensional data are converted into a position in a space of another three-dimensional data, a keypoint closest to the position is a corresponding keypoint.</p><p id="p-0878" num="0873">When the position information based on the relative position described above is used, terminal <b>2021</b> that uses mutually different three-dimensional data or services can identify or estimate a position indicated by the position information with respect to a common keypoint included in or associated with each three-dimensional data. As a result, terminal <b>2021</b> that uses the mutually different three-dimensional data or the services can identify or estimate the same position with higher accuracy.</p><p id="p-0879" num="0874">Even when map data or three-dimensional data represented using mutually different coordinate systems are used, since it is possible to reduce the effects of errors caused by the conversion of a coordinate system, it is possible to coordinate services based on more accurate position information.</p><p id="p-0880" num="0875">Hereinafter, an example of functions provided by data collection server <b>2024</b> will be described. Data collection server <b>2024</b> may transfer received position-related data to another data server. When there are data servers, data collection server <b>2024</b> determines to which data server received position-related data is to be transferred, and transfers the position-related data to a data server determined as a transfer destination.</p><p id="p-0881" num="0876">Data collection server <b>2024</b> determines a transfer destination based on, for example, transfer destination server determination rules preset to data collection server <b>2024</b>. The transfer destination server determination rules are set by, for example, a transfer destination table in which identifiers respectively associated with terminals <b>2021</b> are associated with transfer destination data servers.</p><p id="p-0882" num="0877">Terminal <b>2021</b> appends an identifier associated with terminal <b>2021</b> to position-related data to be transmitted, and transmits the position-related data to data collection server <b>2024</b>. Data collection server <b>2024</b> determines a transfer destination data server corresponding to the identifier appended to the position-related data, based on the transfer destination server determination rules set out using the transfer destination table etc.; and transmits the position-related data to the determined data server. The transfer destination server determination rules may be specified based on a determination condition set using a time, a place, etc. at which position-related data is obtained. Here, examples of the identifier associated with transmission source terminal <b>2021</b> include an identifier unique to each terminal <b>2021</b> or an identifier indicating a group to which terminal <b>2021</b> belongs.</p><p id="p-0883" num="0878">The transfer destination table need not be a table in which identifiers associated with transmission source terminals are directly associated with transfer destination data servers. For example, data collection server <b>2024</b> holds a management table that stores tag information assigned to each identifier unique to terminal <b>2021</b>, and a transfer destination table in which the pieces of tag information are associated with transfer destination data servers. Data collection server <b>2024</b> may determine a transfer destination data server based on tag information, using the management table and the transfer destination table. Here, the tag information is, for example, control information for management or control information for providing service assigned to a type, a model number, an owner of terminal <b>2021</b> corresponding to the identifier, a group to which terminal <b>2021</b> belongs, or another identifier. Moreover, in the transfer destination able, identifiers unique to respective sensors may be used instead of the identifiers associated with transmission source terminals <b>2021</b>. Furthermore, the transfer destination server determination rules may be set by client device <b>2026</b>.</p><p id="p-0884" num="0879">Data collection server <b>2024</b> may determine data servers as transfer destinations, and transfer received position-related data to the data servers. According to this configuration. for example, when position-related data is automatically backed up or when, in order that position-related data is commonly used by different services, there is a need to transmit the position-related data to a data server for providing each service, it is possible to achieve data transfer as intended by changing a setting of data collection server <b>2024</b>. As a result, it is possible to reduce the number of steps necessary for building and changing a system, compared to when a transmission destination of position-related data is set for each terminal <b>2021</b>.</p><p id="p-0885" num="0880">Data collection server <b>2024</b> may register, as a new transfer destination, a data server specified by a transfer request signal received from a data server; and transmit position-related data subsequently received to the data server, in response to the transfer request signal.</p><p id="p-0886" num="0881">Data collection server <b>2024</b> may store position-related data received from terminal <b>2021</b> into a recording device, and transmit position-related data specified by a transmission request signal received from terminal <b>2021</b> or a data server to request source terminal <b>2021</b> or the data server in response to the transmission request signal.</p><p id="p-0887" num="0882">Data collection server <b>2024</b> may determine whether position-related data is suppliable to a request source data server or terminal <b>2021</b>, and transfer or transmit the position-related data to the request source data server or terminal <b>2021</b> when determining that the position-related data is suppliable.</p><p id="p-0888" num="0883">When data collection server <b>2024</b> receives a request for current position-related data from client device <b>2026</b>, even if it is not a timing for transmitting position-related data by terminal <b>2021</b>, data collection server <b>2024</b> may send a transmission request for the current position-related data to terminal <b>2021</b>, and terminal <b>2021</b> may transmit the current position-related data in response to the transmission request.</p><p id="p-0889" num="0884">Although terminal <b>2021</b> transmits position information data to data collection server <b>2024</b> in the above description, data collection server <b>2024</b> may have a function of managing terminal <b>2021</b> such as a function necessary for collecting position-related data from terminal <b>2021</b> or a function used when collecting position-related data from terminal <b>2021</b>.</p><p id="p-0890" num="0885">Data collection server <b>2024</b> may have a function of transmitting, to terminal <b>2021</b>, a data request signal for requesting transmission of position information data, and collecting position-related data.</p><p id="p-0891" num="0886">Management information such as an address for communicating with terminal <b>2021</b> from which data is to be collected or an identifier unique to terminal <b>2021</b> is registered in advance in data collection server <b>2024</b>. Data collection server <b>2024</b> collects position-related data from terminal <b>2021</b> based on the registered management information. Management information may include information such as types of sensors included in terminal <b>2021</b>, the number of sensors included in terminal <b>2021</b>, and communication systems supported by terminal <b>2021</b>.</p><p id="p-0892" num="0887">Data collection server <b>2024</b> may collect information such as an operating state or a current position of terminal <b>2021</b> from terminal <b>2021</b>.</p><p id="p-0893" num="0888">Registration of management information may be instructed by client device <b>2026</b>, or a process for the registration may be started by terminal <b>2021</b> transmitting a registration request to data collection server <b>2024</b>. Data collection server <b>2024</b> may have a function of controlling communication between data collection server <b>2024</b> and terminal <b>2021</b>.</p><p id="p-0894" num="0889">Communication between data collection server <b>2024</b> and terminal <b>2021</b> may be established using a dedicated line provided by a service provider such as a mobile network operator (MNO) or a mobile virtual network operator (MVNO), or a virtual dedicated line based on a virtual private network (VPN). According to this configuration. it is possible to perform secure communication between terminal <b>2021</b> and data collection server <b>2024</b>.</p><p id="p-0895" num="0890">Data collection server <b>2024</b> may have a function of authenticating terminal <b>2021</b> or a function of encrypting data to be transmitted and received between data collection server <b>2024</b> and terminal <b>2021</b>. Here, the authentication of terminal <b>2021</b> or the encryption of data is performed using, for example, an identifier unique to terminal <b>2021</b> or an identifier unique to a terminal group including terminals <b>2021</b>, which is shared in advance between data collection server <b>2024</b> and terminal <b>2021</b>. Examples of the identifier include an international mobile subscriber identity (IMSI) that is a unique number stored in a subscriber identity module (SIM) card. An identifier for use in authentication and an identifier for use in encryption of data may be identical or different.</p><p id="p-0896" num="0891">The authentication or the encryption of data between data collection server <b>2024</b> and terminal <b>2021</b> is feasible when both data collection server <b>2024</b> and terminal <b>2021</b> have a function of performing the process. The process does not depend on a communication system used by communication device <b>2022</b> that performs relay. Accordingly, since it is possible to perform the common authentication or encryption without considering whether terminal <b>2021</b> uses a communication system, the user's convenience of system architecture is increased. However, the expression &#x201c;does not depend on a communication system used by communication device <b>2022</b> that performs relay&#x201d; means a change according to a communication system is not essential. In other words, in order to improve the transfer efficiency or ensure security, the authentication or the encryption of data between data collection server <b>2024</b> and terminal <b>2021</b> may be changed according to a communication system used by a relay device.</p><p id="p-0897" num="0892">Data collection server <b>2024</b> may provide client device <b>2026</b> with a User Interface (UI) that manages data collection rules such as types of position-related data collected from terminal <b>2021</b> and data collection schedules. Accordingly, a user can specify, for example, terminal <b>2021</b> from which data is to be collected using client device <b>2026</b>, a data collection time, and a data collection frequency. Additionally, data collection server <b>2024</b> may specify, for example, a region on a map from which data is to be desirably collected, and collect position-related data from terminal <b>2021</b> included in the region.</p><p id="p-0898" num="0893">When the data collection rules are managed on a per terminal <b>2021</b> basis, client device <b>2026</b> presents, on a screen, a list of terminals <b>2021</b> or sensors to be managed. The user sets, for example, a necessity for data collection or a collection schedule for each item in the list.</p><p id="p-0899" num="0894">When a region on a map from which data is to be desirably collected is specified, client device <b>2026</b> presents, on a screen, a two-dimensional or three-dimensional map of a region to be managed. The user selects the region from which data is to be collected on the displayed map. Examples of the region selected on the map include a circular or rectangular region having a point specified on the map as the center, or a circular or rectangular region specifiable by a drag operation. Client device <b>2026</b> may also select a region in a preset unit such as a city, an area or a block in a city, or a main road, etc. Instead of specifying a region using a map, a region may be set by inputting values of a latitude and a longitude, or a region may be selected from a list of candidate regions derived based on inputted text information. Text information is, for example, a name of a region, a city, or a landmark.</p><p id="p-0900" num="0895">Moreover, data may be collected while the user dynamically changes a specified region by specifying one or more terminals <b>2021</b> and setting a condition such as within 100 meters of one or more terminals <b>2021</b>.</p><p id="p-0901" num="0896">When client device <b>2026</b> includes a sensor such as a camera, a region on a map may be specified based on a position of client device <b>2026</b> in an actual space obtained from sensor data. For example, client device <b>2026</b> may estimate a self-location using sensor data, and specify, as a region from which data is to be collected, a region within a predetermined distance from a point on a map corresponding to the estimated location or a region within a distance specified by the user. Client device <b>2026</b> may also specify, as the region from which the data is to be collected, a sensing region of the sensor, that is, a region corresponding to obtained sensor data. Alternatively, client device <b>2026</b> may specify, as the region from which the data is to be collected, a region based on a location corresponding to sensor data specified by the user. Either client device <b>2026</b> or data collection server <b>2024</b> may estimate a region on a map or a location corresponding to sensor data.</p><p id="p-0902" num="0897">When a region on a map is specified, data collection server <b>2024</b> may specify terminal <b>2021</b> within the specified region by collecting current position information of each terminal <b>2021</b>, and may send a transmission request for position-related data to specified terminal <b>2021</b>. When data collection server <b>2024</b> transmits information indicating a specified region to terminal <b>2021</b>, determines whether terminal <b>2021</b> is present within the specified region, and determines that terminal <b>2021</b> is present within the specified region, rather than specifying terminal <b>2021</b> within the region, terminal <b>2021</b> may transmit position-related data.</p><p id="p-0903" num="0898">Data collection server <b>2024</b> transmits, to client device <b>2026</b>, data such as a list or a map for providing the above-described User Interface (UI) in an application executed by client device <b>2026</b>. Data collection server <b>2024</b> may transmit, to client device <b>2026</b>, not only the data such as the list or the map but also an application program. Additionally, the above UI may be provided as contents created using HTML displayable by a browser. It should be noted that part of data such as map data may be supplied from a server, such as map server <b>2025</b>, other than data collection server <b>2024</b>.</p><p id="p-0904" num="0899">When client device <b>2026</b> receives an input for notifying the completion of an input such as pressing of a setup key by the user, client device <b>2026</b> transmits the inputted information as configuration information to data collection server <b>2024</b>. Data collection server <b>2024</b> transmits, to each terminal <b>2021</b>, a signal for requesting position-related data or notifying position-related data collection rules, based on the configuration information received from client device <b>2026</b>, and collects the position-related data.</p><p id="p-0905" num="0900">Next, an example of controlling operation of terminal <b>2021</b> based on additional information added to three-dimensional or two-dimensional map data will be described.</p><p id="p-0906" num="0901">In the present configuration, object information that indicates a position of a power feeding part such as a feeder antenna or a feeder coil for wireless power feeding buried under a road or a parking lot is included in or associated with three-dimensional data, and such object information is provided to terminal <b>2021</b> that is a vehicle or a drone.</p><p id="p-0907" num="0902">A vehicle or a drone that has obtained the object information to get charged automatically moves so that a position of a charging part such as a charging antenna or a charging coil included in the vehicle or the drone becomes opposite to a region indicated by the object information, and such vehicle or a drone starts to charge itself. It should be noted that when a vehicle or a drone has no automatic driving function, a direction to move in or an operation to perform is presented to a driver or an operator by using an image displayed on a screen, audio, etc. When a position of a charging part calculated based on an estimated self-location is determined to fall within the region indicated by the object information or a predetermined distance from the region, an image or audio to be presented is changed to a content that puts a stop to driving or operating, and the charging is started.</p><p id="p-0908" num="0903">Object information need not be information indicating a position of a power feeding part, and may be information indicating a region within which placement of a charging part results in a charging efficiency greater than or equal to a predetermined threshold value. A position indicated by object information may be represented by, for example, the central point of a region indicated by the object information, a region or a line within a two-dimensional plane, or a region, a line, or a plane within a three-dimensional space.</p><p id="p-0909" num="0904">According to this configuration, since it is possible to identify the position of the power feeding antenna unidentifiable by sensing data of LiDAR or an image captured by the camera, it is possible to highly accurately align a wireless charging antenna included in terminal <b>2021</b> such as a vehicle with a wireless power feeding antenna buried under a road. As a result, it is possible to increase a charging speed at the time of wireless charging and improve the charging efficiency.</p><p id="p-0910" num="0905">Object information may be an object other than a power feeding antenna. For example, three-dimensional data includes, for example, a position of an AP for millimeter-wave wireless communication as object information. Accordingly, since terminal <b>2021</b> can identify the position of the AP in advance, terminal <b>2021</b> can steer a directivity of beam to a direction of the object information and start communication. As a result, it is possible to improve communication quality such as increasing transmission rates, reducing the duration of time before starting communication, and extending a communicable period.</p><p id="p-0911" num="0906">Object information may include information indicating a type of an object corresponding to the object information. In addition, when terminal <b>2021</b> is present within a region in an actual space corresponding to a position in three-dimensional data of the object information or within a predetermined distance from the region, the object information may include information indicating a process to be performed by terminal <b>2021</b>.</p><p id="p-0912" num="0907">Object information may be provided by a server different from a server that provides three-dimensional data. When object information is provided separately from three-dimensional data, object groups in which object information used by the same service is stored may be each provided as separate data according to a type of a target service or a target device.</p><p id="p-0913" num="0908">Three-dimensional data used in combination with object information may be point cloud data of WLD or keypoint data of SWLD.</p><p id="p-0914" num="0909">In the three-dimensional data encoding device, when attribute information of a current three-dimensional point to be encoded is layer-encoded using Levels of Detail (LoDs), the three-dimensional data decoding device may decode the attribute information in layers down to LoD required by the three-dimensional data decoding device and need not decode the attribute information in layers not required. For example, when the total number of LoDs for the attribute information in a bitstream generated by the three-dimensional data encoding device is N, the three-dimensional data decoding device may decode M LoDs (M&#x3c;N), i.e., layers from the uppermost layer LoDO to LoD(M&#x2212;1), and need not decode the remaining LoDs, i.e., layers down to LoD(N&#x2212;1). With this, while reducing the processing load, the three-dimensional data decoding device can decode the attribute information in layers from LoDO to LoD(M&#x2212;1) required by the three-dimensional data decoding device.</p><p id="p-0915" num="0910"><figref idref="DRAWINGS">FIG. <b>112</b></figref> is a diagram illustrating the foregoing use case. In the example shown in <figref idref="DRAWINGS">FIG. <b>112</b></figref>, a server stores a three-dimensional map obtained by encoding three-dimensional geometry information and attribute information. The server (the three-dimensional data encoding device) broadcasts the three-dimensional map to client devices (the three-dimensional data decoding devices: for example, vehicles, drones, etc.) in an area managed by the server, and each client device uses the three-dimensional map received from the server to perform a process for identifying the self-position of the client device or a process for displaying map information to a user or the like who operates the client device.</p><p id="p-0916" num="0911">The following describes an example of the operation in this case. First, the server encodes the geometry information of the three-dimensional map using an octree structure or the like. Then, the sever layer-encodes the attribute information of the three-dimensional map using N LoDs established based on the geometry information. The server stores a bitstream of the three-dimensional map obtained by the layer-encoding.</p><p id="p-0917" num="0912">Next, in response to a send request for the map information from the client device in the area managed by the server, the server sends the bitstream of the encoded three-dimensional map to the client device.</p><p id="p-0918" num="0913">The client device receives the bitstream of the three-dimensional map sent from the server, and decodes the geometry information and the attribute information of the three-dimensional map in accordance with the intended use of the client device. For example, when the client device performs highly accurate estimation of the self-position using the geometry information and the attribute information in N LoDs, the client device determines that a decoding result to the dense three-dimensional points is necessary as the attribute information, and decodes all the information in the bitstream.</p><p id="p-0919" num="0914">Moreover, when the client device displays the three-dimensional map information to a user or the like, the client device determines that a decoding result to the sparse three-dimensional points is necessary as the attribute information, and decodes the geometry information and the attribute information in M LoDs (M&#x3c;N) starting from an upper layer LoDO.</p><p id="p-0920" num="0915">In this way, the processing load of the client device can be reduced by changing LoDs for the attribute information to be decoded in accordance with the intended use of the client device.</p><p id="p-0921" num="0916">In the example shown in <figref idref="DRAWINGS">FIG. <b>112</b></figref>, for example, the three-dimensional map includes geometry information and attribute information. The geometry information is encoded using the octree. The attribute information is encoded using N LoDs.</p><p id="p-0922" num="0917">Client device A performs highly accurate estimation of the self-position. In this case, client device A determines that all the geometry information and all the attribute information are necessary, and decodes all the geometry information and all the attribute information constructed from N LoDs in the bitstream.</p><p id="p-0923" num="0918">Client device B displays the three-dimensional map to a user. In this case, client device B determines that the geometry information and the attribute information in M LoDs (M&#x3c;N) are necessary, and decodes the geometry information and the attribute information constructed from M LoDs in the bitstream.</p><p id="p-0924" num="0919">It is to be noted that the server may broadcast the three-dimensional map to the client devices, or multicast or unicast the three-dimensional map to the client devices.</p><p id="p-0925" num="0920">The following describes a variation of the system according to the present embodiment. In the three-dimensional data encoding device, when attribute information of a current three-dimensional point to be encoded is layer-encoded using LoDs, the three-dimensional data encoding device may encode the attribute information in layers down to LoD required by the three-dimensional data decoding device and need not encode the attribute information in layers not required. For example, when the total number of LoDs is N, the three-dimensional data encoding device may generate a bitstream by encoding M LoDs (M&#x3c;N), i.e., layers from the uppermost layer LoDO to LoD(M&#x2212;1), and not encoding the remaining LoDs, i.e., layers down to LoD(N&#x2212;1). With this, in response to a request from the three-dimensional data decoding device, the three-dimensional data encoding device can provide a bitstream in which the attribute information from LoDO to LoD(M&#x2212;1) required by the three-dimensional data decoding device is encoded.</p><p id="p-0926" num="0921"><figref idref="DRAWINGS">FIG. <b>113</b></figref> is a diagram illustrating the foregoing use case. In the example shown in <figref idref="DRAWINGS">FIG. <b>113</b></figref>, a server stores a three-dimensional map obtained by encoding three-dimensional geometry information and attribute information. The server (the three-dimensional data encoding device) unicasts, in response to a request from the client device, the three-dimensional map to a client device (the three-dimensional data decoding device: for example, a vehicle, a drone, etc.) in an area managed by the server, and the client device uses the three-dimensional map received from the server to perform a process for identifying the self-position of the client device or a process for displaying map information to a user or the like who operates the client device.</p><p id="p-0927" num="0922">The following describes an example of the operation in this case. First, the server encodes the geometry information of the three-dimensional map using an octree structure, or the like. Then, the sever generates a bitstream of three-dimensional map A by layer-encoding the attribute information of the three-dimensional map using N LoDs established based on the geometry information, and stores the generated bitstream in the server. The sever also generates a bitstream of three-dimensional map B by layer-encoding the attribute information of the three-dimensional map using M LoDs (M&#x3c;N) established based on the geometry information, and stores the generated bitstream in the server.</p><p id="p-0928" num="0923">Next, the client device requests the server to send the three-dimensional map in accordance with the intended use of the client device. For example, when the client device performs highly accurate estimation of the self-position using the geometry information and the attribute information in N LoDs, the client device determines that a decoding result to the dense three-dimensional points is necessary as the attribute information, and requests the server to send the bitstream of three-dimensional map A. Moreover, when the client device displays the three-dimensional map information to a user or the like, the client device determines that a decoding result to the sparse three-dimensional points is necessary as the attribute information, and requests the server to send the bitstream of three-dimensional map B including the geometry information and the attribute information in M LoDs (M&#x3c;N) starting from an upper layer LoDO. Then, in response to the send request for the map information from the client device, the server sends the bitstream of encoded three-dimensional map A or B to the client device.</p><p id="p-0929" num="0924">The client device receives the bitstream of three-dimensional map A or B sent from the server in accordance with the intended use of the client device, and decodes the received bitstream. In this way, the server changes a bitstream to be sent, in accordance with the intended use of the client device. With this, it is possible to reduce the processing load of the client device.</p><p id="p-0930" num="0925">In the example shown in <figref idref="DRAWINGS">FIG. <b>113</b></figref>, the server stores three-dimensional map A and three-dimensional map B. The server generates three-dimensional map A by encoding the geometry information of the three-dimensional map using, for example, an octree structure, and encoding the attribute information of the three-dimensional map using N LoDs. In other words. NumLoD included in the bitstream of three-dimensional map A indicates N.</p><p id="p-0931" num="0926">The server also generates three-dimensional map B by encoding the geometry information of the three-dimensional map using, for example, an octree structure, and encoding the attribute information of the three-dimensional map using M LoDs. In other words, NumLoD included in the bitstream of three-dimensional map B indicates M.</p><p id="p-0932" num="0927">Client device A performs highly accurate estimation of the self-position. In this case, client device A determines that all the geometry information and all the attribute information are necessary, and requests the server to send three-dimensional map A including all the geometry information and the attribute information constructed from N LoDs. Client device A receives three-dimensional map A, and decodes all the geometry information and the attribute information constructed from N LoDs.</p><p id="p-0933" num="0928">Client device B displays the three-dimensional map to a user. In this case, client device B determines that all the geometry information and the attribute information in M LoDs (M&#x3c;N) are necessary, and requests the server to send three-dimensional map B including all the geometry information and the attribute information constructed from M LoDs. Client device B receives three-dimensional map B, and decodes all the geometry information and the attribute information constructed from M LoDs.</p><p id="p-0934" num="0929">It is to be noted that in addition to three-dimensional map B, the server (the three-dimensional data encoding device) may generate three-dimensional map C in which attribute information in the remaining N-M LoDs is encoded, and send three-dimensional map C to client device B in response to the request from client device B. Moreover, client device B may obtain the decoding result of N LoDs using the bitstreams of three-dimensional maps B and C.</p><p id="p-0935" num="0930">Hereinafter, an example of an application process will be described. <figref idref="DRAWINGS">FIG. <b>114</b></figref> is a flowchart illustrating an example of the application process. When an application operation is started, a three-dimensional data demultiplexing device obtains an ISOBMFF file including point cloud data and a plurality of pieces of encoded data (S<b>7301</b>). For example, the three-dimensional data demultiplexing device may obtain the ISOBMFF file through communication, or may read the ISOBMFF file from the accumulated data.</p><p id="p-0936" num="0931">Next, the three-dimensional data demultiplexing device analyzes the general configuration information in the ISOBMFF file, and specifies the data to be used for the application (S<b>7302</b>). For example, the three-dimensional data demultiplexing device obtains data that is used for processing, and does not obtain data that is not used for processing.</p><p id="p-0937" num="0932">Next, the three-dimensional data demultiplexing device extracts one or more pieces of data to be used for the application, and analyzes the configuration information on the data (S<b>7303</b>).</p><p id="p-0938" num="0933">When the type of the data is encoded data (encoded data in S<b>7304</b>), the three-dimensional data demultiplexing device converts the ISOBMFF to an encoded stream, and extracts a timestamp (S<b>7305</b>). Additionally, the three-dimensional data demultiplexing device refers to, for example, the flag indicating whether or not the synchronization between data is aligned to determine whether or not the synchronization between data is aligned, and may perform a synchronization process when not aligned.</p><p id="p-0939" num="0934">Next, the three-dimensional data demultiplexing device decodes the data with a predetermined method according to the timestamp and the other instructions, and processes the decoded data (S<b>7306</b>).</p><p id="p-0940" num="0935">On the other hand, when the type of the data is RAW data (RAW data in S<b>7304</b>), the three-dimensional data demultiplexing device extracts the data and timestamp (<b>57307</b>). Additionally, the three-dimensional data demultiplexing device may refer to, for example, the flag indicating whether or not the synchronization between data is aligned to determine whether or not the synchronization between data is aligned, and may perform a synchronization process when not aligned. Next, the three-dimensional data demultiplexing device processes the data according to the timestamp and the other instructions (S<b>7308</b>).</p><p id="p-0941" num="0936">For example, an example will be described in which the sensor signals obtained by a beam LiDAR, a FLASH LiDAR, and a camera are encoded and multiplexed with respective different encoding schemes. <figref idref="DRAWINGS">FIG. <b>115</b></figref> is a diagram illustrating examples of the sensor ranges of a beam LiDAR, a FLASH LiDAR, and a camera. For example, the beam LiDAR detects all directions in the periphery of a vehicle (sensor), and the FLASH LiDAR and the camera detect the range in one direction (for example, the front) of the vehicle.</p><p id="p-0942" num="0937">In the case of an application that integrally handles a LiDAR point cloud, the three-dimensional data demultiplexing device refers to the general configuration information, and extracts and decodes the encoded data of the beam LiDAR and the FLASH LiDAR. Additionally, the three-dimensional data demultiplexing device does not extract camera images.</p><p id="p-0943" num="0938">According to the timestamps of the beam LiDAR and the FLASH LiDAR, the three-dimensional data demultiplexing device simultaneously processes the respective encoded data of the time of the same timestamp.</p><p id="p-0944" num="0939">For example, the three-dimensional data demultiplexing device may present the processed data with a presentation device, may synthesize the point cloud data of the beam LiDAR and the FLASH LiDAR, or may perform a process such as rendering.</p><p id="p-0945" num="0940">Additionally, in the case of an application that performs calibration between data, the three-dimensional data demultiplexing device may extract sensor geometry information, and use the sensor geometry information in the application.</p><p id="p-0946" num="0941">For example, the three-dimensional data demultiplexing device may select whether to use beam LiDAR information or FLASH LiDAR information in the application, and may switch the process according to the selection result.</p><p id="p-0947" num="0942">In this manner, since it is possible to adaptively change the obtaining of data and the encoding process according to the process of the application, the processing amount and the power consumption can be reduced.</p><p id="p-0948" num="0943">Hereinafter, a use case in automated driving will be described. <figref idref="DRAWINGS">FIG. <b>116</b></figref> is a diagram illustrating a configuration example of an automated driving system. This automated driving system includes cloud server <b>7350</b>, and edge <b>7360</b> such as an in-vehicle device or a mobile device. Cloud server <b>7350</b> includes demultiplexer <b>7351</b>, decoders <b>7352</b>A, <b>7352</b>B, and <b>7355</b>, point cloud data synthesizer <b>7353</b>, large data accumulator <b>7354</b>, comparator <b>7356</b>, and encoder <b>7357</b>. Edge <b>7360</b> includes sensors <b>7361</b>A and <b>7361</b>B, point cloud data generators <b>7362</b>A and <b>7362</b>B, synchronizer <b>7363</b>, encoders <b>7364</b>A and <b>7364</b>B, multiplexer <b>7365</b>, update data accumulator <b>7366</b>, demultiplexer <b>7367</b>, decoder <b>7368</b>, filter <b>7369</b>, self-position estimator <b>7370</b>, and driving controller <b>7371</b>.</p><p id="p-0949" num="0944">In this system, edge <b>7360</b> downloads large data, which is large point-cloud map data accumulated in cloud server <b>7350</b>. Edge <b>7360</b> performs a self-position estimation process of edge <b>7360</b> (a vehicle or a terminal) by matching the large data with the sensor information obtained by edge <b>7360</b>. Additionally, edge <b>7360</b> uploads the obtained sensor information to cloud server <b>7350</b>, and updates the large data to the latest map data.</p><p id="p-0950" num="0945">Additionally, in various applications that handle point cloud data in the system, point cloud data with different encoding methods are handled.</p><p id="p-0951" num="0946">Cloud server <b>7350</b> encodes and multiplexes large data. Specifically, encoder <b>7357</b> performs encoding by using a third encoding method suitable for encoding a large point cloud. Additionally, encoder <b>7357</b> multiplexes encoded data. Large data accumulator <b>7354</b> accumulates the data encoded and multiplexed by encoder <b>7357</b>.</p><p id="p-0952" num="0947">Edge <b>7360</b> performs sensing. Specifically, point cloud data generator <b>7362</b>A generates first point cloud data (geometry information (geometry) and attribute information) by using the sensing information obtained by sensor <b>7361</b>A. Point cloud data generator <b>7362</b>B generates second point cloud data (geometry information and attribute information) by using the sensing information obtained by sensor <b>7361</b>B. The generated first point cloud data and second point cloud data are used for the self-position estimation or vehicle control of automated driving, or for map updating. In each process, a part of information of the first point cloud data and the second point cloud data may be used.</p><p id="p-0953" num="0948">Edge <b>7360</b> performs the self-position estimation. Specifically, edge <b>7360</b> downloads large data from cloud server <b>7350</b>. Demultiplexer <b>7367</b> obtains encoded data by demultiplexing the large data in a file format. Decoder <b>7368</b> obtains large data, which is large point-cloud map data, by decoding the obtained encoded data.</p><p id="p-0954" num="0949">Self-position estimator <b>7370</b> estimates the self-position in the map of a vehicle by matching the obtained large data with the first point cloud data and the second point cloud data generated by point cloud data generators <b>7362</b>A and <b>7362</b>B. Additionally, driving controller <b>7371</b> uses the matching result or the self-position estimation result for driving control.</p><p id="p-0955" num="0950">Note that self-position estimator <b>7370</b> and driving controller <b>7371</b> may extract specific information, such as geometry information, of the large data, and may perform processes by using the extracted information. Additionally, filter <b>7369</b> performs a process such as correction or decimation on the first point cloud data and the second point cloud data. Self-position estimator <b>7370</b> and driving controller <b>7371</b> may use the first point cloud data and second point cloud data on which the process has been performed. Additionally, self-position estimator <b>7370</b> and driving controller <b>7371</b> may use the sensor signals obtained by sensors <b>7361</b>A and <b>7361</b>B.</p><p id="p-0956" num="0951">Synchronizer <b>7363</b> performs time synchronization and geometry correction between a plurality of sensor signals or the pieces of data of a plurality of pieces of point cloud data. Additionally, synchronizer <b>7363</b> may correct the geometry information on the sensor signal or point cloud data to match the large data, based on geometry correction information on the large data and sensor data generated by the self-position estimation process.</p><p id="p-0957" num="0952">Note that synchronization and geometry correction may be performed not by edge <b>7360</b>, but by cloud server <b>7350</b>. In this case, edge <b>7360</b> may multiplex the synchronization information and the geometry information to transmit the synchronization information and the geometry information to cloud server <b>7350</b>.</p><p id="p-0958" num="0953">Edge <b>7360</b> encodes and multiplexes the sensor signal or point cloud data. Specifically, the sensor signal or point cloud data is encoded by using a first encoding method or a second encoding method suitable for encoding each signal. For example, encoder <b>7364</b>A generates first encoded data by encoding first point cloud data by using the first encoding method. Encoder <b>7364</b>B generates second encoded data by encoding second point cloud data by using the second encoding method.</p><p id="p-0959" num="0954">Multiplexer <b>7365</b> generates a multiplexed signal by multiplexing the first encoded data, the second encoded data, the synchronization information, and the like. Update data accumulator <b>7366</b> accumulates the generated multiplexed signal. Additionally, update data accumulator <b>7366</b> uploads the multiplexed signal to cloud server <b>7350</b>.</p><p id="p-0960" num="0955">Cloud server <b>7350</b> synthesizes the point cloud data. Specifically, demultiplexer <b>7351</b> obtains the first encoded data and the second encoded data by demultiplexing the multiplexed signal uploaded to cloud server <b>7350</b>. Decoder <b>7352</b>A obtains the first point cloud data (or sensor signal) by decoding the first encoded data. Decoder <b>7352</b>B obtains the second point cloud data (or sensor signal) by decoding the second encoded data.</p><p id="p-0961" num="0956">Point cloud data synthesizer <b>7353</b> synthesizes the first point cloud data and the second point cloud data with a predetermined method. When the synchronization information and the geometry correction information are multiplexed in the multiplexed signal, point cloud data synthesizer <b>7353</b> may perform synthesis by using these pieces of information.</p><p id="p-0962" num="0957">Decoder <b>7355</b> demultiplexes and decodes the large data accumulated in large data accumulator <b>7354</b>. Comparator <b>7356</b> compares the point cloud data generated based on the sensor signal obtained by edge <b>7360</b> with the large data held by cloud server <b>7350</b>, and determines the point cloud data that needs to be updated. Comparator <b>7356</b> updates the point cloud data that is determined to need to be updated of the large data to the point cloud data obtained from edge <b>7360</b>.</p><p id="p-0963" num="0958">Encoder <b>7357</b> encodes and multiplexes the updated large data, and accumulates the obtained data in large data accumulator <b>7354</b>.</p><p id="p-0964" num="0959">As described above, the signals to be handled may be different, and the signals to be multiplexed or encoding methods may be different, according to the usage or applications to be used. Even in such a case, flexible decoding and application processes are enabled by multiplexing data of various encoding schemes by using the present embodiment. Additionally, even in a case where the encoding schemes of signals are different, by conversion to an encoding scheme suitable for demultiplexing, decoding, data conversion, encoding, and multiplexing processing, it becomes possible to build various applications and systems, and to offer of flexible services.</p><p id="p-0965" num="0960">Hereinafter, an example of decoding and application of divided data will be described. First, the information on divided data will be described. <figref idref="DRAWINGS">FIG. <b>117</b></figref> is a diagram illustrating a configuration example of a bitstream. The general information of divided data indicates, for each divided data, the sensor ID (sensor_id) and data ID (data_id) of the divided data. Note that the data ID is also indicated in the header of each encoded data.</p><p id="p-0966" num="0961">Note that the general information of divided data illustrated in <figref idref="DRAWINGS">FIG. <b>117</b></figref> includes, in addition to the sensor ID, at least one of the sensor information (Sensor), the version (Version) of the sensor, the maker name (Maker) of the sensor, the mount information (Mount Info.) of the sensor, and the position coordinates of the sensor (World Coordinate). Accordingly, the three-dimensional data decoding device can obtain the information on various sensors from the configuration information.</p><p id="p-0967" num="0962">The general information of divided data may be stored in SPS, GPS, or APS, which is the metadata, or may be stored in SEI, which is the metadata not required for encoding. Additionally, at the time of multiplexing, the three-dimensional data encoding device stores the SEI in a file of ISOBMFF. The three-dimensional data decoding device can obtain desired divided data based on the metadata.</p><p id="p-0968" num="0963">In <figref idref="DRAWINGS">FIG. <b>117</b></figref>, SPS is the metadata of the entire encoded data, GPS is the metadata of the geometry information, APS is the metadata for each attribute information, G is encoded data of the geometry information for each divided data, and A<b>1</b>, etc. are encoded data of the attribute information for each divided data.</p><p id="p-0969" num="0964">Next, an application example of divided data will be described. An example of application will be described in which an arbitrary point cloud is selected, and the selected point cloud is presented. <figref idref="DRAWINGS">FIG. <b>118</b></figref> is a flowchart of a point cloud selection process performed by this application. <figref idref="DRAWINGS">FIG. <b>119</b></figref> to <figref idref="DRAWINGS">FIG. <b>121</b></figref> are diagrams illustrating screen examples of the point cloud selection process.</p><p id="p-0970" num="0965">As illustrated in <figref idref="DRAWINGS">FIG. <b>119</b></figref>, the three-dimensional data decoding device that performs the application includes, for example, a UI unit that displays an input UI (user interface) <b>8661</b> for selecting an arbitrary point cloud. Input UI <b>8661</b> includes presenter <b>8662</b> that presents the selected point cloud, and an operation unit (buttons <b>8663</b> and <b>8664</b>) that receives operations by a user. After a point cloud is selected in UI <b>8661</b>, the three-dimensional data decoding device obtains desired data from accumulator <b>8665</b>.</p><p id="p-0971" num="0966">First, based on an operation by the user on input UI <b>8661</b>, the point cloud information that the user wants to display is selected (S<b>8631</b>). Specifically, by selecting button <b>8663</b>. the point cloud based on sensor <b>1</b> is selected. By selecting button <b>8664</b>, the point cloud based on sensor <b>2</b> is selected. Alternatively, by selecting both button <b>8663</b> and button <b>8664</b>, the point cloud based on sensor <b>1</b> and the point cloud based on sensor <b>2</b> are selected. Note that it is an example of the selection method of point cloud, and it is not limited to this.</p><p id="p-0972" num="0967">Next, the three-dimensional data decoding device analyzes the general information of divided data included in the multiplexed signal (bitstream) or encoded data, and specifies the data ID (data_id) of the divided data constituting the selected point cloud from the sensor ID (sensor_id) of the selected sensor (S<b>8632</b>). Next, the three-dimensional data decoding device extracts, from the multiplexed signal, the encoded data including the specified and desired data ID, and decodes the extracted encoded data to decode the point cloud based on the selected sensor (S<b>8633</b>). Note that the three-dimensional data decoding device does not decode the other encoded data.</p><p id="p-0973" num="0968">Lastly, the three-dimensional data decoding device presents (for example, displays) the decoded point cloud (S<b>8634</b>). <figref idref="DRAWINGS">FIG. <b>120</b></figref> illustrates an example in the case where button <b>8663</b> for sensor <b>1</b> is pressed, and the point cloud of sensor <b>1</b> is presented. <figref idref="DRAWINGS">FIG. <b>121</b></figref> illustrates an example in the case where both button <b>8663</b> for sensor <b>1</b> and button <b>8664</b> for sensor <b>2</b> are pressed, and the point clouds of sensor <b>1</b> and sensor <b>2</b> are presented.</p><p id="p-0974" num="0969">A three-dimensional data encoding device, a three-dimensional data decoding device, and the like according to the embodiments of the present disclosure have been described above, but the present disclosure is not limited to these embodiments.</p><p id="p-0975" num="0970">Note that each of the processors included in the three-dimensional data encoding device, the three-dimensional data decoding device, and the like according to the above embodiments is typically implemented as a large-scale integrated (LSI) circuit, which is an integrated circuit (IC). These may take the form of individual chips, or may be partially or entirely packaged into a single chip.</p><p id="p-0976" num="0971">Such IC is not limited to an LSI, and thus may be implemented as a dedicated circuit or a general-purpose processor. Alternatively, a field programmable gate array (FPGA) that allows for programming after the manufacture of an LSI, or a reconfigurable processor that allows for reconfiguration of the connection and the setting of circuit cells inside an LSI may be employed.</p><p id="p-0977" num="0972">Moreover, in the above embodiments, the structural components may be implemented as dedicated hardware or may be realized by executing a software program suited to such structural components. Alternatively, the structural components may be implemented by a program executor such as a CPU or a processor reading out and executing the software program recorded in a recording medium such as a hard disk or a semiconductor memory.</p><p id="p-0978" num="0973">The present disclosure may also be implemented as a three-dimensional data encoding method, a three-dimensional data decoding method, or the like executed by the three-dimensional data encoding device, the three-dimensional data decoding device, and the like.</p><p id="p-0979" num="0974">Also, the divisions of the functional blocks shown in the block diagrams are mere examples, and thus a plurality of functional blocks may be implemented as a single functional block, or a single functional block may be divided into a plurality of functional blocks, or one or more functions may be moved to another functional block. Also, the functions of a plurality of functional blocks having similar functions may be processed by single hardware or software in a parallelized or time-divided manner.</p><p id="p-0980" num="0975">Also, the processing order of executing the steps shown in the flowcharts is a mere illustration for specifically describing the present disclosure, and thus may be an order other than the shown order. Also, one or more of the steps may be executed simultaneously (in parallel) with another step.</p><p id="p-0981" num="0976">A three-dimensional data encoding device, a three-dimensional data decoding device, and the like according to one or more aspects have been described above based on the embodiments, but the present disclosure is not limited to these embodiments. The one or more aspects may thus include forms achieved by making various modifications to the above embodiments that can be conceived by those skilled in the art, as well forms achieved by combining structural components in different embodiments, without materially departing from the spirit of the present disclosure.</p><p id="p-0982" num="0977">Although only some exemplary embodiments of the present disclosure have been described in detail above, those skilled in the art will readily appreciate that many modifications are possible in the exemplary embodiments without materially departing from the novel teachings and advantages of the present disclosure. Accordingly, all such modifications are intended to be included within the scope of the present disclosure.</p><heading id="h-0015" level="1">INDUSTRIAL APPLICABILITY</heading><p id="p-0983" num="0978">The present disclosure is applicable to a three-dimensional data encoding device and a three-dimensional data decoding device.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A three-dimensional data encoding method comprising:<claim-text>calculating a prediction residual that is a difference between information of a three-dimensional point included in point cloud data and a predicted value; and</claim-text><claim-text>generating a bitstream including first information with respect to the prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the information of the three-dimensional point is geometry information of the three-dimensional point, and</claim-text><claim-text>in the calculating, the predicted value is calculated using a prediction tree indicating a reference relation.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the geometry information includes components,</claim-text><claim-text>in the calculating, the prediction residual is calculated for each of the components, and</claim-text><claim-text>the bitstream includes, for each of the components, the first information, the second information, and the third information.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the third information is provided for each of processing units including three-dimensional points.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first information indicates a bit count obtained by subtracting one from the bit count indicated in the second information.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the bitstream further includes fourth information indicating whether the prediction residual is zero, and fifth information indicating whether the prediction residual is positive or negative, and</claim-text><claim-text>the first information indicates a value obtained by subtracting one from an absolute value of the prediction residual.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A three-dimensional data decoding method comprising:<claim-text>obtaining, from a bitstream, first information with respect to a prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information, the prediction residual being a difference between information of a three-dimensional point included in point cloud data and a predicted value; and</claim-text><claim-text>calculating the information of the three-dimensional point by adding the predicted value to the prediction residual, using the first information, the second information, and the third information.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>,<claim-text>wherein the information of the three-dimensional point is geometry information of the three-dimensional point, and</claim-text><claim-text>in the calculating, the predicted value is calculated using a prediction tree indicating a reference relation.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>,<claim-text>wherein the geometry information includes components,</claim-text><claim-text>the bitstream includes, for each of the components, the first information, the second information, and the third information, and</claim-text><claim-text>in the calculating, each of the components of the geometry information is calculated using the first information, the second information, and the third information.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>,<claim-text>wherein the third information is provided for each of processing units including three-dimensional points.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>,<claim-text>wherein the first information indicates a bit count obtained by subtracting one from the bit count indicated in the second information.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>,<claim-text>wherein the bitstream further includes fourth information indicating whether the prediction residual is zero, and fifth information indicating whether the prediction residual is positive or negative, and</claim-text><claim-text>the first information indicates a value obtained by subtracting one from an absolute value of the prediction residual.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A three-dimensional data encoding device comprising:<claim-text>a processor; and</claim-text><claim-text>memory,</claim-text><claim-text>wherein using the memory, the processor:<claim-text>calculates a prediction residual that is a difference between information of a three-dimensional point included in point cloud data and a predicted value; and</claim-text><claim-text>generates a bitstream including first information with respect to the prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A three-dimensional data decoding device comprising:<claim-text>a processor; and</claim-text><claim-text>memory,</claim-text><claim-text>wherein using the memory, the processor:<claim-text>obtains, from a bitstream, first information with respect to a prediction residual, second information indicating a bit count of the first information, and third information indicating a bit count of the second information, the prediction residual being a difference between information of a three-dimensional point included in point cloud data and a predicted value; and</claim-text><claim-text>calculates the information of the three-dimensional point by adding the predicted value to the prediction residual, using the first information, the second information, and the third information.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>