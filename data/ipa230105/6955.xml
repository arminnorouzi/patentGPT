<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006956A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006956</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17856838</doc-number><date>20220701</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>212</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>212</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e43">SPAM FORECASTING AND PREEMPTIVE BLOCKING OF PREDICTED SPAM ORIGINS</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217676</doc-number><date>20210701</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>State Farm Mutual Automobile Insurance Company</orgname><address><city>Bloomington</city><state>IL</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Hamilton</last-name><first-name>Jason</first-name><address><city>Bloomington</city><state>IL</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system is configured to analyze large volumes of sample emails from past spam campaigns to identify homogeneous features, as well as systematically heterogeneous features, which spam originators fail to obfuscate. By extracting origin-referencing features therefrom, the system predicts that spam originators will mass-acquire domain names at certain registrars for the purpose of future spam floods, and repeatedly and periodically analyzes domain name records on an automated basis to identify domain names which will imminently be utilized as spam origins. Since it may be necessary to block tens of thousands of domains preemptively to avert spam floods, performance of such large-scale analysis by a computing system allows spam origins to be predicted on a timely basis within a day of spam floods being deployed, and domain lists to be generated and configured responsively in time to prevent the spam floods.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="234.95mm" wi="150.62mm" file="US20230006956A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="255.61mm" wi="164.68mm" file="US20230006956A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="236.64mm" wi="123.70mm" file="US20230006956A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="234.27mm" wi="166.54mm" orientation="landscape" file="US20230006956A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="239.18mm" wi="128.02mm" file="US20230006956A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="224.28mm" wi="133.43mm" file="US20230006956A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of and is a non-provisional of U.S. Patent Application No. 63/217,676, filed Jul. 1, 2021, and entitled &#x201c;SPAM FORECASTING AND PREEMPTIVE BLOCKING OF PREDICTED SPAM ORIGINS,&#x201d; the disclosure of which is incorporated by reference herein in its entirety for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to using features of past spam email campaigns which reference spam origins, compared against domain name records, to predict future spam origin descriptors and identify future spam origins as a basis for configuring a domain list to preemptively block origins of future spam campaigns, without depending on reputation and content-based blocking.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The blocking of unsolicited email (spam) is conventionally achieved by developing reputation records and content analysis based on content of spam email specimens. Both are reactive and based on what has been seen before. Persistent spammers often switch cloud providers and switch domains to defeat reputation records. Similarly, automation can alter phrases contained in spam emails to defeat content analysis. Some spam targets have blocked IP addresses based on the assigned country, but that is only moderately effective since a spammer can rent a server in another country. Thus, there are currently cyclic traditional anti-spam efforts in which attackers start a spam campaign; defenders key on criteria like the sending IP address, sending email address, email subject, or phrases in the body of the email to block future spam without impacting wanted messages; attackers send from a new, unblocked domain, with new subjects and variants of the phrases in the email body; defenders block the new criteria; and the cycle continues.</p><p id="p-0005" num="0004">Email spam attacks typically direct spam to both valid and invalid email addresses. When spam attacks reach valid email addresses, the spam disrupts recipients' workflow and generates additional work for the recipients and email security teams. When spam attacks are directed to invalid email addresses, email infrastructure, including outbound email scanners are often flooded by non-deliverables from Exchange servers, which in turn causes legitimate outbound emails to be delayed. Accordingly, there is an opportunity to improve anti-spam measures.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">This disclosure describes techniques, systems, methods, and computer-executable instructions on computer-readable media for applying publicly available intelligence to anti-spam measures to proactively defend against spam campaigns. Aspects can include identifying email samples of past spam campaigns, compiling domain name records from a DNS records source, predicting future homogeneous spam origin descriptors, identifying predicted spam origins, and configuring a mail proxy server to block future emails from the predicted spam origins.</p><p id="p-0007" num="0006">According to a first aspect, an anti-spam system can include one or more processing units and one or more computer-readable media storing computer-executable instructions that, when executed by the one or more processing units, cause the one or more processing units to perform operations to block an email spam campaign preemptively. The operations can include comparing origin-referencing features of a set of substantially homogeneous email samples against compiled domain name records from a DNS records source to predict homogeneous spam origin descriptors; and matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records to identify predicted spam origins among matched domain name records.</p><p id="p-0008" num="0007">In some examples associated with the first aspect, the operations can include determining email samples of a past spam campaign; identifying one or more homogeneous features across a set of the email samples; identifying one or more systematically heterogeneous features across the set of the email samples; and identifying the set of email samples as substantially homogeneous.</p><p id="p-0009" num="0008">In some examples associated with the first aspect, the one or more homogeneous features can include at least one of: a first set of recipient addresses in email samples of a first past spam campaign being substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign; a TLD in sender addresses being substantially homogeneous across intra-campaign sample of a same past spam campaign; and a TLD in sender addresses being substantially homogeneous across inter-campaign samples of different past spam campaigns.</p><p id="p-0010" num="0009">In some examples associated with the first aspect, the one or more systematically heterogeneous features can include at least one of: domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words; domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content; and domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in including heterogeneous subdomains.</p><p id="p-0011" num="0010">In some examples associated with the first aspect, the operations can include: compiling the domain name records in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples; and determining additional homogeneously origin-referencing features based on comparing the origin-referencing features against the compiled domain name records.</p><p id="p-0012" num="0011">In some examples associated with the first aspect, the operations can include: writing domain matching expressions based on predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features; and matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records comprises applying the domain matching expressions against the compiled domain name records.</p><p id="p-0013" num="0012">In some examples associated with the first aspect, the operations can include: generating a domain list based on the predicted spam origins; distributing the domain list to a proxy server; and configuring a mail scanner running on the proxy server to block emails according to the distributed domain list.</p><p id="p-0014" num="0013">According to a second aspect, a computer-implemented method of blocking an email spam campaign can include operations. The operations can include comparing origin-referencing features of a set of substantially homogeneous email samples against compiled domain name records from a DNS records source to predict homogeneous spam origin descriptors; and matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records to identify predicted spam origins among matched domain name records.</p><p id="p-0015" num="0014">In some examples associated with the second aspect, the operations can include determining email samples of a past spam campaign; identifying one or more homogeneous features across a set of the email samples; identifying one or more systematically heterogeneous features across the set of the email samples; and identifying the set of email samples as substantially homogeneous.</p><p id="p-0016" num="0015">In some examples associated with the second aspect, the one or more homogeneous features can include at least one of: a first set of recipient addresses in email samples of a first past spam campaign being substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign; a TLD in sender addresses being substantially homogeneous across intra-campaign samples of a same past spam campaign; and a TLD in sender addresses being substantially homogeneous across inter-campaign samples of different past spam campaigns.</p><p id="p-0017" num="0016">In some examples associated with the second aspect, wherein the one or more systematically heterogeneous features can include at least one of: domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words; domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content; and domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in including heterogeneous subdomains.</p><p id="p-0018" num="0017">In some examples associated with the second aspect, the operations can include: compiling the domain name records in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples; and determining additional homogeneously origin-referencing features based on comparing the origin-referencing features against the compiled domain name records.</p><p id="p-0019" num="0018">In some examples associated with the second aspect, the operations can include: writing domain matching expressions based on predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features; and matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records comprises applying the domain matching expressions against the compiled domain name records.</p><p id="p-0020" num="0019">In some examples associated with the second aspect, the operations can include generating a domain list based on the predicted spam origins; distributing the domain list to a proxy server; and configuring a mail scanner running on the proxy server to block emails according to the distributed domain list.</p><p id="p-0021" num="0020">According to a third aspect, one or more computer-readable media storing computer-executable instructions that, when executed by one or more processing units, cause the one or more processing units to perform operations to block an email spam campaign. The operations can include comparing origin-referencing features of a set of substantially homogeneous email samples against compiled domain name records from a DNS records source to predict homogeneous spam origin descriptors; and matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records to identify predicted spam origins among matched domain name records.</p><p id="p-0022" num="0021">In some examples associated with the third aspect, the operations can include: determining email samples of a past spam campaign; identifying one or more homogeneous features across a set of the email samples; identifying one or more systematically heterogeneous features across the set of the email samples; and identifying the set of email samples as substantially homogeneous.</p><p id="p-0023" num="0022">In some examples associated with the third aspect, the one or more homogeneous features can include at least one of: a first set of recipient addresses in email samples of a first past spam campaign being substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign; a TLD in sender addresses being substantially homogeneous across intra-campaign samples of a same past spam campaign; and a TLD in sender addresses being substantially homogeneous across inter-campaign samples of different past spam campaigns.</p><p id="p-0024" num="0023">In some examples associated with the third aspect, the one or more systematically heterogeneous features can include at least one of: domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words; domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content; and domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in including heterogeneous subdomains.</p><p id="p-0025" num="0024">In some examples associated with the third aspect, the operations can include: compiling the domain name records in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples; and determining additional homogeneously origin-referencing features based on comparing the origin-referencing features against the compiled domain name records.</p><p id="p-0026" num="0025">In some examples associated with the third aspect, the operations can include: writing domain matching expressions based on predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features; and matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records comprises applying the domain matching expressions against the compiled domain name records.</p><p id="p-0027" num="0026">In some examples associated with the third aspect, the operations can include: generating a domain list based on the predicted spam origins; distributing the domain list to a proxy server; and configuring a mail scanner running on the proxy server to block emails according to the distributed domain list.</p><p id="p-0028" num="0027">This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key and/or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter. The term &#x201c;techniques,&#x201d; for instance, can refer to system(s), method(s), computer-readable instructions, module(s), component(s), algorithms, hardware logic, and/or operation(s) as permitted by the context described above and throughout the document.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0029" num="0028">The detailed description is described with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The same reference numbers in different figures indicate similar and/or identical items.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram depicting an example environment for applying publicly available intelligence to spam forecasting as described herein.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram depicting an example computing device for applying publicly available intelligence to spam forecasting as described herein.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating example results of applying publicly available intelligence to spam forecasting as described herein.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram that illustrates an example process associated with applying publicly available intelligence to spam forecasting as described herein.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIGS. <b>5</b>A, <b>5</b>B, and <b>5</b>C</figref> are flow diagrams that illustrate example processes associated with applying publicly available intelligence to spam forecasting in some instances described herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0035" num="0034">The components shown in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> can be implemented in hardware, software, and/or a combination thereof. In the context of software, the modules or components represent computer-executable instructions that, when executed by one or more processing unit(s), cause one or more processing unit(s) to perform operations. In the context of hardware, the components represent circuitry to perform logic functions implemented, e.g., datapath-control, finite-state-machine sequencing functions, etc. In addition, the diagram of results shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> is only one example illustrating results of applying publicly available intelligence to spam forecasting as described herein, and the described system can produce additional and/or other results. Moreover, the order in which the operations are described in the example flow diagrams shown in <figref idref="DRAWINGS">FIGS. <b>4</b>, <b>5</b>A, <b>5</b>B, and <b>5</b>C</figref> and/or other processes described herein is not intended to be construed as a limitation, and any number of the described operations can be combined in any order and/or in parallel to implement each process.</p><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><heading id="h-0007" level="1">Overview</heading><p id="p-0036" num="0035">According to example embodiments of the present disclosure, by operation of a spam forecasting system to perform the blocks of the example processes herein, the spam forecasting system can identify email samples of past spam campaigns; and can identify substantially homogeneous email samples from among these based on homogeneous and systematically heterogeneous features. Furthermore, on a periodic basis as frequently as daily, the spam forecasting system can compile domain name records from a DNS records source in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples; can compare origin-referencing features of substantially homogeneous email samples against domain name records to determine additional homogeneously origin-referencing features and predict future homogeneous spam origin descriptors; can write domain matching expressions based on predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features; can apply domain matching expressions to the compiled domain name records to identify predicted spam origins among matched domain name records; can forecast a future spam campaign to originate from the predicted spam origins; and can configure a mail proxy server to block future emails from the predicted spam origins.</p><p id="p-0037" num="0036">According to example embodiments of the present disclosure, since spam campaigns of the nature of spam floods cause mail servers of enterprise systems to incur substantial unproductive network traffic, mail handling workloads, and congestion of inbound and outbound mail, it is desired to implement forecasting of spam campaigns to entirely avoid receiving and processing spam floods at mail servers. In order to outmaneuver the engineering of email messages, sending addresses, sending domains, and the like by spam originators to evade conventional spam blocking, example embodiments of the present disclosure configure a system to analyze large volumes of sample emails from past spam campaigns to identify homogeneous features, as well as systematically heterogeneous features, which spam originators fail to obfuscate. By extracting origin-referencing features therefrom, the system can predict that spam originators will mass-acquire domain names at certain registrars for the purpose of future spam floods, and repeatedly and periodically analyze domain name records on an automated basis to identify domain names which will imminently be utilized as spam origins. Since it can be necessary to block tens of thousands of domains preemptively to avert spam floods, and humans cannot actionably analyze massive volumes of domain records within the narrow window of time that spam origin domains are deployed, performance of such large-scale analysis by a computing system allows spam origins to be predicted on a timely basis within a day of spam floods being deployed, and domain lists to be generated and configured responsively in time to prevent the spam floods.</p><heading id="h-0008" level="1">Illustrative Environment</heading><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example environment <b>100</b> in which examples of a spam forecasting system can operate and/or in which methods associated with a spam forecasting system such as those described herein can be performed. The illustrated environment includes an enterprise system <b>102</b>. Enterprise system <b>102</b> includes computing device(s) <b>104</b>(<b>1</b>)-<b>104</b>(N) (individually and/or collectively referred to herein with reference <b>104</b>), where N is any integer greater than and/or equal to 1. Computing device(s) <b>104</b> can include, for example, server(s) and/or desktop computer(s), laptop computer(s), tablet computer(s), hybrid computing device(s), and/or smart phone(s), etc. Computing device(s) <b>104</b> can include a diverse variety of device categories, classes, and/or types and are not limited to any of the particular types of devices illustrated.</p><p id="p-0039" num="0038">In the illustrated example, computing device(s) <b>104</b>(<b>1</b>)-<b>104</b>(N) can be computing nodes of an enterprise system <b>102</b>, e.g., distributed computing resources such as in a computing cluster, which can be hosted by a cloud service such as MICROSOFT AZURE, VMWARE VCLOUD, RACKSPACE, Inc.'s OPENSTACK, AMAZON WEB SERVICES (AWS), IBM SMARTCLOUD, ORACLE CLOUD, etc. Computing devices <b>104</b>(<b>1</b>)-<b>104</b>(N) in enterprise system <b>102</b> can share resources, balance load, increase performance, and/or provide fail-over support and/or redundancy, etc.</p><p id="p-0040" num="0039">By way of example and not limitation, computing device(s) <b>104</b> can include, but are not limited to, blade server(s) and/or other types of server computing device(s) (e.g., <b>104</b>(<b>1</b>)) providing a variety of functionality such as gateway server(s) (e.g., <b>104</b>(<b>2</b>)), proxy server(s) (e.g., <b>104</b>(<b>3</b>)), email server(s), Web servers, map/reduce servers and/or other computation engines, and/or network-attached-storage units. By way of example and not limitation, computing device(s) <b>104</b> can also include, but are not limited to, desktop computers, laptop computers tablet computers, tablet hybrid computers, and/or other telecommunication devices, desktop computers, and/or integrated components for inclusion in computing devices, appliances, and/or other computing device(s) configured to participate in and/or carry out a method associated with a spam forecasting system as described herein.</p><p id="p-0041" num="0040">In some examples, as indicated, computing device(s), e.g., computing devices <b>104</b>, can intercommunicate to participate in and/or carry out methods associated with a spam forecasting system as described herein. For example, a computing device <b>104</b> can be a query source and/or data source and another computing device <b>104</b> can host modules and/or components of a spam forecasting system to store data, to be queried, and/or to provide workflow to manage and/or implement spam forecasting as further described below with reference to, e.g., <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>5</b>C</figref>.</p><p id="p-0042" num="0041">Different devices and/or types of computing devices <b>104</b> can have different needs and/or ways of interacting with enterprise system <b>102</b>. For example, computing devices <b>104</b> can interact with enterprise system <b>102</b> with discrete request/response communications, e.g., for responses and/or updates to manage workflow related to spam forecasting. Additionally, and/or alternatively, computing devices <b>104</b> can be query sources and/or data sources and can interact with enterprise system <b>102</b> with discrete and/or ongoing transmissions of data related to spam forecasting.</p><p id="p-0043" num="0042">In some examples, computing devices <b>104</b> can communicate with each other and/or with other computing devices via one or more network(s) <b>106</b>. In some examples, computing devices <b>104</b> can communicate with external devices such as domain name system (DNS) server(s) <b>108</b> via network(s) <b>106</b>. For example, network(s) <b>106</b> can include public networks such as the Internet, private networks such as an institutional and/or personal intranet, and/or combination(s) of private and public networks. Private networks can include networks connected to the Internet and/or other public network(s) via network address translation (NAT) devices, firewalls, network intrusion detection systems, and/or other devices that restrict and/or control the types of network packets permitted to flow between the private network and the public network(s).</p><p id="p-0044" num="0043">Network(s) <b>106</b> can also include any type of wired and/or wireless network, including but not limited to local area networks (LANs), wide area networks (WANs), satellite networks, cable networks, Wi-Fi networks, WiMAX networks, mobile communications networks (e.g., 3G, 4G, 5G, and so forth), any combination thereof, etc. Network(s) <b>106</b> can utilize communications protocols, such as, for example, packet-based and/or datagram-based protocols such as Internet Protocol (IP), Transmission Control Protocol (TCP), User Datagram Protocol (UDP), other types of protocols, and/or combinations thereof. Moreover, network(s) <b>106</b> can also include a number of devices that facilitate network communications and/or form a hardware infrastructure for the networks, such as switches, routers, gateways, access points, firewalls, base stations, repeaters, backbone devices, and the like. Network(s) <b>106</b> can also include a variety of devices that can facilitate communications between computing devices <b>104</b> and/or other devices using bus protocols of various topologies, e.g., crossbar switches, INFINIBAND switches, FIBRE CHANNEL switches and/or hubs, etc.</p><p id="p-0045" num="0044">In some examples, network(s) <b>106</b> can further include devices that enable connection to a wireless network, such as a wireless access point (WAP). Examples support connectivity through WAPs that send and receive data over various electromagnetic frequencies (e.g., radio frequencies), including WAPs that support Institute of Electrical and Electronics Engineers (IEEE) 802.11 standards (e.g., 802.11g, 802.11n, and so forth), and/or one or more other standards, e.g., BLUETOOTH, cellular-telephony standards such as code division multiple access (CDMA), global system for mobile communication (GSM), 3rd Generation Partnership Project (3GPP) standards, such as long-term evolution (LTE) and/or new radio (NR), voice over internet protocols (VOIP), worldwide interoperability for microwave access (WiMAX), etc.</p><p id="p-0046" num="0045">Different networks have different characteristics, e.g., bandwidth, latency, accessibility (open, announced but secured, and/or not announced), and/or coverage area. The type of network <b>106</b> used for any given connection between, e.g., a computing device <b>104</b> and other resources of enterprise system <b>102</b> and/or other devices such as DNS server(s) <b>108</b> can be selected based on these characteristics and on the type of interaction.</p><p id="p-0047" num="0046">DNS server(s) <b>108</b> use DNS records to translate web site addresses from names that entered for web page addresses, aka uniform resource locators (URLs), to numeric internet protocol (IP) addresses, in the form ###.###.##.##, which are used to access a computer hosting the website associated with the URL. IP addresses are unique within a network, which for websites includes the entire internet. There are multiple types of DNS records that can be implemented. A base type of DNS record is a resource record (RR) that defines a particular resource including the host name for the record, the time to live (TTL) in seconds, which is the amount of time for the record to be cached, the class, which defines the protocol to be used (typically IN for internet protocol), the type, which identifies the RR type according to the type of data in the following data field, and the data payload for the particular type of record. RRs have the form name ttl class type data. In examples, types of DNS records can include canonical name (CNAME) records that cause a URL to automatically redirect from one domain to another. CNAME records have the form abc.yourdomain.com 86400 IN CNAME yourabc.anotherdomain.com. In various examples, types of DNS records can include email exchange (MX) records that point to the mail server that should deliver mail for a domain. MX records have the form 86400 IN MX 10 mail.domain.com. As another example, types of DNS records can include address (A) records that map a domain name to an IP address by automatically appending the domain to a name value. A records have the form www 86400 IN A ##.###.###.#. In various examples, types of DNS records can include name server (NS) records that indicate which server is responsible for queries for a domain. NS records have the form abc.yourdomain.com. 86400 IN NS ns Labc.yourdomain.com, and typically there are at least two in case one of the name servers becomes unavailable, e.g., abc.yourdomain.com. 86400 IN NS ns2.abc.yourdomain.com. As another example, types of DNS records can include pointer (PTR) records that resolve an IP address to a domain name&#x2014;essentially the reverse of an A record. PTR records have the form ##.###.###.#. in-addr.arpa PTR abc.yourdomain.com. In various examples, types of DNS records can include one or more of the above-noted types and/or other types of records.</p><p id="p-0048" num="0047">One or more DNS server(s) <b>108</b> are often assigned as default DNS server(s) <b>108</b> by an internet service provider (ISP), and there are many available and publicly accessible alternative DNS server(s). There are a number of DNS server(s) <b>108</b>(<b>1</b>)-<b>108</b>(K) (individually and/or collectively referred to herein with reference <b>108</b>), where K is any integer greater than and/or equal to 1. In some examples, N=K; in other examples, N&#x3e;K or N&#x3c;K.</p><p id="p-0049" num="0048">Spammers use spam-originating computing device(s) <b>110</b> to initiate and/or evolve email-spam campaigns. Spam-originating computing device(s) <b>110</b> can include, for example, desktop computer(s), laptop computer(s), tablet computer(s), hybrid computing device(s), and/or smart phone(s), etc. Spam-originating computing device(s) <b>110</b> can include a diverse variety of device categories, classes, and/or types and are not limited to the particular type of device illustrated and can connect to a variety of DNS server(s) <b>108</b> via network(s) <b>106</b>. It should be understood that, despite spam-originating computing device(s) <b>110</b> being illustrated herein, such device(s) are generally unknown devices whose geographic locations, IP addresses, and the like cannot be identified. Therefore, spam forecasting systems according to example embodiments of the present disclosure can perform all functionality as described herein without ever identifying spam-originating computing device(s) <b>110</b>.</p><p id="p-0050" num="0049">Still referring to the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, details of an example server computer <b>104</b>(<b>1</b>) are illustrated at inset <b>112</b>. The details of example server computer <b>104</b>(<b>1</b>) can be representative of others of computing device(s) <b>104</b>. However, each of the computing device(s) <b>104</b> can include additional or alternative hardware components and/or software modules.</p><p id="p-0051" num="0050">Illustrated server computing device(s) <b>104</b>(<b>1</b>) can include one or more processing unit(s) <b>114</b>, e.g., integrated electronic circuit(s) operably connected to one or more computer-readable media <b>116</b>, e.g., memories, such as via a bus <b>118</b>. In some examples, a plurality of processing unit(s) <b>114</b> can exchange data through an internal interface bus (e.g., PCIe), rather than and/or in addition to network <b>106</b>. While the processing unit(s) <b>114</b> are described as residing on the server computer(s) <b>104</b>(<b>1</b>), in this example, the processing unit(s) <b>114</b> can also reside on different computing device(s) <b>104</b> in some examples. In some examples, at least two of the processing unit(s) <b>114</b> can reside on different computing device(s) <b>104</b>. In such examples, multiple processing unit(s) <b>114</b> on the same computing device <b>104</b> can use a bus <b>118</b> of the computing device <b>104</b> to exchange data, while processing unit(s) <b>114</b> on different computing device(s) <b>104</b> can exchange data via network(s) <b>106</b>.</p><p id="p-0052" num="0051">Processing unit(s) <b>114</b> can include one or more microprocessors, single-core processors, multi-core processors, CPUs, GPUs, GPGPUs, and/or hardware logic components configured, e.g., via specialized programming from modules and/or APIs, to perform functions described herein. For example, and without limitation, illustrative types of hardware logic components that can be used in and/or as processing unit(s) <b>114</b> include Field-Programmable Gate Arrays (FPGAs), Application-Specific Integrated Circuits (ASICs), Application-Specific Standard Products (ASSPs), System-on-a-Chip systems (SOCs), Complex Programmable Logic Devices (CPLDs), Digital Signal Processors (DSPs), and other types of customizable processors. For example, a processing unit <b>114</b> can represent a hybrid device, such as a device from ALTERA and/or XILINX that includes a CPU core embedded in an FPGA fabric. These and/or other hardware logic components can operate independently and/or, in some instances, can be driven by a CPU. In some examples, at least some of computing device(s) <b>104</b> can include a plurality of processing unit(s) <b>114</b> of multiple types. For example, the processing unit(s) <b>114</b> shown in server computing device(s) <b>104</b>(<b>1</b>) can be a combination of one or more CPUs, GPGPUs, FPGAs, etc. Different processing unit(s) <b>114</b> can have different execution models, e.g., as is the case for graphics processing units (GPUs) and central processing unit (CPUs).</p><p id="p-0053" num="0052">Computer-readable media described herein, e.g., computer-readable media <b>116</b>, includes digital storage media also termed non-transitory computer-readable media, and/or communication media. Digital storage media includes tangible storage units such as volatile memory, nonvolatile memory, and/or other persistent and/or auxiliary computer storage media, removable and non-removable digital storage media implemented in any method and/or technology for storage of information such as computer-readable instructions, data structures, program modules, and/or other data. Digital storage media includes tangible and/or physical forms of media included in a device and/or hardware component that is part of a device and/or external to a device, including but not limited to RAM, static RAM (SRAM), dynamic RAM (DRAM), phase change memory (PRAM), read-only memory (ROM), erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), flash memory, compact disc read-only memory (CD-ROM), digital versatile disks (DVDs), optical cards and/or other optical storage media, magnetic cassettes, magnetic tape, magnetic disk storage, magnetic cards and/or other magnetic storage devices and/or media, solid-state memory devices, storage arrays, network attached storage, storage area networks, hosted computer storage and/or memories, storage, devices, and/or storage media that can be used to store and maintain information for access by server computing device(s) <b>104</b>(<b>1</b>).</p><p id="p-0054" num="0053">In contrast to digital storage media also termed non-transitory computer-readable media, communication media can embody computer-readable instructions, data structures, program modules, and/or other data in a modulated data signal, such as a carrier wave, and/or other transitory transmission mechanism. As defined herein, digital storage media does not include communication media.</p><p id="p-0055" num="0054">In some examples, computer-readable media <b>116</b> can store instructions executable by the processing unit(s) <b>114</b> that, as discussed above, can represent a processing unit incorporated in a computing device <b>104</b>. Computer-readable media <b>116</b> can additionally and/or alternatively store instructions executable by external processing units such as by an external central processing unit (CPU) and/or external processor of any type discussed herein. In some examples at least one processing unit <b>114</b>, e.g., a CPU, graphics processing unit (GPU), and/or hardware logic device, can be incorporated in server computing device(s) <b>104</b>(<b>1</b>), while in some examples at least one processing unit <b>114</b>, e.g., one or more of a CPU, GPU, and/or hardware logic device, can be external to server computing device(s) <b>104</b>(<b>1</b>).</p><p id="p-0056" num="0055">Computer-readable media <b>116</b> can store, for example, computer-executable instructions of programs, and/or applications that are loadable and executable by processing unit(s) <b>114</b> such as an operating system <b>120</b> and/or spam forecasting program <b>122</b>, and/or other programs <b>124</b>.</p><p id="p-0057" num="0056">Computer-readable media <b>116</b> can also store, for example, one or more datastore(s) <b>126</b>. Datastore(s) <b>126</b> can include multiple disparate databases or data sources. For example, the spam forecasting program <b>122</b> can store and/or access domain matching expressions derived from identified past spam campaigns in one or more datastore(s) <b>126</b>. In at least one example, spam forecasting program <b>122</b> can perform data analysis and/or processing of data from the digital records obtained and/or received from the multiple disparate data sources to perform operations to forecast a future email spam campaign, and thereby prevent an email spam campaign preemptively.</p><p id="p-0058" num="0057">Bus <b>118</b>, which in some instances can include one or more of a system bus, a data bus, an address bus, a Peripheral Component Interconnect (PCI) Express (PCIe) bus, a PCI bus, a Mini-PCI bus, and any variety of local, peripheral, and/or independent buses, and/or any combination thereof can operably connect one or more processing unit(s) <b>114</b> to one or more computer-readable media <b>116</b>.</p><p id="p-0059" num="0058">Computing device(s) <b>104</b>, including server computing device(s) <b>104</b>(<b>1</b>), can also include one or more communications interfaces <b>128</b> connected via the bus <b>118</b> to processing unit(s) <b>114</b> to enable wired and/or wireless communications between server computing device(s) <b>104</b>(<b>1</b>) and other networked computing devices <b>104</b> involved in methods associated with a spam forecasting program <b>122</b>, and/or other computing device(s), e.g., over network(s) <b>106</b>. Such communications interface(s) <b>128</b> can include one or more transceiver devices, e.g., network interface controllers (NICs) such as Ethernet NICs and/or other types of transceiver devices, to send and receive communications over a network. The processing unit(s) <b>114</b> can exchange data through respective communications interface(s) <b>128</b>. In some examples, the communications interface <b>128</b> can include a PCI Express (PCIe) transceiver, and the network <b>106</b> can include a PCIe bus. In some examples, the communications interface <b>128</b> can include, but is not limited to, a transceiver for cellular (3G, 4G, 5G, and/or other), WI-FI, Ultra-wideband (UWB), BLUETOOTH, and/or satellite transmissions. The communications interface <b>128</b> can include a wired I/O interface, such as an Ethernet interface, a serial interface, a Universal Serial Bus (USB) interface, an INFINIBAND interface, and/or other wired interfaces. The communications interface <b>128</b> can additionally and/or alternatively include one or more user-interface devices, buses such as memory buses and/or local buses, memory interfaces, and/or hardwired interfaces such as 0-20 mA control lines. For simplicity, these and other modules or components are omitted from the illustrated server computing device <b>104</b>(<b>1</b>).</p><p id="p-0060" num="0059">In some examples not shown, one or more of the processing unit(s) <b>114</b> in one of the server computing device(s) <b>104</b>(<b>1</b>) can be operably connected to computer-readable media <b>116</b> in a different one of the computing device(s) <b>104</b>, e.g., via communications interface <b>128</b> and network <b>106</b>. For example, program code to perform steps of flow diagrams herein, e.g., as described herein with reference to methods associated with the spam forecasting program <b>122</b>, can be downloaded from a first computing device <b>104</b> operating as a server to a second computing device <b>104</b> operating as a client for purposes of certain aspects of the spam forecasting system, via the network <b>106</b>, and executed by one or more processing unit(s) in second computing device <b>104</b>. For example, the computer-executable instructions stored on the computer-readable media <b>116</b> can upon execution configure a computer such as a computing device <b>104</b>(<b>1</b>) to perform operations described herein with reference to the operating system <b>120</b> and/or spam forecasting program <b>122</b> and send lists or criteria to block spam to be implemented by a proxy server and/or email server.</p><p id="p-0061" num="0060">As noted above, computer-readable media <b>116</b> of the server computing device <b>104</b>(<b>1</b>) can store an operating system <b>120</b> and/or spam forecasting program <b>122</b>. In some examples, an operating system <b>120</b> is not used (commonly referred to as a &#x201c;bare metal&#x201d; configuration). In some examples, the operating system <b>120</b> and/or spam forecasting program <b>122</b> can include modules or components that enable and/or direct the server computing device <b>104</b>(<b>1</b>) to receive data via various input interfaces (e.g., user controls, network and/or communications interfaces, memory devices, and/or sensors), and process the data using the processing unit(s) <b>114</b> to generate output. The operating system <b>120</b> and/or spam forecasting program <b>122</b> can further include one or more modules or components that present the output (e.g., display an image on an electronic screen, store data in memory, and/or transmit data to another computing device). The operating system <b>120</b> and/or spam forecasting program <b>122</b> can enable a developer or an engineer, to interact with a computing device <b>104</b> using a user interface <b>130</b>. User interface(s) (UI)s <b>130</b> described herein can include one or more of a graphical user interface (GUI), and audio user interface (AUI), and/or various other input/output interfaces generally referenced as UI including touch-input interfaces and the like. Additionally, the operating system <b>120</b> and/or spam forecasting program <b>122</b> can include modules or components that perform various functions generally associated with an operating system, e.g., storage management and internal-device management.</p><p id="p-0062" num="0061">In some examples, server computing device(s) <b>104</b>(<b>1</b>) can include a user interface <b>130</b> configured to permit a developer or an engineer responsible for server computing device <b>104</b>(<b>1</b>), enterprise system <b>102</b>, environment <b>100</b> and/or an application administrator, to operate the spam forecasting program <b>122</b> and/or to access the datastore(s) <b>126</b>.</p><p id="p-0063" num="0062">Details of an example gateway server(s) <b>104</b>(<b>2</b>) and proxy server(s) <b>104</b>(<b>3</b>) are illustrated at inset <b>132</b>. The details of example gateway server(s) <b>104</b>(<b>2</b>) and proxy server(s) <b>104</b>(<b>3</b>) can be representative of others of computing device(s) <b>104</b>. However, each of the computing device(s) <b>104</b> can include additional and/or alternative hardware and/or software components. gateway server(s) <b>104</b>(<b>2</b>) and proxy server(s) <b>104</b>(<b>3</b>) can include one or more processing unit(s) <b>134</b> operably connected to one or more computer-readable media <b>136</b>, e.g., via a bus <b>138</b>. Some examples of processing unit(s) <b>134</b> are discussed above with reference to processing unit(s) <b>114</b>. Some examples of computer-readable media <b>136</b> are discussed above with reference to computer-readable media <b>116</b>. For example, computer-readable media <b>136</b> can include one or more digital storage media or communications media. Some examples of bus <b>138</b> are discussed above with reference to bus <b>118</b>.</p><p id="p-0064" num="0063">Computer-readable media <b>136</b> can store, for example, computer-executable instructions of an operating system <b>140</b>, a mail scanning program <b>142</b>, and/or other modules, programs, and/or applications <b>144</b> that are loadable and executable by processing unit(s) <b>134</b> as well as one or more datastore(s) <b>146</b>. Other programs <b>144</b> can be operable with a mail scanning program <b>142</b>. Some examples of operating system <b>140</b> are discussed above with reference to operating system <b>120</b>. Some examples of datastore <b>146</b> are discussed above with reference to datastore <b>126</b>.</p><p id="p-0065" num="0064">In some examples, the gateway server(s) <b>104</b>(<b>2</b>) and proxy servers(s) <b>104</b>(<b>3</b>) can be configured to communicate with enterprise system <b>102</b>, other computing device(s) <b>104</b>, DNS server(s) <b>108</b>, etc. via a communications interface <b>148</b>. A mail scanning program <b>142</b>, on proxy servers(s) <b>104</b>(<b>3</b>) can enable implementation of predicted blocking of spam origins. For example, mail scanning program <b>142</b> can send a query to and/or send or receive information from datastore <b>126</b>, can store the information received in datastore <b>146</b>, and can perform techniques associated with a spam forecasting system as described herein.</p><p id="p-0066" num="0065">Gateway server(s) <b>104</b>(<b>2</b>) and proxy server(s) <b>104</b>(<b>3</b>) can include one or more communications interfaces <b>148</b> connected via the bus <b>138</b> to processing unit(s) <b>134</b> to enable wired and/or wireless communications between computing device(s) <b>104</b>, enterprise system <b>102</b>, and/or other computing device(s), over network(s) <b>1026</b>. Some examples are discussed above with reference to communications interface(s) <b>128</b>.</p><p id="p-0067" num="0066">Gateway server(s) <b>104</b>(<b>2</b>) and proxy server(s) <b>104</b>(<b>3</b>) can include a user interface <b>150</b>. For example, computing device <b>104</b>(<b>2</b>) can provide user interface <b>150</b> to control and/or otherwise interact with mail scanning program <b>142</b> and/or other programs <b>144</b>, other computing devices <b>104</b> and/or other parts of enterprise system <b>102</b>, and/or other computing devices. For example, processing unit(s) <b>134</b> can receive inputs e.g., typed and/or spoken queries, selections, and/or other input actions associated with spam forecasting via user interface <b>150</b> and transmit corresponding data via communications interface(s) <b>148</b> to server computing device(s) <b>104</b>(<b>1</b>) and/or other computing devices <b>104</b>.</p><p id="p-0068" num="0067">User interfaces <b>130</b> and/or <b>150</b> can include one or more input devices, integral and/or peripheral to server computing device <b>104</b>(<b>1</b>) and/or gateway server <b>104</b>(<b>2</b>) and/or proxy server <b>104</b>(<b>3</b>). The input devices can be user-operable, and/or can be configured for input from other server computing device <b>104</b>(<b>1</b>) and/or gateway server <b>104</b>(<b>2</b>) and/or proxy server <b>104</b>(<b>3</b>). Examples of input devices can include, e.g., a keyboard, keypad, a mouse, a trackball, a pen sensor and/or smart pen, a light pen and/or light gun, a joystick controller, a voice input device such as a microphone, voice-recognition device, and/or speech-recognition device, a touch input device such as a touchscreen and/or a touch pad, a gestural and/or motion input device such as a depth camera, a grip sensor, an accelerometer, another haptic input, a visual input device such as one or more cameras and/or image sensors, a QR code or bar code scanner, and the like. User interfaces <b>130</b> and/or <b>150</b> can include one or more output devices configured for communication to a user and/or to another computing device <b>104</b>. Output devices can be integral and/or peripheral to server computing device <b>104</b>(<b>1</b>) and/or gateway server <b>104</b>(<b>2</b>) and/or proxy server <b>104</b>(<b>3</b>). Examples of output devices can include a display, a printer, audio speakers, beepers, and/or other audio output devices, a vibration motor, linear vibrator, and/or other haptic output device, and the like.</p><p id="p-0069" num="0068">In some examples, functions described herein can be shared between one or more computing device(s) <b>104</b>. For example, one or more of the computing device(s) <b>104</b> can operate an input layer of one or more neural network(s) and the enterprise system <b>102</b> and/or one or more of computing device(s) <b>104</b> can operate one or more hidden layers and/or output layers of one or more neural network(s). In some examples, the server computing device(s) <b>104</b>(<b>1</b>) can derive homogeneous features and systematically heterogeneous features from sample spam emails associated with an identified past spam campaign; determine homogeneous domain features from sample spam emails; write matching expressions based on a time-sensitive domain feature, and the enterprise system <b>102</b> and/or server computing device(s) <b>104</b>(<b>1</b>) can compile domain name records from DNS records sources, and search domain name records matching expressions by an expression matching module of spam forecasting program <b>122</b>. In some examples, the server computing device(s) <b>104</b>(<b>1</b>) can store the compiled domain name records in datastore <b>126</b>, generate a predicted domain list from the compiled domain name records, and distribute the predicted domain list to proxy server(s) <b>104</b>(<b>3</b>), etc. Proxy server(s) <b>104</b>(<b>3</b>) can implement mail scanning program <b>142</b> incorporating the received domain list in order to block spam campaigns preemptively, thereby utilizing the domain list as a blacklist.</p><p id="p-0070" num="0069">According to example embodiments of the present disclosure, it should be understood that a &#x201c;past spam campaign&#x201d; can refer to an inferred past event, characterized by mail servers of the enterprise system <b>102</b> receiving a high volume of emails within a short span of time; for example, mail servers can receive hundreds of emails within one minute. Additionally, a &#x201c;past spam campaign&#x201d; can be characterized by such high-volume emails being addressed to a recurring set of recipient addresses, a recurring set of recipient addresses being shared across multiple past spam campaign incidences. It should be understood that the occurrence and timespan of past spam campaigns are generally defined by collecting samples of unsolicited emails received at a mail server of the enterprise system <b>102</b>; by reviewing samples of high volumes of unsolicited emails received within short spans of time, the enterprise system <b>102</b> and/or server computing device(s) <b>104</b>(<b>1</b>) can infer that a spam campaign targeting the enterprise system <b>102</b> was carried out during that time from unknown spam-originating computing device(s) <b>110</b>.</p><p id="p-0071" num="0070">Samples of unsolicited emails characterizing a past spam campaign can include origin-referencing features. For example, email headers can include a sending domain, which can be a top-level domain (&#x201c;TLD&#x201d;) name extractable from a &#x201c;From:&#x201d; field of the email header. While the &#x201c;From:&#x201d; field of email headers ostensibly identify an address of the email sender, spam emails tend to be sent from disposable sender addresses which are readily discarded. However, even though the sender address can fail to indicate origin of the email, a TLD name extracted from the sender address can be used in a query according to the WHOIS protocol to cause a WHOIS service to return domain name registration records. Thus, the TLD name is an origin-referencing feature in that it can be used to retrieve domain name registration records which contain origin-indicating features, as shall be described subsequently.</p><p id="p-0072" num="0071">Domain name registration records retrieved by a WHOIS protocol query can include several origin-indicating features which, by indicating the origin of the registration of the queried TLD name, indirectly indicate the origin of spam emails sent from a sender address containing the queried TLD name. These origin-indicating features can include IP addresses of a domain name, identifying information of a domain name registrant, and so on. However, spam originators generally obfuscate such origin-indicating features so that they cannot directly identify the spam originator.</p><p id="p-0073" num="0072">Samples of unsolicited emails characterizing a past spam campaign can include heterogeneous features and homogeneous features; heterogeneous features can further include systematically heterogeneous features. In order to evade conventional spam blocking, such as reputation-based blocking and content-based blocking, spam emails are commonly made to be heterogeneous in a number of regards, to yield some number of spam emails which, being non-uniform in origin and non-uniform in content, evade known reputation-based blocking rules and content-based blocking rules. At the same time, since emails of the same spam campaign are generally sent from a same spam-originating computing device <b>110</b> by a same spam originator party, emails of the same spam campaign ultimately include certain features which are unavoidably homogeneous. Moreover, homogeneous features of samples can be homogeneous across samples of a same campaign (subsequently referenced as &#x201c;intra-campaign samples&#x201d;), can be homogeneous across samples of multiple campaigns (subsequently referenced as &#x201c;inter-campaign samples&#x201d;), or both. Additionally, by engineering features of emails to be heterogeneous in a systematic fashion, spam originators can create systematically heterogeneous features, rather than randomly heterogeneous features. Both homogeneous features and systematically heterogeneous features can indicate that sample emails were engineered to evade conventional spam blocking.</p><p id="p-0074" num="0073">Generally, spam originators seek to include heterogeneous features in spam emails to evade conventional blocking rules. However, at the same time, some features of these spam emails remain unavoidably homogeneous, and some engineered heterogeneous features are systematically heterogeneous, reflecting the artificiality of the engineering effort. As a result of spam originator efforts, such remaining homogeneous features generally cannot be detected by conventional blocking rules, nor can systematically heterogeneous features; however, some of these features can be used according to example embodiments of the present disclosure to determine that sample emails are substantially homogeneous (in that they derive from a same past spam campaign).</p><p id="p-0075" num="0074">Additionally, other such features can be origin-referencing features (not necessarily origin-indicating features) and can be used according to example embodiments of the present disclosure to predict a homogeneous spam origin descriptor. Based on periodically compiling domain name records from DNS records sources, predicted homogeneous spam origin descriptors and a time-sensitive homogeneous feature can be compared against the compiled domain name records to forecast future spam campaigns.</p><p id="p-0076" num="0075">For example, a first set of recipient addresses in email samples of a first past spam campaign can be substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign; thus, sets of recipient addresses can be substantially homogeneous across inter-campaign samples. Both valid and invalid recipient addresses can be substantially homogeneous across inter-campaign samples, and it can be statistically less probable for invalid recipient addresses in each set of recipient addresses to be substantially homogeneous. Multiple spam campaigns originating from a same origination are likely to target a same, reused list of recipient addresses, and so such a homogeneous feature can indicate homogeneity among email samples. However, such a homogeneous feature can be insufficient to predict spam origins in the future, since it is desired to predict spam origins before they send out spam emails.</p><p id="p-0077" num="0076">Additionally, in spam emails, a common strategy for evading conventional blocking rules is to utilize non-homogeneous sender addresses not previously used in any other spam campaign, since any previously used sender address can already have been flagged as a spam-originating address and included in conventional blocking rules. In particular, these sender addresses can include non-homogeneous domain names, since any domain name included in numerous spam-originating sender address can be flagged as a spam-originating domain, causing all sender addresses including this domain to be collectively blocked in a conventional blocking rule. As a result, spam originators frequently mass-acquire domain names for the use of generating non-homogeneous sender addresses in future spam campaigns.</p><p id="p-0078" num="0077">However, regardless of how many domain names are mass-acquired by spam originators, some number of homogeneous features remain among the sender addresses generated from the mass-acquired domain names, though these homogeneous features can still evade conventional blocking rules. For example, a TLD in sender addresses can be substantially homogeneous across intra-campaign samples of a same past spam campaign, and also substantially homogeneous across inter-campaign samples of different past spam campaigns. A TLD appearing substantially homogeneously in sender addresses can be a common TLD encompassing large numbers of low-priced domain names, such as the .com TLD. By purchasing domain names having a common TLD over domain names having less common TLDs, spam originators can acquire more domain names at lower expense, and so such a homogeneous feature can indicate homogeneity among email samples. Additionally, such a homogeneously origin-referencing feature can indicate that domain names mass-acquired having this common TLD can be predicted to be spam origins in the future, though this alone can be insufficient to predict future spam origins.</p><p id="p-0079" num="0078">Additionally, domain names in sender addresses can be systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words. Domain names made up of widely recognized words such as dictionary words are generally priced higher than domain names not made up of dictionary words, such as domain names made up of misspelled words. By purchasing many heterogeneous domain names which are systematically made up of non-dictionary words, spam originators can acquire more domain names at lower expense, and so such a systematically heterogeneous feature can indicate homogeneity among email samples. However, due to the heterogeneity of such a feature, it can be insufficient to predict future spam origins.</p><p id="p-0080" num="0079">Additionally, domain names in sender addresses can be systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content. For example, a word in a domain name in a sender address can be suggestive of subject matter which is not mentioned in an email body, and/or keywords in the email body can refer to subject matter which is not suggested by a domain name in a sender address. Conventionally, spam emails are known to advertise goods and/or services using a domain name suggestive of the goods and/or services or related to the goods and/or services, so by making heterogeneous domain names systematically mismatch the advertised goods and/or services, spam originators can create spam emails which evade conventional spam blocking rules, and so such a systematically heterogeneous feature can indicate homogeneity among email samples. However, due to the heterogeneity of such a feature, it can be insufficient to predict future spam origins.</p><p id="p-0081" num="0080">Additionally, domain names in sender addresses can be systematically heterogeneous across intra-campaign samples and inter-campaign samples in their inclusion of heterogeneous subdomains. Although domain names including subdomain names can ultimately be resolved to an originating IP address by referencing the domain name against a CNAME record and a MX record in a DNS system (in manners as known to persons skilled in the art), such lookups can ultimately fail to resolve the domain name to a true originating IP address for the spam emails. However, even so, it can be observed that the domain names collectively include systematically heterogeneous subdomain names (i.e., subdomain names being unrelated to the domain names and being unrelated to each other). By attaching heterogeneous subdomain names to domain names, spam originators seek to generate widely heterogeneous domain names to evade conventional blocking rules; however, the heterogeneous and random nature of the subdomain names across intra-campaign samples and inter-campaign samples is, in turn, systematic, and so such a systematically heterogeneous feature can indicate homogeneity among email samples. However, due to the heterogeneity of such a feature, it can be insufficient to predict future spam origins.</p><p id="p-0082" num="0081">Additionally, domain names in sender addresses can be registered at a common domain name registrar. By mass-acquiring domain names at a same registrar, particularly registrars offering lower costs, spam originators can save effort and save cost in acquiring a large, heterogeneous selection of domain names; since such heterogeneous domain names are intended to be used to generate disposable sender addresses, spam originators do not desire to invest substantially in acquiring these domain names. Spam originators are therefore likely to reuse these registrars for future spam campaigns. Thus, a common registrar across intra-campaign samples and inter-campaign samples is a homogeneous feature of the intra-campaign samples and of the inter-campaign samples, and so such a homogeneously origin-referencing feature can indicate that domain names mass-acquired at this common registrar can be predicted to be spam origins in the future.</p><p id="p-0083" num="0082">Additionally, domain names in sender addresses can be parked at approximately the same time or substantially in close succession. By mass-acquiring domain names at the same time, spam originators can save effort in acquiring a large selection of domain names, which are meant to be used in a limited number of spam campaigns and then discarded. It should be understood that parking of a domain refers to registering the domain without yet directing the domain by DNS services to a network address controlled by the registrant (i.e., the spam originator). Parked domains generally point to default name servers provided by DNS registrars until the registrant re-configured the parked domains; in the case of spam originators, the parked domains are re-configured (updating A records, NS records, and MX records) before a spam campaign begins. Thus, domain names in sender addresses collectively being parked (i.e., being directed to one or more default name servers of a DNS registrar) at the same time (for the duration of possibly less than a day) is a homogeneous feature of intra-campaign samples and is a homogeneous feature of the intra-campaign samples.</p><p id="p-0084" num="0083">Such a homogeneous feature is highly time-sensitive, as such parked domains can be deployed for a spam campaign within less than a day from being parked. Such a time-sensitive homogeneous feature can only be detected by periodically compiling domain name records from up-to-date DNS records sources. Such a time-sensitive homogeneous feature cannot be used to determine homogeneity across email samples, and cannot indicate a homogeneous spam origin; however, if such a time-sensitive homogeneous feature is found across many domains at a predicted spam origin, a future spam campaign originating from these domains can be forecast.</p><p id="p-0085" num="0084">It should be understood that the homogeneous features and systematically heterogeneous features described above can be further characterized as self-contained features, registration-referenced features, and time-sensitive homogeneous features. Self-contained features can be identified by comparing email samples, without reference to other information: first, by comparing various features of email samples without regard as to their nature, one or more features can be determined as substantially homogeneous among a set of email samples; and one or more features can be determined as heterogeneous.</p><p id="p-0086" num="0085">Among a set of email samples exhibiting at least one homogeneous feature, particularly a statistically less probable homogeneous feature (for example, a recurring set of recipient addresses compared to email samples of a past spam campaign), additional homogeneous features can be identified, including statistically more probable homogeneous features, to reinforce the homogeneity of the set of email samples (for example, TLDs in sender addresses being substantially homogeneous).</p><p id="p-0087" num="0086">Additionally, among a set of email samples exhibiting at least one homogeneous feature, systematically heterogeneous features can be identified to also reinforce the homogeneity of the set of email samples (for example, domain names in sender addresses containing non-dictionary words; domain names in sender addresses mismatching email body content; domain names including heterogeneous subdomains).</p><p id="p-0088" num="0087">After a set of email samples has been determined as including one or more homogeneous features and one or more systematically heterogeneous features, origin-referencing features of the set of email samples can be compared against domain name records to additionally determine homogeneously origin-referencing features of the set of email samples (for example, domain names in sender addresses being registered at a common domain name registrar). The homogeneously origin-referencing features can predict a future homogeneous spam origin descriptor (for example, any number of unspecified domains mass-acquired at the common domain name registrar).</p><p id="p-0089" num="0088">After homogeneously origin-referencing features are determined, domain matching expressions can be written based on homogeneously origin-referencing features, based on predicted future homogeneous spam origin descriptors, and based on time-sensitive homogeneous features. A domain matching expression can be a regular expression (&#x201c;regex&#x201d;) as known to persons skilled in the art, which, based on one of the above homogeneous features, matches similar features of domain name records compiled from a DNS records source. For the purpose of example embodiments of the present disclosure, domain name records can refer to any hosted records subject to public access, subject to some extent of controlled access (such as account registration at a DNS records source), or not publicly accessible, which include information of registered domains, including date of registration. DNS records sources can include, by way of example and without limitation, DNS hosting services, DNS registrars, and DNS registration aggregators. DNS hosting services can be providers of DNS servers enabling domain names to be reached over the public Internet through DNS queries; DNS registrars generally provide DNS hosting services as well. DNS hosting services generally host domain zone files, which list all domain names accessible through the DNS hosting service, such as, in the cast of a DNS hosting service operated by a registrar, all domain names registered by the registrar. Additionally, TLD registries, such as the .com registry maintained by VERISIGN INC. of Reston, Va., maintain TLD zone files which list all domain names having a same TLD, such as the .com TLD.</p><p id="p-0090" num="0089">Domain name records can be periodically compiled based on a homogeneously origin-referencing feature (for example, .com TLD zone files, based on a homogeneously origin-referencing feature being the .com TLD). Domain matching expressions (based on homogeneously origin-referencing features, based on predicted future homogeneous spam origin descriptors, and based on time-sensitive homogeneous features) can be applied to compiled domain name records to identify some number of predicted spam origins which match both homogeneously origin-referencing features and time-sensitive homogeneous features (for example, the domains all include the .com TLD according to a homogeneously origin-referencing feature; the domains are all acquired at a common domain name registrar according to a homogeneously origin-referencing feature; and the domains are all parked according to a time-sensitive homogeneous feature). A future spam campaign can be forecast as originating from these predicted spam origins.</p><p id="p-0091" num="0090">According to example embodiments of the present disclosure, based on email samples of past spam campaigns, a spam forecasting system can identify substantially homogeneous email samples based on homogeneous features and systematically heterogeneous features. According to example embodiments of the present disclosure, to forecast future spam campaigns, a spam forecasting system can, on a periodic basis, compile domain name records in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples; match domain matching expressions representing homogeneous features, predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features to compiled domain name records; identify predicted spam origins among matched domain name records; forecast a future spam campaign to originate from the predicted spam origins; and configure a mail proxy server to block future emails from the predicted spam origins.</p><p id="p-0092" num="0091">Spam originators can mass-acquire domain names for a future spam campaign within one day or less time from the time of sending spam emails. Therefore, according to example embodiments of the present disclosure, the periodic compilation of domain name records should be performed as frequently as a daily basis, for timely forecasting of future spam campaigns before they occur. To be reliable for this purpose, the compiled domain name records should include information of domains registered the same day of retrieval or day(s) immediately preceding the day of retrieval.</p><p id="p-0093" num="0092">However, domain name files are generally protected from public access due to high likelihood of such public access being abused. Interested parties in querying new domain name registrations can run software applications commonly known as crawlers to access public IP addresses to identify, by brute-force, new domain name registrations; and &#x201c;scrape&#x201d; registration records for newly registered domain name records corresponding to the identified new registrations from individual queries to DNS hosting services. According to example embodiments of the present disclosure, domain name records can be compiled from a DNS records source in this fashion (a DNS records source being a DNS hosting service, through many individual brute-forced queries), though such brute-force scraping is generally highly intensive in computational workload and network traffic; to perform such brute-force scraping at periodic intervals, on a day-to-day basis, for the purpose of forecasting spam campaigns can inordinately consume computational and network resources of an enterprise system <b>102</b>.</p><p id="p-0094" num="0093">Service providers, herein referenced as &#x201c;DNS registration aggregators,&#x201d; actively perform brute-force scraping as described above and aggregate the scraped domain registration records for public access, in exchange for service fees. According to example embodiments of the present disclosure, domain name records can be compiled from a DNS records source in this fashion (a DNS records source being a DNS registration aggregator), though access to such aggregated records is generally not priced cost-effectively for periodic retrieval, and there is no guarantee of the aggregated records being frequently updated, so such records may not be reliable for timely forecasting of future spam campaigns.</p><p id="p-0095" num="0094">Additionally, since TLDs can be a homogeneous feature according to example embodiments of the present disclosure, domain name records can be compiled from a DNS records source where a DNS records source is a TLD zone file of a TLD registry. Such TLD zone files can be retrieved from, for example, the Centralized Zone Data Service maintained by the Internet Corporation for Assigned Names and Numbers (&#x201c;ICANN&#x201d;). Although the TLD zone file for a common TLD such as .com can be massive in size, totaling tens of gigabytes, the centralized nature of a such a TLD zone file facilitates the compilation of domain name records from an up-to-date source according to example embodiments of the present disclosure, and the expression matching of such domain name records according to example embodiments of the present disclosure (as shall be described subsequently) facilitates the prediction of spam origins.</p><heading id="h-0009" level="2">Illustrative Computing Device</heading><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram depicting an example computing device configured to participate in a spam forecasting system and method according to various examples described herein.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is an illustrative diagram that shows an example configuration of components of a computing device <b>200</b>, which can represent a computing device(s) <b>104</b>, and which can be a part of and/or implement a spam forecasting system, device, and/or apparatus, according to various examples described herein. Example computing device <b>200</b> includes one or more processing unit(s) <b>202</b>, network interface(s) <b>204</b>, input interface(s) <b>206</b>, output interface(s) <b>208</b>, and computer-readable media <b>210</b>. The components of computing device <b>200</b> are operatively connected, for example, via a bus <b>212</b>. These components can represent corresponding components from device(s) <b>104</b> <i>a</i>, e.g., processing unit(s) <b>202</b> can represent processing unit(s) <b>114</b>, <b>134</b>, bus <b>212</b> can represent bus <b>118</b>, <b>138</b>, etc.</p><p id="p-0098" num="0097">In example computing device <b>200</b>, processing unit(s) <b>202</b> can correspond to processing unit(s) <b>114</b>, <b>134</b>, and can represent, for example, a CPU-type processing unit, a GPU-type processing unit, a field-programmable gate array (FPGA), another class of digital signal processor (DSP), or other hardware logic components that can, in some instances, be driven by a CPU. For example, and without limitation, illustrative types of hardware logic components that can be used include Application-Specific Integrated Circuits (ASICs), Application-Specific Standard Products (ASSPs), System-on-a-chip systems (SOCs), Complex Programmable Logic Devices (CPLDs), etc. In some examples, processing unit(s) <b>202</b> can include an on-board memory, e.g., a RAM and/or cache, not shown.</p><p id="p-0099" num="0098">Network interface(s) <b>204</b>, which can correspond to communications interface(s) <b>128</b>, <b>148</b>, can represent, for example, network interface controllers (NICs) or other types of transceiver devices to send and receive communications over a network.</p><p id="p-0100" num="0099">Input/output (I/O) interfaces <b>206</b> and <b>208</b>, respectively, allow computing device <b>200</b> to communicate with input/output devices such as user input devices including peripheral input devices (e.g., a keyboard, a mouse, a pen, a game controller, a voice input device, a touch input device, a gestural input device, and the like) and/or output devices including peripheral output devices (e.g., a display, a printer, audio speakers, a haptic output, and the like). Input/output (I/O) interfaces <b>206</b> and <b>208</b>, respectively, can correspond to user interface(s) <b>130</b>, <b>150</b>.</p><p id="p-0101" num="0100">Computer-readable media <b>210</b> can correspond to computer-readable media <b>116</b>, <b>136</b>, and can store instructions executable by the processing unit(s) <b>202</b>. Computer-readable media <b>210</b> can also store instructions executable by external processing units such as by an external CPU, an external GPU, and/or executable by an external accelerator, such as an FPGA type accelerator, a DSP type accelerator, or any other internal or external accelerator. In various examples, at least one CPU, GPU, and/or accelerator is incorporated in computing device <b>200</b>, while in some examples one or more of a CPU, GPU, and/or accelerator is external to computing device <b>200</b>.</p><p id="p-0102" num="0101">In the illustrated example, computer-readable media <b>210</b> includes spam-control program <b>214</b>, which can correspond to spam forecasting program <b>122</b> and/or mail scanning program <b>142</b>. Computer-readable media <b>210</b> includes one or more datastore(s) <b>216</b>, which can correspond to datastore(s) <b>126</b>, <b>146</b>.</p><p id="p-0103" num="0102">In various examples, datastore(s) <b>216</b> can include data storage such as a database, data warehouse, or other type of structured or unstructured data storage (e.g., a Structured Query Language, SQL, an RDS PostgreSQL database, and/or NoSQL database), a Dynamo database, an S3 storage, etc. In some examples, datastore(s) <b>216</b> can include a corpus and/or a relational database with one or more tables, indices, stored procedures, and so forth to enable data access including one or more of hypertext markup language (HTML) tables, resource description framework (RDF) tables, web ontology language (OWL) tables, and/or extensible markup language (XML) tables, for example. Datastore(s) <b>216</b> can store data for the operations of processes, applications, components, and/or modules stored in computer-readable media <b>210</b> and/or executed by processing unit(s) <b>202</b> and/or accelerator(s). For example, datastore(s) <b>216</b> can store data that from DNS records, e.g., IP addresses, domains, top-level domain(s) (TLD) with associated subdomain(s), CNAME, MX records, etc. Such DNS records can include compiled domain name records, retrieved in one of the fashions as described above and as further elaborated upon below.</p><p id="p-0104" num="0103">In various examples, spam-control program <b>214</b> can include a variety of modules to implement the program. For example, spam-control program <b>214</b> can include a domain compiling module <b>218</b>, a domain processing module <b>220</b>, and a domain list distributing module <b>222</b>. In some examples, spam-control program <b>214</b> can include one or more of a campaign determining module <b>224</b>, a homogeneous feature identifying module <b>226</b>, a heterogeneous feature identifying module <b>228</b>, a descriptor predicting module <b>230</b>, an expression writing module <b>232</b>, and/or a scanner configuring module <b>234</b>.</p><heading id="h-0010" level="2">Illustrative Results</heading><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating example results of applying publicly available intelligence to spam forecasting measures as described herein.</p><p id="p-0106" num="0105">By running a spam forecasting system according to example embodiments of the present disclosure as part of an enterprise system <b>102</b>, the spam forecasting system periodically, on a daily basis, performed the steps of compiling domain name records from a DNS records source, predicting future homogeneous spam origin descriptors, identifying predicted spam origins, and configuring a mail proxy server to block future emails from the predicted spam origins as described below. Vertical bars indicate numbers of predicted spam origins identified by the spam forecasting system, measured in numbers of unique domains included in a domain list generated based on the predicted spam origins (as described below). Lines indicate numbers of email messages blocked by configuring proxy servers of the enterprise system to block sending domains based on the domain list. It can be seen according to <figref idref="DRAWINGS">FIG. <b>3</b></figref> that number of messages blocked reaches hundreds of thousands on several distinct days; such extremely high volumes of email messages correspond to one or more spam floods. It can be seen that trends numbers of predicted spam origins generally mirrors trends in numbers of email messages blocked, meaning that the number of domains blocked is generally proportional compared to high volumes of email messages during spam floods (whenever the number of emails blocked are in the hundreds of thousands). Consequently, it can be seen that a spam forecasting system according to example embodiments of the present disclosure performs in a responsive and a timely manner day to day, proportional to the occurrence of actual spam floods.</p><heading id="h-0011" level="2">Illustrative Processes</heading><p id="p-0107" num="0106">The order in which the operations are described in each example flow diagram and/or process is not intended to be construed as a limitation, and any number of the described operations can be combined in any order and/or in parallel to implement each process. Moreover, the operations in each of <figref idref="DRAWINGS">FIGS. <b>4</b>, <b>5</b>A, <b>5</b>B, and <b>5</b>C</figref> can be implemented in hardware, software, and/or a combination thereof. In the context of software, the operations represent computer-executable instructions that, when executed by one or more processors, cause one or more processors to perform the recited operations. In the context of hardware, the operations represent logic functions implemented in circuitry, e.g., datapath-control and finite-state-machine sequencing functions.</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram that illustrates an example process <b>400</b> associated with a spam forecasting system, e.g., one or more computing device(s) <b>200</b> including spam-control program <b>214</b> for applying publicly available intelligence to spam forecasting measures as described herein.</p><p id="p-0109" num="0108">At block <b>402</b>, components of a spam forecasting system including one or more computing device(s) <b>200</b> can obtain domain name services (DNS) information including publicly available DNS information associated with a past spam campaign. For example, an input interface <b>206</b> can receive instructions executed by one or more processor(s) <b>202</b> to perform execution of a query for DNS information associated with a past spam campaign; a network interface <b>204</b> can provide the query to one or more network-connected computers such as DNS server(s) <b>108</b> and receive DNS information in reply to the query; and one or more datastore(s) <b>216</b> can store at least a part of the received DNS information associated with the past spam campaign. In at least one example, the instructions executed by one or more processor(s) <b>202</b> to perform execution of a query for DNS information associated with the past spam campaign include instructions to perform a query on DNS information associated with a past spam campaign stored in one or more datastore(s) <b>216</b>. In various examples, an output interface <b>208</b> can provide an indication that DNS information associated with a past spam campaign has been obtained.</p><p id="p-0110" num="0109">At block <b>404</b>, components of a spam forecasting system including a spam-control program <b>214</b> can compile domain name records from a DNS records source. For example, domain compiling module <b>218</b> can be configured to crawl public IP addresses; configured to, based on new domain name registrations identified from crawled public IP addresses, query each domain registration to retrieve a corresponding domain name record from one or more DNS hosting services; and configured to compile each retrieved domain name record. Alternatively, domain compiling module <b>218</b> can be configured to query a DNS registration aggregator to retrieve aggregated domain name records. Alternatively, domain compiling module <b>218</b> can be configured to query a TLD registry to retrieve a TLD zone file.</p><p id="p-0111" num="0110">For example, domain compiling module <b>218</b> can be configured to connect to a File Transfer Protocol (&#x201c;FTP&#x201d;) server of a TLD registry in accordance with FTP protocol, request a TLD zone file located at a specified path and filename, and download the requested TLD zone file in accordance with FTP protocol. Domain compiling module <b>218</b> can be further configured to extract the retrieved zone file from a compressed format, such as the gzip format as known to persons skilled in the art.</p><p id="p-0112" num="0111">At block <b>406</b>, components of a spam forecasting system including a spam-control program <b>214</b> can process the compiled domain name records by expression matching in accordance with one or more homogeneous features to generate a formatted domain list. For example, domain processing module <b>220</b> can be configured to search the compiled domain name records for each domain name record matching a domain matching expression written by an expression writing module <b>230</b> as described subsequently. The domain processing module <b>220</b> can perform such a search by, for example, running the Unix grep utility as known to persons skilled in the art using a domain matching expression as an argument. The expression writing module will have written the domain matching expression in accordance with an expected format of the compiled domain name records, as shall be described subsequently. Each matching domain name record can be output by the search as a line of text from the compiled domain name records, the line of text containing at least a domain name including subdomain names.</p><p id="p-0113" num="0112">Furthermore, domain processing module <b>220</b> can be configured to extract domain names of each domain name record. The domain processing module <b>220</b> can perform such extraction by, for example, running the Unix cut utility as known to persons skilled in the art upon each matching domain name record output by the above-described search.</p><p id="p-0114" num="0113">Furthermore, domain processing module <b>220</b> can be configured to sort domain names of each domain name record. The domain processing module <b>220</b> can perform such sorting by, for example, running the Unix sort utility as known to persons skilled in the art upon each extracted domain name as above.</p><p id="p-0115" num="0114">Furthermore, domain processing module <b>220</b> can be configured to format the sorted domain names in accordance with blacklist formats of mail servers. The domain processing module <b>220</b> can perform such formatting by, for example, running the Unix sed utility as known to persons skilled in the art upon each domain name, formatting the domain name as a blacklist entry in accordance with a blacklist format of a mail server of the enterprise system <b>102</b>. For example, the blacklist format can be in accordance with the open-source Postfix standard for mail server configuration, wherein mail from a domain can be blocked by the inclusion of a line of text containing the domain name and the characters REJECT. The domain processing module <b>220</b> can further perform such formatting by running the Unix column utility as known to persons skilled in the art upon each formatted domain name to output the blacklist entry in columns, and the like.</p><p id="p-0116" num="0115">At block <b>408</b>, components of a spam forecasting system including a spam-control program <b>214</b> can distribute the formatted domain list to a proxy server <b>104</b>(<b>3</b>) to block email from the filtered domains. For example, a domain list distributing module <b>222</b> can be configured to propagate the formatted domain list to each proxy server <b>104</b>(<b>3</b>) at a preconfigured file path and file name.</p><p id="p-0117" num="0116">It should be understood that, according to mail server configuration standards, a mail scanning program <b>142</b> running on one or more proxy servers <b>104</b>(<b>3</b>) can be configured to scan and to block inbound mail to the mail server according to more than one blacklist. Some blacklists can be conventionally populated based on reputation, content, and the like, and can configure the mail scanning program to block inbound mail according to sender email addresses, according to domains in sender email addresses, according to sender IP addresses, or according to other rules as known to persons skilled in the art. Some blacklists can be updated by distributing incrementally updated blacklists to proxy servers <b>104</b>(<b>3</b>), where updated blacklists include all previously existing blacklist entries. In contrast, a &#x201c;flood domain list,&#x201d; according to example embodiments of the present disclosure, should be understood as a domain list configuring the mail scanning program to block inbound mail according to domains in sender email addresses, and, furthermore, should be understood as a domain list which the mail scanning program is configured to update by overwriting a previous flood domain list entirely with a newly distributed flood domain list, causing loss of all entries included in a previous flood domain list.</p><p id="p-0118" num="0117">Domain lists, being expansive in scope, can be recorded, updated, and enforced more efficiently than lists of individual addresses. Additionally, domain lists overcome shortcomings of certain mail server standards, which can limit the number of individual addresses which can be blocked; such limits are generally much smaller than the number of sending domains alone which can be deployed in a spam flood, numbering in the tens of thousands in practice.</p><p id="p-0119" num="0118">The domain list distributing module <b>222</b> being configured to distribute a domain list which destructively replaces previous flood domain lists reflects the understanding that predicted spam origins can be transient in nature; in order to evade conventional spam blocking rules, a spam originator may not intend to reuse the spam origin domain names for repeated spam campaigns. Consequently, a flood domain list may not need to be retained on a long-term basis, and, upon the prediction of a new set of spam origin domain names, a previously predicted set of spam origin domain names are no longer relevant, and a previous flood domain list containing the previously predicted set of spam origin domain names can be discarded in its entirety.</p><p id="p-0120" num="0119">The domain list distributing module <b>222</b> being configured to distribute a domain list which destructively replaces previous flood domain lists also reflects the understanding that domain lists are a highly expansive spam blocking measure and should be deployed sparingly and cautiously. Since a spam originator does not intend to reuse the spam origin domain names for repeated spam campaigns, the spam originator may subsequently relinquish control of former spam origin domain names, and benign registrants may later gain control of any number of such domain names. Discarding previous flood domain lists ensures that domain lists do not remain in place longer than necessary, to avoid subsequently blocking benign emails from the same domains.</p><p id="p-0121" num="0120"><figref idref="DRAWINGS">FIGS. <b>5</b>A, <b>5</b>B, and <b>5</b>C</figref> illustrate example processes associated with applying publicly available intelligence to spam forecasting in some instances described herein. In various examples, one or more of processes illustrated in <figref idref="DRAWINGS">FIGS. <b>5</b>A, <b>5</b>B, and <b>5</b>C</figref> can be included in the process of block <b>404</b>.</p><p id="p-0122" num="0121">At block <b>502</b>, <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, components of a spam forecasting system including a spam-control program <b>214</b> can determine email samples of a past spam campaign. For example, a campaign determining module <b>224</b> can be configured to identify that a large volume of emails received by mail servers of the enterprise system <b>102</b> within a short span of time describe a past spam campaign.</p><p id="p-0123" num="0122">At block <b>504</b>, <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, components of a spam forecasting system including a spam-control program <b>214</b> can identify one or more homogeneous features across email samples, including intra-campaign samples and/or inter-campaign samples. After identifying one or more homogeneous features across a set of intra-campaign email samples, particularly a statistically less probable homogeneous feature, the spam-control system <b>214</b> can further identify one or more additional homogeneous features as well as one or more systematically heterogeneous features. The spam-control program <b>214</b> can identify a set of email samples as substantially homogeneous based on identifying at least one homogeneous feature across the set of email samples and at least one systematically heterogeneous feature across the set of email samples.</p><p id="p-0124" num="0123">For example, a homogeneous feature identifying module <b>226</b> can be configured to determine that a first set of recipient addresses in email samples of a first past spam campaign are substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign. It may be statistically less probable for invalid recipient addresses in each set of recipient addresses to be substantially homogeneous. The spam forecasting program <b>122</b> can be configured to extract the first set of recipient addresses and the second set of recipient addresses and can be configured to compare members of the two sets to determine that they are substantially homogeneous or that they are not.</p><p id="p-0125" num="0124">For example, the homogeneous feature identifying module <b>226</b> can be configured to determine that a TLD in sender addresses is substantially homogeneous across intra-campaign samples of a same past spam campaign and can be configured to determine that a TLD in sender addresses is substantially homogeneous across inter-campaign samples of different past spam campaigns. The spam forecasting program <b>122</b> can be configured to extract a set of TLDs from sender addresses across one or more past spam campaigns and can be configured to determine whether this set includes only one unique member (i.e., the TLD is substantially homogeneous) or several (i.e., this TLD is not substantially homogeneous). According to example embodiments of the present disclosure, this can be a homogeneously origin-referencing feature which can indicate that domain names mass-acquired having this common TLD can be predicted to be spam origins in the future.</p><p id="p-0126" num="0125">For example, a heterogeneous feature identifying module <b>228</b> can be configured to determine that domain names in sender addresses are systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words. The spam forecasting program <b>122</b> can be configured to extract domain names from sender addresses and determine whether each domain name is made up of one or more dictionary words, or whether a domain is not made up of dictionary words. The spam forecasting program <b>122</b> can be further configured to fuzzy match a domain name against one or more dictionary words from which the domain name differs by a small edit distance (which can indicate a purposeful misspelling); upon performing such fuzzy matching across email samples, the spam forecasting program <b>122</b> can determine that the email samples are or are not systematically heterogeneous in domain names containing non-dictionary words.</p><p id="p-0127" num="0126">For example, the heterogeneous feature identifying module <b>228</b> can be configured to determine that domain names in sender addresses are systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content. The spam forecasting program <b>122</b> can be configured to extract keywords from an email body (in accordance with natural language processing, summarization, and such techniques as known to persons skilled in the art) and semantically match extracted keywords with words in a sender address domain name of the same email, or semantically match extracted keywords with dictionary words fuzzy-matched to words in the sender address domain name of the same email (in the event that the sender address domain name includes no dictionary words).</p><p id="p-0128" num="0127">For example, the heterogeneous feature identifying module <b>228</b> can be configured to determine that domain names in sender addresses are systematically heterogeneous across intra-campaign samples and inter-campaign samples in their inclusion of heterogeneous subdomains. The spam forecasting program <b>122</b> can be configured to extract a set of subdomains from sender addresses across one or more past spam campaigns and can be configured to determine whether this set includes many unique members (i.e., the subdomains are systematically heterogeneous) or few (i.e., the subdomains are not systematically heterogeneous).</p><p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. <b>5</b>C</figref> is a flow diagram that illustrates an example process <b>500</b> associated with applying publicly available intelligence to spam forecasting in which components of a spam forecasting system including a spam-control program <b>214</b> can predict homogeneous spam origin descriptors based on domain name records and by deriving homogeneously origin-referencing features by comparing substantially homogeneous email samples against the domain name records.</p><p id="p-0130" num="0129">At block <b>506</b>, components of a spam forecasting system including a spam-control program <b>214</b> can be configured to compare origin-referencing features of substantially homogeneous email samples against domain name records to determine homogeneously origin-referencing features and predict future homogeneous spam origin descriptors. As described above, domain compiling module <b>218</b> can have compiled domain name records from a DNS records source. The spam-control program <b>214</b> can have determined a set of substantially homogeneous email samples, as described above with reference to block <b>504</b>. A descriptor predicting module <b>230</b> can be configured to extract origin-referencing features from the set of email samples, such as extracting sending domains from sending addresses of each email sample. The spam-control program <b>214</b> can be configured to match these extracted origin-referencing features against the compiled domain name records, to determine that the origin-referencing features are homogeneously origin-referencing features. For example, the spam-control program <b>214</b> can be configured to determine that the extracted sending domains from sender addresses were all registered at a common domain name registrar according to the domain name records. Thus, the sending domains are homogeneously origin-referencing features in referencing a common domain name registrar. Based on this, the spam-control program <b>214</b> can be configured to predict that domain names mass-registered at this same domain name registrar in the future will be future homogeneous spam origins.</p><p id="p-0131" num="0130">At block <b>508</b>, components of a spam forecasting system including a spam-control program <b>214</b> can write domain matching expressions based on homogeneously origin-referencing features, based on predicted future homogeneous spam origin descriptors, and based on time-sensitive homogeneous features. For example, an expression writing module <b>232</b> can be configured to write a regex expression which matches domain names and domain name registrars listed in entries of a domain zone file according to a known format, such as a TLD zone file according to the known format of the .com TLD zone file maintained by VERISIGN INC. of Reston, Va.</p><p id="p-0132" num="0131">Moreover, the expression writing module <b>232</b> can be configured to write a regex expression which matches a domain name and a domain name registrar listed in an entry of a domain zone file. A domain name registrar to be matched can correspond to a predicted future homogeneous spam origin descriptor describing unspecified domain names mass-registered at a particular domain name registrar; i.e., it is expected that entries of the domain zone file should at least match the particular domain name registrar in order to correspond to a predicted future homogeneous spam origin descriptor, though such a match alone is not sufficient. The expression writing module <b>232</b> can be configured to write multiple domain matching expressions corresponding to multiple domain name registrars, each registrar being part of a different future spam origin prediction.</p><p id="p-0133" num="0132">In some examples, a domain name to be matched can correspond to a homogeneously origin-referencing feature. For example, the expression writing module <b>232</b> can be configured to write a regex expression which matches a domain name including the .com TLD according to a homogeneously origin-referencing feature; i.e., it is expected that entries of the domain zone file should at least include the .com TLD in order to correspond to a predicted future homogeneous spam origin descriptor, though such a match alone is not sufficient.</p><p id="p-0134" num="0133">A domain name to be matched can correspond to a time-sensitive homogeneous feature. For example, the expression writing module <b>232</b> can be configured to write a regex expression which matches a default name server of a domain name registrar; i.e., it is expected that entries of the domain zone file should be &#x201c;parked,&#x201d; that is, directed to a default name server of the registrar, as an indicator of having been recently mass-acquired for a future spam campaign, and therefore in order to be indicated as corresponding to a predicted future homogeneous spam origin descriptor. The expression writing module <b>232</b> can be configured to write multiple domain matching expressions corresponding to multiple default name servers, each default name server being a publicly known default name server of a registrar which is part of a future spam origin prediction.</p><p id="p-0135" num="0134">Therefore, entries of domain name records matching a domain matching expression can be indicated as predicted future homogeneous spam origin descriptors due to these entries all referencing domains mass-acquired from a particular domain name registrar (possibly one out of several particular domain name registrars) and all left in a parked state pointing to default name servers of the domain name registrar. In the event that a statistically improbably high number of such domain name records are matched (which may number in the tens of thousands or more), this should be considered a forecast of a future spam campaign to originate from domains matching the domain name records, according to example embodiments of the present disclosure. Either condition above, by itself, may not be sufficient to indicate these domains as predicted future spam origins. Thus, the domain processing module <b>220</b>, as described above, can use these domain matching expressions to search compiled domain name records and, upon matching a large number of domain name records, generate formatted domain lists on the basis that a future spam campaign has been forecast.</p><p id="p-0136" num="0135">At block <b>510</b>, components of a spam forecasting system including a spam-control program <b>214</b> can configure a mail scanner running on a proxy server to block emails according to a distributed domain list. At each proxy server <b>104</b>(<b>3</b>), a scanner configuring module <b>234</b> can configure a locally running mail scanning program <b>142</b> to replace a flood domain list with the distributed domain list in accordance with a configuration standard of a mail server of the enterprise system <b>102</b>, such as the Postfix standard.</p><heading id="h-0012" level="1">CONCLUSION</heading><p id="p-0137" num="0136">Although the techniques have been described in language specific to structural features and/or methodological acts, it is to be understood that the appended claims are not necessarily limited to the features and/or acts described. Rather, the features and acts are described as example implementations of such techniques. For example, network <b>106</b>, processing unit(s) <b>134</b>, and other structures described herein for which multiple types of implementing devices or structures are listed can include any of the listed types, and/or multiples and/or combinations thereof.</p><p id="p-0138" num="0137">The operations of the example processes are illustrated in individual blocks and summarized with reference to those blocks. The processes are illustrated as logical flows of blocks, each block of which can represent one or more operations that can be implemented in hardware, software, and/or a combination thereof. In the context of software, the operations represent computer-executable instructions stored on one or more computer-readable media that, when executed by one or more processors, enable the one or more processors to perform the recited operations. Generally, computer-executable instructions include routines, programs, objects, modules, components, data structures, and the like that can configure a processor to perform particular functions and/or implement particular abstract data types. The order in which the operations are described is not intended to be construed as a limitation, and any number of the described operations can be executed in any order, combined in any order, subdivided into multiple sub-operations, and/or executed in parallel to implement the described processes. The described processes can be performed by resources associated with one or more computing device(s) <b>104</b> such as one or more internal and/or external CPUs and/or GPUs, and/or one or more pieces of hardware logic such as FPGAs, DSPs, and/or other types described above.</p><p id="p-0139" num="0138">All of the methods and processes described above can be embodied in, and fully automated via, software code modules executed by one or more general-purpose computer(s) and/or processor(s) thereby reconfiguring the general-purpose computer(s) and/or processor(s) as special purpose computer(s) and/or processor(s) during their execution. The code modules can be stored in any type of computer-readable storage medium and/or other computer storage device. Some and/or all of the methods can be embodied in specialized computer hardware.</p><p id="p-0140" num="0139">Conditional language such as, among others, &#x201c;can,&#x201d; &#x201c;could,&#x201d; &#x201c;might&#x201d; and/or &#x201c;may,&#x201d; unless specifically stated otherwise, are understood within the context to present that certain examples include, while other examples need not include, certain features, elements and/or steps. Thus, such conditional language is not generally intended to imply that certain features, elements and/or steps are in any way required for one or more examples and/or that one or more examples necessarily include logic for deciding, with and/or without user input and/or prompting, whether certain features, elements and/or steps are included and/or are to be performed in any particular example. The word &#x201c;or&#x201d; is used herein in an inclusive sense unless specifically stated otherwise. Accordingly, conjunctive language such as the phrases &#x201c;X, Y, or Z&#x201d; or &#x201c;at least one of X, Y or Z,&#x201d; unless specifically stated otherwise, is to be understood as signifying that an item, term, etc., can be either X, Y, or Z, or any combination thereof.</p><p id="p-0141" num="0140">Any routine descriptions, elements and/or blocks in the flow diagrams described herein and/or depicted in the attached figures should be understood as potentially representing modules, segments, and/or portions of code that include one or more executable instructions for implementing specific logical functions and/or elements in the routine. Alternative implementations are included within the scope of the examples described herein in which elements and/or functions can be deleted and/or executed out of order from any order shown or discussed, including substantially synchronously and/or in reverse order, depending on the functionality involved as would be understood by those skilled in the art. It should be emphasized that many variations and modifications can be made to the above-described examples, the elements of which are to be understood as being among other acceptable examples. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims. Moreover, in the claims, any reference to a group of items provided by a preceding claim or clause is a reference to at least some and not necessarily all of the items in the group of items, unless specifically stated otherwise.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system comprising:<claim-text>one or more processing units; and</claim-text><claim-text>one or more computer-readable media storing computer-executable instructions that, when executed by the one or more processing units, configure the one or more processing units to perform operations to forecast an email spam campaign comprising:<claim-text>comparing origin-referencing features of a set of substantially homogeneous email samples against compiled domain name records from a DNS records source to predict homogeneous spam origin descriptors; and</claim-text><claim-text>matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records to identify predicted spam origins among matched domain name records.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system as <claim-ref idref="CLM-00001">claim 1</claim-ref> recites, wherein the operations further comprise:<claim-text>determining email samples of a past spam campaign;</claim-text><claim-text>identifying one or more homogeneous features across a set of the email samples;</claim-text><claim-text>identifying one or more systematically heterogeneous features across the set of the email samples; and</claim-text><claim-text>identifying the set of email samples as substantially homogeneous.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system as <claim-ref idref="CLM-00002">claim 2</claim-ref> recites, wherein the one or more homogeneous features comprises at least one of:<claim-text>a first set of recipient addresses in email samples of a first past spam campaign being substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign;</claim-text><claim-text>a top-level domain (TLD) in sender addresses being substantially homogeneous across intra-campaign samples of a same past spam campaign; and</claim-text><claim-text>a TLD in sender addresses being substantially homogeneous across inter-campaign samples of different past spam campaigns.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system as <claim-ref idref="CLM-00002">claim 2</claim-ref> recites, wherein the one or more systematically heterogeneous features comprises at least one of:<claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words;</claim-text><claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content; and</claim-text><claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in including heterogeneous subdomains.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system as <claim-ref idref="CLM-00001">claim 1</claim-ref> recites, wherein the operations further comprise:<claim-text>compiling the domain name records in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples as compiled domain records; and</claim-text><claim-text>determining additional homogeneously origin-referencing features based on comparing the origin-referencing features against the compiled domain name records.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system as <claim-ref idref="CLM-00001">claim 1</claim-ref> recites, wherein the operations further comprise:<claim-text>writing domain matching expressions based on predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features; and</claim-text><claim-text>matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records comprises applying the domain matching expressions against the compiled domain name records.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system as <claim-ref idref="CLM-00001">claim 1</claim-ref> recites, wherein the operations further comprise:<claim-text>generating a domain list based on the predicted spam origins;</claim-text><claim-text>distributing the domain list to a proxy server; and</claim-text><claim-text>configuring a mail scanner running on the proxy server to block emails according to the distributed domain list.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method of forecasting an email spam campaign comprising:<claim-text>comparing origin-referencing features of a set of substantially homogeneous email samples against compiled domain name records from a DNS records source to predict homogeneous spam origin descriptors; and</claim-text><claim-text>matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records to identify predicted spam origins among matched domain name records.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of forecasting an email spam campaign as <claim-ref idref="CLM-00008">claim 8</claim-ref> recites, further comprising:<claim-text>determining email samples of a past spam campaign;</claim-text><claim-text>identifying one or more homogeneous features across a set of the email samples;</claim-text><claim-text>identifying one or more systematically heterogeneous features across the set of the email samples; and</claim-text><claim-text>identifying the set of email samples as substantially homogeneous.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of forecasting an email spam campaign as <claim-ref idref="CLM-00009">claim 9</claim-ref> recites, wherein the one or more homogeneous features comprises at least one of:<claim-text>a first set of recipient addresses in email samples of a first past spam campaign being substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign;</claim-text><claim-text>a top level domain (TLD) in sender addresses being substantially homogeneous across intra-campaign samples of a same past spam campaign; and</claim-text><claim-text>a TLD in sender addresses being substantially homogeneous across inter-campaign samples of different past spam campaigns.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of forecasting an email spam campaign as <claim-ref idref="CLM-00009">claim 9</claim-ref> recites, wherein the one or more systematically heterogeneous features comprises at least one of:<claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words;</claim-text><claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content; and</claim-text><claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in including heterogeneous subdomains.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of forecasting an email spam campaign as <claim-ref idref="CLM-00008">claim 8</claim-ref> recites, further comprising:<claim-text>compiling the domain name records in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples as compiled domain records; and</claim-text><claim-text>determining additional homogeneously origin-referencing features based on comparing the origin-referencing features against the compiled domain name records.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of forecasting an email spam campaign as <claim-ref idref="CLM-00008">claim 8</claim-ref> recites, further comprising:<claim-text>writing domain matching expressions based on predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features; and</claim-text><claim-text>matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records comprises applying the domain matching expressions against the compiled domain name records.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of forecasting an email spam campaign as <claim-ref idref="CLM-00008">claim 8</claim-ref> recites, further comprising:<claim-text>generating a domain list based on the predicted spam origins;</claim-text><claim-text>distributing the domain list to a proxy server; and</claim-text><claim-text>configuring a mail scanner running on the proxy server to block emails according to the distributed domain list.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. One or more computer-readable media storing computer-executable instructions that, when executed by one or more processing units, configure the one or more processing units to perform operations to forecast an email spam campaign, the operations comprising:<claim-text>comparing origin-referencing features of a set of substantially homogeneous email samples against compiled domain name records from a DNS records source to predict homogeneous spam origin descriptors; and</claim-text><claim-text>matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records to identify predicted spam origins among matched domain name records.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The one or more computer-readable media storing computer-executable instructions that, when executed by one or more processing units, configure the one or more processing units to perform operations to forecast an email spam campaign as <claim-ref idref="CLM-00015">claim 15</claim-ref> recites, wherein the operations further comprise:<claim-text>determining email samples of a past spam campaign;</claim-text><claim-text>identifying one or more homogeneous features across a set of the email samples;</claim-text><claim-text>identifying one or more systematically heterogeneous features across the set of the email samples; and</claim-text><claim-text>identifying the set of email samples as substantially homogeneous.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The one or more computer-readable media storing computer-executable instructions that, when executed by one or more processing units, configure the one or more processing units to perform operations to forecast an email spam campaign as <claim-ref idref="CLM-00017">claim 17</claim-ref> recites, wherein the one or more homogeneous features comprises at least one of:<claim-text>a first set of recipient addresses in email samples of a first past spam campaign being substantially homogeneous with a second set of recipient addresses in email samples of a second past spam campaign;</claim-text><claim-text>a top level domain (TLD) in sender addresses being substantially homogeneous across intra-campaign samples of a same past spam campaign; and</claim-text><claim-text>a TLD in sender addresses being substantially homogeneous across inter-campaign samples of different past spam campaigns.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The one or more computer-readable media storing computer-executable instructions that, when executed by one or more processing units, configure the one or more processing units to perform operations to forecast an email spam campaign as <claim-ref idref="CLM-00017">claim 17</claim-ref> recites, wherein the one or more systematically heterogeneous features comprises at least one of:<claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in containing non-dictionary words;</claim-text><claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in mismatching email body content; and</claim-text><claim-text>domain names in sender addresses being systematically heterogeneous across intra-campaign samples and inter-campaign samples in including heterogeneous subdomains.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The one or more computer-readable media storing computer-executable instructions that, when executed by one or more processing units, configure the one or more processing units to perform operations to forecast an email spam campaign as <claim-ref idref="CLM-00015">claim 15</claim-ref> recites, wherein the operations further comprising:<claim-text>compiling the domain name records in accordance with one or more homogeneously origin-referencing features of substantially homogeneous email samples as compiled domain records; and</claim-text><claim-text>determining additional homogeneously origin-referencing features based on comparing the origin-referencing features against the compiled domain name records.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The one or more computer-readable media storing computer-executable instructions that, when executed by one or more processing units, configure the one or more processing units to perform operations to forecast an email spam campaign as <claim-ref idref="CLM-00015">claim 15</claim-ref> recites, the operations further comprising:<claim-text>writing domain matching expressions based on predicted future homogeneous spam origin descriptors and time-sensitive homogeneous features; and</claim-text><claim-text>matching the predicted homogeneous spam origin descriptors and time-sensitive homogeneous features against the compiled domain name records comprises applying the domain matching expressions against the compiled domain name records.</claim-text></claim-text></claim></claims></us-patent-application>