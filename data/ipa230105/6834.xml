<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006835A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006835</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17365873</doc-number><date>20210701</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3247</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0866</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>321</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>085</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>2209</main-group><subgroup>38</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CROSS-BLOCKCHAIN IDENTITY AND KEY MANAGEMENT</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>FUJITSU LIMITED</orgname><address><city>Kawasaki-shi</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>MANDAL</last-name><first-name>Avradip</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>MONTGOMERY</last-name><first-name>Hart</first-name><address><city>Redwood City</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>ROY</last-name><first-name>Arnab</first-name><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>FUJITSU LIMITED</orgname><role>03</role><address><city>Kawasaki-shi</city><country>JP</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method of implementing a revocable threshold hierarchical identity-based signature scheme may include receiving an identifier associated with a user. A first secret key based on the identifier may be generated. A string and the identifier may be directed to be posted on a block of a blockchain. A second secret key may be generated using the string, the first secret key, and the identifier. The block that includes the string and the identifier may be signed using the second secret key. A message may be signed using the second secret key to generate a signature. The signature may be provided to a device. The signature may be verifiable by the device using the string and the identifier obtained from the block by the device.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="217.09mm" wi="127.76mm" file="US20230006835A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="216.07mm" wi="159.85mm" orientation="landscape" file="US20230006835A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="227.58mm" wi="129.79mm" file="US20230006835A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="137.58mm" wi="129.79mm" file="US20230006835A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="136.40mm" wi="75.69mm" file="US20230006835A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">The embodiment(s) discussed herein are related to blockchains and identity and key management thereof.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Blockchains may include lists of records, called blocks, that are grown and linked via cryptography. Blockchains may be employed to facilitate secure transaction, such as cryptocurrency transactions. Many separate blockchain-based cryptocurrencies currently exist.</p><p id="p-0004" num="0003">The subject matter claimed herein is not limited to embodiments that solve any disadvantages or that operate only in environments such as those described above. Rather, this background is only provided to illustrate one example technology area where some embodiments described herein may be practiced.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">According to an aspect of an embodiment, a method of implementing a revocable threshold hierarchical identity-based signature scheme may include receiving an identifier associated with a user. A first secret key based on the identifier may be generated. A string and the identifier may be directed to be posted on a block of a blockchain. A second secret key may be generated using the string, the first secret key, and the identifier. The block that includes the string and the identifier may be signed using the second secret key. A message may be signed using the second secret key to generate a signature. The signature may be provided to a device. The signature may be verifiable by the device using the string and the identifier obtained from the block by the device.</p><p id="p-0006" num="0005">The object and advantages of the embodiments will be realized and achieved at least by the elements, features, and combinations particularly pointed out in the claims.</p><p id="p-0007" num="0006">It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0008" num="0007">Example embodiments will be described and explained with additional specificity and detail through the use of the accompanying drawings.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example environment for signature verification</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a method of implementing a revokable threshold hierarchical identity-based signature scheme.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a method of signature verification.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example system that may be used for implementing a revokable threshold hierarchical identity-based signature scheme.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0013" num="0012">Conventionally, integration across separate blockchains is limited. Cross-blockchain transactions are available between a limited number of blockchains and such integration is typically ad-hoc. No conventional systems facilitate a dynamic integration of blockchains to facilitate cross-blockchain transactions. Furthermore, conventional blockchain identity management systems may be insufficient for dynamic cross-blockchain integration.</p><p id="p-0014" num="0013">Conventional blockchain integration systems may include identity information hardcoded into the blockchain systems. Such systems may facilitate cross-blockchain transactions between set pairs of blockchains but may not facilitate scaling for dynamic blockchain integration. Furthermore, conventional blockchain integration systems may attempt to rely on an additional, separate blockchain and/or may employ identity proofs that rely on substantial overhead to execute.</p><p id="p-0015" num="0014">Some embodiments include identity management systems and methods that may facilitate dynamic cross-blockchain integration. In some configurations, the identity management systems and methods may not require lookups or blockchain queries for users' public keys on different blockchains. For example, a user's public key for one blockchain may be used to find the user's public key for other blockchains. Additionally, the identity management systems and methods may require minimal computational overhead. For example, computationally expensive actions, such as zero knowledge proofs, may optionally be avoided. Alternately or additionally, the identity management systems and methods may facilitate revocation of keys by users and/or may facilitate users needing to employ their master keys infrequently.</p><p id="p-0016" num="0015">In some embodiments, the identity management systems and methods described in this disclosure may use a revocable threshold hierarchical identity-based signature (RTHIBS) scheme. The RTHIBS scheme may use concepts from other signature schemes. Various signature schemes are now discussed, concepts of which may be used in the RTHIBS scheme.</p><p id="p-0017" num="0016">An identity-based signature scheme may employ setup, key generation, signature, and verification functions as follows:</p><p id="p-0018" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Setup( )&#x2192;(<i>msk,pp</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0019" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Keygen(<i>msk,id</i><sub>u</sub>)&#x2192;<i>sk</i><sub>u </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0020" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sign(<i>sk</i><sub>u</sub><i>,pp,m</i>)&#x2192;&#x3c3;<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0021" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Verify(<i>pp,id</i><sub>u</sub><i>,m</i>,&#x3c3;)&#x2192;0/1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0022" num="0017">Where msk represents a master secret key, pp represents a public parameter, id<sub>u </sub>represents an identification (ID) associated with a user u, sk<sub>u </sub>represents a secret key of the user u, m represents a message, and &#x3c3; represents a signature. The public parameter pp may be published such that it is publicly available. The message m may identify a blockchain transaction or the like. By way of example, the user u may output the ID associated with the user id<sub>u</sub>, the signature &#x3c3;, and the message m. A verifier may verify that the signature using the public parameter, the user id<sub>u</sub>, the signature &#x3c3;, and the message m.</p><p id="p-0023" num="0018">A hierarchical identity-based signature scheme may further employ a series of key generation functions as follows:</p><p id="p-0024" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Setup( )&#x2192;(<i>msk,pp</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0025" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Keygen(<i>msk,id</i><sub>u</sub><sub><sub2>1,i</sub2></sub>)&#x2192;<i>sk</i><sub>u</sub><sub><sub2>1,i </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0026" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Keygen(<i>sk</i><sub>u</sub><sub><sub2>1,i</sub2></sub><i>,id</i><sub>u</sub><sub><sub2>2,i</sub2></sub>)&#x2192;<i>sk</i><sub>u</sub><sub><sub2>2,i </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0027" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Keygen(<i>sk</i><sub>u</sub><sub><sub2>k-1,i</sub2></sub><i>,id</i><sub>u</sub><sub><sub2>k,i</sub2></sub>)&#x2192;<i>sk</i><sub>u</sub><sub><sub2>k,i </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0028" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sign(<i>sk</i><sub>u</sub><sub><sub2>k,i</sub2></sub><i>,pp,m</i>)&#x2192;&#x3c3;<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0029" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Verify(<i>pp,id</i><sub>u</sub><sub><sub2>k,i</sub2></sub><i>,m</i>,&#x3c3;)&#x2192;0/1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0030" num="0019">Where msk represents a master secret key, pp represents a public parameter, id<sub>u1,i </sub>represents an ID of a level-1 user u<sub>1,i</sub>, id<sub>u2,i </sub>represents an ID of a level-2 user u<sub>2,i</sub>, id<sub>uk,i </sub>represents an ID of a level-k user u<sub>k,i</sub>, sk<sub>u1,i </sub>represents a secret key of the level-1 user u<sub>1,i</sub>, sk<sub>u2,i </sub>represents a secret key of the level-2 user u<sub>2,i</sub>, sk<sub>u1,i </sub>represents a secret key of the level-k user u<sub>k,i</sub>, m represents a message, and &#x3c3; represents a signature. The setup function may be run by a root-level user. The public parameter pp may be published such that it is publicly available. The message m may identify a blockchain transaction or the like. By way of example, the user u<sub>k,i </sub>may output the associated ID id<sub>uk,i</sub>, the signature &#x3c3;, and the message m.</p><p id="p-0031" num="0020">An example threshold signature scheme may employ multiple signatures from multiple users, as follows:</p><p id="p-0032" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Setup( )&#x2192;(<i>sk</i><sub>1</sub><i>,sk</i><sub>2</sub><i>, . . . ,sk</i><sub>n</sub><i>,pk</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0033" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sign(<i>sk</i><sub>1</sub><i>,m</i>)&#x2192;&#x3c3;<sub>1 </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0034" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sign(<i>sk</i><sub>2</sub><i>,m</i>)&#x2192;&#x3c3;<sub>2 </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0035" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sign(<i>sk</i><sub>n</sub><i>,m</i>)&#x2192;&#x3c3;<sub>n </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0036" num="0021">Where sk<sub>1 </sub>represents a secret key of a user u<sub>1</sub>, sk<sub>2 </sub>represents a secret key of a user u<sub>2</sub>, sk<sub>n </sub>represents a secret key of a user u<sub>n</sub>, pk represents a public key, m represents a message, &#x3c3;<sub>1 </sub>represents a signature of a user u<sub>1</sub>, &#x3c3;<sub>2 </sub>represents a signature of a user u<sub>2</sub>, and &#x3c3;<sub>n </sub>represents a signature of a user u<sub>n</sub>. The public key pk may be published such that it is publicly available. The message m may identify a blockchain transaction or the like. The various signatures, &#x3c3;<sub>1 </sub>through &#x3c3;<sub>n</sub>, may be combined for verification. Verification may succeed in response to a threshold number t out of the n users providing a correct signature.</p><p id="p-0037" num="0022">A threshold hierarchical identity-based signature scheme may employ a series of key generation functions and multiple signatures from multiple users, as follows:</p><p id="p-0038" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Setup( )&#x2192;(<i>msk,pp</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0039" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Keygen(<i>msk,id</i><sub>u</sub><sub><sub2>1,i</sub2></sub>)&#x2192;<i>sk</i><sub>u</sub><sub><sub2>1,i </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0040" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Keygen(<i>sk</i><sub>u</sub><sub><sub2>1,i</sub2></sub><i>,id</i><sub>u</sub><sub><sub2>2,i</sub2></sub>)&#x2192;<i>sk</i><sub>u</sub><sub><sub2>2,i </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0041" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Keygen(<i>sk</i><sub>u</sub><sub><sub2>k-1,i</sub2></sub><i>,id</i><sub>u</sub><sub><sub2>k,i</sub2></sub>)&#x2192;<i>sk</i><sub>u</sub><sub><sub2>k,i </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0042" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sign(<i>sk</i><sub>u</sub><sub><sub2>k,i</sub2></sub><i>,pp,m</i>)&#x2192;<i>&#x3c3;</i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0043" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Verify(<i>pp,id</i><sub>u</sub><sub><sub2>k,i</sub2></sub><i>,m</i>,&#x3c3;)&#x2192;0/1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0044" num="0023">Where msk represents a master secret key, pp represents a public parameter, id<sub>u1,i </sub>represents an ID of a level-1 user u<sub>1,i</sub>, id<sub>u2,i </sub>represents an ID of a level-2 user u<sub>2,i</sub>, id<sub>uk,i </sub>represents an ID of a level-k user u<sub>k,i</sub>, sk<sub>u1,i </sub>represents a secret key of the level-1 user u<sub>1,i</sub>, sk<sub>u2,i </sub>represents a secret key of the level-2 user u<sub>2,i</sub>, sk<sub>u1,i </sub>represents a secret key of the level-k user u<sub>k,i</sub>, m represents a message, and &#x3c3; represents a signature. The setup function may be run by n root-level users. The public parameter pp may be published such that it is publicly available. The message m may identify a blockchain transaction or the like. Verification may succeed in response to signing keys being traced back to a threshold number t out of the n root users. The threshold hierarchical identity-based signature scheme may be built using conventional threshold signature schemes.</p><p id="p-0045" num="0024">Embodiments will be explained with reference to the accompanying drawings.</p><p id="p-0046" num="0025"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example environment <b>100</b> for signature verification. The environment <b>100</b> may be arranged in accordance with at least one embodiment described in the present disclosure. The environment <b>100</b> may include a network <b>102</b>, a first identity provider system <b>110</b>, a second identity provider system <b>110</b><i>b</i>, and a third identity provider system <b>110</b><i>c</i>, referred to as the identity provider systems <b>110</b>, a first blockchain network <b>120</b>, a second blockchain network <b>120</b><i>b</i>, and a third blockchain network <b>120</b>, referred to collectively as blockchain networks <b>120</b>, a first device <b>130</b> and a second device <b>140</b>.</p><p id="p-0047" num="0026">The network <b>102</b> may be configured to communicatively couple the identity provider systems <b>110</b>, the blockchain networks <b>120</b>, the first device <b>130</b>, and the second device <b>140</b>. In some embodiments, the network <b>102</b> may be any network or configuration of networks configured to send and receive communications between systems and devices. In some embodiments, the network <b>102</b> may include a wired network, an optical network, and/or a wireless network, and may have numerous different configurations, including multiple different types of networks, network connections, and protocols to communicatively couple devices and systems in the environment <b>100</b>.</p><p id="p-0048" num="0027">Each of the first and second devices <b>130</b> and <b>140</b> may include or be any electronic or digital computing device. For example, the first device <b>130</b> and the second device <b>140</b> may include a desktop computer, a laptop computer, a smartphone, a mobile phone, a tablet computer, or any other computing device that may be used for communication and/or data processing.</p><p id="p-0049" num="0028">In some embodiments, each of the first device <b>130</b> and the second device <b>140</b> may include memory and at least one processor, which are configured to perform operations as described in this disclosure, among other operations. In some embodiments, each of the first device <b>130</b> and the second device <b>140</b> may include computer-readable instructions that are configured to be executed by each of the first device <b>130</b> and the second device <b>140</b> to perform operations described in this disclosure.</p><p id="p-0050" num="0029">Each of the blockchain networks <b>120</b> may include a technical infrastructure that provides a blockchain for use by other devices, such as the first device <b>130</b> and the second device <b>140</b>. Each of the blockchain networks <b>120</b> may include multiple devices, servers, etc. that may be configured to host the databases that form the blockchain. In these and other embodiments, each of the first device <b>130</b> and the second device <b>140</b> may be configured to access the blockchains. For example, with respect to one blockchain, the first device <b>130</b> and/or the second device <b>140</b> may write data to a block of the blockchain, sign a block of the blockchain, and/or read information from a block of the blockchain.</p><p id="p-0051" num="0030">The identity provider systems <b>110</b> may be configured to create, maintain, and manage identity information for other systems and also provides authentication services for the other systems. The identity provider systems <b>110</b> may include hardware and/or software. For example, each of the identity provider systems <b>110</b> may include memory and at least one processor, which are configured to perform operations as described in this disclosure, among other operations. In some embodiments, each of the identity provider systems <b>110</b> may include computer-readable instructions that are configured to be executed to perform operations described in this disclosure.</p><p id="p-0052" num="0031">Each of the identity provider systems <b>110</b> may be associated with and/or configured to provide identity services for one of the blockchain networks <b>120</b>. For example, the first identity provider system <b>110</b><i>a </i>may be associated with the first blockchain network <b>120</b><i>a </i>and be configured to provide identity services for the first blockchain network <b>120</b><i>a. </i></p><p id="p-0053" num="0032">In some embodiments, a revocable threshold hierarchical identity-based signature (RTHIBS) scheme may be implemented in the environment <b>100</b> to assist in verification amongst the blockchain networks <b>120</b>, the first device <b>130</b>, and the second device <b>140</b>. Generally speaking, the RTHIBS scheme may include at least three levels in the hierarchy. A root level may include a master secret key, a second level may include a first secret key, and a third level may include a second secret key. The root level may further include a threshold signature scheme, such that no one system/device includes all of the master secret key. Rather, the master secret key may be distributed in master secret key shares. The other levels of the hierarchy may not use the threshold signature scheme. The first secret key of the second level may be held by a single user and the second secret key of the third level may be used by the single user to authenticate messages, blocks, etc.</p><p id="p-0054" num="0033">An example implementation of the RTHIBS scheme with respect to the environment <b>100</b> is now provided. Each of the identity provider systems <b>110</b>, the blockchain networks <b>120</b>, the first device <b>130</b>, and the second device <b>140</b> may be include instructions that may be used to implement the RTHIBS scheme. For example, this disclosure may provide an indication of various calls that may be used to perform functions of the RTHIBS scheme. In these and other embodiments, the elements of the environment <b>100</b> may be configured to perform those calls that they are described as performing. As such, the RTHIBS scheme may be performed in a distributed fashion without assuming any single trusted authority.</p><p id="p-0055" num="0034">To begin, the identity provider systems <b>110</b> may perform a setup procedure. In the setup procedure, each of the identity provider systems <b>110</b> may receive a share of a master secret key such that none of the identity provider systems <b>110</b> include an entirety of the master secret key. In these and other embodiments, the setup procedure may generate a master public key associated with the master secret key such that the master public key and the master secret key may be configured to be used in an asymmetric key encryption scheme. The master public key may be available to all elements in the environment <b>100</b> and/or posted on the blockchains of the blockchain networks <b>120</b>. Other secret key and public key associations described in this disclosure may also be configured to be used in a asymmetric key encryption scheme.</p><p id="p-0056" num="0035">In some embodiments, the first device <b>130</b> may be associated with a user. The first device <b>130</b> may be used to implement the RTHIBS scheme in behave of the user. Thus, description of a user performing a task may be shorthand for a device, such as the first device <b>130</b>, that is controlled by the user as performing a task in the RTHIBS scheme.</p><p id="p-0057" num="0036">In some embodiments, the first device <b>130</b> may obtain an identifier. The identifier may be associated with the user, such as a random string, an email address, or other identifier. The first device <b>130</b> may provide the identifier to the identity provider systems <b>110</b>. The identity provider systems <b>110</b> may use the identifier, a random string, and/or other information to generate a signature using the master secret key shares. The identity provider systems <b>110</b> may provide the signatures to the first device <b>130</b>. The first device <b>130</b> may combine the signatures to generate a combined signature. The combined signature may be used with other information, such as the identifier, to generate a first secret key of a second level of the RTHIBS scheme hierarchy. If not enough identity provider systems <b>110</b> are available to provide the signatures, the process may not occur because a threshold amount of the master secret key shares may not be used to form the combined signature. This threshold amount may be the threshold portion of the RTHIBS scheme.</p><p id="p-0058" num="0037">The first device <b>130</b> may generate a string. In some embodiments, the string may be based on a count of a counter. The first device <b>130</b> may direct that the string of the identifier be posted on a block of the each of the blockchains of the first device <b>130</b>. In these and other embodiments, the first device <b>130</b> may be configured to generate a second secret string of a third level of the RTHIBS scheme hierarchy. The first device <b>130</b> may generate the second secrete string using calls of the RTHIBS scheme. The second secret string may be generating using the string, the first secret key, and the identifier, among other information. The first device <b>130</b> may sign the blocks that include the string and the identifier using the second secret key to authenticate the second secret key. For example, the first device <b>130</b> may call a RTHIBS.SignLi function as described herein. Alternately or additionally, a verifier may check the validity of the signature by calling a RTHIBS. Verify function as described herein.</p><p id="p-0059" num="0038">After generation of the second secret key, the first device <b>130</b> may use the second secret key for signing messages that may be verified by others using the master public key and the information in the blocks of the blockchain. Because the first device <b>130</b> posts the information in all of the blockchains and the second secret key is associated with each of the blockchains through the RTHIBS scheme, trust may be established between users of the different blockchains.</p><p id="p-0060" num="0039">For example, the first device <b>130</b> may generate a message that may be signed using the second secret key to generate a signature. The first device <b>130</b> may generate the signature using calls of the RTHIBS scheme. The first device <b>130</b> may provide the message and the signature to the second device <b>140</b>.</p><p id="p-0061" num="0040">The second device <b>140</b> may obtain the message and the signature may be configured to verify the signature. The second device <b>140</b> may obtain the master public key, such as from one of the blockchains. The second device <b>140</b> may also be configured to obtain the identifier and the string from a blockchain. The second device <b>140</b> may obtain the identifier and the string from a block of the blockchain that is newer than other blocks that may include the identifier. The second device <b>140</b> may use the master public key, the identifier, and the string to verify the message/signature. The second device <b>140</b> may use calls of the RTHIBS scheme to verify the message/signature. In these and other embodiments, the call to the RTHIBS scheme may include determining if the identifier from the blockchain is valid. In these and other embodiments, the blockchain networks <b>120</b> may revoke an identifier if the identifier is comprised to cause the authentication to be performed using the identifier to fail.</p><p id="p-0062" num="0041">In some embodiments, if the second secret keys is compromised, the second secret key may be revoked. In these and other embodiments, a third secret key that is of the third hierarchy level of the RTHIBS scheme may be generated. The third secret key may be generated using a new string and the same identifier. The new string and the identifier may be directed to be posted to other blocks of the blockchain and the process may continue as described above.</p><p id="p-0063" num="0042">In some embodiments, in the RTHIBS scheme may include additional aspects that are able to be performed based on the RTHIBS scheme as described in this disclosure. For example, in the event users' secret keys are compromised, the users may inform verifiers that the secret keys have been compromised. Alternately or additionally, in the RTHIBS scheme, the verifiers may flag all future messages signed by the compromised secret keys.</p><p id="p-0064" num="0043">Furthermore, the user may prove their identity to relevant identity providers through channels off of the blockchains and indicate that the previous secret key should be revoked. The user ID and string associated with the revoked secret key may be added to a deny list. The deny list may be checked during verification. Where a user ID and string is on the deny list, verification of messages signed with a secret key associated with the deny listed user ID and string may fail.</p><p id="p-0065" num="0044">In some embodiments, a master secret key may be revoked. For instance, in response to the master secret key being compromised. Where the user ID is further compromised, the user may prove their identity to relevant identity providers through channels off the blockchains and register a new user ID. The new user ID and a new string, such as a counter reset to an initial value, may be posted to relevant blockchains, which may effectively revoke the previous user ID. The user may sign the previous block including the new user ID and the new string with a secret key generated using the new user ID and new string to authenticate.</p><p id="p-0066" num="0045">Further details regarding the implementation of the RTHIBS is now provided. In some embodiments, the RTHIBS scheme may be based, in part, on a threshold signature scheme and a regular signature scheme. For example, the RTHIBS scheme may employ a setup function, as follows:</p><p id="p-0067" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.Setup( )&#x2192;(<i>msk</i><sub>1</sub><i>, . . . ,msk</i><sub>n</sub><i>,pp</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0068" num="0000">Where msk<sub>1 </sub>represents a share of master secret key of a root-level (e.g., a level-0) user, msk<sub>n </sub>represents a master secret key of an n-th root level user, and pk represents a public key or public parameter.</p><p id="p-0069" num="0046">The RTHIBS scheme may employ a level-1 get key function, as follows:</p><p id="p-0070" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.GetKey<i>L</i>1(<i>Id</i><sub>u</sub><sub><sub2>i</sub2></sub><i>,T</i>&#x2286;[<i>n</i>],{<i>msk</i><sub>u</sub><i>:u&#x2208;T</i>})<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0071" num="0000">Where Id<sub>ui,* </sub>represents an ID of a first-level user requesting a secret key from a group of root-level users denoted as set T, such as identity provider systems, participating in the RTHIBS scheme and [n]={1, 2, . . . , n} represents the full set of root-level users participating in the RTHIBS scheme. The element msk<sub>u </sub>represents the master secret key shares of the u root-level users belonging to T.</p><p id="p-0072" num="0047">In some configurations, where the number of root-level users in T is less than a threshold t, the RTHIBS.GetKeyL1 function may be aborted. Where the number of root-level users in T is equal to or greater than the threshold t, a string r<sub>1 </sub>may be generated. In some configurations, the string r<sub>1 </sub>may be a counter or a random string. Furthermore, a Sig.Keygen( ) function may be executed to generate a public key pk<sub>1 </sub>and a secret key sk<sub>1</sub>. In some configurations, the Sig.Keygen( ) function may take a security parameter as an input. Each of the root-level users u that are a member of T may execute a threshold signing function as follows:</p><p id="p-0073" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>T</i>Sig.sign(<i>msk</i><sub>u</sub><i>,Id</i><sub>u</sub><sub><sub2>i</sub2></sub><i>,&#x2225;r</i><sub>1</sub><i>&#x2225;pk</i><sub>1</sub>)&#x2192;&#x3c3;<sub>u </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0074" num="0000">Where the double pipes &#x2225; indicate concatenation and &#x3c3;<sub>u </sub>represents a signature associated with the root-level user u.</p><p id="p-0075" num="0048">Furthermore, a threshold signature combining function may be executed to combine the &#x3c3;<sub>u </sub>signatures as follows:</p><p id="p-0076" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>T</i>Sig.combine({&#x3c3;<sub>u</sub><i>:u&#x2208;T</i>})&#x2192;&#x3c3;<sub>0 </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0077" num="0000">Where &#x3c3;<sub>0 </sub>represents the combination of the &#x3c3;<sub>u </sub>signatures. Thus, for example, the output of an unaborted RTHIBS level-1 get key function may be as follows:</p><p id="p-0078" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.GetKey<i>L</i>1(<i>Id</i><sub>u</sub><sub><sub2>1,*</sub2></sub><i>,T</i>&#x2286;[<i>n</i>],{<i>msk</i><sub>u</sub><i>:u&#x2208;T</i>})&#x2192;(&#x3c3;<sub>0</sub><i>,Id</i><sub>u</sub><sub><sub2>1,*</sub2></sub><i>&#x2225;r</i><sub>1</sub><i>&#x2225;pk</i><sub>1</sub><i>,sk</i><sub>1</sub>)=<i>sk</i><sub>u</sub><sub><sub2>1,* </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0079" num="0000">Where sk<sub>u1,* </sub>represents the level-1 secret key requested by the first-level user from the group of T root-level users.</p><p id="p-0080" num="0049">The RTHIBS scheme may employ a level-1 signing function as follows:</p><p id="p-0081" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.SignL1(<i>sk</i><sub>u</sub><sub><sub2>1,*</sub2></sub><i>,pp,m</i>)&#x2192;((&#x3c3;<sub>0</sub><i>,&#x2225;r</i><sub>1</sub><i>&#x2225;pk</i><sub>1</sub>),&#x3c3;<sub>1</sub>)=&#x3c3;<sub>L1 </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0082" num="0000">Where sk<sub>u1,* </sub>represents the level-1 secret key output by the RTHIBS.GetKeyL1 function. The element sk<sub>u1,* </sub>is parsed as (&#x3c3;<sub>0</sub>,Id<sub>u1,*</sub>&#x2225;r<sub>1</sub>&#x2225;pk<sub>1</sub>,sk<sub>1</sub>), pp represents a public parameter, and m represents a message, such as an inter-blockchain transaction or the like. The signature &#x3c3;<sub>1 </sub>may be generated as follows:</p><p id="p-0083" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sig.sign(<i>sk</i><sub>1</sub><i>,m</i>)&#x2192;&#x3c3;<sub>1 </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0084" num="0000">For example, the signature &#x3c3;<sub>1 </sub>may be generated using a signing function of a conventional threshold signature scheme.</p><p id="p-0085" num="0050">The RTHIBS scheme may employ a level-1 verification function as follows:</p><p id="p-0086" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.Verify<i>L</i>1(<i>pp,Id,m,&#x3c3;</i><sub>L1</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0087" num="0051">Where is parsed as ((&#x3c3;<sub>0</sub>,Id<sub>u1,*</sub>&#x2225;r<sub>1</sub>&#x2225;pk<sub>1</sub>),&#x3c3;<sub>1</sub>). In some configurations, Id<sub>u1,*</sub>&#x2225;r<sub>1 </sub>may be compared to a deny list and, in response to the Id<sub>u1,*</sub>&#x2225;r<sub>1 </sub>being on the deny list, the RTHIBS.VerifyL1 function may return a failure. In some configurations, if Id does not equal &#x22a5;, where &#x22a5; is not an identity of any participant, the Id may be compared to the Id<sub>u1,* </sub>and if the Id is not equal to the Id<sub>u1,*</sub>, the RTHIBS.VerifyL1 function may return a failure. In some configurations, a conventional identity-based signature scheme verification function may be executed as follows:</p><p id="p-0088" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sig.Verify(<i>pk</i><sub>1</sub><i>,m,&#x3c3;</i><sub>1</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0089" num="0000">Furthermore, in some configurations, a conventional threshold signature scheme based verification function may be executed as follows:</p><p id="p-0090" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>T</i>Sig.Verify(<i>pp,Id</i><sub>u</sub><sub><sub2>1,*</sub2></sub><i>&#x2225;r</i><sub>1</sub>,&#x3c3;<sub>0</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0091" num="0000">In response to either verification function returning a failure, the RTHIBS.VerifyL1 function may return a failure. Otherwise, the RTHIBS.VerifyL1 function may return a success.</p><p id="p-0092" num="0052">In some embodiments, the RTHIBS scheme may employ a level-i get key function, where i&#x2265;2, as follows:</p><p id="p-0093" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.GetKey<i>Li</i>(<i>Id,pp,sk</i><sub>u</sub><sub><sub2>i-1,*</sub2></sub><i>,r</i><sub>i</sub>)&#x2192;(&#x3c3;<sub>i-1</sub><i>,Id&#x2225;r</i><sub>i</sub><i>&#x2225;pk</i><sub>i</sub><i>,sk</i><sub>i</sub>)=<i>sk</i><sub>u</sub><sub><sub2>i,* </sub2></sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0094" num="0000">Where the element sk<sub>ui-1,* </sub>is parsed as (&#x3c3;<sub>i-2</sub>,sk<sub>ui-1,*</sub>&#x2225;r<sub>i-1</sub>&#x2225;pk<sub>i-1</sub>, sk<sub>i-1</sub>), sk<sub>ui,* </sub>represents the secret key for some level-i user *, and r<sub>i </sub>represents an i-th string. In some configurations, a conventional identity-based signature scheme key generation function Sig.Keygen( ) may be executed to generate a public key pk<sub>i </sub>and a secret key sk<sub>i</sub>. In some configurations, a signature &#x3c3;<sub>i-1 </sub>may be generated by executing an i&#x2212;1 level signing function as follows:</p><p id="p-0095" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.Sign<i>L</i><sub>i-1</sub>(<i>sk</i><sub>u</sub><sub><sub2>i-1,*</sub2></sub><i>,pp,Id&#x2225;r</i><sub>i</sub><i>&#x2225;pk</i><sub>i</sub>)&#x2192;&#x3c3;<sub>i-1 </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0096" num="0053">In some embodiments, the RTHIBS scheme may employ a level-i signing function, where i&#x2265;2, as follows:</p><p id="p-0097" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.Sign<i>L</i><sub>i</sub>(<i>sk</i><sub>u</sub><sub><sub2>i,*</sub2></sub><i>,pp,m</i>)&#x2192;((&#x3c3;<sub>i-1</sub><i>,Id</i><sub>u</sub><sub><sub2>i,*</sub2></sub><i>&#x2225;r</i><sub>i</sub><i>&#x2225;pk</i><sub>i</sub>),&#x3c3;<sub>i</sub>)=&#x3c3;<sub>Li </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0098" num="0000">Where the element sk<sub>ui,* </sub>is parsed as (&#x3c3;<sub>i-1</sub>,Id<sub>ui,*</sub>&#x2225;r<sub>i</sub>&#x2225;pk<sub>i</sub>,sk<sub>i</sub>). In some configurations, the signature &#x3c3;<sub>i </sub>may be generated by executing a conventional signature scheme function as follows:</p><p id="p-0099" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sig.sign(<i>sk</i><sub>i</sub><i>,m</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0100" num="0054">Alternately or additionally, the RTHIBS scheme may employ a verification function, which may recursively check levels until it reaches level 1, as follows:</p><p id="p-0101" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.Verify(<i>pp,Id,m</i>,&#x3c3;)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0102" num="0000">Where &#x3c3; is parsed as ((&#x3c3;<sub>i-1</sub>,Id<sub>ui</sub>&#x2225;r<sub>i</sub>&#x2225;pk<sub>i</sub>), &#x3c3;<sub>i</sub>). In some configurations, Id<sub>ui,*</sub>&#x2225;r<sub>i </sub>may be compared to a deny list and, in response to the Id<sub>ui,*</sub>&#x2225;r<sub>i </sub>being on the deny list, the RTHIBS.Verify function may return a failure. In some configurations, if Id does not equal &#x22a5;, the Id may be compared to the Id<sub>ui,* </sub>and if the Id is not equal to the Id<sub>ui,* </sub>the RTHIBS.Verify function may return a failure. A conventional signature scheme verification function may be executed as follows:</p><p id="p-0103" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Sig.Verify(<i>pk</i><sub>i</sub><i>,m,&#x3c3;</i><sub>i</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0104" num="0000">As noted above, the RTHIBS verification function may be executed recursively as follows:</p><p id="p-0105" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.Verify(<i>pp,&#x22a5;,Id</i><sub>u</sub><sub><sub2>i,*</sub2></sub><i>&#x2225;r</i><sub>i</sub><i>&#x2225;pk</i><sub>i</sub>,&#x3c3;<sub>i-1</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0106" num="0000">In response to a verification function returning a failure, the RTHIBS.Verify function may return a failure. Otherwise, the RTHIBS.Verify function may return a success.</p><p id="p-0107" num="0055">In some embodiments, the RTHIBS scheme may employ a revoke function as follows:</p><p id="p-0108" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RTHIBS.Revoke(<i>sk</i><sub>u</sub><sub><sub2>i,*</sub2></sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0109" num="0000">Where sk<sub>ui,* </sub>is parsed as (&#x3c3;<sub>i-1</sub>,Id<sub>ui,*</sub>&#x2225;r<sub>i</sub>&#x2225;pk<sub>i</sub>,sk<sub>i</sub>). The RTHIBS.Revoke function may cause the deny list checked by the RTHIBS.VerifyL1 and RTHIBS.VerifyLi functions to be updated to include Id<sub>ui,*</sub>&#x2225;r<sub>i </sub>on the deny list.</p><p id="p-0110" num="0056">Modifications, additions, or omissions may be made to the environment <b>100</b> without departing from the scope of the present disclosure. For example, in some embodiments, the environment <b>100</b> may include additional devices, such as other devices that may use the RTHIBS scheme and access the blockchains of the blockchain networks <b>120</b>. Alternately or additionally, some of the elements may be combined. For example, one or more of the identity provider systems <b>110</b> may be part of one or more of the blockchain networks <b>120</b>. Alternately or additionally, one or more of the identity provider systems <b>110</b> may provide services for two or more of the blockchain networks <b>120</b>. Thus, the environment <b>100</b> may include more blockchain networks <b>120</b> than identity provider systems <b>110</b>. Alternately or additionally, the first device <b>130</b> and the second device <b>140</b> may be considered as part of one or more of the blockchain networks <b>120</b> as the first device <b>130</b> and the second device <b>140</b> may post to the blockchains of the blockchain networks <b>120</b>.</p><p id="p-0111" num="0057"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a method <b>200</b> of implementing an RTHIBS scheme. The RTHIBS scheme may be implemented by a manager of a blockchain. In some embodiments, the method <b>200</b> may be preceded by participating blockchains adopting a standardized security parameter scheme in an effort to facilitate performance of the method <b>200</b>. The method <b>200</b> may facilitate cross-blockchain transactions. The method <b>200</b> may facilitate dynamic blockchain integration into the RTHIBS scheme. In some embodiments, the method may be performed by a blockchain entity or the like.</p><p id="p-0112" num="0058">The method <b>200</b> may begin at block <b>202</b> by generating keys. For example, a share of a master secret key and a master public key may be generated. The share of the master secret key may be associated with a particular blockchain. The share of the master secret key may be one of multiple shares of the master secret key. Each of the shares of the master secret key may be associated with and provided to a different blockchain. The master public key may be published publicly. For instance, the master public key may be posted to the particular blockchain. By way of example, the keys may be generated by blockchain consensus participants of each participating blockchain executing the RTHIBS.Setup function described herein. Thus, the public parameter may be initialized, which the participating blockchains may collectively publish.</p><p id="p-0113" num="0059">The method <b>200</b> may continue at block <b>204</b> by receiving a user ID. The user ID may be associated with a particular user. In some embodiments, the user ID may include an email address associated with the user. Employing an email address may facilitate verification that the user identification is associated with the owner of the email address.</p><p id="p-0114" num="0060">The method <b>200</b> may continue at block <b>206</b> by providing a user secret key to the user. The user secret key may be generated and provided to the user in response to receiving the user ID. The user secret key may be associated with the particular blockchain. In some configurations, the user secret key may include a share of a user master secret key. The user may register with other participating blockchains to receive additional shares of the user master secret key. In some configurations, the user secret key may be generated via the RTHIBS.GetKeyL1 function as described herein.</p><p id="p-0115" num="0061">The method <b>200</b> may continue to block <b>208</b> by receiving the user ID and a first string. By way of example, the first string may be a counter value or an arbitrary string. For instance, the first string may be associated with a counter value of 0. In some configurations, the user ID and the first string may be concatenated to form a public identifier. By way of example, the predefined public identifier may be an email-id&#x2225;counter or an email-id&#x2225;arbitrary-string, where the double pipes &#x2225; indicate concatenation and where the arbitrary string may be chosen by the owner of the email identification.</p><p id="p-0116" num="0062">In some configurations, the user may generate one or more hierarchical secret keys from the user master secret key or from previously generated hierarchical secret keys. In some embodiments, the hierarchical secret keys may correspond to the public identifier. In some configurations, the user may generate an additional string for each hierarchical key generated. Where the first string is a counter, each additional string may represent an incremental advancement of the counter. For instance, the first string associated with the user master secret key may equal 0 and a second string associated with a first hierarchical secret key may equal 1.</p><p id="p-0117" num="0063">By way of example, the string may be an arbitrary value or a counter set to an initial value. The user ID and the string may be posted on the applicable blockchains, for instance, as a public identifier. The user may generate a new hierarchical secret key. For instance, the user may employ an RTHIBS.GetKeyL2 function described herein. The user may sign the previous block with the level-2 hierarchical secret key and post the signature such that the level-2 hierarchical secret key may be authenticated.</p><p id="p-0118" num="0064">The user may further sign a message, which may include a cross-blockchain transaction. For instance, the user may employ an RTHIBS.SignL1 function described herein or an RTHIBS.SignLi function described herein as appropriate. The resulting signed message may be provided to a verifier.</p><p id="p-0119" num="0065">The method <b>200</b> may continue at block <b>210</b> by receiving a first message signed by the user. The signed message may include a transaction, such as a cross-blockchain transaction to be posted to one or more blockchains should a verification succeed.</p><p id="p-0120" num="0066">The method <b>200</b> may continue at block <b>212</b> by obtaining the first string from the blockchain. For example, where the first string is a counter, the current counter value may be obtained from the blockchain.</p><p id="p-0121" num="0067">The method <b>200</b> may continue at block <b>214</b> by verifying that the first message was signed by the user. The verification may be based at least in part on the user ID and the first string. For instance, as a public identifier used in the verification function. By way of example, the RTHIBS.VerifyL1 function or the RTHIBS.VerifyLi function described herein may be employed as appropriate to verify that the message was signed by the user. In some embodiments, verifying the first message may include comparing the user ID and the first string to a deny list.</p><p id="p-0122" num="0068">For this and other processes and methods disclosed herein, the functions performed in the processes and methods may be implemented in differing order. Furthermore, the outlined operations are provided only as examples, and some of the operations may be optional, combined into fewer operations, or expanded into additional operations without detracting from the essence of the embodiments.</p><p id="p-0123" num="0069">For example, in some embodiments, the method <b>200</b> may further include receiving a request to revoke the user secret key. The identity of the entity requesting the revocation may be verified as the associated user. For instance, the request to revoke the user secret key may include proof of the identity of the user. In response to the request to revoke the user secret key, the RTHIBS.Revoke function may be employed. Alternately or additionally, a second user secret key may be provided to the user. In some embodiments, the deny list may be updated to include the user ID and the first string.</p><p id="p-0124" num="0070">Alternately or additionally, the method <b>200</b> may further include receiving a second string to be posted on the blockchain. By way of example, the second string may be an incremented counter value or an updated arbitrary string. Optionally, a second message signed by the user may be received. The signed message may include a transaction, such as a cross-blockchain transaction to be posted on one or more blockchains should verification succeed. The second string may be obtained from the blockchain. Furthermore, the second message may be verified as being signed by the user. The verification may be based at least in part on the user ID and the second string. For instance, as a public identifier used in the verification function. By way of example, the RTHIBS.VerifyLi function described herein, where i=2, may be employed to verify that the message was signed by the user. In some embodiments, verifying the second message may include comparing the user ID and the second string to the deny list.</p><p id="p-0125" num="0071"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a method <b>300</b> of signature verification. The method <b>300</b> may begin at block <b>302</b> by obtaining a message and a signature. The signature may be generated using a secret key associated with a user.</p><p id="p-0126" num="0072">The method <b>300</b> may continue at block <b>304</b> by obtaining an identifier of the user and a string. The identifier of the user and the string may be obtained from a block of a blockchain. The block of the blockchain may be signed using the secret key. In some embodiments, obtaining the identifier and the string from the block of the blockchain may include obtaining the identifier and the string from a newest block of the blockchain that includes the identifier.</p><p id="p-0127" num="0073">The method <b>300</b> may continue at block <b>306</b> by obtaining a master public key. The master public key may be associated with a master private key. The secret key may be generated based on the master private key. In some embodiments, the secret key may be generated based on signatures generated from a plurality of shares of the master private key and the identifier. One of the plurality of shares of the master private key may be associated with the blockchain.</p><p id="p-0128" num="0074">The method <b>300</b> may continue at block <b>308</b> by verifying the signature. The signature may be verified using the master public key, the identifier, and the string. In some embodiments, verifying the signature may include determining if the identifier is indicated as invalid.</p><p id="p-0129" num="0075"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example system <b>400</b> that may be used for implementing a revokable threshold hierarchical identity-based signature scheme, according to at least one embodiment of the present disclosure. The system <b>400</b> may include a processor <b>410</b>, memory <b>412</b>, a communication unit <b>414</b>, a display <b>416</b>, and a user interface unit <b>418</b>, which all may be communicatively coupled. In some embodiments, the system <b>400</b> may be used to perform one or more of the methods described in this disclosure.</p><p id="p-0130" num="0076">For example, the system <b>400</b> may be used to perform one or more of the operations in the method <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> or the method <b>300</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0131" num="0077">Generally, the processor <b>410</b> may include any suitable special-purpose or general-purpose computer, computing entity, or processing device including various computer hardware or software modules and may be configured to execute instructions stored on any applicable computer-readable storage media. For example, the processor <b>410</b> may include a microprocessor, a microcontroller, a parallel processor such as a graphics processing unit (GPU) or tensor processing unit (TPU), a digital signal processor (DSP), an application-specific integrated circuit (ASIC), a Field-Programmable Gate Array (FPGA), or any other digital or analog circuitry configured to interpret and/or to execute program instructions and/or to process data.</p><p id="p-0132" num="0078">Although illustrated as a single processor in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, it is understood that the processor <b>410</b> may include any number of processors distributed across any number of networks or physical locations that are configured to perform individually or collectively any number of operations described herein. In some embodiments, the processor <b>410</b> may interpret and/or execute program instructions and/or process data stored in the memory <b>412</b>. In some embodiments, the processor <b>410</b> may execute the program instructions stored in the memory <b>412</b>.</p><p id="p-0133" num="0079">For example, in some embodiments, the processor <b>410</b> may execute program instructions stored in the memory <b>412</b> that are related to task execution such that the system <b>400</b> may perform or direct the performance of the operations associated therewith as directed by the instructions. In these and other embodiments, the instructions may be used to perform one or more operations of the method <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> or the method <b>300</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0134" num="0080">The memory <b>412</b> may include computer-readable storage media or one or more computer-readable storage mediums for carrying or having computer-executable instructions or data structures stored thereon. Such computer-readable storage media may be any available media that may be accessed by a general-purpose or special-purpose computer, such as the processor <b>410</b>.</p><p id="p-0135" num="0081">By way of example, and not limitation, such computer-readable storage media may include non-transitory computer-readable storage media including Random Access Memory (RAM), Read-Only Memory (ROM), Electrically Erasable Programmable Read-Only Memory (EEPROM), Compact Disc Read-Only Memory (CD-ROM) or other optical disk storage, magnetic disk storage or other magnetic storage devices, flash memory devices (e.g., solid state memory devices), or any other storage medium which may be used to carry or store particular program code in the form of computer-executable instructions or data structures and which may be accessed by a general-purpose or special-purpose computer. Combinations of the above may also be included within the scope of computer-readable storage media.</p><p id="p-0136" num="0082">Computer-executable instructions may include, for example, instructions and data configured to cause the processor <b>410</b> to perform a certain operation or group of operations as described in this disclosure. In these and other embodiments, the term &#x201c;non-transitory&#x201d; as explained in the present disclosure should be construed to exclude only those types of transitory media that were found to fall outside the scope of patentable subject matter in the Federal Circuit decision of In re Nuuten, 500 F.3d 1346 (Fed. Cir. 2007). Combinations of the above may also be included within the scope of computer-readable media.</p><p id="p-0137" num="0083">The communication unit <b>414</b> may include any component, device, system, or combination thereof that is configured to transmit or receive information over a network. In some embodiments, the communication unit <b>414</b> may communicate with other devices at other locations, the same location, or even other components within the same system. For example, the communication unit <b>414</b> may include a modem, a network card (wireless or wired), an infrared communication device, a wireless communication device (such as an antenna), and/or chipset (such as a Bluetooth&#xae; device, an 802.6 device (e.g., Metropolitan Area Network (MAN)), a WiFi device, a WiMax device, cellular communication facilities, etc.), and/or the like. The communication unit <b>414</b> may permit data to be exchanged with a network and/or any other devices or systems described in the present disclosure.</p><p id="p-0138" num="0084">The display <b>416</b> may be configured as one or more displays, like an LCD, LED, Braille terminal, or other type of display. The display <b>416</b> may be configured to present video, text captions, user interfaces, and other data as directed by the processor <b>410</b>.</p><p id="p-0139" num="0085">The user interface unit <b>418</b> may include any device to allow a user to interface with the system <b>400</b>. For example, the user interface unit <b>418</b> may include a mouse, a track pad, a keyboard, buttons, camera, and/or a touchscreen, among other devices. The user interface unit <b>418</b> may receive input from a user and provide the input to the processor <b>410</b>. In some embodiments, the user interface unit <b>418</b> and the display <b>416</b> may be combined.</p><p id="p-0140" num="0086">Modifications, additions, or omissions may be made to the system <b>400</b> without departing from the scope of the present disclosure. For example, in some embodiments, the system <b>400</b> may include any number of other components that may not be explicitly illustrated or described. Further, depending on certain implementations, the system <b>400</b> may not include one or more of the components illustrated and described.</p><p id="p-0141" num="0087">As indicated above, the embodiments described herein may include the use of a special purpose or general-purpose computer (e.g., the processor <b>410</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>) including various computer hardware or software modules, as discussed in greater detail below. Further, as indicated above, embodiments described herein may be implemented using computer-readable media (e.g., the memory <b>412</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>) for carrying or having computer-executable instructions or data structures stored thereon.</p><p id="p-0142" num="0088">In some embodiments, the different components, modules, engines, and services described herein may be implemented as objects or processes that execute on a computing system (e.g., as separate threads). While some of the systems and methods described herein are generally described as being implemented in software (stored on and/or executed by general purpose hardware), specific hardware implementations or a combination of software and specific hardware implementations are also possible and contemplated.</p><p id="p-0143" num="0089">In accordance with common practice, the various features illustrated in the drawings may not be drawn to scale. The illustrations presented in the present disclosure are not meant to be actual views of any particular apparatus (e.g., device, system, etc.) or method, but are merely idealized representations that are employed to describe various embodiments of the disclosure. Accordingly, the dimensions of the various features may be arbitrarily expanded or reduced for clarity. In addition, some of the drawings may be simplified for clarity. Thus, the drawings may not depict all of the components of a given apparatus (e.g., device) or all operations of a particular method.</p><p id="p-0144" num="0090">Terms used herein and especially in the appended claims (e.g., bodies of the appended claims) are generally intended as &#x201c;open&#x201d; terms (e.g., the term &#x201c;including&#x201d; should be interpreted as &#x201c;including, but not limited to,&#x201d; the term &#x201c;having&#x201d; should be interpreted as &#x201c;having at least,&#x201d; the term &#x201c;includes&#x201d; should be interpreted as &#x201c;includes, but is not limited to,&#x201d; etc.).</p><p id="p-0145" num="0091">Additionally, if a specific number of an introduced claim recitation is intended, such an intent will be explicitly recited in the claim, and in the absence of such recitation no such intent is present. For example, as an aid to understanding, the following appended claims may contain usage of the introductory phrases &#x201c;at least one&#x201d; and &#x201c;one or more&#x201d; to introduce claim recitations. However, the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles &#x201c;a&#x201d; or &#x201c;an&#x201d; limits any particular claim containing such introduced claim recitation to embodiments containing only one such recitation, even when the same claim includes the introductory phrases &#x201c;one or more&#x201d; or &#x201c;at least one&#x201d; and indefinite articles such as &#x201c;a&#x201d; or &#x201c;an&#x201d; (e.g., &#x201c;a&#x201d; and/or &#x201c;an&#x201d; should be interpreted to mean &#x201c;at least one&#x201d; or &#x201c;one or more&#x201d;); the same holds true for the use of definite articles used to introduce claim recitations.</p><p id="p-0146" num="0092">In addition, even if a specific number of an introduced claim recitation is explicitly recited, it is understood that such recitation should be interpreted to mean at least the recited number (e.g., the bare recitation of &#x201c;two recitations,&#x201d; without other modifiers, means at least two recitations, or two or more recitations). Furthermore, in those instances where a convention analogous to &#x201c;at least one of A, B, and C, etc.&#x201d; or &#x201c;one or more of A, B, and C, etc.&#x201d; is used, in general such a construction is intended to include A alone, B alone, C alone, A and B together, A and C together, B and C together, or A, B, and C together, etc. For example, the use of the term &#x201c;and/or&#x201d; is intended to be construed in this manner.</p><p id="p-0147" num="0093">Further, any disjunctive word or phrase presenting two or more alternative terms, whether in the description, claims, or drawings, should be understood to contemplate the possibilities of including one of the terms, either of the terms, or both terms. For example, the phrase &#x201c;A or B&#x201d; should be understood to include the possibilities of &#x201c;A&#x201d; or &#x201c;B&#x201d; or &#x201c;A and B.&#x201d;</p><p id="p-0148" num="0094">Additionally, the use of the terms &#x201c;first,&#x201d; &#x201c;second,&#x201d; &#x201c;third,&#x201d; etc., are not necessarily used herein to connote a specific order or number of elements. Generally, the terms &#x201c;first,&#x201d; &#x201c;second,&#x201d; &#x201c;third,&#x201d; etc., are used to distinguish between different elements as generic identifiers. Absence a showing that the terms &#x201c;first,&#x201d; &#x201c;second,&#x201d; &#x201c;third,&#x201d; etc., connote a specific order, these terms should not be understood to connote a specific order. Furthermore, absence a showing that the terms first,&#x201d; &#x201c;second,&#x201d; &#x201c;third,&#x201d; etc., connote a specific number of elements, these terms should not be understood to connote a specific number of elements. For example, a first widget may be described as having a first side and a second widget may be described as having a second side. The use of the term &#x201c;second side&#x201d; with respect to the second widget may be to distinguish such side of the second widget from the &#x201c;first side&#x201d; of the first widget and not to connote that the second widget has two sides.</p><p id="p-0149" num="0095">All examples and conditional language recited herein are intended for pedagogical objects to aid the reader in understanding the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions. Although embodiments of the present disclosure have been described in detail, it should be understood that the various changes, substitutions, and alterations could be made hereto without departing from the scope of the present disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of signature verification, the method including:<claim-text>receiving an identifier associated with a user;</claim-text><claim-text>generating a first secret key based on the identifier;</claim-text><claim-text>directing that a string and the identifier be posted on a block of a blockchain;</claim-text><claim-text>generate a second secret key using the string, the first secret key, and the identifier;</claim-text><claim-text>signing the block that includes the string and the identifier using the second secret key;</claim-text><claim-text>signing a message using the second secret key to generate a signature; and</claim-text><claim-text>providing the signature to a device, wherein the signature is verifiable by the device using the string and the identifier obtained from the block by the device.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>providing the identifier to an identity provider system, the identity provider system providing identity verification for the blockchain; and</claim-text><claim-text>obtaining a system signature from the identity provider system, the system signature generated using the identifier and a master secret key associated with a master public key,</claim-text><claim-text>wherein the first secret key is generated based on the identifier and the master secret key.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the signature is verifiable by the device using the string and the identifier obtained from the block by the device and the master public key.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>obtaining a second system signature from the identity provider system, the second system signature generated using the identifier and the master secret key,</claim-text><claim-text>generating a third secret key based on the identifier and the second system signature; and</claim-text><claim-text>generate a fourth secret key using a second string, the third secret key, and the identifier.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>directing that the string and the identifier be posted on a block of a plurality of blockchains that include the blockchain; and</claim-text><claim-text>signing the blocks of the plurality of blockchains that include the string and the identifier using the second secret key.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>providing the identifier to a plurality of identity provider systems, the identity provider systems providing identity verification for a plurality of blockchains that include the blockchain and each of the identity provider systems include a different share of a master secret key associated with a master public key; and</claim-text><claim-text>obtaining a system signature from each of the plurality of identity provider systems, each of the system signatures generated using the identifier and one of the shares of the master secret key, wherein the first secret key is generated based on the identifier and a combination of the system signatures and wherein the signature is verifiable by the device using the string and the identifier obtained from the block by the device and the master public key.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>directing that the string and the identifier be posted on a block of the plurality of blockchains; and</claim-text><claim-text>signing the blocks of the plurality of blockchains that include the string and the identifier using the second secret key.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>posting a second string and the identifier on a second block of the block chain;</claim-text><claim-text>generate a third secret key using the second string, the first secret key, and the identifier;</claim-text><claim-text>signing the second block using the third secret key;</claim-text><claim-text>signing a second message using the third secret key to generate a second signature; and</claim-text><claim-text>providing the second signature to a second device, wherein the second signature is verifiable by the second device using the second string and the identifier from the second block by the second device.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A non-transitory computer-readable medium having encoded therein programing code executable by a processor to perform operations comprising:<claim-text>receiving an identifier associated with a user;</claim-text><claim-text>generating a first secret key based on the identifier;</claim-text><claim-text>directing that a string and the identifier be posted on a block of a blockchain;</claim-text><claim-text>generate a second secret key using the string, the first secret key, and the identifier;</claim-text><claim-text>signing the block that include the string and the identifier using the second secret key;</claim-text><claim-text>signing a message using the second secret key to generate a signature; and</claim-text><claim-text>providing the signature to a device, wherein the signature is verifiable by the device using the string and the identifier obtained from the block by the device.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the operations further comprise:<claim-text>providing the identifier to an identity provider system, the identity provider system providing identity verification for the blockchain; and</claim-text><claim-text>obtaining a system signature from the identity provider system, the system signature generated using the identifier and a master secret key associated with a master public key,</claim-text><claim-text>wherein the first secret key is generated based on the identifier and the master secret key.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the signature is verifiable by the device using the string and the identifier obtained from the block by the device and the master public key.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the operations further comprise:<claim-text>obtaining a second system signature from the identity provider system, the second system signature generated using the identifier and the master secret key,</claim-text><claim-text>generating a third secret key based on the identifier and the second system signature; and</claim-text><claim-text>generate a fourth secret key using a second string, the third secret key, and the identifier.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the operations further comprise:<claim-text>directing that the string and the identifier be posted on a block of a plurality of blockchains that include the blockchain; and</claim-text><claim-text>signing the blocks of the plurality of blockchains that include the string and the identifier using the second secret key.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the operations further comprise:<claim-text>providing the identifier to a plurality of identity provider systems, the identity provider systems providing identity verification for a plurality of blockchains that include the blockchain and each of the identity provider systems include a different share of a master secret key associated with a master public key; and</claim-text><claim-text>obtaining a system signature from each of the plurality of identity provider systems, each of the system signatures generated using the identifier and one of the shares of the master secret key, wherein the first secret key is generated based on the identifier and a combination of the system signatures and wherein the signature is verifiable by the device using the string and the identifier obtained from the block by the device and the master public key.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the operations further comprise:<claim-text>directing that the string and the identifier be posted on a block of the plurality of blockchains; and</claim-text><claim-text>signing the blocks of the plurality of blockchains that include the string and the identifier using the second secret key.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the operations further comprise:<claim-text>posting a second string and the identifier on a second block of the block chain;</claim-text><claim-text>generate a third secret key using the second string, the first secret key, and the identifier;</claim-text><claim-text>signing the second block using the third secret key;</claim-text><claim-text>signing a second message using the third secret key to generate a second signature; and</claim-text><claim-text>providing the second signature to a second device, wherein the second signature is verifiable by the second device using the second string and the identifier from the second block by the second device.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A method of signature verification, the method including:<claim-text>obtaining a message and a signature, the signature generated using a secret key associated with a user;</claim-text><claim-text>obtaining an identifier of the user and a string from a block of a blockchain, wherein the block of the blockchain is signed using the secret key;</claim-text><claim-text>obtaining a master public key, the master public key associated with a master private key, the secret key generated based on the master private key; and</claim-text><claim-text>verifying the signature using the master public key, the identifier, and the string.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein obtaining the identifier and the string from the block of the blockchain includes obtaining the identifier and the string from a newest block of the blockchain that includes the identifier.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the secret key is generated based on signatures generated from a plurality of shares of the master private key and the identifier, one of the plurality of shares of the master private key associated with the blockchain.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein verifying the signature using the master public key, the identifier and the string include determining if the identifier is indicated as invalid.</claim-text></claim></claims></us-patent-application>