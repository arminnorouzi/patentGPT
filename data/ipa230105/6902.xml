<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006903A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006903</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17783962</doc-number><date>20201209</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>0852</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>106</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>022</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>7</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>0852</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>106</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>022</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>7</main-group><subgroup>0033</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR TIMING A SIGNAL</invention-title><us-related-documents><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>17021337</doc-number><date>20200915</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11178036</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17783962</doc-number></document-id></child-doc></relation></continuation-in-part><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>16871439</doc-number><date>20200511</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10797984</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17021337</doc-number></document-id></child-doc></relation></continuation-in-part><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>16710258</doc-number><date>20191211</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10680792</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16871439</doc-number></document-id></child-doc></relation></continuation-in-part><us-provisional-application><document-id><country>US</country><doc-number>62945991</doc-number><date>20191210</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>LDA Technologies Ltd.</orgname><address><city>Mississauga</city><country>CA</country></address></addressbook><residence><country>CA</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Sardaryan</last-name><first-name>Sergey</first-name><address><city>Mississauga</city><country>CA</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Sukiasyan</last-name><first-name>Mariya</first-name><address><city>Mississauga</city><country>CA</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Sardaryan</last-name><first-name>Vahan</first-name><address><city>Hinsdale</city><state>IL</state><country>US</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CA2020/051693</doc-number><date>20201209</date></document-id><us-371c12-date><date>20220609</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods are provided for timing signals, measuring latency, and/or timestamping. Some of the systems described herein can measure latency in a network device, and can include a signal generator, a sampler, a pulse detector, a timer, and a connector. The signal generator can define a signal profile. The sampler can sample the signal profile at a frequency of at least 4 GHz to generate a plurality of bits, each bit corresponding to a value of the signal profile during the sampling. The pulse detector can detect a change in the signal profile by detecting at least one change in the plurality of bits. The timer can time the change in value in the plurality of bits to provide at least one detection time measurement. The connector can electronically link the signal generator and the sampler to the network device to provide an external network path for transmitting a signal from the signal generator to the sampler via the network device.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="110.15mm" wi="158.75mm" file="US20230006903A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="160.95mm" wi="96.94mm" orientation="landscape" file="US20230006903A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="195.92mm" wi="109.30mm" orientation="landscape" file="US20230006903A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="197.78mm" wi="153.16mm" orientation="landscape" file="US20230006903A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="205.57mm" wi="149.69mm" orientation="landscape" file="US20230006903A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="179.15mm" wi="124.97mm" orientation="landscape" file="US20230006903A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="210.23mm" wi="134.79mm" orientation="landscape" file="US20230006903A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="143.26mm" wi="129.62mm" orientation="landscape" file="US20230006903A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="205.99mm" wi="134.37mm" orientation="landscape" file="US20230006903A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="179.15mm" wi="124.97mm" orientation="landscape" file="US20230006903A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="210.23mm" wi="134.37mm" orientation="landscape" file="US20230006903A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="205.99mm" wi="134.37mm" orientation="landscape" file="US20230006903A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority from U.S. patent application Ser. No. 62/945,991, filed Dec. 10, 2019 entitled &#x201c;SYSTEMS AND METHODS FOR TIMING A SIGNAL&#x201d;, U.S. patent application Ser. No. 16/710,258, filed Dec. 11, 2019 entitled &#x201c;SYSTEMS AND METHODS FOR TIMING A SIGNAL&#x201d;, U.S. patent application Ser. No. 16/871,439, filed May 11, 2020 entitled &#x201c;SYSTEMS AND METHODS FOR TIMESTAMPING A DATA EVENT&#x201d;, and U.S. patent application Ser. No. 17/021,337, filed Sep. 15, 2020 entitled &#x201c;SYSTEMS AND METHODS FOR MEASURING LATENCY IN A NETWORK DEVICE&#x201d;, the disclosures of which are incorporated, in their entirety, by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">The embodiments described herein generally relate to timing signals, and in particular to systems and methods for measuring latency and timestamping.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The following is not an admission that anything discussed below is part of the prior art or part of the common general knowledge of a person skilled in the art.</p><p id="p-0005" num="0004">Timing a signal can be useful in a wide variety of applications, including, but not limited to, high-frequency trading. High-frequency trading can involve performing a large number of trades (e.g., exchanging financial securities and/or derivatives) within a small period of time, for example, executing millions of orders within fractions of a second. In order to be effective (e.g., profitable), high-frequency trading may require executing trades at very high speeds. Network devices that have relatively high temporal precision and relatively low latency can determine and execute trades relatively quickly and accurately.</p><p id="p-0006" num="0005">FPGA (field programmable gate arrays) are sometimes used in high-frequency trading due to their configurability and processing power. However, the operation of a FPGA may be limited by its clock speed.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">This summary is intended to introduce the reader to the more detailed description that follows and not to limit or define any claimed or as yet unclaimed invention. One or more inventions may reside in any combination or sub-combination of the elements or process steps disclosed in any part of this document including its claims and figures.</p><p id="p-0008" num="0007">The various embodiments described herein generally relate to systems and methods for timing signals. The embodiments described herein can involve measuring latency and timestam ping.</p><p id="p-0009" num="0008">In accordance with an aspect of this disclosure, there is provided a signal timing method. The method involves: providing a FPGA circuit comprising a serializer for converting data streams between serial transmission and parallel transmission and a signal generator for defining signal profiles, the serializer comprising a serial input sampler for sampling signals received at the serializer, and a clock multiplier for changing signal frequencies, wherein a clock speed of at least one portion of the FPGA circuit is lower than a clock speed of the clock multiplier; reconfiguring the clock multiplier to provide the clock speed of the clock multiplier to the serial input sampler; reconfiguring the serial input sampler to operate at the clock speed of the clock multiplier; during a first mode of operation, operating the signal generator to define a signal profile; instructing the signal generator to change from operating in the first mode of operation to operating in a second mode of operation, wherein the signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation, and wherein the signal profile defined by the signal generator during at least one of the first mode of operation and the second mode of operation is defined by the signal generator transmitting a signal to the serializer; operating the serial input sampler to operate at the clock speed of the clock multiplier to sample the signal profile; detecting a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; and timing the change in value to provide at least one detection time measurement.</p><p id="p-0010" num="0009">In some embodiments, the signal profile can include a non-pulse portion during the first mode of operation, and a pulse portion during the second mode of operation; the pulse portion can differ in value from the non-pulse portion of the signal profile; and, detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation can involve detecting the change in value of the pulse portion relative to the non-pulse portion.</p><p id="p-0011" num="0010">In some embodiments, the clock speed of the clock multiplier can be greater than 4 gigahertz.</p><p id="p-0012" num="0011">In some embodiments, the clock speed of the clock multiplier can be greater than 15 gigahertz.</p><p id="p-0013" num="0012">In some embodiments, operating the serial input sampler to sample the signal profile can involve sampling the signal profile at the clock speed of the clock multiplier to generate a plurality of bits, each bit of the plurality of bits corresponding to a value of the signal profile during the sampling; and detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation can involve detecting at least one change in value in the plurality of bits.</p><p id="p-0014" num="0013">In some embodiments, timing the change in value to provide the at least one detection time measurement can involve counting a number of bits sampled until the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation is detected.</p><p id="p-0015" num="0014">In some embodiments, the method can further involve: connecting the FPGA circuit to a network device; providing an internal network path from the signal generator to the serializer without traversing the network device; providing an external network path from the signal generator to the serializer via the network device, wherein operating the signal generator to define the signal profile can involve transmitting the signal through the internal network path and the external network path to the serializer, operating the serial input sampler to sample the signal profile can involve sampling the signal profile corresponding to the signal i) received via the internal network path and then ii) received via the external network path, and detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation can involve detecting the change in the signal profile corresponding to the signal i) received via the internal network path at a first detection time, and then ii) received via the external network path at a second detection time; and, determining the latency in the network device based at least partly on a detection time difference between the first detection time and the second detection time; wherein the at least one detection time measurement can include the first detection time, the second detection time, and the detection time difference.</p><p id="p-0016" num="0015">In some embodiments, determining the detection time difference can invovle counting a number of bits sampled between the first detection time and the second detection time.</p><p id="p-0017" num="0016">In some embodiments, the external network path can include a plurality of links, including the network device and at least one other link, not included in the internal network path; the method can further involve determining a latency of the at least one other link; and the latency in the network device is determined based on the latency of the at least one other link and the detection time difference.</p><p id="p-0018" num="0017">In some embodiments, the internal network path and the external network path can merge at a merging link; the signal transmitted through the internal network path can merge at the merging link with that signal transmitted through the external network path to create a merged signal, the merged signal can define a merged signal profile comprising two changes in the signal profile, each change in the signal profile can correspond to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; the merged signal can be transmitted to the serial input sampler; operating the serial input sampler to sample the signal profile can involve operating the serial input sampler to sample the merged signal profile; and detecting the change in the signal profile can involve detecting the change in the signal profile at the first detection time and then at the second detection time.</p><p id="p-0019" num="0018">In some embodiments, the merging link can be an OR gate for merging the signal of the internal network path and the signal of the external network path to provide the merged signal.</p><p id="p-0020" num="0019">In some embodiments, the internal network path and the external network path can share a conversion link for transmitting the signal between the merging link and the serializer; the signal generated by the signal generator can have a first signal format; the merged signal at the merging link can have the first signal format; the conversion link can include a plurality of circuit components, including at least one capacitor and at least one resistor, for converting the signal from the first signal format to a second signal format such that the serializer receives the signal in the second signal format.</p><p id="p-0021" num="0020">In some embodiments, the plurality of circuit components can further include at least one biasing component; and converting the signal from the first signal format to the second signal format can involve modifying a voltage level of the signal.</p><p id="p-0022" num="0021">In some embodiments, the first signal format can include a low voltage differential signaling format; and the second signal format can include a current mode logic format.</p><p id="p-0023" num="0022">In some embodiments, the method can further involve: determining that the signal generated by the signal generator has a first signal format different than a second signal format required by the network device; converting the signal from the first signal format to the second signal format so that the signal has the second signal format when the signal traverses the network device; and converting the signal received from the network device from the second signal format back to the first signal format so that the signal has the first signal format when the signal traverses a portion of the external network path between the network device and the serializer.</p><p id="p-0024" num="0023">In some embodiments, the first signal standard can include a first signal frequency, wherein the first signal frequency corresponds to the clock speed of the at least one portion of the FPGA circuit; and the second signal standard can include a second signal frequency within a frequency range required by the network device, wherein the second signal frequency is greater than the first signal frequency.</p><p id="p-0025" num="0024">In some embodiments, the second signal standard can be Ethernet.</p><p id="p-0026" num="0025">In some embodiments, defining the signal profile can involve defining a plurality of signal profiles by operating the signal generator to transmit a plurality of signals through the internal network path and the external network path to the serializer, each signal in the plurality of signals having a corresponding signal profile in the plurality of signal profiles, each signal profile in the plurality of signal profiles including a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; operating the serial input sampler to sample the signal profile can involve operating the serial input sampler to sample each signal in the plurality of signals i) received via the internal network path, and then ii) received via the external network path; detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation can involve detecting, for each signal profile in the plurality of signal profiles, the change in the signal profile corresponding to i) the signal received via the internal network path at a first detection time, and then ii) the signal received via the external network path at a second detection time; the method can further involve determining, for the plurality of signal profiles, an average detection time difference between the first detection time and the second detection time; and determining the latency in the network device can involve determining the latency in the network device based at least partly on the average detection time difference.</p><p id="p-0027" num="0026">In some embodiments, the method can further involve operating a detector to detect data event; upon the detector detecting the data event, instructing the signal generator of the FPGA circuit to change from operating in the first mode of operation to operating in a second mode of operation; and recording in association with the data event a timestamp based on the at least one detection time measurement.</p><p id="p-0028" num="0027">In some embodiments, the signal can be transmitted from the signal generator to the serializer along a network path; the method can further involve determining a latency of the network path; and the timestamp can be determined based at least partly on the latency of the network path.</p><p id="p-0029" num="0028">In some embodiments, the method can further involve determining a latency of the detector detecting the data event and the instructing the signal generator of the FPGA circuit to change from operating in the first mode of operation to operating in the second mode of operation; and the timestamp can be determined further based at least partly on the latency of the detector detecting the data event and then instructing the signal generator of the FPGA circuit to change from operating in the first mode of operation to operating in the second mode of operation.</p><p id="p-0030" num="0029">In some embodiments, the method can further involve receiving a data packet including a payload preceded by a preamble, wherein the detector can include a data reader, and operating the detector to detect the data event can involve operating the data reader to detect the preamble of the data packet.</p><p id="p-0031" num="0030">In some embodiments, the data packet can be an Ethernet packet, the preamble is can be an Ethernet preamble, and the Ethernet packet can further include an Ethernet frame after the Ethernet preamble.</p><p id="p-0032" num="0031">In some embodiments, the method can further involve receiving a data packet including a payload preceded by a preamble, wherein the detector can include a data reader, and operating the detector to detect the data event can involve operating the data reader to detect at least a portion of the payload of the data packet.</p><p id="p-0033" num="0032">In accordance with an aspect of this disclosure, there is provided a signal-timing FPGA circuit. The signal-timing FPGA circuit can include a serializer for converting data streams between serial transmission and parallel transmission, the serializer comprising a serial input sampler for sampling signals received at the serializer, and a clock multiplier for changing signal frequencies; a pulse detector for detecting a change in value in the sampled signals; at least one slower portion having a slower clock speed, the slower clock speed being slower than a clock speed of the clock multiplier; a timer in communication with the serializer; and a signal generator for defining a signal profile, the signal generator having a first mode of operation and a second mode of operation, wherein the signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation, and wherein the signal generator defines the signal profile during at least one of the first mode of operation and the second mode of operation by transmitting a signal to the serializer via the at least one slower portion. In operation, the clock multiplier provides the clock speed of the clock multiplier to the serial input sampler; the serial input sampler operates at the clock speed of the clock multiplier to sample the signal profile at the serializer; the pulse detector detects a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; and based on the pulse detector detecting the change in the signal profile, the timer determines at least one detection time measurement.</p><p id="p-0034" num="0033">In some embodiments, the signal profile can include a non-pulse portion during the first mode of operation, and a pulse portion during the second mode of operation; the pulse portion can differ in value from the non-pulse portion of the signal profile; and in operation, the pulse detector can detect the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting a change in value of the pulse portion relative to the non-pulse portion.</p><p id="p-0035" num="0034">In some embodiments, the clock speed of the clock multiplier can be greater than 4 gigahertz.</p><p id="p-0036" num="0035">In some embodiments, the clock speed of the clock multiplier can be greater than 15 gigahertz.</p><p id="p-0037" num="0036">In accordance with an aspect of this disclosure, there is provided a FPGA chip including the signal-timing FPGA circuit.</p><p id="p-0038" num="0037">In some embodiments, in operation, the serial input sampler can sample the signal profile by sampling the signal profile at the clock speed of the clock multiplier to generate a plurality of bits, each bit of the plurality of bits corresponding to a value of the signal profile during the sampling; and in operation, the pulse detector can detect the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting a change in value in the plurality of bits.</p><p id="p-0039" num="0038">In some embodiments, in operation, the timer can determine the at least one detection time measurement at least partly by counting a number of bits sampled by the serial input sampler until the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation is detected.</p><p id="p-0040" num="0039">In accordance with an aspect of this disclosure, there is provided a system for measuring the latency of a network device. The system can include the signal-timing FPGA circuit, wherein the signal-timing FPGA circuit can include an internal network path from the signal generator to the serializer without traversing the network device; a signal-transmitting connector for connecting the network device to the signal-timing FPGA circuit to provide an external network path from the signal generator to the serializer via the network device. In operation, the signal generator can transmit the signal through the internal network path and the external network path to the serializer; and the serial input sampler can sample the signal profile corresponding to the signal i) received via the internal network path, and then ii) received via the external network path; the pulse detector can detect the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation, the signal profile corresponding to the signal i) received via the internal network path at a first detection time, and then ii) received via the external network path at a second detection time, the at least one detection time measurement comprising the first detection time and the second detection time.</p><p id="p-0041" num="0040">In some embodiments, wherein in operation, the timer can determine the at least one detection time measurement at least partly by counting a number of bits sampled by the serial input sampler until the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation is detected.</p><p id="p-0042" num="0041">In some embodiments, the external network path can include a plurality of links, including the network device and at least one other link, not included in the internal network path.</p><p id="p-0043" num="0042">In some embodiments, the internal network path and the external network path can merge at a merging link, such that, in operation, the signal transmitted through the internal network path can merge at the merging link with that signal transmitted through the external network path to create a merged signal, the merged signal defining a merged signal profile comprising two changes in the signal profile, each change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; the merged signal can be transmitted to the serial input sampler; the serial input sampler can sample the merged signal profile; and the pulse detector can detect the change the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation at the first detection time and then at the second detection time by sampling the merged signal profile.</p><p id="p-0044" num="0043">In some embodiments, the merging link can be an OR gate for merging the signal of the internal network path and the signal of the external network path to provide the merged signal.</p><p id="p-0045" num="0044">In some embodiments, the internal network path and the external network path can share a conversion link for transmitting the signal between the merging link and the serializer; the signal generated by the signal generator can have a first signal format; the merged signal at the merging link can have the first signal format; the conversion link can include a plurality of circuit components, including at least one capacitor and at least one resistor, for converting the signal from the first signal format to a second signal format such that the serializer receives the signal in the second signal format.</p><p id="p-0046" num="0045">In some embodiments, the plurality of circuit components can further include at least one biasing component; and converting the signal from the first signal format to the second signal format can involve modifying a voltage level of the signal.</p><p id="p-0047" num="0046">In some embodiments, the first signal format can include a low voltage differential signaling format; and the second signal format can include a current mode logic format.</p><p id="p-0048" num="0047">In some embodiments, the system can further include a converter operable to convert the signal generated by the signal generator from a first signal format to a second signal format required by the network device so that the signal has the second signal format when the signal traverses the network device; and convert the signal received from the network device from the second signal format back to the first signal format so that the signal has the first signal format when the signal traverses a portion of the external network path between the network device and the serializer.</p><p id="p-0049" num="0048">In some embodiments, the first signal standard can include a first signal frequency, wherein the first signal frequency corresponds to the clock speed of the at least one portion of the FPGA circuit; and the second signal standard can include a second signal frequency within a frequency range required by the network device, wherein the second signal frequency is greater than the first signal frequency.</p><p id="p-0050" num="0049">In some embodiments, the second signal standard can be Ethernet.</p><p id="p-0051" num="0050">In some embodiments, in operation, the signal generator can define a plurality of signal profiles by transmitting a plurality of signals through the internal network path and the external network path to the serializer, each signal in the plurality of signals having a corresponding signal profile in the plurality of signal profiles, each signal profile in the plurality of signal profiles including a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; and the sampler can sample each signal in the plurality of signals i) received via the internal network path, and then ii) received via the external network path; the pulse detector can detect, for each signal profile in the plurality of signal profiles, the change in the signal profile corresponding to i) the signal received via the internal network path at a first detection time, and then ii) of the signal received via the external network path at a second detection time; the system can further include a processor for i) determining, for the plurality of signal profiles, an average detection time difference between the first detection time and the second detection time, and ii) determining the latency in the network device at least in part by determining the latency in the network device based at least partly on the average detection time difference.</p><p id="p-0052" num="0051">In accordance with an aspect of this disclosure, there is provided a system for timestamping. The system can include the signal-timing FPGA circuit; a detector for i) detecting a data event, and, upon detecting the data event, ii) instructing the signal generator to change from operating in the first mode of operation to operating in the second mode of operation, the detector being in electronic communication with the signal generator; and a time-stamper for recording in association with the data event a timestamp based on the at least one detection time measurement.</p><p id="p-0053" num="0052">In some embodiments, the signal can be transmitted from the signal generator to the serializer along a network path; and the timestamp can be determined based at least partly on a latency of the network path.</p><p id="p-0054" num="0053">In some embodiments, the timestamp can be determined based at least partly on a latency of the detector detecting the data event and then instructing the signal generator of the FPGA circuit to change from operating in the first mode of operation to operating in the second mode of operation.</p><p id="p-0055" num="0054">In some embodiments, the detector can include a data reader operable to receive a data packet including a payload preceded by a preamble and detect the preamble of the data packet.</p><p id="p-0056" num="0055">In some embodiments, the data packet is can be Ethernet packet, the preamble can be an Ethernet preamble, and the Ethernet packet can further include an Ethernet frame after the Ethernet preamble.</p><p id="p-0057" num="0056">In some embodiments, the detector can include a data reader operable to receive a data packet including a payload preceded by a preamble and detect at least a portion of the payload preamble of the data packet.</p><p id="p-0058" num="0057">In In accordance with an aspect of this disclosure, there is provided a timestamping method. The timestamping method involves: during a first mode of operation, operating a signal generator to define a signal profile; operating a detector to detect a data event; upon the detector detecting the data event, instructing the signal generator to change from operating in the first mode of operation to operating in a second mode of operation, wherein the signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation; operating a sampler to sample the signal profile ata frequency of at least <b>4</b> GHz to generate a plurality of bits, each bit of the plurality of bits corresponding to a value of the signal profile during the sampling; detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting a change in value in the plurality of bits; timing the change in the signal profile to provide at least one detection time measurement; and recording in association with the data event a timestamp based on the at least one detection time measurement.</p><p id="p-0059" num="0058">In some embodiments, the signal profile can include a non-pulse portion during the first mode of operation, and a pulse portion during the second mode of operation. The pulse portion can differ in value from the non-pulse portion of the signal profile. Detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting the change in value in the plurality of bits can include detecting the change in value of the pulse portion relative to the non-pulse portion by detecting the change in value in the plurality of bits.</p><p id="p-0060" num="0059">In some embodiments, operating the signal generator to define the signal profile can involve operating the signal generator to transmit a signal to the sampler along a network path. The method can further involve determining a latency of the network path and operating a processor to determine the timestamp based on at least the at least one detection time measurement and the latency of the network path.</p><p id="p-0061" num="0060">In some embodiments, the method can further involve determining a latency of the detector detecting the data event and the instructing the signal generator to change from operating in the first mode of operation to operating in the second mode of operation. Operating the processor to determine the timestamp can further involve determining the timestamp based at least partly on the latency of the detector detecting the data event and then instructing the signal generator to change from operating in the first mode of operation to operating in the second mode of operation.</p><p id="p-0062" num="0061">In some embodiments, the method can further involve storing in a computer-readable memory i) the latency of the network path, and ii) the latency of the detector detecting the data event and then instructing the signal generator to change from operating in the first mode of operation to operating in the second mode of operation. Operating the detector to detect the data event can involve operating the detector to detect each data event in a plurality of data events. Instructing the signal generator to change from operating in the first mode of operation to operating in the second mode of operation can involve instructing the signal generator such that, in operation the signal generator defines a plurality of pulse portions of the signal profile including, for each data event in the plurality of data events, an associated pulse portion of the signal profile for that data event. For example, in the first mode of operation the signal generator may not transmit a signal, while in the second mode of operation the signal generator may transmit a non-zero signal, thereby defining a plurality of pulse portions of the signal profile including, for each data event in the plurality of data events, an associated pulse portion of the signal profile for that data event. Detecting the change in value of the pulse portion relative to the non-pulse portion by detecting the change in value in the plurality of bits can involve detecting a plurality of changes in value of the plurality of pulse portions relative to a plurality of non-pulse portions. Timing the change in the signal profile to provide the at least one detection time measurement can involve providing a plurality of at least one detection time measurements including, for each data event in the plurality of data events, an associated at least one detection time measurement for that data event. The method can further involve for each data event in the plurality of data events, operating the processor to determine the timestamp based on the associated at least one detection time measurement for that data event, the latency of the network path and the latency of the detector by retrieving the latency of the network path and the latency of the detector from the computer-readable memory.</p><p id="p-0063" num="0062">In some embodiments, the method can further involve receiving a data packet including a payload preceded by a preamble. The detector can include a data reader. Operating the detector to detect the data event can involve operating the data reader to detect the preamble of the data packet.</p><p id="p-0064" num="0063">In some embodiments, the data packet can be an Ethernet packet, the preamble can be an Ethernet preamble, and the Ethernet packet can further include an Ethernet frame after the Ethernet preamble.</p><p id="p-0065" num="0064">In some embodiments, the method can further involve receiving a data packet including a payload preceded by a preamble. The detector can include a data reader. Operating the detector to detect the data event can involve operating the data reader to detect at least a portion of the payload of the data packet.</p><p id="p-0066" num="0065">In some embodiments, the sampler can be operated to sample the signal profile at a frequency greater than 15 gigahertz.</p><p id="p-0067" num="0066">In some embodiments, timing the change in value to provide the at least one detection time measurement can involve counting a number of bits sampled until the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation is detected.</p><p id="p-0068" num="0067">In some embodiments, the method can further involve transmitting, via a conversion link, a signal between the signal generator and the sampler. The signal generated by the signal generator can have a first signal format. The conversion link can include a plurality of circuit components, including at least one capacitor and at least one resistor, for converting the signal from the first signal format to a second signal format such that the sampler receives the signal in the second signal format.</p><p id="p-0069" num="0068">In accordance with an aspect of this disclosure, there is provided a system for timestamping. The system includes a signal generator, a detector, a sampler, a pulse detector, a timer, and a time-stamper. The signal generator can define a signal profile. The signal generator has a first mode of operation and a second mode of operation. The signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation. The detector can i) detect a data event, and, upon detecting the data event, ii) instruct the signal generator to change from operating in the first mode of operation to operating in the second mode of operation. The detector is in electronic communication with the signal generator. The sampler can sample the signal profile at a frequency of at least 4 GHz to generate a plurality of bits. Each bit of the plurality of bits corresponds to a value of the signal profile during the sampling. The pulse detector can detect the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting a change in value in the plurality of bits. The timer can time the change in the signal profile to provide at least one detection time measurement. The time-stamper can record in association with the data event a timestamp based on the at least one detection time measurement.</p><p id="p-0070" num="0069">In some embodiments, the signal profile can include a non-pulse portion during the first mode of operation, and a pulse portion during the second mode of operation. The pulse portion can differ in value from the non-pulse portion of the signal profile. In operation, the pulse detector can detect the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting a change in value of the pulse portion relative to the non-pulse portion by detecting the change in value in the plurality of bits.</p><p id="p-0071" num="0070">In some embodiments, the system can further include a network path, a computer-readable memory, and a processor. The signal generator defining the signal profile can involve the signal generator transmitting a signal from the signal generator to the sampler along the network path. The computer-readable memory can store a latency value indicating a latency of the network path. The processor can, in operation, determine the timestamp based on at least the at least one detection time measurement and the latency of the network path. The processor can be in electronic communication with the computer-readable memory.</p><p id="p-0072" num="0071">In some embodiments, the computer-readable memory can further store a detector latency value indicating a latency of the detector detecting the data event and then instructing the signal generator to change from operating in the first mode of operation to operating in the second mode of operation. In operation, the processor can determine the at least one detection time measurement based at least partly on the detector latency value.</p><p id="p-0073" num="0072">In some embodiments, the computer-readable memory can further store i) the latency of the network path, and ii) the latency of the detector detecting the data event and then instructing the signal generator to change from operating in the first mode of operation to operating in the second mode of operation. In operation, the detector can detect the data event by detecting each data event in a plurality of data events. The signal generator can change from operating in the first mode of operation to operating in the second mode of operation by defining a plurality of pulse portions of the signal profile including, for each data event in the plurality of data events, an associated pulse portion of the signal profile for that data event. The pulse detector can detect the change in value of the pulse portion relative to the non-pulse portion by detecting the change in value in the plurality of bits by detecting a plurality of changes in value of the plurality of pulse portions relative to a plurality of non-pulse portions. The timer can time the change in the signal profile to provide the at least one detection time measurement by providing a plurality of at least one detection time measurements including, for each data event in the plurality of data event, an associated at least one detection time measurement for that data event. For each data event in the plurality of data events, the processor can determine the timestamp based on the associated at least one detection time measurement for that data event, the latency of the network path and the latency of the detector by retrieving the latency of the network path and the latency of the detector from the computer-readable memory.</p><p id="p-0074" num="0073">In some embodiments, the system can further include a communication port for receiving a data packet including a data payload preceded by a preamble. The detector can include a data reader for detecting the data event by detecting the preamble of the data packet.</p><p id="p-0075" num="0074">In some embodiments, the data packet can be an Ethernet packet, the preamble can be an Ethernet preamble, and the Ethernet packet further can further include an Ethernet frame after the Ethernet preamble.</p><p id="p-0076" num="0075">In some embodiments, the system can further include a communication port for receiving a data packet including a data payload preceded by a preamble. The detector can include a data reader for detecting the data event by detecting at least a portion of the payload of the data packet.</p><p id="p-0077" num="0076">In some embodiments, in operation, the sampler can sample the signal profile at a frequency greater than 15 gigahertz.</p><p id="p-0078" num="0077">In some embodiments, in operation, the timer can determine the at least one detection time measurement at least partly by counting a number of bits sampled by the sampler until the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation is detected.</p><p id="p-0079" num="0078">In some embodiments, the system can further include a conversion link for transmitting a signal between the signal generator and the sampler. The signal generated by the signal generator can have a first signal format. The conversion link can include a plurality of circuit components, including at least one capacitor and at least one resistor, for converting the signal from the first signal format to a second signal format such that the sampler receives the signal in the second signal format.</p><p id="p-0080" num="0079">In accordance with an aspect of this disclosure, there is provided a method of measuring latency in a network device The method can involve: providing an external network path from a start point to an end point via the network device; during a first mode of operation, operating a signal generator to define a signal profile; instructing the signal generator to change from operating in the first mode of operation to operating in a second mode of operation, wherein the signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation, and wherein the signal profile defined by the signal generator during at least one of the first mode of operation and the second mode of operation is defined by the signal generator generating a signal, the signal being transmitted through the external network path from the start point to the end point via the network device; operating a sampler to sample the signal profile at the end point at a frequency of at least <b>4</b> GHz to generate a plurality of bits, each bit of the plurality of bits corresponding to a value of the signal profile during the sampling; detecting a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting at least one change in value in the plurality of bits; timing the at least one change in value in the plurality of bits to provide at least one detection time measurement; and determining the latency in the network device based at least partly on the at least one detection time measurement.</p><p id="p-0081" num="0080">In some embodiments, the signal profile can include a non-pulse portion during the first mode of operation, and a pulse portion during the second mode of operation; the pulse portion can differ in value from the non-pulse portion of the signal profile; and, detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting the at least one change in value in the plurality of bits can involve detecting the change in value of the pulse portion relative to the non-pulse portion by detecting the at least one change in value in the plurality of bits.</p><p id="p-0082" num="0081">In some embodiments, the external network path can include a plurality of links, including the network device and at least one other link; the method can further involve determining a latency of the at least one other link; and in addition to the at least one detection time measurement, the latency in the network device can be determined based at least partly on the latency of the at least one other link.</p><p id="p-0083" num="0082">In some embodiments, the method can further involve providing an internal network path from the start point to the end point without traversing the network device such that the signal generated by the signal generator is transmitted through the internal network path.</p><p id="p-0084" num="0083">In some embodiments, the internal network path and the external network path can merge at a merging link; the signal transmitted through the internal network path can merge at the merging link with the signal transmitted through the external network path to create a merged signal, the merged signal defining a merged signal profile including two pulse portions, each pulse portion of the two pulse portions including the change in value of the pulse portion relative to the non-pulse portion of the merged signal profile; detecting the at least one change in value in the plurality of bits and timing the at least one change in value to provide the at least one detection time measurement can further involve sampling the merged signal profile at the end point and detecting the change in value of the pulse portion relative to the non-pulse portion at a first detection time, the first detection time being based on a latency of the internal network path; and subsequent to the first detection time, sampling the merged signal profile at the end point and detecting the change in value of the pulse portion relative to the non-pulse portion at a second detection time to determine a detection time difference between the first detection time and the second detection time, the second detection time being based on a latency of the external network path; and the at least one detection time measurement can include the first detection time, the second detection time, and the detection time difference.</p><p id="p-0085" num="0084">In some embodiments, determining the detection time difference can involve counting a number of bits sampled between the first detection time and the second detection time.</p><p id="p-0086" num="0085">In some embodiments, the merging link can be an OR gate for merging the signal of the internal network path and the signal of the external network path to provide the merged signal.</p><p id="p-0087" num="0086">In some embodiments, the internal network path and the external network path can share a conversion link for transmitting the merged signal between the merging link and the sampler; the signal generated by the signal generator can have a first signal format; the merged signal at the merging link can have the first signal format; the conversion link can include a plurality of circuit components, including at least one capacitor and at least one resistor, for converting the signal from the first signal format to a second signal format such that the sampler receives the signal in the second signal format.</p><p id="p-0088" num="0087">In some embodiments, defining the signal profile can involve defining a plurality of signal profiles by operating the signal generator to generate a plurality of signals, each signal in the plurality of signals having a corresponding signal profile in the plurality of signal profiles, the plurality of signals being transmitted through the internal network path and the external network path to the end point, each signal profile in the plurality of signal profiles including a pulse portion and a non-pulse portion, the pulse portion including a change in value relative to the non-pulse portion of the signal profile; sampling the signal profile at the end point can involve sampling each signal profile in the plurality of signal profiles by sampling each signal in the plurality of signals i) received via the internal network path, and then ii) received via the external network path; detecting the change in value of the pulse portion can involve detecting, for each signal profile in the plurality of signal profiles, the change in value relative to the respective non-pulse portion i) of the pulse portion corresponding to the signal received via the internal network path at a first detection time, and then ii) of the pulse portion corresponding to the signal received via the external network path at a second detection time; the method can further involve determining, for the plurality of signals, an average detection time difference between the first detection time and the second detection time; and determining the latency in the network device can involve determining the latency in the network device based at least partly on the average detection time difference.</p><p id="p-0089" num="0088">In some embodiments, the sampler can be operated to sample the signal profile at a frequency greater than 5 gigahertz.</p><p id="p-0090" num="0089">In some embodiments, the method can further involve determining that the signal generated by the signal generator has a first signal format different than a second signal format required by the network device; converting the signal from the first signal format to the second signal format so that the signal has the second signal format when the signal traverses the network device; and converting the signal received from the network device from the second signal format back to the first signal format so that the signal has the first signal format when the signal traverses a portion of the external network path between the network device and the sampler.</p><p id="p-0091" num="0090">In accordance with an aspect of this disclosure, there is provided a system for measuring the latency of a network device. The system can include: a signal generator for defining a signal profile, the signal generator having a first mode of operation and a second mode of operation, wherein the signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation, and wherein the signal generator defines the signal profile during at least one of the first mode of operation and the second mode of operation by generating a signal; a sampler for sampling the signal profile defined by the signal generator at a frequency of at least 4 GHz to generate a plurality of bits, each bit of the plurality of bits corresponding to a value of the signal profile during the sampling; a pulse detector for detecting a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting at least one change in value in the plurality of bits; a timer, in communication with the pulse detector, for timing the at least one change in value in the plurality of bits to provide at least one detection time measurement; and a signal-transmitting connector for electronically linking the signal generator and the sampler to the network device to provide an external network path for transmitting the signal from the signal generator to the sampler via the network device.</p><p id="p-0092" num="0091">In some embodiments, the signal profile can include a non-pulse portion during the first mode of operation, and a pulse portion during the second mode of operation; the pulse portion can differ in value from the non-pulse portion of the signal profile; and in operation, the pulse detector can detect the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation by detecting a change in value of the pulse portion relative to the non-pulse portion by detecting the at least one change in value in the plurality of bits.</p><p id="p-0093" num="0092">In some embodiments, the external network path can include a plurality of links, including the network device and at least one other link; the system can further include a processor for determining the latency of the at least one other link.</p><p id="p-0094" num="0093">In some embodiments, the system can further include an internal network path for transmitting the signal from the signal generator to the sampler without traversing the network device.</p><p id="p-0095" num="0094">In some embodiments, the system can further include a merging link for merging the internal network path and the external network path, wherein, in operation, the signal transmitted through the internal network path can merge at the merging link with the signal transmitted through the external network path to create a merged signal, the merged signal can define a merged signal profile including two pulse portions, each pulse portion of the two pulse portions including the change in value of the pulse portion relative to the non-pulse portion of the merged signal profile; the sampler can sample the merged signal profile; the pulse detector can detect the change in value of the pulse portion relative to the non-pulse portion at a first detection time, the first detection time being based on a latency of the internal network path; subsequent to the first detection time, the pulse detector can detect the change in value of the pulse portion relative to the non-pulse portion at a second detection time, the second detection time based on a latency of the external network path; and the timer can determine a detection time difference between the first detection time and the second detection time, the at least one detection time measurement including the first detection time, the second detection time, and the detection time difference.</p><p id="p-0096" num="0095">In some embodiments, in operation, the timer determining the detection time difference can involve the timer counting a number of bits sampled between the first detection time and the second detection time.</p><p id="p-0097" num="0096">In some embodiments, the merging link can be an OR gate for merging the signal of the internal network path and the signal of the external network path to provide the merged signal.</p><p id="p-0098" num="0097">In some embodiments, the internal network path and the external network path can share a conversion link for transmitting the merged signal between the merging link and the sampler; the signal generated by the signal generator can have a first signal format; the merged signal at the merging link can have the first signal format; and the conversion link can include a plurality of circuit components, including at least one capacitor and at least one resistor, for converting the signal from the first signal format to a second signal format such that the sampler receives the signal in the second signal format.</p><p id="p-0099" num="0098">In some embodiments, in operation, the signal generator can define a plurality of signal profiles by generating a plurality of signals, each signal in the plurality of signals having a corresponding signal profile in the plurality of signal profiles, the plurality of signals being transmitted through the internal network path and the external network path, each signal profile in the plurality of signal profiles including a pulse portion and a non-pulse portion, the pulse portion including a change in value relative to the non-pulse portion of the signal profile; the sampler can sample each signal profile in the plurality of signals profiles by sampling each signal in the plurality of signals received via i) the internal network path, and then ii) received via the external network path; the pulse detector can detect, for each signal profile in the plurality of signal profiles, the change in value relative to the respective non-pulse portion i) of the pulse portion corresponding to the signal received via the internal network path at a first detection time, and then ii) of the pulse portion corresponding to the signal received via the external network path at a second detection time; and the system can further include a processor for i) determining, for the plurality of signal profiles, an average detection time difference between the first detection time and the second detection time, and ii) determining the latency in the network device at least in part by determining the latency in the network device based at least partly on the average detection time difference.</p><p id="p-0100" num="0099">In some embodiments, in operation, the sampler can sample the signal profile at a frequency greater than 15 gigahertz.</p><p id="p-0101" num="0100">In some embodiments, the system can further include a first signal converter for converting signals from a first signal format to a second signal format so that the signal has the second signal format when the signal traverses the network device; and a second signal converter for converting signals received from the network device from the second signal format back to the first signal format so that the signal has the first signal format when the signal traverses a portion of the external network path between the network device and the sampler.</p><p id="p-0102" num="0101">It will be appreciated that the aspects and embodiments may be used in any combination or sub-combination. Further aspects and advantages of the embodiments described herein will appear from the following description taken together with the accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0103" num="0102">For a better understanding of the embodiments described herein and to show more clearly how they may be carried into effect, reference will now be made, by way of example only, to the accompanying drawings which show at least one exemplary embodiment, and in which:</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example signal-timing FPGA circuit, in accordance with an embodiment;</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram illustrating an example signal generated by the signal-timing FPGA circuit shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment;</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIGS. <b>3</b>A, <b>3</b>B, <b>3</b>C, and <b>3</b>D</figref> are diagrams illustrating an example operation of the of the signal-timing FPGA circuit shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment;</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of another example of the signal-timing FPGA circuit shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment;</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of another example of the signal-timing FPGA circuit shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment;</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a circuit diagram of an example conversion link of the signal-timing FPGA circuit shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in accordance with an embodiment;</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of another example of the signal-timing FPGA circuit shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment;</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of an example latency measurement system, in accordance with an embodiment;</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of another example of the latency measurement system shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, in accordance with an embodiment; and</p><p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram of an example timestamping system, in accordance with an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0114" num="0113">The skilled person in the art will understand that the drawings, described below, are for illustration purposes only. The drawings are not intended to limit the scope of the applicants' teachings in any way. Also, it will be appreciated that for simplicity and clarity of illustration, elements shown in the figures have not necessarily been drawn to scale. For example, the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further, where considered appropriate, reference numerals may be repeated among the figures to indicate corresponding or analogous elements.</p><heading id="h-0006" level="1">DESCRIPTION OF VARIOUS EMBODIMENTS</heading><p id="p-0115" num="0114">It will be appreciated that numerous specific details are set forth in order to provide a thorough understanding of the exemplary embodiments described herein. However, it will be understood by those of ordinary skill in the art that the embodiments described herein may be practiced without these specific details. In other instances, well-known methods, procedures and components have not been described in detail so as not to obscure the embodiments described herein. Furthermore, this description is not to be considered as limiting the scope of the embodiments described herein in any way, but rather as merely describing the implementation of the various embodiments described herein.</p><p id="p-0116" num="0115">It should be noted that terms of degree such as &#x201c;substantially&#x201d;, &#x201c;about&#x201d; and &#x201c;approximately&#x201d; when used herein mean a reasonable amount of deviation of the modified term such that the end result is not significantly changed. These terms of degree should be construed as including a deviation of the modified term if this deviation would not negate the meaning of the term it modifies.</p><p id="p-0117" num="0116">In addition, as used herein, the wording &#x201c;and/or&#x201d; is intended to represent an inclusive-or. That is, &#x201c;X and/or Y&#x201d; is intended to mean X or Y or both, for example. As a further example, &#x201c;X, Y, and/or Z&#x201d; is intended to mean X or Y or Z or any combination thereof.</p><p id="p-0118" num="0117">The terms &#x201c;including,&#x201d; &#x201c;comprising&#x201d; and variations thereof mean &#x201c;including but not limited to,&#x201d; unless expressly specified otherwise. A listing of items does not imply that any or all of the items are mutually exclusive, unless expressly specified otherwise. The terms &#x201c;a,&#x201d; &#x201c;an&#x201d; and &#x201c;the&#x201d; mean &#x201c;one or more,&#x201d; unless expressly specified otherwise.</p><p id="p-0119" num="0118">As used herein and in the claims, two or more elements are said to be &#x201c;coupled&#x201d;, &#x201c;connected&#x201d;, &#x201c;attached&#x201d;, or &#x201c;fastened&#x201d; where the parts are joined or operate together either directly or indirectly (i.e., through one or more intermediate parts), so long as a link occurs. As used herein and in the claims, two or more elements are said to be &#x201c;directly coupled&#x201d;, &#x201c;directly connected&#x201d;, &#x201c;directly attached&#x201d;, or &#x201c;directly fastened&#x201d; where the element are connected in physical contact with each other. None of the terms &#x201c;coupled&#x201d;, &#x201c;connected&#x201d;, &#x201c;attached&#x201d;, and &#x201c;fastened&#x201d; distinguish the manner in which two or more elements are joined together.</p><p id="p-0120" num="0119">The terms &#x201c;an embodiment,&#x201d; &#x201c;embodiment,&#x201d; &#x201c;embodiments,&#x201d; &#x201c;the embodiment,&#x201d; &#x201c;the embodiments,&#x201d; &#x201c;one or more embodiments,&#x201d; &#x201c;some embodiments,&#x201d; and &#x201c;one embodiment&#x201d; mean &#x201c;one or more (but not all) embodiments of the present invention(s),&#x201d; unless expressly specified otherwise.</p><p id="p-0121" num="0120">The embodiments of the systems and methods described herein may be implemented in hardware or software, or a combination of both. These embodiments may be implemented in computer programs executing on programmable computers, each computer including at least one processor, a data storage system (including volatile memory or non-volatile memory or other data storage elements or a combination thereof), and at least one communication interface. For example and without limitation, the programmable computers may be a server, network appliance, embedded device, computer expansion module, a personal computer, laptop, personal data assistant, cellular telephone, smart-phone device, tablet computer, a wireless device or any other computing device capable of being configured to carry out the methods described herein.</p><p id="p-0122" num="0121">In some embodiments, the communication interface may be a network communication interface. In embodiments in which elements are combined, the communication interface may be a software communication interface, such as those for inter-process communication (IPC). In still other embodiments, there may be a combination of communication interfaces implemented as hardware, software, and combination thereof.</p><p id="p-0123" num="0122">Program code may be applied to input data to perform the functions described herein and to generate output information. The output information is applied to one or more output devices, in known fashion.</p><p id="p-0124" num="0123">Each program may be implemented in a high-level procedural or object oriented programming and/or scripting language, or both, to communicate with a computer system. However, the programs may be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language. Each such computer program may be stored on a storage media or a device (e.g. ROM, magnetic disk, optical disc) readable by a general or special purpose programmable computer, for configuring and operating the computer when the storage media or device is read by the computer to perform the procedures described herein. Embodiments of the system may also be considered to be implemented as a non-transitory computer-readable storage medium, configured with a computer program, where the storage medium so configured causes a computer to operate in a specific and predefined manner to perform the functions described herein.</p><p id="p-0125" num="0124">Furthermore, the system, processes and methods of the described embodiments are capable of being distributed in a computer program product comprising a computer readable medium that bears computer usable instructions for one or more processors. The medium may be provided in various forms, including one or more diskettes, compact disks, tapes, chips, wireline transmissions, satellite transmissions, internet transmission or downloadings, magnetic and electronic storage media, digital and analog signals, and the like. The computer useable instructions may also be in various forms, including compiled and non-compiled code.</p><p id="p-0126" num="0125">The various embodiments described herein generally relate to timing a signal. Timing a signal can be useful in a wide variety of applications, including applications that require high temporal precision and/or low latency, such as high-frequency trading. For example, timing a signal can be useful in measuring latency and/or timestamping.</p><p id="p-0127" num="0126">The accuracy or precision of timing a signal (and the corresponding latency measurement or timestamp) may be limited by the clock speed or frequency of the timing system. The clock speed or frequency of a system typically refers to the number of tasks or instructions that the system can execute per second. Accordingly, the clock speed of the timing system can dictate how quickly the system can time a signal, and the resolution of the timing. For example, modern FPGAs (field-programmable gate arrays) may have a clock speed of approximately 300 megahertz and may accordingly only be able to time a signal with approximately 3.3 nanosecond precision.</p><p id="p-0128" num="0127">As will be described in greater detail below, the various embodiments described herein can operate at very high frequencies, such as over 4 gigahertz, or in some embodiments, over 15 gigahertz. For example, some embodiments described herein involve reconfiguring the serializer of a FPGA circuit to operate at frequencies greater than 4 gigahertz, or in some embodiments, over 15 gigahertz. The various systems and methods described herein can time signals, perform latency measurements, and generate timestamps with high temporal precision, such as less than 0.25 nanoseconds.</p><p id="p-0129" num="0128">Referring now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, there is a provided a block diagram <b>100</b> of an example signal-timing FPGA circuit <b>102</b>. Although a FPGA circuit is shown, non-FPGA circuits providing all of the necessary functions may alternatively be used. The FPGA circuit <b>102</b> can include a variety of electronic components that are connected by a variety of electronic connections. The FPGA circuit <b>102</b> can be implemented as an integrated circuit (IC), chip, and/or microchip. For instance, the FPGA circuit <b>102</b> can be implemented as a set of electronic circuits on a semiconductor material, connected by conductive traces or wires. The FPGA circuit <b>102</b> can include a variety of electronic components that are reconfigurable (i.e., field programmable) to perform different functions. Each component of the FPGA circuit <b>102</b> can receive a clock signal from a clock generator (not shown) and operate at the frequency of the clock signal. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the FPGA circuit <b>102</b> includes a signal generator <b>104</b>, a serializer <b>108</b>, a pulse detector <b>128</b>, and a timer <b>114</b>.</p><p id="p-0130" num="0129">The signal generator <b>104</b> can define a signal profile <b>106</b>, which can be sampled by the serializer <b>108</b>. The signal profile <b>106</b> can be defined by the signal generator <b>104</b> generating a signal and transmitting the generated signal to the serializer <b>108</b>. The signal generated by the signal generator <b>104</b> can be any electronic signal. The signal can be repeating or non-repeating. The signal may be analog or digital. The signal generator <b>104</b> can generate the signal to have any waveform, amplitude, phase, and/or frequency. In some cases, the signal profile <b>106</b> can be defined by the signal generator <b>106</b> not generating or transmitting a signal. That is, the signal profile <b>106</b> can be defined by the absence or lack of a signal provided by the signal generator <b>104</b> (this can be thought of as a notional signal having a constant magnitude of zero).</p><p id="p-0131" num="0130">The signal generator <b>104</b> can have different modes of operation and define different signal profiles <b>106</b> depending on its mode of operation. For example, the signal generator <b>104</b> can generate a first signal during a first mode of operation and generate a second signal during a second mode of operation. The second signal can have one or more different properties from the first signal, such as, magnitude, frequency, etc. In another example, during at least one of a first mode of operation and a second mode of operation, the signal generator <b>104</b> defines the signal profile <b>106</b> by generating a signal. For instance, during a first mode of operation, no signal is generated by signal generator <b>104</b>, and during a second mode of operation, a signal is generated by the signal generator <b>104</b>. In some embodiments, the signal generator <b>104</b> can generate a signal profile having a non-pulse portion during a first mode of operation and a pulse portion during a second mode of operation.</p><p id="p-0132" num="0131">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, there is shown an example signal profile <b>106</b> that can be defined by the signal generator <b>104</b>, or an analogous non-FPGA signal generator. <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a waveform representation of the signal profile <b>106</b>, illustrating the amplitude of the signal profile <b>106</b> with respect to time. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the signal profile <b>106</b> can include a pulse portion <b>202</b> (e.g., corresponding to the second mode of operation of the signal generator <b>104</b>) and a non-pulse portion <b>204</b> (e.g., corresponding to the first mode of operation of the signal generator <b>104</b>). The pulse portion <b>202</b> differs in value from the non-pulse portion <b>204</b> of the signal profile <b>106</b>. The pulse portion <b>202</b> is typically a relatively small portion of the waveform of the signal profile <b>106</b> and can represent a rapid change in the amplitude of the signal profile <b>106</b> from a baseline value (e.g., the non-pulse portion <b>204</b>) to higher or lower value (e.g., the pulse portion <b>202</b>).</p><p id="p-0133" num="0132">In some embodiments, the pulse portion <b>202</b> of the single profile <b>106</b> can be defined by the signal generator <b>104</b> generating a signal, while the non-pulse portion <b>204</b> of the signal profile <b>106</b> can be defined by absence of a signal being generated by the signal generator <b>104</b> (that is, as a notional signal having a constant magnitude of zero).</p><p id="p-0134" num="0133">The signal profile <b>106</b> is shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> to have a positive rectangular pulse portion <b>202</b> for ease of illustration. It should be appreciated that the signal generator <b>104</b> may define other types of signal profiles, depending on its mode of operation. For example, the pulse portion <b>202</b> of the signal profile <b>106</b> may have different shapes, such as, but not limited to cosine squared (raised cosine), or sinc. As another example, the pulse portion <b>202</b> may have a smaller amplitude than the non-pulse portion <b>204</b>. It should be appreciated that various types of signals are possible so long as the signal profile defined by the signal generator <b>104</b> during the first mode of operation differs from the signal profile defined by the signal generator <b>104</b> during the second mode of operation.</p><p id="p-0135" num="0134">In some embodiments, the signal generator <b>104</b> can first operate in the first mode of operation (e.g., and define the non-pulse portion <b>204</b>). The signal generator <b>104</b> can then switch to the second mode of operation (e.g., and define the pulse portion <b>202</b>) in response to an instruction from one or more other components of the FPGA circuit <b>102</b>.</p><p id="p-0136" num="0135">Referring back to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the serializer <b>108</b> can sample the signal profile <b>106</b> defined by the signal generator <b>104</b> by receiving the signals (or lack thereof) generated and transmitted by the signal generator <b>104</b>. The serializer <b>108</b> includes a serial input sampler <b>112</b> and a clock multiplier <b>110</b>. The serial input sampler <b>112</b> can sample signal profiles defined by signals (or lack thereof) received at the serializer <b>108</b>, such as the signal profile <b>106</b>. The clock multiplier <b>110</b> can change signal frequencies, such as a clock signal.</p><p id="p-0137" num="0136">The serializer <b>108</b> can convert data streams between serial transmission and parallel transmission, or vice versa. That is, the serializer <b>108</b> can deserialize a single serial data stream into a number of parallel data streams, or serialize a number of parallel data streams into a single serial data stream. The serializer <b>108</b> may be referred to as a deserializer or a SerDes (serializer/deserializer). The serializer <b>108</b> can include a SIPO (serial in parallel out) block and a PISO (parallel in serial out) block (not shown). The number of parallel bits that can be input or output to or from the serializer <b>108</b> at one time (i.e., when converting a serial signal to a parallel signal, or vice versa) may be referred to as the bus size of the serializer <b>108</b>. In some embodiments, the serializer <b>108</b> can have a bus size of eighty bits.</p><p id="p-0138" num="0137">In order to convert a single serial data stream into a number of parallel data streams with the same bitrate, some components of the serializer <b>108</b> can operate at a higher clock speed than other components of the FPGA circuit <b>102</b>. For example, if the serializer <b>108</b> has a bus size of eighty bits (i.e., can convert a single serial data stream into eighty parallel data streams), the serializer <b>108</b> can read eighty bits in the serial data stream in the time that one bit is output to each of the parallel data streams. That is, in this example, the serializer <b>108</b> can sample the serial data stream at a speed that is eighty times faster than the parallel data streams are output by the serializer <b>108</b>.</p><p id="p-0139" num="0138">The clock multiplier <b>110</b> of the serializer <b>108</b> can be configured to have a faster clock speed than other components of the FPGA circuit <b>102</b>. The clock multiplier <b>110</b> can receive the clock signal from clock generator (not shown) and increase the frequency of the clock signal to provide a faster clock speed. For example, the clock speed of some of the components of the FPGA circuit <b>102</b> may be less than 1 gigahertz, whereas the clock speed of the clock multiplier <b>110</b> may be greater than 4 gigahertz or, in some embodiments, greater than 15 gigahertz. The clock multiplier <b>110</b> can include components such as, but not limited to, a PLL (phase-locked loop) or a CMUPLL (clock multiplier unit phase-locked loop).</p><p id="p-0140" num="0139">Accordingly, one or more portions of the FPGA circuit <b>102</b> can have a clock speed lower than the clock speed of the clock multiplier <b>110</b>. A portion of the FPGA circuit <b>102</b> that has the lower clock speed may be referred to as a slower portion of the FPGA circuit <b>102</b>. For example, the signal generator <b>104</b> can transmit a signal to define the signal profile <b>106</b> to the serializer <b>108</b> via a slower portion of the FPGA circuit <b>102</b>. In some embodiments, the slower portion of the FPGA circuit <b>102</b> can include all of the components of the FPGA circuit <b>102</b> other than the serializer <b>108</b>.</p><p id="p-0141" num="0140">The clock multiplier <b>110</b> can be configured to provide its clock speed to various components of the serializer <b>108</b>, such as the serial input sampler <b>112</b>. As a result, the serial input sampler <b>112</b> can be configured to operate at the clock speed of the clock multiplier <b>110</b>. Configuring the serial input sampler <b>112</b> to receive a clock speed from the clock multiplier <b>110</b> may be referred to as a &#x201c;locked-to-reference mode&#x201d; of the serializer <b>108</b>.</p><p id="p-0142" num="0141">The serial input sampler <b>112</b> can operate at the clock speed of the clock multiplier <b>110</b> to sample the signal profile <b>106</b>. The serial input sampler <b>112</b> can sample the signal profile <b>106</b> by measuring the value of the signal profile <b>106</b> (e.g., the value of the signal or lack thereof) at a number of discrete points. The serial input sampler <b>112</b> can sample the signal profile <b>106</b> during each clock cycle of the clock signal provided by the clock multiplier <b>110</b>. Accordingly, the number of samples measured by the serial input sampler <b>112</b> can correspond to the clock speed of the serial input sampler <b>112</b>. That is, a higher clock speed typically corresponds to a larger number of measurements. The serial input sampler <b>112</b> can convert the continuous signal profile <b>106</b> into a discrete representation of the signal profile <b>106</b>.</p><p id="p-0143" num="0142">The pulse detector <b>128</b> can detect the change in the signal profile <b>106</b> corresponding to the signal generator <b>104</b> changing from operating in the first mode of operation to operating in the second mode of operation. For example, the pulse detector <b>128</b> can detect the pulse portion <b>202</b> of the signal profile <b>106</b> by detecting a change in the value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>.</p><p id="p-0144" num="0143">Referring again to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the serial input sampler <b>112</b> (or an analogous non-FPGA sampler) can sample the signal profile <b>106</b> to produce a plurality of measurements <b>208</b> of the value of the signal profile <b>106</b>. The pulse detector <b>128</b> can detect the change to the second mode of operation (e.g., the change to the pulse portion <b>202</b> at <b>206</b>), by determining the measurement <b>210</b> where the signal profile <b>106</b> transitions from the first mode of operation (e.g., the non-pulse portion <b>204</b>) to the second mode of operation (e.g., the pulse portion <b>202</b>).</p><p id="p-0145" num="0144">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the serial input sampler <b>112</b> (or an analogous non-FPGA sampler) can sample the signal profile <b>106</b> to generate a plurality of bits <b>208</b>. Each bit of the plurality of bits <b>208</b> corresponds to a value of the signal profile <b>106</b> during the sampling. The number of bits in the plurality of bits <b>208</b> can correspond to the clock speed of the serial input sampler <b>112</b>. That is, the serial input sampler <b>112</b> can generate a bit for each cycle of the clock signal provided by the clock multiplier <b>110</b> as it samples the signal profile <b>106</b>. The pulse detector <b>128</b> can detect the change in the signal profile <b>106</b> from the signal generator <b>104</b> changing from operating in the first mode of operation to operating in the second mode of operation by detecting a change in the value in the plurality of bits <b>208</b>. For example, the pulse detector <b>128</b> can detect the change in value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b> by detecting a change in value in the plurality of bits <b>208</b>. The pulse detector <b>128</b> can detect the pulse portion <b>202</b>, for example, by detecting the bit that represents the change in value from the non-pulse portion <b>204</b> to the pulse portion <b>202</b> (e.g., at <b>210</b>).</p><p id="p-0146" num="0145">It should be appreciated that the plurality of bits <b>208</b> is shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> for ease of exposition. The serial input sampler <b>112</b> may generate various other types of data in response to sampling the signal profile <b>106</b>. For example, the serial input sampler <b>112</b> may sample the signal profile <b>106</b> to generate a plurality of integers, floating points, etc.</p><p id="p-0147" num="0146">In some cases, the plurality of bits <b>208</b> may contain errors. That is, the plurality of bits may contain a bit that is a zero that should be a one, or vice versa. The errors can be caused by imperfections in the FPGA circuit <b>102</b>, such as defects in the connection between the signal generator <b>104</b> and the serializer <b>108</b>. To address these situations, the pulse detector <b>128</b> may be configured to only detect the change to the second mode of operation (e.g., the pulse portion <b>202</b>) when a predetermined threshold is exceeded. For example, the pulse portion <b>202</b> may only be detected when the change in value in the plurality of bits <b>208</b> exceeds a minimum number of bits. Accordingly, a single bit that has a different value than its neighboring bits may be ignored, and the pulse portion <b>202</b> may only be detected when there is a minimum number of bits in a row.</p><p id="p-0148" num="0147">Referring back to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the timer <b>114</b> is in communication with the pulse detector <b>128</b>. The timer <b>114</b> can determine one or more detection time measurements for the pulse portion <b>202</b>. That is, the timer <b>114</b> can time the change in the signal profile <b>106</b> (e.g., of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b> corresponding to the change in the operational mode of the signal generator <b>104</b>) to provide one or more detection time measurements. For example, the timer <b>114</b> can determine a particular sample associated with the detection of the pulse portion <b>202</b>, and determine a time associated with the collection of that sample.</p><p id="p-0149" num="0148">The timer <b>114</b> can determine the detection time measurement at least partly by counting a number of bits sampled by the serial input sampler <b>112</b> until the change in the signal profile <b>106</b> (e.g., the pulse portion <b>202</b>) is detected. For instance, referring again to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, each bit in the plurality of bits <b>208</b> can correspond to a segment of time, depending on the clock speed of the serial input sampler <b>112</b>. For example, if the serial input sampler <b>112</b> has a clock speed of 30 gigahertz, the serial input sampler <b>112</b> can sample the signal <b>104</b> every 33.3 picoseconds. Accordingly, each bit can correspond to a 33.3 picosecond time interval. The timer <b>114</b> can count the number of bits starting from a bit corresponding to a reference point, and ending at the bit <b>210</b> corresponding to the change in the operational mode of the signal generator <b>104</b> (e.g., the pulse portion <b>202</b>), to determine the detection time measurement. The reference point can be any point with which the detection time is measured relative to. The timer <b>114</b> can determine the detection time measurement by multiplying the number of bits from the reference point to the change in the signal profile <b>106</b> (e.g., the pulse portion <b>202</b>) by the amount of time corresponding to a single bit.</p><p id="p-0150" num="0149">Referring again to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in some embodiments, the timer <b>114</b> can include a ticker (not shown). The ticker can store and update a value that represents an amount of time. The value stored by the ticker can be continuously incremented at a constant rate. Each increment may be referred to as a tick. The value of the ticker can be reset to zero (and the ticker can be instructed to begin ticking) at a time corresponding to a reference point for a time measurement. In some embodiments, the value of the ticker can be used to determine the current time, for example, based on a known time of the reference point.</p><p id="p-0151" num="0150">The ticker can be incremented at a relatively low frequency, for example, slower than the sampling frequency of the serial input sampler <b>112</b> (e.g., the clock speed of the clock multiplier <b>110</b>). In some embodiments, the ticker is a part of the slower portion of the FPGA circuit <b>102</b>.</p><p id="p-0152" num="0151">For example, referring to <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, there is shown a timeline <b>300</b> that illustrates a segment of time <b>302</b> that corresponds to an increment of the ticker (or an analogous non-FPGA ticker). As shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, at <b>302</b>, the ticker stores the value n. As time advances, the ticker can update the value to n+1, n+m.</p><p id="p-0153" num="0152">Within each increment of the ticker, the serial input sampler <b>112</b> can generate a group of bits <b>350</b> while generating the plurality of bits <b>208</b> while sampling the signal profile <b>106</b>. For example, while the ticker stores the value n, the serial input sampler <b>112</b> can generate a bit during each of j, j+1, j+k. As shown in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, each group of bits <b>350</b> can correspond to a tick of the ticker (i.e., n, n+1, n+m). In some embodiments the group of bits <b>350</b> can include eighty bits. The number of bits in a group of bits <b>350</b> typically corresponds to the bus size of the serializer <b>108</b>.</p><p id="p-0154" num="0153">In some embodiments, the timer <b>114</b> can determine a detection time measurement based at least partly on the value of the ticker. For example, at a particular reference time, the ticker can begin ticking. At some future time, subsequent to the reference time, the serial input sampler <b>112</b> can detect the change in the signal profile <b>106</b> (e.g., the pulse portion <b>202</b>). The timer can determine a detection time based on the value of the ticker as well as the bits within one or more groups of bits <b>350</b>.</p><p id="p-0155" num="0154">For example, referring to <figref idref="DRAWINGS">FIG. <b>3</b>C</figref>, the ticker can reset the stored value to zero and begin incrementing the stored value at a reference time, t<sub>1</sub>. As the serial input sampler <b>112</b> samples the signal profile <b>106</b>, it generates a plurality of bits <b>208</b>. Groups of bits <b>350</b> within the plurality of bits <b>208</b> correspond to particular values or ticks of the ticker. At t<sub>2</sub>, the serial input sampler <b>112</b> (or pulse detector) detects the change in the signal profile <b>106</b> (e.g., the pulse portion <b>202</b>) by detecting a change in value in the plurality of bits <b>208</b>. The timer <b>114</b> can determine a detection time measurement based on the value of the ticker at t<sub>2 </sub>and the group of bits <b>350</b>A corresponding to the value of the ticker at t<sub>2</sub>.</p><p id="p-0156" num="0155">For instance, as shown in <figref idref="DRAWINGS">FIG. <b>3</b>C</figref>, the ticker has been incremented by four ticks from t<sub>1 </sub>to t<sub>2 </sub>(the time difference from t<sub>1 </sub>to t<sub>2 </sub>is 4 ticks minus 2 bits). Within the group of bits <b>350</b>A corresponding to the tick at t<sub>2</sub>, the change in value is detected after the seventh bit. Assuming each tick corresponds to 0.3 nanoseconds, and each bit corresponds to 33.3 picoseconds (with each tick corresponding to a group of 9 bits), a detection time measurement can be determined to be 4 ticks&#xd7;0.3 nanoseconds/tick&#x2212;2 bits&#xd7;33.3 picoseconds/bit.</p><p id="p-0157" num="0156">In some cases, the reference point can occur in between successive ticks of the ticker. For example, referring to <figref idref="DRAWINGS">FIG. <b>3</b>D</figref>, the ticker does not begin incrementing at the reference time t<sub>1</sub>. In this case, the timer <b>114</b> can determine the detection time based on the value of the ticker at t<sub>2</sub>, the group of bits <b>350</b>A corresponding to the value of the ticker at t<sub>2</sub>, and the group of bits <b>350</b>B corresponding to the value of the ticker at</p><p id="p-0158" num="0157">For instance, as shown in <figref idref="DRAWINGS">FIG. <b>3</b>D</figref>, the ticker has been incremented by four ticks from t<sub>1 </sub>to t<sub>2</sub>, where the tick count begins at the tick beginning before, and including, t<sub>1</sub>. Within the group of bits <b>350</b>B corresponding to the tick at ti, the reference time t<sub>1 </sub>occurs after the third bit. Within the group of bits <b>350</b>A corresponding to the tick at t<sub>2</sub>, the change in value is detected after the seventh bit. Assuming each tick corresponds to 0.3 nanoseconds, and each bit corresponds to 33.3 picoseconds, a detection time measurement can be determined to be 4ticks&#xd7;0.3 nanoseconds/tick&#x2212;2 bits&#xd7;33.3 picoseconds/bit&#x2212;3 bits&#xd7;33.3 picoseconds/bit.</p><p id="p-0159" num="0158">Referring again to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the FPGA circuit <b>102</b> can, in some embodiments, include a processor <b>150</b> and memory <b>152</b>. The processor <b>150</b> can be any suitable electronic component for performing one or more operations on data. The processor <b>150</b> can receive data from the various other components of the FPGA circuit <b>102</b> and perform various processing on the received data. For example, the processor <b>150</b> can receive detection time measurements from the timer <b>114</b> and adjust the detection time measurements to account for various latencies of one or more components of the FPGA circuit <b>102</b>. In another example, the processor <b>150</b> can receive a plurality of detection time measurements from the timer <b>114</b> and determine an average detection time measurement. In some embodiments, the processor <b>150</b> can control and/or reconfigure one or more of the components of the FPGA circuit <b>102</b>. The memory <b>152</b> can be any suitable component for storing data for use with the FPGA circuit <b>102</b>. The memory <b>152</b> can also receive data from the various other components of the FPGA circuit <b>102</b> and store the received data. For example, the memory <b>152</b> can store detection time measurements from the timer <b>114</b> or the processed detection time measurements from the processor <b>150</b>. The memory <b>152</b> may, in some embodiments, store latencies associated with one or more components of the FPGA circuit <b>102</b> that are more or less constant.</p><p id="p-0160" num="0159">Reference is now made to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, which shows a diagram <b>400</b> of another example of a FPGA circuit <b>102</b>. Although a FPGA circuit is shown, non-FPGA circuits providing all of the necessary functions may alternatively be used. The FPGA circuit <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> is similar to the FPGA circuit <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, except that the FPGA circuit <b>102</b> is now connected to a network device <b>116</b>. The FPGA circuit <b>102</b> can be used to measure the latency of the network device <b>116</b>.</p><p id="p-0161" num="0160">The network device <b>116</b> can be any device that can be used in a computer network. For example, the network device <b>116</b> can comprise, but is not limited to, routers, processors, cables, loopbacks, and cross-point switches. The network device <b>116</b> can have a latency. That is, the network device <b>116</b> can cause a time delay when data is transferred through the network device <b>116</b>. The latency of the network device <b>116</b> can be caused by the various functions of the network device <b>116</b>, such as, but not limited to, data transmission and data processing.</p><p id="p-0162" num="0161">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the FPGA circuit <b>102</b> can include an internal network path <b>130</b> from the signal generator <b>104</b> to the serializer <b>108</b>. The internal network path <b>130</b> does not traverse the network device <b>116</b>. A signal-transmitting connector <b>132</b> can connect the network device <b>116</b> to the FPGA circuit <b>102</b>. The signal-transmitting connector <b>132</b> can provide an external network path <b>134</b> from the signal generator <b>104</b> to the serializer <b>108</b> via the network device <b>116</b>.</p><p id="p-0163" num="0162">The signal generator <b>104</b> can provide the same signal profile <b>106</b> to the serializer <b>108</b> through both the internal network path <b>130</b> and the external network path <b>134</b> (e.g., by transmitting a signal, or by not transmitting a signal via the network paths). As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the version of the signal profile <b>106</b> that is provided by the signal generator <b>104</b> via the internal network path <b>130</b> is indicated as signal profile <b>106</b>A. The version of the signal profile <b>106</b> provided by the signal generator <b>104</b> via the external network path <b>134</b> is indicated as signal profile <b>106</b>B. It should be appreciated that the signal profile <b>106</b>A is the same as the signal profile <b>106</b>B. For example, each of the signal profile <b>106</b>A and the signal profile <b>106</b>B can include a pulse portion <b>202</b> and a non-pulse portion <b>204</b>.</p><p id="p-0164" num="0163">However, the signals corresponding to the signal profile <b>106</b>A are typically received by the serializer <b>108</b> before the signals corresponding to the signal profile <b>1066</b>. This is because the arrival of the signals corresponding to the signal profile <b>106</b>B is typically delayed by the latency of the network device <b>116</b>.</p><p id="p-0165" num="0164">The serial input sampler <b>112</b> can sample the signal profile <b>106</b>A and the pulse detector <b>128</b> can detect the change in the signal profile <b>106</b>A (e.g., the change in value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>) corresponding to the signal received via the internal network path <b>130</b> at a first detection time. The serial input sampler <b>112</b> can then sample the signal profile <b>106</b>B and the pulse detector <b>128</b> can then detect the change in the signal profile <b>106</b>B (e.g., the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>) corresponding to the signal received via the external network path <b>134</b> at a second detection time. In some embodiments, the serial input sampler <b>112</b> can sample the signal profiles <b>106</b>A, <b>106</b>B to generate a plurality of bits <b>208</b>. The pulse detector <b>128</b> can detect change in the signal profiles <b>106</b>A, <b>106</b>B (e.g., the pulse portions <b>202</b>) by detecting changes in value in the plurality of bits <b>208</b>.</p><p id="p-0166" num="0165">The timer <b>114</b> can time the change in the signal profile <b>106</b>A and the signal profile <b>106</b>B (e.g., the change in value of the pulse portions <b>202</b> relative to the non-pulse portions <b>204</b>) to determine one or more detection time measurements. For example, the detection time measurement may include the first detection time (e.g., corresponding to signal profile <b>106</b>A and the latency of the internal network path <b>130</b>) and the second detection time (e.g., corresponding to signal profile <b>106</b>B and the latency of the external network path <b>134</b>).</p><p id="p-0167" num="0166">In some embodiments, the timer <b>114</b> can determine a detection time difference between the first detection time and the second detection time. For example, the timer <b>114</b> can determine the detection time difference by counting a number of bits sampled between the first detection time and the second detection time.</p><p id="p-0168" num="0167">In some embodiments, the processor <b>150</b> can determine the detection time difference between the first detection time and the second detection time. For example, the processor <b>150</b> can receive one or more detection time measurements from the timer <b>114</b>, and subtract a detection time measurement corresponding to the second detection time with a detection time measurement corresponding to the first detection time.</p><p id="p-0169" num="0168">The processor <b>150</b> can determine the latency of the network device <b>116</b> based at least partly on the detection time difference. As noted above, the signals of the signal profile <b>106</b>A are typically received by the serializer <b>108</b> before the corresponding signals of the signal profile <b>106</b>B because the arrival of the signals of signal profile <b>106</b>B is typically delayed by the latency of the network device <b>116</b>. Accordingly, the latency of the network device <b>116</b> can be determined based on a detection time difference of the change in the signal profiles <b>106</b>A, <b>106</b>B (e.g., pulse portions <b>202</b>).</p><p id="p-0170" num="0169">In some embodiments, the signal generator <b>104</b> can define a plurality of signal profiles <b>106</b> by transmission of corresponding signals (or lack thereof) along the internal network path <b>130</b> and the external network path <b>134</b> to the serializer <b>108</b>. For example, the signal generator <b>104</b> can define a first signal profile<b>106</b> at a first time. Then at a second time subsequent to the first time, the signal generator <b>104</b> can define a second signal profile <b>106</b>. The timer <b>114</b> can determine a plurality of detection time differences for the plurality of the signal profiles <b>106</b> and the processor <b>150</b> can determine the latency of the network device <b>116</b> based on an average of the detection time differences.</p><p id="p-0171" num="0170">For each signal profile <b>106</b> in the plurality of signal profiles <b>106</b>, a signal profile <b>106</b>A is defined by transmission of a corresponding signal (or lack thereof) along the internal network path <b>130</b> and a signal profile <b>106</b>B is defined by transmission of a corresponding signal (or lack thereof) along the external network path <b>134</b>. It should be appreciated that the signal profile <b>106</b>A is the same signal profile as the signal profile <b>106</b>B. For example, each of the signal profile <b>106</b>A and the signal profile <b>106</b>B can include a pulse portion <b>202</b> and a non-pulse portion <b>204</b>. Each pulse portion <b>202</b> includes a change in value relative to the respective non-pulse portion <b>204</b>.</p><p id="p-0172" num="0171">The serial input sampler <b>112</b> can sample each signal profile <b>106</b> in the plurality of signal profiles <b>106</b>. That is, the serial input sampler <b>112</b> can sample each signal (or lack thereof) received via the internal network path <b>130</b> corresponding to each signal profile <b>106</b>A and the pulse detector <b>128</b> can detect the change in the signal profile <b>106</b>A (e.g., the change in the value of the pulse portion <b>202</b> relative to the respective non-pulse portion <b>204</b>) at a first detection time. The serial input sampler <b>112</b> can also sample the signal (or lack thereof) received via the external network path <b>134</b> corresponding to each signal profile <b>106</b>B and the pulse detector <b>128</b> can detect the change in the signal profile <b>106</b>B (e.g., the change in the value of the pulse portion <b>202</b> relative to the respective non-pulse portion <b>204</b>) at a second detection time.</p><p id="p-0173" num="0172">The timer <b>114</b> can time the change in each signal profile <b>106</b> (e.g., the change in value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>) within the plurality of signal profiles <b>106</b> to determine at least one detection time measurement for each signal profile <b>106</b>. For example, each detection time measurement can include the first detection time and the respective second detection time for each signal profile <b>106</b>. In some embodiments, the timer <b>114</b> can determine a detection time difference between the first detection time and the second detection time for each signal profile <b>106</b>. In some embodiments, the detection time differences may be determined by the processor <b>150</b>.</p><p id="p-0174" num="0173">The processor <b>150</b> can determine an average detection time difference between the first detection times and the corresponding second detection times. For example, the processor <b>150</b> can determine an average detection time difference by summing each detection time difference and dividing by the number of signal profiles <b>106</b>.</p><p id="p-0175" num="0174">The processor <b>150</b> can determine the latency in the network device <b>116</b> based at least on the average detection time difference. Using an average detection time difference may result in a more accurate latency calculation, due to the averaging removing noise, jitter and/or other inconsistencies from individual detection time measurements.</p><p id="p-0176" num="0175">In some embodiments, the processor <b>150</b> can modify and/or adjust the determined latency of the network device <b>116</b>. For example, the processor <b>150</b> may subtract other latencies experienced by signals of the signal profile <b>106</b>A and/or the signal profile <b>1066</b> that were not caused by the network device <b>116</b>. For instance, the processor <b>150</b> can determine the latency of one or more components of the FPGA circuit <b>102</b> and/or connections between two or more components of the FPGA circuit <b>102</b>. Various latencies may also be stored in the memory <b>152</b>. In some cases, one latency stored in the memory <b>152</b> can be used to adjust multiple determined latencies. For example, a latency related to the physical path length of a network path may be used to adjust the determined latencies of different network devices <b>116</b>.</p><p id="p-0177" num="0176">The processor <b>150</b> can determine the latency of one or more components and/or connections of the FPGA circuit <b>102</b> in various ways. In some embodiments, the determination can involve transmitting a signal through a component or a connection. The processor <b>150</b> can determine the latency of the component or connection based on the signal. For example, the processor <b>150</b> can determine the time taken for the signal to travel through the component or connection. For instance, the processor <b>150</b> may measure the time elapsed between the signal being input to the component or connection and the signal being output by the component or connection. Various inputs may be supplied to the processor <b>150</b> to determine the latency of the component or connection.</p><p id="p-0178" num="0177">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the external network path <b>134</b> can include a plurality of links that include the network device <b>116</b>. The external network path <b>134</b> can also include one or more other links that are not included in the internal network path <b>130</b>. In some embodiments, the processor <b>150</b> can determine a latency of the at least one other link. The latency of the at least one other link may be stored in the memory <b>152</b>. The processor <b>150</b> can determine the latency of the network device <b>116</b> based at least partly on the latency of the at least one other link.</p><p id="p-0179" num="0178">In some embodiments, the FPGA circuit <b>102</b> can be configured to include one or more internal loopbacks. The internal loopbacks can connect two or more components of the FPGA circuit <b>102</b>. The internal loop back connections may be used to determine the latency of particular components or particular network paths.</p><p id="p-0180" num="0179">In some embodiments, the FPGA circuit <b>102</b> can include one or more other components (not shown) for modifying a signal format of the signals generated by the signal generator <b>104</b>. For example, in some cases, the network device <b>116</b> may require a signal of the signal profile <b>106</b>B to have a particular signal format. In some cases, one or more components of the FPGA circuit <b>102</b> may require a signal of the signal profile <b>106</b>A or the signal profile <b>1066</b> to have a particular signal format.</p><p id="p-0181" num="0180">For example, the processor <b>150</b> can determine that a signal of a signal profile <b>106</b>B generated by the signal generator <b>104</b> has a first signal format different than a second signal format required by the network device <b>116</b>. One or more components (not shown) of the FPGA circuit <b>102</b> can convert the signal so that the signal has the second signal format when the signal traverses the network device <b>116</b>. The same or different one or more components of the FPGA circuit <b>102</b> can convert the signal received from the network device <b>116</b> so that the signal has the first signal format when the signal traverses a portion of the external network path <b>134</b> between the network device <b>116</b> and the serializer <b>108</b>.</p><p id="p-0182" num="0181">The first signal standard and the second signal standard can include different frequencies. For example, the first signal standard can include a first signal frequency, corresponding to the clock speed of the slower portion of the FPGA circuit <b>102</b> (e.g., operating at a clock speed lower than the clock multiplier <b>110</b>). The second frequency standard can include a second signal frequency within a frequency that is required by the network device <b>116</b> that is greater than the first signal frequency. For instance, the second signal standard can be Ethernet.</p><p id="p-0183" num="0182">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, there is provided a diagram <b>500</b> of another example of the FPGA circuit <b>102</b>. Although a FPGA circuit is shown, non-FPGA circuits providing all of the necessary functions may alternatively be used. The FPGA circuit <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> is similar to the FPGA circuit <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, except that the FPGA circuit <b>102</b> further includes a merging link <b>118</b> and, in some embodiments, a conversion link <b>120</b>.</p><p id="p-0184" num="0183">The merging link <b>118</b> can merge the internal network path <b>130</b> and the external network path <b>134</b>. The merging link <b>118</b> can combine any signals transmitted on the network paths. Accordingly, the signal profile <b>106</b>A defined by signals (or lack thereof) transmitted through the internal network path <b>130</b> can merge at the merging link <b>118</b> with the signal profile <b>1066</b> defined by signals (or lack thereof) transmitted through the external network path <b>134</b> to create a merged signal profile <b>106</b>C. The merged signal profile <b>106</b>C can include the change in both signal profiles <b>106</b>A and <b>106</b>B corresponding to the change in the operational mode of the signal generator <b>104</b>. For example, the merged signal profile <b>106</b>C can include two pulse portions <b>202</b>. Each pulse portion <b>202</b> includes the change in value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b> of the merged signal profile <b>106</b>C.</p><p id="p-0185" num="0184">In some embodiments, the merging link <b>118</b> can be an OR gate. The OR gate can merge the signal profile <b>106</b>A of the internal network path <b>130</b> and the signal profile <b>1066</b> of the external network path <b>134</b> to provide the merged signal profile <b>106</b>C.</p><p id="p-0186" num="0185">The merged signal profile <b>106</b>C defined by the merging link <b>118</b> can be sampled by the serializer <b>108</b>. The serial input sampler <b>112</b> can sample the merged signal profile <b>106</b>C and the pulse detector <b>128</b> can detect the change in the merged signal profile <b>106</b>C (e.g., the change in the value of a pulse portion <b>202</b> relative to a non-pulse portion <b>204</b>) at the first detection time, and then at the second detection time. For example, the serial input sampler <b>112</b> can generate a plurality of bits <b>208</b> in response to sampling the merged signal profile <b>106</b>C, and the pulse detector <b>128</b> can detect both changes in value within the plurality of bits <b>208</b>.</p><p id="p-0187" num="0186">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the FPGA circuit <b>102</b> can also optionally include a conversion link <b>120</b> between the merging link <b>118</b> and the serializer <b>108</b>. The conversion link <b>120</b> can convert signals between different signal formats. For example, the conversion link <b>120</b> can include a plurality of circuit components, including one or more capacitors and one or more resistors. The conversion link <b>120</b> may also include one or more biasing components for modifying a voltage level of a signal.</p><p id="p-0188" num="0187">In some cases, the signals of the signal profiles <b>106</b>A, <b>106</b>B generated by the signal generator <b>104</b> and/or the merged signal profile <b>106</b>C merged at the merging link <b>118</b> can have a first signal format, while the serializer <b>108</b> may require a second, different signal format. The conversion link <b>120</b> can convert the signals of the merged signal profile <b>106</b>C from the first signal format to the second signal format so that the serializer <b>108</b> receives the signals in the second signal format. For example, the first signal format can include a low voltage differential signaling (LVDS) format and the second format can include a current mode logic (CML) format.</p><p id="p-0189" num="0188">Referring now to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, shown therein is a circuit diagram <b>600</b> of an example conversion link <b>120</b>. As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the conversion link <b>120</b> includes resistors <b>610</b>, <b>612</b>, <b>614</b>, <b>616</b>, capacitors <b>606</b>, <b>608</b>, and a bias voltage source <b>618</b>. In operation, the conversion link <b>120</b> can convert a signal from a LVDS format at <b>602</b> to a CML format at <b>604</b>. The conversion link <b>120</b> can modify a voltage level of a signal to convert the signal between signal formats.</p><p id="p-0190" num="0189">Referring now to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, shown therein is a block diagram <b>700</b> of another example FPGA circuit <b>102</b>. Although a FPGA circuit is shown, non-FPGA circuits providing all of the necessary functions may alternatively be used. The FPGA circuit <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> is similar to the FPGA circuit <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, except that the FPGA circuit <b>102</b> further includes a detector <b>124</b> and optionally, a communication port <b>122</b> and a time-stamper <b>160</b>. The FPGA circuit <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> can be used to generate timestamps in response to data events. The FPGA circuit <b>102</b> can timestamp a data event by recording data, in association with the data event, which identifies when the data event occurred. The data event can be any event related to any data received, processed, stored, or transmitted by the FPGA circuit <b>102</b>.</p><p id="p-0191" num="0190">The detector <b>124</b> can detect the occurrence of the data event. In response to detecting the data event, the detector <b>124</b> can instruct the signal generator <b>104</b> to change from operating in a first mode of operation to a second mode of operation. For example, the signal generator <b>104</b> can first define the non-pulse portion <b>204</b> of the signal profile <b>106</b>. In response to the detector <b>124</b> detecting the data event, the signal generator <b>104</b> can then define the pulse portion <b>202</b> of the signal profile <b>106</b>.</p><p id="p-0192" num="0191">The detector <b>124</b> can include a data reader (not shown). The data reader can be configured to read data packets <b>126</b>. The data packets <b>126</b> can be any formatted package of data. The data packets <b>126</b> can include a data payload that is preceded by a preamble (not shown). For example, the data packets <b>126</b> can be an Ethernet packet. The data packets <b>126</b> can include an Ethernet preamble, and an Ethernet frame after the Ethernet preamble.</p><p id="p-0193" num="0192">The detector <b>124</b> may detect a data event by detecting a data packet <b>126</b>. The detector <b>124</b> may detect the data packet <b>126</b> by detecting one or more aspects of the data packet <b>126</b>. For example, the detector <b>124</b> may detect a data event by detecting the preamble (or a portion thereof) of a data packet <b>126</b>. As another example, the detector <b>124</b> may detect a data event by detecting the payload (or a portion thereof) of a data packet <b>126</b>. For instance, the detector <b>124</b> may detect the first byte of the payload, the last byte of the payload, or a particular field within the payload (e.g., an IP address). In some embodiments, the detector <b>124</b> may detect a data event by detecting a particular pattern within the payload. In some embodiments, the detector <b>124</b> can detect a data event by detecting the arrival of a data packet <b>126</b> (e.g., via communication port <b>122</b>).</p><p id="p-0194" num="0193">As described above, the serial input sampler <b>112</b> can sample the signal profile <b>106</b> and the pulse detector <b>128</b> can detect the change in the signal profile <b>106</b> (e.g., the change in the value of pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>). The timer <b>114</b> can time the change in the signal profile <b>106</b> to determine one or more detection time measurements.</p><p id="p-0195" num="0194">The processor <b>150</b> can timestamp the data event based on the at least one detection time measurement. For example, the processor <b>150</b> can record, in association with the data event, a timestamp based on the at least one detection time measurement. The timestamp may identify a time corresponding to the detection time measurement. In some embodiments, the processor <b>150</b> can record the timestamp in the memory <b>152</b>. In some embodiments, the processor <b>150</b> can modify a data packet <b>126</b> to include the timestamp. In some embodiments, the detector <b>124</b> can timestamp the data event. In some embodiments, optionally, a time-stamper <b>160</b> can timestamp the data event. In some embodiments, the time-stamper <b>160</b> can be a component of the detector <b>124</b>.</p><p id="p-0196" num="0195">In some embodiments, the processor <b>150</b> may modify or adjust the timestamp to compensate for the latencies of one or more components of the FPGA circuit <b>102</b>. The processor <b>150</b> can determine the latencies of the one or more components. The latencies may be stored in the memory <b>152</b>.</p><p id="p-0197" num="0196">The processor <b>150</b> can determine the latency of one or more components and/or connections of the FPGA circuit <b>102</b> in various ways. In some embodiments, the determination can involve transmitting a signal through a component or a connection. The processor <b>150</b> can determine the latency of the component or connection based on the signal. For example, the processor <b>150</b> can determine the time taken for the signal to travel through the component or connection. For instance, the processor <b>150</b> may measure the time elapsed between the signal being input to the component or connection and the signal being output by the component or connection. Various inputs may be supplied to the processor <b>150</b> to determine the latency of the component or connection.</p><p id="p-0198" num="0197">For example, the processor <b>150</b> can determine the latency of a network path <b>136</b>, along which signals of a signal profile are transmitted from the signal generator <b>104</b> to the serializer <b>108</b>. The latency of the network path <b>136</b> may be stored in the memory <b>152</b>. The processor <b>150</b> can determine the timestamp based at least partly on the latency of the network path <b>136</b>.</p><p id="p-0199" num="0198">In another example, the processor <b>150</b> can determine the latency of the detector <b>124</b> detecting the data event and instructing the signal generator <b>104</b> to change from operating in the first mode of operation to the second mode of operation. The latency of the data reader <b>124</b> may be stored in the memory <b>152</b>. The processor <b>150</b> can determine the timestamp based at least partly on detector latency.</p><p id="p-0200" num="0199">Optionally, a communication port <b>122</b> can be coupled to the detector <b>124</b>. The communication port <b>122</b> can receive data packets <b>126</b>. For example, the communication port <b>122</b> can be connected to a network (not shown) and the packet <b>126</b> can be transmitted from the network to the communication port <b>122</b>. The communication port <b>122</b> can be coupled to the detector <b>124</b> so that the packets <b>126</b> received by the communication port <b>122</b> can be read by the detector <b>124</b>.</p><p id="p-0201" num="0200">Although not shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> for ease of illustration, a conversion link can be coupled between the signal generator <b>104</b> and the serializer <b>108</b>. As described above, the conversion link can convert the format of the signals generated by the signal generator <b>104</b> so that the signals can be received by the serializer <b>108</b>.</p><p id="p-0202" num="0201">In some embodiments, the detector <b>124</b> can detect each data event in a plurality of data events. The detector <b>124</b> can instruct the signal generator <b>104</b> to define a plurality of pulse portions <b>202</b> of the signal profile <b>106</b>. The plurality of pulse portions <b>202</b> can include an associated pulse portion <b>202</b> for each data event.</p><p id="p-0203" num="0202">The pulse detector <b>128</b> can detect a plurality of changes in value of the plurality of pulse portions <b>202</b> relative to a plurality of non-pulse portions <b>204</b>.</p><p id="p-0204" num="0203">The timer <b>114</b> can provide a plurality of at least one detection time measurements. The plurality of at least one detection time measurements can include an associated at least one detection time measurement for each data event.</p><p id="p-0205" num="0204">The processor <b>150</b> can determine the timestamp for each data event based on the associated at least one detection time measurement for that data event. In some embodiments, the processor <b>150</b> can determine the timestamp for each data event based on the latency of the network path <b>136</b> and the latency of the detector <b>124</b>. For example, the processor <b>150</b> can retrieve the latency of the network path <b>136</b> and the latency of the detector <b>124</b> from the memory <b>152</b>.</p><p id="p-0206" num="0205">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, there is provided a block diagram <b>800</b> of an example system <b>1002</b> for measuring latency of a network device <b>116</b>. As noted above, the network device <b>116</b> can be any device that can be used in a computer network. The latency measurement system <b>1002</b> includes a signal generator <b>1004</b>, a sampler <b>1008</b>, pulse-detector <b>1028</b>, a timer <b>1014</b>, and a signal-transmitting connector <b>1032</b>.</p><p id="p-0207" num="0206">In some embodiments, the latency measurement system <b>1002</b> can be implemented at least in part using the FPGA circuit <b>102</b> disclosed herein. For example, the signal generator <b>1004</b> can be implemented using the signal generator <b>104</b>, the sampler <b>1008</b> can be implemented using the serializer <b>108</b>, the pulse detector <b>1028</b> can be implemented using the pulse detector <b>128</b>, and the timer <b>1014</b> can be implemented using the timer <b>114</b>. However, it should be appreciated that the system <b>1002</b> may, in some embodiments, be implemented entirely without a FPGA circuit and/or any components thereof.</p><p id="p-0208" num="0207">The signal generator <b>1004</b> can generate any electronic signal. The signal generator <b>1004</b> can define a signal profile. The signal generator <b>1004</b> can define the signal profile by generating a signal or by not generating a signal (i.e., a notional signal having a constant, zero magnitude). The signal generator <b>1004</b> can define a different signal profiles depending on its mode of operation (e.g., by providing signals or the absence of signals). In some embodiments, during at least one of a first mode of operation and a second mode of operation, the signal generator <b>1004</b> defines the signal profile <b>106</b> by generating a signal. For example, the signal generator <b>1004</b> can generate the signal profile <b>106</b> described herein. The signal profile <b>106</b> can include the pulse portion <b>202</b> and the non-pulse portion <b>204</b>. The pulse portion <b>202</b> differs in value from the non-pulse portion <b>204</b> of the signal profile <b>106</b>.</p><p id="p-0209" num="0208">A signal-transmitting connector <b>1032</b> can electronically link the signal generator <b>1004</b> and the sampler <b>1008</b> to provide an external network path <b>1034</b> for signals to travel from the signal generator <b>1004</b> to the sampler <b>1008</b> via the network device <b>116</b>. In some cases, the external network path <b>1034</b> may be described with reference to a start point and an end point (i.e., with the network device <b>116</b> in between the start point and the end point). As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the start point can be the signal generator <b>1004</b> and the end point can be the sampler <b>1008</b>. The end point may be sampled to sample the signal profile <b>106</b>.</p><p id="p-0210" num="0209">Optionally, a conversion link (not shown) can be coupled between the signal generator <b>1004</b> and the sampler <b>1008</b>. The conversion link can convert the format of the signals generated by the signal generator <b>1004</b> so that the signals can be received by the sampler <b>1008</b>.</p><p id="p-0211" num="0210">The sampler <b>1008</b> can sample the signal profile <b>106</b> defined by the signal generator <b>1004</b>. The sampler <b>1008</b> can sample the signal profile <b>106</b> at a frequency of at least 4 gigahertz, or, in some embodiments, of at least 15 gigahertz. The sampler <b>1008</b> can sample the signal profile <b>106</b> to generate a plurality of bits <b>208</b>. Each bit in the plurality of bits <b>208</b> corresponds to a value of the signal profile <b>106</b> during the sampling.</p><p id="p-0212" num="0211">The pulse detector <b>1028</b> can detect the change in the signal profile <b>106</b> corresponding to the change in the operational mode of the signal generator <b>1004</b> (e.g., the change in the value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>) by detecting a change in the plurality of bits <b>208</b>.</p><p id="p-0213" num="0212">The timer <b>1014</b> is in communication with the pulse detector <b>1028</b>. The timer <b>1014</b> can time the change in the signal profile <b>106</b> corresponding to the change in the operational mode of the signal generator <b>1004</b> (e.g., the change in the value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>) to provide at least one detection time measurement.</p><p id="p-0214" num="0213">In some embodiments, the system <b>1002</b> can include a processor <b>1050</b> and a memory <b>1052</b>. The processor <b>1050</b> can receive data from the various other components of the system <b>1002</b> and perform various processing on the received data. The memory <b>1052</b> can also receive data from the various other components of the system <b>1002</b> and store the received data.</p><p id="p-0215" num="0214">The processor <b>1050</b> can determine the latency of the network device <b>116</b> based at least partly on the at least one detection time measurement. In some embodiments, the processor <b>1050</b> may also determine the detection time measurements.</p><p id="p-0216" num="0215">Referring now to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, shown therein is a block diagram <b>900</b> of another example system <b>1002</b> for measuring latency of a network device <b>116</b>. The latency measurement system <b>1002</b> shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref> is similar to the latency measurement system <b>1002</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, except that the latency measurement system <b>1002</b> further includes an internal network path <b>1030</b> and a merging link <b>1018</b>.</p><p id="p-0217" num="0216">The internal network path <b>1030</b> can provide a path for a signal from the signal generator <b>1004</b> to the sampler <b>1008</b> without traversing the network device <b>1016</b>. The internal network path <b>1030</b> can have the same start point and end point as the external network path <b>1034</b>.</p><p id="p-0218" num="0217">As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the version of the signal profile <b>106</b> that is defined by the signal generator <b>104</b> transmitting a signal (or lack thereof) along the internal network path <b>1030</b> is indicated by signal profile <b>106</b>A. The version of the signal profile <b>106</b> defined by the signal generator <b>1004</b> transmitting a signal (or lack thereof) along the external network path <b>1034</b> is indicated by the signal profile <b>1066</b>. It should be appreciated that the signal profile <b>106</b>A is the same as the signal profile <b>1066</b>. For example, each of the signal profile <b>106</b>A and the signal profile <b>106</b>B can include the pulse portion <b>202</b> and the non-pulse portion <b>204</b>.</p><p id="p-0219" num="0218">The merging link <b>1018</b> merges the internal network path <b>1030</b> and the external network path <b>1034</b>. In operation, the signal profile <b>106</b>A corresponding to signals (or lack thereof) transmitted through the internal network path <b>1030</b> merges at the merging link <b>1018</b> with the signal profile <b>106</b>B corresponding to signals (or lack thereof) transmitted through the external network path <b>1034</b> to create a merged signal profile <b>106</b>C. For example, the merged signal profile <b>106</b>C can include two pulse portions <b>202</b>. Each of the pulse portions <b>202</b> can include the change in value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b> of the merged signal profile <b>106</b>C. For example, the merging link <b>1018</b> can be an OR gate for merging the signal profile <b>106</b>A of the internal network path <b>1030</b> and the signal profile <b>106</b>B of the external network path <b>1034</b> to provide the merged signal profile <b>106</b>C.</p><p id="p-0220" num="0219">Optionally, a conversion link (not shown) can be coupled between the merging link <b>1008</b> and the sampler <b>1008</b>. As described above, the conversion link can convert the format of the signals generated by the signal generator <b>1004</b> so that the signals can be received by the sampler <b>1008</b>.</p><p id="p-0221" num="0220">The sampler <b>1008</b> can sample the merged signal profile <b>106</b>C at an end point of the external network path <b>1034</b> and the internal network path <b>1030</b> and the pulse detector <b>1028</b> detect a change in the merged signal profile <b>106</b>C (e.g., the change in the value of a pulse portion <b>202</b> relative to a non-pulse portion <b>204</b>) at a first detection time and at a second detection time subsequent to the first detection time. As noted above, the signal profile <b>106</b>A is typically received first by the sampler <b>1008</b> because the signal profile <b>106</b>B is delayed by the latency of the network device <b>116</b>.</p><p id="p-0222" num="0221">The timer <b>1014</b> can determine a detection time difference between the first detection time and the second detection time. The at least one detection time measurement can include the first detection time, the second detection time, and the detection time difference. In some embodiments, the timer <b>1014</b> can determine the detection time difference by counting a number of bits sampled between the first detection time and the second detection time. In some embodiments, the processor <b>1050</b> may determine the detection time difference.</p><p id="p-0223" num="0222">In some embodiments, the signal generator <b>1004</b> can define a plurality of signal profiles <b>106</b> by transmitting signals (or lack thereof) through the internal network path <b>1030</b> and the external network path <b>1034</b> to the end point or the sampler <b>1008</b>. For example, the signal generator <b>1004</b> can define a first signal profile <b>106</b> at a first time. Then at a second time subsequent to the first time, the signal generator <b>104</b> can define a second signal profile <b>106</b>. The timer <b>1014</b> can determine a plurality of detection time differences for the plurality the signal profiles <b>106</b> and the processor <b>1050</b> can determine the latency of the network device <b>116</b> based on an average of the detection time differences.</p><p id="p-0224" num="0223">For each signal profile <b>106</b> in the plurality of signal profiles <b>106</b>, a signal profile <b>106</b>A is defined by transmission of a corresponding signal (or lack thereof) along the internal network path <b>130</b> and a signal profile <b>106</b>B is defined by the transmission of a corresponding signal (or lack thereof) along the external network path <b>134</b>. It should be appreciated that the signal profile <b>106</b>A is the same signal profile as the signal profile <b>106</b>B. For example, each of the signal profiles <b>106</b>A and the signal profiles <b>106</b>B can include a pulse portion <b>202</b> and a non-pulse portion <b>204</b>. Each pulse portion <b>202</b> includes a change in value relative to the respective non-pulse portion <b>204</b>.</p><p id="p-0225" num="0224">The sampler <b>1008</b> can sample each signal profile <b>106</b> in the plurality of signal profiles <b>106</b>. The sampler <b>1008</b> can sample each signal (or lack thereof) received via the internal network path <b>1030</b> corresponding to each signal profile <b>106</b>A and the pulse detector <b>1028</b> can detect the change in the signal profile <b>106</b>A (e.g., the change in value of the pulse portion <b>202</b> relative to the respective non-pulse portion <b>204</b>) at a first detection time. The sampler <b>1008</b> can also sample each signal (or lack thereof) received via the external network path <b>1034</b> corresponding to each signal profile <b>106</b>B and the pulse detector <b>1028</b> can detect the change in the signal profile <b>106</b>B (e.g., the change in the value of the pulse portion <b>202</b> relative to the respective non-pulse portion <b>204</b>) at a second detection time.</p><p id="p-0226" num="0225">The timer <b>1014</b> can time the change in each signal profile <b>106</b> (e.g., the change in value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>) within the plurality of signal profiles <b>106</b> to determine at least one detection time measurement for each signal profile <b>106</b>. For example, each detection time measurement can include the respective first detection time and the respective second detection time. In some embodiments, the timer <b>1014</b> can determine a detection time difference between a respective first detection time and a respective second detection time for each signal profile <b>106</b>. In some embodiments, the processor <b>1050</b> can determine the detection time differences.</p><p id="p-0227" num="0226">The processor <b>1050</b> can determine an average detection time difference between the first detection time and the second detection time. For example, the processor <b>1050</b> can receive a detection time difference for each signal profile <b>106</b> from the timer <b>1014</b>. The processor <b>1050</b> can determine an average detection time difference by summing each detection time difference and dividing the sum by the number of signal profiles <b>106</b>.</p><p id="p-0228" num="0227">The processor <b>1050</b> can determine the latency in the network device <b>116</b> based at least on the average detection time difference. As noted above, using an average detection time difference may result in a more accurate latency calculation, due to the averaging removing noise, jitter, and/or other inconsistencies from individual detection time measurements.</p><p id="p-0229" num="0228">In some embodiments, the processor <b>1050</b> can modify and/or adjust the determined latency of the network device <b>116</b>. For example, the processor <b>1050</b> may subtract other latencies experienced by the signals of the signal profile <b>106</b>A, the signal profile <b>1066</b>, and/or the signal profile <b>106</b>C that were not caused by the network device <b>116</b>. For instance, the processor <b>1050</b> can determine the latency of one or more components of the system <b>1002</b> and/or connections between two or more components of the system <b>1002</b>. The latencies may be stored in the memory <b>1052</b>. In some cases, one latency stored in the memory <b>1052</b> can be used to adjust multiple determined latencies. For example, a latency related to the physical path length of a network path may be used to adjust the determined latencies of different network devices <b>116</b>.</p><p id="p-0230" num="0229">The processor <b>1050</b> can determine the latency of one or more components and/or connections of the latency measurement system <b>1002</b> in various ways. In some embodiments, the determination can involve transmitting a signal through a component or a connection. The processor <b>1050</b> can determine the latency of the component or connection based on the signal. For example, the processor <b>1050</b> can determine the time taken for the signal to travel through the component or connection. For instance, the processor <b>1050</b> may measure the time elapsed between the signal being input to the component or connection and the signal being output by the component or connection. Various inputs may be supplied to the processor <b>1050</b> to determine the latency of the component or connection.</p><p id="p-0231" num="0230">For example, as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the external path <b>1034</b> can include a plurality of links that include the network device <b>116</b>. The external path <b>1034</b> can also include one or more other links that are not included in the internal network path <b>1030</b>. In some embodiments, the processor <b>1050</b> can determine a latency of the at least one other link. The latency of the at least one other link may be stored at the memory <b>1052</b>. The processor <b>1050</b> can determine the latency of the network device <b>116</b> based at least partly on the latency of the at least one other link.</p><p id="p-0232" num="0231">In another example, the processor <b>1050</b> can determine a latency of the internal network path <b>1030</b>. The latency of the internal network path <b>1030</b> may be stored at the memory <b>1052</b>. The processor <b>1050</b> can determine the latency of the network device <b>116</b> based at least partly on the latency of the internal network path <b>1030</b>.</p><p id="p-0233" num="0232">In some embodiments, the latency measurement system <b>1002</b> can be configured to include one or more internal loopbacks. The internal loopbacks can connect two or more components of the latency measurement system <b>1002</b>. The internal loop back connections may be used to determine the latency of particular components or particular network paths.</p><p id="p-0234" num="0233">Referring now to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, there is provided a block diagram <b>1000</b> of a system <b>2002</b> for timestamping a data event. The timestamping system <b>2002</b> can timestamp the data event by recording data, in association with the data event, which identifies when the data event occurred. The system <b>2002</b>, as shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, includes similar components as the latency measurement system <b>1002</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, except that the timestamping system <b>2002</b> further includes a detector <b>1024</b> and optionally a communication port <b>2022</b> and a time-stamper <b>1060</b>, and may lack the external network path components for connecting to an external network device.</p><p id="p-0235" num="0234">In some embodiments, the timestamping system <b>2002</b> can be implemented using the FPGA circuit <b>102</b> disclosed herein. For example, the signal generator <b>2004</b> can be implemented using the signal generator <b>104</b>, the sampler <b>2008</b> can be implemented using the serializer <b>108</b>, the pulse detector <b>1028</b> can be implemented using the pulse detector <b>128</b>, and the timer <b>2014</b> can be implemented using the timer <b>114</b>. However, it should be appreciated that the system <b>1002</b> may, in some embodiments, be implemented entirely without a FPGA circuit and/or any components thereof.</p><p id="p-0236" num="0235">In operation, the signal generator <b>1004</b> can first operate in a first mode of operation to define a signal profile <b>106</b> (e.g., that includes the non-pulse portion <b>204</b> and not the pulse-portion <b>202</b>).</p><p id="p-0237" num="0236">The detector <b>1024</b> can detect a data event. In response to detecting the data event, the detector <b>1024</b> can instruct the signal generator <b>1004</b> to change from operating in the first mode of operation to a second mode of operation to change the signal profile <b>106</b>. For example, the signal generator <b>1004</b> can change from defining the non-pulse portion <b>204</b> to defining the pulse portion <b>202</b>. As noted above, the pulse portion <b>202</b> differs in value from the non-pulse portion <b>204</b> of the signal profile <b>106</b>.</p><p id="p-0238" num="0237">The detector <b>1024</b> can include a data reader (not shown). The data reader can be configured to read data packets <b>126</b>. The data packets <b>126</b> can be any formatted package of data. The data packets <b>126</b> can include a data payload that is preceded by a preamble (not shown). For example, the data packets <b>126</b> can be an Ethernet packet. The data packets <b>126</b> can include an Ethernet preamble, and an Ethernet frame after the Ethernet preamble.</p><p id="p-0239" num="0238">The detector <b>1024</b> may detect a data event by detecting a data packet <b>126</b>. The detector <b>1024</b> may detect the data packet <b>126</b> by detecting various aspects of the data packet <b>126</b>. For example, the detector <b>1024</b> may detect a data event by detecting the preamble (or a portion thereof) of a data packet <b>126</b> or the payload (or a portion thereof) of a data packet <b>126</b>. In some embodiments, the detector <b>1024</b> can detect a data event by detecting the arrival of a data packet <b>126</b> (e.g., via communication port <b>1022</b>).</p><p id="p-0240" num="0239">The sampler <b>1008</b> can sample the signal profile <b>106</b>. The sampler <b>1008</b> can sample the signal profile <b>106</b> at a frequency of at least 4 gigahertz, or in some embodiments, of at least 15 gigahertz. The sampler <b>1008</b> can sample the signal profile <b>106</b> to generate a plurality of bits <b>208</b>. Each bit in the plurality of bits <b>208</b> can correspond to a value of the signal profile <b>106</b> during the sampling.</p><p id="p-0241" num="0240">The pulse detector <b>1028</b> can detect the change in the signal profile <b>106</b> (e.g., the change in value of the pulse portion <b>202</b> relative to the non-pulse portion <b>204</b>) by detecting a change in value in the plurality of bits <b>208</b>.</p><p id="p-0242" num="0241">The timer <b>1014</b> can time the change in value to provide at least one detection time measurement.</p><p id="p-0243" num="0242">The time-stamper <b>1060</b> can timestamp the data event based on the at least one detection time measurement. For example, the time-stamper <b>1060</b> can record, in association with the data event, a timestamp based on the at least one detection time measurement. In some cases, the timestamp can be stored in the memory <b>1052</b>. In other cases, the timestamp may be appended to a data packet <b>126</b>. In some embodiments, the processor <b>1050</b> can timestamp the data event. In some embodiments, the detector <b>1024</b> can timestamp the data event. In some embodiments, the time-stamper can be a component of the detector <b>1024</b>.</p><p id="p-0244" num="0243">In some embodiments, the processor <b>1050</b> may modify or adjust the timestamp to compensate for the latencies of one or more components and/or connections between two or more components of the timestamping system <b>2002</b>. The processor <b>150</b> can determine the latencies of the one or more components. The latencies may be stored in the memory <b>1052</b>. In some cases, one latency stored in the memory <b>1052</b> can be used to adjust multiple determined latencies. For example, a latency related to the physical path length of a network path may be used to adjust the determined latencies of different network devices <b>116</b>.</p><p id="p-0245" num="0244">The processor <b>1050</b> can determine the latency of one or more components and/or connections of the timestamping system <b>2002</b> in various ways. In some embodiments, the determination can involve transmitting a signal through a component or a connection. The processor <b>1050</b> can determine the latency of the component or connection based on the signal. For example, the processor <b>1050</b> can determine the time of flight of the signal through the component or connection. For instance, the processor <b>1050</b> may compare the time at which the signal is input to the component or connection and the time at which the signal is output by the component or connection. Various inputs may be supplied to the processor <b>1050</b> to determine the latency of the component or connection.</p><p id="p-0246" num="0245">For example, the processor <b>1050</b> can determine the latency of a network path <b>1036</b>, along which the signals of the signal profile <b>106</b> are transmitted from the signal generator <b>1004</b> to the sampler <b>1008</b>. The latency of the network path <b>1036</b> may be stored in the memory <b>1052</b>. The processor <b>1050</b> can determine the timestamp based at least partly on the latency of the network path <b>1036</b>.</p><p id="p-0247" num="0246">In another example, the processor <b>1050</b> can determine the latency of the detector <b>1024</b> detecting the data event and instructing the signal generator <b>1004</b> to change operational modes. The latency of the detector <b>1024</b> may be stored in the memory <b>1052</b>. The processor <b>1050</b> can determine the timestamp based at least partly on the detector latency.</p><p id="p-0248" num="0247">Optionally, a conversion link (not shown) can be coupled between the signal generator <b>1004</b> and the sampler <b>1008</b>. As described above, the conversion link can convert the format of the signals generated by the signal generator <b>1004</b> so that the signals can be received by the sampler <b>1008</b>.</p><p id="p-0249" num="0248">Optionally, a communication port <b>1022</b> can be coupled to the detector <b>1024</b>. The communication port <b>1022</b> can receive data packets <b>1026</b>. The communication port <b>1022</b> can be coupled to the detector <b>1024</b> so that the packets <b>126</b> received by the communication port <b>1022</b> can be read by the detector <b>1024</b>.</p><p id="p-0250" num="0249">In some embodiments, the detector <b>1024</b> can detect each data event in a plurality of data events. The detector <b>1024</b> can instruct the signal generator <b>1004</b> to define a plurality of pulse portions <b>202</b> of the signal profile <b>106</b>. The plurality of pulse portions <b>202</b> can include an associated pulse portion <b>202</b> for each data event.</p><p id="p-0251" num="0250">The pulse detector <b>1028</b> can detect a plurality of changes in value of the plurality of pulse portions <b>202</b> relative to a plurality of non-pulse portions <b>204</b>.</p><p id="p-0252" num="0251">The timer <b>1014</b> can provide a plurality of at least one detection time measurements. The plurality of at least one time measurements can include an associated at least one detection time measurement for each data event.</p><p id="p-0253" num="0252">The processor <b>1050</b> can determine the timestamp for each data event based on the associated at least one detection time measurement for that data event. In some embodiments, the processor <b>1050</b> can determine the timestamp for each data event based on the latency of the network path <b>1036</b> and the latency of the detector <b>1024</b>. For example, the processor <b>1050</b> can retrieve the latency of the network path <b>1036</b> and the latency of the detector <b>1024</b> from the memory <b>1052</b>.</p><p id="p-0254" num="0253">Numerous specific details are set forth herein in order to provide a thorough understanding of the exemplary embodiments described herein. However, it will be understood by those of ordinary skill in the art that these embodiments may be practiced without these specific details. In other instances, well-known methods, procedures and components have not been described in detail so as not to obscure the description of the embodiments. Furthermore, this description is not to be considered as limiting the scope of these embodiments in any way, but rather as merely describing the implementation of these various embodiments.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A signal timing method, the method comprising:<claim-text>providing a FPGA circuit comprising a serializer for converting data streams between serial transmission and parallel transmission and a signal generator for defining signal profiles, the serializer comprising a serial input sampler for sampling signals received at the serializer, and a clock multiplier for changing signal frequencies, wherein a clock speed of at least one portion of the FPGA circuit is lower than a clock speed of the clock multiplier;</claim-text><claim-text>reconfiguring the clock multiplier to provide the clock speed of the clock multiplier to the serial input sampler;</claim-text><claim-text>reconfiguring the serial input sampler to operate at the clock speed of the clock multiplier;</claim-text><claim-text>during a first mode of operation, operating the signal generator to define a signal profile;</claim-text><claim-text>instructing the signal generator to change from operating in the first mode of operation to operating in a second mode of operation, wherein the signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation, and wherein the signal profile defined by the signal generator during at least one of the first mode of operation and the second mode of operation is defined by the signal generator transmitting a signal to the serializer;</claim-text><claim-text>operating the serial input sampler to operate at the clock speed of the clock multiplier to sample the signal profile;</claim-text><claim-text>detecting a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; and</claim-text><claim-text>timing the change in value to provide at least one detection time measurement.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. (canceled)</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the clock speed of the clock multiplier is greater than 4 gigahertz.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the clock speed of the clock multiplier is greater than 15 gigahertz.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>operating the serial input sampler to sample the signal profile comprises sampling the signal profile at the clock speed of the clock multiplier to generate a plurality of bits, each bit of the plurality of bits corresponding to a value of the signal profile during the sampling; and</claim-text><claim-text>detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation comprises detecting at least one change in value in the plurality of bits.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein timing the change in value to provide the at least one detection time measurement comprises counting a number of bits sampled until the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation is detected.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising<claim-text>connecting the FPGA circuit to a network device;</claim-text><claim-text>providing an internal network path from the signal generator to the serializer without traversing the network device;</claim-text><claim-text>providing an external network path from the signal generator to the serializer via the network device, wherein<claim-text>operating the signal generator to define the signal profile comprises transmitting the signal through the internal network path and the external network path to the serializer,</claim-text><claim-text>operating the serial input sampler to sample the signal profile comprises sampling the signal profile corresponding to the signal i) received via the internal network path and then ii) received via the external network path, and</claim-text><claim-text>detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation comprises detecting the change in the signal profile corresponding to the signal i) received via the internal network path at a first detection time, and then ii) received via the external network path at a second detection time; and,</claim-text></claim-text><claim-text>determining the latency in the network device based at least partly on a detection time difference between the first detection time and the second detection time;</claim-text><claim-text>wherein the at least one detection time measurement comprises the first detection time, the second detection time, and the detection time difference.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method as defined in <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein determining the detection time difference comprises counting a number of bits sampled between the first detection time and the second detection time.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method as defined in <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein<claim-text>the external network path comprises a plurality of links, including the network device and at least one other link, not included in the internal network path;</claim-text><claim-text>the method further comprises determining a latency of the at least one other link; and</claim-text><claim-text>the latency in the network device is determined based on the latency of the at least one other link and the detection time difference.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method as defined in <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein<claim-text>the internal network path and the external network path merge at a merging link;</claim-text><claim-text>the signal transmitted through the internal network path merges at the merging link with that signal transmitted through the external network path to create a merged signal, the merged signal defining a merged signal profile comprising two changes in the signal profile, each change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation;</claim-text><claim-text>the merged signal is transmitted to the serial input sampler;</claim-text><claim-text>operating the serial input sampler to sample the signal profile comprises operating the serial input sampler to sample the merged signal profile; and</claim-text><claim-text>detecting the change in the signal profile comprises detecting the change in the signal profile at the first detection time and then at the second detection time.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method as defined in <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the merging link is an OR gate for merging the signal of the internal network path and the signal of the external network path to provide the merged signal.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method as defined in <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the internal network path and the external network path share a conversion link for transmitting the signal between the merging link and the serializer;</claim-text><claim-text>the signal generated by the signal generator has a first signal format;</claim-text><claim-text>the merged signal at the merging link has the first signal format;</claim-text><claim-text>the conversion link comprises a plurality of circuit components, including at least one capacitor and at least one resistor, for converting the signal from the first signal format to a second signal format such that the serializer receives the signal in the second signal format.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method as defined in <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein<claim-text>the plurality of circuit components further comprises at least one biasing component; and</claim-text><claim-text>converting the signal from the first signal format to the second signal format comprises modifying a voltage level of the signal.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method as defined in <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein<claim-text>the first signal format comprises a low voltage differential signaling format; and</claim-text><claim-text>the second signal format comprises a current mode logic format.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method as defined in <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising<claim-text>determining that the signal generated by the signal generator has a first signal format different than a second signal format required by the network device;</claim-text><claim-text>converting the signal from the first signal format to the second signal format so that the signal has the second signal format when the signal traverses the network device; and</claim-text><claim-text>converting the signal received from the network device from the second signal format back to the first signal format so that the signal has the first signal format when the signal traverses a portion of the external network path between the network device and the serializer.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method as defined in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein<claim-text>the first signal standard comprises a first signal frequency, wherein the first signal frequency corresponds to the clock speed of the at least one portion of the FPGA circuit; and</claim-text><claim-text>the second signal standard comprises a second signal frequency within a frequency range required by the network device, wherein the second signal frequency is greater than the first signal frequency.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method as defined in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the second signal standard is Ethernet.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method as defined in <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein<claim-text>defining the signal profile comprises defining a plurality of signal profiles by operating the signal generator to transmit a plurality of signals through the internal network path and the external network path to the serializer, each signal in the plurality of signals having a corresponding signal profile in the plurality of signal profiles, each signal profile in the plurality of signal profiles comprising a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation;</claim-text><claim-text>operating the serial input sampler to sample the signal profile comprises operating the serial input sampler to sample each signal in the plurality of signals i) received via the internal network path, and then ii) received via the external network path;</claim-text><claim-text>detecting the change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation comprises detecting, for each signal profile in the plurality of signal profiles, the change in the signal profile corresponding to i) the signal received via the internal network path at a first detection time, and then ii) the signal received via the external network path at a second detection time;</claim-text><claim-text>the method further comprises determining, for the plurality of signal profiles, an average detection time difference between the first detection time and the second detection time; and</claim-text><claim-text>determining the latency in the network device comprises determining the latency in the network device based at least partly on the average detection time difference.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising<claim-text>operating a detector to detect data event;</claim-text><claim-text>upon the detector detecting the data event, instructing the signal generator of the FPGA circuit to change from operating in the first mode of operation to operating in a second mode of operation; and</claim-text><claim-text>recording in association with the data event a timestamp based on the at least one detection time measurement.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method as defined in <claim-ref idref="CLM-00019">claim 19</claim-ref> wherein<claim-text>the signal is transmitted from the signal generator to the serializer along a network path;</claim-text><claim-text>the method further comprises determining a latency of the network path; and</claim-text><claim-text>the timestamp is determined based at least partly on the latency of the network path.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The method as defined in <claim-ref idref="CLM-00020">claim 20</claim-ref> wherein<claim-text>the method further comprises determining a latency of the detector detecting the data event and the instructing the signal generator of the FPGA circuit to change from operating in the first mode of operation to operating in the second mode of operation; and</claim-text><claim-text>the timestamp is determined further based at least partly on the latency of the detector detecting the data event and then instructing the signal generator of the FPGA circuit to change from operating in the first mode of operation to operating in the second mode of operation.</claim-text></claim-text></claim><claim id="CLM-22-23" num="22-23"><claim-text><b>22</b>.-<b>23</b>. (canceled)</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method as defined in <claim-ref idref="CLM-00019">claim 19</claim-ref> further comprising receiving a data packet comprising a payload preceded by a preamble, wherein the detector comprises a data reader, and operating the detector to detect the data event comprises operating the data reader to detect at least a portion of the payload of the data packet.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. A signal-timing FPGA circuit comprising:<claim-text>a serializer for converting data streams between serial transmission and parallel transmission, the serializer comprising a serial input sampler for sampling signals received at the serializer, and a clock multiplier for changing signal frequencies;</claim-text><claim-text>a pulse detector for detecting a change in value in the sampled signals;</claim-text><claim-text>at least one slower portion having a slower clock speed, the slower clock speed being slower than a clock speed of the clock multiplier;</claim-text><claim-text>a timer in communication with the serializer; and</claim-text><claim-text>a signal generator for defining a signal profile, the signal generator having a first mode of operation and a second mode of operation, wherein the signal profile defined by the signal generator in the first mode of operation differs from the signal profile defined by the signal generator in the second mode of operation, and wherein the signal generator defines the signal profile during at least one of the first mode of operation and the second mode of operation by transmitting a signal to the serializer via the at least one slower portion,; wherein, in operation, the clock multiplier provides the clock speed of the clock multiplier to the serial input sampler;</claim-text><claim-text>the serial input sampler operates at the clock speed of the clock multiplier to sample the signal profile at the serializer;</claim-text><claim-text>the pulse detector detects a change in the signal profile corresponding to the signal generator changing from operating in the first mode of operation to operating in the second mode of operation; and</claim-text><claim-text>based on the pulse detector detecting the change in the signal profile, the timer determines at least one detection time measurement.</claim-text></claim-text></claim><claim id="CLM-26-93" num="26-93"><claim-text><b>26</b>.-<b>93</b>. (canceled)</claim-text></claim></claims></us-patent-application>