<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005307A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005307</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17808929</doc-number><date>20220624</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>GB</country><doc-number>2109558.3</doc-number><date>20210701</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>07</class><subclass>C</subclass><main-group>5</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>07</class><subclass>C</subclass><main-group>5</main-group><subgroup>0808</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>07</class><subclass>C</subclass><main-group>5</main-group><subgroup>0816</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">Automotive Controller System</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Aptiv Technologies Limited</orgname><address><city>St. Michael</city><country>BB</country></address></addressbook><residence><country>BB</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Beier</last-name><first-name>Ralf Anton</first-name><address><city>Dublin</city><country>IE</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Kolelis</last-name><first-name>Konstantinos</first-name><address><city>Dublin</city><country>IE</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and techniques are described herein for configuring an automotive controller within an EE architecture. The automotive controller is connected to other components within the EE architecture. An initialisation process is activated in the automotive controller in which the automotive controller determines diagnostic data for identifying other components connected to it within the EE architecture. The diagnostic data is transmitted from the automotive controller to an update controller. An identifier is assigned to the automotive controller by the update controller based on a location within the EE architecture determined from the diagnostic data. The software in the automotive controller is then updated based on the determined location.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="101.18mm" wi="147.24mm" file="US20230005307A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="224.28mm" wi="131.23mm" file="US20230005307A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="207.01mm" wi="149.27mm" file="US20230005307A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This application claims priority to United Kingdom Patent Application Number GB2109558.3, filed on Jul. 1, 2022, the disclosure of which is incorporated by reference in its entirety.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The electric/electronic (EE) architecture of vehicles has become more complex in recent times. Indeed, with the increasing prevalence of autonomous driving and the integration of enhanced safety and entertainment technologies, it is not uncommon for vehicles now to possess in excess of 150 electronic control units (ECUs). Many of these ECUs are also required to interact and communicate with one another. As such, it is typical to have many of the ECUs in a vehicle specifically manufactured for that particular vehicle configuration. That is, the ECUs for a vehicle will be manufactured with an imprinted Software ID (SWID) and specific I/O connectors for the specific EE architecture in the intended vehicle. This thereby allows peripheral ECUs to communicate with each other and the associated central ECU vehicle controller.</p><p id="p-0004" num="0003">A problem with the above conventional arrangements, however, is that it often prevents parts from being reused. That is, an ECU from one vehicle model can often not be fitted to another vehicle model, even if the hardware is similar, because its configuration may be different.</p><p id="p-0005" num="0004">More recently, there has also been a shift toward zonal EE architectures, where a limited number of ECU zone controllers are used to support both power distribution and data connection requirements within a particular region of the vehicle. Zonal architectures are attractive because they have the potential to provide significant advantages in terms of reductions in complexity and wiring costs. Another significant advantage is the potential to use more standardised components, with the functionality being altered depending on where the component is installed within the vehicle's EE architecture. For instance, it would be desirable to be able to use the same ECU in different vehicle zones and in different vehicles to perform a variety of functions. Not only would this provide an economy of scale benefit, but it would also reduce wastage and simplify subsequent vehicle repairs. However, this is not possible with existing EE architectures.</p><p id="p-0006" num="0005">Accordingly, there is a need for improved systems for addressing the above shortcomings.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">The present disclosure relates to system and techniques of configuring an automotive controller, an automotive controller, and an automotive controller system. The present disclosure also describes automotive controller software and update controller software. Further, systems and techniques are described for enabling vehicle hardware component discovery to allow for simple initial component installation and subsequent upgrades.</p><p id="p-0008" num="0007">According to a first aspect, there is provided a method of configuring an automotive controller within an EE architecture including: connecting the automotive controller to other components within the EE architecture; activating an initialisation process in the automotive controller in which the automotive controller determines diagnostic data for identifying other components connected to it within the EE architecture; transmitting the diagnostic data from the automotive controller to an update controller; assigning an identifier to the automotive controller by the update controller based on a location within the EE architecture determined from the diagnostic data; and updating software in the automotive controller based on the determined location.</p><p id="p-0009" num="0008">In implementations, the diagnostic data further includes specification data indicating specification parameters for the automotive controller.</p><p id="p-0010" num="0009">In implementations, the step of updating software in the automotive controller includes storing the assigned identifier at the automotive controller.</p><p id="p-0011" num="0010">In implementations, the step of transmitting the diagnostic data from the automotive controller to an update controller includes a security handshake for establishing secure data transmission between the automotive controller and the update controller.</p><p id="p-0012" num="0011">In implementations, the step of updating software in the automotive controller includes downloading a software update data from the update controller to a memory in the automotive controller.</p><p id="p-0013" num="0012">In implementations, the method further includes the step of reporting an error by the update controller if the received diagnostic data from the automotive controller does not correspond to valid diagnostic data stored in a EE architecture data store of the update controller.</p><p id="p-0014" num="0013">According to a second aspect, there is provided an automotive controller including: one or more I/O ports; a processor; a memory for storing instructions for execution by the processor, the instructions including: instructions for implementing an initialisation process in which the automotive controller determines diagnostic data for identifying other components connected to it within the EE architecture through the one or more I/O ports, and instructions for transmitting the diagnostic data to an update controller, instructions for receiving an assigned identifier from the update controller, instructions for receiving software update data from the update controller, wherein the software update data is based on a location within the EE architecture determined from the diagnostic data; and instructions for updating software in the automotive controller using the assigned identifier and software update data.</p><p id="p-0015" num="0014">In implementations, the one or more I/O ports include a plurality of I/O ports for connection to other components within the EE architecture.</p><p id="p-0016" num="0015">In implementations, the one or more I/O ports include one or more I/O hub ports for connection to an I/O hub that connects to other components within the EE architecture.</p><p id="p-0017" num="0016">According to a third aspect, there is provided an automotive controller system, including: a plurality of automotive controllers and devices connected in an EE architecture; and an update controller for establishing a data connection to one or more of the automotive controllers, wherein the one or more of the automotive controllers are configured to activate an initialisation process for determining diagnostic data identifying other components connected to it within the EE architecture and transmit the diagnostic data to the update controller, and wherein the update controller is configured to determine a location within the EE architecture for each of the one or more automotive controllers based on the diagnostic data, and then assign and transmit a respective identifier and software update data based on the determined location for updating the respective automotive controller.</p><p id="p-0018" num="0017">In implementations, the one or more of the automotive controllers are standardised and include a memory storing instructions for execution by a processor, the instructions including: instructions for implementing an initialisation process in which the respective automotive controller determines diagnostic data for identifying other components connected to it within the EE architecture; instructions for transmitting the diagnostic data to the update controller; instructions for receiving an assigned identifier from the update controller; instructions for receiving software update data from the update controller, wherein the software update data is based on a location within the EE architecture determined from the diagnostic data; and instructions for updating software in the automotive controller using the assigned identifier and software update data.</p><p id="p-0019" num="0018">According to a fourth aspect, there is provided non-transitory computer readable medium including instructions stored therein for execution by a processor within an automotive controller, the instructions including: instructions for implementing an initialisation process in which the automotive controller determines diagnostic data for identifying other components connected to it within an EE architecture through one or more I/O ports; instructions for transmitting the diagnostic data to an update controller; instructions for receiving an assigned identifier from the update controller; instructions for receiving software update data from the update controller, wherein the software update data is based on a location within the EE architecture determined based on the diagnostic data; and instructions for updating software in the automotive controller using the assigned identifier and the software update data.</p><p id="p-0020" num="0019">According to a fifth aspect, there is provided non-transitory computer readable medium including instructions stored therein for execution by a processor within an update controller, the instructions including: instructions for receiving diagnostic data from an automotive controller, the diagnostic data for identifying other components connected to the automotive controller within an EE architecture through one or more I/O ports; instructions for determining a location of the automotive controller within the EE architecture based on the diagnostic data; instructions for assigning an identifier to the automotive controller based on the determined location; and instructions for transmitting software update data to the automotive controller based on the determined location for updating software in the automotive controller.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0021" num="0020">Illustrative implementations will now be described with reference to the accompanying drawings in which:</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a schematic illustration of a vehicle EE architecture incorporating ECUs according to a first illustrative implementation;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a schematic illustration of an ECU according to a second illustrative implementation; and</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an ECU configuration process according to an illustrative implementation.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a schematic illustration of a zonal vehicle EE architecture <b>10</b> including a plurality of components connected by a network of wiring <b>6</b>. The components include automotive controllers or ECUs, was well as sensor and output devices. In this illustrative example, the EE architecture <b>1</b> includes four zone controllers <b>2</b><i>a</i>-<i>d </i>which function as hubs to a plurality of devices <b>7</b> within a quadrant zone of the vehicle <b>1</b>. The devices <b>7</b> include sensors, such as LiDAR, RADAR, cameras, and ultrasonic sensors, as well as output devices such as speakers, lights and actuators. The devices <b>7</b> are connected to the respective zone controller <b>2</b><i>c</i>-<i>d </i>within the vehicle zone in which they are located.</p><p id="p-0026" num="0025">The zone controllers <b>2</b><i>a</i>-<i>d </i>are in turn connected to a central vehicle controller <b>5</b> and open server platforms <b>3</b><i>a</i>-<i>b, </i>both of which are in turn connected to a Propulsion and Chassis Controller <b>4</b>. The open server platforms <b>3</b><i>a</i>-<i>b </i>also control displays 6 within the vehicle. The central vehicle controller <b>5</b> is connected to an antenna <b>8</b> for over-the-air (OTA) communication.</p><p id="p-0027" num="0026">With the above arrangement, the zone controllers <b>2</b><i>a</i>-<i>d, </i>central vehicle controller <b>5</b>, open server platforms <b>3</b><i>a</i>-<i>b, </i>and Propulsion and Chassis Controller <b>4</b>, are powerful Electronic Control Units (ECUs) which perform a variety of functions. The ECUs and devices <b>7</b> are networked together through wiring <b>6</b>.</p><p id="p-0028" num="0027">It will be understood that different vehicles may have different EE architectures to the EE architecture <b>10</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, in other arrangements, two or three zone controllers <b>2</b> may be provided, rather than the four zone controllers <b>2</b><i>a</i>-<i>d </i>shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. As a consequence, in such EE architectures, the wiring connections <b>6</b> between components may be different, even though the ECUs may be similar or identical. To facilitate this, in this implementation, the ECUs are provided with a plurality of I/O ports to allow them to be connected to one another and to other devices <b>7</b> in a variety of configurations. Alternatively, <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a schematic illustration of an alternative arrangement in which the ECU <b>20</b> is provided with a separate I/O module <b>21</b> to the main processing module <b>22</b>. In such arrangements, the I/O module <b>21</b> may include a plurality of I/O ports <b>24</b> tailored to a specific vehicle or location configuration, with different I/O modules being available for different applications. In use, an I/O module <b>21</b> is selected depending on the required application, and this is connected to a standardised main processing module <b>22</b> via hub connector <b>23</b>. As such, with both options, all the necessary I/O ports may be provided to allow a standardised ECU to be used in several different vehicle types and locations within the vehicle.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an ECU configuration process according to an illustrative implementation. During vehicle manufacture, the same standardised ECU may be used in multiple locations, for example as any one of zone controllers <b>2</b><i>a</i>-<i>d. </i>The ECU unit is provided with base software that is common to all ECU devices of that type, irrespective of its ultimate installation location within the EE architecture.</p><p id="p-0030" num="0029">Once an ECU, for example zone controller <b>2</b><i>a, </i>has been installed into the vehicle and has been connected to its associated devices <b>7</b> and other ECUs <b>2</b><i>b</i>-<i>d, </i><b>3</b>,<b>5</b> through its I/O ports and wiring <b>6</b>, it can be activated to initiate an initialisation step <b>31</b>, as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. During the initialisation step <b>31</b>, the ECU collects diagnostic information regarding its own specification and its surroundings. The specification data may include, for example, information on the ECUs processors, switches, ram, and tmp modules. The surroundings data may include, for example, information on the ECUs connections to other ECUs <b>2</b><i>b</i>-<i>d, </i><b>3</b>, <b>5</b> and other devices <b>7</b>, as well as I/O signal characteristics. The surroundings data may be collated in a network graph by the ECUs base software. A number of ECUs may be activated simultaneously such that they undergo their initialisation steps concurrently.</p><p id="p-0031" num="0030">In step <b>32</b>, the newly activated ECUs transmit their respective diagnostic information to an update controller <b>9</b>. The update controller <b>9</b> includes a data store containing data of the vehicle's ECU infrastructure, as well as the specific vehicle identifier (VIN) for the vehicle <b>1</b>. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in this implementation, the update controller <b>9</b> is provided outside the vehicle and is connected to the ECUs during the configuration process via a wireless data link through antenna <b>8</b>. In other implementations, a wired connection may be used, and alternatively, the update controller <b>9</b> may be provided in the vehicle itself. For example, the central vehicle controller <b>5</b> may incorporate the integrated update controller <b>9</b>. The update controller <b>9</b> contains pre-stored security keys for secure data communications with the ECUs.</p><p id="p-0032" num="0031">In step <b>23</b>, the update controller <b>9</b> receives the diagnostic information from the ECUs and identifies the required functions of each ECU based on this and its stored ECU infrastructure data. The update controller <b>9</b> then assigns each ECU the appropriate software identifier (SWID) for identifying the ECU within the EE architecture.</p><p id="p-0033" num="0032">In step <b>24</b>, the update controller <b>9</b> transmits update data to each ECU for updating its software based on its assigned SWID for functioning in its installed location. That is, for example, the ECU <b>2</b><i>a </i>installed in the front-left of the vehicle may be identified as the front-left zonal controller based on its connections to other devices and ECUs. The update controller <b>9</b> then updates ECU <b>2</b><i>a </i>with the required rules and policies to behave as the front-left zonal controller. As such, the ECU <b>2</b><i>a </i>software is updated to receive and process input data from the associated camera, ultrasonic and LiDAR sensors in this region of the vehicle, as well as output control signals to the connected speakers and actuators. It will be understood that the update controller <b>9</b> may not need to install completely new ECU software, but rather may update settings and configuration information to activate specific functions appropriate for that ECU location. The update controller <b>9</b> may also update the ECU to record the vehicle's VIN.</p><p id="p-0034" num="0033">In this way, standardised ECUs containing a base software platform may be installed into a vehicle and an initialisation step may be used as a discovery phase to allow each ECU to identify its neighbouring devices and location within the vehicle. The update server <b>9</b> may then download the appropriate software update to each ECU to allow the EE architecture to operate correctly. This thereby allows ECUs to be used in different vehicle models and locations within the vehicle.</p><p id="p-0035" num="0034">Furthermore, the above system also allows a greater variety of other devices <b>7</b> to be used in conjunction with the ECUs. For example, different components and sub-components may be identified by the respective ECU in the initialisation phase and the updated ECU settings provided by update controller <b>9</b> may be selected for optimising operations with these particular components. The stored configuration data at the update controller <b>9</b> may also itself be updated to include new device drivers as new components become available. As such, greater flexibility within the EE architecture may be achieved.</p><p id="p-0036" num="0035">The system also provides for assembly mistakes to be identified early and rectified. For example, if the specification data for a particular ECU indicates it is damaged or it is unsuitable for use in the location it has been installed, the update controller <b>9</b> can identify this based on the ECU infrastructure data stored in its memory. The identification of an invalid specification which does not match an intended target location can thereby be used to prompt the generation of an error report by the update controller <b>9</b>. This may therefore provide early stage fault detection.</p><p id="p-0037" num="0036">ECUs may also be easily replaced under the system. This may facilitate ECU components to be replaced in the event of a defect or upgraded as new technologies become available. In such a scenario, the existing ECU may be removed, and a new replacement ECU may be substituted in its place. The new ECU may then be activated to begin the configuration process. As with the process shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the new ECU undertakes an initialisation step and outputs diagnostic data to the update controller <b>9</b>, which then updates the new ECU with the appropriate software settings for its installed location, along with the associated SWID and VIN. This update process may be protected by a security protocol available to only authorised car dealerships to ensure integrity of the ECU operating systems.</p><p id="p-0038" num="0037">It will be understood that the implementations illustrated above show applications only for the purposes of illustration. In practice, implementations may be applied to many different configurations, the detailed implementations being straightforward for those skilled in the art to implement.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of configuring an automotive controller within an electric/electronic (EE) architecture comprising:<claim-text>connecting the automotive controller to other components within the EE architecture via one or more input/output (<b>1</b>/<b>0</b>) ports in the automotive controller;</claim-text><claim-text>activating an initialisation process in a controller processor in the automotive controller in which the automotive controller determines diagnostic data for identifying other components connected to it within the EE architecture;</claim-text><claim-text>transmitting the diagnostic data by the controller processor from the automotive controller to an update controller;</claim-text><claim-text>assigning an identifier to the automotive controller by an update processor in the update controller based on a location within the EE architecture determined from the diagnostic data; and</claim-text><claim-text>updating software stored in a memory in the automotive controller based on the location within the EE architecture determined from the diagnostic data.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the diagnostic data further includes specification data indicating specification parameters for the automotive controller.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of updating software in the automotive controller comprises storing the assigned identifier in the memory of the automotive controller.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of transmitting the diagnostic data from the automotive controller to the update controller comprises the controller processor performing a security handshake with the update processor for establishing secure data transmission between the automotive controller and the update controller.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of updating software in the memory of the automotive controller comprises the controller processor downloading software update data from an update data store at the update controller to the memory in the automotive controller.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the step of the update processor of the update controller reporting an error if diagnostic data received from the automotive controller does not correspond to valid diagnostic data stored in a EE architecture data store of the update controller.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. An automotive controller comprising:<claim-text>one or more I/O ports;</claim-text><claim-text>a processor;</claim-text><claim-text>a memory for storing instructions for execution by the processor, the instructions comprising:<claim-text>instructions for implementing an initialisation process in which the automotive controller determines diagnostic data for identifying other components connected to it within an EE architecture through the one or more I/O ports, and</claim-text><claim-text>instructions for transmitting the diagnostic data to an update controller,</claim-text><claim-text>instructions for receiving an assigned identifier from the update controller,</claim-text><claim-text>instructions for receiving software update data from the update controller, wherein the software update data is based on a location within the EE architecture determined from the diagnostic data; and</claim-text><claim-text>instructions for updating software in the automotive controller using the assigned identifier and software update data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The automotive controller according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the one or more I/O ports comprise a plurality of I/O ports for connection to other components within the EE architecture.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The automotive controller according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the one or more I/O ports comprise one or more I/O hub ports for connection to an I/O hub that connects to other components within the EE architecture.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. An automotive controller system comprising:<claim-text>a plurality of automotive controllers and devices connected in an EE architecture;</claim-text><claim-text>an update controller for establishing a data connection to one or more of the automotive controllers;</claim-text><claim-text>wherein the one or more of the automotive controllers are configured to activate an initialisation process for determining diagnostic data identifying other components connected to it within the EE architecture and transmit the diagnostic data to the update controller, and</claim-text><claim-text>wherein the update controller is configured to determine a location within the EE architecture for each of the one or more automotive controllers based on the diagnostic data, and then assign and transmit a respective identifier and software update data based on the determined location for updating the respective automotive controller.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The automotive controller system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the one or more of the automotive controllers are standardised and comprise a memory storing instructions for execution by a processor, the instructions comprising:<claim-text>instructions for implementing an initialisation process in which the respective automotive controller determines diagnostic data for identifying other components connected to it within the EE architecture;</claim-text><claim-text>instructions for transmitting the diagnostic data to the update controller;</claim-text><claim-text>instructions for receiving an assigned identifier from the update controller;</claim-text><claim-text>instructions for receiving software update data from the update controller, wherein the software update data is based on a location within the EE architecture determined from the diagnostic data; and</claim-text><claim-text>instructions for updating software in the automotive controller using the assigned identifier and software update data.</claim-text></claim-text></claim></claims></us-patent-application>