<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004645A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004645</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17777999</doc-number><date>20200907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>PCT/JP2019/046683</doc-number><date>20191128</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>56</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>561</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e61">LABELING DEVICE AND LABELING PROGRAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NIPPON TELEGRAPH AND TELEPHONE CORPORATION</orgname><address><city>Chiyoda-ku</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KUROGOME</last-name><first-name>Yuma</first-name><address><city>Musashino-shi, Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>IWAMURA</last-name><first-name>Makoto</first-name><address><city>Musashino-shi, Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>MIYOSHI</last-name><first-name>Jun</first-name><address><city>Musashino-shi, Tokyo</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>NIPPON TELEGRAPH AND TELEPHONE CORPORATION</orgname><role>03</role><address><city>Tokyo</city><country>JP</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/JP2020/033818</doc-number><date>20200907</date></document-id><us-371c12-date><date>20220519</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A labeling apparatus includes processing circuitry configured to extract a feature of malware to be labeled and features of a malware group with a known label, and identify malware or a malware group with a feature among the features of the malware group that is most similar to the feature of the malware to be labeled based on a degree of similarity between the feature of the malware to be labeled and each of the features of the malware group extracted, and give a label that has been given to the malware or the malware group to the malware to be labeled.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="210.57mm" wi="143.43mm" file="US20230004645A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="110.57mm" wi="153.59mm" file="US20230004645A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="235.54mm" wi="39.03mm" orientation="landscape" file="US20230004645A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="233.93mm" wi="122.77mm" orientation="landscape" file="US20230004645A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="223.86mm" wi="152.06mm" file="US20230004645A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="207.86mm" wi="156.21mm" orientation="landscape" file="US20230004645A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present disclosure relates to a labeling apparatus and a labeling program.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">Labels for malware are used in creating datasets to be used when malware is to be classified. As such labels, detection names created by antivirus software (hereinafter referred to as an &#x201c;antivirus&#x201d;) may be used. In this case, one label is given to one piece of malware.</p><p id="p-0004" num="0003">There are samples of malware that are difficult for a certain antivirus to label. To deal with such a situation, there is an approach called AVCLASS in which one or more label candidates are listed using antiviruses of multiple companies to generate and give a label obtained by normalizing and aggregating the candidates.</p><heading id="h-0003" level="1">CITATION LIST</heading><heading id="h-0004" level="1">Non Patent Literature</heading><p id="p-0005" num="0000"><ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0004">NPL 1: Marcos Sebastian, Richard Rivera, Platon Kotzias, and Juan Caballero. 2016. &#x201c;AVclass: A Tool for Massive Malware Labeling&#x201d;. In Proceedings of the 19th International Symposium on Research in Attacks, Intrusions and Defenses (RAID&#x2032;16). 230-253.</li>    <li id="ul0001-0002" num="0005">NPL 2: Hyrum S. Anderson and Phil Roth. 2018. &#x201c;EMBER: An Open Dataset for Training Static PE Malware Machine Learning Models&#x201d;, CoRR, abs/1804.04637.</li>    <li id="ul0001-0003" num="0006">NPL 3: Xiaojin Zhu and Zoubin Ghahramani, 2002. &#x201c;Learning from Labeled and Unlabeled Data with Label Propagation&#x201d;, Technical Report CMU-CALD-02-107, Carnegie Mellon University.</li></ul></p><heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading><heading id="h-0006" level="1">Technical Problem</heading><p id="p-0006" num="0007">The techniques in the related art sometimes cannot properly label malware. For example, because the approach AVCLASS described above is based on the premise that label candidates are generated, malware would not be labeled if no label candidate is output. Further, in a case in which random character strings automatically generated by antiviruses are included as labels in label candidates, a useful label may not be given.</p><heading id="h-0007" level="1">Means for Solving the Problem</heading><p id="p-0007" num="0008">In order to solve the above-described problem and achieve the objective, a labeling apparatus according to the present disclosure includes: a feature extraction unit configured to extract a feature of malware to be labeled and features of a malware group with a known label; and a labeling unit configured to identify malware or a malware group with a feature among the features of the malware group that is most similar to the feature of the malware to be labeled based on a degree of similarity between the feature of the malware to be labeled and each of the features of the malware group extracted by the feature extraction unit, and give a label that has been given to the malware or the malware group to the malware to be labeled.</p><heading id="h-0008" level="1">Effects of the Invention</heading><p id="p-0008" num="0009">According to the present disclosure, it is possible to exhibit the effect that a label can be appropriately given to malware even when there are no label candidates.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0009" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0009" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating an example of a configuration of a labeling apparatus according to a first embodiment.</p><p id="p-0010" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram describing an overview of processing by a list acquisition unit.</p><p id="p-0011" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram describing an overview of processing by a feature extraction unit and a labeling unit.</p><p id="p-0012" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart showing an example of labeling processing by the labeling apparatus according to the first embodiment.</p><p id="p-0013" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating a computer that executes a labeling program.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0010" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0014" num="0015">Embodiments of a labeling apparatus and a labeling program according to the present application will be described below in detail with reference to the drawings. Further, the labeling apparatus and labeling program according to the present application are not limited to the embodiments.</p><heading id="h-0011" level="1">First Embodiment</heading><p id="p-0015" num="0016">In the following embodiment, a configuration of a labeling apparatus <b>10</b> and a flow of processing of the labeling apparatus <b>10</b> according to a first embodiment will be described in order, and finally effects of the first embodiment will be described.</p><p id="p-0016" num="0017">Configuration of Labeling Apparatus</p><p id="p-0017" num="0018">First, a configuration of the labeling apparatus <b>10</b> will be described using <figref idref="DRAWINGS">FIG. <b>1</b></figref>. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating an example of a configuration of the labeling apparatus according to the first embodiment. The labeling apparatus <b>10</b> is an apparatus that automatically gives a label to a sample whose label is unknown, with reference to a sample group of malware with known labels. Further, a malware group (sample group) with known labels is not limited to a malware group in which each piece of the malware has a unique label, and a plurality of pieces of malware with the same label may be included in the group.</p><p id="p-0018" num="0019">The labeling apparatus <b>10</b> includes a communication unit <b>11</b>, an input unit <b>12</b>, and an output unit <b>13</b>, a storage unit <b>14</b>, and a control unit <b>15</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Each of the units will be described below.</p><p id="p-0019" num="0020">The communication unit <b>11</b> is a communication interface on which various types of information are transmitted and/or received to and/or from another apparatus connected via a network or the like. The communication unit <b>11</b> is realized by a network interface card (NIC) or the like and enables the control unit <b>15</b> to communicate with another apparatus via an electrical communication line such as a local area network (LAN) or the Internet.</p><p id="p-0020" num="0021">The input unit <b>12</b> is realized using an input device such as a keyboard or a mouse and inputs various types of instruction information such as instruction information for starting processing to the control unit <b>15</b> in response to an operation input by an operator. The output unit <b>13</b> is realized by a display device such as a liquid crystal display or a printing device such as a printer.</p><p id="p-0021" num="0022">The storage unit <b>14</b> is realized by a semiconductor memory element such as a random access memory (RAM) or a flash memory or a storage device such as a hard disk or an optical disc, and stores a processing program for causing the labeling apparatus <b>10</b> to operate, data to be used during execution of the processing program, and the like.</p><p id="p-0022" num="0023">The control unit <b>15</b> includes an internal memory for storing a program and required data that define various processing procedures and the like and executes various types of processing using the program and the data. For example, the control unit <b>15</b> is an electronic circuit such as a central processing unit (CPU) or a micro processing unit (MPU). The control unit <b>15</b> includes a list acquisition unit <b>15</b><i>a</i>, a feature extraction unit <b>15</b><i>b</i>, and a labeling unit <b>15</b><i>c. </i></p><p id="p-0023" num="0024">The list acquisition unit <b>15</b><i>a </i>acquires a label candidate list created for malware, and identifies malware of the label candidate list as malware to be labeled when the acquired label candidate list is empty.</p><p id="p-0024" num="0025">Here, an overview of processing by the list acquisition unit <b>15</b><i>a </i>will be described using <figref idref="DRAWINGS">FIG. <b>2</b></figref>. <figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram describing an overview of processing by the list acquisition unit. The list acquisition unit <b>15</b><i>a </i>acquires label candidate lists created for a plurality of malware samples as illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Further, processing to create the label candidate lists may be performed by an external apparatus or the labeling apparatus <b>10</b> using an existing method.</p><p id="p-0025" num="0026">Then, upon acquiring the label candidate lists, the list acquisition unit <b>15</b><i>a </i>investigates whether there are one or more label candidates on each label candidate list. That is, the list acquisition unit <b>15</b><i>a </i>investigates whether each label candidate list is empty. Next, if a label is included in the label candidate lists, the list acquisition unit <b>15</b><i>a </i>determines whether the label is a randomly generated character string, and if the label is determined to be a randomly generated character string, the label of the character string is excluded. For example, the list acquisition unit <b>15</b><i>a </i>calculates an index &#x201c;N-gram normality score&#x201d; or &#x201c;Meaningful characters ratio&#x201d; of each label candidate included in each label candidate list to evaluate whether the character string is a random character string, and excludes a label whose calculated index value is below a certain threshold from the candidate list.</p><p id="p-0026" num="0027">In other words, the list acquisition unit <b>15</b><i>a </i>excludes a label of a random character string as a useless label candidate among the label candidates included in the acquired label candidate lists. To describe using a specific example, the list acquisition unit <b>15</b><i>a </i>acquires a label candidate list including, for example, &#x201c;MmNfrHgm40bj1&#x201d;, &#x201c;Trojan.MmNfrHgm40bj1&#x201d;, and &#x201c;Olympus&#x201d; as label candidates. Here, it is assumed that &#x201c;MmNfrHgm40bj1&#x201d; and &#x201c;Trojan.MmNfrHgm40bj1&#x201d; are randomly generated character strings, and only &#x201c;Olympus&#x201d; is a useful label. Thus, the list acquisition unit <b>15</b><i>a </i>uses an index such as &#x201c;N-gram normality score&#x201d; or &#x201c;Meaningful characters ratio&#x201d; to determine whether the label is a randomly generated character string, and if the label is determined to be a randomly generated character string, the label of the character string is excluded as a useless label candidate. Further, an index such as &#x201c;N-gram normality score&#x201d; or &#x201c;Meaningful characters ratio&#x201d; is to identify whether a given character string is constituted by a sequence of letters that are often found in English words. Using this index, it is possible to determine, for example, that &#x201c;MmNfrHgm40bj1&#x201d; is a random character string, and &#x201c;Olympus&#x201d; is not a random character string.</p><p id="p-0027" num="0028">In addition, in a case in which there is an empty label candidate list with no label candidates, the list acquisition unit <b>15</b><i>a </i>identifies a malware sample X of the label candidate list as a malware sample to be labeled.</p><p id="p-0028" num="0029">Returning to the description of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the feature extraction unit <b>15</b><i>b </i>extracts a feature of the malware to be labeled and features of the malware group with known labels. In addition, the feature extraction unit <b>15</b><i>b </i>also converts features extracted from the malware to be labeled and the malware group with known labels into feature vectors.</p><p id="p-0029" num="0030">For example, the feature extraction unit <b>15</b><i>b </i>extracts features such as &#x201c;Byte histogram&#x201d;, &#x201c;printable strings&#x201d;, &#x201c;file size,&#x201d; &#x201c;PE headers&#x201d;, &#x201c;sections&#x201d;, &#x201c;imports&#x201d;, &#x201c;exports&#x201d;, and the like from the malware to be labeled and the malware group with known labels. In addition, the feature extraction unit <b>15</b><i>b </i>then converts the extracted features into vectors.</p><p id="p-0030" num="0031">The labeling unit <b>15</b><i>c </i>identifies malware or a malware group with a feature among the features of the malware group with known labels that is most similar to the feature of the malware to be labeled based on degrees of similarity between the feature of the malware to be labeled and the features of the malware group with known labels extracted by the feature extraction unit <b>15</b><i>b</i>. Then, the labeling unit <b>15</b><i>c </i>gives the label that has been given to the malware or the malware group to the malware to be labeled.</p><p id="p-0031" num="0032">Specifically, the labeling unit <b>15</b><i>c </i>calculates the degree of similarity between the feature vector of the malware to be labeled and each feature vector of the malware group with known labels converted by the feature extraction unit <b>15</b><i>b</i>. Then, the labeling unit <b>15</b><i>c </i>identifies malware or a malware group with a feature vector having the highest degree of similarity among the feature vectors of the malware group with known labels, and gives the label that has been given to the malware or the malware group to the malware to be labeled. Further, any known method may be used as a method of calculating a degree of similarity.</p><p id="p-0032" num="0033">For example, the labeling unit <b>15</b><i>c </i>may create a graph in which the feature vectors of the malware group with known labels and the feature vector of the malware to be labeled are nodes and degrees of similarity between the nodes are weights for edges. In addition, the labeling unit <b>15</b><i>c </i>may propagate a label along the weights from a nearby node to which the node of the malware to be labeled is connected (e.g., NPL 3 described above). In other words, the labeling unit <b>15</b><i>c </i>gives the label of the node of the most similar feature vector to the malware to be labeled.</p><p id="p-0033" num="0034">Here, an overview of processing by the feature extraction unit <b>15</b><i>b </i>and the labeling unit <b>15</b><i>c </i>will be described using <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram describing an overview of processing by the feature extraction unit and the labeling unit. The feature extraction unit <b>15</b><i>b </i>receives, as an input, a file of an sample X of the malware to be labeled and a file group of samples 1 to n of the malware with known labels as illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Then, the feature extraction unit <b>15</b><i>b </i>outputs the feature vector of the sample X and the feature vectors of the samples 1 to n to the labeling unit <b>15</b><i>c. </i></p><p id="p-0034" num="0035">The labeling unit <b>15</b><i>c </i>receives the input of the feature vector of the sample X and the feature vectors of the samples 1 to n from the feature extraction unit <b>15</b><i>b</i>. The labeling unit <b>15</b><i>c </i>also receives the input of the labels of the samples 1 to n generated from the label candidate list by AVCLASS. Further, processing to generate the labels of the samples 1 to n from the label candidate list using AVCLASS may be performed by an external apparatus or the labeling apparatus <b>10</b> using an existing method.</p><p id="p-0035" num="0036">The labeling unit <b>15</b><i>c </i>calculates degrees of similarity between the feature vector of the sample X and the feature vectors of the samples 1 to n, identifies a sample or a sample group with a feature vector having the highest degree of similarity among the feature vectors of the samples 1 to n, and gives the label that has been given to the sample to the malware of the sample X.</p><p id="p-0036" num="0037">In this manner, the labeling apparatus <b>10</b> compares the feature of the file of the sample X with the features of the file group of the samples 1 to n of the malware that already has been labeled when the detection name candidate list for a certain sample X is empty, and gives the label that has been given to similar malware to the malware of the sample X.</p><p id="p-0037" num="0038">Processing Procedure of Labeling Apparatus</p><p id="p-0038" num="0039">Next, an example of a processing procedure performed by the labeling apparatus <b>10</b> according to the first embodiment will be described using <figref idref="DRAWINGS">FIG. <b>4</b></figref>. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart showing an example of labeling processing by the labeling apparatus according to the first embodiment.</p><p id="p-0039" num="0040">The list acquisition unit <b>15</b><i>a </i>of the labeling apparatus <b>10</b> acquires label candidate lists created for malware (step S<b>101</b>), and investigates whether each label candidate list has one or more label candidates (step S<b>102</b>) as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0040" num="0041">Next, the list acquisition unit <b>15</b><i>a </i>excludes a label of a random character string among the label candidates included in the acquired label candidate list (step S<b>103</b>). Specifically, the list acquisition unit <b>15</b><i>a </i>calculates an index value for evaluating whether each label candidate included in the character string of each label candidate list is a random character string, and excludes a label with an index value that is below a certain threshold from the candidate list. Then, if there are one or more label candidates in all of the label candidate lists as a result of performing the investigation (step S<b>104</b>; positive), the list acquisition unit <b>15</b><i>a </i>terminates the processing as is. That is, the labeling apparatus <b>10</b> can generate labels from the label candidate list with the existing AVCLASS for labeling.</p><p id="p-0041" num="0042">On the other hand, if the list acquisition unit <b>15</b><i>a </i>determines that there are no label candidates in the label candidate lists (step S<b>104</b>; negative), the feature extraction unit <b>15</b><i>b </i>extracts a feature vector of the sample to be labeled and feature vectors of the known sample group (step S<b>105</b>).</p><p id="p-0042" num="0043">Then, the labeling unit <b>15</b><i>c </i>compares the feature vector of the sample to be labeled with the feature vectors of the known sample group (step S<b>106</b>), and gives a label of the known sample (or sample group) that is similar to the sample to be labeled to the sample to be labeled (step S<b>107</b>).</p><p id="p-0043" num="0044">Effects of First Embodiment</p><p id="p-0044" num="0045">The labeling apparatus <b>10</b> according to the first embodiment extracts the features of the malware to be labeled and features of the malware group with known labels. Then, the labeling apparatus <b>10</b> identifies malware or a malware group with a feature among the features of the malware group that is most similar to the feature of the malware to be labeled based on the degrees of similarity between the extracted features of the malware to be labeled and features of the malware group. Then, the labeling apparatus <b>10</b> gives the label that has been given to the malware or the malware group to the malware to be labeled. Thus, the labeling apparatus <b>10</b> exhibits the effect that a label can be appropriately given to the malware even when there is no label candidate.</p><p id="p-0045" num="0046">That is, the labeling apparatus <b>10</b> has the effect that, as a label to be given to malware, a label of existing malware having features similar to that of the aforementioned malware can be given to the malware and used to generate a dataset. Furthermore, because the labeling apparatus <b>10</b> gives the label of the malware group to other malware, it is possible to exhibit the effect that effort to give labels to malware one at a time is not required.</p><p id="p-0046" num="0047">In addition, because the labeling apparatus <b>10</b> excludes labels of random character strings among the label candidates included in the label candidate lists, it is possible to exclude useless label candidates, and as a result, to increase accuracy in labeling.</p><p id="p-0047" num="0048">System Configuration, Etc.</p><p id="p-0048" num="0049">In addition, constituent components of each device illustrated in the drawings are functionally conceptual and are not necessarily physically configured as illustrated in the drawings. That is, the specific aspects of distribution and integration of the devices are not limited to those illustrated in the diagrams, and all or some of the devices may be distributed or integrated functionally or physically in desired units depending on various kinds of loads, states of use, and the like. Further, all or some of the processing functions performed by each device can be realized by a CPU and a program analyzed and executed by the CPU or realized as hardware with wired logic.</p><p id="p-0049" num="0050">In addition, all or some of the processing operations described as being automatically performed among the processing operations described in the present embodiment may be performed manually, or all or some of the processing operations described as being manually performed may be performed automatically using a known method. Further, the processing procedures, the control procedures, the specific names, and information including various data and parameters described in the specification or shown in the drawings may be arbitrarily changed except for cases as specified.</p><p id="p-0050" num="0051">Program</p><p id="p-0051" num="0052"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating a computer that executes a labeling program. The computer <b>1000</b> has, for example, a memory <b>1010</b> and a CPU <b>1020</b>. The computer <b>1000</b> has a hard disk drive interface <b>1030</b>, a disk drive interface <b>1040</b>, a serial port interface <b>1050</b>, a video adapter <b>1060</b>, and a network interface <b>1070</b>. These units are connected by a bus <b>1080</b>.</p><p id="p-0052" num="0053">The memory <b>1010</b> includes a read only memory (ROM) <b>1011</b> and a RAM <b>1012</b>. The ROM <b>1011</b> stores, for example, a boot program such as a basic input output system (BIOS). The hard disk drive interface <b>1030</b> is connected to a hard disk drive <b>1090</b>. The disk drive interface <b>1040</b> is connected to a disk drive <b>1100</b>. A removable storage medium, for example, a magnetic disk or an optical disc is inserted into the disk drive <b>1100</b>. The serial port interface <b>1050</b> is connected to, for example, a mouse <b>1051</b> and a keyboard <b>1052</b>. The video adapter <b>1060</b> is connected to, for example, a display <b>1061</b>.</p><p id="p-0053" num="0054">The hard disk drive <b>1090</b> stores, for example, an OS <b>1091</b>, an application program <b>1092</b>, a program module <b>1093</b>, and program data <b>1094</b>. That is, a program defining each processing of the labeling apparatus <b>10</b> is mounted as the program module <b>1093</b> in which a computer executable code is written. The program module <b>1093</b> is stored in, for example, the hard disk drive <b>1090</b>. For example, the program module <b>1093</b> for executing the same processing as that performed by the functional configuration in the apparatus is stored in the hard disk drive <b>1090</b>. Meanwhile, the hard disk drive <b>1090</b> may be replaced with a solid state drive (SSD).</p><p id="p-0054" num="0055">In addition, data used for the processing of the above-described embodiment is stored in, for example, the memory <b>1010</b> or the hard disk drive <b>1090</b> as the program data <b>1094</b>. In addition, the CPU <b>1020</b> reads out and executes the program module <b>1093</b> and the program data <b>1094</b> stored in the memory <b>1010</b> and the hard disk drive <b>1090</b>, as necessary, in the RAM <b>1012</b>.</p><p id="p-0055" num="0056">Further, the program module <b>1093</b> and the program data <b>1094</b> are not necessarily stored in the hard disk drive <b>1090</b>, and may be stored in, for example, a removable storage medium and be read by the CPU <b>1020</b> through the disk drive <b>1100</b> or the like. Alternatively, the program module <b>1093</b> and the program data <b>1094</b> may be stored in another computer connected through a network or a WAN. In addition, the program module <b>1093</b> and the program data <b>1094</b> may be read by the CPU <b>1020</b> from another computer connected via a network interface <b>1070</b>.</p><heading id="h-0012" level="1">REFERENCE SIGNS LIST</heading><p id="p-0056" num="0000"><ul id="ul0002" list-style="none">    <li id="ul0002-0001" num="0057"><b>10</b> Labeling apparatus</li>    <li id="ul0002-0002" num="0058"><b>11</b> Communication unit</li>    <li id="ul0002-0003" num="0059"><b>12</b> Input unit</li>    <li id="ul0002-0004" num="0060"><b>13</b> Output unit</li>    <li id="ul0002-0005" num="0061"><b>14</b> Storage unit</li>    <li id="ul0002-0006" num="0062"><b>15</b> Control unit</li>    <li id="ul0002-0007" num="0063"><b>15</b><i>a </i>List acquisition unit</li>    <li id="ul0002-0008" num="0064"><b>15</b><i>b </i>Feature extraction unit</li>    <li id="ul0002-0009" num="0065"><b>15</b><i>c </i>Labeling unit</li></ul></p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A labeling apparatus comprising:<claim-text>processing circuitry configured to:<claim-text>extract a feature of malware to be labeled and features of a malware group with a known label; and</claim-text><claim-text>identify malware or a malware group with a feature among the features of the malware group that is most similar to the feature of the malware to be labeled based on a degree of similarity between the feature of the malware to be labeled and each of the features of the malware group extracted, and give a label that has been given to the malware or the malware group to the malware to be labeled.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The labeling apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processing circuitry is further configured to:<claim-text>convert the extracted feature of the malware to be labeled into a feature vector of the malware to be labeled and convert the extracted features of the malware group into feature vectors of the malware group, and</claim-text><claim-text>calculate a degree of similarity between the feature vector of the malware to be labeled and each of the feature vectors of the malware group converted, identify the malware or the malware group with a feature vector having a highest degree of similarity among the feature vectors of the malware group, and give the label that has been given to the malware or the malware group to the malware to be labeled.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The labeling apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processing circuitry is further configured to:<claim-text>acquire a label candidate list created for malware and identify malware of the label candidate list as the malware to be labeled when the acquired label candidate list is empty, and</claim-text><claim-text>extract a feature of the malware to be labeled identified by the list acquisition unit and the features of the malware group.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The labeling apparatus according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the processing circuitry is further configured to: acquire the label candidate list, and, when a label is included in the acquired label candidate list, determine whether the label is of a randomly generated character string, exclude the label of the character string when it is determined that the label is of a randomly generated character string, and identify the malware of the label candidate list as the malware to be labeled when the acquired label candidate list is empty.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. A non-transitory computer-readable recording medium storing therein a labeling program that causes a computer to execute a process comprising:<claim-text>extracting a feature of malware to be labeled and features of a malware group with a known label; and</claim-text><claim-text>identifying malware or a malware group with a feature among the features of the malware group that is most similar to the feature of the malware to be labeled based on a degree of similarity between the feature of the malware to be labeled and each of the features of the malware group extracted, and giving a label that has been given to the malware or the malware group to the malware to be labeled.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The non-transitory computer-readable recording medium according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein<claim-text>the extracted feature of the malware to be labeled is converted into a feature vector of the malware to be labeled and the extracted features of the malware group are converted into feature vectors of the malware group, and</claim-text><claim-text>a degree of similarity between the feature vector of the malware to be labeled and each of the feature vectors of the malware group converted is calculated, the malware or the malware group with a feature vector having a highest degree of similarity among the feature vectors of the malware group is identified, and the label that has been given to the malware or the malware group is given to the malware to be labeled.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The non-transitory computer-readable recording medium according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the process includes:<claim-text>acquiring a label candidate list created for malware and identifying malware of the label candidate list as the malware to be labeled when the acquired label candidate list is empty, and</claim-text><claim-text>a feature of the malware to be labeled identified and features of the malware group are extracted.</claim-text></claim-text></claim></claims></us-patent-application>