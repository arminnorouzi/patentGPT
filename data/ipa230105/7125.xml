<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007126A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007126</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943615</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>56</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>65</main-group><subgroup>1089</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>563</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>65</main-group><subgroup>1089</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>567</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>42382</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Message-Based Device-Side Telephone Call To  Virtual Meeting Elevation</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17161203</doc-number><date>20210128</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11477325</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943615</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Zoom Video Communications, Inc.</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Ittelson</last-name><first-name>Brendan James</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A telephone call is elevated to a virtual meeting while maintaining the telephone call as an audio channel of the virtual meeting for an audio-only caller. During a telephone call, one of the participants of the telephone call requests to switch the telephone call to a virtual meeting. To enable an audio-only caller participating in the telephone call to switch to the virtual meeting, a message is transmitted to the phone device of the audio-only caller. Responsive to an interaction with the message at the phone device, the phone device is connected to the virtual meeting in which the telephone call is maintained as the audio channel at least for the audio-only caller. The specific form and content of the message is based on whether a client application associated with a web service used to implement the virtual meeting is installed on the phone device.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="171.03mm" wi="151.05mm" file="US20230007126A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="216.41mm" wi="166.03mm" file="US20230007126A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="222.08mm" wi="130.05mm" orientation="landscape" file="US20230007126A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="188.38mm" wi="157.56mm" file="US20230007126A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="185.50mm" wi="153.08mm" file="US20230007126A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="151.98mm" wi="109.81mm" file="US20230007126A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="228.60mm" wi="156.97mm" file="US20230007126A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="228.60mm" wi="156.97mm" file="US20230007126A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="202.52mm" wi="140.80mm" file="US20230007126A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION(S)</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/161,203, filed Jan. 28, 2021, the entire disclosure of which is herein incorporated by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Virtual meetings help people all around the world to connect with one another every day in a variety of business and personal settings. A virtual meeting may be video-enabled to allow participants to see each other in real-time and may also accommodate participants interacting with others through audio alone. Virtual meeting platforms use network connections with participant devices to facilitate audio and/or video communications between participants. The growing ubiquity of network-connected devices enables more and more people to communicate over virtual meetings every day.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">Disclosed herein are, inter alia, implementations of systems and techniques for elevating a telephone call to a virtual meeting.</p><p id="p-0005" num="0004">One aspect of this disclosure is a method, which includes detecting a request to switch a telephone call to a virtual meeting, in which at least one participant of the telephone call is an audio-only caller. A message associated with the virtual meeting is transmitted to a phone device of the audio-only caller. Responsive to an interaction with the message at the phone device, the phone device is connected to the virtual meeting. The telephone call is maintained as an audio channel of the virtual meeting for the audio-only caller.</p><p id="p-0006" num="0005">Another aspect of this disclosure is a server device, which includes a memory and a processor. The processor is configured to execute instructions stored in the memory. The instructions include instructions to detect a request to switch a telephone call to a virtual meeting. Responsive to an authentication of an audio-only caller participating in the telephone call based on whether a client application associated with a web service used to implement the virtual meeting is installed on a phone device of the audio-only caller, the phone device is connected to the web service to allow the audio-only caller to access the virtual meeting. The telephone call is maintained as an audio channel of the virtual meeting for the audio-only caller.</p><p id="p-0007" num="0006">Yet another aspect of this disclosure is a system, which includes a database and a server device. The database stores information associated with phone devices used to access virtual meeting software. The server device runs switching software. The switching software is configured to, responsive to a request to switch a telephone call to a virtual meeting implemented using the virtual meeting software, authenticate an audio-only caller participating in the telephone call using information associated with a phone device of the audio-only caller stored in the database. The phone device is then connected to the virtual meeting software, wherein the telephone call is maintained as an audio channel of the virtual meeting for the audio-only caller.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0008" num="0007">This disclosure is best understood from the following detailed description when read in conjunction with the accompanying drawings. It is emphasized that, according to common practice, the various features of the drawings are not to-scale. On the contrary, the dimensions of the various features are arbitrarily expanded or reduced for clarity.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example of an electronic computing and communications system.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of an example internal configuration of a computing device of an electronic computing and communications system.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of an example of a meeting system for delivering virtual meeting software services in an electronic computing and communications system.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of an example of a meeting system for elevating a telephone call to a virtual meeting.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of example functionality of switching software.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIGS. <b>6</b>A-B</figref> are illustrations of swim lanes showing an example sequence of operations performed for elevating a telephone call to a virtual meeting.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart of an example of a technique for elevating a telephone call to a virtual meeting.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0016" num="0015">A virtual meeting platform may provide many different ways for its users to connect to one another. For example, users can use a virtual meeting to connect over video, or they can connect over an audio-only call, for example, using telephony services. Sometimes during an audio-only call, one or more of the participants may wish to elevate the communication to a video call. However, it is generally not easy for an audio-only caller participating over a telephony connection to join a virtual meeting even if the audio-only caller has a client application used for the virtual meeting service installed on their phone. This may, for example be because the audio-only participant in such a case still needs to switch from a telephone application to the client application and thereafter enter a meeting number to join the virtual meeting. One solution may involve the virtual meeting service switching the audio-only caller from telephony audio to voice over IP (VOIP) audio; however, that switching may take some amount of time to complete, during which the audio-only caller misses a portion of the conversation. That solution thus does not improve the user experience.</p><p id="p-0017" num="0016">Implementations of this disclosure address problems such as these by elevating a telephone call to a virtual meeting while maintaining the telephone call as an audio channel of the virtual meeting for an audio-only caller. During a telephone call, one of the participants of the telephone call requests to switch the telephone call to a virtual meeting. To enable an audio-only caller participating in the telephone call to switch to the virtual meeting, a message is transmitted to the phone device of the audio-only caller. Responsive to an interaction with the message at the phone device, the phone device is connected to the virtual meeting in which the telephone call is maintained as the audio channel at least for the audio-only caller. The specific form and content of the message is based on whether a client application associated with a web service used to implement the virtual meeting is installed on the phone device.</p><p id="p-0018" num="0017">To describe some implementations in greater detail, reference is first made to examples of hardware and software structures used to elevate a telephone call to a virtual meeting. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example of an electronic computing and communications system <b>100</b>, which can be or include a distributed computing system (e.g., a client-server computing system), a cloud computing system, a clustered computing system, or the like. The system <b>100</b> connects various clients <b>102</b> and/or phones <b>104</b> to services implemented within or otherwise using a datacenter <b>106</b>. The system <b>100</b> can connect a number of clients <b>102</b> and/or phones <b>104</b> or can have a configuration of clients or phones different from that generally illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, and without limitation, the system <b>100</b> can connect hundreds or thousands of clients and/or phones.</p><p id="p-0019" num="0018">A client <b>102</b> may be or otherwise refer to one or both of a client device or a client application. Where a client is or refers to a client device, the client can comprise a computing system, which can include one or more computing devices, such as a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, or another suitable computing device or combination of computing devices. Where a client instead is or refers to a client application, the client can be an instance of software running on a device. In some implementations, a client can be implemented as a single physical unit or as a combination of physical units. In some implementations, a single physical unit can include multiple clients.</p><p id="p-0020" num="0019">A phone <b>104</b> may be or otherwise refer to one or both of a phone device or a phone application such as a softphone. For example, a phone <b>104</b> may be a smart phone or other cell phone which may or may not be configured to run mobile applications, such as a client <b>102</b>. In another example, a phone <b>104</b> may be a desk phone, such as a desktop unit configured to at least send and receive calls and includes an input device for receiving a telephone number or extension to dial to and an output device for outputting audio and/or video for a call in progress. In yet another example, the phone <b>104</b> may be a softphone representing telephony functionality of a client <b>102</b>. A phone <b>104</b> may or may not be VOIP-enabled.</p><p id="p-0021" num="0020">The datacenter <b>106</b> includes one or more servers. The datacenter <b>106</b> can represent a geographic location, which can include a facility, where the one or more servers are located. The system <b>100</b> can include a number of datacenters and servers or can include a configuration of datacenters and servers different from that generally illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, and without limitation, the system <b>100</b> can include tens of datacenters, and at least some of the datacenters can include hundreds or another suitable number of servers.</p><p id="p-0022" num="0021">The datacenter <b>106</b> includes servers used for implementing software services. The datacenter <b>106</b> as generally illustrated includes an application server <b>108</b>, a database server <b>110</b>, and a telephony server <b>112</b>. The servers <b>108</b> through <b>112</b> can each be a computing system, which can include one or more computing devices, such as a desktop computer, a server computer, or another computer capable of operating as a server, or a combination thereof. A suitable number of each of the servers <b>108</b> through <b>112</b> can be implemented at the datacenter <b>106</b>.</p><p id="p-0023" num="0022">In some implementations, one or more of the servers <b>108</b> <b>112</b> can be a non-hardware aspect implemented on a physical device, such as a hardware server. In some implementations, a combination of two or more of the application server <b>108</b>, the database server <b>110</b>, and the telephony server <b>112</b> can be implemented as a single hardware server or as a single non-hardware server implemented on a single hardware server. In some implementations, the datacenter <b>106</b> can include servers other than or in addition to the servers <b>108</b> through <b>112</b>, for example, a media server, a proxy server, or a web server.</p><p id="p-0024" num="0023">The application server <b>108</b> runs web-based software services deliverable to the clients <b>102</b> and at least partially to the phones <b>104</b>. The software services may be or include virtual meeting software which enables audio, video, and/or other forms of virtual meetings between multiple devices (e.g., between ones of the clients <b>102</b>, between ones of the phones <b>104</b>, or between ones of the clients <b>102</b> and ones of the phones <b>104</b>), such as to facilitate a conference between the users of those devices. The virtual meeting software can include functionality for hosting, presenting scheduling, joining, or otherwise participating in a virtual meeting. The virtual meeting software may further include functionality for recording some or all of a virtual meeting and/or documenting a transcript for the virtual meeting. The application server <b>108</b> may, for example, be or include a unitary Java Virtual Machine (JVM).</p><p id="p-0025" num="0024">In some implementations, the application server <b>108</b> can include an application node, which can be a process executed on the application server <b>108</b>. For example, and without limitation, the application node can be executed in order to deliver software services to a client <b>102</b> as part of a software application. The application node can be implemented using processing threads, virtual machine instantiations, or other computing features of the application server <b>108</b>. In some such implementations, the application server <b>108</b> can include a suitable number of application nodes, depending upon a system load or other characteristics associated with the application server <b>108</b>. For example, and without limitation, the application server <b>108</b> can include two or more nodes forming a node cluster. In some such implementations, the application nodes implemented on a single application server <b>108</b> can run on different hardware servers.</p><p id="p-0026" num="0025">The database server <b>110</b> stores, manages, or otherwise provides data for delivering software services of the application server <b>108</b> to a client <b>102</b>. In particular, the database server <b>110</b> may implement one or more databases, tables, or other information sources suitable for use with a software application implemented using the application server <b>108</b>. The database server <b>110</b> may include a data storage unit accessible by software executed on the application server <b>108</b>. A database implemented by the database server <b>110</b> may be a relational database management system (RDBMS), an object database, an XML database, a configuration management database (CMDB), a management information base (MIB), one or more flat files, other suitable non-transient storage mechanisms, or a combination thereof. The system <b>100</b> can include one or more database servers, in which each database server can include one, two, three, or another suitable number of databases configured as or comprising a suitable database type or combination thereof.</p><p id="p-0027" num="0026">In some implementations, one or more databases, tables, other suitable information sources, or portions or combinations thereof may be stored, managed, or otherwise provided by one or more of the elements of the system <b>100</b> other than the database server <b>110</b>, for example, the client <b>104</b> or the application server <b>108</b>.</p><p id="p-0028" num="0027">The telephony server <b>112</b> enables network-based telephony and web communications from and to ones of the clients <b>102</b> and ones of the phones <b>104</b> which are VOIP-enabled devices configured to send and receive calls over a network, for example, a network <b>114</b>. In particular, the telephony server <b>112</b> includes a session initiation protocol (SIP) zone and a web zone. The SIP zone enables a client <b>102</b> or a VOIP-enabled phone <b>104</b>, to send and receive calls over the network <b>114</b> using SIP requests and responses. The web zone integrates telephony data with the application server <b>108</b> to enable telephony-based traffic access to software services run by the application server <b>108</b>. Given the combined functionality of the SIP zone and the web zone, the telephony server <b>112</b> may be or include a cloud-based private branch exchange (PBX) system.</p><p id="p-0029" num="0028">The SIP zone receives telephony traffic from a client <b>102</b> or VOIP-enabled phone <b>104</b> and directs same to a destination device. The SIP zone may include one or more call switches for routing the telephony traffic. For example, to route a VOIP call from a first VOIP-enabled client to a second VOIP-enabled client within the same domain or network, the telephony server <b>112</b> may initiate a SIP transaction between a first client and the second client using a PBX. However, in another example, to route a VOIP call from a VOIP-enabled client to a client or phone which is not VOIP-enabled, the telephony server <b>112</b> may initiate a SIP transaction via a VOIP gateway that transmits the SIP signal to a public switched telephone network (PSTN) system for outbound communication to the non-VOIP-enabled client or non-client phone. Hence, the telephony server <b>112</b> may include a PSTN system and may in some cases access an external PSTN system.</p><p id="p-0030" num="0029">The telephony server <b>112</b> includes one or more session border controllers (SBCs) for interfacing the SIP zone with one or more aspects external to the telephony server <b>112</b>. In particular, an SBC can act as an intermediary to transmit and receive SIP requests and responses between ones of the clients <b>102</b> and/or between ones of the phones <b>104</b>. When incoming telephony traffic for delivery to a client <b>102</b> or a phone <b>104</b> originating from outside the telephony server <b>112</b> is received, a SBC receives the traffic and forwards it to a call switch for routing to the client <b>102</b> or the phone <b>104</b>.</p><p id="p-0031" num="0030">The web zone receives telephony traffic from a client <b>102</b> or a phone <b>104</b>, via the SIP zone, and directs same to the application server <b>108</b> via one or more Domain Name System (DNS) resolutions. For example, a first DNS within the web zone may process a request received via the SIP zone and then deliver the processed request to a web service which connects to a second DNS at or otherwise associated with the application server <b>108</b>. Once the second DNS resolves the request, it is delivered to the destination service at the application server <b>108</b>. The web zone may also include a database for authenticating access to a software application for telephony traffic processed within the SIP zone, for example, a softphone.</p><p id="p-0032" num="0031">The clients <b>102</b> and the phones <b>104</b> communicate with aspects of the datacenter <b>106</b> via the network <b>114</b>. The network <b>114</b> can be or include, for example, the Internet, a local area network (LAN), a wide area network (WAN), a virtual private network (VPN), or another public or private means of electronic computer communication capable of transferring data between a client and one or more servers. In some implementations, a client can connect to the network <b>114</b> via a communal connection point, link, or path, or using a distinct connection point, link, or path. For example, a connection point, link, or path can be wired, wireless, use other communications technologies, or a combination thereof. In some implementations in which one or more of the phones <b>104</b> is not a VOIP-enabled device, those one or more phones <b>104</b> may communicate other than via the network <b>114</b>.</p><p id="p-0033" num="0032">The network <b>114</b>, the datacenter <b>106</b>, or another element, or combination of elements, of the system <b>100</b> can include network hardware such as routers, switches, other network devices, or combinations thereof. For example, the datacenter <b>106</b> can include a load balancer <b>116</b> for routing traffic from the network <b>114</b> to various servers associated with the datacenter <b>106</b>. The load balancer <b>116</b> can route, or direct, computing communications traffic, such as signals or messages, to respective elements of the datacenter <b>106</b>.</p><p id="p-0034" num="0033">For example, the load balancer <b>116</b> can operate as a proxy, or reverse proxy, for a service, such as a service provided to one or more remote clients, such as one or more of the clients <b>102</b>, by the application server <b>108</b>, and/or another server. Routing functions of the load balancer <b>116</b> can be configured directly or via a DNS. The load balancer <b>116</b> can coordinate requests from remote clients and can simplify client access by masking the internal configuration of the datacenter <b>106</b> from the remote clients.</p><p id="p-0035" num="0034">In some implementations, the load balancer <b>116</b> can operate as a firewall, allowing or preventing communications based on configuration settings. Although the load balancer <b>116</b> is depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as being within the datacenter <b>106</b>, in some implementations, the load balancer <b>116</b> can instead be located outside of the datacenter <b>106</b>, for example, when providing global routing for multiple datacenters. In some implementations, load balancers can be included both within and outside of the datacenter <b>106</b>. In some implementations, the load balancer <b>116</b> can be omitted.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of an example internal configuration of a computing device <b>200</b> of an electronic computing and communications system, for example, a computing device which implements one or more of the client <b>104</b>, the application server <b>108</b>, the database server <b>110</b>, or the gateway <b>112</b> of the system <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0037" num="0036">The computing device <b>200</b> includes components or units, such as a processor <b>202</b>, a memory <b>204</b>, a bus <b>206</b>, a power source <b>208</b>, peripherals <b>210</b>, a user interface <b>212</b>, a network interface <b>214</b>, other suitable components, or a combination thereof. One or more of the memory <b>204</b>, the power source <b>208</b>, the peripherals <b>210</b>, the user interface <b>212</b>, or the network interface <b>214</b> can communicate with the processor <b>202</b> via the bus <b>206</b>.</p><p id="p-0038" num="0037">The processor <b>202</b> is a central processing unit, such as a microprocessor, and can include single or multiple processors having single or multiple processing cores. Alternatively, the processor <b>202</b> can include another type of device, or multiple devices, now existing or hereafter developed, configured for manipulating or processing information. For example, the processor <b>202</b> can include multiple processors interconnected in one or more manners, including hardwired or networked, including wirelessly networked. For example, the operations of the processor <b>202</b> can be distributed across multiple devices or units that can be coupled directly or across a local area or other suitable type of network. The processor <b>202</b> can include a cache, or cache memory, for local storage of operating data or instructions.</p><p id="p-0039" num="0038">The memory <b>204</b> includes one or more memory components, which may each be volatile memory or non-volatile memory. For example, the volatile memory of the memory <b>204</b> can be random access memory (RAM) (e.g., a DRAM module, such as DDR SDRAM) or another form of volatile memory. In another example, the non-volatile memory of the memory <b>204</b> can be a disk drive, a solid state drive, flash memory, phase-change memory, or another form of non-volatile memory configured for persistent electronic information storage. The memory <b>204</b> may also include other types of devices, now existing or hereafter developed, configured for storing data or instructions for processing by the processor <b>202</b>. In some implementations, the memory <b>204</b> can be distributed across multiple devices. For example, the memory <b>204</b> can include network-based memory or memory in multiple clients or servers performing the operations of those multiple devices.</p><p id="p-0040" num="0039">The memory <b>204</b> can include data for immediate access by the processor <b>202</b>. For example, the memory <b>204</b> can include executable instructions <b>216</b>, application data <b>218</b>, and an operating system <b>220</b>. The executable instructions <b>216</b> can include one or more application programs, which can be loaded or copied, in whole or in part, from non-volatile memory to volatile memory to be executed by the processor <b>202</b>. For example, the executable instructions <b>216</b> can include instructions for performing some or all of the techniques of this disclosure. The application data <b>218</b> can include user data, database data (e.g., database catalogs or dictionaries), or the like. In some implementations, the application data <b>218</b> can include functional programs, such as a web browser, a web server, a database server, another program, or a combination thereof. The operating system <b>220</b> can be, for example, Microsoft Windows&#xae;, Mac OS X&#xae;, or Linux&#xae;; an operating system for a mobile device, such as a smartphone or tablet device; or an operating system for a non-mobile device, such as a mainframe computer.</p><p id="p-0041" num="0040">The power source <b>208</b> includes a source for providing power to the computing device <b>200</b>. For example, the power source <b>208</b> can be an interface to an external power distribution system. In another example, the power source <b>208</b> can be a battery, such as where the computing device <b>200</b> is a mobile device or is otherwise configured to operate independently of an external power distribution system. In some implementations, the computing device <b>200</b> may include or otherwise use multiple power sources. In some such implementations, the power source <b>208</b> can be a backup battery.</p><p id="p-0042" num="0041">The peripherals <b>210</b> includes one or more sensors, detectors, or other devices configured for monitoring the computing device <b>200</b> or the environment around the computing device <b>200</b>. For example, the peripherals <b>210</b> can include a geolocation component, such as a global positioning system location unit. In another example, the peripherals can include a temperature sensor for measuring temperatures of components of the computing device <b>200</b>, such as the processor <b>202</b>. In some implementations, the computing device <b>200</b> can omit the peripherals <b>210</b>.</p><p id="p-0043" num="0042">The user interface <b>212</b> includes one or more input interfaces and/or output interfaces. An input interface may, for example, be a positional input device, such as a mouse, touchpad, touchscreen, or the like; a keyboard; or another suitable human or machine interface device. An output interface may, for example, be a display, such as a liquid crystal display, a cathode-ray tube, a light emitting diode display, or other suitable display.</p><p id="p-0044" num="0043">The network interface <b>214</b> provides a connection or link to a network (e.g., the network <b>114</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). The network interface <b>214</b> can be a wired network interface or a wireless network interface. The computing device <b>200</b> can communicate with other devices via the network interface <b>214</b> using one or more network protocols, such as using Ethernet, transmission control protocol (TCP), internet protocol (IP), power line communication, an IEEE 802.X protocol (e.g., Wi-Fi, Bluetooth, ZigBee, etc.), infrared, visible light, general packet radio service (GPRS), global system for mobile communications (GSM), code-division multiple access (CDMA), Z-Wave, another protocol, or a combination thereof.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of an example of a meeting system <b>300</b> for delivering virtual meeting software services in an electronic computing and communications system, for example, the system <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The meeting system <b>300</b> includes a thread encoding tool <b>302</b>, a switching/routing tool <b>304</b>, and virtual meeting software <b>306</b>. The meeting system <b>300</b> enables use of the virtual meeting software <b>306</b> by clients and phones, such as clients <b>308</b> and <b>310</b> and phone <b>312</b>. For example, one or both of the clients <b>308</b> or <b>310</b> may be a client <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In another example, the phone <b>312</b> may be a phone <b>104</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The meeting system <b>300</b> may in at least some cases be implemented using one or more servers of the system <b>100</b>. Although two clients and a phone are shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, other numbers of clients and/or other numbers of phones can connect to the meeting system <b>300</b>.</p><p id="p-0046" num="0045">A virtual meeting includes transmitting and receiving video, audio, and/or other data between clients and/or phones of virtual meeting participants. Each of the client <b>308</b>, the client <b>310</b>, and the phone <b>312</b> may connect through the meeting system <b>300</b> using separate input streams to enable users thereof to participate in a virtual meeting together using the virtual meeting software. The virtual meeting software <b>306</b> is software for implementing virtual meetings between users of two or more clients and/or phones. For example, the virtual meting software <b>306</b> can be the virtual meeting software described above with respect to the application server <b>108</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0047" num="0046">The virtual meeting software <b>306</b> includes a dedicated meeting view for each input stream received and processed at the meeting system <b>300</b>. For example, a meeting view may be represented within a graphical user interface (GUI) of the virtual meeting software <b>306</b> by a dedicated box for a given participant. The content of the meeting view for a given participant may be dependent upon the source of the input stream for that participant. For example, where a participant accesses the virtual meeting software <b>306</b> from a client, such as the client <b>308</b> or <b>310</b>, the meeting view for the participant may include a video output stream transmitted from the meeting system for viewing by all participants based on a video input stream received from the client, although the participant may optionally disable video features to suspend the video output stream from being presented in the meeting view. In another example, where a participant access the virtual meeting software <b>306</b> from a phone, such as the phone <b>312</b>, the meeting view for the participant may be limited to a static image or other default background aspect since there is no video output stream produced for that participant.</p><p id="p-0048" num="0047">The thread encoding tool <b>302</b> receives video input streams separately from the clients <b>308</b> and <b>310</b> and encodes those video input streams using one or more transcoding tools, such as to produce variant streams at different resolutions. The video input streams may be received over a network, for example, the network <b>114</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, or by a direct wired connection, such as using a universal serial bus (USB) connection or like coupling aspect. After the video input streams are encoded, the switching/routing tool <b>304</b> direct the encoded streams through applicable network infrastructure and/or other hardware to deliver the encoded streams to the virtual meeting software <b>306</b>. The virtual meeting software <b>306</b> delivers output video streams representative of the respective encoded streams to each connected client, such as the clients <b>308</b> and <b>310</b>, which receive and decode the output video streams to output them for display by video output components of the clients, such as within respective meeting views of the virtual meeting software <b>306</b>.</p><p id="p-0049" num="0048">A user of the phone <b>312</b> participates in the virtual meeting using an audio-only connection and may be referred to an audio-only caller. To participate in the virtual meeting from the phone <b>312</b>, an audio signal from the phone <b>312</b> is received and processed at a VOIP gateway <b>314</b> to prepare a digital telephony signal for processing at the meeting system <b>300</b>. The VOIP gateway <b>314</b> may be part of the system <b>100</b>, for example, implemented at or in connection with a server of the datacenter <b>106</b>. Alternatively, the VOIP gateway <b>314</b> may be located on the user-side, such as in a same location as the phone <b>312</b>. The digital telephony signal is a packet switched signal transmitted to the switching/routing tool <b>304</b> for delivery to the virtual meeting software <b>306</b>. The virtual meeting software <b>306</b> outputs an audio signal representing a combined audio capture for each participant of the virtual meeting for output by an audio output component of the phone <b>312</b>. In some implementations, the VOIP gateway <b>314</b> may be omitted, for example, where the phone <b>312</b> is a VOIP-enabled phone.</p><p id="p-0050" num="0049">A virtual meeting may be referred to as a video-enabled virtual meeting in which video streaming is enabled for one or more participants. The enabling of video streaming for a participant of a virtual meeting does not require that the participant activate or otherwise use video functionality for participating in the virtual meeting. For example, a virtual meeting may still be a video-enabled virtual meeting where none of the participants joining using clients turns on their video feed for any portion of the virtual meeting. In some cases, however, the virtual meeting may have video disabled, such as where each participant connects to the virtual meeting using a phone rather than a client, or where a host of the virtual meeting selectively configures the virtual meeting to exclude video functionality.</p><p id="p-0051" num="0050">In some implementations, other software services may be accessible in connection with a virtual meeting implemented using the meeting system <b>300</b>. For example, a virtual meeting may include or otherwise integrate functionality for instant messaging, unified messaging, and other types of messaging communications between participants of the virtual meeting, such as to facilitate a chat or like virtual conversation between users of those participants. Those other software services may be implemented at the meeting system <b>300</b> and/or a different aspect of the system <b>100</b>.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of an example of a meeting system <b>400</b> for elevating a telephone call to a virtual meeting. The meeting system <b>400</b> may, for example, be the meeting system <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. A phone device <b>402</b> of an audio-only caller, which may, for example, be the phone <b>308</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, is connected to a telephone call over telephony services <b>404</b>. The telephone call may be switched by switching software <b>406</b> to a virtual meeting implemented by virtual meeting software <b>408</b>, which may, for example, be the virtual meeting software <b>302</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0053" num="0052">The meeting system <b>400</b> may be implemented using one or more servers, for example, of a datacenter such as the datacenter <b>106</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, the meeting system <b>400</b> may be implemented using an application server, a database server, and/or a telephony server, such as the servers <b>108</b> through <b>112</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In another example, the meeting system <b>400</b> may be implemented using servers not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example, a meeting server, a web server, or another server. In yet another example, the meeting system <b>400</b> may be implemented using one or more of the servers <b>108</b> through <b>112</b> and one or more other servers. The telephony services <b>404</b>, the switching software <b>406</b>, and the virtual meeting software <b>408</b> may be implemented by different servers or by the same server.</p><p id="p-0054" num="0053">As shown, the switching software <b>406</b> is separate from both of the telephony services <b>404</b> and the virtual meeting software <b>408</b>. However, in some implementations, the switching software <b>406</b> may be included in one or both of the telephony services <b>404</b> and the virtual meeting software <b>408</b>. For example, the switching software <b>406</b> may represent functionality of the telephony services <b>404</b> and/or of the virtual meeting software <b>408</b> for transitioning a telephone call at the telephony services <b>404</b> to a virtual meeting at the virtual meeting software <b>408</b>.</p><p id="p-0055" num="0054">The telephony services <b>404</b> represent hardware, software, infrastructure, and/or other aspects used to operate a telephony connection, such as a telephone call between two or more clients or phones, including the phone device <b>402</b>. For example, the telephony services <b>404</b> may be implemented using the telephony server <b>112</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In another example, the telephony services may be implemented using the thread encoding tool <b>310</b>, the switching/routing tool <b>312</b>, and/or the VOIP gateway <b>314</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, such as where those aspects are implemented other than as part of the telephony server <b>112</b>. The operator of a client or phone connected to the telephone call may or may not be a user of a software platform associated with the meeting system <b>400</b>. An operator of a client or phone may, for example, be a human user, a software intelligence unit, or another entity.</p><p id="p-0056" num="0055">The switching software <b>406</b> includes functionality for switching a telephone call implemented using the telephony services <b>404</b> to a virtual meeting implemented using the virtual meeting software <b>408</b>. During the telephone call, a request to switch the telephone call to a virtual meeting is transmitted from a client or phone of a participant of the telephone call. The participant whose client or phone transmitted the request to switch the telephone call to a virtual meeting may or may not be an audio-only caller; however, at least one participant of the telephone call is an audio-only caller. The switching software <b>406</b> detects the request to switch the telephone call and processes the request to ultimately cause the participants of the telephone call to become participants of a virtual meeting at the virtual meeting software <b>408</b>, in which at least some participants (e.g., audio-only callers) will have the telephone call be used as the audio channel for the virtual meeting.</p><p id="p-0057" num="0056">The switching software <b>406</b> directs the virtual meeting software <b>408</b> to create the virtual meeting based on the request received from the participant. To switch a participant other than an audio-only caller (e.g., a video-capable caller operating a client device or a phone device through a client application) to the virtual meeting, the switching software may transmit a push notification or in-app message that, when interacted with at the device of the participant, causes the client application running on that device to connect to a web service used for the virtual meeting software <b>408</b>. Video and audio channels are opened and may be selectively controlled (e.g., by the operator of the device) to provide video and audio streams for the participant directly through the virtual meeting software <b>408</b>.</p><p id="p-0058" num="0057">However, to switch a participant who is an audio-only caller (e.g., a caller operating a phone which may or may not be capable of running a client application but which in any event is connecting to the telephone call other than by using the client application), the switching software <b>406</b> first identifies the phone device of the audio-only caller based on telephony traffic processed at the telephony services <b>404</b>. For example, the telephony services <b>404</b> may store information associated with the phone device within a phone data database <b>410</b>. The phone data database <b>412</b> may, for example, be implemented by the database server <b>110</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0059" num="0058">The information associated with a phone device stored by the phone data database <b>410</b> includes one or more of a phone number associated with the phone device (e.g., a primary phone number assigned through a carrier network, a secondary phone number enabled through a client installed at the phone device, and/or another phone number), an identifier of an operating system of the phone device (e.g., a smart phone operating system such as Android or iOS, a desktop phone operating system, and/or another operating system), a MAC address of the phone device, a unique identifier generated for the phone device, an indication of whether a client application associated with web service used for the virtual meeting software <b>408</b> is installed on the phone device <b>402</b>, or the like.</p><p id="p-0060" num="0059">The telephony services <b>404</b> may store the information associated with the phone device <b>402</b> in the phone data database <b>410</b> based on a connection of the phone device <b>402</b> to the telephony services <b>404</b>. For example, the telephony services <b>404</b> may detect the information associated with the phone device <b>402</b> upon the phone device <b>402</b> accessing a session border controller (SBC) or gateway associated with the telephony services <b>404</b> and thereafter store the information within the phone data database <b>410</b>. Alternatively, the information associated with the phone device <b>402</b> may be stored in the phone data database <b>410</b> by another aspect associated with the meeting system <b>400</b> or a software platform which includes the meeting system <b>400</b>. For example, the information associated with the phone device <b>402</b> may be stored within the phone data database <b>410</b> based on a previous interaction between the phone device <b>402</b> and the meeting system <b>400</b> or the software platform.</p><p id="p-0061" num="0060">The switching software <b>406</b> may obtain the information associated with the phone device <b>402</b> by accessing the phone data database <b>410</b>. Alternatively, the information associated with the phone device <b>402</b> may be signaled from the telephony services <b>404</b> to the switching software <b>406</b>. In either case, the switching software <b>406</b> uses the information associated with the phone device <b>402</b> to transmit a message to the phone device <b>402</b>. The message is an aspect which may be interacted with at the phone device <b>402</b> and which is configured to connect the phone device <b>402</b> to the virtual meeting at the virtual meeting software <b>408</b> responsive to such an interaction. For example, the message may be one of a push notification, a text message, or another prompt which may be delivered to the phone device <b>402</b>.</p><p id="p-0062" num="0061">The particular form of the message transmitted to the phone device <b>402</b> is based on whether a client application associated with the web service used for the virtual meeting software <b>408</b> is installed on the phone device <b>402</b>. In particular, the switching software <b>406</b> processes the information associated with the phone device <b>402</b> to determine whether the client application is installed on the phone device <b>402</b>.</p><p id="p-0063" num="0062">Responsive to a determination that the client application is installed on the phone device <b>402</b>, the switching software <b>406</b> transmits the message in the form of a push-notification to the client application installed on the phone device <b>402</b>. The push-notification, when interacted with, will open the client application at the phone device <b>402</b> and connect the phone device <b>402</b> to the virtual meeting software <b>408</b> accordingly. Thus, the push-notification is configured to cause a connection to open between the phone device <b>402</b> and the virtual meeting software <b>408</b> regardless of whether the client application is open or otherwise actively being used by the operator of the phone device <b>402</b>.</p><p id="p-0064" num="0063">Alternatively, responsive to a determination that the client application is not installed on the phone device <b>402</b>, the switching software <b>406</b> transmits the message in the form of a text message to the phone device <b>402</b>. The text message includes a uniform resource locator (URL) associated with the web service used for the virtual meeting software <b>408</b> which, when interacted with at the phone device <b>402</b>, causes a web browser application at the phone device <b>402</b> to connect to the web service at the URL.</p><p id="p-0065" num="0064">Regardless of its form, the message transmitted from the switching software <b>406</b> may identify or be used to identify, either directly or indirectly, a meeting identifier for the virtual meeting to which the telephone call is being switched. For example, where the message is a text message including a URL, the meeting identifier may be identified by the message by the URL embedding the meeting identifier. In another example, where the message is a push notification, the push notification may connect the audio-only caller to the virtual meeting based on a meeting identifier associated with the virtual meeting.</p><p id="p-0066" num="0065">The meeting identifier is some information for uniquely identifying a particular virtual meeting implemented at the virtual meeting software <b>408</b>. The meeting identifier may be obtained by the switching software <b>406</b> in one or more ways. In one example, the switching software <b>406</b> may obtain the meeting identifier from a meeting data database <b>412</b>. The meeting data database <b>412</b> may, for example, be implemented by the database server <b>110</b>. The meeting data database <b>412</b> stores information associated with virtual meetings previously and/or currently implemented at the virtual meeting software <b>408</b>. The information associated with a virtual meeting stored in the meeting data database <b>412</b> may, for example, include one or more of a meeting identifier, a list of participants (e.g., by device, telephone number, account, or the like), information indicating a start and/or end time, or the like. At least some of the information associated with a virtual meeting may be stored in the meeting data database <b>412</b> by the virtual meeting software <b>408</b>. In another example, the switching software <b>406</b> may obtain the meeting identifier directly from the virtual meeting software <b>408</b>. For example, the virtual meeting software <b>408</b> may signal the meeting identifier to the switching software <b>406</b> responsive to a request therefor from the switching software <b>406</b> and/or responsive to the virtual meeting software <b>408</b> initializing the virtual meeting. In some implementations, information stored in the meeting data database <b>412</b> may be stored there by another aspect of the meeting system of the software platform associated with the meeting system.</p><p id="p-0067" num="0066">After the switching software <b>406</b> transmits the message to the phone device <b>402</b>, an interaction with the message at the phone device <b>402</b> begins the process of the switching software <b>406</b> opening a channel between the phone device <b>402</b> and the virtual meeting software <b>408</b>. The channel may, for example, represent a connection pathway between the phone device <b>402</b> and the virtual meeting software <b>408</b> over a network directed based on the meeting identifier. The switching software <b>406</b> may in at least some cases signal the connection of the phone device <b>402</b> to the virtual meeting software <b>408</b> or the opening of the channel therefor to the telephony services <b>404</b>. Once the channel is opened, a meeting session is established with the virtual meeting software <b>408</b>. A SIP transaction may be created and processed between the telephony services <b>402</b> and the virtual meeting software <b>408</b> (e.g., between devices thereof) to facilitate the telephone call being accessible to the virtual meeting software <b>408</b>. In this way, the telephone call is maintained as the audio-channel of the virtual meeting at the virtual meeting software <b>408</b> for at least some of the participants, such as the audio-only caller.</p><p id="p-0068" num="0067">In some implementations, the channel between the phone device <b>402</b> and the virtual meeting software may be opened responsive to authenticating the audio-only caller. For example, after the message is interacted with at the phone device <b>402</b> and the switching software <b>406</b> receives an indication of such message interaction, the switching software <b>406</b> can authenticate the audio-only caller using information stored in the phone data database <b>410</b>. For example, the audio-only caller may be authenticated based on one or more of the phone number used by the phone device <b>402</b>, a MAC address of the phone device <b>402</b>, or the like. In some implementations where multiple devices share the same phone number, the audio-only caller may be authenticated by the switching software <b>406</b> identifying which of those multiple devices is currently connected to the telephone call through the telephony services <b>404</b>.</p><p id="p-0069" num="0068">In some implementations, the elevation of the telephone call to a virtual meeting exposes the participants to various virtual meeting functionality of the virtual meeting software <b>408</b>. For example, participants, such as the audio-only caller, once connected to the virtual meeting may in at least some cases be able to support one or more of video channel output, screen sharing, chat messaging, file transferring, or other functionality of the virtual meeting software <b>408</b>.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of example functionality of the switching software <b>406</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The switching software <b>406</b> includes tools for elevating a telephone call to a virtual meeting. As shown, the switching software <b>406</b> includes a request detection tool <b>500</b>, a message determination tool <b>502</b>, a caller authentication tool <b>504</b>, and a meeting connection tool <b>506</b>. Although the tools <b>500</b> through <b>506</b> are shown as functionality of the switching software <b>400</b> as a single piece of software, in some implementations, some or all of the tools <b>500</b> through <b>506</b> may exist outside of the switching software <b>406</b>.</p><p id="p-0071" num="0070">The request detection tool <b>500</b> detects a request to switch a telephone call to a virtual meeting. The request may be from one or more participants of the telephone call. At least one participant of the telephone call is an audio-only caller. The request detection tool <b>500</b> may detect the request in one or more ways. For example, the detection may be based on a signal received from telephony services used to implement the telephone call. In another example, the detection may be based on a signal received from a web service used to implement the virtual meeting, for example, the virtual meeting software <b>408</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0072" num="0071">The message determination tool <b>502</b> determines and transmits a message based on whether a client application associated with a web service used to implement the virtual meeting is installed on the phone device of the audio-only caller. Determining whether the client application is installed on the phone device can include transmitting a request for response by the client application, such as a ping, to the phone device, and awaiting that response. Alternatively, determining whether the client application is installed on the phone device may include searching records of the virtual meeting software or of a software platform associated therewith to determine whether an account associated with the phone device is registered therewith. For example, the message determination tool <b>502</b> or another aspect of the switching software <b>406</b> may perform phone number matching against the phone number of the phone device to recognize the phone device and determine whether the client application is installed thereon.</p><p id="p-0073" num="0072">The particular form of the message is based on whether the client application is installed on the phone device. For example, when the client application is installed on the phone device, the message may include a push notification transmitted to the client application. In another example, when the client application is not installed on the phone device, the message may include a text message transmitted to the phone device.</p><p id="p-0074" num="0073">The caller authentication tool <b>504</b> authenticates the audio-only caller of the phone device using information associated with the phone device, for example, the phone number thereof. For example, responsive to an interaction with the message at the phone device, the caller authentication tool <b>504</b> or another aspect of the switching software <b>406</b> may obtain a phone number of the device, for example, from the telephony services <b>404</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> or from another source. The obtained phone number may then be compared against phone data records known to the meeting system which includes the switching software <b>406</b>, for example, the phone data database <b>410</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. In some implementations, the authentication may be by using information associated with the phone device other than or in addition to the phone number. For example, a MAC address, unique identifier, or other information stored in the phone data database <b>410</b> may be used to authenticate the audio-only caller. In some implementations, the authentication may occur before the message is transmitted to the phone device. For example, the authentication can be done to verify a system API used to interface with the phone device, such as for transmitting the message.</p><p id="p-0075" num="0074">The meeting connection tool <b>506</b> opens a channel between the phone device and the virtual meeting software to allow the phone device to connect to the virtual meeting. The meeting connection tool <b>506</b> further uses the existing connection between the phone device and the telephony services to cause the telephone call to be used as the audio channel for the audio-only caller within the virtual meeting. There is, as a result, no change in operation and no gap in communication between the audio-only caller and the other participants of the virtual meeting.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIGS. <b>6</b>A-B</figref> are illustrations of swim lanes showing an example sequence of operations performed for elevating a telephone call to a virtual meeting between the phone device <b>402</b>, the telephony services <b>404</b>, and the switching software <b>406</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Referring first to <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, at <b>600</b>, a telephone call is initiated at the telephony services <b>404</b>. At <b>602</b>, the switching software <b>406</b> detects a request to switch the telephone call to a virtual meeting. At <b>604</b>, the switching software <b>406</b> determines whether a client application associated with a web service for implementing the virtual meeting is installed at the phone device <b>402</b>. At <b>606</b>, a message configured to connect the phone device <b>402</b> to the web service is transmitted from the switching software <b>406</b> to the phone device <b>402</b>. At <b>608</b>, the message is received and interacted with at the phone device <b>402</b>.</p><p id="p-0077" num="0076">Referring next to <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, after the message is received and interacted with at the phone device <b>402</b>, at <b>610</b>, the audio-only caller operating the phone device <b>402</b> is authenticated by the switching software <b>406</b>. At <b>612</b>, a channel is opened by the switching software <b>406</b> between the phone device <b>402</b> and the web service used to implement the virtual meeting. At <b>614</b>, the switching software <b>406</b> signals the channel to the phone device <b>402</b>. At <b>616</b>, a connection is established between the phone device <b>402</b> and the web service for the virtual meeting. At <b>618</b>, the telephony services <b>404</b> send the telephone call to the web service to use as an audio-channel of the virtual meeting for at least the audio-only caller.</p><p id="p-0078" num="0077">To further describe some implementations in greater detail, reference is next made to examples of techniques which may be performed to elevate a telephone call to a virtual meeting. <figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart of an example of a technique <b>700</b> for elevating a telephone call to a virtual meeting. The technique <b>700</b> can be executed using computing devices, such as the systems, hardware, and software described with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b>B</figref>. The technique <b>700</b> can be performed, for example, by executing a machine-readable program or other computer-executable instructions, such as routines, instructions, programs, or other code. The steps, or operations, of the technique <b>700</b> or another technique, method, process, or algorithm described in connection with the implementations disclosed herein can be implemented directly in hardware, firmware, software executed by hardware, circuitry, or a combination thereof.</p><p id="p-0079" num="0078">For simplicity of explanation, the technique <b>700</b> is depicted and described herein as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used. Furthermore, not all illustrated steps or operations may be required to implement a technique in accordance with the disclosed subject matter.</p><p id="p-0080" num="0079">At <b>702</b>, a request to switch a telephone call to a virtual meeting is detected. The request may be from one or more participants of the telephone call. At least one participant of the telephone call is an audio-only caller. The detection may in at least some cases be based on a signal received from telephony services used to implement the telephone call. Alternatively, or additionally, the detection may be based on a signal received from a web service used to implement the virtual meeting.</p><p id="p-0081" num="0080">At <b>704</b>, a determination is made as to whether a client application associated with a web service used to implement the virtual meeting is installed on the phone device of the audio-only caller. For example, determining whether the client application is installed on the phone device can include transmitting a request for response by the client application, such as a ping, to the phone device. The client application is determined to be installed on the phone device if a response is received. In another example, determining whether the client application is installed on the phone device may include searching records of software used to implement the virtual meetings or of other software to determine whether an account associated with the phone device is registered therewith. For example, a phone data database may be searched for a phone number or MAC address of the phone device. In the event such information is identified, an implication can be drawn that the operator of the phone device has registered the phone device with the service and thus that the client application may be installed on the phone device.</p><p id="p-0082" num="0081">At <b>706</b>, a message associated with the virtual meeting is transmitted to the phone device of the audio-only caller. The message may be based on whether a client application associated with a web service used to implement the virtual meeting is installed on the phone device. For example, when the client application is installed on the phone device, the message may include a push notification transmitted to the client application. In such a case, the interaction with the push notification may cause the client application to connect to the virtual meeting at the phone device. In another example, when the client application is not installed on the phone device, the message may include a text message transmitted to the phone device. In such a case, the interaction with the text message may cause a web browser application at the phone device to connect to the virtual meeting.</p><p id="p-0083" num="0082">At <b>708</b>, the audio-only caller is authenticated based on information associated with the phone device. The authentication is responsive to an interaction with the message at the phone device. The particular manner of the authentication may be based on the message transmitted to the phone device of the audio-only caller. For example, when the client application is installed on the phone device, the message may configure the client application to authenticate the audio-only caller using information associated with the phone device. In another example, when the client application is not installed on the phone device, the message may include a URL that embeds a meeting identifier of the virtual meeting and a participant identifier that authenticates the audio-only caller.</p><p id="p-0084" num="0083">In some implementations, responsive to determining that the phone number is associated with multiple phone devices, authenticating the audio-only caller can include verifying that the phone device is the one of the multiple phone devices connected to the telephone call. For example, it may be the case that the phone device is one of multiple devices known by the software to use the same phone number. In some such implementations, the phone device can be verified based on telephony services used to implement the telephone call. For example, the telephony services may be queried for a list of device endpoints connected to the telephone call, and the multiple phone devices known to the software can be compared to the list. In some such implementations, a text message may be transmitted to the phone device to request verification by the operator thereof that the phone device is the one seeking to join the virtual meeting. For example, the text message may be transmitted responsive to a determination that multiple phone devices are known as being associated with the phone number.</p><p id="p-0085" num="0084">In some implementations, the authentication may occur before the message is transmitted to the phone device. For example, the authentication can be done to verify a system API used to interface with the phone device, such as for transmitting the message.</p><p id="p-0086" num="0085">At <b>710</b>, the phone device is connected to the virtual meeting. For example, responsive to authenticating the audio-only caller, a channel may be opened between the phone device and a web service used to implement the virtual meeting. The channel connects the phone device to the virtual meeting service. In some implementations, connecting the phone device to the virtual meeting may expose the audio-only caller to one or more of a video channel, a screen share, a chat message, or a file transfer.</p><p id="p-0087" num="0086">At <b>712</b>, the telephone call is maintained as the audio channel of the virtual meeting for at least the audio-only caller. Maintaining the telephone call as the audio channel includes binding the audio channel of the telephone call to a video channel of the audio-only caller within the virtual meeting. That is, because the video channel and the audio channel are technically separate channels, the binding is performed to link the telephone call to the video feed provided for the audio-only caller within the virtual meeting. Given that the audio-only caller does not provide a video stream, the video feed for the audio-only caller is typically a static image.</p><p id="p-0088" num="0087">The implementations of this disclosure can be described in terms of functional block components and various processing operations. Such functional block components can be realized by a number of hardware or software components that perform the specified functions. For example, the disclosed implementations can employ various integrated circuit components (e.g., memory elements, processing elements, logic elements, look-up tables, and the like), which can carry out a variety of functions under the control of one or more microprocessors or other control devices. Similarly, where the elements of the disclosed implementations are implemented using software programming or software elements, the systems and techniques can be implemented with a programming or scripting language, such as C, C++, Java, JavaScript, assembler, or the like, with the various algorithms being implemented with a combination of data structures, objects, processes, routines, or other programming elements.</p><p id="p-0089" num="0088">Functional aspects can be implemented in algorithms that execute on one or more processors. Furthermore, the implementations of the systems and techniques disclosed herein could employ a number of conventional techniques for electronics configuration, signal processing or control, data processing, and the like. The words &#x201c;mechanism&#x201d; and &#x201c;component&#x201d; are used broadly and are not limited to mechanical or physical implementations, but can include software routines in conjunction with processors, etc. Likewise, the terms &#x201c;system&#x201d; or &#x201c;tool&#x201d; as used herein and in the figures, but in any event based on their context, may be understood as corresponding to a functional unit implemented using software, hardware (e.g., an integrated circuit, such as an ASIC), or a combination of software and hardware. In certain contexts, such systems or mechanisms may be understood to be a processor-implemented software system or processor-implemented software mechanism that is part of or callable by an executable program, which may itself be wholly or partly composed of such linked systems or mechanisms.</p><p id="p-0090" num="0089">Implementations or portions of implementations of the above disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium. A computer-usable or computer-readable medium can be a device that can, for example, tangibly contain, store, communicate, or transport a program or data structure for use by or in connection with a processor. The medium can be, for example, an electronic, magnetic, optical, electromagnetic, or semiconductor device.</p><p id="p-0091" num="0090">Other suitable mediums are also available. Such computer-usable or computer-readable media can be referred to as non-transitory memory or media, and can include volatile memory or non-volatile memory that can change over time. A memory of an apparatus described herein, unless otherwise specified, does not have to be physically contained by the apparatus, but is one that can be accessed remotely by the apparatus, and does not have to be contiguous with other memory that might be physically contained by the apparatus.</p><p id="p-0092" num="0091">While the disclosure has been described in connection with certain implementations, it is to be understood that the disclosure is not to be limited to the disclosed implementations but, on the contrary, is intended to cover various modifications and equivalent arrangements included within the scope of the appended claims, which scope is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures as is permitted under the law.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>receiving, at a device connected to a telephone call, a message indicative of a request from another device connected to the telephone call to switch the telephone call to a virtual meeting, wherein a modality by which the message is received is based on whether a client application associated with a web service used to implement the virtual meeting is installed on the device; and</claim-text><claim-text>connecting, by the device, to the virtual meeting based on an interaction with the message at the device.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client application is installed on the device and the message is received as a push notification of the client application.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client application is not installed on the device and the message is received as a text message.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the message embeds a meeting identifier of the virtual meeting and a participant identifier that authenticates a user of the device to the virtual meeting.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the telephone call is maintained as an audio channel of the virtual meeting for the device.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein connecting to the virtual meeting comprises:<claim-text>opening, based on the interaction with the message, a web browser application at the device; and</claim-text><claim-text>connecting, by the device, to the virtual meeting using the web browser application and a uniform resource locator included in the message.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the connection of the device to the virtual meeting is based on an authentication of a user of the device using information associated with the device.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A non-transitory computer readable medium storing instructions operable to cause one or more processors to perform operations comprising:<claim-text>receiving, at a device connected to a telephone call, a message indicative of a request from another device connected to the telephone call to switch the telephone call to a virtual meeting, wherein a modality by which the message is received is based on whether a client application associated with a web service used to implement the virtual meeting is installed on the device; and</claim-text><claim-text>connecting, by the device, to the virtual meeting based on an interaction with the message at the device.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the operations for connecting to the virtual meeting comprise:<claim-text>transmitting, from the device based on the interaction with the message, a request to connect the device to the virtual meeting, wherein the request to connect the device to the virtual meeting causes a server used by the web service to authenticate the device using information associated with the device.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the operations for connecting to the virtual meeting comprise:<claim-text>causing a processing of a session initiation protocol transaction between the web service and a telephony service used to implement the telephone call.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein a video channel used by the device within the virtual meeting is bound to an audio channel maintaining the telephone call as audio of the virtual meeting for the device.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the message includes a participant identifier used to authenticate a user of the device.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the message is received from the web service.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the telephone call is maintained as an audio channel of the virtual meeting for the device and bound to a video channel associated with the device within the virtual meeting.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. An apparatus, comprising:<claim-text>a memory; and</claim-text><claim-text>a processor configured to execute instructions stored in the memory to:<claim-text>receive, at a device connected to a telephone call, a message indicative of a request from another device connected to the telephone call to switch the telephone call to a virtual meeting, wherein a modality by which the message is received is based on whether a client application associated with a web service used to implement the virtual meeting is installed on the device; and</claim-text><claim-text>connect, by the device, to the virtual meeting based on an interaction with the message at the device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor is configured to execute the instructions to:<claim-text>determine whether the client application is installed on the device based on the receipt of the message.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the device is connected to the virtual meeting over a channel opened between the device and the web service based on an authentication of a user of the device.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, based on whether the client application is installed on the device, the message is one of a push notification of the client application or a text message.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, to connect to the virtual meeting, the processor is configured to execute the instructions to:<claim-text>cause a channel to open between the device and the web service.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein a connection of the device to the virtual meeting is based on an authentication matching a telephone number associated with the device to a telephone number connected to the telephone call.</claim-text></claim></claims></us-patent-application>