<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230001311A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230001311</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17939154</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>828</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>63</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>828</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>63</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AUTONOMIC CLOUD TO EDGE COMPUTE ALLOCATION IN TRADE TRANSACTIONS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17039358</doc-number><date>20200930</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17939154</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>International Business Machines Corporation</orgname><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Baughman</last-name><first-name>Aaron K.</first-name><address><city>Cary</city><state>NC</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Gudimetla</last-name><first-name>Sai Krishna Reddy</first-name><address><city>Jersey City</city><state>NJ</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Forster</last-name><first-name>Micah</first-name><address><city>Round Rock tx\\</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>SHELTON</last-name><first-name>COREY</first-name><address><city>Marietta</city><state>GA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>International Business Machines Corporation</orgname><role>02</role><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A computer-implemented method and system for autonomic cloud to edge compute allocations in a sports fantasy league trade transaction. The computer implemented method includes, in one embodiment, calculating, based on an expected return associated with each player on each of a plurality of teams in a fantasy sports league, a valuation for each player. An embodiment includes determining a positional need for each of the plurality of teams in the fantasy sports league, and determining, based on the valuation for each player and the positional need for each team, one or more players to include in a trade with another team of the plurality of teams.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="131.15mm" wi="158.75mm" file="US20230001311A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="219.03mm" wi="157.40mm" orientation="landscape" file="US20230001311A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="226.57mm" wi="161.80mm" orientation="landscape" file="US20230001311A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="211.67mm" wi="98.47mm" orientation="landscape" file="US20230001311A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="178.90mm" wi="155.79mm" orientation="landscape" file="US20230001311A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="136.40mm" wi="149.52mm" orientation="landscape" file="US20230001311A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="237.07mm" wi="162.64mm" orientation="landscape" file="US20230001311A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="223.35mm" wi="154.26mm" orientation="landscape" file="US20230001311A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="235.46mm" wi="160.02mm" orientation="landscape" file="US20230001311A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="208.20mm" wi="156.29mm" orientation="landscape" file="US20230001311A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="210.74mm" wi="156.29mm" orientation="landscape" file="US20230001311A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="204.30mm" wi="156.21mm" orientation="landscape" file="US20230001311A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="93.90mm" wi="144.95mm" orientation="landscape" file="US20230001311A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="208.96mm" wi="138.35mm" orientation="landscape" file="US20230001311A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates generally to data processing systems, and more particularly, to autonomic cloud to edge compute allocations.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Large scale optimization problems with many different combinations require significant amounts of computational power to explore feasible solutions. Under heavy cloud network traffic, the raw amount of service demand can commonly overwhelm and exhaust an origin server.</p><p id="p-0004" num="0003">Edge computing relates to deployment of data-handling activities or other network compute and processing operations away from centralized servers and always-connected network segments, and toward individual sources of data capture, such as endpoints associated with end users including laptops, tablets or smartphones. Thus, edge computing refers to data processing power at the edge of a network instead of centralizing that processing power in a cloud or a central data warehouse. By processing data closer to the source and prioritizing traffic, edge computing reduces the amount of data flowing to and from the primary network, leading to lower latency, faster overall speed and increased system responsiveness to end user requirements.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">The illustrative embodiments provide a method, system, and computer program product. An embodiment includes calculating, based on an expected return associated with each player on each of a plurality of teams in a fantasy sports league, a valuation for each player. An embodiment includes determining a positional need for each of the plurality of teams in the fantasy sports league. An embodiment includes determining, based on the valuation for each player and the positional need for each team, one or more players to include in a trade with another team of the plurality of teams.</p><p id="p-0006" num="0005">An embodiment includes a computer usable program product. The computer usable program product includes one or more computer-readable storage devices. Program instructions stored on at least one of the one or more storage devices are executable in one or more processors to provide for determining, based on a valuation for each player and a positional need for each team of a plurality of teams in fantasy sports league, one or more players to include in a trade with another team of the plurality of teams.</p><p id="p-0007" num="0006">An embodiment includes a computer system. The computer system includes one or more processors, one or more computer-readable memories, and one or more computer-readable storage devices. Program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories. The program instructions are executable in the one or more processors to provide for determining, based on a valuation for each player and a positional need for each team of a plurality of teams in fantasy sports league, one or more players to include in a trade with another team of the plurality of teams.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0008" num="0007">Certain novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of the illustrative embodiments when read in conjunction with the accompanying drawings, wherein:</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a block diagram of a network of data processing systems in which illustrative embodiments of cloud to edge compute allocations are implemented;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a block diagram of a data processing system in which illustrative embodiments are implemented;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts a block diagram of an example implementing illustrative embodiments of cloud to edge compute allocations;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an illustrative embodiment of an algorithm for implementing cloud to edge compute allocations;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an illustrative embodiment of determining optimal cloud to edge compute allocations in accordance with a pareto hull based multi-objective optimization;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an architecture for a sports team fantasy league in an illustrative embodiment;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an illustrative embodiment of compute allocations for a sports team fantasy league including example cloud and edge allocations.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts an illustrative embodiment of example user interfaces rendered at an edge device;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts an illustrative embodiment of team pairing in accordance with a sports team fantasy league;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts an illustrative embodiment related to a prospective trade opportunity within a sports team fantasy league;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>11</b></figref> depicts an illustrative embodiment related to a likelihood of acceptance of a prospective trade opportunity within a sports team fantasy league.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts a flowchart, in an illustrative embodiment, of determining a prospective trade based on optimal cloud to edge compute allocations; and</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts a flowchart of another an illustrative embodiment of determining a prospective trade based on optimal cloud to edge compute allocations.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0022" num="0021">The illustrative embodiments recognize that there is a need for providing a user or a given user group with solutions described herein that increase computing efficiencies and responsiveness to users by autonomically allocating compute resources amongst cloud and edge computing devices, particularly in highly data- and processing-intensive context of identifying and fulfilling trade prospects in a sports team fantasy league.</p><p id="p-0023" num="0022">Embodiments herein recognize that with traditional networks, including cloud computing networks, an end user device or other edge computing device sends information to a data center that may be hundreds of miles away. Data takes time to travel across large physical distances. As a result, processing, accessing and storage delays can occur. With edge computing, critical functions can be processed at the network's edge in real time. Data requiring less real time intensive, or secondary, processing can be processed in the cloud.</p><p id="p-0024" num="0023">Among other technical advantages and benefits, embodiments herein provide autonomically shifting compute allocations amongst cloud and edge computing devices and systems. Embodiments herein also provide user interface features rendered at edge devices to a user, in a sports team fantasy league, in relation with identifying and implementing prospective player trades among opposing teams, taking into account a level of risk that would be deemed acceptable to the given user.</p><p id="p-0025" num="0024">Other technical advantages and benefits described include, in embodiments, learning based on based on a shape of a multi-objective optimization pareto hull, creating and deploying lag and leading indicator variables that inform the upper and lower bounds of an optimization problem with bag size K, simulating suggested computing changes to validate optimal user outcomes, decision models to implement simulated changes, and autonomic shifting of computing from cloud to edge based on the specific computations required to change the pareto hull. And changing the edge versus cloud computation locations based on the spread in the pareto hull data.</p><p id="p-0026" num="0025">Other existing approaches also have applicable limitations. For example, an example of a football sports fantasy league can have data and processing implications to the scale of 10 Million users per day, with hundreds of Petabytes of data served each week.</p><p id="p-0027" num="0026">In the example of a football sports fantasy league, some embodiments herein propose a novel approach to optimize trade value (Valuation Value) while minimizing trade loss (Tradability) between two opposing teams within the league. The discovered trade packages are evaluated by a likelihood of acceptance by both teams. The final results will be displayed on a user experience for both mobile and desktop edge devices. The compute load of the system will be spread between cloud and edge. Several predictors will be precomputed on the cloud and available for access by the edge, while the majority of the core algorithms will run on the edge, in embodiments described herein.</p><p id="p-0028" num="0027">Illustrative embodiments herein eliminate or minimize the latter problems and provide a mechanism for autonomically allocating processing and other resources amongst edge and cloud computing devices and system. In particular, multi-objective compute allocation optimization mechanisms described herein provide an end user at an edge device with responsive, efficient experience in engaging in sports team fantasy league player trades. Furthermore, the mechanisms described can be correlated with other compute allocation techniques and systems, edge and cloud computing devices, edge device user interfaces, storage, virtualized network computing, and other systems in relation to shifting optimal compute allocations amongst edge and cloud computing devices.</p><p id="p-0029" num="0028">An embodiment can be implemented as a fantasy sports team player trade application constituted of any combination of hardware and software program instructions. The fantasy sports team player trade application implementing an embodiment can be configured as a modification of an existing server computing device or system, as a separate application that operates in conjunction with a server device, or some combination thereof.</p><p id="p-0030" num="0029">A method of an embodiment described herein, when implemented to execute on a cloud or edge device or data processing system, comprises substantial advancement of the functionality of that device or data processing system to automonically allocate compute resources amongst cloud and edge devices and system.</p><p id="p-0031" num="0030">The illustrative embodiments are described with respect to prospective player trades relating to sports team fantasy leagues via applications that are constituted of any combination of hardware and software program instructions, including compute allocation applications installed on server devices and systems, edge devices, physical CPU cores, virtual CPU, memory storage devices, data processing systems, virtual machines and container environments, components, and applications only as examples. Any specific manifestations of these and other similar artifacts are not intended to be limiting to the invention. Any suitable manifestation of these and other similar artifacts can be selected within the scope of the illustrative embodiments.</p><p id="p-0032" num="0031">Furthermore, the illustrative embodiments may be implemented with respect to any type of data, data source, or access to a data source over a data network. Any type of data storage device may provide the data to an embodiment of the invention, either locally at a data processing system or over a data network, within the scope of the invention. Where an embodiment is described using an application at a server device, any type of data storage device suitable for use with the server device may provide the data to such embodiment, either locally at the mobile device or over a data network, within the scope of the illustrative embodiments.</p><p id="p-0033" num="0032">The illustrative embodiments are described using specific code, designs, architectures, protocols, layouts, schematics, and tools only as examples and are not limiting to the illustrative embodiments. Furthermore, the illustrative embodiments are described in some instances using particular software, tools, and data processing environments only as an example for the clarity of the description. The illustrative embodiments may be used in conjunction with other comparable or similarly purposed structures, systems, applications, or architectures. For example, other comparable mobile devices, structures, systems, applications, or architectures therefor, may be used in conjunction with such embodiment of the invention within the scope of the invention. An illustrative embodiment may be implemented in hardware, software, or a combination thereof.</p><p id="p-0034" num="0033">The examples in this disclosure are used only for the clarity of the description and are not limiting to the illustrative embodiments. Additional data, operations, actions, tasks, activities, and manipulations will be conceivable from this disclosure and the same are contemplated within the scope of the illustrative embodiments.</p><p id="p-0035" num="0034">Any advantages listed herein are only examples and are not intended to be limiting to the illustrative embodiments. Additional or different advantages may be realized by specific illustrative embodiments. Furthermore, a particular illustrative embodiment may have some, all, or none of the advantages listed above.</p><p id="p-0036" num="0035">With reference to the figures and in particular with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, these figures are example diagrams of data processing environments in which illustrative embodiments are implemented. <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> are only examples and are not intended to assert or imply any limitation with regard to the environments in which different embodiments are implemented. A particular implementation may make many modifications to the depicted environments based on the following description.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a block diagram of a network of data processing systems in which illustrative embodiments of cloud to edge compute allocations are implemented. Data processing environment <b>100</b> is a network of computers in which the illustrative embodiments are implemented and includes both cloud based and edge based compute resources and devices. Data processing environment <b>100</b> includes network <b>102</b>. Network <b>102</b> is the medium used to provide communications links between various cloud and edge devices and computers connected together within data processing environment <b>100</b>. Network <b>102</b> may include connections, such as wire, wireless communication links, or fiber optic cables.</p><p id="p-0038" num="0037">Clients or servers are only example roles of certain data processing systems connected to network <b>102</b> and are not intended to exclude other configurations or roles for these data processing systems. Server <b>104</b> and server <b>106</b> couple to network <b>102</b> along with storage unit <b>108</b>. Software applications may execute on any computer in data processing environment <b>100</b>. Clients <b>112</b>, <b>114</b> and <b>132</b> are edge computing devices also coupled to network <b>102</b>. A data processing system, such as server <b>104</b> or <b>106</b>, or clients <b>112</b>, <b>114</b> and <b>132</b> may contain data and may have software applications or software tools executing thereon.</p><p id="p-0039" num="0038">Only as an example, and without implying any limitation to such architecture, <figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts certain components that are usable in an example implementation of an embodiment. For example, servers <b>104</b> and <b>106</b>, and clients <b>112</b>, <b>114</b>, are depicted as servers and clients only as example and not to imply a limitation to a client-server architecture. As another example, an embodiment can be distributed across several data processing systems and a data network as shown, whereas another embodiment can be implemented on a single data processing system within the scope of the illustrative embodiments. Data processing systems <b>104</b>, <b>106</b>, and <b>114</b> also represent example nodes in a cluster, partitions, and other configurations suitable for implementing an embodiment.</p><p id="p-0040" num="0039">Device <b>132</b> is an example of a mobile devices described herein. For example, device <b>132</b> can take the form of a smartphone, a tablet computer, a laptop computer, client <b>110</b> in a portable form, a wearable computing device, or any other suitable device. Any software application described as executing in another data processing system in <figref idref="DRAWINGS">FIG. <b>1</b></figref> can be configured to execute in device <b>132</b> in a similar manner. Any data or information stored or produced in another data processing system in <figref idref="DRAWINGS">FIG. <b>1</b></figref> can be configured to be stored or produced in device <b>132</b> in a similar manner.</p><p id="p-0041" num="0040">Trade transaction applications <b>105</b>A, <b>105</b>B can be implemented in cloud and edge computing counterparts respectively in embodiments described herein. Trade transaction applications <b>105</b>A, <b>105</b>B are referred to collectively as trade transaction application <b>105</b> herein. Trade transaction application <b>105</b> can be comprised of any combination of hardware and software program instructions executable in one or more processors. Trade transaction application <b>105</b> can execute in servers <b>104</b> and <b>106</b>, storage unit <b>108</b>, and clients <b>112</b>, <b>114</b> coupled to network <b>102</b> using wired connections, wireless communication protocols, or other suitable data connectivity. Clients <b>112</b>, <b>114</b> may be, for example, a portable personal computer.</p><p id="p-0042" num="0041">In the depicted example, server <b>104</b> provides data, such as boot files, operating system images, and applications to clients <b>112</b>, <b>114</b>. Clients <b>112</b>, <b>114</b> and mobile device <b>132</b> may be edge computing client devices to server <b>104</b> in this example. Clients <b>112</b>, <b>114</b> as well as device <b>132</b> may include their own data, boot files, operating system images, and applications. Data processing environment <b>100</b> may include additional servers, clients, and other devices that are not shown.</p><p id="p-0043" num="0042">In the depicted example, cloud based data processing environment <b>100</b> may be the Internet. Network <b>102</b> may represent a collection of networks and gateways that use the Transmission Control Protocol/Internet Protocol (TCP/IP) and other protocols to communicate with one another. At the heart of the Internet is a backbone of data communication links between major nodes or host computers, including thousands of commercial, governmental, educational, and other computer systems that route data and messages. Of course, data processing environment <b>100</b> also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN). <figref idref="DRAWINGS">FIG. <b>1</b></figref> is intended as an example, and not as an architectural limitation for the different illustrative embodiments.</p><p id="p-0044" num="0043">Among other uses, data processing environment <b>100</b> may be used for implementing a client-server environment in which the illustrative embodiments may be implemented. A client-server environment enables software applications and data to be distributed across a network such that an application functions by using the interactivity between a client data processing system and a server data processing system. Data processing environment <b>100</b> may also employ a service oriented architecture where interoperable software components distributed across a network may be packaged together as coherent business applications. Data processing environment <b>100</b> may also take the form of a cloud, and employ a cloud computing model of service delivery for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g. networks, network bandwidth, servers, processing, memory, storage, applications, virtual machines, and services) that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a block diagram of a data processing system in which illustrative embodiments are implemented. Data processing system <b>200</b> is an example of a computer, such as servers <b>104</b> and <b>106</b>, or another type of device in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments.</p><p id="p-0046" num="0045">Data processing system <b>200</b> is also representative of a data processing system or a configuration therein, such as data processing system <b>100</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref> in which computer usable program code or instructions implementing the processes of the illustrative embodiments may be located. Data processing system <b>200</b> is described as a computer only as an example, without being limited thereto. Implementations, in whole or only in part, in the form of other devices, such as devices <b>132</b>, <b>134</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, may modify data processing system <b>200</b>, such as by adding a display, touch interface, or an audio interface, and even eliminate certain depicted components from data processing system <b>200</b> without departing from the general description of the operations and functions of data processing system <b>200</b> described herein.</p><p id="p-0047" num="0046">In the depicted example, data processing system <b>200</b> employs a hub architecture including North Bridge and memory controller hub (NB/MCH) <b>202</b> and South Bridge and input/output (I/O) controller hub (SB/ICH) <b>204</b>. Processing unit <b>206</b>, main memory <b>208</b>, and graphics processor <b>210</b> are coupled to North Bridge and memory controller hub (NB/MCH) <b>202</b>. Processing unit <b>206</b> may contain one or more processors and may be implemented using one or more heterogeneous processor systems. Processing unit <b>206</b> may be a multi-core processor. Graphics processor <b>210</b> may be coupled to NB/MCH <b>202</b> through an accelerated graphics port (AGP) in certain implementations.</p><p id="p-0048" num="0047">In the depicted example, local area network (LAN) adapter <b>212</b> is coupled to South Bridge and I/O controller hub (SB/ICH) <b>204</b>. Audio adapter <b>216</b>, keyboard and mouse adapter <b>220</b>, modem <b>222</b>, read only memory (ROM) <b>224</b>, universal serial bus (USB) and other ports <b>232</b>, and PCI/PCIe devices <b>234</b> are coupled to South Bridge and I/O controller hub <b>204</b> through bus <b>238</b>. Hard disk drive (HDD) or solid-state drive (SSD) <b>226</b> and CD-ROM <b>230</b> are coupled to South Bridge and I/O controller hub <b>204</b> through bus <b>240</b>. PCI/PCIe devices <b>234</b> may include, for example, Ethernet adapters, add-in cards, and PC cards for notebook computers. PCI uses a card bus controller, while PCIe does not. ROM <b>224</b> may be, for example, a flash binary input/output system (BIOS). Hard disk drive <b>226</b> and CD-ROM <b>230</b> may use, for example, an integrated drive electronics (IDE), serial advanced technology attachment (SATA) interface, or variants such as external-SATA (eSATA) and micro-SATA (mSATA). A super I/O (SIO) device <b>236</b> may be coupled to South Bridge and I/O controller hub (SB/ICH) <b>204</b> through bus <b>238</b>.</p><p id="p-0049" num="0048">Memories, such as main memory <b>208</b>, ROM <b>224</b>, or flash memory (not shown), are some examples of computer usable storage devices. Hard disk drive or solid state drive <b>226</b>, CD-ROM <b>230</b>, and other similarly usable devices are some examples of computer usable storage devices including a computer usable storage medium.</p><p id="p-0050" num="0049">An operating system runs on processing unit <b>206</b>. The operating system coordinates and provides control of various components within data processing system <b>200</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The operating system may be a commercially available operating system for any type of computing platform, including but not limited to server systems, personal computers, and mobile devices. An object oriented or other type of programming system may operate in conjunction with the operating system and provide calls to the operating system from programs or applications executing on data processing system <b>200</b>.</p><p id="p-0051" num="0050">Instructions for the operating system, the object-oriented programming system, and applications or programs, such as trade transaction application <b>105</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, are located on storage devices, such as in the form of code <b>226</b>A on hard disk drive <b>226</b>, and may be loaded into at least one of one or more memories, such as main memory <b>208</b>, for execution by processing unit <b>206</b>. The processes of the illustrative embodiments may be performed by processing unit <b>206</b> using computer implemented instructions, which may be located in a memory, such as, for example, main memory <b>208</b>, read only memory <b>224</b>, or in one or more peripheral devices.</p><p id="p-0052" num="0051">Furthermore, in one case, code <b>226</b>A may be downloaded over network <b>201</b>A from remote system <b>201</b>B, where similar code <b>201</b>C is stored on a storage device <b>201</b>D. in another case, code <b>226</b>A may be downloaded over network <b>201</b>A to remote system <b>201</b>B, where downloaded code <b>201</b>C is stored on a storage device <b>201</b>D.</p><p id="p-0053" num="0052">The hardware in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>2</b></figref> may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash memory, equivalent non-volatile memory, or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>2</b></figref>. In addition, the processes of the illustrative embodiments may be applied to a multiprocessor data processing system.</p><p id="p-0054" num="0053">In some illustrative examples, data processing system <b>200</b> may be a personal digital assistant (PDA), which is generally configured with flash memory to provide non-volatile memory for storing operating system files and/or user-generated data. A bus system may comprise one or more buses, such as a system bus, an I/O bus, and a PCI bus. Of course, the bus system may be implemented using any type of communications fabric or architecture that provides for a transfer of data between different components or devices attached to the fabric or architecture.</p><p id="p-0055" num="0054">A communications unit may include one or more devices used to transmit and receive data, such as a modem or a network adapter. A memory may be, for example, main memory <b>208</b> or a cache, such as the cache found in North Bridge and memory controller hub <b>202</b>. A processing unit may include one or more processors or CPUs.</p><p id="p-0056" num="0055">The depicted examples in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>2</b></figref> and above-described examples are not meant to imply architectural limitations. For example, data processing system <b>200</b> also may be a tablet computer, laptop computer, or smartphone device in addition to taking the form of a mobile or wearable device.</p><p id="p-0057" num="0056">Where a computer or data processing system is described as a virtual machine, a virtual device, or a virtual component, the virtual machine, virtual device, or the virtual component operates in the manner of data processing system <b>200</b> using virtualized manifestation of some or all components depicted in data processing system <b>200</b>. For example, in a virtual machine, virtual device, or virtual component, processing unit <b>206</b> is manifested as a virtualized instance of all or some number of hardware processing units <b>206</b> available in a host data processing system, main memory <b>208</b> is manifested as a virtualized instance of all or some portion of main memory <b>208</b> that may be available in the host data processing system, and disk <b>226</b> is manifested as a virtualized instance of all or some portion of disk <b>226</b> that may be available in the host data processing system. The host data processing system in such cases is represented by data processing system <b>200</b>.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts a block diagram of an example implementing illustrative embodiments of cloud to edge compute allocations. In an embodiment in accordance with <figref idref="DRAWINGS">FIG. <b>3</b></figref>, trade application <b>305</b>, implemented in edge and cloud computing device counterparts corresponding to trade transaction application <b>105</b> of the embodiment of FIG. <b>1</b>, is installed on servers <b>104</b>, <b>106</b>. Trade transaction application <b>105</b> includes any combination of executable program instructions and hardware to implement edge compute module <b>312</b>, cloud compute module <b>314</b> and reallocation module <b>314</b> for trade transactions based on autonomic reallocation of compute resources amongst cloud and edge computing devices. In some embodiments, trade application <b>305</b> comprises program instructions stored on one or more storage devices of server <b>104</b>, <b>106</b> for execution by one or more processors. Trade application <b>305</b> operates based at least in part on player valuation and team positional needs <b>304</b> as input and generates prospective trades <b>306</b> as output in some embodiments.</p><p id="p-0059" num="0058">Embodiments herein eliminate the problems of the existing solutions based at least in part upon autonomically shifting compute allocation amongst cloud and edge devices. In accordance with embodiments described herein, among other technical advantages and benefits, the mechanisms described herein can be correlated with other cloud and edge compute devices, storage, cloud virtual machines, trade transaction types, compute optimization techniques and algorithms, including multi-objective optimizations, in determining trade transactions.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an illustrative embodiment of an algorithm <b>400</b> for implementing cloud to edge compute allocations. At block <b>401</b>, acquiring user biometrics at a user edge device for identifying a given user or user device. The user biometrics includes physiological biometric data of the user, so that the user interface rendered in relations to the trade transaction application can be tailored to the user, for example, a younger user.</p><p id="p-0061" num="0060">At blocks <b>402</b>A,<b>402</b>B, the leading and lag indicator variables are chosen to model a risk level of a user, and a user's behavior in relation to the user's risk appetite. At block <b>402</b>A, lag variables are selected based on historical or accumulative information and is based on multiple regression models in one embodiment. At block <b>402</b>B, leading variables are based on future or forecast information, in variable future timeframes, and also based on multiple regression models in one embodiment.</p><p id="p-0062" num="0061">At block <b>403</b>, the alpha variable constitutes a weight predictor in an artificial intelligence (AI) or neural network predictive model, which can be a convolution neural network (CNN) in one embodiment. In particular, the knapsack represents a bounding of the risk level that might apply to, or be acceptable to, a particular user in accordance with the alpha variable. In an example embodiment of a sports fantasy league trade transaction described herein, the AI predictive model is based at least in part on extracting a set of predictors in accordance with a prospective player trade. The set of predictors, in such embodiment, is based at least partly on a player auction value, a player injury status, and a team roster positional count associated with each of the plurality of teams of the sports fantasy league.</p><p id="p-0063" num="0062">At block <b>404</b>, the combinatorial optimization estimates a total number of items, solutions or selections that can &#x201c;fit&#x201d; into the user's knapsack representation in block <b>403</b>. The total combination of items is based on a valuation and cost of the items given the boundary of a given user's knapsack representation at block <b>403</b>, in one embodiment. At block <b>405</b>, a pareto hull technique is applied to estimate, of all the solutions determined from the previous steps, which ones constitute the most optimal solutions for the given user, taking into account the user's risk level attributes.</p><p id="p-0064" num="0063">At block <b>406</b>, depending on uniqueness of the optimal solutions, in one embodiment as indicated by how spatially separated the identified solutions are within the pareto hull rendering, shifting compute allocation between edge and cloud compute devices. At block <b>407</b>, increasing a forecast window, for example related to the leading variables of block <b>402</b>B, to change a shape of the pareto hull. Thus, enabling computation of prospective trade solutions that are even further spatially separated, representing more distinctive solutions to present a user at block <b>408</b>. An example embodiment includes calculating, at a user interface of an edge computing device, a likelihood of trade acceptance associated with a prospective trade, and presenting a prospective trade when the likelihood of acceptance is calculated as being greater than a predetermined threshold likelihood.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an illustrative embodiment of determining optimal cloud to edge compute allocations in accordance with a pareto hull based multi-objective optimization. In some embodiments of the pareto hull depiction, solutions <b>501</b>-<b>506</b> represent identified optimal solutions, constituting potential trade prospects in one embodiment, of varying uniqueness for presentation to a user. An amount of spatial separation between any pair of adjacent solutions within solution set <b>501</b>-<b>506</b> indicates a degree of uniqueness or distinctiveness between that given pair of solutions. Thus, a user is presented with more distinctive or different prospective trades as the degree of spatial separation between any two adjacent solutions increases in such embodiments.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an illustrative embodiment of an architecture for a sports team fantasy league. Cloud computing devices or components <b>601</b> are communicatively coupled with various edge computing devices <b>602</b> across various cloud- and edge-based communication platforms.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an illustrative embodiment of compute allocations for a sports team fantasy league including example cloud and edge allocations. Cloud compute allocations enable cloud compute functions <b>701</b> in one embodiment. Edge compute allocations enable edge compute functions <b>702</b> in the embodiment of <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts an illustrative embodiment of example user interfaces rendered at an edge device. User interfaces <b>801</b>A-<b>801</b>B depict various display rendering of trade opportunities available to a user at an edge device.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts an illustrative embodiment of team pairing in accordance with a sports team fantasy league. Team pairing can be based on compute allocations between cloud device <b>901</b>A and edge device <b>901</b>B, to provide trade prospects in view of player and roster trades that maximize overall value to the sports fantasy league, in an embodiment.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts an illustrative embodiment related to prospective trade opportunities within a sports team fantasy league. Team pairing proposes player trades <b>1001</b> with opposing teams, based on compute allocations between cloud and edge devices, with results or user recommendations presented at a user interface <b>1002</b> of an edge device.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>11</b></figref> depicts an illustrative embodiment related to a likelihood of acceptance of a prospective trade opportunity within a sports team fantasy league. The likelihood of trade acceptance is calculated based on compute allocations amongst cloud device <b>1101</b>A and edge device <b>1101</b>B. In the embodiment depicted, the likelihood of trade acceptance <b>1103</b> is presented at a user interface <b>1102</b> of an edge device.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts a flowchart, in an illustrative embodiment <b>1200</b>, of determining a prospective trade based on optimal cloud to edge compute allocations.</p><p id="p-0073" num="0072">At block <b>1210</b>, calculating, based on an expected return associated with each player on each of a plurality of teams in a fantasy sports league, a valuation for each player.</p><p id="p-0074" num="0073">At block <b>1220</b>, determining a positional need for each of the plurality of teams in the fantasy sports league.</p><p id="p-0075" num="0074">At block <b>1230</b>, determining, based on the valuation for each player and the positional need for each team, one or more players to include in a trade with another team of the plurality of teams.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts a flowchart of another an illustrative embodiment <b>1300</b> of determining a prospective trade based on optimal cloud to edge compute allocations. In some embodiments, steps described in reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref> can be performed in conjunction with the steps described with regard to <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0077" num="0076">At block <b>1310</b>, calculating, at least in part in conjunction with a predictive model, a likelihood of trade acceptance in accordance with the trade. The likelihood of trade acceptance as determined can be presented, in embodiments, to an end user edge device such as a mobile phone or mobile computing device. An embodiment includes presenting, at a user interface of an edge computing device, at least one trade acceptance when the likelihood of trade acceptance associated therewith is greater than a predetermined threshold likelihood.</p><p id="p-0078" num="0077">In some embodiments, the method is initiated in one or more cloud computing devices. A compute allocation is autonomically shifted amongst the cloud computing device and at least one edge computing device in performing at least a portion of the method. Autonomically shifting the compute allocations is based at least in part on a pareto hull multi-objective optimization technique, and in some embodiments in particular, shifting the compute allocations is based on computations that change a shape of the pareto hull. In the embodiment of shifting compute allocations between cloud and edge devices in fantasy league sports teams as described herein, the autonomically shifting is responsive, at least in part, to determining a team roster positional need. In such embodiments, based on computations at the at least one edge device as a result of the autonomic shifting, determining one or more players to include in the prospective trades.</p><p id="p-0079" num="0078">Thus, a computer implemented method, system or apparatus, and computer program product are provided in the illustrative embodiments for autonomic cloud to edge compute allocations for prospective trade transactions. Where an embodiment is described as implemented in an application, the delivery of the application in a Software as a Service (SaaS) model is contemplated within the scope of the illustrative embodiments. In a SaaS model, the capability of the application implementing an embodiment is provided to a user by executing the application in a cloud infrastructure. The user can access the application using a variety of client devices through a thin client interface such as a web browser (e.g., web-based e-mail), or other light-weight client-applications. The user does not manage or control the underlying cloud infrastructure including the network, servers, operating systems, or the storage of the cloud infrastructure. In some cases, the user may not even manage or control the capabilities of the SaaS application. In some other cases, the SaaS implementation of the application may permit a possible exception of limited user-specific application configuration settings.</p><p id="p-0080" num="0079">The present invention may be a system, a method, and/or a computer program product at any possible technical detail level of integration. The computer program product may include a computer readable storage medium (or media) having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.</p><p id="p-0081" num="0080">The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be, for example, but is not limited to, an electronic storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing. A non-exhaustive list of more specific examples of the computer readable storage medium includes the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a static random access memory (SRAM), a portable compact disc read-only memory (CD-ROM), a digital versatile disk (DVD), a memory stick, a floppy disk, a mechanically encoded device such as punch-cards or raised structures in a groove having instructions recorded thereon, and any suitable combination of the foregoing. A computer readable storage medium, as used herein, is not to be construed as being transitory signals per se, such as radio waves or other freely propagating electromagnetic waves, electromagnetic waves propagating through a waveguide or other transmission media (e.g., light pulses passing through a fiber-optic cable), or electrical signals transmitted through a wire.</p><p id="p-0082" num="0081">Computer readable program instructions described herein can be downloaded to respective computing/processing devices from a computer readable storage medium or to an external computer or external storage device via a network, for example, the Internet, a local area network, a wide area network and/or a wireless network. The network may comprise copper transmission cables, optical transmission fibers, wireless transmission, routers, firewalls, switches, gateway computers and/or edge servers. A network adapter card or network interface in each computing/processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing/processing device.</p><p id="p-0083" num="0082">Computer readable program instructions for carrying out operations of the present invention may be assembler instructions, instruction-set-architecture (ISA) instructions, machine instructions, machine dependent instructions, microcode, firmware instructions, state-setting data, configuration data for integrated circuitry, or either source code or object code written in any combination of one or more programming languages, including an object oriented programming language such as Smalltalk, C++, or the like, and procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The computer readable program instructions may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). In some embodiments, electronic circuitry including, for example, programmable logic circuitry, field-programmable gate arrays (FPGA), or programmable logic arrays (PLA) may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry, in order to perform aspects of the present invention.</p><p id="p-0084" num="0083">Aspects of the present invention are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems), and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer readable program instructions.</p><p id="p-0085" num="0084">These computer readable program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer, a programmable data processing apparatus, and/or other devices to function in a particular manner, such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function/act specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0086" num="0085">The computer readable program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other device to cause a series of operational steps to be performed on the computer, other programmable apparatus or other device to produce a computer implemented process, such that the instructions which execute on the computer, other programmable apparatus, or other device implement the functions/acts specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0087" num="0086">The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the blocks may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method comprising:<claim-text>calculating, by an edge computing device, based on an expected return associated with a player on a team in a plurality of teams in a fantasy sports league, a valuation for the player;</claim-text><claim-text>determining, by the edge computing device, a positional need for the team in the plurality of teams in the fantasy sports league;</claim-text><claim-text>determining, by the edge computing device, a first trade solution based on the valuation for the player and the positional need for the team, wherein the first trade solution comprises one or more players to include in a trade with another team of the plurality of teams; and</claim-text><claim-text>allocating, by the edge computing device, an amount of compute resources to a cloud computing device based on a comparison of the first trade solution to a second trade solution.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>calculating, at least partly in conjunction with an artificial intelligence (AI) predictive model, a likelihood of trade acceptance in accordance with the trade.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the AI predictive model is based at least in part on extracting a set of predictors in accordance with the trade, the set of predictors being based at least partly on a player auction value, a player injury status, and a roster positional count associated with the team in the plurality of teams.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising presenting, at a user interface of the edge computing device, at least one trade acceptance responsive to the likelihood associated therewith being greater than a predetermined threshold likelihood.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining a third trade solution by the edge computing device in conjunction with the cloud computing device according to the amount of compute resources allocated to the cloud computing device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the comparison of the first trade solution to the second trade solution comprises determining, by the edge computing device, an amount of spatial separation between the first trade solution and the second trade solution on a pareto hull rendering.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the calculating of the valuation for the first trade solution is based at least in part on a first forecast window, and<claim-text>wherein the method further comprises increasing the first forecast window to a second forecast window resulting in a change to a shape of the pareto hull.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the allocating of the amount of compute resources comprises autonomically shifting, by the edge computing device, the amount of compute resources to the cloud computing device.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>determining, based on computations by the edge computing device, one or more players to include in the third trade solution in accordance with the autonomically shifted compute resources.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A computer usable program product comprising one or more computer-readable storage devices, and program instructions stored on at least one of the one or more storage devices, the program instructions when executed in one or more processors causing operations comprising:<claim-text>calculating, by an edge computing device, based on an expected return associated with a player on a team in a plurality of teams in a fantasy sports league, a valuation for the player;</claim-text><claim-text>determining, by the edge computing device, a positional need for the team in the plurality of teams in the fantasy sports league;</claim-text><claim-text>determining, by the edge computing device, a first trade solution based on the valuation for the player and the positional need for the team, wherein the first trade solution comprises one or more players to include in a trade with another team of the plurality of teams; and</claim-text><claim-text>allocating, by the edge computing device, an amount of compute resources to a cloud computing device based on a comparison of the first trade solution to a second trade solution.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer usable program product of <claim-ref idref="CLM-00010">claim 10</claim-ref> further comprising instructions when executed in the processor causing operations comprising:<claim-text>calculating, at least partly in conjunction with an artificial intelligence (AI) predictive model, a likelihood of trade acceptance in accordance with the trade.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer usable program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the AI predictive model is based at least in part on extracting a set of predictors in accordance with the trade, the set of predictors being based at least partly on a player auction value, a player injury status, and a roster positional count associated with the team in the plurality of teams.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer usable program product of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising instructions when executed in the processor causing operations comprising:<claim-text>presenting, at a user interface of the edge computing device, at least one trade acceptance responsive to the likelihood associated therewith being greater than a predetermined threshold likelihood.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer usable program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:<claim-text>determining a third trade solution by the edge computing device in conjunction with the cloud computing device according to the amount of compute resources allocated to the cloud computing device.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer usable program product of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the comparison of the first trade solution to the second trade solution comprises determining, by the edge computing device, an amount of spatial separation between the first trade solution and the second trade solution on a pareto hull rendering.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer usable program product of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the calculating of the valuation for the first trade solution is based at least in part on a first forecast window, and<claim-text>wherein the method further comprises increasing the first forecast window to a second forecast window resulting in a change to a shape of the pareto hull.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer usable program product of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the allocating of the amount of compute resources comprises autonomically shifting, by the edge computing device, the amount of compute resources to the cloud computing device.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer usable program product of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:<claim-text>instructions when executed in the processor causing operations comprising determining, based on computations by the edge computing device, one or more players to include in the third trade solution in accordance with the autonomically shifted compute resources.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A computer system comprising one or more processors, one or more computer-readable memories, and one or more computer-readable storage devices, and program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories, the program instructions when executed in the one or more processors causing operations comprising:<claim-text>calculating, by an edge computing device, based on an expected return associated with a player on a team in a plurality of teams in a fantasy sports league, a valuation for the player;</claim-text><claim-text>determining, by the edge computing device, a positional need for the team in the plurality of teams in the fantasy sports league;</claim-text><claim-text>determining, by the edge computing device, a first trade solution based on the valuation for the player and the positional need for the team, wherein the first trade solution comprises one or more players to include in a trade with another team of the plurality of teams; and</claim-text><claim-text>allocating, by the edge computing device, an amount of compute resources to a cloud computing device based on a comparison of the first trade solution to a second trade solution.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, the program instructions when executed in the processor causing operations, further comprising:<claim-text>calculating, at least partly in conjunction with an artificial intelligence (AI) predictive model, a likelihood of trade acceptance in accordance with the trade.</claim-text></claim-text></claim></claims></us-patent-application>