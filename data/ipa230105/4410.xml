<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004411A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004411</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17784866</doc-number><date>20200723</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>201911285977.1</doc-number><date>20191213</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>455</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>45541</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>45554</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2009</main-group><subgroup>45562</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2009</main-group><subgroup>45583</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD, APPARATUS AND DEVICE FOR GENERATING BARE METAL SERVER LINUX SYSTEM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>INSPUR SUZHOU INTELLIGENT TECHNOLOGY CO., LTD.</orgname><address><city>Suzhou, Jiangsu</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Shasha</first-name><address><city>Suzhou, Jiangsu</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CN2020/103647</doc-number><date>20200723</date></document-id><us-371c12-date><date>20220919</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Provided are a method, apparatus, and device for generating a bare metal server Linux system image, and a memory medium. The method includes: analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model; selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model; adding the target redundant array of independent disks driver to a boot file of a virtual machine to generate a target boot file; and exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, as the target bare metal server Linux system image.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="121.58mm" wi="138.35mm" file="US20230004411A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="133.18mm" wi="140.38mm" file="US20230004411A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="227.50mm" wi="137.50mm" file="US20230004411A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="102.11mm" wi="108.03mm" file="US20230004411A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><p id="p-0002" num="0001">This application claims priority to Chinese Patent Application No. 201911285977.1, filed on Dec. 13, 2019, in China National Intellectual Property Administration and entitled &#x201c;Method, Apparatus, and Device for Generating Bare Metal Server Linux System Image&#x201d;, the contents of which are hereby incorporated by reference in its entirety.</p><heading id="h-0001" level="1">FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to the technical field of computer applications, and particularly to a method, apparatus, and device for generating a bare metal server Linux system image, and a computer-readable memory medium.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0004" num="0003">A bare metal server, as flexible as a virtual machine and capable of implementing high-performance computing, is an elastically extensible high-performance computing server with the same computing performance as a conventional physical machine as well as an upgrade of a conventional physical server. It has the high performance of the conventional physical server, a convenient management platform like a cloud host, and the characteristic of security isolation, achieves high computing performance for users, and may meet requirements of a core application scenario for high performance and stability. Therefore, there is a deployment scenario of deploying a Linux system in a bare metal server of a virtualization platform.</p><p id="p-0005" num="0004">An existing method for deploying a Linux system in a bare metal server of a virtualization platform is generating a bare metal server Linux system image by use of a unified virtual machine boot file. However, different requirements may be stored for different users, so service requirements of users cannot be met, and the user experience is poor.</p><p id="p-0006" num="0005">In summary, how to effectively solve the problem that the existing method for deploying a Linux system in a bare metal server cannot meet a service requirement of a user and is poor in user experience is a problem urgent to be solved by those skilled in the art currently.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">An objective of the present disclosure is to provide a method for generating a bare metal server Linux system image. By the method, service requirements of a user are met better, and the user experience is improved. Another objective of the present disclosure is to provide an apparatus and device for generating a bare metal server Linux system image, and a computer-readable memory medium.</p><p id="p-0008" num="0007">In order to solve the foregoing technical problem, the present disclosure provides the following technical solution.</p><p id="p-0009" num="0008">A method for generating a bare metal server Linux system image is provided, including:</p><p id="p-0010" num="0009">analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model;</p><p id="p-0011" num="0010">selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver;</p><p id="p-0012" num="0011">adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file;</p><p id="p-0013" num="0012">exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, and determining the virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0014" num="0013">In a specific implementation mode of the present disclosure, after the exporting, from the virtual machine, a virtual machine disk image file containing the target boot file and before the determining the virtual machine disk image file as the target bare metal server Linux system image, the method further includes:</p><p id="p-0015" num="0014">performing file name modification on the virtual machine disk image file according to a preset bare metal server Linux system image name format to obtain a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</p><p id="p-0016" num="0015">The determining the virtual machine disk image file as the target bare metal server Linux system image includes:</p><p id="p-0017" num="0016">determining the modified virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0018" num="0017">In a specific implementation mode of the present disclosure, the adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file includes:</p><p id="p-0019" num="0018">performing a backup operation on the boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system to obtain a backup boot file;</p><p id="p-0020" num="0019">adding the target redundant array of independent disks driver to the backup boot file to generate the target boot file.</p><p id="p-0021" num="0020">In a specific implementation mode of the present disclosure, the analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model includes:</p><p id="p-0022" num="0021">analyzing the received bare metal server Linux system image generation request so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated, the target operating system model, and request sender identity information corresponding to the bare metal server Linux system image generation request.</p><p id="p-0023" num="0022">Before the selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, the method further includes:</p><p id="p-0024" num="0023">performing identity verification on the request sender identity information;</p><p id="p-0025" num="0024">when identity verification succeeds, executing the step of selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</p><p id="p-0026" num="0025">An apparatus for generating a bare metal server Linux system image is provided, including:</p><p id="p-0027" num="0026">a request analysis module, configured to analyze a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model;</p><p id="p-0028" num="0027">a driver selection module, configured to select, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver;</p><p id="p-0029" num="0028">a boot file generation module, configured to add the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file;</p><p id="p-0030" num="0029">a system image generation module, configured to export, from the virtual machine, a virtual machine disk image file containing the target boot file, and determine the virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0031" num="0030">In a specific implementation mode of the present disclosure, the apparatus further includes:</p><p id="p-0032" num="0031">a file name modification module, configured to, after the virtual machine disk image file containing the target boot file is exported from the virtual machine and before the virtual machine disk image file is determined as the target bare metal server Linux system image, perform file name modification on the virtual machine disk image file according to a preset bare metal server Linux system image name format to obtain a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</p><p id="p-0033" num="0032">The system image generation module is specifically a module configured to determine the modified virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0034" num="0033">In a specific implementation mode of the present disclosure, the boot file generation module includes:</p><p id="p-0035" num="0034">a boot file backup submodule, configured to perform a backup operation on the boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system to obtain a backup boot file; and</p><p id="p-0036" num="0035">a boot file generation submodule, configured to add the target redundant array of independent disks driver to the backup boot file to generate the target boot file.</p><p id="p-0037" num="0036">In a specific implementation mode of the present disclosure, the request analysis module is specifically a module configured to analyze the received bare metal server Linux system image generation request so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated, the target operating system model, and request sender identity information corresponding to the bare metal server Linux system image generation request.</p><p id="p-0038" num="0037">The apparatus further includes:</p><p id="p-0039" num="0038">an identity verification module, configured to, before the target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model is selected from the redundant array of independent disks driver library, perform identity verification on the request sender identity information.</p><p id="p-0040" num="0039">The driver selection module is specifically a module configured to, when identity verification succeeds, select, from the redundant array of independent disks driver library, the target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</p><p id="p-0041" num="0040">A device for generating a bare metal server Linux system image is provided, including:</p><p id="p-0042" num="0041">a memory, configured to store a computer program;</p><p id="p-0043" num="0042">a processor, configured to execute the computer program to implement any steps of the method for generating a bare metal server Linux system image as described above.</p><p id="p-0044" num="0043">A computer-readable memory medium is provided, having a computer program stored thereon which, when executed by a processor, implements any steps of the method for generating a bare metal server Linux system image as described above.</p><p id="p-0045" num="0044">The present disclosure provides a method for generating a bare metal server Linux system image, including: analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model; selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver; adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file; and exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, and determining the virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0046" num="0045">It can be seen from the above technical solution that a received bare metal server Linux system image generation request is analyzed to obtain a target configuration parameter of a target bare metal server Linux system image and a target operating system model, a redundant array of independent disks driver library that pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver is preset, a matched target redundant array of independent disks is selected according to the target configuration parameter and the target operating system model, and a boot program of a virtual machine is modified by use of the target redundant array of independent disks driver, thereby obtaining a customized target bare metal server Linux system image. Service requirements of a user are met better, and the user experience is improved.</p><p id="p-0047" num="0046">Correspondingly, embodiments of the present disclosure also provide an apparatus and device for generating a bare metal server Linux system image, and a computer-readable memory medium, which correspond to the method for generating a bare metal server Linux system image and have the foregoing technical effects. Elaborations are omitted herein.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0048" num="0047">In order to describe the technical solutions in the embodiments of the present disclosure or the prior art more clearly, the drawings required to be used in descriptions about the embodiments or the prior art will be introduced briefly below. Apparently, the drawings in the description below are only some embodiments of the present disclosure. Those ordinarily skilled in the art may further obtain other drawings according to these drawings without creative work.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an implementation flowchart of a method for generating a bare metal server Linux system image according to an embodiment of the present disclosure;</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is another implementation flowchart of a method for generating a bare metal server Linux system image according to an embodiment of the present disclosure;</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a structural block diagram of an apparatus for generating a bare metal server Linux system image according to an embodiment of the present disclosure; and</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a structural block diagram of a device for generating a bare metal server Linux system image according to an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0053" num="0052">In order to make the solutions of the present disclosure understood better by those skilled in the art, the present disclosure will be further described below in detail in combination with the drawings and specific implementation modes. Clearly, the described embodiments are not all but only part of embodiments of the present disclosure. All other embodiments obtained by those ordinarily skilled in the art based on the embodiments in the present disclosure without creative work shall fall within the scope of protection of the present disclosure.</p><heading id="h-0006" level="1">Embodiment 1</heading><p id="p-0054" num="0053">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>1</b></figref> is an implementation flowchart of a method for generating a bare metal server Linux system image according to an embodiment of the present disclosure. The method may include the following steps.</p><p id="p-0055" num="0054">S<b>101</b>: analyze a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model.</p><p id="p-0056" num="0055">When a bare metal server Linux system image needs to be generated, a bare metal server Linux system image generation request may be sent to a bare metal server Linux system image generation management center through a user terminal. The bare metal server Linux system image generation management center, when receiving the bare metal server Linux system image generation request, may contain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model in the bare metal server Linux system image generation request according to a service requirement of a current user. The received bare metal server Linux system image generation request may be analyzed so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated and the target operating system model.</p><p id="p-0057" num="0056">S<b>102</b>: select, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</p><p id="p-0058" num="0057">The redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver.</p><p id="p-0059" num="0058">A redundant array of independent disks driver library that pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver may be preset. The correspondence may be that, for each configuration parameter, an operating system model corresponds to a set of redundant array of independent disks drivers. After the target configuration parameter of the target bare metal server Linux system image to be generated and the target operating system model are obtained by analysis, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model may be selected from the redundant array of independent disks driver library.</p><p id="p-0060" num="0059">S<b>103</b>: add the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file.</p><p id="p-0061" num="0060">A blank virtual machine may be constructed in advance in a virtualization environment, a Linux operating system file is mounted to an optical disk driver of the constructed blank virtual machine, and a corresponding operating system is installed in the current blank virtual machine. After the target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model is selected, the target redundant array of independent disks driver may be added to a boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system, thereby modifying a hardware device drive parameter and adding a bare metal server memory card related driver to the boot file to generate a target boot file.</p><p id="p-0062" num="0061">S<b>104</b>: export, from the virtual machine, a virtual machine disk image file containing the target boot file, and determine the virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0063" num="0062">After the target boot file is generated, a virtual machine disk image file containing the target boot file may be exported from the virtual machine. Specifically, disk image files, i.e., an Open Virtualization Format (OVF) file and a disk image format file (qcow2 file), may be exported through an OVF file exporting function of the virtual machine, wherein the OVF file is a virtual machine configuration file, and the disk image format file is a virtual machine disk image file. The virtual machine disk image file is determined as the target bare metal server Linux system image.</p><p id="p-0064" num="0063">It can be seen from the above technical solution that a received bare metal server Linux system image generation request is analyzed to obtain a target configuration parameter of a target bare metal server Linux system image and a target operating system model, a redundant array of independent disks driver library that pre-stores a correspondence between each target configuration parameter, each target operating system model, and each redundant array of independent disks driver is preset, a matched target redundant array of independent disks is selected according to the target configuration parameter and the target operating system model, and a boot program of a virtual machine is modified by use of the target redundant array of independent disks driver, thereby obtaining a customized target bare metal server Linux system image. Service requirements of a user are met better, and the user experience is improved.</p><p id="p-0065" num="0064">It is to be noted that, based on the above-mentioned embodiment, the embodiments of the present disclosure also provide a corresponding improved solution. Interferences may be made between the same steps or corresponding steps in the following embodiment and embodiment 1 and between corresponding beneficial effects. Elaborations are omitted in the following improved embodiment.</p><heading id="h-0007" level="1">Embodiment 2</heading><p id="p-0066" num="0065">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, <figref idref="DRAWINGS">FIG. <b>2</b></figref> is another implementation flowchart of a method for generating a bare metal server Linux system image according to an embodiment of the present disclosure. The method may include the following steps.</p><p id="p-0067" num="0066">S<b>201</b>: analyze the received bare metal server Linux system image generation request so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated, the target operating system model, and request sender identity information corresponding to the bare metal server Linux system image generation request.</p><p id="p-0068" num="0067">The bare metal server Linux system image generation request may further contain request sender identity information corresponding to the bare metal server Linux system image generation request. After the bare metal server Linux system image generation request is received, the bare metal server Linux system image generation request may be analyzed to obtain the request sender identity information corresponding to the bare metal server Linux system image generation request.</p><p id="p-0069" num="0068">S<b>202</b>: perform identity verification on the request sender identity information.</p><p id="p-0070" num="0069">After the bare metal server Linux system image generation request is analyzed to obtain the request sender identity information, identity verification may be performed on the request sender identity information. For example, identity verification may be performed on the request sender identity information based on a user name and a password, or based on a digital signature. A specific identity verification mode may be selected according to an actual situation. No limits are made thereto in the embodiment of the present disclosure. Performing identity verification on the request sender identity information improves the system security.</p><p id="p-0071" num="0070">S<b>203</b>: when identity verification succeeds, select, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</p><p id="p-0072" num="0071">The redundant array of independent disks driver library pre-stores a correspondence between each target configuration parameter, each target operating system model, and each redundant array of independent disks driver.</p><p id="p-0073" num="0072">After identity verification is performed on the request sender identity information to obtain an identity verification result, only when identity verification succeeds, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model is selected from a redundant array of independent disks driver library.</p><p id="p-0074" num="0073">S<b>204</b>: perform a backup operation on the boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system to obtain a backup boot file.</p><p id="p-0075" num="0074">After a blank virtual machine is constructed, a Linux operating system file is mounted to an optical disk driver of the constructed blank virtual machine, and a corresponding operating system is installed in the current blank virtual machine, a backup operation may be performed on a boot file containing a hardware device drive parameter and a bare metal server memory card related driver in the virtual machine.</p><p id="p-0076" num="0075">S<b>205</b>: add the target redundant array of independent disks driver to the backup boot file to generate the target boot file.</p><p id="p-0077" num="0076">After the target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model is selected, the target redundant array of independent disks driver may be added to the backup boot file to generate a target boot file. Performing the backup operation on the boot file ensures the security of the boot file and deals with exceptions better.</p><p id="p-0078" num="0077">S<b>206</b>: export a virtual machine disk image file containing the target boot file from the virtual machine.</p><p id="p-0079" num="0078">S<b>207</b>: perform file name modification on the virtual machine disk image file according to a preset bare metal server Linux system image name format to obtain a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</p><p id="p-0080" num="0079">A standard bare metal server Linux system image name format may be preset. After the virtual machine disk image file is exported, file name modification may be performed on the virtual machine disk image file according to the preset bare metal server Linux system image name format, thereby obtaining a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</p><p id="p-0081" num="0080">S<b>208</b>: determine the modified virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0082" num="0081">After file name modification is performed according to the preset bare metal server Linux system image name format to obtain the modified virtual machine disk image file, the modified virtual machine disk image file may be determined as the target bare metal server Linux system image. Therefore, the target bare metal server Linux system image may be recognized more conveniently.</p><p id="p-0083" num="0082">Corresponding to the above method embodiment, the embodiments of the present disclosure also provide an apparatus for generating a bare metal server Linux system image. The following apparatus for generating a bare metal server Linux system image and the above method for generating a bare metal server Linux system image may correspondingly refer to each other.</p><p id="p-0084" num="0083">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a structural block diagram of an apparatus for generating a bare metal server Linux system image according to an embodiment of the present disclosure. The apparatus may include:</p><p id="p-0085" num="0084">a request analysis module <b>31</b>, configured to analyze a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model;</p><p id="p-0086" num="0085">a driver selection module <b>32</b>, configured to select, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver;</p><p id="p-0087" num="0086">a boot file generation module <b>33</b>, configured to add the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file;</p><p id="p-0088" num="0087">a system image generation module <b>34</b>, configured to export, from the virtual machine, a virtual machine disk image file containing the target boot file, and determine the virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0089" num="0088">It can be seen from the above technical solution that a received bare metal server Linux system image generation request is analyzed to obtain a target configuration parameter of a target bare metal server Linux system image and a target operating system model, a redundant array of independent disks driver library that pre-stores a correspondence between each target configuration parameter, each target operating system model, and each redundant array of independent disks driver is preset, a matched target redundant array of independent disks is selected according to the target configuration parameter and the target operating system model, and a boot program of a virtual machine is modified by use of the target redundant array of independent disks driver, thereby obtaining a customized target bare metal server Linux system image. Service requirements of a user are met better, and the user experience is improved.</p><p id="p-0090" num="0089">In a specific implementation mode of the present disclosure, the apparatus may further include:</p><p id="p-0091" num="0090">a file name modification module, configured to, after the virtual machine disk image file containing the target boot file is exported from the virtual machine and before the virtual machine disk image file is determined as the target bare metal server Linux system image, perform file name modification on the virtual machine disk image file according to a preset bare metal server Linux system image name format to obtain a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</p><p id="p-0092" num="0091">The system image generation module <b>34</b> is specifically a module configured to determine the modified virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0093" num="0092">In a specific implementation mode of the present disclosure, the boot file generation module <b>33</b> includes:</p><p id="p-0094" num="0093">a boot file backup submodule, configured to perform a backup operation on the boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system to obtain a backup boot file; and a boot file generation submodule, configured to add the target redundant array of independent disks driver to the backup boot file to generate the target boot file.</p><p id="p-0095" num="0094">In a specific implementation mode of the present disclosure, the request analysis module <b>31</b> is specifically a module configured to analyze the received bare metal server Linux system image generation request so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated, the target operating system model, and request sender identity information corresponding to the bare metal server Linux system image generation request.</p><p id="p-0096" num="0095">The apparatus may further include:</p><p id="p-0097" num="0096">an identity verification module, configured to, before the target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model is selected from the redundant array of independent disks driver library, perform identity verification on the request sender identity information.</p><p id="p-0098" num="0097">The driver selection module <b>32</b> is specifically a module configured to, when identity verification succeeds, select, from the redundant array of independent disks driver library, the target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</p><p id="p-0099" num="0098">Corresponding to the above method embodiment, referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram of a device for generating a bare metal server Linux system image according to the present disclosure. The device may include:</p><p id="p-0100" num="0099">a memory <b>41</b>, configured to store a computer program;</p><p id="p-0101" num="0100">a processor <b>42</b>, configured to execute the computer program stored in the memory <b>41</b> to implement the following steps:</p><p id="p-0102" num="0101">analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model; selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each target configuration parameter, each target operating system model, and each redundant array of independent disks driver; adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file; and exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, and determining the virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0103" num="0102">Introductions about the device provided in the present disclosure refer to the method embodiment, and elaborations are omitted in the present disclosure.</p><p id="p-0104" num="0103">Corresponding to the above method embodiment, the present disclosure also provides a computer-readable memory medium, storing a computer program that may be executed by a processor to implement the following steps:</p><p id="p-0105" num="0104">analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model; selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each target configuration parameter, each target operating system model, and each redundant array of independent disks driver; adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file; and exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, and determining the virtual machine disk image file as the target bare metal server Linux system image.</p><p id="p-0106" num="0105">The computer-readable memory medium may include various media capable of storing program codes, such as a U disk, a mobile hard disk, a Read-Only Memory (ROM), a Random Access Memory (RAM), a magnetic disk, or an optical disk.</p><p id="p-0107" num="0106">Introductions about the computer-readable memory medium provided in the present disclosure refer to the method embodiment, and elaborations are omitted in the present disclosure.</p><p id="p-0108" num="0107">Each embodiment in the specification is described progressively. Descriptions made in each embodiment focus on differences from the other embodiments, and the same or similar parts in each embodiment refer to the other embodiments. The apparatus, device, and computer-readable memory medium disclosed in the embodiments correspond to the method disclosed in the embodiments, and thus are described relatively briefly, and related parts refer to the descriptions about the method.</p><p id="p-0109" num="0108">The principle and implementation modes of the present disclosure are described herein with specific examples, and the descriptions about the above embodiments are only for helping in understanding the technical solution and core idea of the present disclosure. It is to be pointed out that those ordinarily skilled in the art may further make a plurality of improvements and embellishments to the present disclosure without departing from the principle of the present disclosure, and these improvements and embellishments shall also fall within the scope of protection of the claims of the present disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for generating a bare metal server Linux system image, by comprising:<claim-text>analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model;</claim-text><claim-text>selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver;</claim-text><claim-text>adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file; and</claim-text><claim-text>exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, and determining the virtual machine disk image file as the target bare metal server Linux system image.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein after the exporting, from the virtual machine, a virtual machine disk image file containing the target boot file and before the determining the virtual machine disk image file as the target bare metal server Linux system image, the method further comprises:<claim-text>performing file name modification on the virtual machine disk image file according to a preset bare metal server Linux system image name format to obtain a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file comprises:<claim-text>performing a backup operation on the boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system to obtain a backup boot file; and</claim-text><claim-text>adding the target redundant array of independent disks driver to the backup boot file to generate the target boot file.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model comprises:<claim-text>analyzing the received bare metal server Linux system image generation request so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated, the target operating system model, and request sender identity information corresponding to the bare metal server Linux system image generation request.</claim-text></claim-text></claim><claim id="CLM-005-8" num="005-8"><claim-text><b>5</b>.-<b>8</b>. (canceled)</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A device for generating a bare metal server Linux system image, comprising:<claim-text>a memory, configured to store a computer program;</claim-text><claim-text>a processor, configured to execute the computer program to implement any steps of a method for generating a bare metal server Linux system image, wherein the method for generating a bare metal server Linux system image comprises:</claim-text><claim-text>analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model;</claim-text><claim-text>selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver;</claim-text><claim-text>adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file; and</claim-text><claim-text>exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, and determining the virtual machine disk image file as the target bare metal server Linux system image.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A computer-readable memory medium, having a computer program stored thereon which, when executed by a processor, implements any steps of a method for generating a bare metal server Linux system, wherein the method for generating a bare metal server Linux system comprises:<claim-text>analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model;</claim-text><claim-text>selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, wherein the redundant array of independent disks driver library pre-stores a correspondence between each configuration parameter, each operating system model, and each redundant array of independent disks driver;</claim-text><claim-text>adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file; and</claim-text><claim-text>exporting, from the virtual machine, a virtual machine disk image file containing the target boot file, and determining the virtual machine disk image file as the target bare metal server Linux system image.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the determining the virtual machine disk image file as the target bare metal server Linux system image comprises:<claim-text>determining the modified virtual machine disk image file as the target bare metal server Linux system image.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein before the selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, the method further comprises:<claim-text>performing identity verification on the request sender identity information; and</claim-text><claim-text>in response to identity verification succeeding, executing the step of selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the identity verification is performed based on a user name and a password, or based on a digital signature.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The device for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein after the exporting, from the virtual machine, a virtual machine disk image file containing the target boot file and before the determining the virtual machine disk image file as the target bare metal server Linux system image, the method further comprises:<claim-text>performing file name modification on the virtual machine disk image file according to a preset bare metal server Linux system image name format to obtain a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The device for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file comprises:<claim-text>performing a backup operation on the boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system to obtain a backup boot file; and</claim-text><claim-text>adding the target redundant array of independent disks driver to the backup boot file to generate the target boot file.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The device for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model comprises:<claim-text>analyzing the received bare metal server Linux system image generation request so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated, the target operating system model, and request sender identity information corresponding to the bare metal server Linux system image generation request.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The device for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the determining the virtual machine disk image file as the target bare metal server Linux system image comprises:<claim-text>determining the modified virtual machine disk image file as the target bare metal server Linux system image.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The device for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein before the selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, the method further comprises:<claim-text>performing identity verification on the request sender identity information; and</claim-text><claim-text>in response to identity verification succeeding, executing the step of selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The device for generating a bare metal server Linux system image according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the identity verification is performed based on a user name and a password, or based on a digital signature.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-readable memory medium according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein after the exporting, from the virtual machine, a virtual machine disk image file containing the target boot file and before the determining the virtual machine disk image file as the target bare metal server Linux system image, the method further comprises:<claim-text>performing file name modification on the virtual machine disk image file according to a preset bare metal server Linux system image name format to obtain a modified virtual machine disk image file consistent with the preset bare metal server Linux system image name format.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The computer-readable memory medium according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the adding the target redundant array of independent disks driver to a boot file of a virtual machine pre-mounted and installed with a Linux virtual machine operating system to generate a target boot file comprises:<claim-text>performing a backup operation on the boot file of the virtual machine pre-mounted and installed with the Linux virtual machine operating system to obtain a backup boot file; and</claim-text><claim-text>adding the target redundant array of independent disks driver to the backup boot file to generate the target boot file.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The computer-readable memory medium according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the analyzing a received bare metal server Linux system image generation request so as to obtain a target configuration parameter of a target bare metal server Linux system image to be generated and a target operating system model comprises:<claim-text>analyzing the received bare metal server Linux system image generation request so as to obtain the target configuration parameter of the target bare metal server Linux system image to be generated, the target operating system model, and request sender identity information corresponding to the bare metal server Linux system image generation request.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The computer-readable memory medium according to <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the determining the virtual machine disk image file as the target bare metal server Linux system image comprises:<claim-text>determining the modified virtual machine disk image file as the target bare metal server Linux system image.</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The computer-readable memory medium according to <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein before the selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model, the method further comprises:<claim-text>performing identity verification on the request sender identity information; and</claim-text><claim-text>in response to identity verification succeeding, executing the step of selecting, from a redundant array of independent disks driver library, a target redundant array of independent disks driver that matches the target configuration parameter and the target operating system model.</claim-text></claim-text></claim></claims></us-patent-application>