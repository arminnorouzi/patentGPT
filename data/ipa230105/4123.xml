<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004124A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004124</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17858845</doc-number><date>20220706</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>04</class><subclass>F</subclass><main-group>10</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>K</subclass><main-group>5</main-group><subgroup>15</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>04</class><subclass>F</subclass><main-group>10</main-group><subgroup>005</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>K</subclass><main-group>5</main-group><subgroup>15</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>141</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>504</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CLOCKLESS TIME-TO-DIGITAL CONVERTER</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16972915</doc-number><date>20201207</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11415947</doc-number></document-id></parent-grant-document><parent-pct-document><document-id><country>WO</country><doc-number>PCT/US2019/036372</doc-number><date>20190610</date></document-id></parent-pct-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17858845</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62682694</doc-number><date>20180608</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Kratos SRE, Inc.</orgname><address><city>San Diego</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Cohen</last-name><first-name>Seth D.</first-name><address><city>Birmingham</city><state>AL</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Technologies are provided for time-to-digital conversion without reliance on a clocking signal. Some embodiments of the technologies include a clockless TDC apparatus that can map continuous pulse-widths to binary bits represented via an iterative chaotic map (e.g., tent map, Bernoulli shift map, or similar). The clockless TDC apparatus can convert separated pulses to a single asynchronous digital pulse that turns on when a sensor detects a first pulse and turns off when the sensor detects a second pulse. The asynchronous digital pulse can be iteratively stretched and folded in time according to the chaotic map. The clockless TDC can generate a binary sequence that represents symbolic dynamics of the chaotic map. The process can be implemented by using an iterative time delay component until a precision of the binary output is either satisfied or overwhelmed by noise or other structural fluctuations of the TDC apparatus.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="109.90mm" wi="137.08mm" file="US20230004124A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="126.83mm" wi="139.11mm" file="US20230004124A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="159.00mm" wi="118.19mm" orientation="landscape" file="US20230004124A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="87.63mm" wi="148.59mm" file="US20230004124A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="190.50mm" wi="75.35mm" orientation="landscape" file="US20230004124A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="217.68mm" wi="120.48mm" orientation="landscape" file="US20230004124A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="178.31mm" wi="160.61mm" file="US20230004124A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="189.82mm" wi="149.10mm" file="US20230004124A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="206.33mm" wi="125.22mm" orientation="landscape" file="US20230004124A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="101.52mm" wi="128.44mm" file="US20230004124A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="144.86mm" wi="162.31mm" file="US20230004124A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="213.95mm" wi="138.60mm" file="US20230004124A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="157.82mm" wi="138.60mm" file="US20230004124A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Patent Application No. 62/682,694, filed Jun. 8, 2018, the content of which application is hereby expressly incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Time-to-digital converters (TDCs) are commonly used to recognize events and provide a digital representation of a time that the events occur. Existing implementations of TDCs are commonly based on the use of reference clocks. Reference clocks can introduce noise and other constraints on systems such as a discrete measurement resolution. Further, the speed of a clocking device can limit the resolution of a clocked TDC. Thus, current TDCs are inadequate where high resolution and a high precision time interval measurements are required.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">It is to be understood that both the following general description and the following detailed description are exemplary and explanatory only and are not restrictive. Provided are methods and systems for clockless continuous-time chaos-based time-to-digital conversion. The methods and systems can tag (e.g., detect, mark, identify, or similar) times of discrete events, such as arrival times of photons for ranging or laser characterization, for example. A sensor can be used to detect a plurality of events separated by time. For example, the sensor can detect a plurality of events occurring at different time intervals. Each event of the plurality of events can cause the sensor to generate a signal (e.g., an electronic pulse) of a plurality of signals. Each event of the plurality of events can be represented by a respective signal of the plurality of signals in the time-domain. A TDC can measure each time interval between the plurality of events and convert those measurements into a digital representation that can be stored or analyzed. Thus, each time interval can be mapped to a digital signal (e.g., a binary signal) that can be recorded/represented. For example, each time interval can be mapped to a digital signal that can be recorded/represented by an iterative chaotic map (e.g., a tent map, a Bernoulli shift map, a logistic map, or similar).</p><p id="p-0005" num="0004">Embodiments of the disclosed technologies can be implemented in fully-electronic assemblies, including transistors; CMOS logic gates; field programmable gate-arrays (FPGAs); application-specific integrated circuits (ASICs); a combination of the foregoing; or similar. Assemblies that include FPGAs are highly practical platform for implementing the principles of this disclosure because, amongst other things, FPGAs are reconfigurable and can be implemented/updated using software only.</p><p id="p-0006" num="0005">In at least some embodiments, an asynchronous digital pulse can have a leading edge that corresponds to one signal/event and a trailing edge that corresponds to the next or neighboring signal/event. Thus, the width of this asynchronous digital pulse is an electronic representation of the time interval between these two events. The techniques disclosed herein can addresses the generation of a binary representation of such continuous pulse signals without reliance on a clocking signal.</p><p id="p-0007" num="0006">To do so, real-time pulse operations that transform the duration of a logic signal result in a continuous pulse signal of a desired width in the time domain. In particular, these operations both increase/stretch and decrease/fold the width of a continuous pulse signal according to an iterative chaotic map (e.g., a tent map, a Bernoulli shift map, or similar). This iterative chaotic map also produces binary bits that can be used to represent a digital word. The processes described above can be recursive. For example, the processes can be repeated using an iterative feedback delay loop.</p><p id="p-0008" num="0007">Additional advantages will be set forth in part in the description which follows or may be learned by practice. The advantages will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008">The annexed drawings are an integral part of the disclosure and are incorporated into the present specification. The drawings illustrate examples of embodiments of the disclosure and, in conjunction with the description and claims, serve to explain, at least in part, various principles, features, or aspects of the disclosure. Some embodiments of the disclosure are described more fully below with reference to the drawings. However, various aspects and elements of the disclosure can be implemented in many different forms and should not be construed as being limited to the implementations set forth herein. Like numbers refer to like, but not necessarily the same or identical, elements throughout. The accompanying drawings can be briefly characterized as follows.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a clockless TDC apparatus, in accordance with one or more embodiments of this disclosure.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates another example of a clockless TDC apparatus, in accordance with one or more embodiments of this disclosure.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates an example of a component that implements a chaotic map, in accordance with one or more embodiments of this disclosure.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b>C</figref> illustrates an example of a component included in a clockless TDC apparatus, where the component operates on a continuous pulse signal, in accordance with one or more embodiments of this disclosure.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates an example of latch circuitry and timing, in accordance with one or more embodiments of this disclosure.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b>E</figref> illustrates an example of circuitry that constitute a component that implements a pulse-width folding operation, in accordance with one or more embodiments of this disclosure.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>1</b>F</figref> illustrates another example of circuitry that constitute a component that implements a pulse-width folding operation, in accordance with one or more embodiments of this disclosure.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b>G</figref> illustrates an example of circuitry that constitutes a component that implements pulse-width stretching operations, in accordance with one or more embodiments of this disclosure.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates the timing diagram for the output voltages of the pulse width-stretching operation, in accordance with one or more embodiments of this disclosure.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>3</b></figref> presents an example of a formalism that supports folding, stretching, and latching operations of a time-based chaotic shift map, in accordance with one or more embodiments of this disclosure.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of a method for providing continuous-time chaos-based time-to-digital conversion, in accordance with one or more embodiments of this disclosure.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example of a method for providing continuous-time chaos-based time-to-digital conversion.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example of a method for providing continuous-time chaos-based time-to-digital conversion.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022">Before the present methods and systems are disclosed and described, it is to be understood that the methods and systems are not limited to specific methods, specific components, or to particular implementations. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting.</p><p id="p-0024" num="0023">As used in the specification and the appended claims, the singular forms &#x201c;a,&#x201d; &#x201c;an,&#x201d; and &#x201c;the&#x201d; include plural referents unless the context clearly dictates otherwise. Ranges may be expressed herein as from &#x201c;about&#x201d; one particular value, and/or to &#x201c;about&#x201d; another particular value. When such a range is expressed, another embodiment includes from the one particular value and/or to the other particular value. Similarly, when values are expressed as approximations, by use of the antecedent &#x201c;about,&#x201d; it will be understood that the particular value forms another embodiment. It will be further understood that the endpoints of each of the ranges are significant both in relation to the other endpoint, and independently of the other endpoint.</p><p id="p-0025" num="0024">&#x201c;Optional&#x201d; or &#x201c;optionally&#x201d; means that the subsequently described event or circumstance may or may not occur, and that the description includes instances where said event or circumstance occurs and instances where it does not.</p><p id="p-0026" num="0025">Throughout the description and claims of this specification, the word &#x201c;comprise&#x201d; and variations of the word, such as &#x201c;comprising&#x201d; and &#x201c;comprises,&#x201d; means &#x201c;including but not limited to,&#x201d; and is not intended to exclude, for example, other components, integers or steps. &#x201c;Exemplary&#x201d; means &#x201c;an example of&#x201d; and is not intended to convey an indication of a preferred or ideal embodiment. &#x201c;Such as&#x201d; is not used in a restrictive sense, but for explanatory purposes.</p><p id="p-0027" num="0026">Disclosed are components that can be used to perform the disclosed methods and systems. These and other components are disclosed herein, and it is understood that when combinations, subsets, interactions, groups, etc. of these components are disclosed that while specific reference of each various individual and collective combinations and permutation of these may not be explicitly disclosed, each is specifically contemplated and described herein, for all methods and systems. This applies to all aspects of this application including, but not limited to, steps in disclosed methods. Thus, if there are a variety of additional steps that can be performed it is understood that each of these additional steps can be performed with any specific embodiment or combination of embodiments of the disclosed methods.</p><p id="p-0028" num="0027">The present methods and systems may be understood more readily by reference to the following detailed description of preferred embodiments and the examples included therein and to the Figures and their previous and following description.</p><p id="p-0029" num="0028">As will be appreciated by one skilled in the art, the methods and systems may take the form of an entirely hardware embodiment or an embodiment combining software and hardware aspects. Furthermore, the methods and systems may take the form of a computer program product on a computer-readable storage medium having computer-readable program instructions (e.g., computer software) embodied in the storage medium. More particularly, the present methods and systems may take the form of web-implemented computer software. Any suitable computer-readable storage medium may be utilized including hard disks, CD-ROMs, optical storage devices, or magnetic storage devices.</p><p id="p-0030" num="0029">Embodiments of the methods and systems are described below with reference to block diagrams and flowchart illustrations of methods, systems, apparatuses and computer program products. It will be understood that each block of the block diagrams and flowchart illustrations, and combinations of blocks in the block diagrams and flowchart illustrations, respectively, can be implemented by computer program instructions. These computer program instructions may be loaded onto a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions which execute on the computer or other programmable data processing apparatus create a means for implementing the functions specified in the flowchart block or blocks.</p><p id="p-0031" num="0030">These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including computer-readable instructions for implementing the function specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions that execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.</p><p id="p-0032" num="0031">Accordingly, blocks of the block diagrams and flowchart illustrations support combinations of means for performing the specified functions, combinations of steps for performing the specified functions and program instruction means for performing the specified functions. It will also be understood that each block of the block diagrams and flowchart illustrations, and combinations of blocks in the block diagrams and flowchart illustrations, can be implemented by special purpose hardware-based computer systems that perform the specified functions or steps, or combinations of special purpose hardware and computer instructions.</p><p id="p-0033" num="0032">As is described in greater details below, the disclosed TDC apparatuses and techniques utilize a relationship between modular functions and chaotic maps, and avoid reliance on clocking signals, to convert a continuous pulse width into a digital sequence of 1s and 0s. The present disclosure relates to clockless continuous-time chaos-based time-to-digital conversion. A sensor can be used to detect a plurality of events separated by time. For example, the sensor can detect a plurality of events occurring at different time intervals. Each event of the plurality of events can cause the sensor to generate a signal (e.g., an electronic pulse) of a plurality of signals. Each event of the plurality of events can be represented by a respective signal of the plurality of signals in a time domain. A time-to-digital converter can measure each time interval between the plurality of events. Each time interval can be mapped to a digital signal (e.g., a set of binary signals or bits) that can be recorded/represented. For example, each time interval can be mapped to a digital signal that can be recorded/represented by an iterative chaotic map (e.g., a tent map, a Bernoulli shift map, a logistic map, or similar).</p><p id="p-0034" num="0033">A TDC apparatus can include a plurality of logic gates. Each logic gate of the plurality of logic gates can convert each signal (e.g., electronic pulse) of the plurality of signals to asynchronous voltage pulses. The single asynchronous digital pulses can have a leading edges that correspond to an event or signal (such as photon arrival) and trailing edges that corresponds to next or neighboring events. For example, the single asynchronous digital pulse can turn on when the first signal is generated and/or detected and turns off when next signal is generated and/or detected, where this process is repeated to represent the time interval between neighboring events using asynchronous pulses.</p><p id="p-0035" num="0034">In order to represent all events of interest in asynchronous pulses, parallel channels of asynchronous pulses can be used. As such parallel TDC apparatuses can be used together to measure and record all event times. This parallelization process can also be repeated across more than two channels to create additional space between asynchronous event pulses in case the TDC apparatuses have latency in the transformation and recording of the digital words that represent the timings of the events.</p><p id="p-0036" num="0035">Each of the one or more logic gates of the plurality of logic gates can stretch (increase) and fold (decrease) a signal of the plurality of signals in time (e.g., generate a pulse-width corresponding to a respective signal of the plurality of signals received) according to an iterative chaotic map (e.g., a tent map, a Bernoulli shift map, a logistic map). The iterative chaotic map can be used to map stretched and folded signals (e.g., generated pulse-widths) to binary bits. The binary bits can represent a digital word. The result is a clockless (e.g., unclocked, asynchronous, and so forth) TDC system.</p><p id="p-0037" num="0036">In some embodiments, the TDC apparatus <b>100</b> can be implemented to operate in any physical system (e.g., a non-simulated process). The precursor pulse <b>15</b> can be embodied in a wave propagating in a physical medium. The wave can be, for example, an electromagnetic wave or a pressure wave. The physical medium can in turn be a solid or a fluid that permits the propagation of such a wave. In some configurations, the precursor pulse <b>15</b> can be vacuum. The binary sequence s <b>12</b> also can be embodied in, for example, a pulse train propagating in the physical medium. The pulse operation component <b>20</b> can include components that can receive the precursor pulse <b>15</b> and the produce the binary sequence s <b>12</b>, and can generate the pulse train <b>25</b> by implementing chaotic maps, in accordance with aspects described herein. In some embodiments, the pulse train <b>25</b> can be embodied in a wave that also can propagate in the physical medium. In other embodiments, the target pulse train <b>25</b> can be embodied in an electronic signal propagating in solid-state circuitry.</p><p id="p-0038" num="0037">To mitigate the analog effects and experimental noise, the process described can be recursive. For example, the process can be repeated using an iterative time delay component, such as a delay feedback loop.</p><p id="p-0039" num="0038">Embodiments of the disclosed technologies can be implemented in fully-electronic assemblies, including transistors; CMOS logic gates; field programmable gate-arrays (FPGAs); application-specific integrated circuits (ASICs); a combination of the foregoing; or similar. Assemblies that include FPGAs are highly practical platform for implementing the principles of this disclosure because, amongst other things, FPGAs are reconfigurable and can be implemented/updated using software only.</p><p id="p-0040" num="0039">Other embodiments of the technologies can be implemented in numerous physical systems, such as optical systems, opto-electronic systems, or acoustic systems, where the logic signals can be present in either a physical medium (electromagnetic waves, pressure waves, etc.) or in the electronic elements used to measure such signals. Yet other embodiments of the disclosed technologies can be implemented in hybrid systems that combine electronic logic elements with other physical representations. In such systems, for example, optical delays can be made using the open-air transmission of photons and acoustic delays can be made using piezo-electric transducers and materials. These delays can serve as elements of a pulse-width stretching component or a pulse-width folding component in a chaotic map component in accordance with this disclosure, where electronic sensors and detectors couple signals into and out of these other processing media.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b></figref> and <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>E</figref> illustrate various aspects of a system for clockless continuous-time chaos-based time-to-digital conversion. Those skilled in the art will appreciate that present methods may be used in systems that employ both digital and analog equipment. One skilled in the art will appreciate that provided herein is a functional description and that the respective functions can be performed by software, hardware, or a combination of software and hardware. Understanding the distinct roles of noise and determinism on a clockless continuous-time chaos-based time-to-digital conversion system is an important factor in mitigating their effects. Chaos can be realized in a clockless continuous-time chaos-based time-to-digital conversion system. The clockless continuous-time chaos-based time-to-digital conversion system can be constructed using asynchronous logic gates (e.g., field programmable gate arrays (FPGAs)) to form a map operator that outputs an unclocked pulse-train (e.g., digital word) of varying widths. The unclocked pulse-train (e.g., digital word) of varying widths can be used to iterate a chaotic map. The unclocked pulse-train (e.g., digital word) of varying widths can indicate the symbolic dynamics of the chaotic map. The advantages of using a chaotic map are that the resolution is determined by noise in the system (e.g., not a discrete clock cycle). Additionally, any known methods can be used for error correction, such as error correction techniques routinely applied to iterative analog-to-digital (ADC) systems.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic block diagram of an example of a TDC apparatus <b>100</b>, in accordance with one or more embodiments of this disclosure. TDC apparatus <b>100</b> uses continuous/clockless stretching and folding operations of chaotic maps to measure (with a specified resolution) and/or to convert a continuous time interval (e.g., pulse width) into a set of binary signals that can be stored in digital memory. In other words, the TDC apparatus <b>100</b> quantizes the width of continuous/unclocked logic signal <b>15</b> (referred to as precursor pulse <b>15</b>; &#x201c;high&#x201d; and &#x201c;low&#x201d; signals, for example) as they propagate through the TDC apparatus <b>100</b>, without the use of a clock. To that end, the TDC apparatus <b>100</b> includes a pulse operation component <b>20</b> that process the precursor pulse <b>15</b> such that the length of the precursor pulse <b>15</b> (e.g., a logic signal) is stretched (e.g., amplified) and folded (e.g., shortened in a manner that maintains the amplification of small differences) back into a usable interval as the precursor signal <b>15</b> propagates through the pulse operation component <b>20</b>. During or after this process, the pulse width is thresholded (e.g., measured against a reference time interval). The pulse operation component <b>20</b> can iterate such a process essentially continuously.</p><p id="p-0043" num="0042">For example, the precursor pulse <b>15</b> is an unclocked logic signal, which can be embodied in a square pulse of w<sub>0</sub>. As the precursor pulse <b>15</b> propagates through the pulse operation component <b>20</b>, a pulse width w<sub>0 </sub>is stretched by a known multiplicative factor m&#x3e;1 and the resulting pulse has width mw<sub>0</sub>. As such, the pulse operation component <b>20</b> can perform a time-stretch operation that amplifies small variations in a pulse's width. Note that for a single iteration of the logic signal through the pulse operation component <b>20</b>, small variations in the pulse width may still be impractical/impossible to measure. However, by repeating the pulse-width stretching over several iterations k, where the output pulse width is described by w<sub>k+1</sub>=mw<sub>k</sub>, the microscopic differences between two different precursor pulse widths will be amplified and eventually be viewed on a macroscopic scale.</p><p id="p-0044" num="0043">Overall, this stretching process can be efficient for performing time-amplification/stretching, but in order to implement such a process many times essentially continuously, a mechanism is needed that keeps the length of the logic signals bounded (e.g., for many iterations, the length of the logic signal can continue to expand in time-domain and, eventually, the length can be too large for the system's dynamic range). Thus, the pulse operation component <b>20</b> also can implement a second mechanism that keeps the signals bounded while still maintaining the amplification of small differences: a folding operation. Here, the logic signal's pulse width is kept bounded using a structure that performs a modular-like operation on w<sub>k</sub>. This operation takes values of w<sub>k </sub>that would be amplified beyond a certain point and maps them back into a usable interval without undoing the pulse-width stretching that amplifies small differences. An example of this folding mechanism includes operation that decreases the width mw<sub>k </sub>by a constant amount c when mw<sub>k </sub>is larger than a threshold value T (e.g., mw<sub>k</sub>&#x3e;7) such that the total operation yields mw<sub>k</sub>&#x2212;c. threshold value Tin pulse width, Thus, as the pulse is stretching iteratively, it is folded back into an interval of interest to keep its value bounded.</p><p id="p-0045" num="0044">Such combination of pulse-width stretching and pulse-width folding directly corresponds to the operations of chaotic maps. Many types of chaotic maps can be implemented (e.g., tent map, logistic map, etc.). Regardless of the type of map, the pulse operation component <b>20</b> can perform iterative continuous operations on the length of the precursor signal <b>15</b> (e.g., a logic signal or pulse width) to provide an amplified version of the pulse's length, where this amplification is followed by a folding process and thus the overall mechanism is identical to that of chaotic maps (folding and stretching is a key component of chaotic maps).</p><p id="p-0046" num="0045">To obtain binary representations of the precursor pulse <b>15</b>, in some embodiments, the pulse widths of such chaotic maps can be partitioned using a threshold or partition. In this partitioning, the pulse widths w<sub>k </sub>that exit the chaotic map can be assigned respective bit values b<sub>k </sub>based on the selected partition (threshold). For example, if mw<sub>k</sub>&#x3e;T, then b<sub>k</sub>=1 and if mw<sub>k</sub>&#x2264;T then b<sub>k</sub>=0. This process can be similar to the measuring the symbolic dynamics of a chaotic map.</p><p id="p-0047" num="0046">Thus, the operations of the TDC apparatus <b>100</b> can begin with the precursor pulse <b>15</b> having an initial pulse width w<sub>0 </sub>that enters into the TDC, the pulse operation component <b>20</b> can iterate a chaotic map multiple times. After each iteration k of the map, a pulse width w<sub>k </sub>is generated and assigned a bit value b<sub>k</sub>. Bits generated in such a fashion can be stored in sequential order in a memory component (such as a storage device or storage circuitry). These bit streams can then be used to recover the original width w<sub>0 </sub>using algorithms, post processing, or any other means. The number K of iterations of the map represents the bit depth or resolution of the pulse-width measurement/conversion process. More iterations are equivalent to a higher-resolution TDC, where eventually the noise-floor of the system will cause bits to be unstable.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a schematic block diagram of an example of a system <b>100</b> for clockless continuous-time chaos-based time-to-digital conversion, in accordance with one or more embodiments of this disclosure. The system <b>100</b> can exploit propagation delays of pulses (electronic pulses, input voltage pulses, etc.) as they transmit through logic gates or other types of elements. The system <b>100</b> can remain in a stable steady state where, v<sub>out</sub>=0 V, until an input pulse <b>101</b> (e.g., electronic pulses, input voltage pulses, and the like) with a continuous width represented by w<sub>0 </sub>is provided/fed as an input to the system <b>100</b>. The input pulse <b>101</b> (e.g., analog signal, a representation of timing between events, and the like) can be provided/fed to a logic OR gate <b>102</b>. The logic OR gate <b>102</b> can transmit the input pulse <b>101</b> as an asynchronous logic pulse. Without intending to be bound by theory and/or design, the OR gate <b>102</b> also enables the system <b>100</b> to generate a self-sustaining pulse train after an initial pulse (e.g., the input pulse <b>101</b>) is provided/fed as an input to the system <b>100</b>. For example, after an initial pulse (e.g., the input pulse <b>101</b>) is provided/fed as an input to the system <b>100</b>, an output (e.g., output voltage v<sub>out</sub>) can be fed back (e.g., routed, provided, etc.) as an input to the OR gate <b>102</b> after a time delay component <b>106</b>. The time delay component <b>106</b> (e.g., delay line) can cause a propagation delay time/period T.</p><p id="p-0049" num="0048">The OR gate <b>102</b> can also continuously provide the input v<sub>in </sub>to latch component <b>107</b> (e.g., flip-flop circuitry, latch circuitry, SR-latch, or similar). The latch component <b>107</b> can compare a defined time interval to the width of a signal (e.g., the output of the OR gate <b>102</b>, v<sub>in</sub>) generated by a chaotic map component <b>103</b>. Based on such a comparison, the latch component <b>107</b> can generate a binary sequence <b>12</b>. The chaotic map component <b>103</b> can iterate dynamics on a one-dimensional (1D) map. The chaotic map can be, for example, a tent map, a Bernoulli shift map, a logistic map, or similar.</p><p id="p-0050" num="0049">The binary sequence <b>12</b> can be stored. The binary sequence <b>12</b> can be stored as digital bits (e.g., digital bits of a digital word) generated by the latch component <b>107</b>. The binary sequence <b>12</b> can be used to determine/recover the width of the continuous width signal Wo.</p><p id="p-0051" num="0050">The output of the OR gate <b>102</b> can continuously provide the input v<sub>in </sub>(e.g., input pulses, stretched and folded pulses, a stretched and folded input pulse <b>101</b>, or the like) to the map operator <b>103</b>. The OR gate <b>102</b> can continuously provide the input v<sub>in </sub>to the chaotic map component <b>103</b> according to an OR gate truth table (not shown).</p><p id="p-0052" num="0051">Results of the iterations implemented by the chaotic map component <b>103</b> can be can be pulses of varying widths, represented by w<sub>1 </sub>through w<sub>K</sub>, respectively, where K is a natural number. Notably, according to the system <b>100</b>, neighboring pulses (e.g., electronic pulses, voltage pulses, and the like) do not collide, overlap, or directly interact.</p><p id="p-0053" num="0052">For a chaotic map M, each transformation iteration w<sub>k+1</sub>=M(w<sub>k</sub>) of a prior transformation iteration w<sub>k </sub>can be determined as a gain function g(&#xb7;) applied to the output of a folding function &#x192;(&#xb7;) having as an argument w<sub>k</sub>. Namely, w<sub>k+1</sub>=M(w<sub>k</sub>)=g(f(w<sub>k</sub>)). <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is a schematic block diagram that illustrates an example of the chaotic map component <b>103</b>, in accordance with one or more embodiments of this disclosure. As is illustrated, the map component <b>103</b> can include pulse-width folding component <b>104</b> that can apply a folding function to an input signal. The chaotic map component <b>103</b> also can include a gain component <b>111</b> that applies a gain function to an output signal from the folding component <b>104</b>.</p><p id="p-0054" num="0053">Thus, the pulse-width folding component <b>104</b> and the pulse-width gain component <b>111</b> can receive the input pulse of defined width w<sub>k </sub>and generate an output pulse of width w<sub>k+i</sub>=M(w<sub>k</sub>) according to the combined operations of the folding and stretching process relative to the input pulse. For example, an input pulse having w<sub>k</sub>=1 &#x3bc;s can be stretched in time to yield w<sub>k+1</sub>=2 &#x3bc;s. The chaotic map component <b>103</b> can stretch and/or fold an input pulse according to any value. The pulse-width folding component <b>104</b> and the pulse-width gain component <b>111</b> can stretch an input pulse to any value. The pulse-width folding circuitry <b>104</b> and the pulse-width gain component <b>111</b> permit recording and/or representing chaos in a system, such as the system <b>100</b>, by providing sufficient conditions for the onset of chaos, for example.</p><p id="p-0055" num="0054">In some configurations, the chaotic map component <b>103</b> can be embodied in, or can include, a field programmable gate array (FPGA) or an application-specific integrated circuit (ASIC), or a combination of both. Accordingly, in such configurations, the pulse-width folding component <b>104</b> can include circuitry that implements the folding function &#x192;(&#xb7;). In turn, the pulse-width stretching component <b>111</b> can include circuitry that implements the gain function g(&#xb7;).</p><p id="p-0056" num="0055">Back to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, to demonstrate chaos in a system (e.g., chaos in the system <b>100</b>), the output of the map operator <b>103</b> (e.g., the output voltage v<sub>out</sub>) can be provided/fed to a comparator, such as the logic OR gate <b>102</b>. The output of the map operator <b>103</b> (e.g., the output voltage v<sub>out</sub>) can be compared against a reference signal. If output of the map operator <b>103</b> is higher than the reference, the output of the OR gate <b>102</b> can be set to 1, otherwise, the output of the OR gate <b>102</b> can be set to 0.</p><p id="p-0057" num="0056">As previously described, the output of the map operator <b>103</b> (e.g., the output voltage v<sub>out</sub>) can be fed back (e.g., routed, provided, etc.) as an input to the OR gate <b>102</b>. The output of the OR gate <b>102</b> can continuously provide the input v<sub>in </sub>to the map operator <b>103</b>. The output v<sub>out </sub>(e.g., output voltage) can be fed back (e.g., routed, provided, etc.) as an input to the logic OR gate <b>102</b> via the time delay component <b>106</b> (e.g., delay line). The output of the system <b>100</b> can be shifted by 1 (e.g., shifted to the right) beginning with a most significant bit (MSB) of a digital word after each iteration. The process can be repeated to generate another bit of the digital word (e.g., the next bit of a digital word). The time delay component <b>106</b> can include, in some embodiments, a plurality of logic elements, such as an even number of NOT gates.</p><p id="p-0058" num="0057">Although the clockless TDC apparatus <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> relies on a delay feedback loop to permit the iterative operations on the input pulse <b>101</b>, the disclosure is not so limited. In some embodiments, as is illustrated in <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>, the clockless TDC apparatus <b>100</b> can include an ingestion component <b>130</b> that receives the precursor pulse <b>15</b> and N chaotic map components <b>103</b>(<b>1</b>), <b>103</b>(<b>2</b>), . . . <b>103</b>(N) arranged in series. In such an embodiment, to generate the output pulse train <b>25</b>, output signal from a first chaotic map component <b>103</b>(<i>k</i>) is supplied to a second chaotic map component <b>103</b>(<i>k</i>+1); here, 1&#x2264;k&#x3c;N. Each chaotic map component <b>103</b>(<i>k</i>) (k=1, 2, . . . N) generates an output pulse signal by applying a particular chaotic map M, where the output pulse signal has a width w<sub>k</sub>. In addition, each chaotic map component <b>103</b>(<i>k</i>) (k=1, 2, . . . N) can generate a bit b<sub>k </sub>that constitutes the binary sequence s <b>12</b> (<figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0059" num="0058">In some embodiments, rather than relying entirely on a single chaotic map component <b>103</b> and a delay feedback look (see <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>) or on a series of chaotic map components <b>103</b>, the clockless TDC apparatus <b>100</b> can include a combination of both multiple chaotic map components and one or several delay feedback loops.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>1</b>D</figref> is a schematic block diagram of an example of latch circuitry <b>117</b> used to produce the high and low logic signals for generation of the binary sequence <b>12</b>, in accordance with one or more embodiments of this disclosure. The latch circuitry can embody, or can constitute, the latch component <b>107</b>, flip flop circuitry, latch circuitry, SR-latch, and the like. <figref idref="DRAWINGS">FIG. <b>1</b>D</figref> also illustrates a corresponding timing diagram <b>122</b>. The latch circuitry <b>117</b> can include an AND gate <b>118</b> that receives a continuous width (w) pulse signal as an input (e.g., input a). The continuous width (w) pulse signal can be delayed by a delay line (&#x394;) and the AND gate <b>118</b> can received the delayed pulse as another input (e.g., input b). The output of the AND gate <b>118</b> (e.g., input a+input b) can correspond to an AND gate truth table. The output of the AND gate <b>118</b> (e.g., input a+input b) can be input to a NOR gate <b>119</b> that is configured as a set-reset (S-R) latch with a NOR gate <b>120</b>. The output of the NOR gate <b>120</b> can be input to a D-latch of a D-type flip-flop <b>121</b>. The D-type flip-flop <b>121</b> can be clocked by a delayed pulse of the continuous width (w) pulse signal. The timing diagram <b>122</b> plots the input a, the input b, the output of the AND gate <b>118</b>, and the output of the D-type flip-flop <b>121</b> (<i>s</i>) in time for cases when the width of the continuous width (w) pulse signal is less than or equal to the delay line (&#x394;) and cases when the continuous width (w) pulse signal is greater than the delay line (&#x394;).</p><p id="p-0061" num="0060">The latch circuitry <b>117</b> can compare a width of a signal (e.g., the output of the OR gate <b>102</b>, yin) used to iterate a map operator (e.g., the map operator <b>103</b>, etc.) to a fixed time and generate a binary output. The latch circuitry <b>117</b> can also generate the binary output to record (e.g., digitally represent) events occurring in time. For example, the binary output can be stored as digital bits (e.g., digital bits of a digital word, etc.) generated by the latch circuitry <b>117</b>. The binary output can be used to determine/recover the width of a continuous width pulse signal.</p><p id="p-0062" num="0061">As mentioned, the chaotic map component <b>103</b> can be embodied in, or can include, an FPGA or an ASIC, or a combination of both. <figref idref="DRAWINGS">FIGS. <b>1</b>E-<b>1</b>F</figref> are schematic block diagrams of examples of pulse-width folding component <b>104</b> in one of such configurations.</p><p id="p-0063" num="0062">As is illustrated in <figref idref="DRAWINGS">FIG. <b>1</b>E</figref>, the pulse-width folding component <b>104</b> can be embodied in pulse-width folding circuitry <b>104</b><i>a </i>that implements a tent folding function &#x192;(&#xb7;). As is illustrated in <figref idref="DRAWINGS">FIG. <b>1</b>E</figref>, the pulse-width folding circuitry <b>104</b><i>a </i>can include a first AND gate <b>127</b> and a second AND gate <b>128</b> configured as depicted. At least one input of the AND gate <b>127</b> and the AND gate <b>128</b> can be an inverted input. The input pulse v<sub>in </sub>can be provided/fed as an input to the AND gate <b>128</b> and an inverted input the AND gate <b>127</b>. An output of the AND gate <b>128</b> can be fed back (e.g., routed, provided, etc. . . . ) via the time delay component <b>106</b> and provided as an inverted input to the AND gate <b>128</b>. The AND gate <b>128</b> can provide an output to the time delay component <b>106</b> according to an AND gate truth table (not shown). The output of the AND gate <b>128</b> can be fed back (e.g., routed, provided, etc.) via the time delay component <b>106</b> and provided as an input to the AND gate <b>127</b>. The AND gate <b>127</b> can provide the output v<sub>out </sub>according to an AND gate truth table (not shown). An input pulse <b>109</b> (e.g., input pulse <b>101</b>) of width w<sub>k </sub>and an output pulse <b>110</b> of width w<sub>a</sub>=f(w<sub>k</sub>) can be represented by input v<sub>in </sub>and output v<sub>a</sub>, respectively. In one example, w<sub>a</sub>=w<sub>in </sub>for &#x2264;&#x394; and w<sub>a</sub>=(&#x394;&#x2212;w<sub>in</sub>) for &#x3c4;&#x3c;w<sub>in</sub>&#x2264;&#x394;&#x3c4;, where &#x394; represents a propagation delay time/period associated with the time delay component <b>106</b> (e.g., delay line). Folding of an input pulse (e.g., the input pulse <b>101</b>) performed by the pulse-width folding circuitry <b>104</b><i>a </i>can be recorded for visualization purposes, for example. As is illustrated in diagram <b>140</b> in <figref idref="DRAWINGS">FIG. <b>1</b>E</figref>, the pulse-width folding circuitry <b>104</b><i>a </i>permits implementing a tent fold function &#x192;(w), where the cusp of the tent fold corresponds to a delay A provided by the time delay component <b>106</b>. the pulse-width folding circuitry <b>104</b><i>a </i>can be used with a pulse width gain function to create a tent map operator.</p><p id="p-0064" num="0063">Embodiments of the pulse-width folding circuitry <b>104</b><i>a </i>are not limited to a particular number of logical components. In some embodiments, the pulse-width folding circuitry <b>104</b><i>a </i>can include more than two logical AND gates.</p><p id="p-0065" num="0064">In turn, <figref idref="DRAWINGS">FIG. <b>1</b>F</figref> illustrates pulse-width folding circuitry <b>104</b><i>b </i>that can implement a shift folding function &#x192;(&#xb7;). The pulse-width folding circuitry <b>104</b><i>b </i>can include an array of logic elements (e.g., logic gates, such as AND gates, NOR gates, OR gates, or similar) and feedback loops (e.g., delay lines) configured to shift fold a signal (e.g., the input pulse(s) <b>109</b>, input pulse <b>101</b>, or the like). As is illustrated in diagram <b>150</b> in <figref idref="DRAWINGS">FIG. <b>1</b>F</figref>, the pulse-width folding circuitry <b>104</b><i>b </i>permits implementing a shift fold function &#x192;(w), where the shift is performed relative to a delay A provided by the time delay component <b>106</b>.</p><p id="p-0066" num="0065">Other configurations of pulse-width folding circuitry can constitute the pulse-width folding component <b>104</b> in instances in which the chaotic map component <b>103</b> is embodied in, or includes, an FPGA or an ASIC, or a combination of both. For example, the map component <b>103</b> can include pulse-width folding circuitry <b>104</b><i>a </i>that implements the folding function &#x192;(&#xb7;).</p><p id="p-0067" num="0066">With further reference to configurations in which the chaotic map component <b>103</b> can be embodied in, or can include, an FPGA or an ASIC, or a combination of both, <figref idref="DRAWINGS">FIG. <b>1</b>G</figref> is a schematic block diagram of ideal analog circuitry <b>160</b> that can apply a stretching function to an output signal from the digital circuitry <b>104</b><i>a </i>or <b>104</b><i>b </i>(<figref idref="DRAWINGS">FIG. <b>1</b>E</figref>). Results of the operations of the analog circuitry <b>160</b> are described and illustrated with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In the example arrangement shown in <figref idref="DRAWINGS">FIG. <b>1</b>G</figref>, the analog circuitry <b>160</b> includes pulse preparation circuitry (D-latches, Inverter Logic gates, Buffer operation amplifiers with a threshold voltage V<sub>threshold</sub>, diode clipper circuits) and two operational amplifier integrator circuits. Such an input signal can be embodied in, for example, a square voltage pulse <b>170</b> in time-domain having a defined amplitude and a width w. In this case V<sub>threshold </sub>is selected such that the square voltage pulse is above V<sub>threshold </sub>when the pulse is present and below V<sub>threshold </sub>when the pulse is absent. As a result of this example circuit, at a rising edge of the square pulse <b>170</b>, the first integrator circuitry can begin to integrate such an output signal and can yield a time-dependent output signal <b>220</b> having a first defined slope (e.g., m/2). At the falling edge of the square pulse <b>170</b>, the second integrator circuitry can begin to integrate the square pulse <b>170</b> and can yield a time-dependent output signal <b>230</b> having a second defined slope (e.g., m). The second defined slope of the second integrator circuitry can be a multiple of the first defined slope of the first integrator.</p><p id="p-0068" num="0067">In such an example arrangement, the analog circuitry <b>160</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b>G</figref> also can include comparator circuitry to determine when the output signal <b>220</b> of the first integrator circuitry is less than the output signal <b>230</b> of the second integrator circuitry. The comparator circuitry can be powered on at the falling edge of the square pulse <b>170</b> and can be powered off when a magnitude of the time-dependent output signal <b>220</b> is less than the time-dependent output signal <b>230</b>. Initial conditions of the latches and integrators are set to accommodate the stretching function &#x192; or each input pulse. Output signal from the comparator circuitry can span a continuous time interval having a defined width w&#x2032; corresponding to &#x3b3;w, where &#x3b3; is the ratio between the second defined slope and the first defined slope. As is illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in an example configuration in which &#x3b3;=2, w&#x2032; is equal to 2w.</p><p id="p-0069" num="0068">The pulse-width gain component <b>111</b> can be embodied in pulse-width gain circuitry that implements the gain function g( ). An output v<sub>a </sub>of the pulse-width folding component <b>104</b> can be input to the pulse-width gain circuitry. The pulse-width folding component <b>104</b> can be embodied in, for example, either one of the pulse-width folding circuitry <b>104</b><i>a </i>or the pulse-width folding circuitry <b>104</b><i>b </i>(see <figref idref="DRAWINGS">FIG. <b>1</b>E</figref>). Such an output can be provided as an input signal pulse v<sub>a </sub>having a width w<sub>in </sub>to the pulse-width gain circuitry.</p><p id="p-0070" num="0069">As described and illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>E</figref>, and <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>6</b></figref>, a clockless system can produce a chaotic map and the corresponding continuous dynamical states. Thus, this method uses a time-stretching function in conjunction with a time-folding function. This time-stretching and time-folding process can be also be embodied in a single process. The resulting structures encode the pulse width without using the discretized measurement unit associated with a clock.</p><p id="p-0071" num="0070">In one example, <figref idref="DRAWINGS">FIG. <b>3</b></figref> demonstrates an example formalism that supports the principles of operations of TDC apparatuses herein. Specifically, the formalism supports the folding, stretching, and latching operations of a time-based chaotic shift map. For a given value A and an initial pulse width w<sub>0 </sub>the folding and stretching operations are performed iteratively to cycle obtain pulse widths w<sub>k+1</sub>=g(f(w<sub>k</sub>))=M(w<sub>k</sub>), where M is the total map operator. At the same time, a latch operator S<sub>latch </sub>compares the widths w<sub>k </sub>to a threshold A and produces binary bits. The resulting bits are used to form a digital word s that encodes the pulse width. The final binary code can then be used to compute/recover the input pulse width w<sub>0 </sub>to within the specific resolution (number of bits in s).</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>4</b></figref>, <figref idref="DRAWINGS">FIG. <b>5</b></figref> and <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrate examples of the techniques that emerge from the principles of this disclosure. While the exemplified methods are presented and described as a series of acts or operations that are performed in a sequence, the disclosure is not limited in that respect. Indeed, any one of the methods disclosed herein is not limited by the order (explicit or implied) of a specific sequence of acts or operations. For example, some acts or operations can occur in a different order than what is illustrated herein. In addition, an act or operation can occur concurrently with another act or operation. Further, in some instances, not all acts or operations may be required to implement a method or group of methods disclosed herein. In some embodiments, the acts or operations disclosed in connection with any of the methods in accordance with this disclosure may be machine-accessible instructions (e.g., machine-readable and/or machine-executable instructions) that can be executed or otherwise implemented by one or many signal processing devices and/or can be stored on machine-readable storage media or storage circuitry.</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart of an example method <b>400</b> for clockless continuous-time chaos-based time-to-digital conversion. The example method <b>400</b> can be performed by an apparatus or system including multiple components assembled to operate as a TDC apparatus in accordance with this disclosure. The apparatus and the system can each include processing circuitry and storage circuitry in accordance with aspects of this disclosure.</p><p id="p-0074" num="0073">At block <b>410</b>, a system can receive a continuous pulse signal (e.g., input pulse <b>101</b> (<figref idref="DRAWINGS">FIG. <b>1</b>A</figref>)). The continuous pulse signal can be a single asynchronous digital pulse, for example.</p><p id="p-0075" num="0074">At block <b>420</b>, the system can iteratively generate multiple output signals. The multiple output signals (e.g., output v<sub>out </sub>(<figref idref="DRAWINGS">FIG. <b>1</b>A</figref>)) can be iteratively determined based at least on the continuous pulse signal. For example, each output of the plurality of outputs can be associated with an FPGA of the plurality FPGAs. Each output can be mapped to a region of a time-based chaotic map (e.g., a tent map, a Bernoulli shift map, a logistic map, graph <b>302</b>, graph <b>402</b>).</p><p id="p-0076" num="0075">At block <b>430</b>, the system can generate a digital word d using the multiple output signals. The digital word can include binary numbers. The digital word d can include a defined number N of bits: d=d<sub>0</sub>d<sub>1</sub>d<sub>2 </sub>. . . d<sub>N-2</sub>d<sub>N-1</sub>, where d<sub>k </sub>represents a bit (k=0, 1 . . . N-<b>1</b>). Each bit in the digital word d corresponds to an output signal of the multiple output signals. For example, a most significant bit (MSB) of the plurality of bits can correspond to the first bit and a least significant bit (LSB) of the plurality of bits can correspond to a last bit.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart of an example method <b>500</b> for clockless continuous-time chaos-based time-to-digital conversion. The example method <b>500</b> can be performed by an apparatus or system including multiple components assembled to operate as a TDC apparatus in accordance with this disclosure. The apparatus and the system can each include processing circuitry and storage circuitry in accordance with aspects of this disclosure. At block <b>510</b>, separate pulses can be converted to a single asynchronous digital pulse.</p><p id="p-0078" num="0077">At block <b>520</b>, the asynchronous digital pulse can be stretched and folded. The asynchronous digital pulse can be provided to a pulse-width folding component (e.g., pulse-width folding circuitry <b>104</b><i>a </i>or pulse-width folding circuitry <b>104</b><i>b </i>(<figref idref="DRAWINGS">FIG. <b>1</b>E</figref>)) and/or a pulse-width stretching component (e.g., pulse-width gain circuitry <b>160</b> (<figref idref="DRAWINGS">FIG. <b>1</b>G</figref>)).</p><p id="p-0079" num="0078">At block <b>530</b>, a binary signal can be generated. The binary signal can be a sample from the output of the pulse-width stretching component. For example, the output of the pulse-width stretching component can be compared to a threshold. If a value of the output satisfies or exceeds the threshold, a binary value of 1 can be recorded, and if the value of the output does not satisfy the threshold, a binary value of 0 can be recorded. The binary signal can be a quantized digital representation of the separated pulses (e.g., an analog occurrence, etc.). The binary output can be and/or can be used to determine a bit of a digital word including multiple bits.</p><p id="p-0080" num="0079">At block <b>540</b>, the operations in block <b>520</b> and block <b>540</b> can be repeated until a termination criterion is satisfied. For example, the process of stretching and folding the asynchronous pulse and determining a binary output can be repeated using a feedback delay loop until precision of the binary output determination is overwhelmed by noise. Repeating the operations in block <b>520</b> and block <b>540</b> can generate multiple binary output signals that can represent respective bits of a digital word. The digital word can include any number of bits (e.g., N bits), such that d<sub>k</sub>, represents the digital word, where k=0, 1 . . . N&#x2212;1. Each bit of the plurality of bits can correspond to the determined binary representation. For example, a LSB of the plurality of bits can correspond to a first determined binary output and an MSB of the plurality of bits can correspond to a last determined binary output.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of an example of a method <b>600</b> for clockless continuous-time chaos-based time-to-digital conversion, in accordance with one or more embodiments of this disclosure. The example method <b>600</b> can be performed by an apparatus or system including multiple components assembled to operate as a TDC apparatus in accordance with this disclosure. The apparatus and the system can each include processing circuitry and storage circuitry in accordance with aspects of this disclosure. At block <b>610</b>, clockless TDC apparatus can receive a continuous pulse signal having a defined width in time domain. For example, the continuous pulse signal can be the embodied in the precursor pulse signal <b>15</b> having width Wo. The precursor pulse <b>15</b> can result from converting separate pulses representing the timing between events (e.g., asynchronous photon arrivals) into a single digital pulse.</p><p id="p-0082" num="0081">At block <b>620</b>, the continuous pulse signal can be folded and stretched by applying a chaotic map (e.g., a tent map, a Bernoulli shift map, a logistic map, or the like), resulting in an output continuous pulse signal. The output continuous pulse signal has a second defined width (e.g., w<sub>k</sub>). For example, the continuous pulse signal can be provided to and/or propagate through a pulse-width folding component (e.g., pulse-width folding circuitry <b>104</b><i>a</i>, pulse-width folding circuitry <b>105</b><i>b</i>) and/or pulse-width gain component (e.g., pulse-width gain circuitry <b>160</b> (<figref idref="DRAWINGS">FIG. <b>1</b>G</figref>). Such components can be configured within an FPGA and other analog circuitry, for example.</p><p id="p-0083" num="0082">At block <b>630</b>, the clockless TDC apparatus can generate a digital bit using the output continuous pulse signal that results from applying the chaotic map. For example, the output continuous pulse signal can be provided to a latch component (e.g., latch circuitry <b>117</b>, flip-flop circuitry, SR-latch, or similar). See <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, for example. The latch component can compare the second defined width of the output continuous pulse signal to a defined amount time and can generate the digital bit. The defined amount of time can be a preset time window or another type of predetermined time, for example. The digital bit can embody, for example, an element of the binary sequence <b>12</b>. In some embodiments, the digital bit can be stored by the latch component. In some instances, the digital bit in combination with previously generated digital bits can be used to determine/recover the defined width of the continuous pulse signal received at block <b>610</b>. For example, the latch component can generate the digital bit in Gray code. The Gray code can be processed/converted to binary coding, hexadecimal coding, or any other type of coding representative of the continuous width pulse.</p><p id="p-0084" num="0083">The operations included in block <b>620</b> and block <b>630</b> can occur essentially simultaneously in configurations in which the chaotic map uses a piecewise operator that the threshold of that operator is used to partition the map. In such configurations, the chaotic map component <b>103</b> that implements the chaotic map can output both the next pulse width and the digital bit.</p><p id="p-0085" num="0084">At block <b>640</b>, operations in blocks <b>620</b> and <b>630</b> can be repeated until a termination criterion is satisfied. In one example, the use of the latch circuitry to generate/store a digital bit and the process of folding and stretching the continuous width pulse can be repeated using a time delay component until a defined number of iterations is exceeded. In another example, the use of the latch circuitry to generate/store a digital bit and the process of folding and stretching the continuous width pulse can be repeated using a time delay component until precision of the binary output is satisfied or is overwhelmed by noise. Repeating the operations in blocks <b>620</b> and <b>630</b> can generate multiple digital bits (e.g., binary outputs) that can represent respective bits of a digital word.</p><p id="p-0086" num="0085">At block <b>650</b>, the multiple digital bits can be converted to a digital word d. The digital word d can include, for example, a defined number N of bits: d=d<sub>0</sub>d<sub>1</sub>d<sub>2 </sub>. . . d<sub>N-2</sub>d<sub>N-1 </sub>where cl represents a bit (k=0, 1 . . . N&#x2212;1). Each bit of the multiple digital bits can correspond, for example, to a respective bit of the binary sequence s <b>12</b>. For example, a LSB of the multiple digital bits can correspond to a first determined binary output, and an MSB of the multiple digital bits can correspond to a last determined binary output. The multiple digital bits can be used to determine/recover the defined width (e.g., w<sub>0</sub>) of the continuous pulse signal received at block <b>510</b>. The multiple digital bits may be converted as needed. For example, the latch component (e.g., latch circuitry <b>117</b> (<figref idref="DRAWINGS">FIG. <b>1</b>D</figref>), flip-flop circuitry, SR-latch, or similar) can generate digital bits in Gray code. The Gray code can be processed/converted to binary coding, hexadecimal coding, or any other type of coding representative of the continuous width pulse.</p><p id="p-0087" num="0086">While the methods and systems have been described in connection with preferred embodiments and specific examples, it is not intended that the scope be limited to the particular embodiments set forth, as the embodiments herein are intended in all respects to be illustrative rather than restrictive.</p><p id="p-0088" num="0087">As used in this application, the terms &#x201c;environment,&#x201d; &#x201c;system,&#x201d; &#x201c;module,&#x201d; &#x201c;component,&#x201d; &#x201c;architecture,&#x201d; &#x201c;interface,&#x201d; &#x201c;unit,&#x201d; and the like are intended to encompass an entity that includes either hardware, software, or a combination of hardware and software. Such an entity can be embodied in, or can include, for example, a signal processing device. In another example, the entity can be embodied in, or can include, an apparatus with a defined functionality provided by optical parts, mechanical parts, and/or electronic circuitry. The terms &#x201c;environment,&#x201d; &#x201c;system,&#x201d; &#x201c;engine,&#x201d; &#x201c;module,&#x201d; &#x201c;component,&#x201d; &#x201c;architecture,&#x201d; &#x201c;interface,&#x201d; and &#x201c;unit&#x201d; can be utilized interchangeably and can be generically referred to functional elements.</p><p id="p-0089" num="0088">A component can be localized on one processing device or distributed between two or more processing devices. Components can communicate via local and/or remote architectures in accordance, for example, with a signal (either analogic or digital) having one or more data packets (e.g., data from one component interacting with another component in a local processing device, distributed processing devices, and/or across a network with other systems via the signal).</p><p id="p-0090" num="0089">As yet another example, a component can be embodied in or can include an apparatus with a defined functionality provided by mechanical parts operated by electric or electronic circuitry that is controlled by a software application or firmware application executed by a processing device. Such a processing device can be internal or external to the apparatus and can execute at least part of the software or firmware application. Still in another example, a component can be embodied in or can include an apparatus that provides defined functionality through electronic components without mechanical parts. The electronic components can include signal processing devices to execute software or firmware that permits or otherwise facilitates, at least in part, the functionality of the electronic components. For the sake of illustration, an example of such processing device(s) includes an integrated circuit (IC), an application-specific integrated circuit (ASIC), a digital signal processor (DSP), a field programmable gate array (FPGA), a programmable logic controller (PLC), a complex programmable logic device (CPLD), a discrete gate or transistor logic, discrete hardware components, or any combination thereof designed or otherwise configured (e.g., manufactured) to perform the functions described herein.</p><p id="p-0091" num="0090">In some embodiments, components can communicate via local and/or remote processes in accordance, for example, with a signal (either analog or digital) having one or more data packets (e.g., data from one component interacting with another component in a local system, distributed system, and/or across a network such as a wide area network with other systems via the signal). In addition, or in other embodiments, components can communicate or otherwise be coupled via thermal, mechanical, electrical, and/or electromechanical coupling mechanisms (such as conduits, connectors, combinations thereof, or the like). An interface can include input/output (I/O) components as well as associated processors, applications, and/or other programming components.</p><p id="p-0092" num="0091">Conditional language, such as, among others, &#x201c;can,&#x201d; &#x201c;could,&#x201d; &#x201c;might,&#x201d; or &#x201c;may,&#x201d; unless specifically stated otherwise, or otherwise understood within the context as used, is generally intended to convey that certain implementations could include, while other implementations do not include, certain features, elements, and/or operations. Thus, such conditional language generally is not intended to imply that features, elements, and/or operations are in any way required for one or more implementations or that one or more implementations necessarily include logic for deciding, with or without user input or prompting, whether these features, elements, and/or operations are included or are to be performed in any particular implementation.</p><p id="p-0093" num="0092">The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of examples of systems, methods, and computer program products according to various embodiments of the present disclosure. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which includes one or more machine-executable or computer-executable instructions for implementing the specified operations. It is noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based devices that perform the specified functions or operations or carry out combinations of special purpose hardware and computer instructions.</p><p id="p-0094" num="0093">Unless otherwise expressly stated, it is in no way intended that any method set forth herein be construed as requiring that its steps be performed in a specific order. Accordingly, where a method claim does not actually recite an order to be followed by its steps or it is not otherwise specifically stated in the claims or descriptions that the steps are to be limited to a specific order, it is in no way intended that an order be inferred, in any respect. This holds for any possible non-express basis for interpretation, including: matters of logic with respect to arrangement of steps or operational flow; plain meaning derived from grammatical organization or punctuation; the number or type of embodiments described in the specification.</p><p id="p-0095" num="0094">What has been described herein in the present specification and annexed drawings includes examples of systems, apparatuses, devices, and techniques for time-to-digital conversion using chaotic maps, without reliance on a clocking signal. It is, of course, not possible to describe every conceivable combination of components and/or methods for purposes of describing the various elements of the disclosure, but it can be recognized that many further combinations and permutations of the disclosed elements are possible. Accordingly, it may be apparent that various modifications can be made to the disclosure without departing from the scope or spirit thereof. In addition, or as an alternative, other embodiments of the disclosure may be apparent from consideration of the specification and annexed drawings, and practice of the disclosure as presented herein. It is intended that the examples put forth in the specification and annexed drawings be considered, in all respects, as illustrative and not limiting. Although specific terms are employed herein, they are used in a generic and descriptive sense only and not for purposes of limitation.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>receiving a first pulse having a first pulse width;</claim-text><claim-text>generating a second pulse having a second pulse width, wherein the second pulse width is based on a reference time interval of a first signal processor and based on the first pulse width;</claim-text><claim-text>generating a third pulse having a third pulse width, wherein the third pulse width is based on a reference time interval of a second signal processor and based on the second pulse width, wherein the reference time interval of the second signal processor and the reference time interval of the first signal processor are substantially equivalent;</claim-text><claim-text>determining, based on the second pulse width, a first bit; and</claim-text><claim-text>determining, based on the third pulse width, a second bit.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first signal processor and the second signal processor are arranged in a sequential order.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, based on the first bit and the second bit, a binary number.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the binary number comprises the first bit and the second bit and wherein the first bit is more significant than the second bit.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:<claim-text>determining, based on the binary number, a quantity of time associated with the first pulse width.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A method comprising:<claim-text>receiving a first pulse having a first pulse width;</claim-text><claim-text>generating a second pulse having a second pulse width, wherein the second pulse width is based on a propagation delay of a first signal processor and based on the first pulse width;</claim-text><claim-text>generating a third pulse having a third pulse width, wherein the third pulse width is based on a propagation delay of a second signal processor and based on the second pulse width, wherein the propagation delay of the second signal processor and the propagation delay of the first signal processor are substantially equivalent;</claim-text><claim-text>determining, based on the second pulse width, a first bit; and</claim-text><claim-text>determining, based on the third pulse width, a second bit.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the first signal processor and the second signal processor are arranged in a sequential order.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>determining, based on the first bit and the second bit, a binary number.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the binary number comprises the first bit and the second bit and wherein the first bit is more significant than the second bit.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>determining, based on the binary number, a quantity of time associated with the first pulse width.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein determining the first bit comprises:<claim-text>comparing a predetermined time interval with the second pulse width.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A method comprising:<claim-text>receiving a first pulse having a first pulse width;</claim-text><claim-text>generating, based on a propagation delay of a component and based on the first pulse width, a second pulse having a second pulse width;</claim-text><claim-text>generating, based on the propagation delay of the component and based on the second pulse width, a third pulse having a third pulse width;</claim-text><claim-text>determining, based on the second pulse width, a first bit; and</claim-text><claim-text>determining, based on the third pulse width, a second bit.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>determining, based on the first bit and the second bit, a binary number.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the binary number comprises the first bit and the second bit and wherein the first bit is more significant than the second bit.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>determining, based on the binary number, a quantity of time associated with the first pulse width.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first pulse width is based on a fourth pulse and a fifth pulse and wherein a leading edge of the first pulse corresponds to a leading edge of the fourth pulse and a trailing edge of the first pulse corresponds to a leading edge of the second pulse.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>mapping the second pulse width and the third pulse width to a region of a chaotic map.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the chaotic map is a tent map or a Bernoulli shift map.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the determination of the first bit comprises:<claim-text>comparing a predetermined time interval with the second pulse width.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the generation the second pulse comprises:<claim-text>folding the first pulse to shorten the first pulse width; and</claim-text><claim-text>stretching the first pulse to lengthen the first pulse width.</claim-text></claim-text></claim></claims></us-patent-application>