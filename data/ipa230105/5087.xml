<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005088A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005088</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17355356</doc-number><date>20210623</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>50</main-group><subgroup>18</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>247</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>50</main-group><subgroup>18</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>247</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>00442</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">IDENTIFYING TROUBLED CONTRACTS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>International Business Machines Corporation</orgname><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>PHIPPS</last-name><first-name>CHRISTOPHER</first-name><address><city>Chico</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>DESESA</last-name><first-name>CATHERINE</first-name><address><city>Wilmette</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Leedy</last-name><first-name>Kaitlyn</first-name><address><city>Frostburg</city><state>MD</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Bellio</last-name><first-name>Matthew</first-name><address><city>Chicago</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Beller</last-name><first-name>Charles E.</first-name><address><city>Baltimore</city><state>MD</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In an approach for identifying troubled contracts using a health score, a processor receives a contract. A processor identifies a list of requirements of the contract using a first Natural Language Processing technique. A processor trains a model to recognize the list of requirements of the contract. A processor receives at least one deliverable document associated with the contract. A processor applies a plurality of health metrics to the at least one deliverable document associated with the contract to identify evidence of completion of each requirement of the list of requirements of the contract. A processor outputs the health score for each requirement of the list of requirements of the contract.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="213.02mm" wi="151.21mm" file="US20230005088A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="182.88mm" wi="93.64mm" file="US20230005088A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="140.12mm" wi="114.72mm" file="US20230005088A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="225.55mm" wi="153.25mm" file="US20230005088A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="206.33mm" wi="141.90mm" file="US20230005088A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="176.02mm" wi="139.70mm" file="US20230005088A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?federal-research-statement description="Federal Research Statement" end="lead"?><heading id="h-0001" level="1">STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT</heading><p id="p-0002" num="0001">This invention was made with U.S. Government support under contract number W15QKN-17-9-5555 awarded by the Department of Defense. The U.S. Government has certain rights to this invention.</p><?federal-research-statement description="Federal Research Statement" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading><p id="p-0003" num="0002">The present invention relates generally to the field of data processing, and more particularly to identifying troubled contracts using a health score.</p><p id="p-0004" num="0003">A contract is a promise or set of promises for the breach of which the law gives a remedy or the performance of which the law, in some way, recognizes as a duty. A contract typically involves the exchange of goods, service, money, or the promise of any of those.</p><p id="p-0005" num="0004">A contract is typically managed from its creation through its execution and to its termination. This process is referred to as contract management. A contracting party's performance of a contract is also analyzed to maximize the contracting party's operational and financial performance and to mitigate any financial or reputational risk through non-compliance with contract terms.</p><p id="p-0006" num="0005">The contracting parties may choose to manage their contract manually or may use a contract management software. Contract management software provides a contracting party with a way to create contracts, using tools with contract authoring and collaboration capabilities. Contract management software also provides a contracting party with a way to organize, store, and manage their contracts. Contract management software digitizes and stores contracts in a central digital contract repository, providing the contracting party with a way to search and review its contract and eliminating the need to manually locate and sift through stacks of paper.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">Aspects of an embodiment of the present invention disclose a method, computer program product, and computer system for identifying troubled contracts using a health score.</p><p id="p-0008" num="0007">In some aspects of an embodiment of the present invention, a processor receives a contract. A processor identifies a list of requirements of the contract using a first Natural Language Processing (NLP) technique. A processor trains a model to recognize the list of requirements of the contract. A processor receives at least one deliverable document associated with the contract. A processor applies a plurality of health metrics to the at least one deliverable document associated with the contract to identify evidence of completion of each requirement of the list of requirements of the contract. A processor outputs the health score for each requirement of the list of requirements of the contract.</p><p id="p-0009" num="0008">In some aspects of an embodiment of the present invention, a processor extracts a first set of data from the at least one deliverable document associated with the contract using the first NLP technique. A processor creates a first table to manage the first set of data extracted from the at least one deliverable document associated with the contract.</p><p id="p-0010" num="0009">In some aspects of an embodiment of the present invention, a processor calculates a size of the at least one deliverable document associated with the contract. A processor identifies one or more sections of the at least one deliverable document associated with the contract related to the list of requirements of the contract using a second NLP technique. A processor extracts a second set of data from the one or more sections of the at least one deliverable document associated with the contract identified as related to the list of requirements of the contract. A processor creates a second table to manage the second set of data. A processor applies a month-to-month comparison matrix to the second set of data to track one or more changes in the second set of data. A processor creates a third table by linking the data in the first table and the data in the second table. A processor identifies evidence of a common linkage between the contract and the at least one deliverable document associated with the contract in a column of the third table containing a set of text of the at least one deliverable document associated with the contract. A processor generates one or more synonyms of the list of requirements using the second NLP technique. A processor identifies the one or more synonyms of the list of requirements found in a first column of the third table. A processor merges the data in the second table with the data in the third table to create a fourth table with the evidence of completion of each requirement of the list of requirements. A processor calculates the health score for each requirement of the list of requirements of the contract by applying a success-model with a pre-set failure threshold to the evidence of completion of each requirement of the list of requirements of the contract.</p><p id="p-0011" num="0010">In some aspects of an embodiment of the present invention, the size of the at least one deliverable document associated with the contract is calculated by counting a plurality of characters in the at least one deliverable document associated with the contract, by counting one or more sentences written in the at least one deliverable document associated with the contract, by counting one or more paragraphs written in the at least one deliverable document associated with the contract, or by counting one or more bullet points used in the at least one deliverable document associated with the contract.</p><p id="p-0012" num="0011">In some aspects of an embodiment of the present invention, the one or more changes tracked in the second set of data includes a difference in the size of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, a difference in a headcount of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, and a difference in a sentiment of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed.</p><p id="p-0013" num="0012">In some aspects of an embodiment of the present invention, a processor scores the evidence of completion of each requirement of the list of requirements of the contract. A processor classifies the evidence of completion of each requirement of the list of requirements of the contract based on the health score calculated.</p><p id="p-0014" num="0013">In some aspects of an embodiment of the present invention, the evidence of completion of each requirement of the list of requirements of the contract is classified as &#x201c;successful&#x201d; when the evidence of completion shows progress on a requirement on the list of requirements and scores above the pre-set failure threshold of the success-model or as &#x201c;not successful&#x201d; when the evidence of completion shows failure to make progress on a requirement on the list of requirements and scores below the pre-set failure threshold of the success-model.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a functional block diagram illustrating a distributed data processing environment, in accordance with an embodiment of the present invention;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flowchart illustrating the operational steps for a setup component of a troubled contracts program, on a server within the distributed data processing environment of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart illustrating the operational steps of the troubled contracts program, on the server within the distributed data processing environment of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart illustrating, in greater detail, the operational steps of an analysis step of the troubled contracts program, on the server within a distributed data processing environment of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention; and</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating the components of a computing device in the distributed data processing environment of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0020" num="0019">Embodiments of the present invention recognize that contracts dictate many aspects of key business strategies and relationships. When a contracting party knows the terms of its contract, the contracting party is in a better position to enforce its contractual rights and comply with its obligations. If a contracting party fails to exercise its rights, the contracting party may leave money on the table. Further, losing track of commitments and later getting blindsided by those commitments can be immensely costly to a contracting party. Therefore, effective contract management is essential to a business.</p><p id="p-0021" num="0020">Embodiments of the present invention recognize that, despite the risks, many contracting parties continue to rely on manual processes and inefficient tools to create, organize, store, and manage its contracts. Embodiments of the present invention recognize the need for a more effective approach to managing the performance of a contract. Embodiments of the present invention recognize the need for an approach to analyze and compare multiple documents associated with a contract over a period of time. With such an approach, embodiments of the present invention recognize that the operational and financial performance of a contracting party can be maximized, and any financial or reputational risk through non-compliance with contract terms can be minimized.</p><p id="p-0022" num="0021">Embodiments of the present invention provide an improvement to traditional contract management software with a system and method for identifying troubled contracts by analyzing the data within an original contract (hereinafter referred to as an &#x201c;originating contract&#x201d;) and at least one follow-up status tracker document (hereinafter referred to as a &#x201c;deliverable document associated with the contract&#x201d;) and by outputting a health score based on the analysis of the data. A deliverable document associated with the contract is a status tracking document, i.e., a document that provides an update on the status of a deliverable required in the originating contract.</p><p id="p-0023" num="0022">Implementation of embodiments of the present invention may take a variety of forms, and exemplary implementation details are discussed subsequently with reference to the Figures.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a functional block diagram illustrating a distributed data processing environment, generally designated <b>100</b>, in accordance with an embodiment of the present invention. In the depicted embodiment, distributed data processing environment <b>100</b> includes server <b>120</b> and user computing device <b>130</b>, interconnected over network <b>110</b>. Distributed data processing environment <b>100</b> may include additional servers, computers, computing devices, IoT sensors, and other devices not shown. The term &#x201c;distributed&#x201d; as used herein describes a computer system that includes multiple, physically distinct devices that operate together as a single computer system. <figref idref="DRAWINGS">FIG. <b>1</b></figref> provides only an illustration of one embodiment of the present invention and does not imply any limitations regarding the environments in which different embodiments may be implemented. Many modifications to the depicted environment may be made by those skilled in the art without departing from the scope of the invention as recited by the claims.</p><p id="p-0025" num="0024">Network <b>110</b> operates as a computing network that can be, for example, a telecommunications network, a local area network (LAN), a wide area network (WAN), such as the Internet, or a combination of the three, and can include wired, wireless, or fiber optic connections. Network <b>110</b> can include one or more wired and/or wireless networks capable of receiving and transmitting data, voice, and/or video signals, including multimedia signals that include voice, data, and video information. In general, network <b>110</b> can be any combination of connections and protocols that will support communications between server <b>120</b>, user computing device <b>130</b>, and other computing devices (not shown) within distributed data processing environment <b>100</b>.</p><p id="p-0026" num="0025">Server <b>120</b> operates to run troubled contracts program <b>122</b> and to send and/or store data in database <b>124</b>. In an embodiment, server <b>120</b> can send data from database <b>124</b> to user computing device <b>130</b>. In an embodiment, server <b>120</b> can receive data in database <b>124</b> from user computing device <b>130</b>. In one or more embodiments, server <b>120</b> can be a standalone computing device, a management server, a web server, a mobile computing device, or any other electronic device or computing system capable of receiving, sending, and processing data and capable of communicating with user computing device <b>130</b> via network <b>110</b>. In one or more embodiments, server <b>120</b> can be a computing system utilizing clustered computers and components (e.g., database server computers, application server computers, etc.) that act as a single pool of seamless resources when accessed within distributed data processing environment <b>100</b>, such as in a cloud computing environment. In one or more embodiments, server <b>120</b> can be a laptop computer, a tablet computer, a netbook computer, a personal computer, a desktop computer, a personal digital assistant, a smart phone, or any programmable electronic device capable of communicating with user computing device <b>130</b> and other computing devices (not shown) within distributed data processing environment <b>100</b> via network <b>110</b>. Server <b>120</b> may include internal and external hardware components, as depicted and described in further detail in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0027" num="0026">Troubled contracts program <b>122</b> operates to identify troubled contracts by analyzing data within an originating contract and at least one deliverable document associated with the contract and by outputting a health score based on the analysis of the data. In the depicted embodiment, troubled contracts program <b>122</b> is a standalone program. In another embodiment, troubled contracts program <b>122</b> may be integrated into another software product, such as a contract management software. In the depicted embodiment, troubled contracts program <b>122</b> resides on server <b>120</b>. In another embodiment, troubled contracts program <b>122</b> may reside on user computing device <b>130</b> or on another computing device (not shown), provided that troubled contracts program <b>122</b> has access to network <b>110</b>. In an embodiment, a user opts-in to troubled contracts program <b>122</b> and sets up a user profile with troubled contracts program <b>122</b>. The setup component of troubled contracts program <b>122</b> is depicted and described in further detail with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The operational steps of troubled contracts program <b>122</b> are depicted and described in further detail with respect to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The operational steps of an analysis step of troubled contracts program <b>122</b> are depicted and described in greater detail with respect to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0028" num="0027">Database <b>124</b> operates as a repository for data received, used, and/or generated by troubled contracts program <b>122</b>. A database is an organized collection of data. Data includes, but is not limited to, information about user preferences (e.g., general user system settings such as alert notifications for user computing device <b>130</b>); information about alert notification preferences; information necessary to create a user profile; an originating contract; a list of requirements specified in the originating contract; at least one deliverable document associated with the contract; information associated with the at least one deliverable document associated with the contract (i.e., a name of the associated deliverable document, a unique document identification number of the deliverable document associated with the contract, the size of the at least one deliverable document associated with the contract, quantitative data, and/or sentiment analysis data); health metrics features (i.e., the size of the at least one deliverable document associated with the contract, quantitative data, sentiment analysis data, and/or key terms); health score produced for each requirement of the list of requirements from the analysis of the at least one deliverable document associated with the contract; and any other data received, used, and/or generated by troubled contracts program <b>122</b>.</p><p id="p-0029" num="0028">Database <b>124</b> can be implemented with any type of device capable of storing data and configuration files that can be accessed and utilized by server <b>120</b>, such as a hard disk drive, a database server, or a flash memory. In an embodiment, database <b>124</b> is accessed by troubled contracts program <b>122</b> to store and/or to access the data. In the depicted embodiment, database <b>124</b> resides on server <b>120</b>. In another embodiment, database <b>124</b> may reside on another computing device, server, cloud server, or spread across multiple devices elsewhere (not shown) within distributed data processing environment <b>100</b>, provided that troubled contracts program <b>122</b> has access to database <b>124</b>.</p><p id="p-0030" num="0029">The present invention may contain various accessible data sources, such as database <b>124</b>, that may include personal and/or confidential company data, content, or information the user wishes not to be processed. Processing refers to any operation, automated or unautomated, or set of operations such as collecting, recording, organizing, structuring, storing, adapting, altering, retrieving, consulting, using, disclosing by transmission, dissemination, or otherwise making available, combining, restricting, erasing, or destroying personal and/or confidential company data. Troubled contracts program <b>122</b> enables the authorized and secure processing of personal data.</p><p id="p-0031" num="0030">Troubled contracts program <b>122</b> provides informed consent, with notice of the collection of personal and/or confidential company data, allowing the user to opt-in or to opt-out of processing personal and/or confidential company data. Consent can take several forms. Opt-in consent can impose on the user the opportunity to take an affirmative action before personal and/or confidential company data is processed. Alternatively, opt-out consent can impose on the user the opportunity to take an affirmative action to prevent the processing of personal and/or confidential company data before personal and/or confidential company data is processed. Troubled contracts program <b>122</b> provides information regarding personal and/or confidential company data and the nature (e.g., type, scope, purpose, duration, etc.) of the processing. Troubled contracts program <b>122</b> provides the user with copies of stored personal and/or confidential company data. Troubled contracts program <b>122</b> allows for the correction or completion of incorrect or incomplete personal and/or confidential company data. Troubled contracts program <b>122</b> allows for the immediate deletion of personal and/or confidential company data.</p><p id="p-0032" num="0031">In an embodiment, the user of user computing device <b>130</b> can register with troubled contracts program <b>122</b>. For example, the user completes a registration process, provides information, and authorizes the collection and analysis (i.e., opt-in) of relevant data on identified computing devices, (e.g., user computing device <b>130</b>) by server <b>120</b> (e.g., via troubled contracts program <b>122</b>). In various embodiments, a user can opt-in or opt-out of certain categories of data collection. For example, the user can opt-in to provide all requested information, a subset of requested information, or no information. In one example scenario, the user opts-in to provide time-based information, but opts-out of providing location-based information (on all or a subset of computing devices associated with the user). In another embodiment, the user can define which forms of data server <b>120</b> can utilize in analyzing an originating contract or at least one deliverable document associated with the contract. In another embodiment, the user can opt-out of the analysis of the originating contract or the at least one deliverable document associated with the contract entirely. Such preferences can be stored in database <b>124</b>.</p><p id="p-0033" num="0032">User computing device <b>130</b> operates to run user interface <b>132</b> through which a user can interact with troubled contracts program <b>122</b> on server <b>120</b>. A user is a party to a contract, i.e., one who makes a promise or set of promises to perform a duty and/or one who receives the benefits of the contract, i.e., the promisor and the promisee, respectively. In an embodiment, user computing device <b>130</b> is a device that performs programmable instructions. For example, user computing device <b>130</b> may be an electronic device, such as a laptop computer, a tablet computer, a netbook computer, a personal computer, a desktop computer, a smart phone, or any programmable electronic device capable of running user interface <b>132</b> and of communicating (i.e., sending and receiving data) with troubled contracts program <b>122</b> via network <b>110</b>. In general, user computing device <b>130</b> represents any programmable electronic device or a combination of programmable electronic devices capable of executing machine readable program instructions and communicating with other computing devices (not shown) within distributed data processing environment <b>100</b> via network <b>110</b>. In the depicted embodiment, user computing device <b>130</b> includes an instance of user interface <b>132</b>. User computing device <b>130</b> may include components as described in further detail in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0034" num="0033">User interface <b>132</b> operates as a local user interface between troubled contracts program <b>122</b> on server <b>120</b> and a user of user computing device <b>130</b>. In some embodiments, user interface <b>132</b> is a graphical user interface (GUI), a web user interface (WUI), and/or a voice user interface (VUI) that can display (i.e., visually) or present (i.e., audibly) text, documents, web browser windows, user options, application interfaces, and instructions for operations sent from troubled contracts program <b>122</b> to a user via network <b>110</b>. User interface <b>132</b> can also display or present alerts including information (such as graphics, text, and/or sound) sent from troubled contracts program <b>122</b> to a user via network <b>110</b>. In an embodiment, user interface <b>132</b> is capable of sending and receiving data (i.e., to and from troubled contracts program <b>122</b> via network <b>110</b>, respectively). Through user interface <b>132</b>, a user can opt-in to troubled contracts program <b>122</b>, create a user profile, and set user preferences and alert notification preferences.</p><p id="p-0035" num="0034">A user preference is a setting that can be customized for a particular user. A set of default user preferences are assigned to each user of troubled contracts program <b>122</b>. A user preference editor can be used to update values to change the default user preferences. User preferences that can be customized include, but are not limited to, general user system settings, specific user profile settings for troubled contracts program <b>122</b>, alert notification settings, and machine-learned data collection and storage settings. Machine-learned data includes, but is not limited to, data regarding past results of iterations of troubled contracts program <b>122</b> and a user's previous response to an alert notification sent by troubled contracts program <b>122</b>. Machine-learned data comes from troubled contracts program <b>122</b> self-learning how to analyze data within an originating contract and at least one deliverable document associated with the contract and how to output a health score produced from the analysis of the data within an originating contract and at least one deliverable document associated with the contract. Troubled contracts program <b>122</b> self-learns by tracking user activity and improves with each iteration of troubled contracts program <b>122</b>.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flowchart, generally designated <b>200</b>, illustrating the operational steps for a setup component of trouble contracts program <b>122</b> of distributed data processing environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention. In an embodiment, troubled contracts program <b>122</b> completes a one-time setup with a user. The one-time setup allows for troubled contracts program <b>122</b> to capture relevant information about the user to create a user profile. In an embodiment, trouble contracts program <b>122</b> receives a request from the user to opt-in. In an embodiment, troubled contracts program <b>122</b> requests information from the user. In an embodiment, troubled contracts program <b>122</b> receives the requested information from the user. In an embodiment, troubled contracts program <b>122</b> creates a user profile. In an embodiment, troubled contracts program <b>122</b> stores the user profile. It should be appreciated that the process depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates one possible iteration of troubled contracts program <b>122</b>, which may be repeated for each opt-in request received by troubled contracts program <b>122</b>.</p><p id="p-0037" num="0036">In step <b>210</b>, troubled contracts program <b>122</b> receives a request from the user to opt-in. In an embodiment, troubled contracts program <b>122</b> receives a request from the user to opt-in to troubled contracts program <b>122</b>. In an embodiment, troubled contracts program <b>122</b> receives a request from the user to opt-in to troubled contracts program <b>122</b> through user interface <b>132</b> of user computing device <b>130</b>. By opting-in, the user agrees to share data with database <b>124</b>.</p><p id="p-0038" num="0037">In step <b>220</b>, troubled contracts program <b>122</b> requests information from the user. In an embodiment, troubled contracts program <b>122</b> requests information from the user through user interface <b>132</b> of user computing device <b>130</b>. Information requested from the user includes, but is not limited to, information about user preferences (e.g., general user system settings such as alert notifications for user computing device <b>130</b>); information about alert notification preferences; and information necessary to create a user profile. In an embodiment, responsive to receiving the request from the user to opt-in, troubled contracts program <b>122</b> requests information from the user.</p><p id="p-0039" num="0038">In step <b>230</b>, troubled contracts program <b>122</b> receives the requested information from the user. In an embodiment, troubled contracts program <b>122</b> receives the requested information from the user through user interface <b>132</b> of user computing device <b>130</b>. In an embodiment, responsive to requesting information from the user, troubled contracts program <b>122</b> receives the requested information from the user.</p><p id="p-0040" num="0039">In step <b>240</b>, troubled contracts program <b>122</b> creates a user profile. In an embodiment, troubled contracts program <b>122</b> creates a user profile for the user. In an embodiment, troubled contracts program <b>122</b> creates a user profile with information input by the user during setup regarding the user as well as user preferences and alert notification preferences of the user. In an embodiment, responsive to receiving the requested information from the user, troubled contracts program <b>122</b> creates a user profile.</p><p id="p-0041" num="0040">In step <b>250</b>, troubled contracts program <b>122</b> stores the user profile. In an embodiment, troubled contracts program <b>122</b> stores the user profile in a database, e.g., database <b>124</b>. In an embodiment, responsive to creating the user profile, troubled contracts program <b>122</b> stores the user profile.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart, generally designated <b>300</b>, illustrating the operational steps of troubled contracts program <b>122</b> on server <b>120</b> within distributed data processing environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention. In an embodiment, troubled contracts program <b>122</b> operates to analyze data within an originating contract and at least one deliverable document associated with the contract and to output a health score based on the analysis of the data. It should be appreciated that the process depicted in <figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates one possible iteration of troubled contracts program <b>122</b>, which may be repeated for each originating contract received by troubled contracts program <b>122</b>.</p><p id="p-0043" num="0042">In step <b>310</b>, troubled contracts program <b>122</b> receives an originating contract. In an embodiment, troubled contracts program <b>122</b> receives an originating contract inputted by a user through user interface <b>132</b> of user computing device <b>130</b>. In an embodiment, troubled contracts program <b>122</b> stores the originating contract in a database, e.g., database <b>124</b>.</p><p id="p-0044" num="0043">In step <b>320</b>, troubled contracts program <b>122</b> identifies a list of requirements. In an embodiment, troubled contracts program <b>122</b> identifies a list of default, out of the box configured heuristic requirements. The list of default, out of the box configured heuristic requirements include, but are not limited to, key terms and headings. In an embodiment, troubled contracts program <b>122</b> identifies a list of requirements specified within the text of the originating contract. In one or more embodiments, troubled contracts program <b>122</b> identifies a list of requirements specified within a list or table of the originating contract. In an embodiment, troubled contracts program <b>122</b> identifies a list of requirements specified in the originating contract using a NLP technique.</p><p id="p-0045" num="0044">In an embodiment, troubled contracts program <b>122</b> provides the list of default, out of the box configured heuristic requirements to the user for approval. In an embodiment, troubled contracts program <b>122</b> enables the user to approve of the one or more default, out of the box configured heuristic requirements. In an embodiment, troubled contracts program <b>122</b> enables the user to add one or more requirements to the one or more default, out of the box configured heuristic requirements. The one or more requirements are provided by the user in sentence format. The one or more default, out of the box configured heuristic requirements approved by the user and the one or more requirements added to the one or more default, out of the box configured heuristic requirements approved by the user are hereinafter referred to as &#x201c;requirements&#x201d;. The requirements will be used to compare the at least one deliverable document associated with the contract to the originating contract.</p><p id="p-0046" num="0045">In an embodiment, troubled contracts program <b>122</b> stores the list of requirements in a database, e.g., database <b>124</b>. In an embodiment, responsive to receiving an originating contract, troubled contracts program <b>122</b> identifies a list of requirements.</p><p id="p-0047" num="0046">In step <b>330</b>, troubled contracts program <b>122</b> trains a model. In an embodiment, troubled contracts program <b>122</b> trains a model to recognize the list of requirements specified in the originating contract (e.g., the Contract Data Requirements List (CDRL) specified in the originating contract). In an embodiment, troubled contracts program <b>122</b> trains the model to recognize which section of the at least one deliverable document associated with the contract is associated with which requirement of the list of requirements specified in the originating contract. In an embodiment, responsive to identifying a list of requirements, troubled contracts program <b>122</b> trains a model.</p><p id="p-0048" num="0047">In step <b>340</b>, troubled contracts program <b>122</b> receives the at least one deliverable document associated with the contract. The at least one deliverable document associated with the contract is a status tracking document, i.e., a document that provides an update on the status of the at least one deliverable document required in the originating contract. The at least one deliverable document associated with the contract may include, but is not limited to, a Weekly Status Report, a Monthly Status Report, a Final Report, a Data Dictionary, and an Extract, Transform, and Load (ETL) Script. The at least one deliverable document associated with the contract may be in one or more formats including, but not limited to, Microsoft&#xae; PowerPoint slides, Microsoft&#xae; Excel files, spreadsheets, web pages, diagrams, and flowcharts. In an embodiment, troubled contracts program <b>122</b> receives the at least one deliverable document associated with the contract at a pre-determined period of time, i.e., at an interval set by a user as a user preference, e.g., daily, weekly, or monthly. In an embodiment, troubled contracts program <b>122</b> receives the at least one deliverable document associated with the contract inputted by a user through user interface <b>132</b> of user computing device <b>130</b>. In an embodiment, troubled contracts program <b>122</b> stores the at least one deliverable document associated with the contract in a database, e.g., database <b>124</b>. In an embodiment, responsive to training a model, troubled contracts program <b>122</b> receives the at least one deliverable document associated with the contract.</p><p id="p-0049" num="0048">In step <b>350</b>, troubled contracts program <b>122</b> extracts data from the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> extracts data from the at least one deliverable document associated with the contract using NLP. Data extracted from the at least one deliverable document associated with the contract includes, but is not limited to, a unique document identification number (e.g., A001, A002, A003, and A004) of the deliverable document associated with the contract and a name of the deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> stores the data extracted from the at least one deliverable document associated with the contract in a database, e.g., database <b>124</b>. In an embodiment, responsive to receiving the at least one deliverable document associated with the contract, troubled contracts program <b>122</b> extracts data from the at least one deliverable document associated with the contract.</p><p id="p-0050" num="0049">For example, troubled contracts program <b>122</b> extracts data from four deliverable documents associated with the originating contract. The four deliverable documents include a Data Dictionary, an ETL Script, a Monthly Status Report, and a Final Report. Troubled contracts program <b>122</b> extracts the unique document identification number of the deliverable document associated with the contract and the name of the deliverable document associated with the contract.</p><p id="p-0051" num="0050">In step <b>360</b>, troubled contracts program <b>122</b> creates a first table. In an embodiment, troubled contracts program <b>122</b> creates a first table to manage the extracted data. In an embodiment, troubled contracts program <b>122</b> creates a first table with two headers: the name of the at least one deliverable document associated with the contract and the unique document identification number of the at least one deliverable document associated with the contract. The first table will hereinafter be referred to as the Deliverable Document Receiving Table. In an embodiment, troubled contracts program <b>122</b> inputs the data extracted from the at least one deliverable document associated with the contract into the Deliverable Document Receiving Table. In an embodiment, responsive to extracting data from the at least one deliverable document associated with the contract, troubled contracts program <b>122</b> creates a Deliverable Document Receiving Table.</p><p id="p-0052" num="0051">Continuing the above example, troubled contracts program <b>122</b> creates Table A, a Deliverable Document Receiving Table, and inputs the data extracted from the four identified deliverable documents, including the unique document identification number of the at least one deliverable document associated with the contract and the name of the at least one deliverable document associated with the contract, into Table A.</p><p id="p-0053" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="63pt" align="center"/><colspec colname="2" colwidth="126pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE A</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>Deliverable Number</entry><entry>Deliverable Name</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>A001</entry><entry>Data Dictionary</entry></row><row><entry/><entry>A002</entry><entry>ETL Scripts</entry></row><row><entry/><entry>A003</entry><entry>Monthly Status Report</entry></row><row><entry/><entry>A004</entry><entry>Final Report</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0054" num="0052">In step <b>370</b>, troubled contracts program <b>122</b> analyzes the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> analyzes the at least one deliverable document associated with the contract by applying health metrics to the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> applies health metrics to the at least one deliverable document associated with the contract to identify evidence of completion of each requirement of the list of requirements specified in the originating contract. The features of the health metrics used include, but are not limited to, character count, word count, sentiment analysis data, key terms, and quantitative data. A character count is a count of the letters, numerical digits, common punctuation marks, and whitespaces contained in a document. A word count is a count of the words contained in a document. Sentiment analysis is the process of computationally identifying and categorizing opinions expressed in a piece of text, especially to determine whether the writer's attitude towards a particular topic, product, etc. is positive, negative, or neutral. Sentiment analysis data is data derived from the sentiment analysis process. Quantitative data is the value of data in the form of counts or numbers where each dataset has a unique numerical value associated with it. The analysis of the at least one deliverable document associated with the contract is described in further detail with respect to flowchart <b>400</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. In an embodiment, responsive to creating a Deliverable Document Receiving Table, troubled contracts program <b>122</b> analyzes the at least one deliverable document associated with the contract.</p><p id="p-0055" num="0053">In step <b>380</b>, troubled contracts program <b>122</b> outputs a health score. In an embodiment, troubled contracts program <b>122</b> outputs a health score for each requirement of the list of requirements. In an embodiment, troubled contracts program <b>122</b> outputs a health score for each requirement of the list of requirements based on the analysis of the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> outputs a health score as an alert notification. In an embodiment, troubled contracts program <b>122</b> outputs a health score at a run time. In one or more embodiments, troubled contracts program <b>122</b> outputs a health score at a pre-determined period of time, i.e., at an interval set by a user as a user preference, e.g., daily, weekly, or monthly. In an embodiment, troubled contracts program <b>122</b> outputs a health score to the user through user interface <b>132</b> of user computing device <b>130</b>. In an embodiment, troubled contracts program <b>122</b> stores the health score in a database, e.g., database <b>124</b>. In an embodiment, responsive to analyzing the at least one deliverable document associated with the contract, troubled contracts program <b>122</b> outputs a health score.</p><p id="p-0056" num="0054">In decision <b>390</b>, troubled contracts program <b>122</b> determines whether the originating contract is complete (i.e., when the parties to an agreement fulfill their promise or set of promises). In an embodiment, responsive to troubled contracts program <b>122</b> outputting the health score, troubled contracts program <b>122</b> determines whether the originating contract is complete.</p><p id="p-0057" num="0055">If troubled contracts program <b>122</b> determines the originating contract is not complete (decision <b>390</b>, NO branch), then troubled contracts program <b>122</b> waits to receive at least one associated deliverable document (step <b>340</b>). If troubled contracts program <b>122</b> determines the originating contract is complete (decision <b>390</b>, YES branch), then troubled contracts program <b>122</b> ends.</p><p id="p-0058" num="0056"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart, generally designated <b>400</b>, illustrating, in greater detail, the operational steps of analysis step <b>370</b> of troubled contracts program <b>122</b> on server <b>120</b> within distributed data processing environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention. It should be appreciated that the process depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates one possible iteration of the analysis step of troubled contracts program <b>122</b>, which may be repeated for each deliverable document associated with the contract received by troubled contracts program <b>122</b>.</p><p id="p-0059" num="0057">In step <b>405</b>, troubled contracts program <b>122</b> calculates the size of the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> calculates the size of the at least one deliverable document associated with the contract by counting the number of characters in the at least one deliverable document associated with the contract. In one or more embodiments, troubled contracts program <b>122</b> calculates the size of the at least one deliverable document associated with the contract by counting the number of sentences written in the at least one deliverable document associated with the contract. In one or more embodiments, troubled contracts program <b>122</b> calculates the size of the at least one deliverable document associated with the contract by counting the number of paragraphs written in the at least one deliverable document associated with the contract. In one or more embodiments, troubled contracts program <b>122</b> calculates the size of the at least one deliverable document associated with the contract by counting the number of bullet points used in the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> inputs the calculated size of the at least one deliverable document associated with the contract into a second table. The second table will hereinafter be referred to as the Deliverable Document Matrix Comparison Table. In an embodiment, troubled contracts program <b>122</b> stores the calculated size of the at least one deliverable document associated with the contract in a database, e.g., database <b>124</b>.</p><p id="p-0060" num="0058">In step <b>410</b>, troubled contracts program <b>122</b> identifies sections of the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> identifies sections of the at least one deliverable document associated with the contract related to the list of requirements. In one or more embodiments, troubled contracts program <b>122</b> identifies sections of the at least one deliverable document associated with the contract related to the list of requirements that contain quantitative data. For example, quantitative data can include hours worked and headcounts of staff. In one or more embodiments, troubled contracts program <b>122</b> identifies sections of the at least one deliverable document associated with the contract related to the list of requirements that contain sentiment analysis data. For example, sentiment analysis data can include indications of whether the writer's attitude is positive, negative, or neutral toward a particular topic of the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> identifies sections of the at least one deliverable document associated with the contract related to the list of requirements using one or more NLP techniques. The NLP techniques used include, but are not limited to, a bag-of-words model, a synonym generation and detection model, and a similarity algorithm. In an embodiment, responsive to calculating the size of the at least one deliverable document associated with the contract, troubled contracts program <b>122</b> identifies sections of the at least one deliverable document associated with the contract.</p><p id="p-0061" num="0059">In step <b>415</b>, troubled contracts program <b>122</b> extracts data from the identified sections of the at least one deliverable document associated with the contract. The data extracted from the identified sections of the at least one deliverable document associated with the contract includes, but is not limited to, data related to the list of requirements, quantitative data, and sentiment analysis data. In an embodiment, troubled contracts program <b>122</b> inputs the data extracted from the identified sections of the at least one deliverable document associated with the contract into the Deliverable Document Matrix Comparison Table. In an embodiment, responsive to identifying sections of the at least one deliverable document associated with the contract, troubled contracts program <b>122</b> extracts data from the identified sections of the at least one deliverable document associated with the contract.</p><p id="p-0062" num="0060">In step <b>420</b>, troubled contracts program <b>122</b> applies a month-to-month comparison matrix. In an embodiment, troubled contracts program <b>122</b> applies a month-to-month comparison matrix to the data inputted into the Deliverable Document Matrix Comparison Table. In an embodiment, troubled contracts program <b>122</b> applies a month-to-month comparison matrix to track changes in the data inputted into the Deliverable Document Matrix Comparison Table. In an embodiment, troubled contracts program <b>122</b> identifies the difference in size of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, the difference in the headcount of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, and the difference in the sentiment of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed.</p><p id="p-0063" num="0061">A positive deviation in the data correlates with successful progress on or completion of a requirement on the list of requirements. A negative deviation in the data correlates with failure to make progress on or to complete a requirement on the list of requirements. In an embodiment, responsive to creating the Deliverable Document Matrix Comparison Table, troubled contracts program <b>122</b> applies a month-to-month comparison matrix.</p><p id="p-0064" num="0062">For example, troubled contracts program <b>122</b> creates Table B, a Deliverable Document Matrix Comparison Table. Table B contains the extracted data from the identified sections of the at least one deliverable document associated with the contract as well as the results for three months of the month-to-month comparison matrix. The data in Table B includes, but is not limited to, the unique document identification number of the originating contract, the month the at least one deliverable document associated with the contract was received, the text of the at least one deliverable document associated with the contract, the size of the at least one deliverable document associated with the contract, the difference in size of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, a headcount, the difference in the headcount of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, a sentiment, and the difference in the sentiment of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed.</p><p id="p-0065" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="9"><colspec colname="1" colwidth="35pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><colspec colname="4" colwidth="21pt" align="center"/><colspec colname="5" colwidth="21pt" align="center"/><colspec colname="6" colwidth="35pt" align="center"/><colspec colname="7" colwidth="35pt" align="center"/><colspec colname="8" colwidth="35pt" align="center"/><colspec colname="9" colwidth="35pt" align="center"/><thead><row><entry namest="1" nameend="9" rowsep="1">TABLE B</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row><row><entry/><entry/><entry/><entry>MSR</entry><entry>MSR</entry><entry/><entry>Headcount</entry><entry/><entry>Sentiment</entry></row><row><entry>Contract</entry><entry>MSR</entry><entry>MSR Body</entry><entry>Size</entry><entry>Diff</entry><entry>Headcount</entry><entry>Diff</entry><entry>Sentiment</entry><entry>Diff</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="9"><colspec colname="1" colwidth="35pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><colspec colname="4" colwidth="21pt" align="center"/><colspec colname="5" colwidth="21pt" align="char" char="."/><colspec colname="6" colwidth="35pt" align="center"/><colspec colname="7" colwidth="35pt" align="center"/><colspec colname="8" colwidth="35pt" align="center"/><colspec colname="9" colwidth="35pt" align="char" char="."/><tbody valign="top"><row><entry>1</entry><entry>January 2019</entry><entry>During</entry><entry>1400</entry><entry>0</entry><entry>10</entry><entry>0</entry><entry>0.25</entry><entry>0</entry></row><row><entry/><entry/><entry>January . . .</entry></row><row><entry>1</entry><entry>February 2019</entry><entry>During</entry><entry>1375</entry><entry>&#x2212;25</entry><entry>10</entry><entry>0</entry><entry>0.54</entry><entry>+0.29</entry></row><row><entry/><entry/><entry>February . . .</entry></row><row><entry>1</entry><entry>March 2019</entry><entry>During</entry><entry>1425</entry><entry>+50</entry><entry>10</entry><entry>0</entry><entry>0.42</entry><entry>&#x2212;0.12</entry></row><row><entry/><entry/><entry>March . . .</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0066" num="0063">In step <b>425</b>, troubled contracts program <b>122</b> links the data in the Deliverable Document Receiving Table with the data in the Deliverable Document Matrix Comparison Table. In an embodiment, troubled contracts program <b>122</b> links the data in the Deliverable Document Receiving Table with the data in the Deliverable Document Matrix Comparison Table to create a third table. The third table contains data including, but not limited to, the unique document identification number of the originating contract, the unique document identification number of the at least one deliverable document associated with the contract, the name given to the at least one associated deliverable document, the date the at least one deliverable document associated with the contract was produced, and the text of the at least one deliverable document associated with the contract. The third table will hereinafter be referred to as the Deliverable Document Summary Comparison Table. In an embodiment, responsive to applying a month-to-month comparison matrix, troubled contracts program <b>122</b> links the data in the Deliverable Document Receiving Table with the data in the Deliverable Document Matrix Comparison Table.</p><p id="p-0067" num="0064">For example, troubled contracts program <b>122</b> creates Table C, a Deliverable Document Summary Comparison Table.</p><p id="p-0068" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="42pt" align="center"/><colspec colname="3" colwidth="63pt" align="center"/><colspec colname="4" colwidth="35pt" align="center"/><colspec colname="5" colwidth="42pt" align="center"/><thead><row><entry namest="1" nameend="5" rowsep="1">TABLE C</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row><row><entry/><entry>Deliverable</entry><entry>Deliverable</entry><entry/><entry>MSR</entry></row><row><entry>Contract</entry><entry>Number</entry><entry>Name</entry><entry>MSR</entry><entry>Body</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>Jan 2019</entry><entry>During</entry></row><row><entry/><entry/><entry/><entry/><entry>Jan . . . </entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>Feb 2019</entry><entry>During</entry></row><row><entry/><entry/><entry/><entry/><entry>Feb . . . </entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>Mar 2019</entry><entry>During</entry></row><row><entry/><entry/><entry/><entry/><entry>Mar . . . </entry></row><row><entry>1</entry><entry>A002</entry><entry>Data Dictionary</entry><entry>Jan 2019</entry><entry>During</entry></row><row><entry/><entry/><entry/><entry/><entry>Jan . . . </entry></row><row><entry>1</entry><entry>A002</entry><entry>Data Dictionary</entry><entry>Feb 2019</entry><entry>During</entry></row><row><entry/><entry/><entry/><entry/><entry>Feb . . . </entry></row><row><entry>s</entry><entry>A002</entry><entry>Data Dictionary</entry><entry>Mar 2019</entry><entry>During</entry></row><row><entry/><entry/><entry/><entry/><entry>Mar . . .</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0069" num="0065">In step <b>430</b>, troubled contracts program <b>122</b> identifies evidence of common linkages between the originating contract and the at least one deliverable document associated with the contract. In an embodiment, troubled contracts program <b>122</b> identifies evidence of common linkages between the originating contract and the at least one deliverable document associated with the contract by searching the column of the Deliverable Document Summary Comparison Table containing the text of the at least one deliverable document associated with the contract (i.e., the MSR Body Column).</p><p id="p-0070" num="0066">In an embodiment, troubled contracts program <b>122</b> creates a first column. In an embodiment, troubled contracts program <b>122</b> creates a first column in the Deliverable Document Summary Comparison Table. In an embodiment, troubled contracts program <b>122</b> inputs evidence of the common linkages between the originating contract and the at least one deliverable document associated with the contract found in the first column created. The first column created will hereinafter be referred to as the Completion of Requirements Evidence Column. In an embodiment, responsive to linking the data in the Deliverable Document Receiving Table with the data in the Deliverable Document Matrix Comparison Table, troubled contracts program <b>122</b> identifies evidence of common linkages between the originating contract and the at least one deliverable document associated with the contract.</p><p id="p-0071" num="0067">For example, troubled contracts program <b>122</b> creates column D, the Completion of Requirements Evidence Column, and inputs evidence of common linkages between the originating contract and the at least one deliverable document associated with the contract into the Completion of Requirements Evidence Column.</p><p id="p-0072" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="287pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE C</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>with column D:</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="42pt" align="center"/><colspec colname="3" colwidth="49pt" align="center"/><colspec colname="4" colwidth="35pt" align="center"/><colspec colname="5" colwidth="28pt" align="center"/><colspec colname="6" colwidth="105pt" align="center"/><tbody valign="top"><row><entry/><entry>Deliverable</entry><entry>Deliverable</entry><entry/><entry>MSR</entry><entry>Column D (Completion of</entry></row><row><entry>Contract</entry><entry>Number</entry><entry>Name</entry><entry>MSR</entry><entry>Body</entry><entry>Requirements Evidence)</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>Jan 2019</entry><entry>During</entry><entry>[Text pertaining to A001 from Jan</entry></row><row><entry/><entry/><entry/><entry/><entry>Jan . . . </entry><entry>2019]</entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>Feb 2019</entry><entry>During</entry><entry>[Text pertaining to A001 from Feb</entry></row><row><entry/><entry/><entry/><entry/><entry>Feb . . . </entry><entry>2019]</entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>Mar 2019</entry><entry>During</entry><entry>[Text pertaining to A001 from Mar</entry></row><row><entry/><entry/><entry/><entry/><entry>Mar . . . </entry><entry>2019]</entry></row><row><entry>1</entry><entry>A002</entry><entry>Data Dictionary</entry><entry>Jan 2019</entry><entry>During</entry><entry>[Text pertaining to A002 from Jan</entry></row><row><entry/><entry/><entry/><entry/><entry>Jan . . . </entry><entry>2019]</entry></row><row><entry>1</entry><entry>A002</entry><entry>Data Dictionary</entry><entry>Feb 2019</entry><entry>During</entry><entry>[Text pertaining to A002 from Feb</entry></row><row><entry/><entry/><entry/><entry/><entry>Feb . . . </entry><entry>2019]</entry></row><row><entry>s</entry><entry>A002</entry><entry>Data Dictionary</entry><entry>Mar 2019</entry><entry>During</entry><entry>[Text pertaining to A002 from Mar</entry></row><row><entry/><entry/><entry/><entry/><entry>Mar . . . </entry><entry>2019]</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0073" num="0068">In step <b>435</b>, troubled contracts program <b>122</b> generates one or more synonyms. In an embodiment, troubled contracts program <b>122</b> generates one or more synonyms of the list of requirements. In an embodiment, troubled contracts program <b>122</b> generates one or more synonyms that mean exactly or nearly the same as another word or phrase found in the list of requirements. In an embodiment, troubled contracts program <b>122</b> generates one or more synonyms of the list of requirements using NLP. In one or more embodiments, troubled contracts program <b>122</b> enables the user to generate one or more synonyms of the list of requirements manually.</p><p id="p-0074" num="0069">In an embodiment, troubled contracts program <b>122</b> creates a second column. In an embodiment, troubled contracts program <b>122</b> creates a second column in the Deliverable Document Summary Comparison Table. In an embodiment, troubled contracts program <b>122</b> creates a second column in the Deliverable Document Summary Comparison Table for the one or more synonyms of the list of requirements generated. The second column will hereinafter be referred to as the Generated Synonym Column. In an embodiment, troubled contracts program <b>122</b> inputs the one or more synonyms of the list of requirements into the Generated Synonym Column. In an embodiment, responsive to identifying common linkages between the originating contract and the at least one deliverable document associated with the contract, troubled contracts program <b>122</b> generates one or more synonyms.</p><p id="p-0075" num="0070">For example, troubled contracts program <b>122</b> creates column E, the Generated Synonym Column, and inputs the one or more synonyms of the list of requirements generated into the Generated Synonym Column.</p><p id="p-0076" num="0071">Table C with column E:</p><p id="p-0077" num="0000"><tables id="TABLE-US-00005" num="00005"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="1" colwidth="35pt" align="left"/><colspec colname="2" colwidth="42pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><colspec colname="4" colwidth="35pt" align="left"/><colspec colname="5" colwidth="42pt" align="left"/><colspec colname="6" colwidth="77pt" align="left"/><colspec colname="7" colwidth="42pt" align="left"/><thead><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row><row><entry/><entry/><entry/><entry/><entry/><entry>Column D</entry><entry>Column E</entry></row><row><entry/><entry>Deliverable</entry><entry>Deliverable</entry><entry/><entry>MSR</entry><entry>(Completion of</entry><entry>(Generated</entry></row><row><entry>Contract</entry><entry>Number</entry><entry>Name</entry><entry>MSR</entry><entry>Body</entry><entry>Requirement Evidence)</entry><entry>Synonym)</entry></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>January</entry><entry>During</entry><entry>[Text pertaining to A001</entry><entry>Synonym</entry></row><row><entry/><entry/><entry/><entry>2019</entry><entry>January . . .</entry><entry>from January 2019]</entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>February</entry><entry>During</entry><entry>[Text pertaining to A001</entry><entry>Synonym</entry></row><row><entry/><entry/><entry/><entry>2019</entry><entry>February . . .</entry><entry>from February 2019]</entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>March</entry><entry>During</entry><entry>[Text pertaining to A001</entry><entry>Synonym</entry></row><row><entry/><entry/><entry/><entry>2019</entry><entry>March . . .</entry><entry>from March 2019]</entry></row><row><entry>1</entry><entry>A002</entry><entry>Data</entry><entry>January</entry><entry>During</entry><entry>[Text pertaining to A002</entry><entry>Synonym</entry></row><row><entry/><entry/><entry>Dictionary</entry><entry>2019</entry><entry>January . . .</entry><entry>from January 2019]</entry></row><row><entry>1</entry><entry>A002</entry><entry>Data</entry><entry>February</entry><entry>During</entry><entry>[Text pertaining to A002</entry><entry>Synonym</entry></row><row><entry/><entry/><entry>Dictionary</entry><entry>2019</entry><entry>February . . .</entry><entry>from February 2019]</entry></row><row><entry>s</entry><entry>A002</entry><entry>Data</entry><entry>March</entry><entry>During</entry><entry>[Text pertaining to A002</entry><entry>Synonym</entry></row><row><entry/><entry/><entry>Dictionary</entry><entry>2019</entry><entry>March . . .</entry><entry>from March 2019]</entry></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0078" num="0072">In step <b>440</b>, troubled contracts program <b>122</b> searches for the one or more synonyms of the list of requirements. In an embodiment, troubled contracts program <b>122</b> searches for the one or more synonyms of the list of requirements in the Completion of Requirements Evidence Column of the Deliverable Document Summary Comparison Table.</p><p id="p-0079" num="0073">In an embodiment, troubled contracts program <b>122</b> identifies the one or more synonyms of the list of requirements found in the Completion of Requirements Evidence Column of the Deliverable Document Summary Comparison Table.</p><p id="p-0080" num="0074">In an embodiment, troubled contracts program <b>122</b> creates a third column. In an embodiment, troubled contracts program <b>122</b> creates a third column in the Deliverable Document Summary Comparison Table. In an embodiment, troubled contracts program <b>122</b> creates a third column when one or more synonyms of the list of requirements are found in the Completion of Requirements Evidence Column of the Deliverable Document Summary Comparison Table. The third column created will hereinafter be referred to as the Synonym Linkage Column.</p><p id="p-0081" num="0075">In an embodiment, troubled contracts program <b>122</b> inputs a value into the Synonym Linkage Column. In an embodiment, troubled contracts program <b>122</b> inputs a value into the Synonym Linkage Column indicating whether one or more synonyms of the list of requirements were found in the Completion of Requirements Evidence Column of the Deliverable Document Summary Comparison Table. E represents the value. E is a value greater than 0 if a synonym is found. E is equal to 0 if a synonym is not found.</p><p id="p-0082" num="0076">In an embodiment, responsive to generating one or more synonyms, troubled contracts program <b>122</b> searches for the one or more synonyms of the list of requirements.</p><p id="p-0083" num="0077">For example, troubled contracts program <b>122</b> creates column F, the Synonym Linkage Column, in Table C. If troubled contracts program <b>122</b> finds a synonym in the Completion of Requirements Evidence Column of the Deliverable Document Summary Comparison Table, then troubled contracts program <b>122</b> enters D+E into the Synonym Linkage Column. E is equal to a value greater than 0. If troubled contracts program <b>122</b> does not find a synonym in the Completion of Requirements Evidence Column of the Deliverable Document Summary Comparison Table, then troubled contracts program <b>122</b> enters only D into the Synonym Linkage Column. E, in this case, is equal to 0.</p><p id="p-0084" num="0000"><tables id="TABLE-US-00006" num="00006"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="8"><colspec colname="1" colwidth="35pt" align="left"/><colspec colname="2" colwidth="42pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><colspec colname="4" colwidth="35pt" align="left"/><colspec colname="5" colwidth="42pt" align="left"/><colspec colname="6" colwidth="77pt" align="left"/><colspec colname="7" colwidth="42pt" align="left"/><colspec colname="8" colwidth="35pt" align="left"/><thead><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row><row><entry/><entry/><entry/><entry/><entry/><entry>Column D</entry><entry>Column E</entry><entry>Column F</entry></row><row><entry/><entry>Deliverable</entry><entry>Deliverable</entry><entry/><entry>MSR</entry><entry>(Completion of</entry><entry>(Generated</entry><entry>(Synonym</entry></row><row><entry>Contract</entry><entry>Number</entry><entry>Name</entry><entry>MSR</entry><entry>Body</entry><entry>Requirement Evidence)</entry><entry>Synonym)</entry><entry>Linkage)</entry></row><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>January</entry><entry>During</entry><entry>[Text pertaining to A001</entry><entry>Synonym</entry><entry>D + E</entry></row><row><entry/><entry/><entry/><entry>2019</entry><entry>January . . .</entry><entry>from January 2019]</entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>February</entry><entry>During</entry><entry>[Text pertaining to A001</entry><entry>Synonym</entry><entry>D + E</entry></row><row><entry/><entry/><entry/><entry>2019</entry><entry>February . . .</entry><entry>from February 2019]</entry></row><row><entry>1</entry><entry>A001</entry><entry>ETL Scripts</entry><entry>March</entry><entry>During</entry><entry>[Text pertaining to A001</entry><entry>Synonym</entry><entry>D + E</entry></row><row><entry/><entry/><entry/><entry>2019</entry><entry>March . . .</entry><entry>from March 2019]</entry></row><row><entry>1</entry><entry>A002</entry><entry>Data</entry><entry>January</entry><entry>During</entry><entry>[Text pertaining to A002</entry><entry>Synonym</entry><entry>D + E</entry></row><row><entry/><entry/><entry>Dictionary</entry><entry>2019</entry><entry>January . . .</entry><entry>from January 2019]</entry></row><row><entry>1</entry><entry>A002</entry><entry>Data</entry><entry>February</entry><entry>During</entry><entry>[Text pertaining to A002</entry><entry>Synonym</entry><entry>D + E</entry></row><row><entry/><entry/><entry>Dictionary</entry><entry>2019</entry><entry>February . . .</entry><entry>from February 2019]</entry></row><row><entry>s</entry><entry>A002</entry><entry>Data</entry><entry>March</entry><entry>During</entry><entry>[Text pertaining to A002</entry><entry>Synonym</entry><entry>D + E</entry></row><row><entry/><entry/><entry>Dictionary</entry><entry>2019</entry><entry>March . . .</entry><entry>from March 2019]</entry></row><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0085" num="0078">In step <b>445</b>, troubled contracts program <b>122</b> dedupes the Synonym Linkage Column. In an embodiment, troubled contracts program <b>122</b> dedupes the Synonym Linkage Column by eliminating any redundant duplicate data. In an embodiment, responsive to searching for the one or more synonyms of the list of requirements, troubled contracts program <b>122</b> dedupes the Synonym Linkage Column.</p><p id="p-0086" num="0079">In step <b>450</b>, troubled contracts program <b>122</b> merges the Deliverable Document Matrix Comparison Table with the Deliverable Document Summary Comparison Table. In an embodiment, troubled contracts program <b>122</b> merges the Deliverable Document Matrix Comparison Table with the Deliverable Document Summary Comparison Table to create one complete table of the evidence of completion of each requirement of the list of requirements. In an embodiment, troubled contracts program <b>122</b> creates a fourth table. The fourth table will hereinafter be referred to as the Deliverable Document Complete Comparison Table. In an embodiment, responsive to deduping the Completion/Delivery Evidence Column, troubled contracts program <b>122</b> merges the Deliverable Document Matrix Comparison Table with the Deliverable Document Summary Comparison Table.</p><p id="p-0087" num="0080">In step <b>455</b>, troubled contracts program <b>122</b> calculates a health score. In an embodiment, troubled contracts program <b>122</b> calculates a health score by applying a success model to the evidence of completion of each requirement of the list of requirements found in the Deliverable Document Complete Comparison Table. In an embodiment, troubled contracts program <b>122</b> scores the evidence of completion of each requirement of the list of requirements. In an embodiment, troubled contracts program <b>122</b> scores the evidence of completion of each requirement of the list of requirements as &#x201c;Successful&#x201d; if the score of the evidence is above a pre-set failure threshold of the success model. In an embodiment, troubled contracts program <b>122</b> scores the evidence of completion of each requirement of the list of requirements as &#x201c;Not Successful&#x201d; if the score of the evidence is below the pre-set failure threshold of the success model. In an embodiment, responsive to merging the Deliverable Document Matrix Comparison Table with the Deliverable Document Summary Comparison Table, troubled contracts program <b>122</b> calculates a health score.</p><p id="p-0088" num="0081"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating the components of computer device <b>500</b>, suitable for server <b>120</b> and/or user computing device <b>130</b> within distributed data processing environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present invention. It should be appreciated that <figref idref="DRAWINGS">FIG. <b>5</b></figref> provides only an illustration of one implementation and does not imply any limitations with regard to the environments in which different embodiments can be implemented. Many modifications to the depicted environment can be made.</p><p id="p-0089" num="0082">Computer device <b>500</b> includes processor(s) <b>504</b>, memory <b>506</b>, cache <b>516</b>, communications fabric <b>502</b>, persistent storage <b>508</b>, input/output (I/O) interface(s) <b>512</b>, and communications unit <b>510</b>.</p><p id="p-0090" num="0083">Communications fabric <b>502</b> provides communications between memory <b>506</b>, cache <b>516</b>, persistent storage <b>508</b>, input/output (I/O) interface(s) <b>512</b>, and communications unit <b>510</b>. Communications fabric <b>502</b> can be implemented with any architecture designed for passing data and/or control information between processors (such as microprocessors, communications and network processors, etc.), system memory, peripheral devices, and any other hardware components within a system. For example, communications fabric <b>502</b> can be implemented with one or more buses or a cross switch.</p><p id="p-0091" num="0084">Memory <b>506</b> and persistent storage <b>508</b> are computer readable storage media. In this embodiment, memory <b>506</b> includes random access memory (RAM). In general, memory <b>506</b> can include any suitable volatile or non-volatile computer readable storage media. Cache <b>516</b> is a fast memory that enhances the performance of computer processor(s) <b>504</b> by holding recently accessed data, and data near accessed data, from memory <b>506</b>.</p><p id="p-0092" num="0085">Program instructions and data (e.g., software and data) used to practice embodiments of the present invention may be stored in persistent storage <b>508</b> and in memory <b>506</b> for execution and/or access by one or more of the respective computer processor(s) <b>504</b> via cache <b>516</b>. In an embodiment, persistent storage <b>508</b> includes a magnetic hard disk drive. Alternatively, or in addition to a magnetic hard disk drive, persistent storage <b>508</b> can include a solid-state hard drive, a semiconductor storage device, a read-only memory (ROM), an erasable programmable read-only memory (EPROM), a flash memory, or any other computer readable storage media that is capable of storing program instructions or digital information.</p><p id="p-0093" num="0086">The media used by persistent storage <b>508</b> may also be removable. For example, a removable hard drive may be used for persistent storage <b>508</b>. Other examples include optical and magnetic disks, thumb drives, and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage <b>508</b>. Software and data can be stored in persistent storage <b>508</b> for access and/or execution by one or more of the respective processor(s) <b>504</b> via cache <b>516</b>. With respect to user computing device <b>130</b>, software and data includes user interface <b>132</b>. With respect to server <b>120</b>, software and data includes troubled contracts program <b>122</b>.</p><p id="p-0094" num="0087">Communications unit <b>510</b>, in these examples, provides for communications with other data processing systems or devices. In these examples, communications unit <b>510</b> includes one or more network interface cards. Communications unit <b>510</b> may provide communications through the use of either or both physical and wireless communications links. Program instructions and data (e.g., software and data) used to practice embodiments of the present invention may be downloaded to persistent storage <b>508</b> through communications unit <b>510</b>.</p><p id="p-0095" num="0088">I/O interface(s) <b>512</b> allows for input and output of data with other devices that may be connected to server <b>120</b> and/or user computing device <b>130</b>. For example, I/O interface(s) <b>512</b> may provide a connection to external device(s) <b>518</b>, such as a keyboard, a keypad, a touch screen, and/or some other suitable input device. External device(s) <b>518</b> can also include portable computer readable storage media, such as, for example, thumb drives, portable optical or magnetic disks, and memory cards. Software and data used to practice embodiments of the present invention can be stored on such portable computer readable storage media and can be loaded onto persistent storage <b>508</b> via I/O interface(s) <b>512</b>. I/O interface(s) <b>512</b> also connect to display <b>520</b>.</p><p id="p-0096" num="0089">Display <b>520</b> provides a mechanism to display data to a user and may be, for example, a computer monitor.</p><p id="p-0097" num="0090">The programs described herein are identified based upon the application for which they are implemented in a specific embodiment of the invention. However, it should be appreciated that any particular program nomenclature herein is used merely for convenience, and thus the invention should not be limited to use solely in any specific application identified and/or implied by such nomenclature.</p><p id="p-0098" num="0091">The present invention may be a system, a method, and/or a computer program product at any possible technical detail level of integration. The computer program product may include a computer readable storage medium (or media) having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.</p><p id="p-0099" num="0092">The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be, for example, but is not limited to, an electronic storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing. A non-exhaustive list of more specific examples of computer readable storage medium includes the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a static random access memory (SRAM), a portable compact disc read-only memory (CD-ROM), a digital versatile disk (DVD), a memory stick, a floppy disk, a mechanically encoded device such as punch-cards or raised structures in a groove having instructions recorded thereon, and any suitable combination of the foregoing. A computer readable storage medium, as used herein, is not to be construed as being transitory signals per se, such as radio waves or other freely propagating electromagnetic waves, electromagnetic waves propagating through a waveguide or other transmission media (e.g., light pulses passing through a fiber-optic cable), or electrical signals transmitted through a wire.</p><p id="p-0100" num="0093">Computer readable program instructions described herein can be downloaded to respective computing/processing devices from a computer readable storage medium or to an external computer or external storage device via a network, for example, the Internet, a local area network, a wide area network and/or a wireless network. The network may comprise copper transmission cables, optical transmission fibers, wireless transmission, routers, firewalls, switches, gateway computers and/or edge servers. A network adapter card or network interface in each computing/processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing/processing device.</p><p id="p-0101" num="0094">Computer readable program instructions for carrying out operations of the present invention may be assembler instructions, instruction-set-architecture (ISA) instructions, machine instructions, machine dependent instructions, microcode, firmware instructions, state-setting data, configuration data for integrated circuitry, or either source code or object code written in any combination of one or more programming languages, including an object oriented programming language such as Smalltalk, C++, or the like, and procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The computer readable program instructions may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). In some embodiments, electronic circuitry including, for example, programmable logic circuitry, field-programmable gate arrays (FPGA), or programmable logic arrays (PLA) may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry, in order to perform aspects of the present invention.</p><p id="p-0102" num="0095">While particular embodiments of the present invention have been shown and described here, it will be understood to those skilled in the art that, based upon the teachings herein, changes and modifications may be made without departing from the embodiments and its broader aspects. Therefore, the appended claims are to encompass within their scope all such changes and modifications as are within the true spirit and scope of the embodiments. Furthermore, it is to be understood that the embodiments are solely defined by the appended claims. It will be understood by those with skill in the art that if a specific number of an introduced claim element is intended, such intent will be explicitly recited in the claim, and in the absence of such recitation no such limitation is present. For a non-limiting example, as an aid to understand, the following appended claims contain usage of the introductory phrases &#x201c;at least one&#x201d; and &#x201c;one or more&#x201d; to introduce claim elements. However, the use of such phrases should not be construed to imply that the introduction of a claim element by the indefinite articles &#x201c;a&#x201d; or &#x201c;an&#x201d; limits any particular claim containing such introduced claim element to embodiments containing only one such element, even when the same claim includes the introductory phrases &#x201c;at least one&#x201d; or &#x201c;one or more&#x201d; and indefinite articles such as &#x201c;a&#x201d; or &#x201c;an&#x201d;, the same holds true for the use in the claims of definite articles.</p><p id="p-0103" num="0096">Aspects of the present invention are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems), and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer readable program instructions.</p><p id="p-0104" num="0097">These computer readable program instructions may be provided to a processor of a general-purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart illustrations and/or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer, a programmable data processing apparatus, and/or other devices to function in a particular manner, such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function/act specified in the flowchart illustrations and/or block diagram block or blocks.</p><p id="p-0105" num="0098">The computer readable program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other device to cause a series of operational steps to be performed on the computer, other programmable apparatus or other device to produce a computer implemented process, such that the instructions which execute on the computer, other programmable apparatus, or other device implement the functions/acts specified in the flowchart illustrations and/or block diagram block or blocks.</p><p id="p-0106" num="0099">The flowchart illustrations and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart illustrations or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the block may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each flowchart illustration and/or block of the block diagrams, and combinations of flowchart illustration and/or blocks in the block diagrams, can be implemented by special purpose hardware-based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.</p><p id="p-0107" num="0100">The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The terminology used herein was chosen to best explain the principles of the embodiment, the practical application or technical improvement over technologies found in the marketplace, or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method comprising:<claim-text>receiving, by one or more processors, a contract;</claim-text><claim-text>identifying, by one or more processors, a list of requirements of the contract using a first Natural Language Processing (NLP) technique;</claim-text><claim-text>training, by one or more processors, a model to recognize the list of requirements of the contract;</claim-text><claim-text>receiving, by one or more processors, at least one deliverable document associated with the contract;</claim-text><claim-text>applying, by one or more processors, a plurality of health metrics to the at least one deliverable document associated with the contract to identify evidence of completion of each requirement of the list of requirements of the contract; and</claim-text><claim-text>outputting, by one or more processors, a health score for each requirement of the list of requirements of the contract.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein receiving the at least one deliverable document associated with the contract further comprises:<claim-text>extracting, by one or more processors, a first set of data from the at least one deliverable document associated with the contract using the first NLP technique; and</claim-text><claim-text>creating, by one or more processors, a first table to manage the first set of data extracted from the at least one deliverable document associated with the contract.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein applying the plurality of health metrics to the at least one deliverable document associated with the contract to identify the evidence of completion of each requirement of the list of requirements of the contract further comprises:<claim-text>calculating, by one or more processors, a size of the at least one deliverable document associated with the contract;</claim-text><claim-text>identifying, by one or more processors, one or more sections of the at least one deliverable document associated with the contract related to the list of requirements of the contract using a second NLP technique;</claim-text><claim-text>extracting, by one or more processors, a second set of data from the one or more sections of the at least one deliverable document associated with the contract identified as related to the list of requirements of the contract;</claim-text><claim-text>creating, by one or more processors, a second table to manage the second set of data;</claim-text><claim-text>applying, by one or more processors, a month-to-month comparison matrix to the second set of data to track one or more changes in the second set of data;</claim-text><claim-text>creating, by one or more processors, a third table by linking the data in the first table and the data in the second table;</claim-text><claim-text>identifying, by one or more processors, evidence of a common linkage between the contract and the at least one deliverable document associated with the contract in a column of the third table containing a set of text of the at least one deliverable document associated with the contract;</claim-text><claim-text>generating, by one or more processors, one or more synonyms of the list of requirements using the second NLP technique;</claim-text><claim-text>identifying, by one or more processors, the one or more synonyms of the list of requirements found in a first column of the third table;</claim-text><claim-text>merging, by one or more processors, the data in the second table with the data in the third table to create a fourth table with the evidence of completion of each requirement of the list of requirements; and</claim-text><claim-text>calculating, by one or more processors, the health score for each requirement of the list of requirements of the contract by applying a success-model with a pre-set failure threshold to the evidence of completion of each requirement of the list of requirements of the contract.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the size of the at least one deliverable document associated with the contract is calculated by counting a plurality of characters in the at least one deliverable document associated with the contract, by counting one or more sentences written in the at least one deliverable document associated with the contract, by counting one or more paragraphs written in the at least one deliverable document associated with the contract, or by counting one or more bullet points used in the at least one deliverable document associated with the contract.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the one or more changes tracked in the second set of data includes a difference in the size of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, a difference in a headcount of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, and a difference in a sentiment of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein calculating the health score for each requirement of the list of requirements of the contract by applying the success-model with the pre-set failure threshold to the evidence of completion of each requirement of the list of requirements of the contract further comprises:<claim-text>scoring, by one or more processors, the evidence of completion of each requirement of the list of requirements of the contract; and</claim-text><claim-text>classifying, by one or more processors, the evidence of completion of each requirement of the list of requirements of the contract based on the health score calculated.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the evidence of completion of each requirement of the list of requirements of the contract is classified as &#x201c;successful&#x201d; when the evidence of completion shows progress on a requirement on the list of requirements and scores above the pre-set failure threshold of the success-model or as &#x201c;not successful&#x201d; when the evidence of completion shows failure to make progress on a requirement on the list of requirements and scores below the pre-set failure threshold of the success-model.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A computer program product comprising:<claim-text>one or more computer readable storage media and program instructions stored on the one or more computer readable storage media, the program instructions comprising:</claim-text><claim-text>program instructions to receive a contract;</claim-text><claim-text>program instructions to identify a list of requirements of the contract using a first Natural Language Processing (NLP) technique;</claim-text><claim-text>program instructions to train a model to recognize the list of requirements of the contract;</claim-text><claim-text>program instructions to receive at least one deliverable document associated with the contract;</claim-text><claim-text>program instructions to apply a plurality of health metrics to the at least one deliverable document associated with the contract to identify evidence of completion of each requirement of the list of requirements of the contract; and</claim-text><claim-text>program instructions to output a health score for each requirement of the list of requirements of the contract.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein receiving the at least one deliverable document associated with the contract further comprises:<claim-text>program instructions to extract a first set of data from the at least one deliverable document associated with the contract using the first NLP technique; and</claim-text><claim-text>program instructions to create a first table to manage the first set of data extracted from the at least one deliverable document associated with the contract.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein applying the plurality of health metrics to the at least one deliverable document associated with the contract to identify the evidence of completion of each requirement of the list of requirements of the contract further comprises:<claim-text>program instructions to calculate a size of the at least one deliverable document associated with the contract;</claim-text><claim-text>program instructions to identify one or more sections of the at least one deliverable document associated with the contract related to the list of requirements of the contract using a second NLP technique;</claim-text><claim-text>program instructions to extract a second set of data from the one or more sections of the at least one deliverable document associated with the contract identified as related to the list of requirements of the contract;</claim-text><claim-text>program instructions to create a second table to manage the second set of data;</claim-text><claim-text>program instructions to apply a month-to-month comparison matrix to the second set of data to track one or more changes in the second set of data;</claim-text><claim-text>program instructions to create a third table by linking the data in the first table and the data in the second table;</claim-text><claim-text>program instructions to identify evidence of a common linkage between the contract and the at least one deliverable document associated with the contract in a column of the third table containing a set of text of the at least one deliverable document associated with the contract;</claim-text><claim-text>program instructions to generate one or more synonyms of the list of requirements using the second NLP technique;</claim-text><claim-text>program instructions to identify the one or more synonyms of the list of requirements found in a first column of the third table;</claim-text><claim-text>program instructions to merge the data in the second table with the data in the third table to create a fourth table with the evidence of completion of each requirement of the list of requirements; and</claim-text><claim-text>program instructions to calculate the health score for each requirement of the list of requirements of the contract by applying a success-model with a pre-set failure threshold to the evidence of completion of each requirement of the list of requirements of the contract.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the size of the at least one deliverable document associated with the contract is calculated by counting a plurality of characters in the at least one deliverable document associated with the contract, by counting one or more sentences written in the at least one deliverable document associated with the contract, by counting one or more paragraphs written in the at least one deliverable document associated with the contract, or by counting one or more bullet points used in the at least one deliverable document associated with the contract.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the one or more changes tracked in the second set of data includes a difference in the size of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, a difference in a headcount of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed, and a difference in a sentiment of the at least one deliverable document associated with the contract currently being analyzed from the at least one deliverable document associated with the contract previously analyzed.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein calculating the health score for each requirement of the list of requirements of the contract by applying the success-model with the pre-set failure threshold to the evidence of completion of each requirement of the list of requirements of the contract further comprises:<claim-text>program instructions to score the evidence of completion of each requirement of the list of requirements of the contract; and</claim-text><claim-text>program instructions to classify the evidence of completion of each requirement of the list of requirements of the contract based on the health score calculated.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer program product of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the evidence of completion of each requirement of the list of requirements of the contract is classified as &#x201c;successful&#x201d; when the evidence of completion shows progress on a requirement on the list of requirements and scores above the pre-set failure threshold of the success-model or as &#x201c;not successful&#x201d; when the evidence of completion shows failure to make progress on a requirement on the list of requirements and scores below the pre-set failure threshold of the success-model.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer system comprising:<claim-text>one or more computer processors;</claim-text><claim-text>one or more computer readable storage media;</claim-text><claim-text>program instructions collectively stored on the one or more computer readable storage media for execution by at least one of the one or more computer processors, the stored program instructions comprising:</claim-text><claim-text>program instructions to receive a contract;</claim-text><claim-text>program instructions to identify a list of requirements of the contract using a first Natural Language Processing (NLP) technique;</claim-text><claim-text>program instructions to train a model to recognize the list of requirements of the contract;</claim-text><claim-text>program instructions to receive at least one deliverable document associated with the contract;</claim-text><claim-text>program instructions to apply a plurality of health metrics to the at least one deliverable document associated with the contract to identify evidence of completion of each requirement of the list of requirements of the contract; and</claim-text><claim-text>program instructions to output a health score for each requirement of the list of requirements of the contract.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein receiving the at least one deliverable document associated with the contract further comprises:<claim-text>program instructions to extract a first set of data from the at least one deliverable document associated with the contract using the first NLP technique; and</claim-text><claim-text>program instructions to create a first table to manage the first set of data extracted from the at least one deliverable document associated with the contract.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein applying the plurality of health metrics to the at least one deliverable document associated with the contract to identify the evidence of completion of each requirement of the list of requirements of the contract further comprises:<claim-text>program instructions to calculate a size of the at least one deliverable document associated with the contract;</claim-text><claim-text>program instructions to identify one or more sections of the at least one deliverable document associated with the contract related to the list of requirements of the contract using a second NLP technique;</claim-text><claim-text>program instructions to extract a second set of data from the one or more sections of the at least one deliverable document associated with the contract identified as related to the list of requirements of the contract;</claim-text><claim-text>program instructions to create a second table to manage the second set of data;</claim-text><claim-text>program instructions to apply a month-to-month comparison matrix to the second set of data to track one or more changes in the second set of data;</claim-text><claim-text>program instructions to create a third table by linking the data in the first table and the data in the second table;</claim-text><claim-text>program instructions to identify evidence of a common linkage between the contract and the at least one deliverable document associated with the contract in a column of the third table containing a set of text of the at least one deliverable document associated with the contract;</claim-text><claim-text>program instructions to generate one or more synonyms of the list of requirements using the second NLP technique;</claim-text><claim-text>program instructions to identify the one or more synonyms of the list of requirements found in a first column of the third table;</claim-text><claim-text>program instructions to merge the data in the second table with the data in the third table to create a fourth table with the evidence of completion of each requirement of the list of requirements; and</claim-text><claim-text>program instructions to calculate the health score for each requirement of the list of requirements of the contract by applying a success-model with a pre-set failure threshold to the evidence of completion of each requirement of the list of requirements of the contract.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the size of the at least one deliverable document associated with the contract is calculated by counting a plurality of characters in the at least one deliverable document associated with the contract, by counting one or more sentences written in the at least one deliverable document associated with the contract, by counting one or more paragraphs written in the at least one deliverable document associated with the contract, or by counting one or more bullet points used in the at least one deliverable document associated with the contract.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein calculating the health score for each requirement of the list of requirements of the contract by applying the success-model with the pre-set failure threshold to the evidence of completion of each requirement of the list of requirements of the contract further comprises:<claim-text>program instructions to score the evidence of completion of each requirement of the list of requirements of the contract; and</claim-text><claim-text>program instructions to classify the evidence of completion of each requirement of the list of requirements of the contract based on the health score calculated.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the evidence of completion of each requirement of the list of requirements of the contract is classified as &#x201c;successful&#x201d; when the evidence of completion shows progress on a requirement on the list of requirements and scores above the pre-set failure threshold of the success-model or as &#x201c;not successful&#x201d; when the evidence of completion shows failure to make progress on a requirement on the list of requirements and scores below the pre-set failure threshold of the success-model.</claim-text></claim></claims></us-patent-application>