<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004711A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004711</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17839380</doc-number><date>20220613</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>186</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>28</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>174</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>186</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>287</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>174</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DYNAMIC ITERATION OF GROUPED COMPONENTS IN A TEMPLATE</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217337</doc-number><date>20210701</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only"><addressbook><orgname>Klaviyo Inc.</orgname><address><city>Boston</city><state>MA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Bhatnagar</last-name><first-name>Shresth</first-name><address><city>Boston</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Kezerashvili</last-name><first-name>Daniel</first-name><address><city>Boston</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Shenkman</last-name><first-name>Nikita</first-name><address><city>Boston</city><state>MA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Klaviyo Inc.</orgname><role>02</role><address><city>Boston</city><state>MA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Methods and systems for improved template compilation are disclosed. The system can enable repeating the content of grouped components for each entry in a designated data array from a custom database. With the same design style, each of the iterated components can contain individually different content based on the custom variables in the array. The system can improve efficiency in creating the customized email template. Furthermore, by relying on the custom databases, the system can optimize the template customization process to create personalized templates that match the customer's interests as wells as the business's goals.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="183.98mm" wi="149.78mm" file="US20230004711A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="194.65mm" wi="151.47mm" file="US20230004711A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="211.92mm" wi="156.38mm" file="US20230004711A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="209.72mm" wi="165.95mm" file="US20230004711A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="221.49mm" wi="69.68mm" file="US20230004711A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="204.47mm" wi="70.36mm" file="US20230004711A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="216.24mm" wi="119.63mm" file="US20230004711A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="204.81mm" wi="121.16mm" file="US20230004711A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="217.85mm" wi="168.74mm" file="US20230004711A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="211.33mm" wi="169.84mm" file="US20230004711A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="199.73mm" wi="151.47mm" file="US20230004711A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="214.55mm" wi="98.21mm" file="US20230004711A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="192.28mm" wi="122.00mm" file="US20230004711A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCES TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Patent Application No. 63/217,337, entitled &#x201c;Email Customization,&#x201d; filed Jul. 1, 2021, which is incorporated herein by reference for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present subject matter relates to systems and methods for data integration, compilation, and update of an electronic mail template. More specifically, the present subject matter relates to efficiently repeat grouped components in an email template.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Digital marketing has become a powerful way to promote a business's products and services to its customers. Among digital marketing's various tools, computer-compiled marketing emails can directly deliver the most relevant content to a customer. Such emails can be customized based on the customer's preference and other information. Sometimes, it is necessary to selectively repeat a portion of the content in an email, which can be time consuming to create.</p><p id="p-0005" num="0004">As such, there are a lot of areas for improving the email customization process and optimizing the computer system performance.</p><heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0006" num="0005">The present subject matter describes improved methods for email template compilation via a computer network. The system can enable repeating the content of grouped components, such as a section or a block, for each entry in a designated data array from an event or profile database, or from a data feed. Each of the iterated components can share the same design style but contain individually different content based on the custom variables in the array. Furthermore, the number of the iterated components dynamically corresponds to the number of entries in the designated array as the components are repeated once per item in the array.</p><p id="p-0007" num="0006">Compared with prior approaches, the present subject matter can improve computer and network efficiency by eliminating duplicating and modifying each grouped componentS individually. As the system can dynamically populate iterated sections based on the designated data, it can also improve efficiency in creating the customized email template.</p><p id="p-0008" num="0007">In addition, by relying on multiple custom databases, the system can streamline and optimize the email customization process to create personalized emails, which can match the customer or recipient's interests and the business's goals.</p><p id="p-0009" num="0008">A computer implementation of the present subject matter comprises a method of iterating a section, the method comprises: receiving, at an email customization server, a template comprising a section, a block or grouped components, wherein the section comprises one or more components in a relational database, assigning a plurality of dynamic data entries to be associated with a dynamic component of the one or more components, retrieving the plurality of dynamic data entries from one or more databases for populating the dynamic component, and generating iterated sections based on the plurality of dynamic data entries within the template, wherein each dynamic data entry corresponds to a respective iterated section, and wherein each dynamic data entry is configured to populate one dynamic component in one respective iterated section. The method can further comprise receiving a request to repeat the section within the template based on the plurality of dynamic data entries. According to some embodiments, the plurality of dynamic data entries is an array, i.e., list, of data that stores multiple pieces of data that are structured in the same way. Furthermore, the number of iterated sections corresponds to the quantity of the dynamic data entries in the array.</p><p id="p-0010" num="0009">According to some embodiments, the custom databases comprise a recipient's event database, a customer profile database, a business's product database, or other data feed. According to some embodiments, the one or more components of the sections are multi-level hierarchical components, e.g., rows, columns, and blocks.</p><p id="p-0011" num="0010">Another computer implementation of the present subject matter comprises a method of iterating a section, the method comprises: receiving, at a client device, a template comprising a section, a block or grouped components, wherein the section comprises one or more components in a relational database, assigning a plurality of dynamic data entries to be associated with a dynamic component of the one or more components, retrieving the plurality of dynamic data entries from one or more databases for populating the dynamic component, and generating iterated sections based on the plurality of dynamic data entries within the template, wherein each dynamic data entry corresponds to a respective iterated section, and wherein each dynamic data entry is configured to populate one dynamic component in one respective iterated section. The method can further comprise receiving a request to repeat the section within the template based on the plurality of dynamic data entries. Furthermore, the number of iterated sections corresponds to the quantity of the dynamic data entries in the array.</p><p id="p-0012" num="0011">Other aspects and advantages of the present subject matter will become apparent from the following detailed description taken in conjunction with the accompanying drawings, which illustrate, by way of example, the principles of the present subject matter.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">DESCRIPTION OF DRAWINGS</heading><p id="p-0013" num="0012">The present subject matter is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which:</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an exemplary diagram of an email customization system for dynamic section iteration, according to one or more embodiments of the present subject matter;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an exemplary process for dynamic section iteration within a template, according to one or more embodiments of the present subject matter;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an exemplary layout of a template with iterated sections or grouped components, according to one or more embodiments of the present subject matter;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows exemplary hierarchical components of a template, according to one or more embodiments of the present subject matter;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> shows an exemplary representation of a template, according to one or more embodiments of the present subject matter;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> shows an exemplary template stored in a relational database, according to one or more embodiments of the present subject matter;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an exemplary process for dynamic section iteration within a template, according to one or more embodiments of the present subject matter;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a flow chart that includes steps of a method of email customization, according to one or more embodiments of the present subject matter;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a flow chart that includes steps of a method of email customization, according to one or more embodiments of the present subject matter;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a system that operates to perform template serialization for pre-rendering and versioning, according to one or more embodiments of the present subject matter;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> shows a server system of rack-mounted blades, according to one or more embodiments of the present subject matter;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>10</b>B</figref> shows a diagram of a networked data center server, according to one or more embodiments of the present subject matter;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>11</b>A</figref> shows a packaged system-on-chip device, according to one or more embodiments of the present subject matter; and</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>11</b>B</figref> shows a block diagram of a system-on-chip, according to one or more embodiments of the present subject matter.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0028" num="0027">The present subject matter pertains to improved approaches for dynamically repeating a portion of a template. Embodiments of the present subject matter are discussed below with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>10</b></figref>.</p><p id="p-0029" num="0028">In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present subject matter. It will be apparent, however, to one skilled in the art that the present subject matter may be practiced without some of these specific details. In addition, the following description provides examples, and the accompanying drawings show various examples for the purposes of illustration. Moreover, these examples should not be construed in a limiting sense as they are merely intended to provide examples of embodiments of the subject matter rather than to provide an exhaustive list of all possible implementations. In other instances, well-known structures and devices are shown in block diagram form in order to avoid obscuring the details of the disclosed features of various described embodiments.</p><p id="p-0030" num="0029">The following sections describe systems of process steps and systems of machine components for efficiently creating a customized template. These can be implemented with computers that execute software instructions stored on non-transitory computer-readable media. An improved template management system can have one or more of the features described below.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an exemplary diagram of an email customization system <b>100</b> for dynamic section iteration within a template, according to one or more embodiments of the present subject matter. A template can comprise a set of components or data objects that combine to represent a structure of an email, which is rendered as a computer-compiled HTML web page. The template can be stored a relational database via normalized and related data components or tables, such as body, sections, rows, columns, blocks and sub-blocks.</p><p id="p-0032" num="0031">According to some embodiments, a template can comprise a body with sections. Sections can be grouped components or content blocks, and can be used to organize the template. According to some embodiments, the grouped components of the sections are multi-level hierarchical components, e.g., rows, columns, and blocks. According to some embodiments, a template comprises at least one section. A block or component is a pre-defined structure that can be represented in both a database and in the email editor. A block can comprise a sub-block. For example, a table block can be a sub-block of a section block, and a table image or table text block can be sub-blocks of a table block. For example, a section can be responsible for the layout and general configuration and the blocks can display the specific products.</p><p id="p-0033" num="0032">According to some embodiments, a section can have a section style, such as background color and image, that span through multiple content blocks. Sometimes, it is needed to generate iterated sections with the same section style. However, the content of the iterated sections varies according to the designated dynamic variables, for example, a list of products a customer has purchased.</p><p id="p-0034" num="0033">For example, the template can be an email template with structures and components that can be modified by a computing device or a client device. The template can comprise nested relational database tables comprising components/blocks, settings, content, and position information for the template. According to some embodiments, the email template can be marketing emails that can directly deliver relevant content to a customer. These marketing emails can be generated by modifying a template email according to various factors such as the specific offering or the customer's previous behavior data.</p><p id="p-0035" num="0034">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a user <b>106</b> of the email customization system <b>100</b> can compile a template <b>104</b> via a client device <b>102</b>, which can communicate with a relational database <b>113</b>, a custom database <b>115</b>, and an email customization server <b>101</b> via a network <b>114</b>. Client device <b>102</b> can be a computing device that has at least one input interface for receiving template modification requests and at least one network interface for network connection.</p><p id="p-0036" num="0035">Network <b>114</b> can comprise a single network or a combination of multiple networks, such as the Internet or intranets, wireless cellular networks, local area network (LAN), wide area network (WAN), WiFi, Bluetooth, near-field communication (NFC), etc. Network <b>114</b> can comprise a mixture of private and public networks or one or more local area networks (LANs) and wide-area networks (WANs) that may be implemented by various technologies and standards.</p><p id="p-0037" num="0036">Email customization server <b>101</b> can comprise a number of modules or units to implement functions of the present subject matter. According to some embodiments, Email customization server <b>101</b> can implement functions related to network interface <b>118</b>, section management <b>120</b>, data population <b>122</b>, dynamic component <b>124</b>, and data retrieving <b>126</b>.</p><p id="p-0038" num="0037">The email customization server <b>101</b> can enable repeating the content of a section or a block, for each entry in a dynamic data entries, i.e., array, from a custom database. The system user <b>106</b> can compile an Email template that is stored and retrieved from relational database <b>113</b>. The template can comprise a section that needs to repeat its style. To achieve that, section management <b>120</b> can assign an array or a list of data to a dynamic component of the section. An array can store multiple pieces of data that are structured the same way in a custom database. The custom databases can comprise a recipient's event database, a customer profile database, a business's product database, or a business's web data feed.</p><p id="p-0039" num="0038">According to some embodiments, a customer event includes an action the recipient has taken to engage with a business. For at least some embodiments, actions the recipient has taken include one or more of product viewed by the recipient, products purchased by the recipient, onsite action of the recipient, and emails received by the recipient. Such event data can include date/time email was sent and received, the specific email that was received, whether the recipient engaged with the email, etc.</p><p id="p-0040" num="0039">For example, a customer's purchased products can be stored as an array within a Placed Order event in an event database. The items array can contain one entry per item ordered, and each entry contains the details for one item, e.g., item name, image URL, quantity, size, color, etc. The iterated sections, as generated, can share the same design style but each contains different product details, such as item name and image URL. For example, these iterated sections can be included in an order confirmation email to display a customer's purchased item, including a product's image, price, title and variant information.</p><p id="p-0041" num="0040">Other exemplary dynamic iteration of a section can show a customer a list of their active subscriptions in a campaign, which can be generated based on the array of existing subscriptions. Also, it can provide an up-to-date list of a business's most recent blog posts based on the array of recent blog entries from a custom web feed. The dynamic section iteration can be based on any data array stored in a custom database such as a customer's profile database, an event database, or one of the business's web feeds.</p><p id="p-0042" num="0041">To assign a specific data array, the system can prompt the system user <b>106</b> to identify the designated data array as dynamic component <b>124</b>. For example, once the system user <b>106</b> selected a section for repeat, the system can prompt the user to identify the data array for iteration via a &#x201c;Repeat For&#x201d; filed. In this example of listing a customer's purchased item, the appropriate setting for the Repeat For field can be &#x201c;event.extra.line_items&#x201d;.</p><p id="p-0043" num="0042">In addition, the system user <b>106</b> can further add dynamic variables to the content block for iteration. For example, &#x201c;item.variant_price&#x201d; and &#x201c;item.title&#x201d; can be added to enable repeating the block once per item in the array, wherein each repetition can show the title and price of each purchased product.</p><p id="p-0044" num="0043">Upon receiving a request to repeat the sections, the system can retrieve the data entries via data retrieving <b>126</b> according to the identified data path and generate corresponding iterated sections via data population <b>122</b>. As such, everything in the block or section with the iterated sections shall be repeated once per item in the designated array.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an exemplary process <b>200</b> for dynamic section iteration within a template, according to one or more embodiments of the present subject matter. The section <b>210</b> for iteration can be generated based on data array <b>202</b>. For example, data array <b>202</b> can contain one entry per item ordered, such as first product <b>204</b>, second product <b>206</b>, and third product <b>208</b>. Each entry contains the details for one product, e.g., item name, image URL, quantity, size, color, as represented by the square, triangle, and circle data pieces. Based on the data array <b>202</b>, section <b>210</b> can comprise first data placeholder <b>212</b>, second data placeholder <b>214</b>, and third data placeholder <b>216</b> corresponding to each data piece within an entry.</p><p id="p-0046" num="0045">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the iterated sections <b>218</b> can be generated based on the content and number of the entries in data array <b>202</b>. For example, the design style of the repeated sections <b>220</b>, <b>222</b> and <b>224</b> can remain the same. The content of each repeated sections <b>220</b>, <b>222</b> and <b>224</b> can be different and correspond to the details of first product <b>204</b>, second product <b>206</b> and third product <b>206</b>. Furthermore, the system can generate three iterated sections because there are three entries in data array <b>202</b>.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an exemplary layout of a customized template <b>301</b> with iterated sections or grouped components, according to one or more embodiments of the present subject matter. The Email customization system can use the section iteration feature to generate customized template <b>301</b>. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, body <b>302</b> can comprise iterated sections <b>304</b>, <b>306</b> and <b>308</b>, each of which is generated based on one data entry in a designated array stored in a custom database, e.g., a Placed Order event in an event database. For example, iterated section <b>304</b> can comprise text block <b>310</b> to describe a first product name, and image block <b>312</b> to show a first product's image; iterated section <b>306</b> can comprise text block <b>315</b> to describe a second product name, and image block <b>318</b> to show a second product's image; iterated section <b>308</b> can comprise text block <b>320</b> to describe a third product name, and image block <b>322</b> to show a third product's image. In addition to these dynamic components, each of the iterated sections <b>304</b>, <b>306</b> and <b>308</b> can also include an identical image block <b>314</b>, which corresponds to a static component. In addition, the overall style of the iterated sections <b>304</b>, <b>306</b> and <b>308</b> can remain the same.</p><p id="p-0048" num="0047">As such, the system can improve computer and network efficiency by eliminating duplicating and modifying each section individually. By dynamically populating iterated sections based on the designated data, the system can improve the efficiency in creating customized template <b>301</b>. Furthermore, the system can optimize the email customization process to create personalized emails that match the customer's interests as well as the business's goals</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows exemplary hierarchical components of a template <b>400</b>. A template can be stored in a relational database via normalized and related data components, such as body, sections, rows, columns, blocks and sub-blocks. The template data can be normalized and nested tables comprising components/blocks, settings/content, and position information for the template.</p><p id="p-0050" num="0049">When being rendered as an email, relevant data of the template can be converted into a computer-compiled HTML web page showing the embedded components, such as sections and blocks. According to some embodiments, a component is a pre-defined structure that can be represented in both the relational database and in the email editor, and which can be rendered into HTML and configured by its display settings and sub-components as well as its content. According to some embodiments, the template data can be rendered as an email template in the JSON data structure that can be configured or modified by a computing device or a client device.</p><p id="p-0051" num="0050">As illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the template <b>400</b> can comprise hierarchical components or blocks in a relational database. For example, a first-level component can be a body, which can comprise sections as second-level components. Sections can further comprise rows as third-level components. Furthermore, rows can comprise columns as a fourth-level component. Columns can comprise blocks as fifth-level components, which can further comprise subblocks as sixth-level components. At each level, one or more components can depend on the previous-level component(s).</p><p id="p-0052" num="0051">According to some embodiments, the relational database can be a MySQL database or any relational database. Each component of the template can correspond to one or more related tables, which define the structure and content of the component, as well as its relationship with other components.</p><p id="p-0053" num="0052">According to some embodiments, the iterated grouped components can be sections or blocks. According to some embodiments, the iterated grouped components can also be bodies, rows and columns.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> shows an exemplary anatomy of a template <b>500</b> and <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> shows the template stored in a relational database. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, template <b>500</b> can comprise a number of components or blocks, including a body <b>001</b> that further comprises a section <b>001</b> and a section <b>002</b>. Section <b>002</b> can comprise a row <b>001</b> and a row <b>002</b>. Row <b>001</b> can further comprise a column <b>001</b> and a column <b>002</b>, which comprise four blocks <b>003</b>, <b>002</b>, <b>001</b> and <b>004</b>, respectively.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is the relational database of the template <b>500</b> as shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>. As shown in this figure, the relational database of the template <b>500</b> can comprise a number of related normalized data tables, including body table, section table, row table, column table and block table. For example, body table has an ID <b>001</b> and its corresponding settings, which can define the color, size, font, and content of the body. Body table can be related to section table that can comprise section <b>001</b> and section <b>002</b>. Each of these sections can have its respective settings and position within body <b>001</b>, i.e., position <b>0</b> and position <b>1</b>. Similarly, section <b>002</b> can comprise row <b>001</b> and row <b>002</b>, each of which has its respective settings and positions within section <b>002</b>. Row <b>001</b> can comprise columns <b>001</b> and <b>002</b> with its respective settings and positions within the row. In addition, column <b>002</b> can comprise four individual blocks <b>001</b>, <b>002</b>, <b>003</b> and <b>004</b>, which are located in its corresponding position <b>2</b>, <b>1</b>, <b>0</b> and <b>3</b>.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an exemplary process <b>600</b> for dynamic section iteration within a template, according to one or more embodiments of the present subject matter. At step <b>602</b>, the system can receive a template comprising a section, wherein the section comprises one or more components in a relational database. At step <b>604</b>, the system can assign a plurality of dynamic data entries to be associated with a dynamic component of the one or more components. At step <b>606</b>, the system can retrieve the plurality of dynamic data entries from one or more custom databases for populating the dynamic component. At step <b>608</b>, the system can receive a request to repeat the section within the template. At step <b>610</b>, the system can generate iterated sections based on the plurality of dynamic data entries within the template, wherein each dynamic data entry corresponds to a respective iterated section.</p><p id="p-0057" num="0056">The following described embodiments include systems, methods, and apparatuses for email customization. Generally, email recipients receive many emails a day. Therefore, businesses that send email need to capture the attention of the email recipients. A recipient is more likely to engage with the content of received emails if the content is relevant to the recipient. Relevant content can be generated by understanding and tracking how the email recipient engages with branding of the businesses, including determining interests of the email recipient, and determining what specific content the email recipient has engaged with in the past, such as, through a marketing message or through interaction with a website of the business.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart that includes steps of a method of email customization, according to an embodiment. A first step <b>710</b> includes providing, by a server, a user with a list of base templates of the user, wherein each of the templates includes a set of data objects that combine to represent a structure of an email. A second step <b>720</b> includes displaying, by the server, a template editor to the user, the template editor allowing the user to customize a base template selected from the list of templates. For an embodiment, the template editor is configured to perform a third step <b>730</b> including displaying a plurality of template blocks, a fourth step <b>740</b> including allowing the user to drag and drop selected template blocks from the plurality of template blocks to a template editor canvas for generating a customized template, wherein the customized template is a customer specific template that includes dynamic data that corresponds to recipient-specific information at send-time of the customized email, and a fifth step <b>750</b> that includes generating a customized email represented by data objects of the customized template.</p><p id="p-0059" num="0058">For an embodiment, the user modifies the base template by adding or removing blocks in order to create the layout and content of the email message the user wants to send to their recipients (wherein the recipient may be customers of the user). For an embodiment, the layout and content of the email of the customized template may be tailored to the individual recipient using dynamic data. The email sent and received by the customer is rendered according to the blocks and content as designed in the editor by the user.</p><p id="p-0060" num="0059">For an embodiment, the recipient-specific information includes profile properties of the recipient including at least one of name, address. organization name, organization address, age, and/or language.</p><p id="p-0061" num="0060">Dynamic Data</p><p id="p-0062" num="0061">As previously stated, for an embodiment, the customized template is a customer specific template that includes dynamic data that corresponds to recipient-specific information at send-time of the customized email. For an embodiment, using a templating language, e.g., Django, or other methods, the user can specify tags, variables, or other programmatic tools or user interfaces which point to profile properties or event data (actions the recipient took in relation to a previous email message or actions the recipient took on the user's website which has been linked to the email customization system, e.g., Klaviyo, via a Javascript snippet that is embedded on their website) attached to recipient's record within the email customization system. This allows the user to inject this data into their customized template such that when the recipient (customer) receives the email, the message will include data that is individualized and customized to the recipient's experience with the user's brand or company.</p><p id="p-0063" num="0062">For at least some embodiments, the template editor is further configured to receive one or more customer events, and customize the customer specific template, and the customized email based on data obtained from the customer events.</p><p id="p-0064" num="0063">For an embodiment, a customer event includes an action the recipient has taken to engage with a brand/organization of the user. For at least some embodiments, actions the recipient has taken includes one or more of product viewed by the recipient (product information such as pricing, instock status, etc.), product purchased by the recipient (includes product information such as pricing, in-stock status, etc.), onsite action of the recipient (recipient has visited the user's website), emails received by the recipient (recipient has received a previous email from the user; data includes date/time email was sent and received, the specific email that was received, whether the recipient engaged with the email, etc.), and/or engagement by the recipient with an email (email opened, or link within the email clicked).</p><p id="p-0065" num="0064">For an embodiment, the customer event includes a full event (imagine a piece of data that occurs at a certain point in time, for example, when someone (recipient or customer) looks at a product or purchases something) details in the customized email of the customized template.</p><p id="p-0066" num="0065">For at least some embodiments, a customer event includes one or more of the customer active on a website, a bounced email, a cancelled order, a clicked email, a clicked SMS, a consented to receive SMS, a created work order, a dropped email, a failed to deliver SMS, a fulfilled order, a marked email as spam, an opened email, an ordered product, a placed order, a received email, a received SMS, a refunded order, a sent SMS, a started checkout, a subscribed to back in stock, a subscriber list, the customer unsubscribed, the customer unsubscribed from SMS, an updated email preference, and/or a viewed product.</p><p id="p-0067" num="0066">For an embodiment, a customer event is determined through customer tracking. For an embodiment, the customer tracking includes injecting a tracking pixel on an email that is sent to a customer, and detecting by the tracking pixel when the email is opened.</p><p id="p-0068" num="0067">For an embodiment, the customer tracking includes the system operating to append additional parameters onto a URL in an email sent to the customer, and operating to identify and &#x201c;cookie&#x201d; the customer when the customer clicks on a link within the email, thereby allowing tracking of the customer selecting the link.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow chart that includes steps of a method of template serialization for pre-rendering and versioning, according to another embodiment. A first step <b>810</b> includes the user's customer opting into a subscription list, thereby allowing for customization of emails for the customer that include the dynamic data. A second step <b>820</b> includes the email customization system identifying the customer, and &#x201c;cookies&#x201d; the customer and the user's website. A third step <b>830</b> includes the email customization system making profile and event data available.</p><p id="p-0070" num="0069">HTTP cookies (also called web cookies, Internet cookies, browser cookies, or simply cookies) are small blocks of data created by a web server while a user is browsing a website and placed on the user's computer or other device by the user's web browser. Cookies are placed on the device used to access a website, and more than one cookie may be placed on a user's device during a session.</p><p id="p-0071" num="0070">In parallel, a fourth step <b>840</b> includes establishing a database that includes a library of base templates. A fifth step <b>850</b> includes the user selecting templates from the library of templates for generating the customized template. A sixth step <b>860</b> includes the user customizing selected base templates to create the customized template using the template editor canvas.</p><p id="p-0072" num="0071">A seventh step <b>870</b> further includes the user selecting to add dynamic data to the customized template. If dynamic data is to be used or added to the customize template, then steps <b>890</b>, <b>892</b>, <b>896</b> all include recipient actions that are identified and collected for generating the dynamic data. The step <b>890</b> includes the recipient receiving the email generated by the customized template. For an embodiment, the action of the recipient receiving the email is fed back to step <b>830</b> as dynamic data that can be utilized in the generation of the customized emails. The step <b>892</b> includes the recipient opening the received email. For an embodiment, the action of the recipient opening the email is fed back to step <b>830</b> as dynamic data that can be utilized in the generation of the customized emails. The step <b>896</b> includes the recipient clicking or selecting a link included within the email. For an embodiment, the action of the recipient clicking or selecting the link included within the email is fed back to step <b>830</b> as dynamic data that can be utilized in the generation of the customized emails.</p><p id="p-0073" num="0072">Step <b>880</b> includes the user not utilizing the dynamic data for the customized template. Steps <b>894</b>, <b>898</b> include the recipient not opening the email or selecting the link included within the email.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a system that operates to perform email customization, according to an embodiment. For an embodiment, <figref idref="DRAWINGS">FIG. <b>9</b></figref> represents the beginning steps of a user client machine <b>910</b> working with a customized template within an email template editor <b>920</b> where the email template editor loads the selected customized template from the database <b>970</b> and enables the user to make and save changes to the selected customized template which are saved back to the database <b>970</b>. The database <b>970</b> serves to power an email renderer <b>930</b> where the email renderer <b>930</b> is triggered by a messaging system <b>940</b> to generate HTML, output which then is sent back to the user client machine <b>910</b> into an email inbox. When the email renderer <b>930</b> is complete it notifies the messaging system <b>940</b> that the email has been rendered.</p><p id="p-0075" num="0074">Although specific embodiments have been described and illustrated, the embodiments are not to be limited to the specific forms or arrangements of parts so described and illustrated. The embodiments are limited only by the appended claims.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> shows a server system of rack-mounted blades for implementing the present subject matter. Various examples are implemented with cloud servers, such as ones implemented by data centers with rack-mounted server blades. <figref idref="DRAWINGS">FIG. <b>10</b>A</figref> shows a rack-mounted server blade multi-processor server system <b>1011</b>. Server system <b>1011</b> comprises a multiplicity of network-connected computer processors that run software in parallel.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>10</b>B</figref> shows a diagram of a server system <b>1011</b>. It comprises a multicore cluster of computer processors (CPU) <b>1012</b> and a multicore cluster of the graphics processors (GPU) <b>1013</b>. The processors connect through a board-level interconnect <b>1014</b> to random-access memory (RAM) devices <b>1015</b> for program code and data storage. Server system <b>1011</b> also comprises a network interface <b>1016</b> to allow the processors to access the Internet, non-volatile storage, and input/output interfaces. By executing instructions stored in RAM devices <b>1015</b>, the CPUs <b>1012</b> and GPUs <b>1013</b> perform steps of methods described herein.</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>11</b>A</figref> shows the bottom side of a packaged system-on-chip device <b>1131</b> with a ball grid array for surface-mount soldering to a printed circuit board. Various package shapes and sizes are possible for various chip implementations. System-on-chip (SoC) devices control many embedded systems, IoT device, mobile, portable, and wireless implementations.</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>11</b>B</figref> shows a block diagram of the system-on-chip <b>1131</b>. It comprises a multicore cluster of computer processor (CPU) cores <b>1032</b> and a multicore cluster of graphics processor (GPU) cores <b>1033</b>. The processors connect through a network-on-chip <b>1134</b> to an off-chip dynamic random access memory (DRAM) interface <b>1135</b> for volatile program and data storage and a Flash interface <b>1136</b> for non-volatile storage of computer program code in a Flash RAM non-transitory computer readable medium. SoC <b>1131</b> also has a display interface for displaying a graphical user interface (GUI) and an I/O interface module <b>1137</b> for connecting to various I/O interface devices, as needed for different peripheral devices. The I/O interface enables sensors such as touch screen sensors, geolocation receivers, microphones, speakers, Bluetooth peripherals, and USB devices, such as keyboards and mice, among others. SoC <b>1031</b> also comprises a network interface <b>1138</b> to allow the processors to access the Internet through wired or wireless connections such as WiFi, 3G, 4G long-term evolution (LTE), 5G, and other wireless interface standard radios as well as Ethernet connection hardware. By executing instructions stored in RAM devices through interface <b>1135</b> or Flash devices through interface <b>1136</b>, the CPU cores <b>1132</b> and GPU cores <b>1133</b> perform functionality as described herein.</p><p id="p-0080" num="0079">Examples shown and described use certain spoken languages. Various embodiments work, similarly, for other languages or combinations of languages. Examples shown and described use certain domains of knowledge and capabilities. Various systems work similarly for other domains or combinations of domains.</p><p id="p-0081" num="0080">Some systems are screenless, such as an earpiece, which has no display screen. Some systems are stationary, such as a vending machine. Some systems are mobile, such as an automobile. Some systems are portable, such as a mobile phone. Some systems are for implanting in a human body. Some systems comprise manual interfaces such as keyboards or touchscreens.</p><p id="p-0082" num="0081">Some systems function by running software on general-purpose programmable processors (CPUs) such as ones with ARM or x86 architectures. Some power-sensitive systems and some systems that require especially high performance, such as ones for neural network algorithms, use hardware optimizations. Some systems use dedicated hardware blocks burned into field-programmable gate arrays (FPGAs). Some systems use arrays of graphics processing units (GPUs). Some systems use application-specific-integrated circuits (ASICs) with customized logic to give higher performance.</p><p id="p-0083" num="0082">Some physical machines described and claimed herein are programmable in many variables, combinations of which provide essentially an infinite variety of operating behaviors. Some systems herein are configured by software tools that offer many parameters, combinations of which support essentially an infinite variety of machine embodiments.</p><p id="p-0084" num="0083">Several aspects of implementations and their applications are described. However, various implementations of the present subject matter provide numerous features including, complementing, supplementing, and/or replacing the features described above. In addition, the foregoing description, for purposes of explanation, used specific nomenclature to provide a thorough understanding of the embodiments of the invention. However, it will be apparent to one skilled in the art that the specific details are not required in order to practice the embodiments of the invention.</p><p id="p-0085" num="0084">It is to be understood that even though numerous characteristics and advantages of various embodiments of the present invention have been set forth in the foregoing description, together with details of the structure and function of various embodiments of the invention, this disclosure is illustrative only. In some cases, certain subassemblies are only described in detail with one such embodiment. Nevertheless, it is recognized and intended that such subassemblies may be used in other embodiments of the invention. Practitioners skilled in the art will recognize many modifications and variations. Changes may be made in detail, especially matters of structure and management of parts within the principles of the embodiments of the present invention to the full extent indicated by the broad general meaning of the terms in which the appended claims are expressed.</p><p id="p-0086" num="0085">Having disclosed exemplary embodiments and the best mode, modifications and variations may be made to the disclosed embodiments while remaining within the scope of the embodiments of the invention as defined by the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method of iterating a section, the method comprising:<claim-text>receiving, at an email customization server, a template comprising a section, wherein the section comprises one or more components in a relational database;</claim-text><claim-text>assigning a plurality of dynamic data entries to be associated with a dynamic component of the one or more components;</claim-text><claim-text>retrieving the plurality of dynamic data entries from one or more custom databases for populating the dynamic component; and</claim-text><claim-text>generating iterated sections based on the plurality of dynamic data entries within the template, wherein each dynamic data entry corresponds to a respective iterated section, and wherein each dynamic data entry is configured to populate one dynamic component in one respective iterated section.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving a request to repeat the section within the template based on the plurality of dynamic data entries.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least one of the one or more components remain identical in the iterated sections.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the at least one of the one or more components is configured to render identical features of the iterated sections.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein plurality of dynamic data entries comprises an array that stores multiple pieces of data that are structured in a same way.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more custom databases comprise at least one of an event database, a customer profile database and a product database.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more components are hierarchical components.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the number of the iterated sections corresponds to the quantity of the dynamic data entries.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A computer-implemented method, the method comprising:<claim-text>receiving, at an email customization server, a template comprising grouped components, wherein the grouped components comprise one or more components in a relational database,</claim-text><claim-text>assigning a plurality of dynamic data entries to be associated with a dynamic component of the one or more components;</claim-text><claim-text>retrieving the plurality of dynamic data entries from one or more custom databases for populating the dynamic component; and</claim-text><claim-text>generating iterated grouped components based on the plurality of dynamic data entries within the template, wherein each dynamic data entry corresponds to a respective iterated grouped components, and wherein each dynamic data entry is configured to populate one dynamic component in one respective grouped components.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>receiving a request to repeat the grouped components within the template based on the plurality of dynamic data entries.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein at least one of the one or more components remain identical in the iterated grouped components.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the at least one of the one or more components is configured to render identical features of the iterated grouped components.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein plurality of dynamic data entries comprises an array that stores multiple pieces of data that are structured in a same way.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the one or more custom databases comprise at least one of an event database, a customer profile database and a product database.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the one or more components are hierarchical components.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the number of the iterated grouped components corresponds to the quantity of the dynamic data entries.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A computer-implemented method of iterating a section, the method comprises:<claim-text>receiving, at a client device, a template comprising a section, wherein the section comprises one or more components in a relational database;</claim-text><claim-text>assigning a plurality of dynamic data entries to be associated with a dynamic component of the one or more components;</claim-text><claim-text>retrieving the plurality of dynamic data entries from one or more custom databases for populating the dynamic component; and</claim-text><claim-text>generating iterated sections based on the plurality of dynamic data entries within the template, wherein each dynamic data entry corresponds to a respective iterated section, and wherein each dynamic data entry is configured to populate one dynamic component in one respective iterated section.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-implemented method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:<claim-text>receiving a request to repeat the section within the template based on the plurality of dynamic data entries.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-implemented method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the one or more custom databases comprise at least one of an event database, a customer profile database and a product database.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-implemented method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the number of the iterated sections corresponds to the quantity of the dynamic data entries.</claim-text></claim></claims></us-patent-application>