<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007012A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007012</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17823724</doc-number><date>20220831</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>145</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>105</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1425</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1416</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DETECTING ATTACKS AND QUARANTINING MALWARE INFECTED DEVICES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16718909</doc-number><date>20191218</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11483339</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17823724</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62941592</doc-number><date>20191127</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Pulse Secure, LLC</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Kaimal</last-name><first-name>Biju</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Shravan</last-name><first-name>Bandam Radha</first-name><address><city>Telangana</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Rajendran</last-name><first-name>Thiyagu</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Kahn</last-name><first-name>Clifford E.</first-name><address><city>Westford</city><state>MA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Pulse Secure, LLC</orgname><role>02</role><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Attacks on a network device, e.g. an IoT device, are detected by analyzing network traffic and subsequently quarantining or blocking the network device on the network to prevent lateral movement of malware. The techniques described herein relate to developing a baseline of network device activity corresponding with a network device during a learning period and comparing the baseline of network device activity with new network activity by the network device in order to identify potentially unusual network device activity by the network device. If unusual network activity is found, remedial actions such as quarantining the network device or restricting some access to a network may be initiated.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="109.30mm" wi="158.75mm" file="US20230007012A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="248.33mm" wi="171.87mm" orientation="landscape" file="US20230007012A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="247.82mm" wi="178.39mm" orientation="landscape" file="US20230007012A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="247.90mm" wi="184.74mm" orientation="landscape" file="US20230007012A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="246.38mm" wi="157.99mm" file="US20230007012A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="241.13mm" wi="122.94mm" file="US20230007012A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims the benefit of and priority to U.S. Prov. Pat. No. 62/941,592, filed Nov. 27, 2019, and U.S. patent application Ser. No. 16/718,909, filed Dec. 18, 2019. This application incorporates the disclosures of these applications by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">The disclosure relates to computer networks.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Network devices including Internet of Things (IoT) devices can be infected by malware or have Media Access Control (MAC) spoofing attacks performed against them. The lack of the security countermeasures on some network devices make them attractive vectors of infiltration into an enterprise network. Two common attack vectors that may be detected and acted upon are MAC spoofing and IoT malware. MAC spoofing occurs when the MAC address of a network service is spoofed on an attacker's computer. The network device may have been previously authenticated on the network using MAC authentication. The attacker can then replace the network device with, e.g., their laptop and gain unauthorized access to the network and use it as a launch pad for further incursions into the network. Malware on IoT devices is also becoming more common. Once the malware is on an IoT device, it can make network connections based on what the malware attacker instructs it to do.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">In general, the disclosure describes a method for detection of an attack on a network device (e.g., an IoT device) by analyzing network traffic and subsequently quarantining or blocking the network device on the network to prevent lateral movement of malware. The techniques described herein relate to systems, software, and methods for developing a baseline of network device activity corresponding with a network device during a learning period and comparing the baseline of network device activity with new network activity by the network device in order to identify potentially unusual network device activity by the network device. If unusual network activity is found, remedial actions such as quarantining the network device or restricting some access to a network may be initiated.</p><p id="p-0006" num="0005">The techniques described herein can provide advantages over conventional systems. For example, the techniques can provide a technical solution to the technical problems posed by malware software by reducing or eliminating the impact that a malware-infected device, such as an IoT device, can have on a network. The techniques described herein have practical applications. For example, the techniques can be applied to network monitoring applications that monitor the network activity of network devices that have been discovered on a network. As an example of a further practical application, the techniques described herein can used in network policy management applications and network policy agents that establish and enforce network policies applicable to newly discovered network devices. As an additional example of a practical application, the techniques described herein can be utilized in anti-malware applications that monitor the network activity of network devices, and analyze the network traffic and subsequently quarantine or block the device on the network when unexpected network activity is detected.</p><p id="p-0007" num="0006">In one example, a method includes receiving, from a first device on a network, incoming network traffic; comparing a network traffic baseline associated with the first device with the incoming network traffic; determining, based on the comparing, an anomaly type associated with the incoming network traffic; and changing access to the network by the first device according to an access restriction selected from a set of access restrictions, the access restriction corresponding to the anomaly type.</p><p id="p-0008" num="0007">In another example, a system includes one or more processors; a data collector executable by the one or more processors to receive, from a first device on a network, incoming network traffic; and a traffic analyzer executable by the one or more processors to: receive, from the data collector, the incoming network traffic; compare a network traffic baseline associated with the first device with the incoming network traffic; determine, based on the comparing, an anomaly type associated with the incoming network traffic; and change access to the network by the first device according to an access restriction selected from a set of access restrictions, the access restriction corresponding to the anomaly type.</p><p id="p-0009" num="0008">In another example, a computer-readable medium includes instructions for causing one or more processors to: receive, from a first device on a network, incoming network traffic; compare a network traffic baseline associated with the first device with the incoming network traffic; determine, based on the comparison, an anomaly type associated with the incoming network traffic; and change access to the network by the first device according to an access restriction selected from a set of access restrictions, the access restriction corresponding to the anomaly type.</p><p id="p-0010" num="0009">The details of one or more examples are set forth in the accompanying drawings and the description below. Other features, objects, and advantages will be apparent from the description and drawings, and from the claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0011" num="0010">Embodiments of the disclosure may be better understood by referencing the accompanying drawings.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an example system configured to detect attacks and quarantining malware-infected devices, according to techniques described herein.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a sequence diagram of an example workflow illustrating operations for collecting, processing and analyzing data corresponding with network device activity associated with a Domain Name System (DNS), according to techniques described herein.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts a sequence diagram of an example workflow illustrating operations for detecting false positive anomalies and allowing a quarantined network device to renew its access to the network, according to techniques described herein.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. <b>4</b>A and <b>4</b>B</figref> are flowcharts illustrating example operations of a method for quarantining a network device that is exhibiting anomalous network behavior.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0016" num="0015">In general, this disclosure describes a method for detection of attacks on a network device, e.g. an IoT device, by analyzing network traffic and subsequently quarantining or blocking the network device on the network to prevent lateral movement. In some aspects, attack vectors that are detected and acted upon include, among others, MAC spoofing and IoT malware. As described above, MAC spoofing occurs when the MAC address of a network service is spoofed on an attacker's computer. The network device may have previously authenticated on the network using MAC authentication. The attacker can replace the network device with their computing device (e.g., a laptop) and gain unauthorized access to the network and use it as a launch pad for further incursions into the network. IoT malware can establish network connections to other devices on a network based on what the malware attacker instructs the malware to do.</p><p id="p-0017" num="0016">Existing methods for identifying MAC spoofing and/or malware attacks depend on active scanning techniques, like network messaging application protocol (nmap), to detect attacks such as MAC spoofing and use rule-based logic to detect network traffic that is non-compliant with the device. A technical problem with active scanning is that it can be defeated when an attacker uses a personal firewall on the attacking device to prevent the attacking device from being scanned. A technical problem with rules-based logic is that it does not account for changes in behavior of devices over time.</p><p id="p-0018" num="0017">In some examples, a computing system using the techniques described herein may detect that an IoT device (e.g., network device <b>108</b>) may be under attack by creating a baseline of the device network data traffic activity during a learning period and comparing subsequent network data traffic against the baseline of the device network data traffic after the learning period. The learning period may be long enough to capture a representative network data traffic pattern of the device being monitored and determine a normal traffic pattern for the device. The normal traffic pattern can include network data traffic patterns for network traffic data that is incoming to and outgoing from the device being monitored and may also include the source domain name, IP address or other identifier of the incoming network data traffic and the destination domain name, IP address or other identifier of the outgoing network data traffic. An example learning period may be, e.g. seven to thirty days, although in some aspects, this can be configured to be shorter or longer depending upon the device.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example system <b>100</b> detecting attacks and quarantining malware infected devices according to aspects of the disclosure. In some aspects, system <b>100</b> may include data collectors <b>110</b> such as a DNS collector <b>112</b> or a NetFlow connector <b>114</b>, that collect data from one or more network devices <b>108</b>. In some aspects, the network devices <b>108</b> can include IoT devices such as cameras, printers, VoIP phones, sensors, actuators etc. IoT devices typically have limited processor and memory resources. As a result, an IoT device may not be able to implement a robust authentication scheme and thus may be more susceptible to a MAC spoofing attack. Further, the limited resources of an IoT device may prevent the device from running anti-malware software and are thus vulnerable to malware attacks.</p><p id="p-0020" num="0019">System <b>100</b> can further include a data broker <b>102</b>, a data store <b>122</b>, and data analyzers <b>130</b> that may include streaming analyzer <b>132</b> and batch analyzer <b>134</b>. In some aspects, data collector <b>110</b> can be a network appliance operated by a network security service provider. An example of such a network appliance is the Pulse Secure Appliance series of network appliances.</p><p id="p-0021" num="0020">A plurality of data collectors <b>110</b> can be employed to collect data by interacting with external entities such as network switches, wireless network access points, network gateways, routers and various network appliances such as DNS server <b>104</b>, authentication and authorization servers, or the like. The data collectors <b>110</b> may include software and hardware modules deployed by a network security service provider, e.g. deployed in private network connection devices <b>106</b>A-<b>106</b>B (collectively, connection devices <b>106</b>), such as network gateways, wireless network access points, network switches, routers or firewalls, or the like. In some examples, system <b>100</b> may collect data corresponding with domain name requests from a relevant DNS server <b>104</b>. Additionally, network traffic flow data may be collected from the same network connection devices <b>108</b>, e.g., private network gateways, wireless network access points, network switches, routers or firewalls, or the like. For example, a Netflow collector <b>114</b> may collect Netflow traffic data. Other data can also be collected by additional data collectors <b>110</b> when such data can provide useful information. For example, network traffic flow data from JFlow, sFlow and other network traffic analysis systems may be collected and used by system <b>100</b>.</p><p id="p-0022" num="0021">System <b>100</b> can include data broker <b>102</b> to manage data flow through the system <b>100</b>. The data broker <b>102</b> can comprise a central router or server configured to receive relevant network data traffic metadata from one or more data collectors <b>110</b> and from one or more enrichment sources <b>116</b>. As an example, an enrichment sources <b>116</b> can provide metadata related to network data traffic of similar network device types, device classes, devices having similar operating systems, a same manufacturer, or the like. As an example, device profiler <b>150</b> can analyze network traffic and determine metadata regarding a device. The metadata can include the device type (camera, VoIP phone, printer etc.), device class (video, audio, appliance etc.), the manufacturer of the device, an operating system for the device, and software versions of software executing on the device. After receiving data from the data collectors <b>110</b>, the data broker <b>102</b> may modify or supplant the incoming data, e.g. by adding or modifying the collected data in a manner that makes the data easier to analyze or that increases the likelihood that the analysis will provide meaningful results.</p><p id="p-0023" num="0022">In some examples, computing system <b>100</b> may establish or otherwise include a data store <b>122</b> to store collected data for recall, e.g., to store data corresponding with the baseline <b>146</b> (also referred to as network activity baseline) of device network data traffic activity during a learning period for a plurality of different network devices <b>108</b>, device types, or the like. Additionally, the data from the data store <b>122</b> can be accessed by network security administrators and used to develop and implement network security policies <b>148</b> corresponding with the network devices <b>108</b> that have a baseline of device network data traffic activity during a learning period. Further, data from the data store <b>122</b> can be accessed by analytical resources, e.g. to compare subsequently monitored data of a network device <b>108</b> with the baseline <b>146</b> of device network data traffic activity during a learning period for the same network device, or device type in order to determine if a suspected anomaly in network data flow is of concern, or is a false positive anomaly detection. In addition, the data store <b>122</b> may be configured to roll over or discard collected data when warranted, e.g., after a time to live limit, after the monitoring processes has ended, or, e.g., when network policies for network device <b>108</b> or device type being monitored are employed that eliminate the need for further monitoring.</p><p id="p-0024" num="0023">Data analyzers <b>130</b> are responsible for running algorithms on the incoming data to determine patterns of deviation that can be used to detect anomalies in behavior of the device <b>108</b>. In some aspects, data analyzes <b>130</b> include two types of analytic jobs that can be run on the data. A streaming analyzer <b>132</b> can operate on a stream of data after it is collected and optionally enriched by the broker <b>102</b>. A batch analyzer <b>134</b> can operate on the data that has been stored in the data store <b>122</b> and may be run periodically. For example, the batch analyzer <b>132</b> can generate aggregations on the data. A jobs scheduler <b>136</b> can be used to schedule runs of a batch analyzer <b>134</b>.</p><p id="p-0025" num="0024">In some aspects, data analyzers <b>130</b> can analyze the incoming data with respect to a predetermined set of features such as domain names, IP addresses, port, packet rates, data rates etc. In some aspects, the data analyzers can employ a machine learning engine <b>152</b> that can be trained during a learning period to learn appropriate features of network data that can be used to indicate malware or MAC spoofing. The features learned during the learning period can then be used by the machine learning engine <b>152</b> to make anomaly predictions on new incoming data received from network devices <b>108</b> to determine if the network devices have been infected with malware or have had their MAC addresses spoofed by an attacking device.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a sequence diagram of an example workflow illustrating operations for collecting, processing and analyzing data corresponding with network device activity associated with a DNS server <b>104</b> according to techniques described herein. The example illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows how the different sub-systems of system <b>100</b> can interact to perform analysis of DNS traffic to detect anomalies. In some aspects, DNS packets are forwarded by the network switch <b>106</b> over a Switched Port Analyzer (SPAN) port to the device profiler <b>150</b> and the DNS collector <b>110</b> (<b>202</b>). The device profiler can analyze the incoming data and determine a device profile for the device (<b>204</b>). For example, the device profile may include the type of device, the manufacturer of the device, the OS executed by the device, and software versions of software executing on the device. The DNS collector <b>110</b> parses the DNS traffic data (<b>205</b>) and serializes to JavaScript Object Notation (JSON) format and sends the parsed DNS traffic data to the data broker <b>102</b> (<b>206</b>).</p><p id="p-0027" num="0026">In some aspects, the data broker <b>102</b> can obtain the device profile from the device profiler <b>150</b> (<b>207</b>). In some aspects, the data broker <b>102</b> may enrich the parsed DNS data with data in the device profile or from other enrichment sources (<b>208</b>) and publish the enriched, parsed DNS data to the data store <b>122</b> (<b>210</b>). Further, the data broker <b>102</b> may send the enriched, parsed DNS data to a DNS data analyzer <b>232</b> (<b>212</b>).</p><p id="p-0028" num="0027">DNS analyzer <b>232</b> receives the JSON data, checks if device is in learning period, where the learning period can be the time when device was discovered plus a predetermined or configurable learning duration. If the network device <b>108</b> is in a learning period, the DNS analyzer <b>232</b> can update baseline <b>146</b> and return (<b>214</b>). However, the network device <b>108</b> is no longer in a learning period, the DNS analyzer <b>232</b> can check to determine if the domain name associated with the network traffic provided by the network device <b>108</b> appears in the baseline data <b>146</b> (<b>216</b>). If the domain name is in the baseline data <b>146</b>, then there is no anomaly. If the domain name is not in the baseline data, then the DNS analyzer <b>232</b> can generate an anomaly and store data regarding the anomaly in database <b>122</b> (<b>218</b>).</p><p id="p-0029" num="0028">If an anomaly is generated, the DNS analyzer <b>232</b> can update session attributes to indicate the anomaly (e.g., set an anomaly flag) and type of anomaly (<b>220</b>). In some aspects, a session can start when a device is first connected on the network, and last until the device is removed. The indication of an anomaly can cause a policy manager <b>144</b> to perform a role re-evaluation (<b>222</b>). The role re-evaluation may cause the endpoint (e.g., the network device <b>108</b>) to be placed in a remediation role. In some aspects, the remediation role can indicate that the network device's access to the network is altered in some way that may restrict the devices access to the network. In some aspects, the endpoint (e.g., network device or an attacking device) may be restricted to a remediation VLAN by reconfigured the endpoint with a different IP address with limited access.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts a sequence diagram of an example workflow illustrating operations for detecting false positive anomalies and allowing a quarantined network device to renew its access to the network according to techniques described herein. The example sequence illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> shows how the sub-systems interact to process network traffic data as follows. The initial operations in the sequence are the same or similar to the sequence of operations described with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In some aspects, DNS packets are forwarded by the network switch <b>106</b> over a SPAN port to the device profiler <b>150</b> and the DNS collector <b>110</b> (<b>202</b>). The device profiler can analyze the incoming data and determine a device profile for the device (<b>204</b>). For example, the device profile may include the type of device, the manufacturer of the device, the OS executed by the device, and software versions of software executing on the device. The DNS collector <b>110</b> parses the DNS traffic data (<b>205</b>) and serializes to JSON format and sends the parsed DNS traffic data to the data broker <b>102</b> (<b>206</b>).</p><p id="p-0031" num="0030">In some aspects, the data broker <b>102</b> can obtain the device profile from the device profiler <b>150</b> (<b>207</b>). In some aspects, the data broker <b>102</b> may enrich the parsed DNS data with data in the device profile or from other enrichment sources (<b>208</b>) and publish the enriched, parsed DNS data to the data store <b>122</b> (<b>210</b>).</p><p id="p-0032" num="0031">The data broker <b>102</b> may send the enriched, parsed DNS data to a traffic analyzer <b>330</b> (<b>312</b>). Network traffic analyzer <b>330</b> can be part of a set of one or more streaming analytics jobs <b>132</b> (<figref idref="DRAWINGS">FIG. <b>1</b></figref>). Network traffic analyzer <b>330</b> can receive the JSON data and check if the network device <b>108</b> is in learning period, which in some aspects, can the time when device was discovered plus a predetermined or configurable learning duration. If in the learning period, the network traffic analyzer <b>330</b> can update the baseline for the network device and return (<b>314</b>). If the network device is not in the learning period, the network traffic analyzer <b>330</b> can check if server address and port combination in is in the baseline data (<b>316</b>). In some aspects, if the server address and port combination is not in the baseline data, the network traffic analyzer can generate an anomaly and store the anomaly in data store <b>122</b> (<b>318</b>). In some aspects, the network traffic analyzer determines if the byte transfer rate (or packet rate) for a predetermined or configured time interval is within baseline limit (<b>320</b>). If the byte transfer rate for the configured time interval is within the baseline limit, then there is no anomaly. If byte transfer rate for the configured time interval is not within the baseline limit, the network traffic analyzer <b>330</b> can generate an anomaly and store data regarding the anomaly in database <b>122</b> (<b>322</b>).</p><p id="p-0033" num="0032">As is the case with the DNS analyzer <b>232</b> described in sequence diagram of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, when an anomaly is generated (operations <b>318</b>,<b>322</b>), the traffic analyzer <b>330</b> can update session attributes to indicate the anomaly (e.g., set an anomaly flag) and type of anomaly (<b>324</b>). The indication of an anomaly can cause a policy manager <b>144</b> to perform a role re-evaluation (<b>326</b>). The role re-evaluation may cause the endpoint (e.g., the network device <b>108</b> or spoofing attacker) to be placed in a remediation role. In some aspects, the remediation role can indicate that the network device's access to the network is altered in some way that may restrict the devices access to the network.</p><p id="p-0034" num="0033">Some anomalies that are detected by a data analyzer <b>110</b> such as DNS analyzer <b>232</b> and network traffic analyzer <b>330</b> may be false positives. In this case, the endpoint (e.g., network device) can be allowed to regain access back to the original network. For example, a system administrator can clear the anomaly associated with the device which can cause the session to be updated and the policy manager <b>144</b> to re-evaluate the roles. Once the endpoint role is reassigned, the network device can regain normal access back on the network.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIGS. <b>4</b>A and <b>4</b>B</figref> are flowcharts illustrating example operations of a method for quarantining a network device that is exhibiting anomalous network behavior. The operations illustrated in the flowcharts may be performed, for example, by a data analyzer <b>130</b> such as a DNS analyzer <b>232</b> or traffic analyzer <b>330</b> (e.g., a Netflow analyzer).</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a flowchart illustrating operations performed when a data analyzer receives a set network traffic (<b>402</b>). The data analyzer can determine the type of device, for example, using device profile data received from a device profiler (<b>404</b>). The analyzer can determine if the device providing the data is in a learning period (<b>406</b>). If the device is not in a learning period, then the operations of the flowchart of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> can be performed (&#x201c;NO&#x201d; branch of <b>406</b>).</p><p id="p-0037" num="0036">If the device is in a learning period (&#x201c;YES&#x201d; branch of <b>406</b>), then the analyzer can determine if a baseline has been established for the device, type of device, and/or class of device (<b>408</b>). If a baseline doesn't exist (&#x201c;NO&#x201d; branch of <b>408</b>), then a baseline is created for the device (<b>410</b>). In some aspects, the baseline may be created by determine a particular set of predetermined features from the set of incoming network traffic. For example, device type, domain names of source or destination devices communicating with the device of interest, packet rates, data rates, OS version, software version etc. may be used to create a baseline profile for the device. Similarly, a baseline profile for the device type or device class may be created using similar features.</p><p id="p-0038" num="0037">In some aspects, the features used to create a baseline profile can be determined using a machine learning engine that can train a machine learning model to use features learned during the learning period to create a baseline profile.</p><p id="p-0039" num="0038">If a baseline already exists (&#x201c;YES&#x201d; branch of <b>408</b>), then the baseline can be updated based on the new incoming network traffic (<b>412</b>). For example, the traffic analyzer can retrieve a previously crated baseline profile from the data store based on the device identifier (e.g., MAC address), device type and/or device class, and update the retrieved baseline profile based on the new incoming data. For example, the predetermined features may be updated based on the incoming data, or the machine learning model may be updated by a machine learning engine based on the incoming data.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a flowchart illustrating operations that take place after the learning period for device has passed. The incoming data (or metadata) may be used to query the data store to retrieve the device profile (<b>414</b>). The query can use a device type, device class, or device identifier to retrieve an existing baseline profile from data store <b>122</b> (<b>416</b>).</p><p id="p-0041" num="0040">Features of the incoming data can be compared to the features stored in the baseline profile (<b>418</b>). For example, in the case where the baseline profile stores predetermined features, the feature values can be extracted from the incoming network data and compared with the feature values in the baseline profile. In the case where the baseline profile includes a machine learning model, the incoming data can be run through the model and the resulting predicted features can be used to determine if an anomaly exists (<b>420</b>).</p><p id="p-0042" num="0041">As an example, domain names or IP address/Port combinations that appear in the incoming network traffic can be compared with domain names or IP address/port combinations that are in the baseline profile. If a domain name appears in the incoming network traffic that is not in the baseline profile, then it may be likely that an attacker has spoofed the MAC address of network device. Similarly, if the packet rate or data rate associated with incoming network traffic is different from the baseline profile, an attacker may be using tools that generate a different amount of network traffic or different packet rate, which can indicate that malware is installed on the network device or an attacker has spoofed the MAC address of the network device and is using attack tools that generate a different amount of network traffic or traffic at a different rate than is expected from a non-spoofed or non-infected device.</p><p id="p-0043" num="0042">If an anomaly is not detected (&#x201c;NO&#x201d; branch of <b>420</b>) no further operations need be performed. Optionally, the baseline profile can be updated based on the new incoming network traffic if desired.</p><p id="p-0044" num="0043">If an anomaly is detected (&#x201c;YES&#x201d; branch of <b>420</b>), the traffic analyzer determines a severity of the anomaly (<b>422</b>). In some aspects, different anomalies can have different severities. For example, a packet rate that is slightly higher than the baseline profile may be associated with a lower severity than an anomaly that indicates the network device is communicating with hosts that are not in the baseline profile. An access restriction may be selected according to the severity (<b>424</b>). For example, the network device may be assigned a different role that limits the access of the network device to other devices on the network.</p><p id="p-0045" num="0044">The access limitation may result in the network device being completely quarantined from other devices or may result in the network device having access to fewer network devices than in its originally assigned role. In some aspects, the role may not limit access, but may cause some or all accesses to be logged for later inspection. After the new role has been assigned to the network device, the system can initiate access restriction through the enforcement of policies associated with the new role (<b>426</b>).</p><p id="p-0046" num="0045">The techniques described herein may be implemented in hardware, software, firmware, or any combination thereof. Various features described as modules, units or components may be implemented together in an integrated logic device or separately as discrete but interoperable logic devices or other hardware devices. In some cases, various features of electronic circuitry may be implemented as one or more integrated circuit devices, such as an integrated circuit chip or chipset.</p><p id="p-0047" num="0046">If implemented in hardware, this disclosure may be directed to an apparatus such as a processor or an integrated circuit device, such as an integrated circuit chip or chipset. Alternatively or additionally, if implemented in software or firmware, the techniques may be realized at least in part by a computer-readable data storage medium comprising instructions that, when executed, cause a processor to perform one or more of the methods described above. For example, the computer-readable data storage medium may store such instructions for execution by a processor.</p><p id="p-0048" num="0047">A computer-readable medium may form part of a computer program product, which may include packaging materials. A computer-readable medium may comprise a computer data storage medium such as random access memory (RAM), read-only memory (ROM), non-volatile random access memory (NVRAM), electrically erasable programmable read-only memory (EEPROM), Flash memory, magnetic or optical data storage media, and the like. In some examples, an article of manufacture may comprise one or more computer-readable storage media.</p><p id="p-0049" num="0048">In some examples, the computer-readable storage media may comprise non-transitory media. The term &#x201c;non-transitory&#x201d; may indicate that the storage medium is not embodied in a carrier wave or a propagated signal. In certain examples, a non-transitory storage medium may store data that can, over time, change (e.g., in RAM or cache).</p><p id="p-0050" num="0049">The code or instructions may be software and/or firmware executed by processing circuitry including one or more processors, such as one or more digital signal processors (DSPs), general purpose microprocessors, application-specific integrated circuits (ASICs), field-programmable gate arrays (FPGAs), or other equivalent integrated or discrete logic circuitry. Accordingly, the term &#x201c;processor,&#x201d; as used herein may refer to any of the foregoing structure or any other structure suitable for implementation of the techniques described herein. In addition, in some aspects, functionality described in this disclosure may be provided within software modules or hardware modules.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>receiving, from a first device on a network, incoming network traffic;</claim-text><claim-text>receiving previous network traffic from a second device having the same device type as the first device on an isolated network for a predetermined time period,</claim-text><claim-text>creating a network traffic baseline based on the previous network traffic;</claim-text><claim-text>comparing the network traffic baseline associated with the incoming network traffic;</claim-text><claim-text>determining, based on the comparison, an anomaly type associated with the incoming network traffic; and</claim-text><claim-text>changing access to the network by the first device according to an access restriction selected from a set of access restrictions, wherein the access restriction corresponds to the anomaly type.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>analyzing the incoming network traffic to determine a device type of the first device;</claim-text><claim-text>identifying a plurality of devices having the device type; and</claim-text><claim-text>associating the network traffic baseline with the plurality of devices.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>analyzing the incoming network traffic to determine a device class of the first device; and</claim-text><claim-text>identifying a plurality of devices having the device class; and</claim-text><claim-text>associating the network traffic baseline with the plurality of devices.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising determining, by a machine learning engine and from the received previous network traffic, a machine learning model, wherein:<claim-text>the comparing the network traffic baseline to the incoming network traffic includes applying the machine learning model to the incoming network traffic to determine an anomaly prediction; and</claim-text><claim-text>the anomaly type is determined according to the anomaly prediction.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the changing access to the network is based at least partially on an anomaly severity of an anomaly identified in the incoming network traffic.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the access restriction is associated with a role of the first device; and</claim-text><claim-text>the changing access includes changing the role of the first device.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the changing access includes one or more or a combination of:<claim-text>quarantining the first device from the network;</claim-text><claim-text>removing, from the first device, access to a subset of devices on the network; and</claim-text><claim-text>logging network traffic of the first device within the network.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the network traffic baseline is associated with the device type of the first device, wherein the method further comprises:<claim-text>determining the device type of the first device based on the incoming network traffic;</claim-text><claim-text>querying a data store for the network traffic baseline matching the device type; and</claim-text><claim-text>retrieving the network traffic baseline from the data store.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the comparing the network traffic baseline with the incoming network traffic includes one or more or a combination of:<claim-text>comparing a domain name of the network traffic baseline with a corresponding domain name of the incoming network traffic;</claim-text><claim-text>comparing a packet rate of the network traffic baseline with a corresponding packet rate of the incoming network traffic; and</claim-text><claim-text>comparing a data rate of the network traffic baseline with a corresponding data rate of the incoming network traffic.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A non-transitory computer-readable medium having encoded therein programming code executable by one or more processors to perform or control performance of operations comprising:<claim-text>receiving, from a first device on a network, incoming network traffic;</claim-text><claim-text>receiving previous network traffic from a second device having the same device type as the first device on an isolated network for a predetermined time period,</claim-text><claim-text>creating a network traffic baseline based on the previous network traffic;</claim-text><claim-text>comparing the network traffic baseline associated with the incoming network traffic;</claim-text><claim-text>determining, based on the comparison, an anomaly type associated with the incoming network traffic; and</claim-text><claim-text>changing access to the network by the first device according to an access restriction selected from a set of access restrictions, wherein the access restriction corresponds to the anomaly type.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the operations further comprise:<claim-text>analyzing the incoming network traffic to determine a device type of the first device; and</claim-text><claim-text>identifying a plurality of devices having the device type; and</claim-text><claim-text>associating the network traffic baseline with the plurality of devices.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the operations further comprise:<claim-text>analyzing the incoming network traffic to determine a device class of the first device;</claim-text><claim-text>identifying a plurality of devices having the device class; and</claim-text><claim-text>associating the network traffic baseline with the plurality of devices.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:<claim-text>the operations further comprise determining, by a machine learning engine and from the received previous network traffic, a machine learning model;</claim-text><claim-text>the comparing the network traffic baseline to the incoming network traffic includes applying the machine learning model to the incoming network traffic to determine an anomaly prediction; and</claim-text><claim-text>the anomaly type is determined according to the anomaly prediction.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the changing access to the network is based at least partially on an anomaly severity of an anomaly identified in the incoming network traffic.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:<claim-text>the access restriction is associated with a role of the first device; and</claim-text><claim-text>the changing access includes changing the role of the first device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the changing access includes one or more or a combination of:<claim-text>quarantining the first device from the network;</claim-text><claim-text>removing, from the first device, access to a subset of devices on the network; and</claim-text><claim-text>logging network traffic of the first device within the network.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:<claim-text>the network traffic baseline is associated with the device type of the first device; and</claim-text><claim-text>the operations further comprise:</claim-text><claim-text>determining the device type of the first device based on the incoming network traffic;</claim-text><claim-text>querying a data store for the network traffic baseline matching the device type; and</claim-text><claim-text>retrieving the network traffic baseline from the data store.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the comparing the network traffic baseline with the incoming network traffic includes one or more or a combination of:<claim-text>comparing a domain name of the network traffic baseline with a corresponding domain name of the incoming network traffic;</claim-text><claim-text>comparing a packet rate of the network traffic baseline with a corresponding packet rate of the incoming network traffic; and</claim-text><claim-text>comparing a data rate of the network traffic baseline with a corresponding data rate of the incoming network traffic.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A system comprising:<claim-text>one or more processors; and</claim-text><claim-text>a non-transitory computer-readable medium including:</claim-text><claim-text>a data collector executable by the one or more processors to receive, from a first device on a network, incoming network traffic, and to receive previous network traffic from a second device having the same device type as the first device on an isolated network for a predetermined time period; and</claim-text><claim-text>a traffic analyzer executable by the one or more processors to:</claim-text><claim-text>receive, from the data collector, the incoming network traffic and the previous network traffic;</claim-text><claim-text>create a network traffic baseline based on the previous network traffic;</claim-text><claim-text>compare the network traffic baseline with the incoming network traffic;</claim-text><claim-text>determine, based on the comparison, an anomaly type associated with the incoming network traffic; and</claim-text><claim-text>change access to the network by the first device according to an access restriction selected from a set of access restrictions, wherein the access restriction corresponds to the anomaly type.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the device profiler is further executable by the one or more processors to determine, based on analyzing the incoming network traffic, a device class of the first device, wherein the network traffic baseline is associated with a plurality of devices having the device class.</claim-text></claim></claims></us-patent-application>