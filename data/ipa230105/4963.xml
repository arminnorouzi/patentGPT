<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004964A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004964</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17722939</doc-number><date>20220418</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>GB</country><doc-number>1603123.9</doc-number><date>20160223</date></priority-claim><priority-claim sequence="02" kind="national"><country>GB</country><doc-number>1603125.4</doc-number><date>20160223</date></priority-claim><priority-claim sequence="03" kind="national"><country>GB</country><doc-number>1607063.3</doc-number><date>20160422</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>38</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>23</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>50</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>3829</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2255</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2365</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>0655</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>1235</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>223</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>381</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>3825</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>3827</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>389</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>50</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3073</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>321</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>2220</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e98">METHOD AND SYSTEM FOR THE SECURE TRANSFER OF ENTITIES ON A BLOCKCHAIN</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16077999</doc-number><date>20180814</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11308486</doc-number></document-id></parent-grant-document><parent-pct-document><document-id><country>WO</country><doc-number>PCT/IB2017/050861</doc-number><date>20170216</date></document-id></parent-pct-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17722939</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>nChain Holdings Limited</orgname><address><city>St. John's</city><country>AG</country></address></addressbook><residence><country>AG</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Wright</last-name><first-name>Craig Steven</first-name><address><city>London</city><country>GB</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Savanah</last-name><first-name>Stephane</first-name><address><city>London</city><country>GB</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The invention provides a secure method for exchanging entities via a blockchain. The invention incorporates tokenisation techniques, and also techniques for embedding metadata in a redeem script of a blockchain transaction. Embodiment(s) provide a method of: generating a first script, the first script comprising: a first set of metadata associated with a first invitation for the exchange of a first entity by a first user, the first set of metadata comprising an indication of the first entity to be offered for exchange and a first location condition for the exchange, a first user public key (P1A) associated with the first user, wherein the first user public key (P1A) is part of an asymmetric cryptographic pair comprising the first user public key (P1A) and a first user private key (V1A). The script may further comprise and a first third-party public key (P1T) associated with a first third-party, wherein the first third-party public key (P1T) is part of an asymmetric cryptographic pair comprising the first third-party public key (P1T) and a first third-party private key (V1T) The method further comprises the steps of hashing the first script to generate a first script hash and publishing the first script and the first script hash on a distributed hash table (DHT).</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="131.23mm" wi="64.94mm" file="US20230004964A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="138.85mm" wi="106.26mm" file="US20230004964A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="152.15mm" wi="66.97mm" file="US20230004964A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="150.79mm" wi="143.93mm" file="US20230004964A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="209.72mm" wi="97.54mm" file="US20230004964A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="128.27mm" wi="81.79mm" file="US20230004964A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="244.60mm" wi="130.64mm" file="US20230004964A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="139.11mm" wi="121.84mm" file="US20230004964A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="240.54mm" wi="130.56mm" file="US20230004964A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="209.47mm" wi="130.64mm" file="US20230004964A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="180.59mm" wi="104.14mm" file="US20230004964A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="180.85mm" wi="141.56mm" file="US20230004964A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="158.58mm" wi="139.78mm" file="US20230004964A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="174.58mm" wi="130.56mm" file="US20230004964A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="174.58mm" wi="130.64mm" file="US20230004964A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="174.50mm" wi="130.64mm" file="US20230004964A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 16/077,999, filed Aug. 14, 2018, entitled &#x201c;A METHOD AND SYSTEM FOR THE SECURE TRANSFER OF ENTITIES ON A BLOCKCHAIN,&#x201d; which is a 371 Nationalization of International Patent Application No. PCT/IB2017/050861, filed Feb. 16, 2017, entitled &#x201c;A METHOD AND SYSTEM FOR THE SECURE TRANSFER OF ENTITIES ON A BLOCKCHAIN,&#x201d; which claims priority to United Kingdom Patent Application No. 1603123.9, filed Feb. 23, 2016, United Kingdom Patent Application No. 1603125.4, filed Feb. 23, 2016, and United Kingdom Patent Application No. 1607063.3, filed Apr. 22, 2016, the disclosures of which are herein incorporated by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present invention relates to distributed, peer-to-peer ledgers and, in particular, blockchain technologies. The invention also relates in part to tokenisation and security techniques, and secure mechanisms for transferring entities and/or ownership of entities via a blockchain. It may comprise a method of performing secure transactions between different parties over a blockchain.</p><heading id="h-0003" level="1">BACKGROUND &#x26; INTRODUCTION TO THE TECHNICAL AREA</heading><p id="p-0004" num="0003">A blockchain is a peer-to-peer, electronic ledger which is implemented as a computer-based decentralised, distributed system made up of blocks which in turn are made up of transactions. Each transaction is a data structure that encodes the transfer of control of a digital asset between participants in the blockchain system, and includes at least one input and at least one output. Each block contains a hash of the previous block to that blocks become chained together to create a permanent, unalterable record of all transactions which have been written to the blockchain since its inception. Transactions contain small programs known as scripts embedded into their inputs and outputs, which specify how and by whom the outputs of the transactions can be accessed. On the Bitcoin platform, these scripts are written using a stack-based scripting language.</p><p id="p-0005" num="0004">In order for a transaction to be written to the blockchain, it must be &#x201c;validated&#x201d;. Network nodes (miners) perform work to ensure that each transaction is valid, with invalid transactions rejected from the network. Software clients installed on the nodes perform this validation work on an unspent transaction (UTXO) by executing its locking and unlocking scripts. If execution of the locking and unlocking scripts evaluate to TRUE, the transaction is valid and the transaction is written to the blockchain. Thus, in order for a transaction to be written to the blockchain, it must be i) validated by the first node that receives the transaction&#x2014;if the transaction is validated, the node relays it to the other nodes in the network; and ii) added to a new block built by a miner; and iii) mined, i.e. added to the public ledger of past transactions.</p><p id="p-0006" num="0005">Although blockchain technology is most widely known for the use of cryptocurrency implementation, digital entrepreneurs have begun exploring the use of both the cryptographic security system Bitcoin is based on and the data that can be stored on the Blockchain to implement new systems. It would be highly advantageous if the blockchain could be used for automated tasks and processes which are not limited to the realm of cryptocurrency. Such solutions would be able to harness the benefits of the blockchain (e.g. a permanent, tamper proof records of events, distributed processing etc) while being more versatile in their applications.</p><p id="p-0007" num="0006">One area of current research is the use of the blockchain for the implementation of &#x201c;smart contracts&#x201d;. These are computer programs designed to automate the execution of the terms of a machine-readable contract or agreement. Unlike a traditional contract which would be written in natural language, a smart contract is a machine executable program which comprises rules that can process inputs in order to produce results, which can then cause actions to be performed dependent upon those results.</p><p id="p-0008" num="0007">Another area of blockchain-related interest is the use of &#x2018;tokens&#x2019; (or &#x2018;coloured coins&#x2019;) to represent and transfer real-world entities via the blockchain. A potentially sensitive or secret item can be represented by the token which has no discernable meaning or value. The token thus serves as an identifier that allows the real-world item to be referenced from the blockchain. Tokenisation techniques can be used in respect of many different types of contexts where security, anonymity and cross-platform compliance are important. One such application area is financial applications, although the present invention is not limited to use in relation to financial transactions.</p><p id="p-0009" num="0008">In this document we use the term &#x2018;blockchain&#x2019; to include all forms of electronic, computer-based, distributed ledgers. These include, but are not limited to consensus-based blockchain and transaction-chain technologies, permissioned and un-permissioned ledgers, shared ledgers and variations thereof. The most widely known application of blockchain technology is the Bitcoin ledger, although other blockchain implementations have been proposed and developed. While Bitcoin may be referred to herein for the purpose of convenience and illustration, it should be noted that the invention is not limited to use with the Bitcoin blockchain and alternative blockchain implementations and protocols fall within the scope of the present invention.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0010" num="0009">The invention is defined in the appended claims.</p><p id="p-0011" num="0010">The present invention may provide solutions for the secure control and/or transfer or exchange of an asset via a blockchain. Herein, the term &#x201c;entity&#x201d; may be used interchangeably with &#x201c;asset&#x201d;. Additionally or alternatively, the invention may enable control and/or transfer of ownership of the asset. This may be a digital or virtual asset such as a smart contract, or a real-world/physical asset. The asset may be a right such as a license or right to use or some sort of right relating to some type of property. The invention may use tokenisation techniques to facilitate this control or transfer. The invention may enable the transfer/exchange to be performed in a secure manner, incorporating the use of cryptographic keys, while not requiring any alteration of the underlying blockchain protocol. The invention may use techniques for embedding metadata in a script associated with a blockchain transaction (Tx).</p><p id="p-0012" num="0011">The invention provides, not least: enhanced optimisation of memory usage for electronic transfers, improved security and data integrity through the use of hashing techniques, improved security through the removal of a need for a trusted third party, and enhanced anonymity of data. It may also provide improved communication mechanisms to enable disparate or distinct parties to identify each other and/or exchange data via the novel methods and/or architectures provided by the invention. This list of advantages is not limiting or exhaustive.</p><p id="p-0013" num="0012">The invention may require the interaction and inter-communication of various distinct and separate computer-based resources, such as one or more user devices and a distributed computer system (blockchain) which includes computing nodes arranged to execute blockchain-related software and protocols.</p><p id="p-0014" num="0013">The invention may provide a computer implemented method of offering an exchange of an entity. The method may comprise:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0014">generating a first script, the first script comprising:        <ul id="ul0003" list-style="none">            <li id="ul0003-0001" num="0015">a first set of metadata associated with a first invitation for the exchange of a first entity by a first user, the first set of metadata comprising an indication of the first entity to be offered for exchange and a first location condition for the exchange,</li>            <li id="ul0003-0002" num="0016">a first user public key (P1A) associated with the first user, wherein the first user public key (P1A) is part of an asymmetric cryptographic pair comprising the first user public key (P1A) and a first user private key (V1A),</li>        </ul>        </li>        <li id="ul0002-0002" num="0017">hashing the first script to generate a first script hash; and</li>        <li id="ul0002-0003" num="0018">publishing the first script and the first script hash on a distributed hash table (DHT).</li>        <li id="ul0002-0004" num="0019">The first script may comprise a first third-party public key (P1T) associated with a first third-party, wherein the first third-party public key (P1T) is part of an asymmetric cryptographic pair comprising the first third-party public key (P1T) and a first third-party private key (V1T).</li>    </ul>    </li></ul></p><p id="p-0015" num="0020">The first script may be a script associated with a blockchain transaction (Tx). It may be a redeem script.</p><p id="p-0016" num="0021">The method may further comprise generating a first invitation transaction (Tx) for inclusion on a peer-to-peer (P2P) distributed ledger (i.e. blockchain), the first invitation transaction comprising an indication of a second entity to be transferred in exchange for the first entity, and the first script hash.</p><p id="p-0017" num="0022">The P2P distributed ledger may be the Bitcoin block chain. However, it will be appreciated that any other suitable P2P distributed ledger is envisaged.</p><p id="p-0018" num="0023">Thus, the hash of the (redeem) script may be provided within, or associated with, a blockchain transaction (Tx). This may be a P2SH transaction in accordance with the Bitcoin protocol, or another functionally equivalent transaction type in another blockchain protocol. The hash of the script may serve as a look-up key to a hash table or other storage resource. This storage resource may be a public domain repository of invitations. The storage resource may comprise the look-up key (ie the hash) and all the fields from the metadata which, in combination, define the invitation. The look-up key may be a hash of the rest of the record i.e. a hash of the concatenated metadata values. In a preferred embodiment, the metadata may comprise a pointer or other reference to the location of a contract associated with a token. The contract may be stored in a separate storage resource. The invitation (as defined by the metadata in the storage resource) may be linked to the blockchain transaction via the hash.</p><p id="p-0019" num="0024">A number of advantages are provided by the invention, some of which are now described. Firstly, because information regarding the exchange is included in metadata securely embedded in a distributed ledger, the exchange can be carried out securely on a peer-to-peer basis, thereby making a trusted third party unnecessary. This in turn avoids the need for a large amount of sensitive information about both parties to the exchange to be held by any third party such as a service provider, which in turn avoids the risks associated with that third party's security being compromised. This advantage is provided while also preserving anonymity of the transactions. Since the first script is hashed, it would be impracticably difficult to change the values of the metadata without causing a change in the corresponding hash values of the script. This also enables the terms of the transaction to be verified by the parties, since they are locked on a publicly available distributed ledger, which enables the integrity of the transactions to be trusted. The advantage is also provided that the first metadata can be embedded in one or more of the places available for public keys in the first script, thereby enabling nodes not suitable for processing the metadata to simply transmit the script to a further node, as opposed to blocking its progress. This in turn improves computational efficiency of the related transactions. A further advantage is provided that control data can be incorporated into the metadata, for example an access code for a barrier in the case of a token representing a ticket for a venue or a travel ticket or voucher. The metadata may also contain a pointed to an off-block repository of the details of the exchange, thereby enabling less memory and/or processing resources to be used in processing the related transactions. A yet further advantage is provided that the token can be divided, enabling two or more transaction outputs, each of which can relate to tokenised or untokenised electronically transferrable digital asset.</p><p id="p-0020" num="0025">The first entity that is offered for exchange and/or the second entity to be transferred in exchange for the first entity may comprise one or more of the following:<ul id="ul0004" list-style="none">    <li id="ul0004-0001" num="0000">    <ul id="ul0005" list-style="none">        <li id="ul0005-0001" num="0026">a) a cryptocurrency;</li>        <li id="ul0005-0002" num="0027">b) a contract;</li>        <li id="ul0005-0003" num="0028">c) goods;</li>        <li id="ul0005-0004" num="0029">d) services.</li>    </ul>    </li></ul></p><p id="p-0021" num="0030">The contract may be related, at least in part, to one or more of the following:<ul id="ul0006" list-style="none">    <li id="ul0006-0001" num="0000">    <ul id="ul0007" list-style="none">        <li id="ul0007-0001" num="0031">a) a fiat currency;</li>        <li id="ul0007-0002" num="0032">b) title deeds;</li>        <li id="ul0007-0003" num="0033">c) goods;</li>        <li id="ul0007-0004" num="0034">d) services.</li>    </ul>    </li></ul></p><p id="p-0022" num="0035">The first location condition may comprise one or more of the following:<ul id="ul0008" list-style="none">    <li id="ul0008-0001" num="0000">    <ul id="ul0009" list-style="none">        <li id="ul0009-0001" num="0036">a) location information indicative of a geographical location or area for the exchange of the first entity;</li>        <li id="ul0009-0002" num="0037">b) location format information indicative of a format of the location information;</li>        <li id="ul0009-0003" num="0038">c) range information indicative of a range limit on the geographical location or area relating to the exchange; and</li>        <li id="ul0009-0004" num="0039">d) range format information indicative of a format of the range information.</li>    </ul>    </li></ul></p><p id="p-0023" num="0040">The method may comprise a step of:<ul id="ul0010" list-style="none">    <li id="ul0010-0001" num="0000">    <ul id="ul0011" list-style="none">        <li id="ul0011-0001" num="0041">matching the first invitation of the first script to a second script that is published on the DHT by comparing at least the first entity specified in the first script with a second entity specified in the second script,</li>        <li id="ul0011-0002" num="0042">wherein the second script comprises a second set of metadata associated with a second invitation for an exchange of a second entity by a second user, the second set of metadata comprising an indication of the second entity to be offered in exchange for the first entity,        <ul id="ul0012" list-style="none">            <li id="ul0012-0001" num="0043">a second user public key (P2A) associated with the second user, wherein the second user public key (P2A) is part of an asymmetric cryptographic pair comprising the second user public key (P2A) and a second user private key (V2A), and</li>            <li id="ul0012-0002" num="0044">a second third-party public key (P2T) associated with a second third-party, wherein the second third-party public key (P2T) is part of an asymmetric cryptographic pair comprising the second third-party public key (P2T) and a second third-party private key (V2T).</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0024" num="0045">The method may comprise a step of determining whether the location condition is fulfilled by identifying a location of the first user and/or the second user.</p><p id="p-0025" num="0046">The second third party may be the same as the first third party.</p><p id="p-0026" num="0047">The method may further comprise a step of publishing the second script on the DHT, comprising:<ul id="ul0013" list-style="none">    <li id="ul0013-0001" num="0000">    <ul id="ul0014" list-style="none">        <li id="ul0014-0001" num="0048">generating the second script:</li>        <li id="ul0014-0002" num="0049">hashing the second script to generate a second script hash; and</li>        <li id="ul0014-0003" num="0050">publishing the second script and the second script hash on the DHT.</li>    </ul>    </li></ul></p><p id="p-0027" num="0051">The method may comprise a step of generating a second transaction invitation for inclusion on the P2P distributed ledger, the second invitation transaction comprising an indication of the first entity to be transferred in exchange for the second entity; and the second script hash.</p><p id="p-0028" num="0052">In one example, the method may further comprise:<ul id="ul0015" list-style="none">    <li id="ul0015-0001" num="0000">    <ul id="ul0016" list-style="none">        <li id="ul0016-0001" num="0053">generating a first exchange transaction for inclusion on the P2P distributed ledger, the first exchange transaction comprising:        <ul id="ul0017" list-style="none">            <li id="ul0017-0001" num="0054">the first script,</li>            <li id="ul0017-0002" num="0055">the first user public key (P1A),</li>            <li id="ul0017-0003" num="0056">the first third-party public key (P1T),</li>            <li id="ul0017-0004" num="0057">a first input provided from an output of the first invitation transaction, and</li>            <li id="ul0017-0005" num="0058">a first output indicating a first quantity of a first entity to be transferred to the second user; and</li>        </ul>        </li>        <li id="ul0016-0002" num="0059">recording the first exchange transaction on the P2P distributed ledger.</li>    </ul>    </li></ul></p><p id="p-0029" num="0060">Further, the method may comprise:<ul id="ul0018" list-style="none">    <li id="ul0018-0001" num="0000">    <ul id="ul0019" list-style="none">        <li id="ul0019-0001" num="0061">generating a second exchange transaction for inclusion on the P2P distributed ledger, the second exchange transaction comprising:        <ul id="ul0020" list-style="none">            <li id="ul0020-0001" num="0062">the second script,</li>            <li id="ul0020-0002" num="0063">the second user public key (P2A),</li>            <li id="ul0020-0003" num="0064">the second third-party public key (P2T),</li>            <li id="ul0020-0004" num="0065">a second input provided from an output of the second invitation transaction, and</li>            <li id="ul0020-0005" num="0066">a second output indicating a second quantity of a second entity to be transferred to the first user; and</li>        </ul>        </li>        <li id="ul0019-0002" num="0067">recording the second exchange transaction on the P2P distributed ledger.</li>    </ul>    </li></ul></p><p id="p-0030" num="0068">Alternatively, the method may comprise:<ul id="ul0021" list-style="none">    <li id="ul0021-0001" num="0000">    <ul id="ul0022" list-style="none">        <li id="ul0022-0001" num="0069">generating a first exchange transaction for inclusion on the P2P distributed ledger, the first exchange transaction comprising:        <ul id="ul0023" list-style="none">            <li id="ul0023-0001" num="0070">the first script,</li>            <li id="ul0023-0002" num="0071">the first user public key (P1A),</li>            <li id="ul0023-0003" num="0072">the first third-party public key (P1T),</li>            <li id="ul0023-0004" num="0073">the second script,</li>            <li id="ul0023-0005" num="0074">the second user public key (P2A),</li>            <li id="ul0023-0006" num="0075">the second third-party public key (P2T)</li>            <li id="ul0023-0007" num="0076">a first input provided from an output of the first invitation transaction,</li>            <li id="ul0023-0008" num="0077">a second input provided from an output of the second invitation transaction,</li>            <li id="ul0023-0009" num="0078">a first output indicating a first quantity of a first entity to be transferred to the second user, and</li>            <li id="ul0023-0010" num="0079">a second output indicating a second quantity of a second entity to be transferred to the first user; and</li>            <li id="ul0023-0011" num="0080">recording the first exchange transaction on the P2P distributed ledger.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0031" num="0081">The step of generating the first exchange transaction may comprise facilitating signing of the first script with the first user private key (V1A); and facilitating signing of the first script with the first third-party private key (P1T).</p><p id="p-0032" num="0082">Similarly, the step of generating the second exchange transaction may comprise facilitating signing of the second script with the second user private key (V1A); and facilitating signing of the second script the second third-party private key (P2T).</p><p id="p-0033" num="0083">The method may further comprise facilitating one or more of the first and second users to accept the exchange before generating or recording the first and/or second exchange transactions.</p><p id="p-0034" num="0084">One or more of the first exchange transaction, and the second transaction may be a pay-to-script-hash (P2SH) transaction.</p><p id="p-0035" num="0085">In accordance with embodiments of the present disclosure, there is provided a computer system for offering an exchange of an entity, the computer system comprising:<ul id="ul0024" list-style="none">    <li id="ul0024-0001" num="0000">    <ul id="ul0025" list-style="none">        <li id="ul0025-0001" num="0086">a first processing device configured to:        <ul id="ul0026" list-style="none">            <li id="ul0026-0001" num="0087">generate a first script comprising:            <ul id="ul0027" list-style="none">                <li id="ul0027-0001" num="0088">a first set of metadata associated with a first invitation for the exchange of a first entity by a first user, the first set of metadata comprising an indication of the first entity to be offered for exchange and a first location condition for the exchange,</li>                <li id="ul0027-0002" num="0089">a first user public key (P1A) associated with the first user, wherein the first user public key (P1A) is part of an asymmetric cryptographic pair comprising the first user public key (P1A) and a first user private key (V1A),</li>            </ul>            </li>            <li id="ul0026-0002" num="0090">hash the first script to generate a first script hash; and</li>            <li id="ul0026-0003" num="0091">publish the first script and the first script hash on a distributed hash table (DHT).</li>        </ul>        </li>        <li id="ul0025-0002" num="0092">The script may also comprise a first third-party public key (P1T) associated with a first third-party, wherein the first third-party public key (P1T) is part of an asymmetric cryptographic pair comprising the first third-party public key (P1T) and a first third-party private key (V1T);</li>    </ul>    </li></ul></p><p id="p-0036" num="0093">Embodiments of the present disclosure further relate to a processor or group of processors operable to perform the above described method.</p><p id="p-0037" num="0094">Embodiments of the present disclosure also relate to a computer readable medium having stored thereon instructions which, when executed, are operable to perform the above described method.</p><p id="p-0038" num="0095">Embodiment(s) of the invention may comprise a technique for embedding metadata in a (blockchain) transaction, comprising the steps of:<ul id="ul0028" list-style="none">    <li id="ul0028-0001" num="0000">    <ul id="ul0029" list-style="none">        <li id="ul0029-0001" num="0096">generating a blockchain transaction (Tx) having an output (TxO) related to an asset (B1) and a hash of a redeem script which comprises:        <ul id="ul0030" list-style="none">            <li id="ul0030-0001" num="0097">metadata comprising a token which is a representation of, or a reference to, a tokenised entity;</li>            <li id="ul0030-0002" num="0098">and</li>            <li id="ul0030-0003" num="0099">at least one (preferably two or more) public cryptographic keys.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0039" num="0100">The digital asset (B1) may be a quantity of cryptocurrency eg Bitcoin. The redeem script may be provided within a locking script of the transaction output TxO. The metadata may be provided in the redeem script at a location which is designated in a blockchain protocol as a location for a cryptographic key. This provides the advantage that the metadata can be transferred without the need for any alteration to the underlying blockchain protocol. Nodes operating the protocol will be agnostic to the use of the metadata in place of the cryptographic key.</p><p id="p-0040" num="0101">The method may further include the step of submitting the transaction Tx to a blockchain. In effect, the cryptocurrency (B1) may thus be locked on the blockchain in association with the token. The quantity of cryptocurrency (B1) can only be spent (redeemed) upon provision of an unlocking script which meets the requirements of the locking script for the output TxO. In particular, a redeem script must be presented which, when hashed, matches the hash provided in the locking script of TxO. As the locking script for output TxO comprises the hash of the redeem script which in turn includes the token (in the metadata), the cryptocurrency (B1) is associated with the token. Upon presentation of the correct unlocking (redeem) script, ownership of the cryptocurrency (B1) may be transferred to the redeeming party or user i.e. it is spent.</p><p id="p-0041" num="0102">Any feature(s) mentioned above in relation to one aspect or embodiment may be used in relation to any other embodiment or aspect. Any feature mentioned in relation to a method of the invention may apply equally to a corresponding, implanting system and vice versa.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0042" num="0103">Embodiments of the present disclosure will now be described, by non-limiting example only, with reference to the accompanying drawings, in which:</p><p id="p-0043" num="0104"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram of a system according to an embodiment of the present disclosure;</p><p id="p-0044" num="0105"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow diagram of a process performed by a user of the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0045" num="0106"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow diagram illustrating a process performed by an exchange service provider;</p><p id="p-0046" num="0107"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a table illustrating a metadata format for an invitation generated by an exchange service provider;</p><p id="p-0047" num="0108"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a table illustrating a metadata format for an invitation generated by an exchange service provider;</p><p id="p-0048" num="0109"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow diagram illustrating a process of matching invitations from two or more users of the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0049" num="0110"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a transaction table for a plurality of transactions between a plurality of parties to the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0050" num="0111"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a transaction diagram illustrating transactions between parties to the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0051" num="0112"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a transaction table for a plurality of transactions between a plurality of parties to the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0052" num="0113"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a transaction table for a plurality of transactions between a plurality of parties to the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0053" num="0114"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a flow diagram illustrating a process performed by an exchange service provider;</p><p id="p-0054" num="0115"><figref idref="DRAWINGS">FIGS. <b>12</b> to <b>15</b></figref> show tables illustrating metadata formats for an invitation generated by an exchange service provider;</p><p id="p-0055" num="0116"><figref idref="DRAWINGS">FIG. <b>16</b>A</figref> is a transaction table for a transaction between two parties to the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0056" num="0117"><figref idref="DRAWINGS">FIG. <b>16</b>B</figref> is a transaction table for a transaction between two parties to the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>; and</p><p id="p-0057" num="0118"><figref idref="DRAWINGS">FIG. <b>16</b>C</figref> is a transaction table for a transaction between two parties to the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0058" num="0119">State of the art methods of performing common financial transactions, such as a payment into another person's bank account or a foreign currency exchange, incur cost in both transaction fees and time delay. In contrast, transactions in electronic currencies such as bitcoin can be processed at a much faster rate (i.e. minutes rather than days) and for far less cost (in the order of a few cents per transaction rather than tens of dollars).</p><p id="p-0059" num="0120">There exists a need for a quicker and cheaper way of performing and keeping a permanent record of day-to-day transactions, both financial and non-financial. It is important to note, that the invention is not limited to use with, or advantages for, financial applications. Instead, the present disclosure generally relates to a computer implemented method and a computer system for utilising a P2P distributed ledger, such as the Bitcoin blockchain, to enable parties to offer an exchange of an entity and record the exchange of the entity which may be any type of entity of value. Exemplary methods described herein relate to the generation of a script indicative of an invitation or offer to perform an exchange of an entity. Further methods described herein relate to the enactment of the actual exchange of the entity upon matching the script to another script.</p><p id="p-0060" num="0121">By utilising the P2P distributed ledger, such as the Bitcoin blockchain, embodiments of the present disclosure provide for a permanent record of all steps of an exchange process to be maintained. Further, each stage in the process (offer and exchange) can be secured using cryptographic locking techniques similar to those used in transactions of cryptocurrencies. By &#x201c;cryptocurrency&#x201d; is meant an encrypted, electronically transferrable digital asset such as, but not limited to, Bitcoin.</p><p id="p-0061" num="0122">The exemplary methods described herein can be used to offer and exchange any type of entity. Examples of such entities include but are not limited to cryptocurrency, such as Bitcoins, fiat currencies, contracts, goods and services.</p><p id="p-0062" num="0123">Exchanges such as Coinffeine (http://www.coinffeine.com/) which involve the use of blockchain technologies are known in the art. However, such prior art arrangements still rely on traditional models, and also rely on third-party sources, escrows, and other multi-currency non-bank accounts/processors in order to operate. These known arrangements achieve their decentralisation through their business models, rather than through technical innovations and cryptographic techniques (as per the present invention).</p><p id="p-0063" num="0000">The present invention incorporates the use of tokenisation techniques. Contracts may be offered for exchange or exchanged by virtue of tokens.</p><p id="p-0064" num="0124">In summary, a token is an exchangeable entity represented by/representative of a contract. The contract may take one of several forms. For example, the contract may confer a right upon the holder or denote ownership of property. The value of the token may be contractually specified and is linked to the underlying BTC amount via a &#x2018;pegging rate&#x2019;. The token is exchangeable via a transaction using a cryptocurrency protocol such as the Bitcoin protocol. The Bitcoin value on the transaction acts as a token representing a rights contract in digital form. The contract itself may be stored on the transaction or may be kept in a publicly accessible location, or may be held privately by the parties to the contract depending on the particular embodiment. Where the contract is not stored on the transaction, the transaction may store a unique pointer to the contract.</p><p id="p-0065" num="0125">Tokens may be divisible. A divisible token is one in which the value on the transaction output can be subdivided into smaller amounts which can be allocated across multiple new tokens. Examples of divisible tokens include tokens for fiat currency or for shares in a race horse. Divisible contracts may be defined as those that specify a non-zero pegging rate. In other words, the token value is tied to the underlying bitcoin value. Alternatively, tokens may be non-divisible. A non-divisible token is a contract that specifies the holder's rights in terms of a fixed value, e.g. a contract to redeem a house or &#xa3;1,000. Non-divisible tokens are therefore not linked to the value of the underlying Bitcoin.</p><p id="p-0066" num="0126">Tokens must be digitally signed by a token issuer to be valid. The issuer may, for example, be an authority such as a Registrar of Title deeds. The issuer may issue a token to a user in return for payment. That token may then give the user the right to exercise the contract linked to the token, whether the contract represents the right to redeem fiat currency or for a service to be performed.</p><p id="p-0067" num="0127">Examples of tokens in accordance with the above, include the following:<ul id="ul0031" list-style="none">    <li id="ul0031-0001" num="0000">    <ul id="ul0032" list-style="none">        <li id="ul0032-0001" num="0128">A fiat currency token that is pegged to the BTC value of the transaction output by the issuer of the contract. For example &#x201c;the spender of this token (bitcoin transaction) is entitled to redeem any fraction of this token for Canadian dollars (CAD) at a rate of 1 share (10 cents) for every 1000 satoshis&#x201d;.</li>        <li id="ul0032-0002" num="0129">A race horse owned by several members of a syndicate.</li>        <li id="ul0032-0003" num="0130">Any item where the ownership is by a title deed, e.g., a house or other property could be treated in this way.</li>        <li id="ul0032-0004" num="0131">An electronic contract representing a concert ticket. This is inherently non-divisible.</li>        <li id="ul0032-0005" num="0132">A bearer bond (non-divisible)</li>        <li id="ul0032-0006" num="0133">A unique identifier attached to a goods/service (such as a bar code or RFID). If used, this identifier is still preferably validated by a signature of an authorised entity; without a signature it will fall into the less secure &#x2018;goods/service&#x2019; category (described below).</li>        <li id="ul0032-0007" num="0134">A contract for the right to a service to be performed. It is noted that this is not the same as the actual service itself, but only the right to have the service performed. This right can be traded. For example, a voucher from Michael's Mowing for up to 3 hours lawn mowing within the Sydney metropolitan area. The holder of this voucher (contract) can redeem it for the actual service.</li>    </ul>    </li></ul></p><p id="p-0068" num="0135">Tokens must specify the value of a share, e.g., 1 share=10 cents CAD, 1 share=1 rupiah, or 1 share=1% ownership of an item or property (race horse, house, etc.).</p><p id="p-0069" num="0136">Whilst embodiments described below may refer specifically to recording transactions on the Bitcoin blockchain, it will be understood that the present disclosure may be implemented using any P2P distributed ledger. The blockchain is used below to describe examples of the present disclosure for simplicity only due to its high level of standardisation and large quantity of associated public documentation.</p><p id="p-0070" num="0137">As is well known in the art, the Bitcoin blockchain is a transaction ledger or database which is distributed across networked nodes participating in a system based on the Bitcoin protocol. A full copy of a currency's block chain contains every transaction ever executed in the currency. Thus, a continuously growing list of transactional data records is provided. Since each transaction entered onto the block chain is cryptographically enforced, the Bitcoin blockchain is hardened against tampering and revision, even by operators of the data store nodes.</p><p id="p-0071" num="0138">In embodiments of the present disclosure, instead of or in addition to being used in its designed function of storing a record of transactions representing payments of Bitcoins (or other cryptocurrency) from one party to another, the blockchain is used in a novel manner to enable a transfer of entities or assets between parties. The exchange transfers control and/or ownership of the digital entity from one party to another. In order to achieve this, the invention provides a mechanism for holding and recording invitations (or orders) to perform an exchange of one or more entities. The invention thus provides a novel and advantageous communication solution which is conducted via the blockchain.</p><p id="p-0072" num="0139">As mentioned above, any type of entity or asset is exchangeable. These may be physical, &#x201c;real world&#x201d; entities, or virtual, digital entities. Examples of entities which may be exchanged include cryptocurrencies such as Bitcoins, tokens (representing any type of transferrable contract), and goods and services of any type. Tokens may represent a contract conferring specified rights upon the holder to be redeemed for fiat currency (virtual banknotes), to denote ownership of property (e.g., title deeds), or grant access to an event (tickets), to name a few of many examples. Goods and services may include new or second hand products, labour (e.g., charged by the hour), complete jobs (e.g., mowing the lawn), to name a few of many examples.</p><p id="p-0073" num="0140"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a network diagram of a P2P exchange system <b>100</b> according to one embodiment. The system <b>100</b> comprises a network <b>102</b> and a plurality of parties to the network. The parties include an exchange service provider <b>104</b>, a first user <b>106</b>, a second user <b>108</b>, an escrow service provider <b>110</b>, and an issuer <b>112</b>. As will be described in more detail below, a combination of functions of the exchange service provider <b>104</b>, the escrow service provider <b>110</b> and the issuer <b>112</b>, may be undertaken by a single party. In other words, a single party could simultaneously perform the functions of each. In addition, and as will be explained in more detail below, the exchange service provided <b>104</b> and escrow service provider <b>110</b> are optional, since the invention can be carried out entirely on the P2P exchange system without the use of those service providers <b>104</b>, <b>110</b>.</p><p id="p-0074" num="0141">The exchange service provider <b>104</b> provides exchange services to a plurality of users, including the first user <b>106</b> and the second user <b>108</b>. The issuer <b>112</b> is optional to the network <b>102</b>, as denoted by broken lines. As will be discussed in more detail below, the issuer <b>112</b> may only be required when an exchange of tokens is required.</p><p id="p-0075" num="0142">In some embodiments, the network <b>102</b> is the Internet. Accordingly, other parties (not shown) may be party to the network <b>102</b>. All parties to the network <b>102</b> are able to communicate with all other parties to the network <b>102</b>. Hosted on the network <b>102</b> are a peer-to-peer distributed hash table (P2P DHT) and a peer-to-peer distributed ledger (P2P DL). It will be appreciated that some or all of the parties shown in the system <b>100</b>, together with those not shown, may act as host nodes to both or either of the P2P DHT and the P2P DL.</p><heading id="h-0007" level="1">Structure of an Invitation</heading><p id="p-0076" num="0143">An invitation may be structured include various parameters or codes. These can be used for various purposes, eg matching invitations as described in more detail below. In one or more embodiments, the following structure may be used:</p><p id="p-0077" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="238pt" align="left"/><thead><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Offer-type-code</entry><entry/></row><row><entry>Offer-QTY-max</entry><entry>This is the amount of value e.g BTC that will be carried on the offerer's payment</entry></row><row><entry/><entry>transaction.</entry></row><row><entry/><entry>If the offerer is offering BTC than this value is simply the offerer's maximum</entry></row><row><entry/><entry>BTC offer.</entry></row><row><entry/><entry>If the offerer is offering tokenised currency then this value is the equivalent</entry></row><row><entry/><entry>token value of the offerer's maximum offered currency amount (calculated based</entry></row><row><entry/><entry>on the pegging rate specified on the tokenisation contract). The same is true if the</entry></row><row><entry/><entry>offeror is offering a tokenised other commodity such as part ownership of a</entry></row><row><entry/><entry>racehorse (the contract will still have a pegging rate that specifies the BTC token</entry></row><row><entry/><entry>value for shares in the horse).</entry></row><row><entry/><entry>If the offeror is offering a physical item then this field is ignored - but the actual</entry></row><row><entry/><entry>bitcoin transaction will carry the minimum required amount (i.e. dust = 546</entry></row><row><entry/><entry>satoshis).</entry></row><row><entry/><entry>Of course, the amount of the spend cannot exceed the total BTC value of the</entry></row><row><entry/><entry>transaction's inputs so the offerer cannot offer more than the bitcoins owned.</entry></row><row><entry>Offer-QTY-min</entry></row><row><entry>Offer-Item-ID</entry></row><row><entry>Offer-Description</entry><entry>Keywords: This is a Condition that must be set if the Offer is goods/service and</entry></row><row><entry/><entry>there is no other identifier (such as an auction site catalogue number)</entry></row><row><entry>Rate-min</entry><entry>This is the minimum rate of exchange that the offeror will accept expressed by</entry></row><row><entry/><entry>convention as (requested units)/(offered units)</entry></row><row><entry/><entry>Examples:</entry></row><row><entry/><entry>(1) BTC offered for shares in a commodity (such as part ownership of a</entry></row><row><entry/><entry>racehorse)</entry></row><row><entry/><entry>rate = shares/satoshis</entry></row><row><entry/><entry>(Note: this also applies to tokens that are non-divisible such as a concert ticket,</entry></row><row><entry/><entry>although in this case there is only one share)</entry></row><row><entry/><entry>(2) Token share offered for BTC</entry></row><row><entry/><entry>rate = satoshis/share (e.g. satoshis/cent, where the tokens are for fiat amount</entry></row><row><entry/><entry>such as CAD)</entry></row><row><entry/><entry>(3) Token for token</entry></row><row><entry/><entry>rate = requested-share/offered-share (e.g. cents/rupiah, where token offered</entry></row><row><entry/><entry>represents rupiah and requested is CAD)</entry></row><row><entry/><entry>Note that this is only a convention for the sake of consistency and convenience</entry></row><row><entry/><entry>and will make matching easier. The rate could be just as easily be converted into</entry></row><row><entry/><entry>requested-satoshis/offered-satoshis based on the pegging rate used on the</entry></row><row><entry/><entry>tokenisation contract.</entry></row><row><entry>Rate-max</entry></row><row><entry>Conditions</entry><entry>This will be a code to indicate up to 8 conditions that will be coded in separate</entry></row><row><entry/><entry>metadata fields. For example:</entry></row><row><entry/><entry>Deadline (in Unix time)</entry></row><row><entry/><entry>Location</entry></row><row><entry/><entry>The format of these metadata fields depends on the type of condition.</entry></row><row><entry/><entry>Note that Offer-Description and Request-Description are also considered</entry></row><row><entry/><entry>conditions. They are usually not needed as all the information required normally</entry></row><row><entry/><entry>be can be coded into the other metadata fields. If they are needed then they need</entry></row><row><entry/><entry>to be flagged as existing by switch on the appropriate flags in the Conditions</entry></row><row><entry/><entry>bitfield.</entry></row><row><entry>Request-type-code</entry></row><row><entry>Request-item-ID</entry></row><row><entry>Request-</entry><entry>Keywords: This is a Condition that must be set if the Request is goods/service</entry></row><row><entry>description</entry><entry>and there is no other identifier (such as an auction site catalogue number)</entry></row><row><entry>Request-QTY-max</entry></row><row><entry>Request-QTY-min</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0078" num="0144">One purpose of the exchange service provider <b>104</b> is to provide a gateway for users <b>106</b>, <b>108</b> to place invitations or offers for an exchange of an entity on the P2P DHT and/or the P2P DL. Whilst the users <b>106</b>, <b>108</b> of the network <b>102</b> may themselves place invitations on the P2P DHT and/or the P2P DL, the exchange service provider <b>104</b> provides an interface with which invitations are generated. Furthermore, the exchange service provider <b>104</b> may reduce the dangers associated with direct handling of transactions on a distributed ledger, such as the Bitcoin blockchain (e.g., losing transactions etc.) as the skilled person will appreciate. In addition to enabling the publishing of user invitations on the P2P DHT and/or P2P DL, the exchange service provider may perform one or more of the following additional services:<ul id="ul0033" list-style="none">    <li id="ul0033-0001" num="0000">    <ul id="ul0034" list-style="none">        <li id="ul0034-0001" num="0145">Matching invitations&#x2014;As described above, an invitation may include a) details of the entities a user wishes to exchange, and b) one or more user applied options/conditions, such as a location condition, attached to the exchange. Two invitations may match when their respective entity details are mirrored and one or more of the conditions of the two invitations are compatible. In other words, a match may occur when one or more parameters or features included in a first invitation is/are also included in a second invitation. The is some commonality between one or more of the features of the invitations. An example of mirrored entity details would be when a first user (Alice) offers Bitcoins for apples and a second user (Bob) offers apples for Bitcoins. The service provider may therefore provide a matching service to match compatible invitations in order to accommodate an exchange. Matching may involve scanning the P2P DHT for one or more invitations having matching entities and/or conditions. In some embodiments, the service provider <b>104</b> may scan the P2P DHT in response to a request from a user. For example, a user may provide to the service provider <b>104</b> one or more criteria for a desired invitation. Based on the criteria provided, the service provider <b>104</b> may then search for invitations already placed on the P2P DHT which match those criteria. In other embodiments, the service provider <b>104</b> may implement a non-specific pairing algorithm which searches the P2P DHT for matching or near-matching invitations which do not relate to a specific user request. It will be appreciated that matching services may be provided by other third-party providers. One or more third-party providers may exist, whose primary purpose is to provide matching services in accordance with the above as well as match alerts as described below. In some embodiments, matching is provided by a matching service provider (MSP).</li>        <li id="ul0034-0002" num="0146">In accordance with one or more embodiments, and with reference to the table shown in the &#x201c;Structure of an Invitation&#x201d; section above, a matching algorithm from matching invitations between A and B such as the following may be employed:        <ul id="ul0035" list-style="none">            <li id="ul0035-0001" num="0147">A's Offer-type-code must match B's Request-type-code</li>            <li id="ul0035-0002" num="0148">A's Request-type-code must match B's Offer-type-code</li>            <li id="ul0035-0003" num="0149">A's Rate-Min&#x2264;B's Rate-max (when expressed in equivalent units)</li>            <li id="ul0035-0004" num="0150">A's Rate-Max&#x2265;B's Rate-min (when expressed in equivalent units)</li>            <li id="ul0035-0005" num="0151">Request-item-ID must match Offer-item-ID</li>            <li id="ul0035-0006" num="0152">A's Request-QTY-min&#x2264;B's Offer-QTY-max</li>            <li id="ul0035-0007" num="0153">A's Request-QTY-max&#x2265;B's Offer-QTY-min</li>            <li id="ul0035-0008" num="0154">A's condition(s) (if any) must be compatible with B's invitation</li>            <li id="ul0035-0009" num="0155">B's condition(s) (if any) must be compatible with A's invitation</li>        </ul>        </li>        <li id="ul0034-0003" num="0156">The invention may be arranged to incorporate machine-executable rules which enforce this algorithm or a variation thereof</li>        <li id="ul0034-0004" num="0157">Match alerts&#x2014;If a match or near-match is detected, the exchange service provider <b>104</b> may alert a user in a known manner, such as by email or via a phone or tablet app. Thus, the invention may provide a novel communication or alert mechanism.</li>        <li id="ul0034-0005" num="0158">Generating new invitations based on matches&#x2014;Where a user provides details of an invitation or offer the user wishes to place, the service provider <b>104</b> may scan the P2P DHT for one or more invitations which satisfy the conditions of the user's order. If a matching invitation is then found on the P2P DHT, the service provider <b>104</b> may generate an invitation which mirrors the identified invitation already on the P2P DHT in order to facilitate a successful match. It is noted that in order to complete the final transaction on the P2P DL, all parties to a transaction must have an invitation already published on the P2P DHT. However, not all invitations need be published on the P2P DHT. In the present example, for instance, the service provider need not publish the offer on the P2P DHT since there is no requirement for the invitation to be advertised as a desired match has already been found. It will be appreciated, however, that the generated invitation may still be placed on the P2P DHT, for example, in case the initial match falls through.</li>        <li id="ul0034-0006" num="0159">Executing transactions&#x2014;After a pair of invitations have been successfully matched, the service provider <b>104</b> may act as a proxy to implement the final transaction. For example, on determination that two invitations provide an exact or near match, the service provider <b>104</b> may record an actual transaction, i.e. a transaction involving an exchange of the entity, on the P2P distributed ledger. This process may be conducted automatically without the parties express authorisation or after prompting one or more of the parties to authorise the transaction. In some embodiments, metadata in an invitation may indicate whether or not a party must be notified before an exchange is finalised.</li>        <li id="ul0034-0007" num="0160">Verifying fulfilment of conditions&#x2014;where an invitation includes a condition, such as a location condition, the exchange service provider <b>104</b> may determine whether the condition is being fulfilled before finalising the exchange. With regard to the location condition, the exchange service provider <b>104</b> may, for example, determine the current location of a user when two invitations have been matched.</li>        <li id="ul0034-0008" num="0161">eWallet services&#x2014;In addition to the above, the service provider <b>104</b> may also provide conventional eWallet services such as the holding of cryptocurrency keys etc.</li>    </ul>    </li></ul></p><p id="p-0079" num="0162">A single service provider <b>104</b> is shown in the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. However, it will be appreciated that one or more additional exchange service providers may be part of the network <b>102</b>. Where more than one exchange service provider exist, users may choose an exchange service provider depending on their requirements, which may, for example, include the service provider's fee structure, location, compatibility etc. It will therefore be appreciated that, in certain circumstances, two users with matching invitations may use different exchange service providers. In such circumstances, the users' respective exchange service providers may communicate with each other in order to facilitate matching of invitations and/or an exchange of an entity.</p><p id="p-0080" num="0163">In addition to the exchange service providers <b>104</b>, an escrow service provider <b>110</b> may be part of the network <b>104</b>. The escrow service provider <b>110</b> enables a user's offer to be held (i.e. the amount offered is reserved) until a transaction is settled, or under certain conditions to cancel an order and have returned anything that was offered in an invitation. The escrow service provider <b>110</b> acts as a neutral third party, trusted by two parties of a transaction, to provide an escrow service for transactions. Thus, the system allows users participating in a final transaction to have a guarantee that the user making an offer can fulfil the offered amount (in Bitcoins or tokens).</p><p id="p-0081" num="0164">As with exchange service provider, more than one escrow service provider may be part of the network <b>104</b>. Users of the P2P exchange system <b>100</b> may also choose which escrow service provider they use, if and when they use one. In some embodiments, the services of the escrow service provider <b>110</b> may be incorporated into those of the exchange service provider <b>104</b> or vice versa. In such case, a separate escrow service provider may not be required.</p><p id="p-0082" num="0165">In addition to the above, the system <b>100</b> may also comprise an issuer <b>112</b>. An issuer <b>112</b> may be involved where the transaction involves the exchange of a token. In such circumstances, the process involves the issuer signing the token. Every transaction involving the transfer of a token may involve the issuer <b>112</b>. In embodiments described herein, the issuer's signature is required in the invitation transaction, in which the token is offered and held in escrow. The issuer's signature may also be required in the exchange transaction, in which the payment of the token is made to the counterparty.</p><p id="p-0083" num="0166">An aspect of embodiments of the present disclosure is the ability to embed metadata concerning an invitation or offer to perform an exchange of an entity in a Bitcoin transaction (or other cryptocurrency transaction) as well as the ability to embed metadata concerning an actual exchange of the entity, in a Bitcoin or other cryptocurrency transaction. Embodiments described herein use multi-signature pay to script hash (P2SH) type transactions to enable such metadata embedding as described below.</p><p id="p-0084" num="0167">(i) Redeem Script in P2SH in General</p><p id="p-0085" num="0168">As background, in a standard pay-to-script-hash method of the bitcoin protocol, the redeem script may take the form of:</p><heading id="h-0008" level="2">&#x3c;NumSigs PubK1 PubK2 . . . PubK15 NumKeys OP_CHECKMULTISIG&#x3e;</heading><p id="p-0086" num="0169">where<ul id="ul0036" list-style="none">    <li id="ul0036-0001" num="0000">    <ul id="ul0037" list-style="none">        <li id="ul0037-0001" num="0170">NumSigs&#x2014;is the number &#x201c;m&#x201d; of valid signatures required to satisfy the redeem script to unlock the transaction</li>        <li id="ul0037-0002" num="0171">PubK1, PubK2 . . . PubK15&#x2014;are the public keys that correspond to signatures that unlock the transaction (up to a maximum of 15 public keys)</li>        <li id="ul0037-0003" num="0172">NumKeys&#x2014;is the number &#x201c;n&#x201d; of public keys (which must be 15 or less)</li>    </ul>    </li></ul></p><p id="p-0087" num="0173">To redeem the above redeem script, at least a number &#x201c;m&#x201d; of signatures corresponding to the public keys are required. In some examples, the order of the public keys is important and the number &#x201c;m&#x201d; out of &#x201c;n&#x201d; signatures for signing must be done in sequence. For example, say that &#x201c;m&#x201d; is two and the number of public keys &#x201c;n&#x201d; is fifteen. Say that two signatures are available for use, say Sig1 (corresponding to PubK1) and Sig 15 (corresponding to PubK15), the redeem script must be signed by Sig1 first followed by Sig15.</p><p id="p-0088" num="0174">(ii) Embedding Metadata in a P2SH</p><p id="p-0089" num="0175">Metadata may be embedded in a P2SH in one or more of the 15 places available for the public keys in the redeem script.</p><p id="p-0090" num="0176">For example, the P2SH may take the form of:</p><heading id="h-0009" level="2">&#x3c;NumSigs Metadata1 Metadata2 . . . PubK1 PubK2 . . . NumKeys OP_CHECKMULTISIG&#x3e;</heading><p id="p-0091" num="0177">where<ul id="ul0038" list-style="none">    <li id="ul0038-0001" num="0000">    <ul id="ul0039" list-style="none">        <li id="ul0039-0001" num="0178">NumSigs&#x2014;is the number &#x201c;m&#x201d; of valid signatures required to satisfy the redeem script to unlock the transaction,</li>        <li id="ul0039-0002" num="0179">Metadata1 and Metadata2&#x2014; each include metadata that takes place of a public key,</li>        <li id="ul0039-0003" num="0180">PubK1 and PubK2&#x2014;are actual public keys, and</li>        <li id="ul0039-0004" num="0181">NumKeys&#x2014;is the total number of positions taken by the metadata and the public keys (which must be 15 or less).</li>    </ul>    </li></ul></p><p id="p-0092" num="0182">By placing, in a redeem script, metadata corresponding to conditions of an invitation, details of a contract associated with a token, and/or other information associated with an exchange, the hash of such information will be included in the P2P distributed ledger.</p><p id="p-0093" num="0183">This embedding method can be summarised as:<ul id="ul0040" list-style="none">    <li id="ul0040-0001" num="0000">    <ul id="ul0041" list-style="none">        <li id="ul0041-0001" num="0184">generating a blockchain transaction (Tx) having an output (TxO) related to a portion of cryptocurrency and a hash of a redeem script which comprises:        <ul id="ul0042" list-style="none">            <li id="ul0042-0001" num="0185">metadata comprising a token which is a representation of, or a reference to, a tokenised entity;</li>            <li id="ul0042-0002" num="0186">and</li>            <li id="ul0042-0003" num="0187">at least one (preferably two or more) public cryptographic keys.<br/>The tokenised entity could be a contract and/or other entity relating to the exchange. The metadata is provided in a location designated by the protocol for a cryptographic key.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0094" num="0188">Thus, the use of multi-signature P2SH bitcoin transactions in embodiments of the present disclosure offers several advantages. Firstly, it enables an invitation transaction to carry a metadata payload. Secondly, it facilitates the use of escrow services in an exchange transaction. Thirdly, where tokens are transferred in an exchange, it allows an exchange transaction to carry metadata associated with the one or more tokens being exchanged. Also, the underlying blockchain protocol is agnostic to the fact that metadata is being transmitted via the transaction. Therefore, no change is required to the blockchain protocol to convey this information.</p><p id="p-0095" num="0189">Metadata may include a description or keyword describing an offer or request in an invitation transaction. Metadata may also include conditions associated with the invitation. For example, a location condition may be attached to the invitation which may specify a geographical location at which the exchange of the entity must take place. In addition to the location condition, a deadline condition may further be attached to the invitation. In this regard, a cancellation transaction may be generated which spends the same Bitcoin amount and contains a locktime representing the deadline for the exchange to take place. The cancellation transaction may be prevented from being distributed on the P2P DL until the locktime. If the exchange does not take place by the deadline, the cancellation transaction is added to the P2P DL and effectively pays back the payer and or service provider. If the exchange takes place before expiry of the deadline at the specified geographical location, the exchange transaction may spend the amount, creating a double-spend that hits the P2P DL ahead of the time-locked cancellation transaction, thereby blocking the cancellation transaction. In some embodiments, the metadata may not include a deadline, but instead the cancellation transaction can be solely responsible for cancelling the original invitation transaction. Alternatively, the deadline metadata condition may not automatically cause the spending of a cancellation transaction. In other words, the deadline may be a soft deadline which remains at the payer's control. This deadline may, therefore, be extended by a party simply allowing it to lapse and still accept late matching invitations. Equally, a service provider may still attempt to match an expired order if it remains unspent.</p><p id="p-0096" num="0190">Instead of locking in the cancellation transaction at the same time as placing the invitation transaction, a user may wait until after the deadline and manually enter the cancellation transaction if and when the user wishes.</p><p id="p-0097" num="0191">As mentioned above, a condition may include one or more location conditions which specify, for example, that an exchange transaction is only broadcast onto the P2P DHT if the location of the transactional broadcast is within X metres of specified GPS coordinates. This ensures that the transaction can only take place at a specified location, for example, Bob's coffee shop. This is described in more detail below</p><p id="p-0098" num="0192">A facility may exist that enables users to create their own new conditions and add them to the list of conditions by allocating them a previously unused condition-code. This facility may be resistant to abuse. For example, each service provider may simply make public their own table of conditions along with an associated condition-code and other parties to the system <b>100</b> can choose to adopt the same coding and may also add new ones of their own. Then if disputes arise due to, for example, re-use of condition code, the disputes may be resolved by the service provider or other users of the system <b>100</b>.</p><p id="p-0099" num="0193">Some examples of implementation of the present disclosure will now be described by way of example offers and transactions between the first user <b>106</b> (referred to herein as Alice) and the second user (referred to herein as Bob).</p><heading id="h-0010" level="2">Posting an Invitation</heading><p id="p-0100" num="0194">In a first example, Alice wants to buy some tokenised Canadian dollars (CAD) in exchange for Bitcoins. To advertise her interest, Alice contacts her exchange service provider <b>104</b> through, for example, a web interface or via an app running on a tablet or cell phone. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, at step <b>202</b>, Alice logs into the service provider's <b>104</b> web interface. At steps <b>204</b> and <b>206</b>, Alice then sends details of her invitation, including entities to be exchanged (tokenised CAD for bitcoin) and conditions of the exchange and any selected options offered by the service provider, to the service provider. Alice may input this information into an interface hosted by the service provider <b>104</b>, for example, using normal language which can then be translated by the service provider <b>104</b> into a valid invitation or, alternatively, Alice may simply enter the information by pre-selecting options, e.g., via drop-down selection menus.</p><p id="p-0101" num="0195">At step <b>208</b>, Alice receives from the service provider <b>104</b> a redeem script which has been generated by the service provider <b>104</b> based on her selections and includes information concerning the entities Alice wishes to exchange and any conditions associated with the invitation. Because Alice has signed up to use the particular service provider <b>104</b>, the service provider <b>104</b> may already have Alice's public key. Alternatively, Alice may provide her public key to the service provider <b>104</b> either during the initial selection, or in response to a request from the service provider <b>104</b>.</p><p id="p-0102" num="0196">Alice signs the redeem script at step <b>210</b> using her private key, which is a cryptographic pair to her public key, and at step <b>212</b> sends the signed redeem script back to the service provider <b>104</b> to be distributed. This process may be supported with the use of an app, which may itself be provided by the service provider <b>104</b>.</p><p id="p-0103" num="0197">The flow diagram <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates the corresponding process performed by the service provider <b>104</b>. At step <b>302</b>, the service provider <b>104</b> receives the invitation details from Alice and generates a redeem script at step <b>304</b> using Alice's public key, the entity details and the conditions of the invitation. The redeem script may be in a format suitable for a P2SH bitcoin transaction; the invitation details may be stored in metadata fields in place of 32-byte public keys usually used in multisig unlocking scripts. <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a format of the metadata for Alice's invitation, according to one embodiment. In the invitation, Alice requests tokenised CAD and offers bitcoins in return at a rate of no less than 400 CAD/bitcoin. As will be explained below in more detail, <figref idref="DRAWINGS">FIG. <b>4</b></figref> also shows a deadline condition which may be added to the invitation. The deadline condition may cause the invitation to be revoked at the deadline in the event that an exchange has not been finalised based on the invitation.</p><p id="p-0104" num="0198">The redeem script is then sent to Alice for signing. Upon receipt of a signed redeem script from Alice, at step <b>308</b> the service provider <b>104</b> generates a hash of the signed redeem script.</p><p id="p-0105" num="0199">The service provider <b>104</b> may use the hash in two ways. Firstly, at step <b>310</b>, the service provider <b>104</b> lists the invitation details along with the hash on the publicly available P2P DHT. As mentioned above, this table employs the torrent technique so it is distributed rather than centralised and hence it will remain publicly accessible and safe from alteration. Other service providers <b>104</b> are then able to access the invitation and list it on their own site (indeed, the service provider <b>104</b> may simply use the hash table as the sole repository and need not even maintain its own local database of invitations.</p><p id="p-0106" num="0200">The second way the hash is used is to create a locking script of a Bitcoin transaction, at step <b>312</b>. This transaction spends an amount of Alice's bitcoins to a P2SH script requiring 2 signatures to unlock: Alice's signature and that of her nominated escrow service provider <b>110</b> (which, as mentioned above, might or might not be the same entity as the service provider <b>104</b>). The purpose of this transaction is twofold. Firstly, the invitation is logged on the P2P DL. Any user or their service provider can verify that the invitation on the P2P DHT is legitimate by ensuring that there exists a matching transaction on the P2P DL (via the matching hash values). Secondly, the transaction &#x2018;locks&#x2019; the commitment made by Alice in her invitation; the amount of bitcoins Alice is offering in exchange for tokenised CAD is the amount spent by the order transaction. Thus, it can be verified that the order is backed by sufficient funds.</p><heading id="h-0011" level="2">Pairing Matching Invitations</heading><p id="p-0107" num="0201">In a second example which refers to the above described first example, Bob wants to sell some of his tokenised CAD for BTC and has independently listed his own invitation either using the same or a different service provider to the service provider <b>104</b> used by Alice. Bob's order, too, has been listed on the hash table and embedded in a P2P DL transaction as described with reference to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>. The metadata of Bob's invitation is illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0108" num="0202">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a process <b>600</b> of matching Alice's and Bob's orders is described. In this example, the service provider <b>104</b> is described as performing the process. However, it will be appreciated that any exchange service provider or, indeed, any other suitable third-party may perform the process <b>600</b>.</p><p id="p-0109" num="0203">The exchange service provider <b>104</b> may run a matching algorithm operable to identify a full or partial match between Alice's and Bob's invitations. At step <b>602</b>, the exchange service provider <b>104</b> scans the P2P DHT for matching entity details. During the scan, the service the provider <b>104</b> checks for a match between the entity details of Alice's and Bob's invitations. If a match is not found at step <b>604</b>, then the process returns to step <b>602</b> and the exchange service provider <b>104</b> continues to scan the P2P DHT for matching entity details. If a match is found at step <b>604</b>, the process <b>600</b> continues to step <b>606</b> where a check is made for a match between one or more of the conditions of each of Alice's and Bob's invitations. If no match is found at step <b>606</b>, the process returns to step <b>602</b>. If a match between one or more conditions is found, then the process moves to step <b>608</b> in which the exchange service provider <b>104</b> attempts to create and finalise a transaction between Alice and Bob.</p><p id="p-0110" num="0204">A direct match of all conditions in the two invitations may not be required at step <b>606</b> for a positive match to be confirmed. Indeed, the process <b>600</b> may only require that some of the conditions match. Additionally or alternatively, one or more of the conditions need not fully match. For example, if conditions being compared are exchange rates proposed in each condition, the process <b>600</b> may confirm a positive match provided the rates are within a predetermined threshold range of each other. For example, if Alice proposes a minimum rate condition of 4&#xd7;10<sup>&#x2212;5 </sup>tokenised CAD/satoshi and Bob's equivalent minimum proposed rate is 3.9&#xd7;10<sup>&#x2212;5 </sup>tokenised CAD/satoshi, the process may still confirm a condition match even though Bob's offered rate doesn't quite satisfy Alice's original requirements. In such circumstances, upon match, Alice may be given an option to accept. It will be appreciated that if Bob's equivalent minimum proposed rate is 4.1&#xd7;10<sup>&#x2212;5 </sup>tokenised CAD/satoshi, then the condition would be satisfied. In another example, the conditions might be respective values for goods and services proposed in an offer and request. The process <b>600</b> may again confirm a positive match provided the two values are within a predetermined threshold range of each other. In each case, the predetermined threshold range may be, for example, a discrete value or a percentage of the offer value or request value.</p><p id="p-0111" num="0205">As stated previously, the transaction metadata for each or both of Bob's and Alice's invitations may further comprise one or more location conditions which may specify, for example, that a transaction is only broadcast onto the P2P DL if the location of the transactional broadcast is within X metres of specified coordinates. This ensures that the transaction can only take place at a specified location, for example, Bob's coffee shop.</p><p id="p-0112" num="0206">Once a match is found, and before completing the transaction, one or more intervening steps may be performed. These may include an alert to the parties that a match has been found, followed by a request to each or both parties for confirmation that they wish to proceed, etc. For example, as discussed above, where a condition is nearly but not fully met by one or more users, a match may still be recorded but not finalised until all parties are happy with the conditions of the invitations. This process may lead to counter offers to negotiate a final agreement on conditions, which may then lead to the generation of further invitations in accordance with processes described above.</p><p id="p-0113" num="0207">The final exchange may be executed by creating one or more bitcoin transactions that spend the outputs of each invitation transaction. The inventors have found several methods of completing the transaction, which may depend on circumstances including but not limited to: the users involved in the transaction, the entities being exchanged, and the service providers and issuers involved in the transaction. Some examples of these methods are described below.</p><p id="p-0114" num="0208">Following on from the examples described above with reference to <figref idref="DRAWINGS">FIGS. <b>2</b> to <b>6</b></figref>, a transaction table <b>500</b> for the separate transactions for Alice-Bob and Bob-Alice is shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> and a schematic diagram <b>600</b> of the transaction flow is shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. As with the metadata values shown in <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, values provided in the transaction table <b>500</b> are shown. In this example, Alice's bitcoins in her invitation transaction are spent to Bob, and Bob's CAD-tokenised bitcoin in his invitation transaction are spent to Alice.</p><p id="p-0115" num="0209">Referring first to the Alice-Bob transaction, the input <b>602</b> of this transaction is provided from the output of the invitation transaction which was placed on the P2P DL with Alice's invitation. Like the first transaction, the input script is signed by both Alice and the escrow service provider <b>110</b> (assuming Alice is happy for the transaction to proceed). The script unlocks the spent bitcoins which can then be output to a) Bob as his payment in return for the tokenised CAD (<b>604</b>), b) the exchange service provider <b>104</b> as payment for the exchange (<b>606</b>), and c) to Alice as change if any is due (<b>608</b>).</p><p id="p-0116" num="0210">Referring now to the Bob-Alice transaction, this transaction has two inputs. The first input <b>610</b> of the transaction is provided from the output of the invitation transaction which was placed on the P2P DL with Bob's invitation. Because the input to this transaction is tokenised, the input script needs to be signed by both Bob and his token issuer. In this circumstance, the token issuer may also operate as an escrow, thereby withholding the funds until Bob (and optionally Alice) are satisfied with the transaction. The signed script unlocks the spent tokens which can then be output to a) Alice as payment in return for the BTC (<b>612</b>), and b) back to Bob as a change token to the value of the original token less the value sent to Alice (<b>614</b>). The second input <b>616</b> is from a previous bitcoin transaction of Bob. This input is unlocked and output to a) the service provider <b>104</b> as payment for the exchange, b) the bitcoin miner as a fee for the exchange transaction and c) to Bob as change in bitcoins to the value of the original bitcoin input value less the service provider's <b>104</b> fee and the miner's fee.</p><p id="p-0117" num="0211">The service provider's <b>104</b> fee for each transaction may be a slice of the value of the transaction. Alternatively or additionally, the fee may be a slice of the exchange rate spread between corresponding rate conditions presented in the two invitations. For example, where the offered rates overlap, the service provider <b>104</b> may fulfil both sides of the exchange at the asking rate of each and retain the difference as the fee. Alternatively or additionally, a flat fee (in satoshis, tokenised currencies or other) may be taken by the service provider <b>104</b>.</p><p id="p-0118" num="0212">Once the transaction has been completed, Bob's and Alice's respective service providers may remove their invitation entries from the P2P DHT or enter a further entry which nullifies the original entry. For example, a service provider may simply leave the entry on the P2P DHT since the entry corresponds to a spent transaction, which implies that the invitation is no longer valid. Alternatively, a service provider may mark the transaction with a field that specifies that it has been spent. This may be a separate field on the DHT which corresponds to a particular entry but does not change the actual metadata associated with the invitation (this ensures that the script hash still matches the hash on the transaction). Alternatively, a service provider may delete the entry from the P2P DHT. However, a benefit of the P2P DHT is a permanent audit control for transaction using the system <b>100</b>. Preferably, therefore, deletion of entries from the P2P DHT is prevented or deleted entries are archived so as to maintain a record of the entry. In one example, deleted entries are archived.</p><p id="p-0119" num="0213">In the above example transaction, no puzzle is exchanged. In other words, the two transactions (Alice-Bob and Bob-Alice) are completely separate and discrete. It may be preferable in some cases, however, for the two transaction either to be valid or invalid. <figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an alternative transaction example in which a puzzle is exchanged in Alice's transaction (Alice-Bob). By doing so, the two transactions are locked together so that one cannot be spent without the other also being spent. This prevents a transaction going through from one party to another without the opposite transaction also going through.</p><p id="p-0120" num="0214">In the above two example two bitcoin transactions are performed to complete the exchange. Where possible, however, it is preferable to consolidate the above two transactions into a single bitcoin transaction. Doing so automatically locks together the two parts of the exchange and leads to a reduction in the overall fees paid by Alice and Bob for the transaction.</p><p id="p-0121" num="0215"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a transaction table <b>700</b> for the single transaction between Alice and Bob. The transaction flow for the exchange is the same as that of the previous two examples, i.e. as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. However, the exchange is consolidated into a single multi-input-multi-output (MIMO) transaction. It is noted that in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, two separate fees are paid to the exchange service provider <b>104</b>. However, if the exchange service provider <b>104</b> is the same for both Bob and Alice, these two fees may be consolidated into a single transaction, paid by Bob or Alice, or both Bob and Alice.</p><heading id="h-0012" level="2">Posting an Invitation</heading><p id="p-0122" num="0216">In a third example, Bob offers an exchange of a gold nugget for a specific amount of Bitcoins. To publish his offer, Bob contacts a first third party, which in this case represents his exchange service provider <b>104</b>. In this particular example, the exchange service provider <b>104</b> provides a communication interface that is implemented by a software application running on Bob's cell phone. Thus, Bob can enter his offer for the exchange of the gold nugget using the software application on his cell phone as will be described in more detail below with reference to the process <b>700</b> shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0123" num="0217">As shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, at step <b>702</b>, Bob logs onto the exchange service provider's <b>104</b> software application on his cell phone and enters at steps <b>704</b> and <b>706</b> details of his offer into the application. The details of the offer in this particular example include the entity offered for exchange, i.e. the gold nugget, an expected amount of Bitcoins in exchange for the gold nugget, and a location condition.</p><p id="p-0124" num="0218">The location condition may include one or more of the following information:<ul id="ul0043" list-style="none">    <li id="ul0043-0001" num="0000">    <ul id="ul0044" list-style="none">        <li id="ul0044-0001" num="0219">a) location information indicative of a geographical location or area for the exchange of the gold nugget;</li>        <li id="ul0044-0002" num="0220">b) location format information indicative of a format of the location information;</li>        <li id="ul0044-0003" num="0221">c) range information indicative of a range limit on the geographical location or area relating to the exchange; and</li>        <li id="ul0044-0004" num="0222">d) range format information indicative of a format of the range information.</li>    </ul>    </li></ul></p><p id="p-0125" num="0223">In this particular example, the location condition of Bob's offer specifies an area which is defined as range of 20 metres from Bob's store &#x201c;the Gold Emporium&#x201d;. The range of 20 metres may be specified to allow for known limits to accuracy of GPS readings by Bob's cell phone in the specified area. However, it will be appreciated that a range may be specified for various reasons. For example, the location condition may specify a country or a city in which the exchange needs to take place.</p><p id="p-0126" num="0224">Bob may input the above mentioned information into an interface hosted by his service provider's <b>104</b> software application, for example using normal language which can then be translated by the service provider <b>104</b> into a valid offer or, alternatively, Bob may simply enter the information by pre-selecting options, e.g., via drop-down selection menus.</p><p id="p-0127" num="0225">At step <b>708</b>, a redeem script is generated using Bob's public key and Bob's selections which include information concerning the entities Bob is offering for exchange and any conditions including the above location condition associated with the offer. Bob's public key is part of an asymmetric cryptographic pair which comprises a private key and the public key. In addition, the generated redeem script includes a further public key that is the service provider's <b>104</b> public key.</p><p id="p-0128" num="0226">At step <b>710</b>, the software application facilitates Bob to sign the generated redeem script with his private key which corresponds to the above mentioned public key. The generated redeem script may be in a format suitable for a P2SH bitcoin transaction; the invitation details may be stored in metadata fields in place of 32-byte public keys usually used in multisig unlocking scripts as described above.</p><p id="p-0129" num="0227">At step <b>712</b>, a hash of the signed redeem script is generated. At step <b>712</b>, the script along with the hash is published on the publicly available P2P DHT. As mentioned above, this table employs the torrent technique so it is distributed rather than centralised and hence it will remain publicly accessible and safe from alteration. The invitation can be accessed by other users and exchange service providers.</p><p id="p-0130" num="0228"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a format of the metadata for Bob's script, according to one embodiment. In the invitation of the script, Bob requests Bitcoins in exchange for a gold nugget. As will be explained below in more detail, <figref idref="DRAWINGS">FIG. <b>12</b></figref> also shows the above mentioned location condition which is added to the invitation.</p><p id="p-0131" num="0229">The general format of condition metadata blocks in the P2P Exchange model is shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>. Metadata blocks are 32 bytes long. The first two bytes of a Condition metadata block are a numeric code which defines the condition, as specified via a separate look-up table such as distributed hash table. The format for the remaining 30 bytes of a Condition metadata block will depend on the Condition.</p><p id="p-0132" num="0230">As shown in the example for Bob's script in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the location condition in this particular scenario is allocated the value 0004.</p><p id="p-0133" num="0231">The general format of a location condition code is shown in <figref idref="DRAWINGS">FIG. <b>14</b></figref> in which explanations for the fields are as follows:<ul id="ul0045" list-style="none">    <li id="ul0045-0001" num="0000">    <ul id="ul0046" list-style="none">        <li id="ul0046-0001" num="0232">LocationCode 2 byte numeric code indicating the format of the Location. A separate look-up table defines the codes and their specification.</li>        <li id="ul0046-0002" num="0233">RangeCode Optional value indicating the units of measurement to specify an acceptable range subcondition. If set to 0x00 then no range subcondition is specified. A separate look-up table defines the codes and their specification.</li>        <li id="ul0046-0003" num="0234">Range Optional value indicating the acceptable range subcondition. This value is irrelevant (ignored) if RangeCode=0x00</li>        <li id="ul0046-0004" num="0235">Location The actual location, specified in the format required by the LocationCode</li>    </ul>    </li></ul></p><p id="p-0134" num="0236">As will be appreciated, a location condition can be specified in different formats. Some specific, non-limiting examples are given below:</p><p id="p-0135" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="56pt" align="left"/><colspec colname="2" colwidth="91pt" align="left"/><colspec colname="3" colwidth="112pt" align="left"/><thead><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row><row><entry>LocationCode</entry><entry>Description</entry><entry>Byte Format</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>0x0101</entry><entry>GPS Co-ordinates</entry><entry>01-01: &#x2018;N&#x2019;/&#x2018;S&#x2019;</entry></row><row><entry/><entry/><entry>02-08: degrees (NN) minutes</entry></row><row><entry/><entry/><entry>(NN.NNN)</entry></row><row><entry/><entry/><entry>09-09: &#x2018;E&#x2019;/&#x2018;W&#x2019;</entry></row><row><entry/><entry/><entry>10-17: degrees (NN) minutes</entry></row><row><entry/><entry/><entry>(NN.NNN)</entry></row><row><entry>0x0001</entry><entry>USA Zip Code</entry><entry>01-05: NNNNN</entry></row><row><entry>0x0061</entry><entry>Australia Postcode</entry><entry>01-04: NNNN</entry></row><row><entry>0x1044</entry><entry>UK Building Name and Level</entry><entry>01-23: first 23 characters of building</entry></row><row><entry/><entry/><entry>name</entry></row><row><entry/><entry/><entry>24-26: level number (NNN)</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0136" num="0237">As mentioned above, the location condition may further specify a range from the specified location. The range may allow for known limits to accuracy of GPS readings or may define an area in which the exchange of the entity must take place for the exchange to be finalised. Some examples for the format of the range code is given below:</p><p id="p-0137" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="140pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>RangeCode</entry><entry>Description</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>0x00</entry><entry>No Range specified</entry></row><row><entry/><entry>0x01</entry><entry>Metres</entry></row><row><entry/><entry>0x02</entry><entry>Kilometres</entry></row><row><entry/><entry>0x11</entry><entry>Within adjoining category [e.g.:</entry></row><row><entry/><entry/><entry>if LocationCode = 0x0001 then this</entry></row><row><entry/><entry/><entry>would mean &#x2018;adjoining USA postcode&#x2019;;</entry></row><row><entry/><entry/><entry>if LocationCode = 0x1044 then this</entry></row><row><entry/><entry/><entry>would mean &#x2018;next floor above or below&#x2019;;</entry></row><row><entry/><entry/><entry>etc.]</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><heading id="h-0013" level="2">Matching an Offer</heading><p id="p-0138" num="0238">In a fourth example which refers to the above described third example, Alice has seen Bob's offer on the P2P DHT and goes to Bob's Gold Emporium as specified in the location condition of Bob's script to inspect the gold nugget.</p><p id="p-0139" num="0239">On examining the gold nugget and negotiating an amount of Bitcoins in exchange for the gold nugget, Alice creates a matching offer using a software application that is running on her cell phone. In particular, the software application facilitates Alice to enter details of the entities to be exchanged, i.e. one gold nugget in exchange for the negotiated amount of Bitcoins. Using the entered details, a redeem script is generated for Alice which is then hashed and published together with the hash of the redeem script on the P2P DHT. The metadata of Alice's offer is illustrated in <figref idref="DRAWINGS">FIG. <b>15</b></figref>.</p><p id="p-0140" num="0240">In this particular example, Bob's script as shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref> does not specify a minimum or maximum rate of Bitcoins for the exchange to be finalised. Thus, when the exchange service provider <b>104</b> runs the matching algorithm as described above to identify a match between Bob's and Alice's offers, Bob will be given an option to accept Alice's offer.</p><p id="p-0141" num="0241">In this particular example, the process of matching Alice's and Bob's scripts further includes a step of verifying that the location condition is fulfilled which is specified in Bob's script as shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. This verification step may be performed in various ways.</p><p id="p-0142" num="0242">For example, the exchange service provider <b>104</b> may communicate with Bob's and/or Alice's cell phone to determine the location of the cell phone. This location may then be compared with the location and the range specified in the location condition of Bob's script.</p><p id="p-0143" num="0243">If the location is specified as a building name, such as Bob's Gold Emporium, the exchange service provider <b>104</b> may determine GPS coordinates associated with this location by communicating with a proprietary database or a further software application, such as Google maps. The determined GPS coordinates may then be compared with the GPS coordinates of Bob's or Alice's cell phone.</p><p id="p-0144" num="0244">In a further example, the exchange service provider <b>104</b> may facilitate manual input by Bob and/or Alice to confirm that the location condition is fulfilled. This step may, for example, be conducted together with the step of accepting Alice's offer.</p><p id="p-0145" num="0245">If the location condition is found to be fulfilled, the exchange service provider <b>104</b> will attempt to create and finalise a transaction between Alice and Bob. In one example, a transaction is only broadcast onto the P2P DL if the location of the transactional broadcast is within X metres of specified coordinates. This ensures that the transaction can only take place at a specified location, for example, Bob's Gold Emporium.</p><p id="p-0146" num="0246">The final exchange may be executed by creating one or more bitcoin transactions that spend the outputs of each invitation transaction as described with reference to the first and second examples shown in <figref idref="DRAWINGS">FIGS. <b>2</b> to <b>10</b></figref>.</p><p id="p-0147" num="0000">Transactions Involving More than Two Parties</p><p id="p-0148" num="0247">Transactions described above have been in relation to exchanges between two parties and two entities. It will, however, be appreciated that in some examples more than two parties and/or entities may be involved in an exchange. Consider, for example, the following scenario. Alice wishes to exchange bitcoins for apples, but will only accept a minimum of 1000 apples. Bob wants to exchange apples for bitcoins, but can only supply 500 apples. Carol wants to exchange apples for bitcoins but can only supply 600 apples. In such a circumstance, the conditions of Alice's invitation cannot be satisfied by Bob or Carol individually. Together, however, Bob and Carol have 1100 apples and so can satisfy Alice's invitation conditions.</p><p id="p-0149" num="0248">In another example, Alice wishes to exchange tokenised CAD for tokenised GBP, Bob wishes to exchange tokenised GBP for tokenised AUD, and Carol wishes to exchange tokenised AUD for tokenised CAD. No direct match exists between any two of the three parties, but combined, each of the invitations can be satisfied&#x2014;Alice's tokenised CAD can go to Carol, Bob's tokenised GBP can go to Alice, and Carol's tokenised AUD can go to Bob. <figref idref="DRAWINGS">FIGS. <b>16</b>A to <b>16</b>C</figref> show exemplary transaction tables for transactions between Alice, Bob and Carol.</p><p id="p-0150" num="0249">Referring first to <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>, a transaction table is shown for the payment from Alice to Carol. Alice has $1500 of tokenised CAD and needs tokenised GBP500 from Bob. The transaction pays tokenised CAD1000 to Carol from Alice and Alice pays herself the remaining tokenised CAD500 (1500&#x2212;1000). Using regular BTC, Alice may pay the service provider's fee (which may be a flat fee as is shown in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> or a fee dependent on the value of the transfer) and pays herself the change minus 1000 satoshis for the miner.</p><p id="p-0151" num="0250">Referring now to <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>, a transaction table is shown for the payment of tokenised GBP to Alice from Bob. Bob has tokenised GBP750 and needs tokenised AUD from Carol. The transaction pays tokenised GBP500 to Alice from Bob and Bob pays himself the remaining tokenised GBP250 (750&#x2212;500). Using regular BTC, Bob may pay the service provider's fee (which may be a flat fee as is shown in <figref idref="DRAWINGS">FIG. <b>16</b>B</figref> or a fee dependent on the value of the transfer) and pays himself the change minus 1000 satoshis for the miner.</p><p id="p-0152" num="0251">Referring now to <figref idref="DRAWINGS">FIG. <b>16</b>C</figref>, a transaction table is shown for the payment of tokenised AUD to Carol from Bob. Carol has tokenised AUD1500 and needs tokenised CAD from Alice. The transaction pays tokenised AUD1000 to Bob from Carol and Carol pays herself the remaining tokenised AUD500 (1500&#x2212;1000). Using regular BTC, Carol may pay the service provider's fee (which may be a flat fee as is shown in <figref idref="DRAWINGS">FIG. <b>11</b>C</figref> or a fee dependent on the value of the transfer) and pays herself the change minus 1000 satoshis for the miner. It will be appreciated that where an exchange is composed of two or more separate transactions (e.g. 1: Alice transfers to Bob; and 2: Bob transfers to Alice), the transactions may be linked so as to ensure that either every party receives their entitlement or none of them do. This may be achieved by satisfying the following condition (using an example of two parties, A and B, but easily extendable to three or more parties): The transaction output transferring from A to B exists and is spendable by B only if the transaction output transferring from B to A also exists and is spendable by A at the same time, and vice versa. It is noted that party A and party B refer to the required set of signatories for each transaction, not just Alice and Bob (for example, it may include token Issuers, escrow, etc.).</p><p id="p-0153" num="0000">Receiving a Selection from a User</p><p id="p-0154" num="0252">In a variation of the example exchange described above with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, instead of a service provider parsing the P2P DHT for matching orders, users themselves may scan or browse the P2P DHT to view the current invitations as described with reference to the above fourth example. Browsing may be facilitated by a third-party, such as the exchange service provider <b>104</b>. The third-party may provide an interface within which users can browse, scan and search for invitations which they might be interested in.</p><p id="p-0155" num="0253">Users may then skip the process of entering their own prospective invitation on the P2P DHT, but instead choose to create an invitation which matches or nearly matches the order which they're interested in.</p><p id="p-0156" num="0254">For example, Bob may find Alice's invitation on the P2P DHT via a browsing or searching interface. In which case Bob may enter his own invitation to match that of Alice's. Bob may do this in one of several ways. In one example, there may be a facility on the interface which displays Alice's order to &#x2018;Accept&#x2019; her order. If Bob is a client of the same exchange service provider <b>104</b> as that which Alice used for the invitation, they may already have access to Bob's eWallet (public key etc.) and can thus create the matching order based on such information. Accordingly, the exchange service provider <b>110</b> may generate a redeem script for the matching invitation, send this to Bob for signing, receive the signed redeem script and enter the order onto the P2P DHT in preparation for the transaction. If Bob is not a client of Alice's exchange service provider <b>104</b>, a facility may be provided to allow Bob to enter the required information and authorisations that can then enable the Service provider to create Bob's matching order. The same process as that described above with reference to <figref idref="DRAWINGS">FIGS. <b>7</b> and <b>8</b></figref> may then follow.</p><p id="p-0157" num="0255">The above example describes the exchange of BTC for tokenised CAD. However, it will be appreciated that the system <b>100</b> works for any type of exchange including, for example, BTC for token of any type (i.e. representing any contract, not just for currency contracts), token of any type for token of any other type, BTC for goods/services, tokens for goods/services, or goods/services for goods/services. Additionally and theoretically, the above process can be modified to the exchange of BTC for BTC, although such an exchange has no real meaning.</p><heading id="h-0014" level="2">Exchanging Goods/Services</heading><p id="p-0158" num="0256">A slight variation of the above described transaction process is required when goods/services are involved in the exchange.</p><p id="p-0159" num="0257">In such a case, the transaction (of the goods and/or services) comprises a description of the goods or services involved in the exchange. Unlike a token, which is represented by a contract or title deed, the description does not form a contract.</p><p id="p-0160" num="0258">The description may or may not uniquely identify the item. For example, where a physical item is involved in the transaction, the description may refer explicitly to a unique identifier associated with that physical item. Additionally or alternatively, description metadata may include one or more of the following: a) a general description of a desired item offered or requested, e.g., &#x201c;dishwasher, &#x3c;3 years&#x201d;, b) reference to a specific item for sale on an auction website, e.g., &#x201c;second hand product put up for sale on an auction site&#x201d;, c) any number of an item type, e.g., advertise 15 t-shirts for sale that can be bought as singles or any quantity up to 15, d) reference to cash, in any specified currency, e) description of labour and payment per single job completion or for regular lawn mowing (repeating job) with payment per repetition or hour, or f) one or more keywords, e.g. &#x201c;dishwasher.&#x201d;</p><p id="p-0161" num="0259">With regard to services, services may be backed by a contract as with a token. As such, a service may be divisible into shares, and non-divisible services may be considered as one-time jobs, i.e. divisible but comprising a single share (1 share). If the service is non-divisible, it may be treated as a token for the purpose of invitation and exchange. Where an item is backed by a token it is treated as a token for the purpose of both invitation and exchange and is exchanged in the same manner as other tokens, such as tokens for fiat currency.</p><p id="p-0162" num="0260">An example of a transaction involving a physical item associated with a unique identifier will now be described. Similar to previous examples, in the present example, Alice has used her exchange provider to place an invitation on the P2P DL and P2P DHT. The invitation includes a description that she will buy a physical item having unique identifier XYZ123, which may relate to Rafael's masterpiece Deposition of Christ, for no more than 2500 BTC. Equally, Bob may have placed a matching invitation that he will sell item XYZ123 for no less than 2400 BTC. Alice may have browsed the P2P DL and found the item with item number XYZ123 and placed a matching order based on this information or, alternatively, Alice may have placed a generic invitation which is then matched by a third party, e.g., an exchange service provider, and subsequently a new invitation including the catalogue item number and description is made to match Bob's order.</p><p id="p-0163" num="0261">For transactions involving unique IDs, it will be appreciated that such IDs must be unique not only to a particular exchange service provider, but also across the entire P2P DL. Therefore, if the unique identifier is not unique to the device (e.g. the devices serial number) then the exchange service provider may generate a unique identifier for the device. To ensure that each identifier is unique to the entire P2P DL, each exchange service provider may, for example, have their own unique code prefixed to numbers they use to uniquely identify products being advertised on the P2P DL.</p><p id="p-0164" num="0262">Once an agreement has been reached between Alice and Bob, the transactions may take place in accordance with the example transaction processes described above with reference to <figref idref="DRAWINGS">FIGS. <b>7</b> to <b>10</b></figref>.</p><p id="p-0165" num="0263">A further example of a transaction involving a physical item will now be described. In this example, however, the item does not have a unique identifier associated therewith.</p><p id="p-0166" num="0264">Where an invitation includes an offer to sell a plurality of similar items, metadata may be required to describe the maximum and minimum quantity of items which can be bought with any one transaction. For example, Alice may place an invitation inferring that she will sell up to 15 Dead Lizard 2015 concert tour t-shirts for 0.025 BTC each&#x2014;at least 5 per transaction. In this case, metadata values may include a minimum rate (0.025BTC/15 items); a maximum quantity (Offer-QTY-max (15)) and a minimum quantity (Offer-QTY-min (5)). The table below summarises the metadata associated with the invitation.</p><p id="p-0167" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="21pt" align="left"/><colspec colname="2" colwidth="63pt" align="left"/><colspec colname="3" colwidth="42pt" align="center"/><colspec colname="4" colwidth="140pt" align="left"/><thead><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row><row><entry>Field</entry><entry>Sub-field</entry><entry>Value</entry><entry>Comments</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>A</entry><entry>ContractType</entry><entry>0x0000FF01</entry><entry>Indicates P2P Exchange Order</entry></row><row><entry/><entry>ContractPointer</entry><entry/><entry>IPv6 address of the actual contract file location</entry></row><row><entry/><entry>OfferRequestCodes</entry><entry/><entry>Coded value indicating Offer-type (4 bits) +</entry></row><row><entry/><entry/><entry/><entry>Request-type (4 bits)</entry></row><row><entry/><entry>Conditions</entry><entry>00000011<sub>2</sub></entry><entry>Bitfield - flags indicating the presence of extra</entry></row><row><entry/><entry/><entry/><entry>conditions in metadata fields</entry></row><row><entry/><entry>Rate-min</entry><entry>0.025</entry><entry>BTC/15 items</entry></row><row><entry/><entry>Rate-max</entry></row><row><entry>C</entry><entry>Offer-QTY-max</entry><entry>15</entry><entry>Maximum quantity of t-shirts per sale</entry></row><row><entry/><entry>Offer-QTY-min</entry><entry>5</entry><entry>Minimum quantity of t-shirts per sale</entry></row><row><entry/><entry>Request-QTY-max</entry></row><row><entry/><entry>Request-QTY-min</entry></row><row><entry>D</entry><entry>Offer-Item-ID</entry><entry>01245D2SA</entry><entry>Unique ID related to item</entry></row><row><entry/><entry>Request-item-ID</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0168" num="0265">The actual BTC value on the payment transaction will then be calculated by an exchange service provider. Because this transaction simply represents an invitation to perform an exchange, the actual value of the transaction may be small, e.g. as small as dust (546 satoshis). Alternatively, as described below, the value may be a nominal amount required by a service provider to guarantee an invitation (e.g. so Alice is incentivised not to pull out).</p><p id="p-0169" num="0266">In a further example, goods in the form of hard currency (cash) may be exchanged. For example, Alice may place an invitation to sell bitcoin for Canadian dollars (hard currency instead of tokenised) with a maximum purchase of 150 BTC. The invitation may additionally include a location condition that the exchange must take place at her shop address: 371 Whimsy Avenue, Brentford. After placing a matching invitation, in order to finalise the transaction, Bob may then bring the cash to Alice's shop to hand over in exchange for a payment in bitcoin transaction. The actual digital transaction of bitcoins to Bob and of the digital record of transfer of hard cash to Alice, may then take place once Bob and Alice have met in her shop for the physical transfer.</p><p id="p-0170" num="0267">In the case of a transaction involving goods/services swapped for other goods/service, it will be appreciated that the transaction on the P2P DL exists as a record only and not for exchanging any value between parties (apart from any fees to service providers etc.). Users may use the system and opt to pay the nominal service fee for entry of the transaction onto the P2P DL so that the exchange is permanently recorded.</p><p id="p-0171" num="0268">It is noted that the original invitation transactions act as invitations only and not as value transfer or as records of events. If a goods-for-goods exchange occurs, such that the exchange involves physical items only, the final exchange need not be recorded on the P2P DL, since the P2P DL is not required to complete any transactions in the final exchange. Notwithstanding, if parties to the exchange of physical items wish to record the exchange on the P2P DL, they may each spend their invitation transactions to one another subject to a fee for the miner for doing so. If the parties do not wish to record the final exchange on the P2P DL, they may each spend their invitation transactions back to themselves, or even leave them unspent on the P2P DL.</p><p id="p-0172" num="0269">In the case of an exchange involving BTC for goods, or tokens for goods, at least one transaction is spent on the P2P DL to transfer the value of the BTC or token. In this case, the invitation transaction offering the goods may or may not be spent since the value of the exchange (goods) is not transferred by spending that invitation transaction. However, again, parties may decide to spend the transaction nonetheless, in order to provide a permanent record of the transfer (e.g., a receipt of sale).</p><p id="p-0173" num="0270">The amount spent on the above transactions might not represent the offered amount in some cases, particularly when Alice's offer is not bitcoin or tokens but goods/service. Instead, the Service Provider might require a &#x2018;deposit&#x2019; by Alice of an amount representing the value of the goods, or might only require a nominal amount if Alice is able to &#x2018;guarantee&#x2019; the offer in another way, or (iii) might itself provide the bitcoins on Alice's behalf (she might not have any) and cover this funding cost by whatever means they charge a fee to the client.</p><p id="p-0174" num="0271">In embodiments described above, users' invitations are published on a P2P DHT. In some embodiments, however, a user's invitation (e.g. the script and script hash) may be published on a website, or sent directly to another user.</p><p id="p-0175" num="0272">In some embodiments, a user's invitation may be stored locally by a service provider. For example, the service provider may host a private auction in which only certain users can access the user's invitation details.</p><p id="p-0176" num="0273">It will be appreciated by persons skilled in the art that numerous variations and/or modifications may be made to the above-described embodiments, without departing from the broad general scope of the present disclosure. The present embodiments are, therefore, to be considered in all respects as illustrative and not restrictive.</p><p id="p-0177" num="0274">The steps, features, integers, compositions and/or compounds disclosed herein or indicated in the specification of this application individually or collectively, and any and all combinations of two or more of said steps or features.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-20" num="01-20"><claim-text><b>1</b>-<b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A computer implemented method comprising:<claim-text>obtaining a first user public key (P1A) associated with a first user, wherein the first user public key (P1A) is part of a key pair comprising the first user public key (P1A) and a first user private key (V1A);</claim-text><claim-text>hashing a first script to generate a first script hash, the first script comprising first metadata the first user public key (P1A) and an first invitation for an exchange indicating a first entity and a location for the exchange; and</claim-text><claim-text>publishing the first script and the first script hash on a distributed hash table (DHT).</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising:<claim-text>determining that the first invitation of the first script matches a second script that is published on the DHT by comparing at least the first entity indicated in the first script matches a second entity indicated in the second script.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The method according to <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein:<claim-text>the second script comprises a second metadata associated with a second invitation for an exchange of a second entity by a second user, the second metadata comprising an indication of the second entity to be offered in exchange for the first entity;</claim-text><claim-text>a second user public key (P2A) is associated with the second user, the second user public key (P2A) part of an asymmetric cryptographic pair comprising the second user public key (P2A) and a second user private key (V2A); and</claim-text><claim-text>a second third-party public key (P2T) is associated with a second third-party, the second third-party public key (P2T) part of an asymmetric cryptographic pair comprising the second third-party public key (P2T) and a second third-party private key (V2T).</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method according to <claim-ref idref="CLM-00023">claim 23</claim-ref>, further comprising:<claim-text>determining whether a condition indicative of the location condition is fulfilled by identifying a first location of the first user or a second location of the second user.</claim-text></claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The method according to <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein:<claim-text>the first script further comprises a first third-party public key (P1T) associated with a first third-party, wherein the first third-party public key (P1T) is part of an asymmetric cryptographic pair comprising the first third-party public key (P1T) and a first third-party private key (V1T).</claim-text></claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein:<claim-text>the invitation is linked to a blockchain transaction via the first script hash.</claim-text></claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein:<claim-text>the first script is a redeem script comprising a token representative of a tokenized entity.</claim-text></claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein:<claim-text>the first metadata is obtained from a redeem script.</claim-text></claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein a condition indicative of the location comprises one or more of:<claim-text>location information indicative of a geographical location or area for the exchange of the first entity,</claim-text><claim-text>location format information indicative of a format of the location information,</claim-text><claim-text>range information indicative of a range limit on the geographical location or area relating to the exchange, or</claim-text><claim-text>range format information indicative of a format of the range information.</claim-text></claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising:<claim-text>generating a first invitation transaction for inclusion on a peer-to-peer (P2P) distributed ledger, the first invitation transaction comprising an indication of a second entity to be transferred in exchange for the first entity, and the first script hash; and</claim-text><claim-text>recording a first exchange transaction on a P2P distributed ledger.</claim-text></claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. The method according to <claim-ref idref="CLM-00030">claim 30</claim-ref>, wherein the first exchange transaction comprises one or more of:<claim-text>the first script;</claim-text><claim-text>the first user public key (P1A);</claim-text><claim-text>a first third-party public key (P1T);</claim-text><claim-text>a first input provided from an output of the first invitation transaction; or</claim-text><claim-text>a first output indicating a first quantity of a first entity to be transferred to a second user.</claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising:<claim-text>generating a second invitation transaction for inclusion on the P2P distributed ledger, the second invitation transaction comprising an indication of the first entity to be transferred in exchange for the second entity and a second script hash; and</claim-text><claim-text>recording a second exchange transaction on the P2P distributed ledger.</claim-text></claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The method according to <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein the second exchange transaction comprises one or more of:<claim-text>a second script;</claim-text><claim-text>a second user public key (P2A);</claim-text><claim-text>a second third-party public key (P2T);</claim-text><claim-text>a second input provided from an output of the second invitation transaction; or</claim-text><claim-text>a second output indicating a second quantity of a second entity to be transferred to the first user.</claim-text></claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The method according to <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein generating the second exchange transaction comprises:<claim-text>facilitating signing of the second script with a second user private key (V1A); and</claim-text><claim-text>facilitating signing of the second script a second third-party private key (P2T).</claim-text></claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising:<claim-text>generating a first exchange transaction for inclusion a P2P distributed ledger, the first exchange transaction comprising:<claim-text>a first output indicating a first quantity of a first entity to be transferred to a second user; and</claim-text><claim-text>a second output indicating a second quantity of a second entity to be transferred to the first user; and</claim-text></claim-text><claim-text>recording the first exchange transaction on the P2P distributed ledger.</claim-text></claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. The method according to <claim-ref idref="CLM-00035">claim 35</claim-ref>, wherein generating the first exchange transaction comprises:<claim-text>facilitating signing of the first script with a first user private key (V1A); and</claim-text><claim-text>facilitating signing of the first script with a first third-party private key (P1T).</claim-text></claim-text></claim><claim id="CLM-00037" num="00037"><claim-text><b>37</b>. A computer-implemented system comprising:<claim-text>a processor; and</claim-text><claim-text>memory storing non-transitory computer-readable instructions that, when executed by the processor, cause the processor to at least:<claim-text>obtain a first user public key (P1A) associated with a first user, wherein the first user public key (P1A) is part of a key pair comprising the first user public key (P1A) and a first user private key (VILA);</claim-text><claim-text>hash a first script to generate a first script hash, the first script comprising first metadata the first user public key (P1A) and an first invitation for an exchange indicating a first entity and a location for the exchange; and</claim-text><claim-text>publish the first script and the first script hash on a distributed hash table (DHT).</claim-text></claim-text></claim-text></claim><claim id="CLM-00038" num="00038"><claim-text><b>38</b>. The computer-implemented system according to <claim-ref idref="CLM-00037">claim 37</claim-ref>, wherein the instructions include further instructions that cause the processor to:<claim-text>determine that the first invitation of the first script matches a second script that is published on the DHT by comparing at least the first entity indicated in the first script matches a second entity indicated in the second script.</claim-text></claim-text></claim><claim id="CLM-00039" num="00039"><claim-text><b>39</b>. The computer-implemented system according to <claim-ref idref="CLM-00038">claim 38</claim-ref>, wherein:<claim-text>the second script comprises a second metadata associated with a second invitation for an exchange of a second entity by a second user, the second metadata comprising an indication of the second entity to be offered in exchange for the first entity;</claim-text><claim-text>a second user public key (P2A) is associated with the second user, the second user public key (P2A) part of an asymmetric cryptographic pair comprising the second user public key (P2A) and a second user private key (V2A); and</claim-text><claim-text>a second third-party public key (P2T) is associated with a second third-party, the second third-party public key (P2T) part of an asymmetric cryptographic pair comprising the second third-party public key (P2T) and a second third-party private key (V2T).</claim-text></claim-text></claim><claim id="CLM-00040" num="00040"><claim-text><b>40</b>. The computer-implemented system according to <claim-ref idref="CLM-00038">claim 38</claim-ref>, wherein the instructions include further instructions that cause the processor to:<claim-text>generate a first invitation transaction for inclusion on a peer-to-peer (P2P) distributed ledger, the first invitation transaction comprising an indication of a second entity to be transferred in exchange for the first entity, and the first script hash; and</claim-text><claim-text>record an exchange transaction on the P2P distributed ledger.</claim-text></claim-text></claim></claims></us-patent-application>