<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004701A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004701</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17366340</doc-number><date>20210702</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>367</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>367</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">INTEGRATED CIRCUIT DEVELOPMENT USING MACHINE LEARNING-BASED PREDICTION OF POWER, PERFORMANCE, AND AREA</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>International Business Machines Corporation</orgname><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Mahmud</last-name><first-name>Tuhin</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Islam</last-name><first-name>Saiful</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Mathews</last-name><first-name>Abraham</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Wang</last-name><first-name>Geoffrey</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Aspects of the invention include obtaining one or more feature values that define an architecture design of a memory array and implementing a machine learning model to obtain a predicted power, performance, and area (PPA) of the memory array based on the one or more features. The predicted PPA output by the machine leaning model is assessed based on predefined PPA goals. A design of an integrated circuit that includes the memory array is finalized and fabricated based on the predicted PPA meeting the predefined PPA goals.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="73.58mm" wi="158.75mm" file="US20230004701A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="224.37mm" wi="119.21mm" orientation="landscape" file="US20230004701A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="141.65mm" wi="109.22mm" orientation="landscape" file="US20230004701A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="168.66mm" wi="142.92mm" orientation="landscape" file="US20230004701A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="154.35mm" wi="112.01mm" orientation="landscape" file="US20230004701A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="172.97mm" wi="80.94mm" orientation="landscape" file="US20230004701A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">The present invention generally relates to integrated circuit development, and more specifically, to integrated circuit development using machine learning-based prediction of power, performance, and area (PPA).</p><p id="p-0003" num="0002">The development of an integrated circuit (i.e., chip) involves several stages from design through fabrication. Many aspects of the development are performed iteratively to ensure that the chip that is ultimately manufactured meets all design requirements. Defining the chip architecture is one of the earliest phases of integrated circuit development. The power (i.e., power requirement), performance (e.g., timing), and area (i.e., space needed) for the resulting chip, which is the metric by which integrated circuits are commonly evaluated, is largely a consequence of the chip architecture.</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0004" num="0003">Embodiments of the present invention are directed to integrated circuit development using machine learning-based prediction of PPA. A non-limiting example computer-implemented method includes obtaining one or more feature values that define an architecture design of a memory array and implementing a machine learning model to obtain a predicted power, performance, and area (PPA) of the memory array based on the one or more features. The predicted PPA output by the machine leaning model is assessed based on predefined PPA goals, wherein a design of an integrated circuit that includes the memory array is finalized and fabricated based on the predicted PPA meeting the predefined PPA goals.</p><p id="p-0005" num="0004">Other embodiments of the present invention implement features of the above-described method in computer systems and computer program products.</p><p id="p-0006" num="0005">Additional technical features and benefits are realized through the techniques of the present invention. Embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed subject matter. For a better understanding, refer to the detailed description and to the drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0006">The specifics of the exclusive rights described herein are particularly pointed out and distinctly claimed in the claims at the conclusion of the specification. The foregoing and other features and advantages of the embodiments of the invention are apparent from the following detailed description taken in conjunction with the accompanying drawings in which:</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of a system to perform the development of an integrated circuit using machine learning-based prediction of the PPA according to one or more embodiments of the invention;</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a process flow of a method of training a machine learning model to facilitate integrated circuit development using machine learning-based prediction of PPA according to one or more embodiments of the invention;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an exemplary correlation matrix used to perform data analysis as part of the processing shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a process flow of a method of implementing a machine learning model for integrated circuit development using machine learning-based prediction of PPA according to one or more embodiments of the invention; and</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a process flow of a method of fabricating the integrated circuit according to exemplary embodiments of the invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0013" num="0012">The diagrams depicted herein are illustrative. There can be many variations to the diagrams or the operations described therein without departing from the spirit of the invention. For instance, the actions can be performed in a differing order or actions can be added, deleted or modified. Also, the term &#x201c;coupled&#x201d; and variations thereof describes having a communications path between two elements and does not imply a direct connection between the elements with no intervening elements/connections between them. All of these variations are considered a part of the specification.</p><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0014" num="0013">As previously noted, PPA is a metric commonly used to evaluate integrated circuits, also referred to as chips. While optimizations can be performed in later phases of integrated circuit development to ensure that timing and other requirements are met, PPA is largely a result of the architecture definition, which is generated early in the development phase. In this regard, memory arrays may be a proxy for the full integrated circuit. That is, memory arrays generally make up a significant portion of an integrated circuit and, thus, are understood to be a determinative factor in the PPA of the chip.</p><p id="p-0015" num="0014">Memory array architectures are defined by the needs of the parent logic units that use them. Design features such as the number of read and write ports, the number of entries and bits, and clock domain are selected based on those logic units. When a parent logic unit requests a memory array macro, a sizing is provided that gives an estimate of the PPA of the macro. This is used to get an early estimate of timing, floor planning, and power, which, in turn, help to determine chip frequency, die size, and thermal power of the chip. The estimate is actually a prediction of what the PPA of the memory array will be. The prediction of PPA can also be used to modify features of the memory array, as needed, to improve the PPA of the memory array and, ultimately, the chip.</p><p id="p-0016" num="0015">A prior approach to predicting PPA of a memory array design involves manually analyzing PPA data from previously completed integrated circuit designs using spreadsheet calculations. The analysis provides an indication of which features have the greatest effect on PPA and, thus, informs tradeoffs made during the design of the memory array. However, because the analysis is manual, the number of features that can practically be considered is limited. This limitation can, in turn, limit the accuracy with which PPA can be predicted and, consequently, the optimization that can be achieved.</p><p id="p-0017" num="0016">Embodiments of the invention relate to integrated circuit development using machine learning-based prediction of PPA. As previously noted, predicting the PPA based on architecture design of memory arrays to optimize the features of the memory arrays is specifically discussed based on the influence of memory array PPA on the PPA of the overall chip. However, the processes detailed herein may apply to predicting PPA of other components (e.g., logic units), as well. By replacing the manual data analysis with a machine learning model, more features can easily be considered. The machine learning-based model becomes more accurate as the number of features and the number of previous designs that are considered is increased.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of a system <b>100</b> to perform the development of an integrated circuit <b>120</b> using machine learning-based prediction of the PPA according to one or more embodiments. Exemplary memory arrays <b>125</b> are indicated as being part of the integrated circuit <b>120</b>. The system <b>100</b> includes a processing system <b>110</b> used to generate the design that is ultimately fabricated into the integrated circuit <b>120</b>. The steps involved in the fabrication of the integrated circuit <b>120</b> are well-known and briefly described herein. Once the physical layout is finalized, based, in part, on selection of a via mesh specification among universally routable via mesh specifications developed according to embodiments of the invention, the finalized physical layout is provided to a foundry. Masks are generated for each layer of the integrated circuit based on the finalized physical layout. Then, the wafer is processed in the sequence of the mask order. The processing includes photolithography and etch. This is further discussed with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0019" num="0018">The processing system <b>110</b> has one or more central processing units (processors) <b>21</b><i>a, </i><b>21</b><i>b, </i><b>21</b><i>c, </i>etc. (collectively or generically referred to as processor(s) <b>21</b> and/or as processing device(s)). According to one or more embodiments of the present invention, each processor <b>21</b> can include a reduced instruction set computer (RISC) microprocessor. Processors <b>21</b> are coupled to system memory (e.g., random access memory (RAM) <b>24</b>) and various other components via a system bus <b>33</b>. Read only memory (ROM) <b>22</b> is coupled to system bus <b>33</b> and can include a basic input/output system (BIOS), which controls certain basic functions of processing system <b>110</b>.</p><p id="p-0020" num="0019">Further illustrated are an input/output (I/O) adapter <b>27</b> and a communications adapter <b>26</b> coupled to system bus <b>33</b>. I/O adapter <b>27</b> can be a small computer system interface (SCSI) adapter that communicates with a hard disk <b>23</b> and/or a tape storage drive <b>25</b> or any other similar component. I/O adapter <b>27</b>, hard disk <b>23</b>, and tape storage device <b>25</b> are collectively referred to herein as mass storage <b>34</b>. Operating system <b>40</b> for execution on processing system <b>110</b> can be stored in mass storage <b>34</b>. The RAM <b>22</b>, ROM <b>24</b>, and mass storage <b>34</b> are examples of memory <b>19</b> of the processing system <b>110</b>. A network adapter <b>26</b> interconnects system bus <b>33</b> with an outside network <b>36</b> enabling the processing system <b>110</b> to communicate with other such systems.</p><p id="p-0021" num="0020">A display (e.g., a display monitor) <b>35</b> is connected to system bus <b>33</b> by display adaptor <b>32</b>, which can include a graphics adapter to improve the performance of graphics intensive applications and a video controller. According to one or more embodiments of the present invention, adapters <b>26</b>, <b>27</b>, and/or <b>32</b> can be connected to one or more I/O busses that are connected to system bus <b>33</b> via an intermediate bus bridge (not shown). Suitable I/O buses for connecting peripheral devices such as hard disk controllers, network adapters, and graphics adapters typically include common protocols, such as the Peripheral Component Interconnect (PCI). Additional input/output devices are shown as connected to system bus <b>33</b> via user interface adapter <b>28</b> and display adapter <b>32</b>. A keyboard <b>29</b>, mouse <b>30</b>, and speaker <b>31</b> can be interconnected to system bus <b>33</b> via user interface adapter <b>28</b>, which can include, for example, a Super I/O chip integrating multiple device adapters into a single integrated circuit.</p><p id="p-0022" num="0021">According to one or more embodiments of the present invention, processing system <b>110</b> includes a graphics processing unit <b>37</b>. Graphics processing unit <b>37</b> is a specialized electronic circuit designed to manipulate and alter memory to accelerate the creation of images in a frame buffer intended for output to a display. In general, graphics processing unit <b>37</b> is very efficient at manipulating computer graphics and image processing and has a highly parallel structure that makes it more effective than general-purpose CPUs for algorithms where processing of large blocks of data is done in parallel.</p><p id="p-0023" num="0022">Thus, as configured herein, processing system <b>110</b> includes processing capability in the form of processors <b>21</b>, storage capability including system memory (e.g., RAM <b>24</b>), and mass storage <b>34</b>, input means such as keyboard <b>29</b> and mouse <b>30</b>, and output capability including speaker <b>31</b> and display <b>35</b>. According to one or more embodiments of the present invention, a portion of system memory (e.g., RAM <b>24</b>) and mass storage <b>34</b> collectively store an operating system such as the AIX&#xae; operating system from IBM Corporation to coordinate the functions of the various components shown in processing system <b>110</b>.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a process flow of a method <b>200</b> of training a machine learning model to facilitate integrated circuit development using machine learning-based prediction of PPA according to one or more embodiments of the invention. The training and implementation, which is discussed with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, may be technology specific. That is, a different machine learning model may be trained for 14 nanometer (nm) versus 7 nm, for example. Alternately, cross technology training may be used. For example, scaling may be used to implement a machine learning model that was trained using data from 14 nm technologies for prediction of PPA in 7 nm technologies. The terms 14 nm and 7 nm are used in the art to refer to different semiconductor fabrication process technologies.</p><p id="p-0025" num="0024">At block <b>210</b>, obtaining data from previous (completed) designs refers to obtaining stored data including features of memory arrays and the PPA corresponding with the feature values. The data mining may be performed using known Perl or Python-BASED tools, for example. As previously noted, the data may be technology specific. Thus, for the development of a <b>14</b> nm integrated circuit, only data from memory arrays used in other <b>14</b> nm chips may be mined at block <b>210</b>.</p><p id="p-0026" num="0025">At block <b>220</b>, processing the data to obtain input data for machine learning may refer to weighting and formatting the data. As part of the processing at block <b>220</b>, a correlation matrix may be used to initially narrow down the features of interest based on correlated features. A correlation matrix refers to a matrix of feature values and PPA components. That is, by examining the data from previous memory arrays, the features that most strongly correlated with the resultant PPA (e.g., differences in the values of these features caused proportional changes in power, performance, and/or area) may be identified. This is further discussed with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Additionally, or alternately, as part of the processing at block <b>220</b>, subject matter experts may be consulted to identify the features of greatest interest. In order to provide input to the machine learning, at block <b>230</b>, syntax errors, omissions, and other formalities may also be addressed as part of the processing at block <b>220</b>.</p><p id="p-0027" num="0026">At block <b>230</b>, implementing the machine learning model may refer to implementing any known machine learning approach. The implementation at block <b>230</b> is part of the training and uses input data (i.e., features) for which the PPA is known. Exemplary machine learning models include linear regression and different varieties of non-linear regression. An ensemble model may be implemented that includes multiple weighted models. The weighting accounts for the fact that different models may provide different accuracy levels in the PPA result based on different conditions. The output of the machine learning model may be an aggregation (e.g., average, mean) of the power, performance, and area values that are output by each model of the ensemble.</p><p id="p-0028" num="0027">At block <b>240</b>, comparing the output PPA of the machine learning model (implemented at block <b>230</b>) with the actual PPA that resulted according to the historic data provides an indication of how closely the machine learning model (e.g., each model of an ensemble) predicted the power, performance, and area. As indicated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, this result is provided to update the machine learning model and may result in another training iteration beginning at block <b>210</b>. For example, additional features may be added (to those from block <b>220</b>) or weightings (at block <b>230</b>) may be adjusted.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an exemplary correlation matrix <b>300</b> used to perform data analysis as part of the processing at block <b>220</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The matrix <b>300</b> shows both features and components of PPA along perpendicular axes. Exemplary features include the entry count (Entires), the bit count (Bits), the number of read ports (Read_Ports), and the number of write ports (Write_Ports). Other features include repairability, types of clocks and voltages, output loads, read/write driver strengths, types of interconnect metal used for read/write drivers, and set/way capability. Exemplary components of the power value indicate a read power component (Read_Ceff) and a write power component (Write_Ceff). For example, the correlation matrix may indicate that the bit count (Bits) has a strong correlation with components that indicate power (Read_Ceff, Write_Ceff). Thus, the bit count may be a feature that is initially tested, via inclusion in the training data set, to determine if the bit count is a determinative feature (i.e., a feature whose value helps to predict power, performance, and/or area).</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a process flow of a method <b>400</b> of implementing a machine learning model for integrated circuit development using machine learning-based prediction of PPA according to one or more embodiments of the invention. The processes shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> are performed after the machine learning model is trained according to the processes shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. At block <b>410</b>, obtaining feature values from a proposed architecture design refers to obtaining, for example, the bit count, the entry count, the number of read ports, and the number of write ports for a memory array that is in the early design phase.</p><p id="p-0031" num="0030">As discussed with reference to block <b>220</b> and <figref idref="DRAWINGS">FIG. <b>3</b></figref>, features may initially be selected for input in the training of the machine learning model based on their correlation with PPA in data collected from previous memory arrays <b>125</b>. Implementation of the machine learning, at block <b>230</b>, may then indicate which of these correlated features are determinative features. For example, while the bit count may correlate with components of power (e.g., Read_Ceff, Write_Ceff), the trained machine learning model, which is trained at block <b>230</b>, indicates whether a change in bit count results in a change in predicted power (i.e., this feature is determinative of the power, performance, and/or area prediction). Identification of determinative features may improve the accuracy of the prediction of PPA by the machine learning model by indicating which feature values should be obtained at block <b>410</b> (<figref idref="DRAWINGS">FIG. <b>4</b></figref>). As previously noted, by using machine learning rather than the prior manual approach, the identification of determinative features by testing a large number of potential (e.g., correlated) features is made more feasible.</p><p id="p-0032" num="0031">At block <b>420</b>, implementing the machine learning model may refer to implementing a machine learning model that was trained in a technology specific or cross technology manner, as previously discussed. At block <b>430</b>, obtaining and assessing the predicted PPA may involve aggregating power, performance, and area values predicted by each model of an ensemble, for example. Assessment of the PPA is based on design restrictions and goals. For a given technology, the designer may establish these restrictions and goals (i.e., PPA goals) used in assessing PPA. The result of this assessment may be another iteration of the method <b>400</b>. That is, if the predicted PPA is deemed to be insufficient (e.g., power is too high, delay is too long, or the area is too large) then one or more features that make up the architecture model may be modified.</p><p id="p-0033" num="0032">The processes from block <b>410</b> to block <b>430</b> may then be repeated to assess the change in predicted PPA based on the modification to the design or certain architectural features. The assessment at block <b>430</b> may consider the predicted PPA for different memory arrays or additional components, as well. If, based on the assessment of predicted PPA, the proposed architecture design that is associated with the features that are input at block <b>410</b> is deemed sufficient, then the processes at block <b>440</b> are performed. The processes at block <b>440</b> represent all the additional phases in the design and fabrication to obtain the integrated circuit <b>120</b>.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a process flow of a method of fabricating the integrated circuit according to exemplary embodiments of the invention. Once the physical design data is obtained, based, in part, on the processes discussed with reference to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>4</b></figref>, the integrated circuit <b>120</b> can be fabricated according to known processes that are generally described with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Generally, a wafer with multiple copies of the final design is fabricated and cut (i.e., diced) such that each die is one copy of the integrated circuit <b>120</b>. At block <b>510</b>, the processes include fabricating masks for lithography based on the finalized physical layout. At block <b>520</b>, fabricating the wafer includes using the masks to perform photolithography and etching. Once the wafer is diced, testing and sorting each die is performed, at block <b>530</b>, to filter out any faulty die.</p><p id="p-0035" num="0034">Various embodiments of the invention are described herein with reference to the related drawings. Alternative embodiments of the invention can be devised without departing from the scope of this invention. Various connections and positional relationships (e.g., over, below, adjacent, etc.) are set forth between elements in the following description and in the drawings. These connections and/or positional relationships, unless specified otherwise, can be direct or indirect, and the present invention is not intended to be limiting in this respect. Accordingly, a coupling of entities can refer to either a direct or an indirect coupling, and a positional relationship between entities can be a direct or indirect positional relationship. Moreover, the various tasks and process steps described herein can be incorporated into a more comprehensive procedure or process having additional steps or functionality not described in detail herein.</p><p id="p-0036" num="0035">One or more of the methods described herein can be implemented with any or a combination of the following technologies, which are each well known in the art: a discrete logic circuit(s) having logic gates for implementing logic functions upon data signals, an application specific integrated circuit (ASIC) having appropriate combinational logic gates, a programmable gate array(s) (PGA), a field programmable gate array (FPGA), etc.</p><p id="p-0037" num="0036">For the sake of brevity, conventional techniques related to making and using aspects of the invention may or may not be described in detail herein. In particular, various aspects of computing systems and specific computer programs to implement the various technical features described herein are well known. Accordingly, in the interest of brevity, many conventional implementation details are only mentioned briefly herein or are omitted entirely without providing the well-known system and/or process details.</p><p id="p-0038" num="0037">In some embodiments, various functions or acts can take place at a given location and/or in connection with the operation of one or more apparatuses or systems. In some embodiments, a portion of a given function or act can be performed at a first device or location, and the remainder of the function or act can be performed at one or more additional devices or locations.</p><p id="p-0039" num="0038">The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting. As used herein, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms &#x201c;comprises&#x201d; and/or &#x201c;comprising,&#x201d; when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, element components, and/or groups thereof.</p><p id="p-0040" num="0039">The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The present disclosure has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The embodiments were chosen and described in order to best explain the principles of the disclosure and the practical application, and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.</p><p id="p-0041" num="0040">The diagrams depicted herein are illustrative. There can be many variations to the diagram or the steps (or operations) described therein without departing from the spirit of the disclosure. For instance, the actions can be performed in a differing order or actions can be added, deleted or modified. Also, the term &#x201c;coupled&#x201d; describes having a signal path between two elements and does not imply a direct connection between the elements with no intervening elements/connections therebetween. All of these variations are considered a part of the present disclosure.</p><p id="p-0042" num="0041">The following definitions and abbreviations are to be used for the interpretation of the claims and the specification. As used herein, the terms &#x201c;comprises,&#x201d; &#x201c;comprising,&#x201d; &#x201c;includes,&#x201d; &#x201c;including,&#x201d; &#x201c;has,&#x201d; &#x201c;having,&#x201d; &#x201c;contains&#x201d; or &#x201c;containing,&#x201d; or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a composition, a mixture, process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but can include other elements not expressly listed or inherent to such composition, mixture, process, method, article, or apparatus.</p><p id="p-0043" num="0042">Additionally, the term &#x201c;exemplary&#x201d; is used herein to mean &#x201c;serving as an example, instance or illustration.&#x201d; Any embodiment or design described herein as &#x201c;exemplary&#x201d; is not necessarily to be construed as preferred or advantageous over other embodiments or designs. The terms &#x201c;at least one&#x201d; and &#x201c;one or more&#x201d; are understood to include any integer number greater than or equal to one, i.e. one, two, three, four, etc. The terms &#x201c;a plurality&#x201d; are understood to include any integer number greater than or equal to two, i.e. two, three, four, five, etc. The term &#x201c;connection&#x201d; can include both an indirect &#x201c;connection&#x201d; and a direct &#x201c;connection.&#x201d;</p><p id="p-0044" num="0043">The terms &#x201c;about,&#x201d; &#x201c;substantially,&#x201d; &#x201c;approximately,&#x201d; and variations thereof, are intended to include the degree of error associated with measurement of the particular quantity based upon the equipment available at the time of filing the application. For example, &#x201c;about&#x201d; can include a range of &#xb1;8% or 5%, or 2% of a given value.</p><p id="p-0045" num="0044">The present invention may be a system, a method, and/or a computer program product at any possible technical detail level of integration. The computer program product may include a computer readable storage medium (or media) having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.</p><p id="p-0046" num="0045">The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be, for example, but is not limited to, an electronic storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing. A non-exhaustive list of more specific examples of the computer readable storage medium includes the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a static random access memory (SRAM), a portable compact disc read-only memory (CD-ROM), a digital versatile disk (DVD), a memory stick, a floppy disk, a mechanically encoded device such as punch-cards or raised structures in a groove having instructions recorded thereon, and any suitable combination of the foregoing. A computer readable storage medium, as used herein, is not to be construed as being transitory signals per se, such as radio waves or other freely propagating electromagnetic waves, electromagnetic waves propagating through a waveguide or other transmission media (e.g., light pulses passing through a fiber-optic cable), or electrical signals transmitted through a wire.</p><p id="p-0047" num="0046">Computer readable program instructions described herein can be downloaded to respective computing/processing devices from a computer readable storage medium or to an external computer or external storage device via a network, for example, the Internet, a local area network, a wide area network and/or a wireless network. The network may comprise copper transmission cables, optical transmission fibers, wireless transmission, routers, firewalls, switches, gateway computers and/or edge servers. A network adapter card or network interface in each computing/processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing/processing device.</p><p id="p-0048" num="0047">Computer readable program instructions for carrying out operations of the present invention may be assembler instructions, instruction-set-architecture (ISA) instructions, machine instructions, machine dependent instructions, microcode, firmware instructions, state-setting data, configuration data for integrated circuitry, or either source code or object code written in any combination of one or more programming languages, including an object oriented programming language such as Smalltalk, C++, or the like, and procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The computer readable program instructions may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). In some embodiments, electronic circuitry including, for example, programmable logic circuitry, field-programmable gate arrays (FPGA), or programmable logic arrays (PLA) may execute the computer readable program instruction by utilizing state information of the computer readable program instructions to personalize the electronic circuitry, in order to perform aspects of the present invention.</p><p id="p-0049" num="0048">Aspects of the present invention are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems), and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer readable program instructions.</p><p id="p-0050" num="0049">These computer readable program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer, a programmable data processing apparatus, and/or other devices to function in a particular manner, such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function/act specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0051" num="0050">The computer readable program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other device to cause a series of operational steps to be performed on the computer, other programmable apparatus or other device to produce a computer implemented process, such that the instructions which execute on the computer, other programmable apparatus, or other device implement the functions/acts specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0052" num="0051">The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the blocks may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.</p><p id="p-0053" num="0052">The descriptions of the various embodiments of the present invention have been presented for purposes of illustration, but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments, the practical application or technical improvement over technologies found in the marketplace, or to enable others of ordinary skill in the art to understand the embodiments described herein.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>what is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method comprising:<claim-text>obtaining, using a processor, one or more feature values that define an architecture design of a memory array;</claim-text><claim-text>implementing a machine learning model to obtain a predicted power, performance, and area (PPA) of the memory array based on the one or more features; and</claim-text><claim-text>assessing the predicted PPA output by the machine leaning model based on predefined PPA goals, wherein a design of an integrated circuit that includes the memory array is finalized and fabricated based on the predicted PPA meeting the predefined PPA goals.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising training the machine learning model using data from previous architecture designs of memory arrays with known PPA values.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the training the machine learning model further comprises identifying correlated features based on the data from previous architecture designs, each of the correlated features exhibiting a correlation between a value of the correlated feature and the known PPA value.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the training the machine learning model includes comparing a predicted PPA value, obtained by implementing the machine learning model, for each of the previous architecture designs of memory arrays with a corresponding one of the known PPA values.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the training the machine learning model includes identifying determinative features, the determinative features being features among the data from previous architecture designs that are given highest weighting by the machine learning model.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein obtaining the predicted PPA of the memory array includes aggregating a PPA prediction from each model of an ensemble of models that make up the machine learning model.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine learning model is a linear or nonlinear model.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system comprising:<claim-text>a memory having computer readable instructions; and</claim-text><claim-text>one or more processors for executing the computer readable instructions, the computer readable instructions controlling the one or more processors to perform operations comprising:<claim-text>obtaining one or more feature values that define an architecture design of a memory array;</claim-text><claim-text>implementing a machine learning model to obtain a predicted power, performance, and area (PPA) of the memory array based on the one or more features; and</claim-text><claim-text>assessing the predicted PPA output by the machine leaning model based on predefined PPA goals, wherein a design of an integrated circuit that includes the memory array is finalized and fabricated based on the predicted PPA meeting the predefined PPA goals.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising training the machine learning model using data from previous architecture designs of memory arrays with known PPA values.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the training the machine learning model further comprises identifying correlated features based on the data from previous architecture designs, each of the correlated features exhibiting a correlation between a value of the correlated feature and the known PPA value.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the training the machine learning model includes comparing a predicted PPA value, obtained by implementing the machine learning model, for each of the previous architecture designs of memory arrays with a corresponding one of the known PPA values.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the training the machine learning model includes identifying determinative features, the determinative features being features among the data from previous architecture designs that are given highest weighting by the machine learning model.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein obtaining the predicted PPA of the memory array includes aggregating a PPA prediction from each model of an ensemble of models that make up the machine learning model.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the machine learning model is a linear or nonlinear model.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a processor to cause the processor to perform operations comprising:<claim-text>obtaining one or more feature values that define an architecture design of a memory array;</claim-text><claim-text>implementing a machine learning model to obtain a predicted power, performance, and area (PPA) of the memory array based on the one or more features; and</claim-text><claim-text>assessing the predicted PPA output by the machine leaning model based on predefined PPA goals, wherein a design of an integrated circuit that includes the memory array is finalized and fabricated based on the predicted PPA meeting the predefined PPA goals.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer program product according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising training the machine learning model using data from previous architecture designs of memory arrays with known PPA values.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer program product according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the training the machine learning model further comprises identifying correlated features based on the data from previous architecture designs, each of the correlated features exhibiting a correlation between a value of the correlated feature and the known PPA value.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer program product according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the training the machine learning model includes comparing a predicted PPA value, obtained by implementing the machine learning model, for each of the previous architecture designs of memory arrays with a corresponding one of the known PPA values.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer program product according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the training the machine learning model includes identifying determinative features, the determinative features being features among the data from previous architecture designs that are given highest weighting by the machine learning model.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer program product according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, where obtaining the predicted PPA of the memory array includes aggregating a PPA prediction from each model of an ensemble of models that make up the machine learning model.</claim-text></claim></claims></us-patent-application>