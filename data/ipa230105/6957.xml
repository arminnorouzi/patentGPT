<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006958A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006958</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941385</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>214</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>55</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>214</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>1859</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>55</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DEVICES AND METHODS FOR MANAGING SUBSCRIPTIONS OF SUBSCRIBERS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/EP2020/056404</doc-number><date>20200311</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17941385</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>HUAWEI TECHNOLOGIES CO., LTD.</orgname><address><city>Shenzhen</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KOVATSCH</last-name><first-name>Frank Matthias</first-name><address><city>Munich</city><country>DE</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A device for managing subscriptions of subscribers stores subscription entries. Each subscription entry includes information indicating data of interest in a first part, and includes subscriber information related to subscribers of the data of interest in a second part. Moreover, a subscription entry of the subscription entries includes in its second part subscriber information related to at least two subscribers of the data of interest indicated by the information in the first part. The device further provides the data of interest indicated by the information in the first part of the subscription entry to the at least two subscribers associated with the subscriber information in the second part.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="100.16mm" wi="158.75mm" file="US20230006958A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="162.14mm" wi="136.31mm" orientation="landscape" file="US20230006958A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="221.32mm" wi="121.92mm" orientation="landscape" file="US20230006958A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="107.02mm" wi="134.70mm" orientation="landscape" file="US20230006958A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="207.35mm" wi="123.02mm" orientation="landscape" file="US20230006958A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="205.57mm" wi="151.64mm" orientation="landscape" file="US20230006958A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="205.49mm" wi="139.62mm" orientation="landscape" file="US20230006958A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="216.41mm" wi="118.79mm" orientation="landscape" file="US20230006958A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="208.28mm" wi="129.54mm" orientation="landscape" file="US20230006958A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION(S)</heading><p id="p-0002" num="0001">This application is a continuation of International Application No. PCT/EP2020/056404, filed on Mar. 11, 2020, the disclosure of which is hereby incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to data management, and particularly to managing subscriptions of one or more subscribers. To this end, a device and a method are disclosed for managing subscription entries of the one or more subscribers. In particular, the device and method may store the subscription entries is such a way, that information indicating subscribed data of interest is stored in association with information indicating one or more, particularly two or more, subscribers of the data of interest.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Generally, Internet of Things (IoT) and industrial IoT applications rely on push notifications, also referred to as &#x201c;subscriptions&#x201d; or &#x201c;observing&#x201d;, wherein an entity (a &#x201c;Subscriber&#x201d; or &#x201c;Observer&#x201d;) registers its interest in certain data (i.e., data of interest) together with potential filters or Quality of Service (QoS) requirements, at another entity (a &#x201c;Publisher&#x201d; or &#x201c;Server&#x201d;). The latter other entity offers the data of interest, and may inform the entity about any relevant changes (e.g., events or new state).</p><p id="p-0005" num="0004">Some devices provide filters along with the subscribe/observe request, in order to reduce the number of messages sent by the device. This may reduce the bandwidth impact on the number of subscribers. For example, it may be possible reduce the load on the subscribing entity, as these filters set a minimum interval between two consecutive notifications or filters on the data to notify only in relevant cases (e.g., large enough change).</p><p id="p-0006" num="0005">However, such devices have an issue, in particular, they increases the memory footprint on resource-constrained devices, as these filters have to be stored in addition. Further, IoT devices have very limited memories (e.g., 10 KiB of RAM), and hence can usually only store a low number of subscribers. Thus, intermediaries such as application-level gateways, caching proxies, or brokers are introduced, to increase the number of subscribers. This, however, requires additional hardware that has to be purchased and maintained. Moreover, the application-level gateways require reconfiguration, for example, every time a sensor is added, changed, or removed. Caching proxies and brokers may introduce a delay, which is an issue in many applications, in particular for industrial IoT.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">In view of the above-mentioned issues and disadvantages, embodiments of the present disclosure aim to improve devices and methods for managing subscriptions of subscribers.</p><p id="p-0008" num="0007">An objective is to increase the number of supported subscribers. In particular, the number of supported subscribers may be increased without additional hardware being necessary (e.g., without an additional memory), neither on the device (e.g., when being a resource-constrained device) itself nor on the network (e.g., intermediaries).</p><p id="p-0009" num="0008">The objective is achieved by one or more embodiments of the disclosure as described herein.</p><p id="p-0010" num="0009">A first aspect of the present disclosure provides a device for managing subscriptions of subscribers using one or more subscription entries, the device being configured to store the one or more subscription entries, wherein each subscription entry comprises information indicating data of interest in a first part, and comprises subscriber information related to one or more subscribers of the data of interest in a second part, wherein at least one subscription entry, of the one or more subscription entries, comprises in its second part subscriber information related to at least two subscribers of the data of interest indicated by the information in the first part; and provide the data of interest indicated by the information in the first part of the at least one subscription entry to the at least two subscribers associated with the subscriber information in the second part.</p><p id="p-0011" num="0010">The device may be or may be incorporated in, for example, an electronic device such as a computer, a laptop, a tablet, a personal computer (PC), a server device, a client device, a publisher of an IoT system, a resource-constrained device for a networked embedded system, etc.</p><p id="p-0012" num="0011">The data of interest may be, for example, some sort of output data that is generated on-the-fly from sensors or calculations. Moreover, the information (indicating the data of interest) may be metadata that indicates, which calculation or sensor, and optionally with which parameters, is to be used to generate the actual data.</p><p id="p-0013" num="0012">For example, the device may be a resource-constrained Publisher. Moreover, the device may optimize how much information has to be stored on the resource-constrained Publisher, which has to manage the subscriptions. For example, instead of having a list with a fixed number of entries (hence limiting the number of subscribers), it may be possible to merge similar subscriptions (i.e., subscriptions to the same dataset or resource) into a single, specifically partitioned subscription entry.</p><p id="p-0014" num="0013">For example, the device of the first aspect may solve an issue of managing subscriptions on resource-constrained Publishers (this is an issue due to the limited memory and bandwidth). The resource-constrained devices may have a statically allocated memory for a fixed number of entries. Moreover, each entry may hold all the information about one subscription (e.g., Subscriber address, identifiers, filters, quality of service requirements).</p><p id="p-0015" num="0014">In devices in accordance with other approaches, a low number of supported subscribers limits the number of applications that can make use of the data. Resource-constrained devices are often used in accordance with other approaches as sensors to monitor the environment, machines, or even products themselves. With the emergence of analytics and artificial intelligence applications, such data becomes of interest for more and more entities, which, however, cannot be added as subscribers.</p><p id="p-0016" num="0015">The device of the first aspect may enable adding more subscribers by optimizing how much information has to be stored, e.g., by splitting the subscriber entries into two parts as follows: the first part with information indicating (identifier of) the data of interest (e.g., dataset or resource), filters (e.g., queries), and quality of services parameters (e.g., expected notification interval(s)), and the second part with (only) subscriber(-specific) information (e.g., unicast address, token).</p><p id="p-0017" num="0016">For example, the second part may be only one address due to multicast (e.g., in the case of OPC UA PubSub for OPC Unified Architecture (OPC UA PubSub).</p><p id="p-0018" num="0017">According to some embodiments, if the destination of the notifications is a multicast address, no additional information needs to be stored (e.g., the case for OPC UA PubSub). Moreover, if the destination is a unicast address, only the individual address and potentially security identifiers need to be stored separately, which still reduces the memory footprint (compared to storing a complete subscription (e.g., in the case of observing with the IETF Constrained Application Protocol (CoAP).</p><p id="p-0019" num="0018">In an implementation form of the first aspect, the subscriber information comprises one or more of: a unicast or multicast address of one or more subscribers, an identifier (ID) of one or more subscribers, a token related to one or more subscribers.</p><p id="p-0020" num="0019">In a further implementation form of the first aspect, the device is further configured to, if a new subscriber subscribes to a desired data of interest, store information indicating the desired data of interest in the first part of a new subscription entry, and store subscriber information related to the new subscriber in the second part of the new subscription entry; or store, when the information indicating the desired data of interest is already stored in an existing subscription entry, the subscriber information related to the new subscriber in the second part of that existing subscription entry.</p><p id="p-0021" num="0020">In a further implementation form of the first aspect, the device is further configured to merge two or more subscription entries into a merged subscription entry, based on a cost function, wherein the merged subscription entry comprises in its second part subscriber information related to the subscribers associated with each of the two or more subscription entries, and comprises in its first part merged information indicating data of interest that is merged from the information indicating data of interest of each of the two or more subscription entries.</p><p id="p-0022" num="0021">According to some embodiments, merging similar subscriptions may reduce energy requirements. Resource-constrained devices are usually duty-cycled, that is, they enter low-power or sleep modes when idle. When subscriptions are merged, a single wake-up event may be used to prepare the push notification and send it to all subscribers in a single wake cycle.</p><p id="p-0023" num="0022">Furthermore, according to some embodiments, merging similar subscriptions may reduce bandwidth requirements, when multicast addressing is used (e.g., in OPC UA PubSub).</p><p id="p-0024" num="0023">In a further implementation form of the first aspect, the cost function is based on one or more of: maintaining a determined QoS, minimizing a number of subscription entries, minimizing a number of changes in the subscription entries.</p><p id="p-0025" num="0024">In a further implementation form of the first aspect, the device is further configured to merge two or more subscription entries that store identical information indicating data of interest in their respective first parts, by storing subscriber information related to the subscribers associated with each of the two or more subscription entries in the second part of the merged subscription entry.</p><p id="p-0026" num="0025">The device of the first aspect may also merge subscription entries that store non-identical information indicating data of interest. Which entries to merge may be decided by a cost function.</p><p id="p-0027" num="0026">In a further implementation form of the first aspect, the device comprising a first interface configured to receive a subscription request based on obtaining one or more first parameters from a subscriber; and a second interface configured to receive one or more second parameter to update the cost function, or determine a new cost function, based on the received one or more second parameter.</p><p id="p-0028" num="0027">According to some embodiments, the first interface may be different from the second interface. In another implementation form, the device of the first aspect may only comprise the first interface, which is extended over an existing interface to receive the one or more first parameters. The one or more first parameters may support decisions taken based on the cost function. The optional second interface may receive the one or more second parameters to dynamically change the cost function.</p><p id="p-0029" num="0028">For example, the first interface may be an interface that receives the subscription request with parameters from the subscribers. Moreover, the second interface may be an interface that is (only) needed when a cost function is used and receives updates, e.g., by a system administrator. The updates may be parameters (e.g., when minimizing the number of entries is more important than the QoS), but also instructions to support (e.g., a completely new) cost functions (which may go beyond parameters, as it may include executable code, etc.).</p><p id="p-0030" num="0029">In a further implementation form of the first aspect, the received one or more first parameters comprises information indicating data of interest, the information comprising a required QoS and/or an acceptable publishing interval range.</p><p id="p-0031" num="0030">For example, a required QoS and/or publishing interval may be metadata for the data of interest and may further be used as input to the cost function to make a merge decision.</p><p id="p-0032" num="0031">Moreover, the acceptable publishing interval range may comprise an upper and a lower bound for a period or an interval between messages.</p><p id="p-0033" num="0032">In a further implementation form of the first aspect, the device is configured for a publisher of a networked embedded system; and/or at least one subscription entry, of the one or more subscription entries, is based on a subscription provider configured for generating a message for a set of subscribers that are subscribed to the subscription provider of a networked embedded system.</p><p id="p-0034" num="0033">In a further implementation form of the first aspect, the device is further configured to assign to each subscription provider, a publishing interval range; and provide the data of interest of a subscription provider to each subscriber associated with that subscription provider according to a publishing interval within the publishing interval range.</p><p id="p-0035" num="0034">In particular, the subscription provider may be, for example, an OPC PubSub WriterGroup.</p><p id="p-0036" num="0035">Moreover, the subscription provider (e.g., the WriterGroup) may be responsible for all subscribers within a subscription entry, that is, generating a message from the (meta)data indicating the data interest, filling in the subscriber information from the second part for each subscriber, sending the message to each subscriber, etc.</p><p id="p-0037" num="0036">In a further implementation form of the first aspect, the device is further configured to perform an optimization procedure of publishing interval when merging two or more subscription providers, based on a cost function.</p><p id="p-0038" num="0037">For example, the publishing interval may be a concrete interval that is determined such that it may satisfy all acceptable ranges of subscribers and is used to trigger the subscription provider.</p><p id="p-0039" num="0038">Moreover, the device may store the acceptable range(s) for future merge processes. For instance, the device may store them as a combined single range in the first part or it may store them individually in the second part.</p><p id="p-0040" num="0039">In a further implementation form of the first aspect, the merging of two or more subscription providers comprises determining their respective publishing interval ranges; and assigning a merged publishing interval including the respective publishing interval ranges to the merged subscription provider.</p><p id="p-0041" num="0040">In a further implementation form of the first aspect, the cost function is based on one or more of: a publishing interval range associated with a first subscription provider, a publishing interval range associated with a second subscription provider, a publishing interval range of at least one subscriber.</p><p id="p-0042" num="0041">For example, initially, the subscription provider may obtain a concrete publishing interval or a publishing interval range with which the messages may be sent. The concrete publishing interval or the publishing interval range may comprise the intersection of all subscriber ranges as a single range and may further be stored in the first part of the subscriber entry list. The list of the subscriber entry may store information and the subscription provider may perform an action upon this information.</p><p id="p-0043" num="0042">Moreover, the list of the subscriber entry may also be stored individually in the second part of the subscriber entry list. Hence, it may be possible to revert the performed merges, perform actions more flexibly, etc.</p><p id="p-0044" num="0043">According to some embodiments, an acceptable publishing interval range may be provided from the subscribers (e.g., the subscribers have a range associated with them that may either be stored individually in the second part (of the subscription entry) or it may be obtained from a combined intersection stored in the first part). Moreover, the subscription provider may select a concrete value from that range that may satisfy all associated subscribers and may further be adjusted when another subscriber is added.</p><p id="p-0045" num="0044">A second aspect of the present disclosure provides a method for managing subscriptions of subscribers on a publisher using one or more subscription entries, the method comprises storing the one or more subscription entries, wherein each subscription entry comprises information indicating data of interest in a first part, and comprises subscriber information related to one or more subscribers of the data of interest in a second part, wherein at least one subscription entry, of the one or more subscription entries, comprises in its second part information related to at least two subscribers of the data of interest indicated by the information in the first part; and providing the data of interest indicated by the information in the first part of the at least one subscription entry to the at least two subscribers associated with the subscriber information in the second part.</p><p id="p-0046" num="0045">In an implementation form of the second aspect, the subscriber information comprises one or more of: a unicast or multicast address of one or more subscribers, an ID of one or more subscribers, a token related to one or more subscribers.</p><p id="p-0047" num="0046">In a further implementation form of the second aspect, the method further comprises, if a new subscriber subscribes to a desired data of interest, storing information indicating the desired data of interest in the first part of a new subscription entry, and storing subscriber information related to the new subscriber in the second part of the new subscription entry; or storing, when the information indicating the desired data of interest is already stored in an existing subscription entry, the subscriber information related to the new subscriber in the second part of that existing subscription entry.</p><p id="p-0048" num="0047">In a further implementation form of the second aspect, the method further comprises merging two or more subscription entries into a merged subscription entry, based on a cost function, wherein the merged subscription entry comprises in its second part subscriber information related to the subscribers associated with each of the two or more subscription entries, and comprises in its first part merged information indicating data of interest that is merged from the information indicating data of interest of each of the two or more subscription entries.</p><p id="p-0049" num="0048">In a further implementation form of the second aspect, the cost function is based on one or more of: maintaining a determined QoS, minimizing a number of subscription entries, minimizing a number of changes in the subscription entries.</p><p id="p-0050" num="0049">In a further implementation form of the second aspect, the method further comprises merging two or more subscription entries that store identical information indicating data of interest in their respective first parts, by storing subscriber information related to the subscribers associated with each of the two or more subscription entries in the second part of the merged subscription entry.</p><p id="p-0051" num="0050">In a further implementation form of the second aspect, the method comprises receiving, by a first interface, a subscription request based on obtaining one or more first parameters from a subscriber; and receiving, by a second interface, one or more second parameter to update the cost function, or determine a new cost function, based on the received one or more second parameter.</p><p id="p-0052" num="0051">In a further implementation form of the second aspect, the received one or more first parameters comprises information indicating data of interest, the information comprising a required QoS and/or an acceptable publishing interval range.</p><p id="p-0053" num="0052">In a further implementation form of the second aspect, the method is for a publisher of a networked embedded system; and/or at least one subscription entry, of the one or more subscription entries, is based on a subscription provider configured for generating a message for a set of subscribers that are subscribed to the subscription provider of a networked embedded system.</p><p id="p-0054" num="0053">In a further implementation form of the second aspect, the method further comprises assigning to each subscription provider, a publishing interval range; and providing the data of interest of a subscription provider to each subscriber associated with that subscription provider according to a publishing interval within the publishing interval range.</p><p id="p-0055" num="0054">In a further implementation form of the second aspect, the method further comprises performing an optimization procedure of publishing interval when merging two or more subscription providers, based on a cost function.</p><p id="p-0056" num="0055">In a further implementation form of the second aspect, the merging of two or more subscription providers comprises determining their respective publishing interval ranges; and assigning a merged publishing interval including the respective publishing interval ranges to the merged subscription provider.</p><p id="p-0057" num="0056">In a further implementation form of the second aspect, the cost function is based on one or more of: a publishing interval range associated with a first subscription provider, a publishing interval range associated with a second subscription provider, a publishing interval range of at least one subscriber.</p><p id="p-0058" num="0057">A third aspect of the present disclosure provides a computer program comprising a program code for performing the method according to the second aspect or any of its implementation forms.</p><p id="p-0059" num="0058">A fourth aspect of the present disclosure provides a non-transitory computer readable storage medium storing executable program code which, when executed by a processor, causes the method according to the fourth aspect or any of its implementation forms to be performed. Examples of a non-transitory computer readable storage medium include, but are not limited to, a ROM (Read-Only Memory), a PROM (Programmable Read-Only Memory), an EPROM (Erasable PROM), a Flash memory, an EEPROM (Electrically Erasable PROM), a hard disk drive, or the like.</p><p id="p-0060" num="0059">It has to be noted that all devices, elements, units and means described in the present application could be implemented in the software or hardware elements or any kind of combination thereof. All steps which are performed by the various entities described in the present application as well as the functionalities described to be performed by the various entities are intended to mean that the respective entity is adapted to or configured to perform the respective steps and functionalities. Even if, in the following description of specific embodiments, a specific functionality or step to be performed by external entities is not reflected in the description of a specific detailed element of that entity which performs that specific step or functionality, it should be clear for a skilled person that these methods and functionalities can be implemented in respective software or hardware elements, or any kind of combination thereof.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0061" num="0060">The above described aspects and implementation forms will be explained in the following description of specific embodiments in relation to the enclosed drawings.</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a schematic view of a device for managing subscriptions of subscribers using one or more subscription entries, according to at least one embodiment of the disclosure.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a diagram illustrating the device merging subscription entries into a merged subscription entry.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows another schematic view of the device comprising an interface for receiving a parameter for updating the cost function.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a diagram illustrating the device merging subscriber entities based on the cost function.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts a diagram illustrating a plurality of unmerged subscription entries.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a diagram illustrating a set of merged subscription entries obtained by the device.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a diagram illustrating a procedure comprising subscribing a subscriber based on the cost function.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts a flowchart of a method for managing subscriptions of subscribers using one or more subscription entries, according to at least one embodiment of the disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0070" num="0069">In the specification, claims, and the accompanying drawings of this application, the terms &#x201c;first&#x201d;, &#x201c;second&#x201d;, and the like are intended to distinguish similar objects but do not necessarily indicate a specific order or sequence. It should be understood that the terms used in such a way are interchangeable in proper circumstances, and this is merely a discrimination manner for describing objects having a same attribute in embodiments of this application. In addition, the terms &#x201c;include&#x201d;, &#x201c;have&#x201d; and any variant thereof mean to cover the non-exclusive inclusion, so that a process, method, system, product, or device that includes a series of units is not necessarily limited to those units, but may include other units not expressly listed or inherent to such a process, method, product, or device.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a schematic view of a device <b>100</b> for managing subscriptions of subscribers <b>10</b>, <b>20</b>, <b>30</b> using one or more subscription entries <b>110</b>, <b>120</b>, according to at least one embodiment of the disclosure.</p><p id="p-0072" num="0071">The device <b>100</b> may be an electronic device such as a computer.</p><p id="p-0073" num="0072">The device <b>100</b> is configured to store the one or more subscription entries <b>110</b>, <b>120</b>, wherein each subscription entry <b>110</b>, <b>120</b> comprises information indicating data of interest in a first part <b>111</b>, <b>121</b>, and comprises subscriber information <b>1</b>, <b>2</b>, <b>3</b> related to one or more subscribers <b>10</b>, <b>20</b>, <b>30</b> of the data of interest in a second part <b>112</b>, <b>122</b>, wherein at least one subscription entry <b>110</b>, of the one or more subscription entries <b>110</b>, <b>120</b>, comprises in its second part <b>112</b> subscriber information <b>1</b>, <b>2</b> related to at least two subscribers <b>10</b>, <b>20</b> of the data of interest indicated by the information in the first part <b>111</b>.</p><p id="p-0074" num="0073">The device <b>100</b> is further configured to provide the data of interest indicated by the information in the first part <b>111</b> of the at least one subscription entry <b>110</b> to the at least two subscribers <b>10</b>, <b>20</b> associated with the subscriber information <b>1</b>, <b>2</b> in the second part <b>112</b>.</p><p id="p-0075" num="0074">The device <b>100</b> may comprise a processing circuitry (not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) configured to perform, conduct or initiate the various operations of the device <b>100</b> described herein. The processing circuitry may comprise hardware, or a combination of hardware and software. The hardware may comprise analog circuitry or digital circuitry, or both analog and digital circuitry. The digital circuitry may comprise components such as application-specific integrated circuits (ASICs), field-programmable arrays (FPGAs), digital signal processors (DSPs), or multi-purpose processors. In at least one embodiment, the processing circuitry comprises one or more processors and a non-transitory memory connected to the one or more processors. The non-transitory memory may carry executable program code which, when executed by the one or more processors, causes the device <b>100</b> to perform, conduct or initiate the operations or methods described herein. Examples of a memory include, but are not limited to, a ROM (Read-Only Memory), a PROM (Programmable Read-Only Memory), an EPROM (Erasable PROM), a Flash memory, an EEPROM (Electrically Erasable PROM), or the like. In some embodiments, the device <b>100</b> comprises a non-transitory computer readable storage medium in which data and/or information described herein are stored under control of the processing circuitry. In some embodiments, the device <b>100</b> further comprises communication circuitry through which data and/or information described herein are provided to/from the device <b>100</b> under control of the processing circuitry. Examples of communication circuitry include an input/output (I/O) interface, a network interface, or the like. Examples of an I/O interface include, but are not limited to, display, touchscreen, keyboard, mouse, or the like. Examples of a network interface include, but are not limited to, wireless network interfaces such as 3G, 4G, 5G, 6G, BLUETOOTH, WIFI, WIMAX, GPRS, or WCDMA; or wired network interfaces such as ETHERNET, USB, or IEEE-2164.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a diagram illustrating the device <b>100</b> merging subscription entries <b>110</b>, <b>120</b>, <b>130</b> into a merged subscription entry <b>110</b>.</p><p id="p-0077" num="0076">For example, device <b>100</b> may merge main subscription information that is information indicating data of interest in the first part to support more subscribers.</p><p id="p-0078" num="0077">The device <b>100</b> may be a publisher and may merge three subscription entries <b>110</b>, <b>120</b>, <b>130</b> (shown on the left side of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) that store identical or non-identical information indicating data of interest in their respective first parts <b>111</b>, <b>121</b>, <b>131</b>. For instance, as it can be derived from the right side of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, device <b>100</b> may store subscriber information <b>1</b>, <b>2</b>, <b>3</b> related to the subscribers <b>10</b>, <b>20</b>, <b>30</b> associated with each of the subscription entries <b>110</b>, <b>120</b>, <b>130</b> in the second part <b>112</b> of the merged subscription entry <b>110</b>.</p><p id="p-0079" num="0078">Moreover, the device may subscribe new subscribers <b>40</b>, <b>50</b> using the new subscription entry <b>140</b>.</p><p id="p-0080" num="0079">The main part (information indicating data of interest) may often be merged as multiple subscribers may subscribe to the same data (e.g., the resource with the sensor value) and use similar filters (e.g., greater than or step filters for CoAP resources can also be merged when of similar magnitude; value is evaluated at receiver) and quality of service parameters, which depend on application type, and not on individual subscribers.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows another schematic view of the device <b>100</b> comprising an interface <b>301</b> for receiving a parameter for updating the cost function <b>302</b>.</p><p id="p-0082" num="0081">The device may have the first interface (not shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) which may receive a subscription request based on obtaining one or more first parameters from a subscriber.</p><p id="p-0083" num="0082">The device may further comprise the second interface <b>301</b> which may receive one or more second parameters to update the cost function <b>302</b> or determine a new cost function, based on the received second parameters. Examples of the first and/or second interfaces include one or more I/O interfaces described herein.</p><p id="p-0084" num="0083">Moreover, the device <b>100</b> may merge the subscription entries <b>110</b>, <b>120</b> into a merged subscription entry <b>110</b>, based on a cost function <b>302</b>.</p><p id="p-0085" num="0084">For instance, when the number of subscribers is lower than number of possible subscription entries in a subscriber list, no optimization is required. Afterwards, once the number of subscribers exceeds the listed capacity, a cost function may be used to merge similar subscriptions.</p><p id="p-0086" num="0085">Moreover, the cost function <b>302</b> can take different goals or a weighted combination of goals into account. The goals may be defined by the device manufacturer or the system owner. A list of possible goals may be as follow:</p><p id="p-0087" num="0086">Maintaining subscriber QoS: using quality of service parameters to maintain expected notification intervals.</p><p id="p-0088" num="0087">Minimizing the number of subscription entries: freeing as many resources as possible and maximizing sleep cycles, respectively, which might lead to lowering the quality of services for a subset of subscriptions.</p><p id="p-0089" num="0088">Minimizing the number of changes: keeping subscriber configurations stable to avoid network reconfiguration and/or potential service interruptions.</p><p id="p-0090" num="0089">An extensible cost function may enable a strategy for optimization which may be adapted to the environment.</p><p id="p-0091" num="0090">For instance, the subscribers <b>10</b>, <b>20</b>, <b>30</b> can provide additional parameters that are inputs for the cost function <b>302</b> and allow for more effective decisions. For instance, concrete intervals for acceptable publication intervals (e.g., the case for OMA LWM2M based on CoAP) instead of a single publication interval (e.g., the case for OPC UA PubSub) enable a better negotiation with better optimization results (e.g., subscriber QoS easier to preserve).</p><p id="p-0092" num="0091">Optionally, the Publisher (i.e., the device <b>100</b>) may provide the interface <b>301</b> to update the cost function dynamically (i.e., either the second parameters of already included in the cost functions or adding completely new cost function).</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a diagram illustrating the device <b>100</b> merging subscriber entities <b>110</b>, <b>120</b> and <b>130</b>, <b>140</b> based on the cost function <b>302</b>.</p><p id="p-0094" num="0093">The subscriber entities <b>110</b> <b>120</b>, <b>130</b>, <b>140</b> are based on subscription providers which are exemplary WriterGroups (e.g., OPC UA PubSub WriterGroups as explained below).</p><p id="p-0095" num="0094">In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the device <b>100</b> is exemplary discussed for OPC UA PubSub on a resource-constrained device. The underlying technology is defined in OPC Unified Architecture Specification Part <b>14</b>, in which OPC UA PubSub refers to the entities also as Publisher and Subscriber.</p><p id="p-0096" num="0095">In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the subscription entries <b>110</b>, <b>120</b>, <b>130</b>, <b>140</b> are embodied by so-called WriterGroups, which produce the messages for the Subscribers <b>10</b>, <b>20</b>, <b>30</b>, <b>40</b>. WriterGroups require memory and consume bandwidth. The device <b>10</b> may merge the subscription entries <b>110</b>, <b>120</b>, <b>130</b>, <b>140</b> and may reduce the number of the WriterGroups, i.e., reduce the required memory and/or bandwidth consumption.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts a diagram illustrating a plurality of unmerged subscription entries <b>110</b>, <b>120</b>, <b>130</b>, <b>140</b>. The plurality of unmerged subscription entries <b>110</b>, <b>120</b>, <b>130</b>, <b>140</b> is based on the subscription providers which are OPC UA PubSub WriterGroups.</p><p id="p-0098" num="0097">Without optimization, each Subscriber <b>10</b>, <b>20</b>, <b>30</b>, <b>40</b> that selects or if it was assigned a unique Publishing Interval requires its own WriterGroup, even if it the same Dataset is sent in the network message (push notification) and multicast addresses are used.</p><p id="p-0099" num="0098">The dotted lines indicate the Publishing Interval. The black rectangles indicate the publishing interval range that may be feasible for the subscriber.</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a diagram illustrating a set of merged subscription entries <b>110</b>, <b>120</b>, <b>130</b> obtained by the device <b>100</b>.</p><p id="p-0101" num="0100">The device <b>100</b> may merge the WriterGroups when they similar and obtain the merge WriterGroup. The (key) similarity may be the Dataset being sent. Note that for OPC UA, this may be optimized even further, as multiple Datasets may be packed into one Network Message, i.e., different Datasets with similar Publishing Intervals may also be merged.</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a diagram illustrating a procedure <b>700</b> comprising subscribing a subscriber <b>70</b> based on the cost function <b>302</b>.</p><p id="p-0103" num="0102">The device <b>100</b> may perform the procedure <b>700</b>.</p><p id="p-0104" num="0103">The subscriber <b>70</b> is exemplarily an OPC UA Client that establishes a subscription for a Subscriber which may be the same device (subscriber <b>70</b>) or a connection manager, etc.</p><p id="p-0105" num="0104">The device <b>100</b> is exemplarily an OPC UA Server or Publisher which is configured to subscribe. For example, it may add a subscription, merge subscriptions (e.g., if no more entries) based on the cost function <b>302</b>.</p><p id="p-0106" num="0105">At S<b>701</b>, the OPC UA Client <b>70</b> sends a subscribe request to the device <b>100</b> which may be sending one or more of: MinInt, MaxInt, and, optionally, QoS.</p><p id="p-0107" num="0106">At S<b>702</b>, the device <b>100</b> (the OPC UA Server) sends a subscribe response. The response message may be: OK, PubSubConnection Info; or FAIL, reason information.</p><p id="p-0108" num="0107">For example, by defining not only one selected Publishing Interval for a Subscriber <b>10</b>, <b>20</b>, <b>30</b>, <b>40</b>, but a supported range with minimum and maximum Publishing Interval allows the cost function <b>302</b> to perform an optimization where quality of service requirements can be met (exactly) despite the optimization. Without such additional parameters, the optimization might degrade the quality of service level. The subscribe request corresponds to the Connection Establishment process of the OPC UA Field-Level Communications, which uses Client/Server method calls.</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a method <b>800</b> according to at least one embodiment of the disclosure for managing subscriptions of subscribers <b>10</b>, <b>20</b>, <b>30</b> on a publisher <b>100</b> using one or more subscription entries <b>110</b>, <b>1120</b>. The method <b>800</b> may be carried out by the device <b>100</b>, as described above.</p><p id="p-0110" num="0109">The method <b>800</b> comprises a step S<b>801</b> of storing the one or more subscription entries <b>110</b>, <b>120</b>, wherein each subscription entry <b>110</b>, <b>120</b> comprises information indicating data of interest in a first part <b>111</b>, <b>121</b>, and comprises subscriber information <b>1</b>, <b>2</b>, <b>3</b> related to one or more subscribers <b>10</b>, <b>20</b>, <b>30</b> of the data of interest in a second part <b>112</b>, <b>122</b>, wherein at least one subscription entry <b>110</b>, of the one or more subscription entries <b>110</b>, <b>120</b>, comprises in its second part <b>112</b> subscriber information <b>1</b>, <b>2</b> related to at least two subscribers <b>10</b>, <b>20</b> of the data of interest indicated by the information in the first part <b>111</b>.</p><p id="p-0111" num="0110">The method <b>800</b> further comprises a step S<b>802</b> of providing the data of interest indicated by the information in the first part <b>111</b> of the at least one subscription entry <b>110</b> to the at least two subscribers <b>10</b>, <b>20</b> associated with the subscriber information <b>1</b>, <b>2</b> in the second part <b>112</b>.</p><p id="p-0112" num="0111">The present disclosure has been described in conjunction with various embodiments as examples as well as implementations. However, other variations can be understood and effected by those persons skilled in the art and practicing the claimed disclosure, from the studies of the drawings, this disclosure and the independent claims. In the claims as well as in the description the word &#x201c;comprising&#x201d; does not exclude other elements or steps and the indefinite article &#x201c;a&#x201d; or &#x201c;an&#x201d; does not exclude a plurality. A single element or other unit may fulfill the functions of several entities or items recited in the claims. The mere fact that certain measures are recited in the mutual different dependent claims does not indicate that a combination of these measures cannot be used in an advantageous implementation.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A device for managing subscriptions of subscribers, the device comprising:<claim-text>a non-transitory computer readable storage medium configured to store one or more subscription entries,<claim-text>wherein each subscription entry of the one or more subscription entries comprises information indicating data of interest in a first part, and comprises subscriber information related to one or more subscribers of the data of interest in a second part, and</claim-text><claim-text>wherein, in at least one subscription entry of the one or more subscription entries, the second part comprises subscriber information related to at least two subscribers of the data of interest indicated by the information in the first part; and</claim-text></claim-text><claim-text>communication circuitry configured to provide the data of interest indicated by the information in the first part of the at least one subscription entry to the at least two subscribers associated with the subscriber information in the second part of the at least one subscription entry.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the subscriber information comprises at least one of:<claim-text>a unicast or multicast address of one or more subscribers,</claim-text><claim-text>an identifier, ID, of one or more subscribers, or</claim-text><claim-text>a token related to one or more subscribers.</claim-text></claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising processing circuitry configured to, in response to a new subscriber subscribing to desired data of interest:<claim-text>cause the storage medium to store information indicating the desired data of interest in the first part of a new subscription entry, and store subscriber information related to the new subscriber in the second part of the new subscription entry; or</claim-text><claim-text>cause the storage medium to store, in response to the information indicating the desired data of interest being already stored in an existing subscription entry, the subscriber information related to the new subscriber in the second part of the existing subscription entry.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising processing circuitry configured to:<claim-text>merge two or more subscription entries into a merged subscription entry, based on a cost function,</claim-text><claim-text>wherein, in the merged subscription entry,<claim-text>the second part comprises subscriber information related to the subscribers associated with each of the two or more subscription entries, and</claim-text><claim-text>the first part comprises merged information indicating data of interest that is merged from the information indicating data of interest of each of the two or more subscription entries.</claim-text></claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The device according to the <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein:<claim-text>the cost function is based on at least one of:<claim-text>maintaining a determined Quality of Service (QoS),</claim-text><claim-text>minimizing a number of subscription entries, or</claim-text><claim-text>minimizing a number of changes in the subscription entries.</claim-text></claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The device according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the processing circuitry is further configured to:<claim-text>merge two or more subscription entries that store identical information indicating data of interest in their respective first parts, by causing the storage medium to store subscriber information related to the subscribers associated with each of the two or more subscription entries in the second part of the merged subscription entry.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The device according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>a first interface configured to receive a subscription request based on at least one first parameter from a subscriber; and</claim-text><claim-text>a second interface configured to receive at least one second parameter to update the cost function, or to determine a new cost function, based on the received at least one second parameter.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The device according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein:<claim-text>the received at least one first parameter comprises information indicating data of interest, the information comprising at least one of a required QoS or an acceptable publishing interval range.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least one of:<claim-text>the device is configured as a publisher of a networked embedded system; or</claim-text><claim-text>at least one subscription entry, of the one or more subscription entries, is based on a subscription provider configured for generating a message for a set of subscribers that are subscribed to the subscription provider of a networked embedded system.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The device according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising processing circuitry configured to:<claim-text>assign to each subscription provider a publishing interval range; and</claim-text><claim-text>cause the communication circuitry to provide the data of interest of a subscription provider to each subscriber associated with the subscription provider according to a publishing interval within the publishing interval range.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The device according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the processing circuitry is further configured to<claim-text>perform an optimization procedure of publishing interval upon merging two or more subscription providers, based on a cost function.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The device according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:<claim-text>the processing circuitry is configured to merge the two or more subscription providers into a merged subscription provider by:<claim-text>determining the respective publishing interval ranges of the two or more subscription providers; and</claim-text><claim-text>assigning a merged publishing interval including the respective publishing interval ranges to the merged subscription provider.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The device according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:<claim-text>the cost function is based on at least one of:<claim-text>a publishing interval range associated with a first subscription provider in the two or more subscription providers;</claim-text><claim-text>a publishing interval range associated with a second subscription provider in the two or more subscription providers; or</claim-text><claim-text>a publishing interval range of at least one subscriber in the two or more subscription providers.</claim-text></claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A method of managing subscriptions of subscribers, the method comprising:<claim-text>storing one or more subscription entries,<claim-text>wherein each subscription entry of the one or more subscription entries comprises information indicating data of interest in a first part, and comprises subscriber information related to one or more subscribers of the data of interest in a second part, and</claim-text><claim-text>wherein, in at least one subscription entry of the one or more subscription entries, the second part comprises subscriber information related to at least two subscribers of the data of interest indicated by the information in the first part; and</claim-text></claim-text><claim-text>providing the data of interest indicated by the information in the first part of the at least one subscription entry to the at least two subscribers associated with the subscriber information in the second part of the at least one subscription entry.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A non-transitory computer readable storage medium storing a program which, when executed by a computer, causes the computer to perform a method of managing subscriptions of subscribers, the method comprising:<claim-text>storing one or more subscription entries,<claim-text>wherein each subscription entry of the one or more subscription entries comprises information indicating data of interest in a first part, and comprises subscriber information related to one or more subscribers of the data of interest in a second part, and</claim-text><claim-text>wherein, in at least one subscription entry of the one or more subscription entries, the second part comprises subscriber information related to at least two subscribers of the data of interest indicated by the information in the first part; and</claim-text></claim-text><claim-text>providing the data of interest indicated by the information in the first part of the at least one subscription entry to the at least two subscribers associated with the subscriber information in the second part of the at least one subscription entry.</claim-text></claim-text></claim></claims></us-patent-application>