<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004875A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004875</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17305058</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>02</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>02</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">OPTIMIZING VENUE SCHEDULING BASED ON REAL-TIME DATA AND FORECASTED EVENTS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>International Business Machines Corporation</orgname><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Wang</last-name><first-name>Xinlin</first-name><address><city>Irvine</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>DeLuca</last-name><first-name>Lisa Seacat</first-name><address><city>Bozeman</city><state>MT</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Approaches presented herein enable optimizing venue scheduling. More specifically, a respective future availability of the venues is determined based upon booking calendars of the venues. Future events of attendees are forecasted based upon a respective current status and location of the attendees, and respective personal calendars of the attendees. Bookings of the venues are optimized based upon the determining and the forecasting, and the booking calendars of the venues and the respective personal calendars of the attendees are updated based upon the optimizing.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="155.11mm" wi="133.60mm" file="US20230004875A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="161.54mm" wi="167.89mm" file="US20230004875A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="170.94mm" wi="135.64mm" file="US20230004875A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="207.35mm" wi="108.46mm" orientation="landscape" file="US20230004875A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="84.33mm" wi="77.39mm" file="US20230004875A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="131.23mm" wi="119.21mm" file="US20230004875A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates generally to optimizing venue scheduling and, more specifically, to optimizing venue scheduling based on real-time data and forecasted events.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Meeting venue booking tools may be utilized to reserve space for a meeting. However, sometime those who book meeting venues have last-minute plans and schedule changes, which requires them to manually update a reservation for a venue manually. When attempting to change their reservation, they may find that no venues are readily available. Also, they may hesitate to utilize a venue which appear to be vacant, as someone else may have booked the venue during the time they plan to hold their meeting.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">Approaches presented herein enable optimizing venue scheduling. More specifically, a respective future availability of the venues is determined based upon booking calendars of the venues. Future events of attendees are forecasted based upon a respective current status and location of the attendees, and respective personal calendars of the attendees. Bookings of the venues are optimized based upon the determining and the forecasting, and the booking calendars of the venues and the respective personal calendars of the attendees are updated based upon the optimizing.</p><p id="p-0005" num="0004">One aspect of the present invention includes a computer-implemented method for optimizing venue scheduling, comprising: determining a respective future availability of one or more venues, wherein the determining is based upon booking calendars of the one or more venues, forecasting a plurality of future events of one or more attendees, wherein the forecasting is based upon a respective current status and location of the one or more attendees, and one or more respective personal calendars of the one or more attendees, optimizing one or more bookings of the one or more venues based upon the determining and the forecasting, and updating the booking calendars of the one or more venues and the one or more respective personal calendars of the one or more attendees based upon the optimizing.</p><p id="p-0006" num="0005">Another aspect of the present invention includes a computer system for optimizing venue scheduling, the computer system comprising: a memory medium comprising program instructions, a bus coupled to the memory medium, and a processor, for executing the program instructions, coupled to a venue scheduling optimization engine via the bus that when executing the program instructions causes the system to: determine a respective future availability of one or more venues, wherein the determining is based upon booking calendars of the one or more venues, forecast a plurality of future events of one or more attendees, wherein the forecasting is based upon a respective current status and location of the one or more attendees, and one or more respective personal calendars of the one or more attendees, optimize one or more bookings of the one or more venues based upon the determining and the forecasting, and update the booking calendars of the one or more venues and the one or more respective personal calendars of the one or more attendees based upon the optimizing.</p><p id="p-0007" num="0006">Yet another aspect of the present invention includes a computer program product for optimizing venue scheduling, the computer program product comprising a computer readable hardware storage device, and program instructions stored on the computer readable hardware storage device, to: determine a respective future availability of one or more venues, wherein the determining is based upon booking calendars of the one or more venues, forecast a plurality of future events of one or more attendees, wherein the forecasting is based upon a respective current status and location of the one or more attendees, and one or more respective personal calendars of the one or more attendees, optimize one or more bookings of the one or more venues based upon the determining and the forecasting, and update the booking calendars of the one or more venues and the one or more respective personal calendars of the one or more attendees based upon the optimizing.</p><p id="p-0008" num="0007">Still yet, any of the components of the present invention could be deployed, managed, serviced, etc., by a service provider who offers to optimize venue scheduling in a computer system.</p><p id="p-0009" num="0008">Embodiments of the present invention also provide related systems, methods, and/or program products.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0010" num="0009">These and other features of this invention will be more readily understood from the following detailed description of the various aspects of the invention taken in conjunction with the accompanying drawings in which:</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an architecture in which the invention may be implemented according to illustrative embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a system diagram describing the functionality discussed herein according to illustrative embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a meeting venue and an attendee according to illustrative embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a booking calendar according to illustrative embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a process flowchart for optimizing venue scheduling according to illustrative embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0016" num="0015">The drawings are not necessarily to scale. The drawings are merely representations, not intended to portray specific parameters of the invention. The drawings are intended to depict only typical embodiments of the invention, and therefore should not be considered as limiting in scope. In the drawings, like numbering represents like elements.</p><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">Illustrative embodiments will now be described more fully herein with reference to the accompanying drawings, in which illustrative embodiments are shown. It will be appreciated that this disclosure may be embodied in many different forms and should not be construed as limited to the illustrative embodiments set forth herein. Rather, these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of this disclosure to those skilled in the art.</p><p id="p-0018" num="0017">Furthermore, the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of this disclosure. As used herein, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d;, and &#x201c;the&#x201d; are intended to include the plural forms as well, unless the context clearly indicates otherwise. Furthermore, the use of the terms &#x201c;a&#x201d;, &#x201c;an&#x201d;, etc., do not denote a limitation of quantity, but rather denote the presence of at least one of the referenced items. Furthermore, similar elements in different figures may be assigned similar element numbers. It will be further understood that the terms &#x201c;comprises&#x201d; and/or &#x201c;comprising&#x201d;, or &#x201c;includes&#x201d; and/or &#x201c;including&#x201d;, when used in this specification, specify the presence of stated features, regions, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, regions, integers, steps, operations, elements, components, and/or groups thereof.</p><p id="p-0019" num="0018">Unless specifically stated otherwise, it may be appreciated that terms such as &#x201c;processing,&#x201d; &#x201c;detecting,&#x201d; &#x201c;determining,&#x201d; &#x201c;evaluating,&#x201d; &#x201c;receiving,&#x201d; or the like, refer to the action and/or processes of a computer or computing system, or similar electronic data center device, that manipulates and/or transforms data represented as physical quantities (e.g., electronic) within the computing system's registers and/or memories into other data similarly represented as physical quantities within the computing system's memories, registers or other such information storage, transmission or viewing devices. The embodiments are not limited in this context.</p><p id="p-0020" num="0019">As stated above, embodiments described herein provide for optimizing venue scheduling. More specifically, a respective future availability of the venues is determined based upon booking calendars of the venues. Future events of attendees are forecasted based upon a respective current status and location of the attendees, and respective personal calendars of the attendees. Bookings of the venues are optimized based upon the determining and the forecasting, and the booking calendars of the venues and the respective personal calendars of the attendees are updated based upon the optimizing.</p><p id="p-0021" num="0020">Referring now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a computerized implementation <b>10</b> of an embodiment for optimizing venue scheduling will be shown and described. Computerized implementation <b>10</b> is only one example of a suitable implementation and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless, computerized implementation <b>10</b> is capable of being implemented and/or performing any of the functionality set forth hereinabove.</p><p id="p-0022" num="0021">In computerized implementation <b>10</b>, there is a computer system/server <b>12</b>, which is operational with numerous other (e.g., special purpose) computing system environments or configurations. Examples of well-known computing systems, environments, and/or configurations that may be suitable for use with computer system/server <b>12</b> include, but are not limited to, personal computer systems, server computer systems, thin clients, thick clients, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputer systems, mainframe computer systems, and distributed cloud computing environments that include any of the above systems or devices, and the like.</p><p id="p-0023" num="0022">This is intended to demonstrate, among other things, that the present invention could be implemented within a network environment (e.g., the Internet, a wide area network (WAN), a local area network (LAN), a virtual private network (VPN), etc.), a cloud computing environment, a cellular network, or on a stand-alone computer system. Communication throughout the network can occur via any combination of various types of communication links. For example, the communication links can comprise addressable connections that may utilize any combination of wired and/or wireless transmission methods. Where communications occur via the Internet, connectivity could be provided by conventional TCP/IP sockets-based protocol, and an Internet service provider could be used to establish connectivity to the Internet. Still yet, computer system/server <b>12</b> is intended to demonstrate that some or all of the components of implementation <b>10</b> could be deployed, managed, serviced, etc., by a service provider who offers to implement, deploy, and/or perform the functions of the present invention for others.</p><p id="p-0024" num="0023">Computer system/server <b>12</b> is intended to represent any type of computer system that may be implemented in deploying/realizing the teachings recited herein. Computer system/server <b>12</b> may be described in the general context of computer system/server executable instructions, such as program modules, being executed by a computer system. Generally, program modules may include routines, programs, objects, components, logic, data structures, and so on, that perform particular tasks or implement particular abstract data types. In this particular example, computer system/server <b>12</b> represents an illustrative system for optimizing venue scheduling. It should be understood that any other computers implemented under the present invention may have different components/software, but can perform similar functions.</p><p id="p-0025" num="0024">Computer system/server <b>12</b> in computerized implementation <b>10</b> is shown in the form of a computing device. The components of computer system/server <b>12</b> may include, but are not limited to, one or more processors or processing units <b>16</b>, a system memory <b>28</b>, and a bus <b>18</b> that couples various system components including system memory <b>28</b> to processing unit <b>16</b>.</p><p id="p-0026" num="0025">Bus <b>18</b> represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus.</p><p id="p-0027" num="0026">Processing unit <b>16</b> refers, generally, to any apparatus that performs logic operations, computational tasks, control functions, etc. A processor may include one or more subsystems, components, and/or other processors. A processor will typically include various logic components that operate using a clock signal to latch data, advance logic states, synchronize computations and logic operations, and/or provide other timing functions. During operation, processing unit <b>16</b> collects and routes signals representing inputs and outputs between external devices <b>14</b> and input devices (not shown). The signals can be transmitted over a LAN and/or a WAN (e.g., T1, T3, 56 kb, X.25), broadband connections (ISDN, Frame Relay, ATM), wireless links (802.11, Bluetooth, etc.), and so on. In some embodiments, the signals may be encrypted using, for example, trusted key-pair encryption. Different systems may transmit information using different communication pathways, such as Ethernet or wireless networks, direct serial or parallel connections, USB, Firewire&#xae;, Bluetooth&#xae;, or other proprietary interfaces. (Firewire is a registered trademark of Apple Computer, Inc. Bluetooth is a registered trademark of Bluetooth Special Interest Group (SIG)).</p><p id="p-0028" num="0027">In general, processing unit <b>16</b> executes computer program code, such as program code for optimizing venue scheduling, which is stored in memory <b>28</b>, storage system <b>34</b>, and/or program/utility <b>40</b>. While executing computer program code, processing unit <b>16</b> can read and/or write data to/from memory <b>28</b>, storage system <b>34</b>, and program/utility <b>40</b>.</p><p id="p-0029" num="0028">Computer system/server <b>12</b> typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system/server <b>12</b>, and it includes both volatile and non-volatile media, removable and non-removable media.</p><p id="p-0030" num="0029">System memory <b>28</b> can include computer system readable media in the form of volatile memory, such as random-access memory (RAM) <b>30</b> and/or cache memory <b>32</b>. Computer system/server <b>12</b> may further include other removable/non-removable, volatile/non-volatile computer system storage media, (e.g., VCRs, DVRs, RAID arrays, USB hard drives, optical disk recorders, flash storage devices, and/or any other data processing and storage elements for storing and/or processing data). By way of example only, storage system <b>34</b> can be provided for reading from and writing to a non-removable, non-volatile magnetic media (not shown and typically called a &#x201c;hard drive&#x201d;). Although not shown, a magnetic disk drive for reading from and writing to a removable, non-volatile magnetic disk (e.g., a &#x201c;floppy disk&#x201d;), and/or an optical disk drive for reading from or writing to a removable, non-volatile optical disk such as a CD-ROM, DVD-ROM, or other optical media can be provided. In such instances, each can be connected to bus <b>18</b> by one or more data media interfaces. As will be further depicted and described below, memory <b>28</b> may include at least one program product having a set (e.g., at least one) of program modules that are configured to carry out the functions of embodiments of the invention.</p><p id="p-0031" num="0030">Program code embodied on a computer readable medium may be transmitted using any appropriate medium including, but not limited to, wireless, wireline, optical fiber cable, radio frequency (RF), etc., or any suitable combination of the foregoing.</p><p id="p-0032" num="0031">Program/utility <b>40</b>, having a set (at least one) of program modules <b>42</b>, may be stored in memory <b>28</b> by way of example, and not limitation. Memory <b>28</b> may also have an operating system, one or more application programs, other program modules, and program data. Each of the operating system, one or more application programs, other program modules, and program data or some combination thereof, may include an implementation of a networking environment. Program modules <b>42</b> generally carry out the functions and/or methodologies of embodiments of the invention as described herein.</p><p id="p-0033" num="0032">Computer system/server <b>12</b> may also communicate with one or more external devices <b>14</b> such as a keyboard, a pointing device, a display <b>24</b>, etc.; one or more devices that enable a consumer to interact with computer system/server <b>12</b>; and/or any devices (e.g., network card, modem, etc.) that enable computer system/server <b>12</b> to communicate with one or more other computing devices. Such communication can occur via I/O interfaces <b>22</b>. Still yet, computer system/server <b>12</b> can communicate with one or more networks such as a local area network (LAN), a general wide area network (WAN), and/or a public network (e.g., the Internet) via network adapter <b>20</b>. As depicted, network adapter <b>20</b> communicates with the other components of computer system/server <b>12</b> via bus <b>18</b>. It should be understood that although not shown, other hardware and/or software components could be used in conjunction with computer system/server <b>12</b>. Examples include, but are not limited to: microcode, device drivers, redundant processing units, external disk drive arrays, RAID systems, tape drives, and data archival storage systems, etc.</p><p id="p-0034" num="0033">The inventors of the present invention have found that sometime those who book meeting venues have last-minute plans and schedule changes, which requires them to manually update a reservation for a venue manually. When attempting to change their reservation, they may find that no venues are readily available. Also, they may hesitate to utilize a venue which appear to be vacant, as someone else may have booked the venue during the time they plan to hold their meeting.</p><p id="p-0035" num="0034">Accordingly, the inventors of the present invention have developed a system that optimizes venue scheduling based on real-time data and forecasted events.</p><p id="p-0036" num="0035">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a system diagram describing the functionality discussed herein according to an embodiment of the present invention is shown. It is understood that the teachings recited herein may be practiced within any type of computing environment, including, but not limited to, a networked computing environment (e.g., a cloud computing environment <b>50</b>). A stand-alone computer system/server <b>12</b> is shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> for illustrative purposes only. In the event the teachings recited herein are practiced in a networked computing environment, each client need not have a venue scheduling optimization engine <b>60</b> (hereinafter &#x201c;system <b>60</b>&#x201d;). Rather, all or part of system <b>60</b> could be loaded on a server or server-capable device that communicates (e.g., wirelessly) with the clients to provide for optimizing venue scheduling. Regardless, as depicted, system <b>60</b> is shown within computer system/server <b>12</b>. In general, system <b>60</b> can be implemented as program/utility <b>40</b> on computer system <b>12</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and can enable the functions recited herein.</p><p id="p-0037" num="0036">Along these lines, system <b>60</b> may perform multiple functions. Specifically, among other functions, system <b>60</b> can optimize venue scheduling in a networked computing environment. To accomplish this, system <b>60</b> can include a set of components (e.g., program modules <b>42</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) for carrying out embodiments of the present invention. These components can include, but are not limited to, venue availability determiner <b>62</b>, attendee event forecaster <b>64</b>, venue booking optimizer <b>66</b>, booking calendar updater <b>68</b>, and venue attendee forecaster <b>70</b>. Through computer system/server <b>12</b>, system <b>60</b> can communicate with venue booking calendars <b>80</b> and personal calendars <b>82</b>.</p><p id="p-0038" num="0037">Venue availability determiner <b>62</b> determines a respective future availability of one or more venues, wherein the determining is based upon booking calendars of the one or more venues. Attendee event forecaster <b>64</b> forecasts a plurality of future events of one or more attendees, wherein the forecasting is based upon a respective current status and location of the one or more attendees, and one or more respective personal calendars of the one or more attendees. Venue booking optimizer <b>66</b> optimizes one or more bookings of the one or more venues based upon the determining by venue availability determiner <b>62</b>, and the forecasting by attendee event forecaster <b>64</b>.</p><p id="p-0039" num="0038">Venue booking optimizer <b>66</b> utilizes an optimization model, wherein the optimization model comprises at least one of: a continuous optimization model, a discrete optimization model, an unconstrained optimization model, a constrained optimization model, a deterministic optimization model, and a stochastic optimization model.</p><p id="p-0040" num="0039">Booking calendar updater <b>68</b> updates the booking calendars <b>80</b> of the one or more venues and the one or more respective personal calendars <b>82</b> of the one or more attendees based upon the optimizing by venue booking optimizer <b>66</b>.</p><p id="p-0041" num="0040">Venue attendee forecaster <b>70</b> forecasts a number of attendees at each of the one or more venues, wherein the forecasting a number of attendees is based upon at least one of: attendee physical location, attendee venue preference, historical attendee participation, and current weather conditions, for example, as reported by the National Weather Service.</p><p id="p-0042" num="0041">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b></figref> in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a current status and location of attendee <b>300</b> may be determined based upon real-time data from at least one of: access control station <b>302</b>, wireless device router <b>304</b>, and a geo-tracking device <b>306</b>. In a similar manner, a current availability of venue <b>310</b> may be determined based upon real-time sensor data from at least one of: camera imaging sensor <b>312</b>, occupancy sensor <b>314</b>, and desk sensor <b>316</b>.</p><p id="p-0043" num="0042">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b></figref> in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, examples of records stored in venue booking calendar <b>80</b> are shown. Venue identifier <b>402</b> is a unique identifier for a particular venue. Venue location <b>404</b> is the physical location of the venue. Venue owner <b>406</b> is an individual, or group of individuals, who are responsible for the venue, for example, a manager, administrator, and/or real estate professional who supervise and maintain the venue. Venue maximum capacity <b>408</b> is the maximum capacity on the venue, for example under applicable fire codes. Venue reserved times <b>410</b> may comprise multiple records of block of time for which the venue is reserved. In one example, venue lead attendee <b>412</b> may be an attendee who reserved the venue for a particular time slot, or an attendee who is leading an event or meeting at the venue.</p><p id="p-0044" num="0043">As depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in one embodiment, a system (e.g., computer system/server <b>12</b>) carries out the methodologies disclosed herein. Shown is a process flowchart <b>500</b> for optimizing venue scheduling. At <b>502</b>, a respective future availability of one or more venues is determined. At <b>504</b>, a plurality of future events of one or more attendees is forecast. At <b>506</b>, one or more bookings of the one or more venues is optimized based upon the determining and the forecasting. At <b>508</b>, the booking calendars of the one or more venues and the one or more respective personal calendars of the one or more attendees is updated based upon the optimizing.</p><p id="p-0045" num="0044">Some of the functional components described in this specification have been labeled as systems or units in order to more particularly emphasize their implementation independence. For example, a system or unit may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays, off-the-shelf semiconductors such as logic chips, transistors, or other discrete components. A system or unit may also be implemented in programmable hardware devices such as field programmable gate arrays, programmable array logic, programmable logic devices, or the like. A system or unit may also be implemented in software for execution by various types of processors. A system or unit or component of executable code may, for instance, comprise one or more physical or logical blocks of computer instructions, which may, for instance, be organized as an object, procedure, or function. Nevertheless, the executables of an identified system or unit need not be physically located together, but may comprise disparate instructions stored in different locations which, when joined logically together, comprise the system or unit and achieve the stated purpose for the system or unit.</p><p id="p-0046" num="0045">Further, a system or unit of executable code could be a single instruction, or many instructions, and may even be distributed over several different code segments, among different programs, and across several memory devices. Similarly, operational data may be identified and illustrated herein within modules, and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set, or may be distributed over different locations including over different storage devices and disparate memory devices.</p><p id="p-0047" num="0046">Furthermore, systems/units may also be implemented as a combination of software and one or more hardware devices. For instance, program/utility <b>40</b> may be embodied in the combination of a software executable code stored on a memory medium (e.g., memory storage device). In a further example, a system or unit may be the combination of a processor that operates on a set of operational data.</p><p id="p-0048" num="0047">As noted above, some of the embodiments may be embodied in hardware. The hardware may be referenced as a hardware element. In general, a hardware element may refer to any hardware structures arranged to perform certain operations. In one embodiment, for example, the hardware elements may include any analog or digital electrical or electronic elements fabricated on a substrate. The fabrication may be performed using silicon-based integrated circuit (IC) techniques, such as complementary metal oxide semiconductor (CMOS), bipolar, and bipolar CMOS (BiCMOS) techniques, for example. Examples of hardware elements may include processors, microprocessors, circuits, circuit elements (e.g., transistors, resistors, capacitors, inductors, and so forth), integrated circuits, application specific integrated circuits (ASIC), programmable logic devices (PLD), digital signal processors (DSP), field programmable gate array (FPGA), logic gates, registers, semiconductor devices, chips, microchips, chip sets, and so forth. However, the embodiments are not limited in this context.</p><p id="p-0049" num="0048">Any of the components provided herein can be deployed, managed, serviced, etc., by a service provider that offers to deploy or integrate computing infrastructure with respect to a process for optimizing venue scheduling. Thus, embodiments herein disclose a process for supporting computer infrastructure, comprising integrating, hosting, maintaining, and deploying computer-readable code into a computing system (e.g., computer system/server <b>12</b>), wherein the code in combination with the computing system is capable of performing the functions described herein.</p><p id="p-0050" num="0049">In another embodiment, the invention provides a method that performs the process steps of the invention on a subscription, advertising, and/or fee basis. That is, a service provider, such as a Solution Integrator, can offer to create, maintain, support, etc., a process for optimizing venue scheduling. In this case, the service provider can create, maintain, support, etc., a computer infrastructure that performs the process steps of the invention for one or more customers. In return, the service provider can receive payment from the customer(s) under a subscription and/or fee agreement, and/or the service provider can receive payment from the sale of advertising content to one or more third parties.</p><p id="p-0051" num="0050">Also noted above, some embodiments may be embodied in software. The software may be referenced as a software element. In general, a software element may refer to any software structures arranged to perform certain operations. In one embodiment, for example, the software elements may include program instructions and/or data adapted for execution by a hardware element, such as a processor. Program instructions may include an organized list of commands comprising words, values, or symbols arranged in a predetermined syntax that, when executed, may cause a processor to perform a corresponding set of operations.</p><p id="p-0052" num="0051">The present invention may be a system, a method, and/or a computer program product at any possible technical detail level of integration. The computer program product may include a computer readable storage medium (or media) having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.</p><p id="p-0053" num="0052">The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be, for example, but is not limited to, an electronic storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing. A non-exhaustive list of more specific examples of the computer readable storage medium includes the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a static random access memory (SRAM), a portable compact disc read-only memory (CD-ROM), a digital versatile disk (DVD), a memory stick, a floppy disk, a mechanically encoded device such as punch-cards or raised structures in a groove having instructions recorded thereon, and any suitable combination of the foregoing. A computer readable storage medium, as used herein, is not to be construed as being transitory signals per se, such as radio waves or other freely propagating electromagnetic waves, electromagnetic waves propagating through a waveguide or other transmission media (e.g., light pulses passing through a fiber-optic cable), or electrical signals transmitted through a wire.</p><p id="p-0054" num="0053">Computer readable program instructions described herein can be downloaded to respective computing/processing devices from a computer readable storage medium or to an external computer or external storage device via a network, for example, the Internet, a local area network, a wide area network and/or a wireless network. The network may comprise copper transmission cables, optical transmission fibers, wireless transmission, routers, firewalls, switches, gateway computers and/or edge servers. A network adapter card or network interface in each computing/processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing/processing device.</p><p id="p-0055" num="0054">Computer readable program instructions for carrying out operations of the present invention may be assembler instructions, instruction-set-architecture (ISA) instructions, machine instructions, machine dependent instructions, microcode, firmware instructions, state-setting data, configuration data for integrated circuitry, or either source code or object code written in any combination of one or more programming languages, including an object oriented programming language such as Smalltalk, C++, or the like, and procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The computer readable program instructions may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). In some embodiments, electronic circuitry including, for example, programmable logic circuitry, field-programmable gate arrays (FPGA), or programmable logic arrays (PLA) may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry, in order to perform aspects of the present invention.</p><p id="p-0056" num="0055">Aspects of the present invention are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems), and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer readable program instructions.</p><p id="p-0057" num="0056">These computer readable program instructions may be provided to a processor of a computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer, a programmable data processing apparatus, and/or other devices to function in a particular manner, such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function/act specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0058" num="0057">The computer readable program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other device to cause a series of operational steps to be performed on the computer, other programmable apparatus or other device to produce a computer implemented process, such that the instructions which execute on the computer, other programmable apparatus, or other device implement the functions/acts specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0059" num="0058">The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the blocks may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be accomplished as one step, executed concurrently, substantially concurrently, in a partially or wholly temporally overlapping manner, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.</p><p id="p-0060" num="0059">It is apparent that there has been provided herein approaches to optimizing venue scheduling. While the invention has been particularly shown and described in conjunction with exemplary embodiments, it will be appreciated that variations and modifications will occur to those skilled in the art. Therefore, it is to be understood that the appended claims are intended to cover all such modifications and changes that fall within the true spirit of the invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method for optimizing venue scheduling, comprising:<claim-text>determining a respective future availability of one or more venues, wherein the determining is based upon booking calendars of the one or more venues;</claim-text><claim-text>forecasting a plurality of future events of one or more attendees, wherein the forecasting is based upon a respective current status and location of the one or more attendees, and one or more respective personal calendars of the one or more attendees;</claim-text><claim-text>optimizing one or more bookings of the one or more venues based upon the determining and the forecasting; and</claim-text><claim-text>updating the booking calendars of the one or more venues and the one or more respective personal calendars of the one or more attendees based upon the optimizing.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method further comprising forecasting a number of attendees at each of the one or more venues, wherein the forecasting a number of attendees is based upon at least one of: attendee physical location, attendee venue preference, historical attendee participation, and current weather conditions.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the respective current status and location of the one or more attendees is based upon real-time data from at least one of: an access control station, a wireless device router, and a geo-tracking device.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method further comprising determining a respective current availability of one or more venues.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the determining a respective current availability of one or more venues is based upon real-time sensor data from at least one of: a camera imaging sensor, an occupancy sensor, and a desk sensor.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the optimizing utilizes an optimization model, and wherein the optimization model comprises at least one of: a continuous optimization model, a discrete optimization model, an unconstrained optimization model, a constrained optimization model, a deterministic optimization model, and a stochastic optimization model.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the booking calendars of the one or more venues comprise at least one of: a unique identifier of the venue, a physical location of the venue, an owner of the venue, a maximum attendee capacity of the venue, one or more reserved times of the venue, and a lead attendee for each of the one or more reserved times of the venue.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A computer system for optimizing venue scheduling, the computer system comprising:<claim-text>a memory medium comprising program instructions;</claim-text><claim-text>a bus coupled to the memory medium; and</claim-text><claim-text>a processor, for executing the program instructions, coupled to a venue scheduling optimization engine via the bus that when executing the program instructions causes the system to:<claim-text>determine a respective future availability of one or more venues, wherein the determining is based upon booking calendars of the one or more venues;</claim-text><claim-text>forecast a plurality of future events of one or more attendees, wherein the forecasting is based upon a respective current status and location of the one or more attendees, and one or more respective personal calendars of the one or more attendees;</claim-text><claim-text>optimize one or more bookings of the one or more venues based upon the determining and the forecasting; and</claim-text><claim-text>update the booking calendars of the one or more venues and the one or more respective personal calendars of the one or more attendees based upon the optimizing.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, the program instructions further causing the system to forecast a number of attendees at each of the one or more venues, wherein the forecasting a number of attendees is based upon at least one of: attendee physical location, attendee venue preference, historical attendee participation, and current weather conditions.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the respective current status and location of the one or more attendees is based upon real-time data from at least one of: an access control station, a wireless device router, and a geo-tracking device.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, the program instructions further causing the system to determine a respective current availability of one or more venues.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the program instructions to determine a respective current availability of one or more venues is based upon real-time sensor data from at least one of: a camera imaging sensor, an occupancy sensor, and a desk sensor.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the program instructions to optimize utilize an optimization model, and wherein the optimization model comprises at least one of: a continuous optimization model, a discrete optimization model, an unconstrained optimization model, a constrained optimization model, a deterministic optimization model, and a stochastic optimization model.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the booking calendars of the one or more venues comprise at least one of: a unique identifier of the venue, a physical location of the venue, an owner of the venue, a maximum attendee capacity of the venue, one or more reserved times of the venue, and a lead attendee for each of the one or more reserved times of the venue.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer program product for optimizing venue scheduling, the computer program product comprising a computer readable hardware storage device, and program instructions stored on the computer readable hardware storage device, to:<claim-text>determine a respective future availability of one or more venues, wherein the determining is based upon booking calendars of the one or more venues;</claim-text><claim-text>forecast a plurality of future events of one or more attendees, wherein the forecasting is based upon a respective current status and location of the one or more attendees, and one or more respective personal calendars of the one or more attendees;</claim-text><claim-text>optimize one or more bookings of the one or more venues based upon the determining and the forecasting; and</claim-text><claim-text>update the booking calendars of the one or more venues and the one or more respective personal calendars of the one or more attendees based upon the optimizing.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer program product of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the computer readable storage device further comprising instructions to forecast a number of attendees at each of the one or more venues, wherein the forecasting a number of attendees is based upon at least one of: attendee physical location, attendee venue preference, historical attendee participation, and current weather conditions.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer program product of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the respective current status and location of the one or more attendees is based upon real-time data from at least one of: an access control station, a wireless device router, and a geo-tracking device.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer program product of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the computer readable storage device further comprising instructions to determine a respective current availability of one or more venues.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer program product of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the program instructions to determine a respective current availability of one or more venues is based upon real-time sensor data from at least one of: a camera imaging sensor, an occupancy sensor, and a desk sensor.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer program product of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the program instructions to optimize utilize an optimization model, and wherein the optimization model comprises at least one of: a continuous optimization model, a discrete optimization model, an unconstrained optimization model, a constrained optimization model, a deterministic optimization model, and a stochastic optimization model.</claim-text></claim></claims></us-patent-application>