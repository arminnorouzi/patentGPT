<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007262A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007262</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17490562</doc-number><date>20210930</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD AND APPARATUS FOR VIDEO CODING</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217021</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>TENCENT AMERICA LLC</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Auyeung</last-name><first-name>Cheung</first-name><address><city>Sunnyvale</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Li</last-name><first-name>Xiang</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Liu</last-name><first-name>Shan</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>TENCENT AMERICA LLC</orgname><role>02</role><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Aspects of the disclosure include methods, apparatuses, and non-transitory computer-readable storage mediums for video encoding/decoding. An apparatus includes processing circuitry that receives a video bitstream including coded residuals of a current block. The processing circuitry determines a plurality of transform coefficients for the current block based on the coded residuals. The processing circuitry calculates, for each of a plurality of sign prediction hypotheses, a cost of the respective sign prediction hypothesis by performing sign prediction on a subset of the plurality of transform coefficients based on a subset of samples in at least one of a topmost row or a leftmost column of the current block. A number of samples in the subset of samples is a constant number. The processing circuitry selects one of the sign prediction hypotheses with a minimal cost. The processing circuitry performs the sign prediction according to the selected sign prediction hypothesis.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="121.33mm" wi="158.75mm" file="US20230007262A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="236.14mm" wi="170.01mm" orientation="landscape" file="US20230007262A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="227.67mm" wi="177.63mm" orientation="landscape" file="US20230007262A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="81.28mm" wi="112.10mm" orientation="landscape" file="US20230007262A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="210.31mm" wi="161.29mm" orientation="landscape" file="US20230007262A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="202.18mm" wi="153.59mm" orientation="landscape" file="US20230007262A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="219.96mm" wi="177.63mm" orientation="landscape" file="US20230007262A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="241.22mm" wi="178.39mm" orientation="landscape" file="US20230007262A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="240.62mm" wi="178.99mm" orientation="landscape" file="US20230007262A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="239.01mm" wi="178.39mm" orientation="landscape" file="US20230007262A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="199.64mm" wi="167.22mm" orientation="landscape" file="US20230007262A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="135.97mm" wi="172.80mm" orientation="landscape" file="US20230007262A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="137.67mm" wi="172.04mm" orientation="landscape" file="US20230007262A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="139.45mm" wi="172.30mm" orientation="landscape" file="US20230007262A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="138.09mm" wi="174.07mm" orientation="landscape" file="US20230007262A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="224.28mm" wi="170.43mm" orientation="landscape" file="US20230007262A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="189.15mm" wi="177.97mm" orientation="landscape" file="US20230007262A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="231.31mm" wi="181.61mm" orientation="landscape" file="US20230007262A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This present application claims the benefit of priority to U.S. Provisional Application No. 63/217,021, &#x201c;LOW COMPLEXITY SIGN PREDICTION,&#x201d; filed on Jun. 30, 2021, which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure describes embodiments generally related to video coding.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent the work is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.</p><p id="p-0005" num="0004">Video coding and decoding can be performed using inter-picture prediction with motion compensation. Uncompressed digital video can include a series of pictures, each picture having a spatial dimension of, for example, 1920&#xd7;1080 luminance samples and associated chrominance samples. The series of pictures can have a fixed or variable picture rate (informally also known as frame rate) of, for example, 60 pictures per second or 60 Hz. Uncompressed video has significant bitrate requirements. For example, 1080p60 4:2:0 video at 8 bit per sample (1920&#xd7;1080 luminance sample resolution at 60 Hz frame rate) requires close to 1.5 Gbit/s bandwidth. An hour of such video requires more than 600 GBytes of storage space.</p><p id="p-0006" num="0005">One purpose of video coding and decoding can be the reduction of redundancy in the input video signal, through compression. Compression can help reduce the aforementioned bandwidth or storage space requirements, in some cases by two orders of magnitude or more. Both lossless and lossy compression, as well as a combination thereof can be employed. Lossless compression refers to techniques where an exact copy of the original signal can be reconstructed from the compressed original signal. When using lossy compression, the reconstructed signal may not be identical to the original signal, but the distortion between original and reconstructed signals is small enough to make the reconstructed signal useful for the intended application. In the case of video, lossy compression is widely employed. The amount of distortion tolerated depends on the application; for example, users of certain consumer streaming applications may tolerate higher distortion than users of television distribution applications. The compression ratio achievable can reflect that: higher allowable/tolerable distortion can yield higher compression ratios.</p><p id="p-0007" num="0006">A video encoder and decoder can utilize techniques from several broad categories, including, for example, motion compensation, transform, quantization, and entropy coding.</p><p id="p-0008" num="0007">Video codec technologies can include techniques known as intra coding. In intra coding, sample values are represented without reference to samples or other data from previously reconstructed reference pictures. In some video codecs, the picture is spatially subdivided into blocks of samples. When all blocks of samples are coded in intra mode, that picture can be an intra picture. Intra pictures and their derivations such as independent decoder refresh pictures, can be used to reset the decoder state and can, therefore, be used as the first picture in a coded video bitstream and a video session, or as a still image. The samples of an intra block can be exposed to a transform, and the transform coefficients can be quantized before entropy coding. Intra prediction can be a technique that minimizes sample values in the pre-transform domain. In some cases, the smaller the DC value after a transform is, and the smaller the AC coefficients are, the fewer the bits that are required at a given quantization step size to represent the block after entropy coding.</p><p id="p-0009" num="0008">Traditional intra coding such as known from, for example MPEG-2 generation coding technologies, does not use intra prediction. However, some newer video compression technologies include techniques that attempt, from, for example, surrounding sample data and/or metadata obtained during the encoding and/or decoding of spatially neighboring, and preceding in decoding order, blocks of data. Such techniques are henceforth called &#x201c;intra prediction&#x201d; techniques. Note that in at least some cases, intra prediction is only using reference data from the current picture under reconstruction and not from reference pictures.</p><p id="p-0010" num="0009">There can be many different forms of intra prediction. When more than one of such techniques can be used in a given video coding technology, the technique in use can be coded in an intra prediction mode. In certain cases, modes can have submodes and/or parameters, and those can be coded individually or included in the mode codeword. Which codeword to use for a given mode, submode, and/or parameter combination can have an impact in the coding efficiency gain through intra prediction, and so can the entropy coding technology used to translate the codewords into a bitstream.</p><p id="p-0011" num="0010">A certain mode of intra prediction was introduced with H.264, refined in H.265, and further refined in newer coding technologies such as joint exploration model (JEM), versatile video coding (VVC), and benchmark set (BMS). A predictor block can be formed using neighboring sample values belonging to already available samples. Sample values of neighboring samples are copied into the predictor block according to a direction. A reference to the direction in use can be coded in the bitstream or may be predicted itself.</p><p id="p-0012" num="0011">Referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, depicted in the lower right is a subset of nine predictor directions known from H.265's <b>33</b> possible predictor directions (corresponding to the 33 angular modes of the 35 intra modes). The point where the arrows converge (<b>101</b>) represents the sample being predicted. The arrows represent the direction from which the sample is being predicted. For example, arrow (<b>102</b>) indicates that sample (<b>101</b>) is predicted from a sample or samples to the upper right, at a 45 degree angle from the horizontal. Similarly, arrow (<b>103</b>) indicates that sample (<b>101</b>) is predicted from a sample or samples to the lower left of sample (<b>101</b>), in a 22.5 degree angle from the horizontal.</p><p id="p-0013" num="0012">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, on the top left there is depicted a square block (<b>104</b>) of 4&#xd7;4 samples (indicated by a dashed, boldface line). The square block (<b>104</b>) includes 16 samples, each labelled with an &#x201c;S&#x201d;, its position in the Y dimension (e.g., row index) and its position in the X dimension (e.g., column index). For example, sample S21 is the second sample in the Y dimension (from the top) and the first (from the left) sample in the X dimension. Similarly, sample S44 is the fourth sample in block (<b>104</b>) in both the Y and X dimensions. As the block is 4&#xd7;4 samples in size, S44 is at the bottom right. Further shown are reference samples that follow a similar numbering scheme. A reference sample is labelled with an R, its Y position (e.g., row index) and X position (column index) relative to block (<b>104</b>). In both H.264 and H.265, prediction samples neighbor the block under reconstruction; therefore no negative values need to be used.</p><p id="p-0014" num="0013">Intra picture prediction can work by copying reference sample values from the neighboring samples as appropriated by the signaled prediction direction. For example, assume the coded video bitstream includes signaling that, for this block, indicates a prediction direction consistent with arrow (<b>102</b>)&#x2014;that is, samples are predicted from a prediction sample or samples to the upper right, at a 45 degree angle from the horizontal. In that case, samples S41, S32, S23, and S14 are predicted from the same reference sample R05. Sample S44 is then predicted from reference sample R08.</p><p id="p-0015" num="0014">In certain cases, the values of multiple reference samples may be combined, for example through interpolation, in order to calculate a reference sample; especially when the directions are not evenly divisible by 45 degrees.</p><p id="p-0016" num="0015">The number of possible directions has increased as video coding technology has developed. In H.264 (year 2003), nine different direction could be represented. That increased to 33 in H.265 (year 2013), and JEM/VVC/BMS, at the time of disclosure, can support up to 65 directions. Experiments have been conducted to identify the most likely directions, and certain techniques in the entropy coding are used to represent those likely directions in a small number of bits, accepting a certain penalty for less likely directions. Further, the directions themselves can sometimes be predicted from neighboring directions used in neighboring, already decoded, blocks.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> shows a schematic (<b>105</b>) that depicts 65 intra prediction directions according to JEM to illustrate the increasing number of prediction directions over time.</p><p id="p-0018" num="0017">The mapping of intra prediction directions bits in the coded video bitstream that represent the direction can be different from video coding technology to video coding technology; and can range, for example, from simple direct mappings of prediction direction to intra prediction mode, to codewords, to complex adaptive schemes involving most probable modes, and similar techniques. In all cases, however, there can be certain directions that are statistically less likely to occur in video content than certain other directions. As the goal of video compression is the reduction of redundancy, those less likely directions will, in a well working video coding technology, be represented by a larger number of bits than more likely directions.</p><p id="p-0019" num="0018">Motion compensation can be a lossy compression technique and can relate to techniques where a block of sample data from a previously reconstructed picture or part thereof (reference picture), after being spatially shifted in a direction indicated by a motion vector (MV henceforth), is used for the prediction of a newly reconstructed picture or picture part. In some cases, the reference picture can be the same as the picture currently under reconstruction. MVs can have two dimensions X and Y, or three dimensions, the third being an indication of the reference picture in use (the latter, indirectly, can be a time dimension).</p><p id="p-0020" num="0019">In some video compression techniques, an MV applicable to a certain area of sample data can be predicted from other MVs, for example from those related to another area of sample data spatially adjacent to the area under reconstruction, and preceding that MV in decoding order. Doing so can substantially reduce the amount of data required for coding the MV, thereby removing redundancy and increasing compression. MV prediction can work effectively, for example, because when coding an input video signal derived from a camera (known as natural video) there is a statistical likelihood that areas larger than the area to which a single MV is applicable move in a similar direction and, therefore, can in some cases be predicted using a similar MV derived from MVs of a neighboring area. That results in the MV found for a given area to be similar or the same as the MV predicted from the surrounding MVs, and that in turn can be represented, after entropy coding, in a smaller number of bits than what would be used if coding the MV directly. In some cases, MV prediction can be an example of lossless compression of a signal (namely: the MVs) derived from the original signal (namely: the sample stream). In other cases, MV prediction itself can be lossy, for example because of rounding errors when calculating a predictor from several surrounding MVs.</p><p id="p-0021" num="0020">Various MV prediction mechanisms are described in H.265/HEVC (ITU-T Rec. H.265, &#x201c;High Efficiency Video Coding&#x201d;, December 2016). Out of the many MV prediction mechanisms that H.265 offers, described herein is a technique henceforth referred to as &#x201c;spatial merge.&#x201d;</p><p id="p-0022" num="0021">Referring to <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>, a current block (<b>111</b>) can include samples that have been found by the encoder during the motion search process to be predictable from a previous block of the same size that has been spatially shifted. Instead of coding that MV directly, the MV can be derived from metadata associated with one or more reference pictures, for example from the most recent (in decoding order) reference picture, using the MV associated with either one of five surrounding samples, denoted A0, A1, and B0, B1, B2 (<b>112</b> through <b>116</b>, respectively). In H.265, the MV prediction can use predictors from the same reference picture that the neighboring block is using.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0023" num="0022">Aspects of the disclosure provide apparatuses for video encoding/decoding. An apparatus includes processing circuitry that receives a video bitstream including coded residuals of a current block. The processing circuitry determines a plurality of transform coefficients for the current block based on the coded residuals. The processing circuitry calculates, for each of a plurality of sign prediction hypotheses, a cost of the respective sign prediction hypothesis by performing sign prediction on a subset of the plurality of transform coefficients based on a subset of samples in at least one of a topmost row or a leftmost column of the current block. A number of samples in the subset of samples is a constant number. The processing circuitry selects one of the sign prediction hypotheses with a minimal cost. The processing circuitry performs the sign prediction according to the selected sign prediction hypothesis.</p><p id="p-0024" num="0023">In an embodiment, the constant number is predetermined. For example, the constant number can be 4 or 8.</p><p id="p-0025" num="0024">In an embodiment, the constant number is determined based on a number of the subset of the plurality of transform coefficients. For example, the number of the subset of the plurality of transform coefficients can be predetermined (e.g., 4&#xd7;4 low frequency transform coefficients in a transform block), and the constant number can be determined to be less than the predetermined number of the subset of the plurality of transform coefficients. The constant number can be 4 for the topmost row or the leftmost column when the subset of the plurality of transform coefficients is predetermined to be 4&#xd7;4 low frequency transform coefficients.</p><p id="p-0026" num="0025">In an embodiment, the constant number is determined based on a comparison between one dimension of the block and a threshold. In an example, when a width (or a height) of the block is greater than the threshold, the constant number in the topmost row (or in the leftmost column) can be a first number. Otherwise, the constant number in the topmost row (or in the leftmost column) can be a second number that is less than the first number.</p><p id="p-0027" num="0026">In an embodiment, the constant number is determined based on a comparison between one dimension of the block and more than one threshold. In an example, the dimension of the block can be compared with two thresholds. When the width (or the height) of the block is not greater than a first threshold, the constant number in the topmost row (or in the leftmost column) can be a first number. When the width (or the height) of the block is greater than a first threshold and less than a second threshold, the constant number in the topmost row (or in the leftmost column) can be a second number. When the width (or the height) of the block is greater than the second threshold, the constant number in the topmost row (or in the leftmost column) can be a third number. In another example, the dimension of the block can be compared with a different number of thresholds.</p><p id="p-0028" num="0027">In an embodiment, the constant number is determined based on a look-up table that includes a plurality of values of the constant number. Each of plurality of values is associated with a different value of one dimension of the block. For example, when the width (or the height) of the block is within a first range, the constant number in the topmost row (or in the leftmost column) can be a first number according to the look-up table. When the width (or the height) of the block is within a second range, the constant number in the topmost row (or in the leftmost column) can be a second number according to the look-up table, and so on.</p><p id="p-0029" num="0028">In an embodiment, positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are determined based on one dimension of the block. For example, the positions of the subset of samples in the topmost row (or the leftmost column) of the block are determined based on the width (or the height) of the block.</p><p id="p-0030" num="0029">In an embodiment, at least two positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are adjacent. For example, the positions of two samples in the topmost row (or in the leftmost column) are adjacent to each other.</p><p id="p-0031" num="0030">In an embodiment, positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are evenly spaced.</p><p id="p-0032" num="0031">In an embodiment, the processing circuitry calculates, for each of the plurality of sign prediction hypotheses based on (i) the subset of samples in the at least one of the topmost row or the leftmost column of the current block and (ii) neighboring reconstructed samples in at least one of a row above the current block or a column left to the current block.</p><p id="p-0033" num="0032">Aspects of the disclosure provide methods for video encoding/decoding. The methods can perform any one or a combination of the processes performed by the apparatuses for video encoding/decoding. In the method, a video bitstream including coded residuals of a current block is received. A plurality of transform coefficients is determined for the current block based on the coded residuals. For each of a plurality of sign prediction hypotheses, a cost of the respective sign prediction hypothesis is calculated by performing sign prediction on a subset of the plurality of transform coefficients based on a subset of samples in at least one of a topmost row or a leftmost column of the current block. A number of samples in the subset of samples is a constant number. One of the sign prediction hypotheses with a minimal cost is selected. The sign prediction is performed according to the selected sign prediction hypothesis.</p><p id="p-0034" num="0033">Aspects of the disclosure also provide non-transitory computer-readable mediums storing instructions which when executed by at least one processor cause the at least one processor to perform any one or a combination of the methods for video encoding/decoding.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0035" num="0034">Further features, the nature, and various advantages of the disclosed subject matter will be more apparent from the following detailed description and the accompanying drawings in which:</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a schematic illustration of an exemplary subset of intra prediction modes;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is an illustration of exemplary intra prediction directions;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>1</b>C</figref> is a schematic illustration of a current block and its surrounding spatial merge candidates in one example;</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic illustration of a simplified block diagram of a communication system in accordance with an embodiment;</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic illustration of a simplified block diagram of a communication system in accordance with an embodiment;</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic illustration of a simplified block diagram of a decoder in accordance with an embodiment;</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic illustration of a simplified block diagram of an encoder in accordance with an embodiment;</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a block diagram of an encoder in accordance with another embodiment;</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a block diagram of a decoder in accordance with another embodiment;</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows an exemplary sign prediction process according to an embodiment of the disclosure;</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an exemplary calculation of a cost of a hypothesis reconstructed border according to an embodiment of the disclosure;</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an exemplary calculation of the cost of the hypothesis reconstructed border according to another embodiment of the disclosure;</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows an exemplary calculation of the cost of the hypothesis reconstructed border according to another embodiment of the disclosure;</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows an exemplary calculation of the cost of the hypothesis reconstructed border according to another embodiment of the disclosure;</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows an exemplary sign prediction process according to another embodiment of the disclosure;</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows an exemplary flowchart in accordance with an embodiment; and</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a schematic illustration of a computer system in accordance with an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0053" num="0052">I. Video Decoder and Encoder Systems</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a simplified block diagram of a communication system (<b>200</b>) according to an embodiment of the present disclosure. The communication system (<b>200</b>) includes a plurality of terminal devices that can communicate with each other, via, for example, a network (<b>250</b>). For example, the communication system (<b>200</b>) includes a first pair of terminal devices (<b>210</b>) and (<b>220</b>) interconnected via the network (<b>250</b>). In the <figref idref="DRAWINGS">FIG. <b>2</b></figref> example, the first pair of terminal devices (<b>210</b>) and (<b>220</b>) performs unidirectional transmission of data. For example, the terminal device (<b>210</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device (<b>210</b>)) for transmission to the other terminal device (<b>220</b>) via the network (<b>250</b>). The encoded video data can be transmitted in the form of one or more coded video bitstreams. The terminal device (<b>220</b>) may receive the coded video data from the network (<b>250</b>), decode the coded video data to recover the video pictures and display video pictures according to the recovered video data. Unidirectional data transmission may be common in media serving applications and the like.</p><p id="p-0055" num="0054">In another example, the communication system (<b>200</b>) includes a second pair of terminal devices (<b>230</b>) and (<b>240</b>) that performs bidirectional transmission of coded video data that may occur, for example, during videoconferencing. For bidirectional transmission of data, in an example, each terminal device of the terminal devices (<b>230</b>) and (<b>240</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device) for transmission to the other terminal device of the terminal devices (<b>230</b>) and (<b>240</b>) via the network (<b>250</b>). Each terminal device of the terminal devices (<b>230</b>) and (<b>240</b>) also may receive the coded video data transmitted by the other terminal device of the terminal devices (<b>230</b>) and (<b>240</b>), and may decode the coded video data to recover the video pictures and may display video pictures at an accessible display device according to the recovered video data.</p><p id="p-0056" num="0055">In the <figref idref="DRAWINGS">FIG. <b>2</b></figref> example, the terminal devices (<b>210</b>), (<b>220</b>), (<b>230</b>) and (<b>240</b>) may be illustrated as servers, personal computers and smart phones but the principles of the present disclosure may be not so limited. Embodiments of the present disclosure find application with laptop computers, tablet computers, media players and/or dedicated video conferencing equipment. The network (<b>250</b>) represents any number of networks that convey coded video data among the terminal devices (<b>210</b>), (<b>220</b>), (<b>230</b>) and (<b>240</b>), including for example wireline (wired) and/or wireless communication networks. The communication network (<b>250</b>) may exchange data in circuit-switched and/or packet-switched channels. Representative networks include telecommunications networks, local area networks, wide area networks and/or the Internet. For the purposes of the present discussion, the architecture and topology of the network (<b>250</b>) may be immaterial to the operation of the present disclosure unless explained herein below.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates, as an example for an application for the disclosed subject matter, the placement of a video encoder and a video decoder in a streaming environment. The disclosed subject matter can be equally applicable to other video enabled applications, including, for example, video conferencing, digital TV, storing of compressed video on digital media including CD, DVD, memory stick, and the like.</p><p id="p-0058" num="0057">A streaming system may include a capture subsystem (<b>313</b>) that can include a video source (<b>301</b>), for example a digital camera, creating for example a stream of video pictures (<b>302</b>) that are uncompressed. In an example, the stream of video pictures (<b>302</b>) includes samples that are taken by the digital camera. The stream of video pictures (<b>302</b>), depicted as a bold line to emphasize a high data volume when compared to encoded video data (<b>304</b>) (or coded video bitstreams), can be processed by an electronic device (<b>320</b>) that includes a video encoder (<b>303</b>) coupled to the video source (<b>301</b>). The video encoder (<b>303</b>) can include hardware, software, or a combination thereof to enable or implement aspects of the disclosed subject matter as described in more detail below. The encoded video data (<b>304</b>) (or encoded video bitstream (<b>304</b>)), depicted as a thin line to emphasize the lower data volume when compared to the stream of video pictures (<b>302</b>), can be stored on a streaming server (<b>305</b>) for future use. One or more streaming client subsystems, such as client subsystems (<b>306</b>) and (<b>308</b>) in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can access the streaming server (<b>305</b>) to retrieve copies (<b>307</b>) and (<b>309</b>) of the encoded video data (<b>304</b>). A client subsystem (<b>306</b>) can include a video decoder (<b>310</b>), for example, in an electronic device (<b>330</b>). The video decoder (<b>310</b>) decodes the incoming copy (<b>307</b>) of the encoded video data and creates an outgoing stream of video pictures (<b>311</b>) that can be rendered on a display (<b>312</b>) (e.g., display screen) or other rendering device (not depicted). In some streaming systems, the encoded video data (<b>304</b>), (<b>307</b>), and (<b>309</b>) (e.g., video bitstreams) can be encoded according to certain video coding/compression standards. Examples of those standards include ITU-T Recommendation H.265. In an example, a video coding standard under development is informally known as Versatile Video Coding (VVC). The disclosed subject matter may be used in the context of VVC.</p><p id="p-0059" num="0058">It is noted that the electronic devices (<b>320</b>) and (<b>330</b>) can include other components (not shown). For example, the electronic device (<b>320</b>) can include a video decoder (not shown) and the electronic device (<b>330</b>) can include a video encoder (not shown) as well.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a block diagram of a video decoder (<b>410</b>) according to an embodiment of the present disclosure. The video decoder (<b>410</b>) can be included in an electronic device (<b>430</b>). The electronic device (<b>430</b>) can include a receiver (<b>431</b>) (e.g., receiving circuitry). The video decoder (<b>410</b>) can be used in the place of the video decoder (<b>310</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0061" num="0060">The receiver (<b>431</b>) may receive one or more coded video sequences to be decoded by the video decoder (<b>410</b>); in the same or another embodiment, one coded video sequence at a time, where the decoding of each coded video sequence is independent from other coded video sequences. The coded video sequence may be received from a channel (<b>401</b>), which may be a hardware/software link to a storage device which stores the encoded video data. The receiver (<b>431</b>) may receive the encoded video data with other data, for example, coded audio data and/or ancillary data streams, that may be forwarded to their respective using entities (not depicted). The receiver (<b>431</b>) may separate the coded video sequence from the other data. To combat network jitter, a buffer memory (<b>415</b>) may be coupled in between the receiver (<b>431</b>) and an entropy decoder/parser (<b>420</b>) (&#x201c;parser (<b>420</b>)&#x201d; henceforth). In certain applications, the buffer memory (<b>415</b>) is part of the video decoder (<b>410</b>). In others, it can be outside of the video decoder (<b>410</b>) (not depicted). In still others, there can be a buffer memory (not depicted) outside of the video decoder (<b>410</b>), for example to combat network jitter, and in addition another buffer memory (<b>415</b>) inside the video decoder (<b>410</b>), for example to handle playout timing. When the receiver (<b>431</b>) is receiving data from a store/forward device of sufficient bandwidth and controllability, or from an isosynchronous network, the buffer memory (<b>415</b>) may not be needed, or can be small. For use on best effort packet networks such as the Internet, the buffer memory (<b>415</b>) may be required, can be comparatively large and can be advantageously of adaptive size, and may at least partially be implemented in an operating system or similar elements (not depicted) outside of the video decoder (<b>410</b>).</p><p id="p-0062" num="0061">The video decoder (<b>410</b>) may include the parser (<b>420</b>) to reconstruct symbols (<b>421</b>) from the coded video sequence. Categories of those symbols include information used to manage operation of the video decoder (<b>410</b>), and potentially information to control a rendering device such as a render device (<b>412</b>) (e.g., a display screen) that is not an integral part of the electronic device (<b>430</b>) but can be coupled to the electronic device (<b>430</b>), as was shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The control information for the rendering device(s) may be in the form of Supplemental Enhancement Information (SEI messages) or Video Usability Information (VUI) parameter set fragments (not depicted). The parser (<b>420</b>) may parse/entropy-decode the coded video sequence that is received. The coding of the coded video sequence can be in accordance with a video coding technology or standard, and can follow various principles, including variable length coding, Huffman coding, arithmetic coding with or without context sensitivity, and so forth. The parser (<b>420</b>) may extract from the coded video sequence, a set of subgroup parameters for at least one of the subgroups of pixels in the video decoder, based upon at least one parameter corresponding to the group. Subgroups can include Groups of Pictures (GOPs), pictures, tiles, slices, macroblocks, Coding Units (CUs), blocks, Transform Units (TUs), Prediction Units (PUs) and so forth. The parser (<b>420</b>) may also extract from the coded video sequence information such as transform coefficients, quantizer parameter values, MVs, and so forth.</p><p id="p-0063" num="0062">The parser (<b>420</b>) may perform an entropy decoding/parsing operation on the video sequence received from the buffer memory (<b>415</b>), so as to create symbols (<b>421</b>).</p><p id="p-0064" num="0063">Reconstruction of the symbols (<b>421</b>) can involve multiple different units depending on the type of the coded video picture or parts thereof (such as: inter and intra picture, inter and intra block), and other factors. Which units are involved, and how, can be controlled by the subgroup control information that was parsed from the coded video sequence by the parser (<b>420</b>). The flow of such subgroup control information between the parser (<b>420</b>) and the multiple units below is not depicted for clarity.</p><p id="p-0065" num="0064">Beyond the functional blocks already mentioned, the video decoder (<b>410</b>) can be conceptually subdivided into a number of functional units as described below. In a practical implementation operating under commercial constraints, many of these units interact closely with each other and can, at least partly, be integrated into each other. However, for the purpose of describing the disclosed subject matter, the conceptual subdivision into the functional units below is appropriate.</p><p id="p-0066" num="0065">A first unit is the scaler/inverse transform unit (<b>451</b>). The scaler/inverse transform unit (<b>451</b>) receives a quantized transform coefficient as well as control information, including which transform to use, block size, quantization factor, quantization scaling matrices, etc. as symbol(s) (<b>421</b>) from the parser (<b>420</b>). The scaler/inverse transform unit (<b>451</b>) can output blocks comprising sample values that can be input into aggregator (<b>455</b>).</p><p id="p-0067" num="0066">In some cases, the output samples of the scaler/inverse transform (<b>451</b>) can pertain to an intra coded block; that is: a block that is not using predictive information from previously reconstructed pictures, but can use predictive information from previously reconstructed parts of the current picture. Such predictive information can be provided by an intra picture prediction unit (<b>452</b>). In some cases, the intra picture prediction unit (<b>452</b>) generates a block of the same size and shape of the block under reconstruction, using surrounding already reconstructed information fetched from the current picture buffer (<b>458</b>). The current picture buffer (<b>458</b>) buffers, for example, partly reconstructed current picture and/or fully reconstructed current picture. The aggregator (<b>455</b>), in some cases, adds, on a per sample basis, the prediction information that the intra prediction unit (<b>452</b>) has generated to the output sample information as provided by the scaler/inverse transform unit (<b>451</b>).</p><p id="p-0068" num="0067">In other cases, the output samples of the scaler/inverse transform unit (<b>451</b>) can pertain to an inter coded, and potentially motion compensated block. In such a case, a motion compensation prediction unit (<b>453</b>) can access reference picture memory (<b>457</b>) to fetch samples used for prediction. After motion compensating the fetched samples in accordance with the symbols (<b>421</b>) pertaining to the block, these samples can be added by the aggregator (<b>455</b>) to the output of the scaler/inverse transform unit (<b>451</b>) (in this case called the residual samples or residual signal) so as to generate output sample information. The addresses within the reference picture memory (<b>457</b>) from where the motion compensation prediction unit (<b>453</b>) fetches prediction samples can be controlled by MVs, available to the motion compensation prediction unit (<b>453</b>) in the form of symbols (<b>421</b>) that can have, for example X, Y, and reference picture components. Motion compensation also can include interpolation of sample values as fetched from the reference picture memory (<b>457</b>) when sub-sample exact MVs are in use, MV prediction mechanisms, and so forth.</p><p id="p-0069" num="0068">The output samples of the aggregator (<b>455</b>) can be subject to various loop filtering techniques in the loop filter unit (<b>456</b>). Video compression technologies can include in-loop filter technologies that are controlled by parameters included in the coded video sequence (also referred to as coded video bitstream) and made available to the loop filter unit (<b>456</b>) as symbols (<b>421</b>) from the parser (<b>420</b>), but can also be responsive to meta-information obtained during the decoding of previous (in decoding order) parts of the coded picture or coded video sequence, as well as responsive to previously reconstructed and loop-filtered sample values.</p><p id="p-0070" num="0069">The output of the loop filter unit (<b>456</b>) can be a sample stream that can be output to the render device (<b>412</b>) as well as stored in the reference picture memory (<b>457</b>) for use in future inter-picture prediction.</p><p id="p-0071" num="0070">Certain coded pictures, once fully reconstructed, can be used as reference pictures for future prediction. For example, once a coded picture corresponding to a current picture is fully reconstructed and the coded picture has been identified as a reference picture (by, for example, the parser (<b>420</b>)), the current picture buffer (<b>458</b>) can become a part of the reference picture memory (<b>457</b>), and a fresh current picture buffer can be reallocated before commencing the reconstruction of the following coded picture.</p><p id="p-0072" num="0071">The video decoder (<b>410</b>) may perform decoding operations according to a predetermined video compression technology in a standard, such as ITU-T Rec. H.265. The coded video sequence may conform to a syntax specified by the video compression technology or standard being used, in the sense that the coded video sequence adheres to both the syntax of the video compression technology or standard and the profiles as documented in the video compression technology or standard. Specifically, a profile can select certain tools as the only tools available for use under that profile from all the tools available in the video compression technology or standard. Also necessary for compliance can be that the complexity of the coded video sequence is within bounds as defined by the level of the video compression technology or standard. In some cases, levels restrict the maximum picture size, maximum frame rate, maximum reconstruction sample rate (measured in, for example megasamples per second), maximum reference picture size, and so on. Limits set by levels can, in some cases, be further restricted through Hypothetical Reference Decoder (HRD) specifications and metadata for HRD buffer management signaled in the coded video sequence.</p><p id="p-0073" num="0072">In an embodiment, the receiver (<b>431</b>) may receive additional (redundant) data with the encoded video. The additional data may be included as part of the coded video sequence(s). The additional data may be used by the video decoder (<b>410</b>) to properly decode the data and/or to more accurately reconstruct the original video data. Additional data can be in the form of, for example, temporal, spatial, or signal noise ratio (SNR) enhancement layers, redundant slices, redundant pictures, forward error correction codes, and so on.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of a video encoder (<b>503</b>) according to an embodiment of the present disclosure. The video encoder (<b>503</b>) is included in an electronic device (<b>520</b>). The electronic device (<b>520</b>) includes a transmitter (<b>540</b>) (e.g., transmitting circuitry). The video encoder (<b>503</b>) can be used in the place of the video encoder (<b>303</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0075" num="0074">The video encoder (<b>503</b>) may receive video samples from a video source (<b>501</b>) (that is not part of the electronic device (<b>520</b>) in the <figref idref="DRAWINGS">FIG. <b>5</b></figref> example) that may capture video image(s) to be coded by the video encoder (<b>503</b>). In another example, the video source (<b>501</b>) is a part of the electronic device (<b>520</b>).</p><p id="p-0076" num="0075">The video source (<b>501</b>) may provide the source video sequence to be coded by the video encoder (<b>503</b>) in the form of a digital video sample stream that can be of any suitable bit depth (for example: 8 bit, 10 bit, 12 bit, . . . ), any colorspace (for example, BT.601 Y CrCB, RGB, . . . ), and any suitable sampling structure (for example Y CrCb 4:2:0, Y CrCb 4:4:4). In a media serving system, the video source (<b>501</b>) may be a storage device storing previously prepared video. In a videoconferencing system, the video source (<b>501</b>) may be a camera that captures local image information as a video sequence. Video data may be provided as a plurality of individual pictures that impart motion when viewed in sequence. The pictures themselves may be organized as a spatial array of pixels, wherein each pixel can comprise one or more samples depending on the sampling structure, color space, etc. in use. A person skilled in the art can readily understand the relationship between pixels and samples. The description below focuses on samples.</p><p id="p-0077" num="0076">According to an embodiment, the video encoder (<b>503</b>) may code and compress the pictures of the source video sequence into a coded video sequence (<b>543</b>) in real time or under any other time constraints as required by the application. Enforcing appropriate coding speed is one function of a controller (<b>550</b>). In some embodiments, the controller (<b>550</b>) controls other functional units as described below and is functionally coupled to the other functional units. The coupling is not depicted for clarity. Parameters set by the controller (<b>550</b>) can include rate control related parameters (picture skip, quantizer, lambda value of rate-distortion optimization techniques, . . . ), picture size, group of pictures (GOP) layout, maximum MV allowed reference area, and so forth. The controller (<b>550</b>) can be configured to have other suitable functions that pertain to the video encoder (<b>503</b>) optimized for a certain system design.</p><p id="p-0078" num="0077">In some embodiments, the video encoder (<b>503</b>) is configured to operate in a coding loop. As an oversimplified description, in an example, the coding loop can include a source coder (<b>530</b>) (e.g., responsible for creating symbols, such as a symbol stream, based on an input picture to be coded, and a reference picture(s)), and a (local) decoder (<b>533</b>) embedded in the video encoder (<b>503</b>). The decoder (<b>533</b>) reconstructs the symbols to create the sample data in a similar manner as a (remote) decoder also would create (as any compression between symbols and coded video bitstream is lossless in the video compression technologies considered in the disclosed subject matter). The reconstructed sample stream (sample data) is input to the reference picture memory (<b>534</b>). As the decoding of a symbol stream leads to bit-exact results independent of decoder location (local or remote), the content in the reference picture memory (<b>534</b>) is also bit exact between the local encoder and remote encoder. In other words, the prediction part of an encoder &#x201c;sees&#x201d; as reference picture samples exactly the same sample values as a decoder would &#x201c;see&#x201d; when using prediction during decoding. This fundamental principle of reference picture synchronicity (and resulting drift, if synchronicity cannot be maintained, for example because of channel errors) is used in some related arts as well.</p><p id="p-0079" num="0078">The operation of the &#x201c;local&#x201d; decoder (<b>533</b>) can be the same as of a &#x201c;remote&#x201d; decoder, such as the video decoder (<b>410</b>), which has already been described in detail above in conjunction with <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Briefly referring also to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, however, as symbols are available and encoding/decoding of symbols to a coded video sequence by an entropy coder (<b>545</b>) and the parser (<b>420</b>) can be lossless, the entropy decoding parts of the video decoder (<b>410</b>), including the buffer memory (<b>415</b>) and the parser (<b>420</b>) may not be fully implemented in the local decoder (<b>533</b>).</p><p id="p-0080" num="0079">An observation that can be made at this point is that any decoder technology except the parsing/entropy decoding that is present in a decoder also necessarily needs to be present, in substantially identical functional form, in a corresponding encoder. For this reason, the disclosed subject matter focuses on decoder operation. The description of encoder technologies can be abbreviated as they are the inverse of the comprehensively described decoder technologies. Only in certain areas a more detail description is required and provided below.</p><p id="p-0081" num="0080">During operation, in some examples, the source coder (<b>530</b>) may perform motion compensated predictive coding, which codes an input picture predictively with reference to one or more previously-coded picture from the video sequence that were designated as &#x201c;reference pictures&#x201d;. In this manner, the coding engine (<b>532</b>) codes differences between pixel blocks of an input picture and pixel blocks of reference picture(s) that may be selected as prediction reference(s) to the input picture.</p><p id="p-0082" num="0081">The local video decoder (<b>533</b>) may decode coded video data of pictures that may be designated as reference pictures, based on symbols created by the source coder (<b>530</b>). Operations of the coding engine (<b>532</b>) may advantageously be lossy processes. When the coded video data may be decoded at a video decoder (not shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>), the reconstructed video sequence typically may be a replica of the source video sequence with some errors. The local video decoder (<b>533</b>) replicates decoding processes that may be performed by the video decoder on reference pictures and may cause reconstructed reference pictures to be stored in the reference picture cache (<b>534</b>). In this manner, the video encoder (<b>503</b>) may store copies of reconstructed reference pictures locally that have common content as the reconstructed reference pictures that will be obtained by a far-end video decoder (absent transmission errors).</p><p id="p-0083" num="0082">The predictor (<b>535</b>) may perform prediction searches for the coding engine (<b>532</b>). That is, for a new picture to be coded, the predictor (<b>535</b>) may search the reference picture memory (<b>534</b>) for sample data (as candidate reference pixel blocks) or certain metadata such as reference picture MVs, block shapes, and so on, that may serve as an appropriate prediction reference for the new pictures. The predictor (<b>535</b>) may operate on a sample block-by-pixel block basis to find appropriate prediction references. In some cases, as determined by search results obtained by the predictor (<b>535</b>), an input picture may have prediction references drawn from multiple reference pictures stored in the reference picture memory (<b>534</b>).</p><p id="p-0084" num="0083">The controller (<b>550</b>) may manage coding operations of the source coder (<b>530</b>), including, for example, setting of parameters and subgroup parameters used for encoding the video data.</p><p id="p-0085" num="0084">Output of all aforementioned functional units may be subjected to entropy coding in the entropy coder (<b>545</b>). The entropy coder (<b>545</b>) translates the symbols as generated by the various functional units into a coded video sequence, by lossless compressing the symbols according to technologies such as Huffman coding, variable length coding, arithmetic coding, and so forth.</p><p id="p-0086" num="0085">The transmitter (<b>540</b>) may buffer the coded video sequence(s) as created by the entropy coder (<b>545</b>) to prepare for transmission via a communication channel (<b>560</b>), which may be a hardware/software link to a storage device which would store the encoded video data. The transmitter (<b>540</b>) may merge coded video data from the video coder (<b>503</b>) with other data to be transmitted, for example, coded audio data and/or ancillary data streams (sources not shown).</p><p id="p-0087" num="0086">The controller (<b>550</b>) may manage operation of the video encoder (<b>503</b>). During coding, the controller (<b>550</b>) may assign to each coded picture a certain coded picture type, which may affect the coding techniques that may be applied to the respective picture. For example, pictures often may be assigned as one of the following picture types:</p><p id="p-0088" num="0087">An Intra Picture (I picture) may be one that may be coded and decoded without using any other picture in the sequence as a source of prediction. Some video codecs allow for different types of intra pictures, including, for example Independent Decoder Refresh (&#x201c;IDR&#x201d;) Pictures. A person skilled in the art is aware of those variants of I pictures and their respective applications and features.</p><p id="p-0089" num="0088">A predictive picture (P picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most one MV and reference index to predict the sample values of each block.</p><p id="p-0090" num="0089">A bi-directionally predictive picture (B Picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most two MVs and reference indices to predict the sample values of each block. Similarly, multiple-predictive pictures can use more than two reference pictures and associated metadata for the reconstruction of a single block.</p><p id="p-0091" num="0090">Source pictures commonly may be subdivided spatially into a plurality of sample blocks (for example, blocks of 4&#xd7;4, 8&#xd7;8, 4&#xd7;8, or 16&#xd7;16 samples each) and coded on a block-by-block basis. Blocks may be coded predictively with reference to other (already coded) blocks as determined by the coding assignment applied to the blocks' respective pictures. For example, blocks of I pictures may be coded non-predictively or they may be coded predictively with reference to already coded blocks of the same picture (spatial prediction or intra prediction). Pixel blocks of P pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one previously coded reference picture. Blocks of B pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one or two previously coded reference pictures.</p><p id="p-0092" num="0091">The video encoder (<b>503</b>) may perform coding operations according to a predetermined video coding technology or standard, such as ITU-T Rec. H.265. In its operation, the video encoder (<b>503</b>) may perform various compression operations, including predictive coding operations that exploit temporal and spatial redundancies in the input video sequence. The coded video data, therefore, may conform to a syntax specified by the video coding technology or standard being used.</p><p id="p-0093" num="0092">In an embodiment, the transmitter (<b>540</b>) may transmit additional data with the encoded video. The source coder (<b>530</b>) may include such data as part of the coded video sequence. Additional data may comprise temporal/spatial/SNR enhancement layers, other forms of redundant data such as redundant pictures and slices, SEI messages, VUI parameter set fragments, and so on.</p><p id="p-0094" num="0093">A video may be captured as a plurality of source pictures (video pictures) in a temporal sequence. Intra-picture prediction (often abbreviated to intra prediction) makes use of spatial correlation in a given picture, and inter-picture prediction makes uses of the (temporal or other) correlation between the pictures. In an example, a specific picture under encoding/decoding, which is referred to as a current picture, is partitioned into blocks. When a block in the current picture is similar to a reference block in a previously coded and still buffered reference picture in the video, the block in the current picture can be coded by a vector that is referred to as a MV. The MV points to the reference block in the reference picture, and can have a third dimension identifying the reference picture, in case multiple reference pictures are in use.</p><p id="p-0095" num="0094">In some embodiments, a bi-prediction technique can be used in the inter-picture prediction. According to the bi-prediction technique, two reference pictures, such as a first reference picture and a second reference picture that are both prior in decoding order to the current picture in the video (but may be in the past and future, respectively, in display order) are used. A block in the current picture can be coded by a first MV that points to a first reference block in the first reference picture, and a second MV that points to a second reference block in the second reference picture. The block can be predicted by a combination of the first reference block and the second reference block.</p><p id="p-0096" num="0095">Further, a merge mode technique can be used in the inter-picture prediction to improve coding efficiency.</p><p id="p-0097" num="0096">According to some embodiments of the disclosure, predictions, such as inter-picture predictions and intra-picture predictions are performed in the unit of blocks. For example, according to the HEVC standard, a picture in a sequence of video pictures is partitioned into coding tree units (CTU) for compression, the CTUs in a picture have the same size, such as 64&#xd7;64 pixels, 32&#xd7;32 pixels, or 16&#xd7;16 pixels. In general, a CTU includes three coding tree blocks (CTBs), which are one luma CTB and two chroma CTBs. Each CTU can be recursively quad-tree split into one or multiple coding units (CUs). For example, a CTU of 64&#xd7;64 pixels can be split into one CU of 64&#xd7;64 pixels, or 4 CUs of 32&#xd7;32 pixels, or 16 CUs of 16&#xd7;16 pixels. In an example, each CU is analyzed to determine a prediction type for the CU, such as an inter prediction type or an intra prediction type. The CU is split into one or more prediction units (PUs) depending on the temporal and/or spatial predictability. Generally, each PU includes a luma prediction block (PB), and two chroma PBs. In an embodiment, a prediction operation in coding (encoding/decoding) is performed in the unit of a prediction block. Using a luma prediction block as an example of a prediction block, the prediction block includes a matrix of values (e.g., luma values) for pixels, such as 8&#xd7;8 pixels, 16&#xd7;16 pixels, 8&#xd7;16 pixels, 16&#xd7;8 pixels, and the like.</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a diagram of a video encoder (<b>603</b>) according to another embodiment of the disclosure. The video encoder (<b>603</b>) is configured to receive a processing block (e.g., a prediction block) of sample values within a current video picture in a sequence of video pictures, and encode the processing block into a coded picture that is part of a coded video sequence. In an example, the video encoder (<b>603</b>) is used in the place of the video encoder (<b>303</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0099" num="0098">In an HEVC example, the video encoder (<b>603</b>) receives a matrix of sample values for a processing block, such as a prediction block of 8&#xd7;8 samples, and the like. The video encoder (<b>603</b>) determines whether the processing block is best coded using intra mode, inter mode, or bi-prediction mode using, for example, rate-distortion optimization. When the processing block is to be coded in intra mode, the video encoder (<b>603</b>) may use an intra prediction technique to encode the processing block into the coded picture; and when the processing block is to be coded in inter mode or bi-prediction mode, the video encoder (<b>603</b>) may use an inter prediction or bi-prediction technique, respectively, to encode the processing block into the coded picture. In certain video coding technologies, merge mode can be an inter picture prediction submode where the MV is derived from one or more MV predictors without the benefit of a coded MV component outside the predictors. In certain other video coding technologies, a MV component applicable to the subject block may be present. In an example, the video encoder (<b>603</b>) includes other components, such as a mode decision module (not shown) to determine the mode of the processing blocks.</p><p id="p-0100" num="0099">In the <figref idref="DRAWINGS">FIG. <b>6</b></figref> example, the video encoder (<b>603</b>) includes the inter encoder (<b>630</b>), an intra encoder (<b>622</b>), a residue calculator (<b>623</b>), a switch (<b>626</b>), a residue encoder (<b>624</b>), a general controller (<b>621</b>), and an entropy encoder (<b>625</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0101" num="0100">The inter encoder (<b>630</b>) is configured to receive the samples of the current block (e.g., a processing block), compare the block to one or more reference blocks in reference pictures (e.g., blocks in previous pictures and later pictures), generate inter prediction information (e.g., description of redundant information according to inter encoding technique, MVs, merge mode information), and calculate inter prediction results (e.g., prediction block) based on the inter prediction information using any suitable technique. In some examples, the reference pictures are decoded reference pictures that are decoded based on the encoded video information.</p><p id="p-0102" num="0101">The intra encoder (<b>622</b>) is configured to receive the samples of the current block (e.g., a processing block), in some cases compare the block to blocks already coded in the same picture, generate quantized coefficients after transform, and in some cases also intra prediction information (e.g., an intra prediction direction information according to one or more intra encoding techniques). In an example, the intra encoder (<b>622</b>) also calculates intra prediction results (e.g., prediction block) based on the intra prediction information and reference blocks in the same picture.</p><p id="p-0103" num="0102">The general controller (<b>621</b>) is configured to determine general control data and control other components of the video encoder (<b>603</b>) based on the general control data. In an example, the general controller (<b>621</b>) determines the mode of the block, and provides a control signal to the switch (<b>626</b>) based on the mode. For example, when the mode is the intra mode, the general controller (<b>621</b>) controls the switch (<b>626</b>) to select the intra mode result for use by the residue calculator (<b>623</b>), and controls the entropy encoder (<b>625</b>) to select the intra prediction information and include the intra prediction information in the bitstream; and when the mode is the inter mode, the general controller (<b>621</b>) controls the switch (<b>626</b>) to select the inter prediction result for use by the residue calculator (<b>623</b>), and controls the entropy encoder (<b>625</b>) to select the inter prediction information and include the inter prediction information in the bitstream.</p><p id="p-0104" num="0103">The residue calculator (<b>623</b>) is configured to calculate a difference (residue data) between the received block and prediction results selected from the intra encoder (<b>622</b>) or the inter encoder (<b>630</b>). The residue encoder (<b>624</b>) is configured to operate based on the residue data to encode the residue data to generate the transform coefficients. In an example, the residue encoder (<b>624</b>) is configured to convert the residue data from a spatial domain to a frequency domain, and generate the transform coefficients. The transform coefficients are then subject to quantization processing to obtain quantized transform coefficients. In various embodiments, the video encoder (<b>603</b>) also includes a residue decoder (<b>628</b>). The residue decoder (<b>628</b>) is configured to perform inverse-transform, and generate the decoded residue data. The decoded residue data can be suitably used by the intra encoder (<b>622</b>) and the inter encoder (<b>630</b>). For example, the inter encoder (<b>630</b>) can generate decoded blocks based on the decoded residue data and inter prediction information, and the intra encoder (<b>622</b>) can generate decoded blocks based on the decoded residue data and the intra prediction information. The decoded blocks are suitably processed to generate decoded pictures and the decoded pictures can be buffered in a memory circuit (not shown) and used as reference pictures in some examples.</p><p id="p-0105" num="0104">The entropy encoder (<b>625</b>) is configured to format the bitstream to include the encoded block. The entropy encoder (<b>625</b>) is configured to include various information according to a suitable standard such as HEVC. In an example, the entropy encoder (<b>625</b>) is configured to include the general control data, the selected prediction information (e.g., intra prediction information or inter prediction information), the residue information, and other suitable information in the bitstream. Note that, according to the disclosed subject matter, when coding a block in the merge submode of either inter mode or bi-prediction mode, there is no residue information.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a diagram of a video decoder (<b>710</b>) according to another embodiment of the disclosure. The video decoder (<b>710</b>) is configured to receive coded pictures that are part of a coded video sequence, and decode the coded pictures to generate reconstructed pictures. In an example, the video decoder (<b>710</b>) is used in the place of the video decoder (<b>310</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0107" num="0106">In the <figref idref="DRAWINGS">FIG. <b>7</b></figref> example, the video decoder (<b>710</b>) includes an entropy decoder (<b>771</b>), an inter decoder (<b>780</b>), a residue decoder (<b>773</b>), a reconstruction module (<b>774</b>), and an intra decoder (<b>772</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0108" num="0107">The entropy decoder (<b>771</b>) can be configured to reconstruct, from the coded picture, certain symbols that represent the syntax elements of which the coded picture is made up. Such symbols can include, for example, the mode in which a block is coded (such as, for example, intra mode, inter mode, bi-predicted mode, the latter two in merge submode or another submode), prediction information (such as, for example, intra prediction information or inter prediction information) that can identify certain sample or metadata that is used for prediction by the intra decoder (<b>772</b>) or the inter decoder (<b>780</b>), respectively, residual information in the form of, for example, quantized transform coefficients, and the like. In an example, when the prediction mode is inter or bi-predicted mode, the inter prediction information is provided to the inter decoder (<b>780</b>); and when the prediction type is the intra prediction type, the intra prediction information is provided to the intra decoder (<b>772</b>). The residual information can be subject to inverse quantization and is provided to the residue decoder (<b>773</b>).</p><p id="p-0109" num="0108">The inter decoder (<b>780</b>) is configured to receive the inter prediction information, and generate inter prediction results based on the inter prediction information.</p><p id="p-0110" num="0109">The intra decoder (<b>772</b>) is configured to receive the intra prediction information, and generate prediction results based on the intra prediction information.</p><p id="p-0111" num="0110">The residue decoder (<b>773</b>) is configured to perform inverse quantization to extract de-quantized transform coefficients, and process the de-quantized transform coefficients to convert the residual from the frequency domain to the spatial domain. The residue decoder (<b>773</b>) may also require certain control information (to include the Quantizer Parameter (QP)), and that information may be provided by the entropy decoder (<b>771</b>) (data path not depicted as this may be low volume control information only).</p><p id="p-0112" num="0111">The reconstruction module (<b>774</b>) is configured to combine, in the spatial domain, the residual as output by the residue decoder (<b>773</b>) and the prediction results (as output by the inter or intra prediction modules as the case may be) to form a reconstructed block, that may be part of the reconstructed picture, which in turn may be part of the reconstructed video. It is noted that other suitable operations, such as a deblocking operation and the like, can be performed to improve the visual quality.</p><p id="p-0113" num="0112">It is noted that the video encoders (<b>303</b>), (<b>503</b>), and (<b>603</b>), and the video decoders (<b>310</b>), (<b>410</b>), and (<b>710</b>) can be implemented using any suitable technique. In an embodiment, the video encoders (<b>303</b>), (<b>503</b>), and (<b>603</b>), and the video decoders (<b>310</b>), (<b>410</b>), and (<b>710</b>) can be implemented using one or more integrated circuits. In another embodiment, the video encoders (<b>303</b>), (<b>503</b>), and (<b>603</b>), and the video decoders (<b>310</b>), (<b>410</b>), and (<b>710</b>) can be implemented using one or more processors that execute software instructions.</p><p id="p-0114" num="0113">II. Sign Prediction of Transform Coefficients</p><p id="p-0115" num="0114">In some related examples such as explorative compression model (ECM) 1.0, a sign prediction process of transform coefficients in a residual coding can be implemented. In some cases, non-zero transform coefficients in a part of a transform block (TB) can be used in the sign prediction process. The part of the TB can include low frequency transform coefficients of the TB. The low frequency transform coefficients are transform coefficients close to a top-left corner of the TB. In the EMC-1.0 testing conditions, a maximum of 8 signs of non-zero transform coefficients in a part of a TB that includes the lowest 4&#xd7;4 frequency components of the TB can be predicted. For example, a top-left part of a TB (e.g., an 8&#xd7;8 TB) can include the lowest 4&#xd7;4 frequency components of the TB.</p><p id="p-0116" num="0115">When predicting multiple signs such as n signs of the transform coefficients in a TB, an encoder and/or a decoder can search for the n signs in a predetermined search order in order to minimize a cost of a discontinuity at a border of the TB in a spatial domain.</p><p id="p-0117" num="0116"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows an exemplary sign prediction process (<b>800</b>) to minimize a cost of a discontinuity at a border of a TB according to an embodiment of the disclosure. In some related examples such as ECM-1.0, a search order of the sign prediction process can be based on n sign bits in an order such as an encoding order of Gray code which is an ordering of a binary numeral system such that two successive values differ in only one bit. Each sign bit can represent a sign of a different transform coefficient. In this disclosure, each search point of the n sign bits can be referred to as a hypothesis. That is, a combination of n different signs can be referred to as the hypothesis, in which each sign can be either positive or negative. For the n sign bits, there are a total of 2<sup>nd </sup>hypotheses. The 2<sup>nd </sup>hypotheses are 2n different combinations of n different signs, in which each sign can be either positive or negative.</p><p id="p-0118" num="0117">In <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the sign prediction process (<b>800</b>) selects a sign prediction hypothesis in a predetermined order from 2<sup>nd </sup>prediction hypotheses of n sign bits, as shown in step (S810). Then, the sign prediction process (<b>800</b>) computes a cost of the selected sign prediction hypothesis using all sampling positions in a top border and/or a left border of a TB, compares the cost of the selected sign prediction hypothesis with one or more previously calculated costs of other sign prediction hypothesizes, and selects a sign prediction hypothesis with a lowest cost as a sign prediction candidate which has the minimal cost among the existing calculated costs, as shown in step (S<b>820</b>). At step (S<b>830</b>), the sign prediction process (<b>800</b>) determines whether all hypotheses are tested. If all hypotheses are tested, signs in the sign prediction candidate with the minimal cost can be used as sign predictors for predicting the signs of the transform coefficients of the TB. Otherwise, the sign prediction process (<b>800</b>) can repeat the steps (S<b>810</b>), (S<b>820</b>), and (S<b>830</b>).</p><p id="p-0119" num="0118">It is noted that the reconstructed pixels in the topmost row and/or the leftmost column of each of the current blocks (<b>900</b>)-(<b>1200</b>) in <figref idref="DRAWINGS">FIGS. <b>9</b>-<b>12</b></figref> can be referred to as a hypothesis reconstructed border. In some cases, the reconstructed pixels in the topmost row and/or the leftmost column may be reconstructed by using prediction values and absolute values of transform coefficients corresponding to these pixels and may not have the final reconstructed values.</p><p id="p-0120" num="0119"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an exemplary calculation of a cost of a hypothesis reconstructed border according to an embodiment of the disclosure. In <figref idref="DRAWINGS">FIG. <b>9</b></figref>, both left and top reconstructed neighboring pixels of a current block (<b>900</b>) are available. For each reconstructed pixel p<sub>0,y </sub>at the leftmost column (or left hand side (LHS)) of the current block (<b>900</b>), a simple linear prediction using the two left reconstructed neighboring pixels, when available, is performed to get its prediction pred<sub>0,y</sub>=(2&#xb7;p<sub>&#x2212;1,y</sub>&#x2212;p<sub>&#x2212;2,y</sub>). An absolute difference between the prediction pred<sub>0,y </sub>and the reconstructed pixel p<sub>0,y </sub>is added to the cost of the hypothesis. Similar, for each reconstructed pixel p<sub>x,0 </sub>in the topmost row of the current block (<b>900</b>), a simple linear prediction using the two top reconstructed neighboring pixels, when available, is performed to get its prediction pred<sub>x,0</sub>=(2&#xb7;p<sub>x,&#x2212;1</sub>&#x2212;p<sub>x,&#x2212;2</sub>). An absolute difference between the prediction pred<sub>x,0 </sub>and the reconstructed pixel p<sub>x,0 </sub>is added to the cost of the hypothesis. Accordingly, the cost of the hypothesis can be expressed in (Eq.1).</p><p id="p-0121" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>cost=&#x3a3;<sub>x=0</sub><sup>w-1</sup>|(2<i>p</i><sub>x,&#x2212;1</sub><i>&#x2212;p</i><sub>x,&#x2212;2</sub>)&#x2212;<i>p</i><sub>x,0</sub>|+&#x3a3;<sub>y=0</sub><sup>h-1</sup>|(2<i>p</i><sub>&#x2212;1,y</sub><i>&#x2212;p</i><sub>&#x2212;2,y</sub>)&#x2212;<i>p</i><sub>0,y</sub>|&#x2003;&#x2003;(Eq. 1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0122" num="0120"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an exemplary calculation of the cost of the hypothesis reconstructed border according to another embodiment of the disclosure. In <figref idref="DRAWINGS">FIG. <b>10</b></figref>, only left reconstructed neighboring pixels of a current block (<b>1000</b>) are available. Similar to the calculation in (Eq.1), the cost calculation of the hypothesis can be expressed in (Eq. 2), where only the absolute differences based on the left reconstructed neighboring pixels are considered.</p><p id="p-0123" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>cost=&#x3a3;<sub>y=0</sub><sup>h-1</sup>|(2<i>p</i><sub>&#x2212;1,y</sub><i>&#x2212;p</i><sub>&#x2212;2,y</sub>)&#x2212;<i>p</i><sub>0,y</sub>|&#x2003;&#x2003;(Eq. 2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0124" num="0121"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows an exemplary calculation of the cost of the hypothesis reconstructed border according to another embodiment of the disclosure. In <figref idref="DRAWINGS">FIG. <b>11</b></figref>, only top reconstructed neighboring pixels of a current block (<b>1100</b>) are available. Similar to the calculation in (Eq.1), the cost calculation of the hypothesis can be expressed in (Eq. 3), where only the absolute differences based on the top reconstructed neighboring pixels are considered.</p><p id="p-0125" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>cost=&#x3a3;<sub>x=0</sub><sup>w-1</sup>|(2<i>p</i><sub>x,&#x2212;1</sub><i>&#x2212;p</i><sub>x,&#x2212;2</sub>)&#x2212;<i>p</i><sub>x,0</sub>|&#x2003;&#x2003;(Eq. 3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0126" num="0122">III. Low Complexity Sign Prediction</p><p id="p-0127" num="0123">In some related examples such as ECM-1.0, a computation of a cost of a sign prediction process can be proportional to a width and/or a height of a block as shown in (Eq. 1)-(Eq. 3). Further, the computation can be performed <b>2</b><i>n </i>times for predicting n sign bits. The computation of the cost of the sign prediction process can be found to be a thermal hot spot in an ECM-1.0 decoder. Therefore, there is a need to reduce this computation.</p><p id="p-0128" num="0124">This disclosure includes methods of reducing the computation of the cost of the sign prediction process.</p><p id="p-0129" num="0125">According to some aspects of the disclosure, the computation of the cost can be independent of the width and height of the block. For example, the computation of the cost can be independent of the dimension of the block when a predetermined number of pixels at the top and/or the left border of the block are used in the calculation of the hypothesis cost.</p><p id="p-0130" num="0126"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows an exemplary calculation of the cost of the hypothesis reconstructed border according to an embodiment of the disclosure. In <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the sign prediction can be applicable to a part of a TB that includes, for example, a 4&#xd7;4 sub-block of the TB with lowest frequency components (e.g., lowest frequency transform coefficients). When top reconstructed neighbouring pixels of a current block (<b>1200</b>) are available, a predetermined number of pixels such as 4 samples from a top border of the current block (<b>1200</b>) can be used in a linear prediction similar to (Eq. 3). Similarly, when left reconstructed neighboring pixels of the current block (<b>1200</b>) are available, a predetermined number of pixels such as 4 samples from a left border of the current block can be used in a linear prediction similar to (Eq. 2).</p><p id="p-0131" num="0127">According to aspects of the disclosure, the predetermined number of samples in the linear prediction for the cost calculation can be based on a number of lowest frequency components for the sign prediction. The predetermined number of samples can be independent of a size of a block.</p><p id="p-0132" num="0128">In <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the current block (<b>1200</b>) has a width w and a height h, which are multiples of 4. Four predetermined top border samples p<sub>1,0</sub>, p<sub>3,0</sub>, p<sub>5,0</sub>, and p<sub>7,0 </sub>used in the linear prediction can be located at the following horizontal locations as shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>:</p><p id="p-0133" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>1</sub><i>=w/</i>8&#x2003;&#x2003;(Eq. 4)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0134" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>2</sub><i>=x</i><sub>1</sub><i>+w/</i>4&#x2003;&#x2003;(Eq. 5)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0135" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>3</sub><i>=x</i><sub>2</sub><i>+w/</i>4&#x2003;&#x2003;(Eq. 6)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0136" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>4</sub><i>=x</i><sub>3</sub><i>+w/</i>4&#x2003;&#x2003;(Eq. 7)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0137" num="0000">where / represents an integer division in a hardware implementation or a programming language such as C programming language.</p><p id="p-0138" num="0129">Four predetermined left border samples p<sub>0,0</sub>, p<sub>0,2</sub>, p<sub>0,4</sub>, and p<sub>0,6 </sub>used in the linear prediction can be located at the following vertical locations as shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>:</p><p id="p-0139" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>1</sub><i>=h&#x2212;</i>1&#x2212;<i>h/</i>8&#x2003;&#x2003;(Eq. 8)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0140" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>2</sub><i>=y</i><sub>2</sub><i>&#x2212;h/</i>4&#x2003;&#x2003;(Eq. 9)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0141" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>3</sub><i>=y</i><sub>2</sub><i>&#x2212;h/</i>4&#x2003;&#x2003;(Eq. 10)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0142" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>4</sub><i>=y</i><sub>3</sub><i>&#x2212;h/</i>4&#x2003;&#x2003;(Eq. 11)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0143" num="0000">where / represents an integer division in a hardware implementation or a programming language such as C programming language.</p><p id="p-0144" num="0130"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows an exemplary sign prediction process (<b>1300</b>) to minimize a cost of a discontinuity at a border of a TB according to an embodiment of the disclosure. In <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the sign prediction process (<b>1300</b>) is based on a sub-sampling of the pixels at the border of the TB so that a predetermined number of pixels can be selected for calculating the cost.</p><p id="p-0145" num="0131">In <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the sign prediction process (<b>1300</b>) determines sub-sampling positions of the pixels at the border of the TB, as shown in step (S<b>1310</b>). Then, the sign prediction process (<b>1300</b>) selects a sign prediction hypothesis in a predetermined order from 2<sup>n </sup>prediction hypotheses of n sign bits, as shown in step (S<b>1320</b>). Then, the sign prediction process (<b>1300</b>) computes a cost of the selected sign prediction hypothesis using the sub-sampling positions in a top border and/or a left border of the TB, compares the cost of the selected sign prediction hypothesis with one or more previously calculated costs of other sign prediction hypotheses, and selects a sign prediction hypothesis with a lowest cost as a sign prediction candidate which has the minimal cost among the existing calculated costs, as shown in step (S<b>1330</b>). At step (S<b>1340</b>), the sign prediction process (<b>1300</b>) determines whether all hypotheses are tested. If all hypotheses are tested, signs in the sign prediction candidate with the minimal cost can be used as a set of sign predictors for predicting the signs of the transform coefficients of the TB. Otherwise, the sign prediction process (<b>1300</b>) can repeat the steps (S<b>1310</b>)-(S<b>1340</b>).</p><p id="p-0146" num="0132">In an embodiment, for a block with a width w and a height h, which are multiples of 4, the sub-sampling positions of the top border samples of the block can be expressed as the following horizontal locations:</p><p id="p-0147" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>1</sub><i>=x</i><sub>offset</sub>&#x2003;&#x2003;(Eq. 12)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0148" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>2</sub><i>=x</i><sub>1</sub><i>+&#x3b4;x</i>&#x2003;&#x2003;(Eq. 13)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0149" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>3</sub><i>=x</i><sub>2</sub><i>+&#x3b4;x</i>&#x2003;&#x2003;(Eq. 14)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0150" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>4</sub><i>=x</i><sub>3</sub><i>+&#x3b4;x</i>&#x2003;&#x2003;(Eq. 15)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0151" num="0000">where/represents integer division as in C, and x<sub>offset </sub>is a predetermined non-negative offset, and &#x3b4;x is a distance between two adjacent samples. Example values of x<sub>offset </sub>can include 0 and w/8. Example values of &#x3b4;x can include 1 and w/4.</p><p id="p-0152" num="0133">The sub-sampling positions of the left border samples of the block can be expressed as the following vertical locations:</p><p id="p-0153" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>1</sub><i>=h&#x2212;</i>1&#x2212;<i>y</i><sub>offset</sub>&#x2003;&#x2003;(Eq. 16)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0154" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>2</sub><i>=y</i><sub>1</sub><i>&#x2212;&#x3b4;y</i>&#x2003;&#x2003;(Eq. 17)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0155" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>3</sub><i>=y</i><sub>2</sub><i>&#x2212;&#x3b4;y</i>&#x2003;&#x2003;(Eq. 18)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0156" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>4</sub><i>=y</i><sub>3</sub><i>&#x2212;&#x3b4;y</i>&#x2003;&#x2003;(Eq. 19)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0157" num="0000">where / represents an integer division in a hardware implementation or a programming language such as C programming language, and y<sub>offset </sub>is a predetermined non-negative offset, and &#x3b4;y is a distance between two adjacent sample. Example values of y<sub>offset </sub>can include 0 and h/8. Example values of &#x3b4;y can include 1 and h/4.</p><p id="p-0158" num="0134">In an embodiment, for a block with a width w and a height h, which are multiples of 4, the sub-sampling positions of the top border samples of the block can be expressed as the following horizontal locations:</p><p id="p-0159" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>1</sub><i>=x</i><sub>offset</sub>&#x2003;&#x2003;(Eq. 20)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0160" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>2</sub><i>=x</i><sub>1</sub><i>+&#x3b4;x</i><sub>1</sub>&#x2003;&#x2003;(Eq. 21)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0161" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>3</sub><i>=x</i><sub>2</sub><i>+&#x3b4;x</i><sub>2</sub>&#x2003;&#x2003;(Eq. 22)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0162" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>4</sub><i>=x</i><sub>3</sub><i>+&#x3b4;x</i><sub>3</sub>&#x2003;&#x2003;(Eq. 23)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0163" num="0000">where / represents an integer division in a hardware implementation or a programming language such as C programming language, and x<sub>offset </sub>is a predetermined non-negative offset, and &#x3b4;x<sub>1</sub>, &#x3b4;x<sub>2</sub>, &#x3b4;x<sub>3 </sub>are positive distance between two adjacent samples with x<sub>4</sub>&#x3c;w.</p><p id="p-0164" num="0135">The sub-sampling positions of the left border samples of the block can be expressed as the following vertical locations:</p><p id="p-0165" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>2</sub><i>=h&#x2212;</i>1&#x2212;<i>y</i><sub>offset</sub>&#x2003;&#x2003;(Eq. 24)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0166" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>2</sub><i>=y</i><sub>1</sub><i>&#x2212;&#x3b4;y</i><sub>1</sub>&#x2003;&#x2003;(Eq. 25)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0167" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>3</sub><i>=y</i><sub>2</sub><i>&#x2212;&#x3b4;y</i><sub>2</sub>&#x2003;&#x2003;(Eq. 26)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0168" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>4</sub><i>=y</i><sub>3</sub><i>&#x2212;&#x3b4;y</i><sub>3</sub>&#x2003;&#x2003;(Eq. 27)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0169" num="0000">where / represents integer division as in C, and y<sub>offset </sub>is a predetermined non-negative offset, and &#x3b4;y<sub>1</sub>, &#x3b4;y<sub>2</sub>, &#x3b4;y<sub>3 </sub>are positive distance between two adjacent samples with y<sub>4</sub>&#x2265;0.</p><p id="p-0170" num="0136">This disclosure includes methods that are applicable to a video coding system with a sign prediction process in which signs of low frequency transform coefficients can be predicted by selecting the signs that minimize a cost of a discontinuity at a border of a current block (e.g., a TB). For example, this disclosure includes a method of reducing a computation of the cost by sub-sampling the pixels in the cost calculation.</p><p id="p-0171" num="0137">According to aspects of the disclosure, a number of samples in the sub-sampling procedure can be based on a predetermined number of low frequency components in the TB that are eligible for the sign prediction process. The number of samples in the sub-sampling procedure can be independent of a size of the TB. For example, the low frequency components that are eligible for the sign prediction process can be 4&#xd7;4 lowest frequency transform coefficients of the TB.</p><p id="p-0172" num="0138">In one embodiment, a number of samples at a top boundary of the TB for the computation of the cost in the sign prediction process can be predetermined. For example, the predetermined number of samples can be 4 or 8 for a single instruction multiple data (SIMD) implementation.</p><p id="p-0173" num="0139">In one embodiment, a number of samples at a left boundary of the TB for the computation of the cost in the sign prediction process can be predetermined. For example, the predetermined number of samples can be 4 or 8 for the SIMD implementation.</p><p id="p-0174" num="0140">In one embodiment, the samples at the top boundary of the TB for the computation of the cost in the sign prediction process can be evenly spaced.</p><p id="p-0175" num="0141">In one embodiment, the samples at the left boundary of the TB for the computation of the cost in the sign prediction process can be evenly spaced.</p><p id="p-0176" num="0142">In some embodiments, the sub-sampling procedure can only be applied to a certain size of the TB. For example, the sub-sampling procedure can be applied to a 16&#xd7;16 TB but may not be applied to an 8&#xd7;8 TB if the number of samples in the sub-sampling procedure is 8.</p><p id="p-0177" num="0143">In one embodiment, the number of samples at a top boundary of the TB can be predetermined based on the width w. For example, when the width w is greater than a threshold, the number of samples can be predetermined to be a first number. Otherwise, the number of samples can be predetermined to be a second number. The predetermined number can be less than w for at least one value of w. For example, a 4&#xd7;4 TB may not be sub-sampled but an 8&#xd7;8 TB may be sub-sampled when the predetermined number of samples is 4.</p><p id="p-0178" num="0144">In one embodiment, the number of samples at a left boundary of the TB can be predetermined based on the height h. For example, when the height h is greater than a threshold, the number of samples can be predetermined to be a first number. Otherwise, the number of samples can be predetermined to be a second number. The predetermined number can be less than h for at least one value of h. For example, a 4&#xd7;4 TB may not be sub-sampled but an 8&#xd7;8 TB may be sub-sampled when the predetermined number of samples is 4.</p><p id="p-0179" num="0145">In one embodiment, the sampling positions at the top boundary of the TB can be predetermined based on the width w and are evenly spaced. For example, the sampling positions at the top boundary of the TB can be predetermined based on (Eq. 12)-(Eq. 15).</p><p id="p-0180" num="0146">In one embodiment, the sampling positions at the top boundary of the TB can be predetermined based on the width w and are not evenly spaced. For example, the sampling positions at the top boundary of the TB can be predetermined based on (Eq. 20)-(Eq. 23).</p><p id="p-0181" num="0147">In one embodiment, the sampling positions at the top boundary of the TB can be predetermined based on the width w and at least two of the sampling positions are adjacent to each other.</p><p id="p-0182" num="0148">In one embodiment, the sampling position at the left boundary of the TB can be predetermined based on the height h and are evenly spaced. For example, the sampling positions at the left boundary of the TB can be predetermined based on (Eq. 16)-(Eq. 19).</p><p id="p-0183" num="0149">In one embodiment, the sampling position at the left boundary of the TB can be predetermined based on the height h and are not evenly spaced. For example, the sampling positions at the left boundary of the TB can be predetermined based on (Eq. 24)-(Eq. 27).</p><p id="p-0184" num="0150">In one embodiment, the sampling position at the left boundary of the TB can be predetermined based on the height h and at least two of the sampling positions are adjacent to each other.</p><p id="p-0185" num="0151">IV. Flowchart</p><p id="p-0186" num="0152"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows a flow chart outlining an exemplary process (<b>1400</b>) according to an embodiment of the disclosure. In various embodiments, the process (<b>1400</b>) is executed by processing circuitry, such as the processing circuitry in the terminal devices (<b>210</b>), (<b>220</b>), (<b>230</b>) and (<b>240</b>), the processing circuitry that performs functions of the video encoder (<b>303</b>), the processing circuitry that performs functions of the video decoder (<b>310</b>), the processing circuitry that performs functions of the video encoder (<b>503</b>), and the like. In some embodiments, the process (<b>1400</b>) is implemented in software instructions, thus when the processing circuitry executes the software instructions, the processing circuitry performs the process (<b>1400</b>).</p><p id="p-0187" num="0153">The process (<b>1400</b>) may generally start at step (S<b>1410</b>), where the process (<b>1400</b>) receives a video bitstream including coded residuals of a current block. Then, the process (<b>1400</b>) proceeds to step (S<b>1420</b>).</p><p id="p-0188" num="0154">At step (S<b>1420</b>), the process (<b>1400</b>) determines a plurality of transform coefficients for the current block based on the coded residuals. Then, the process (<b>1400</b>) proceeds to step (S<b>1430</b>).</p><p id="p-0189" num="0155">At step (S<b>1430</b>), the process (<b>1400</b>) calculates, for each of a plurality of sign prediction hypotheses, a cost of the respective sign prediction hypothesis by performing sign prediction on a subset of the plurality of transform coefficients based on a subset of samples in at least one of a topmost row or a leftmost column of the current block. A number of samples in the subset of samples being a constant number. Then, the process (<b>1400</b>) proceeds to step (S<b>1440</b>).</p><p id="p-0190" num="0156">At step (S<b>1440</b>), the process (<b>1400</b>) selects one of the plurality of sign prediction hypotheses with a minimal cost among the costs of the plurality of sign prediction hypotheses. Then, the process (<b>1400</b>) proceeds to step (S<b>1450</b>).</p><p id="p-0191" num="0157">At step (S<b>1450</b>), the process (<b>1400</b>) performs the sign prediction according to the selected sign prediction hypothesis. Then, the process (<b>1400</b>) terminates.</p><p id="p-0192" num="0158">In an embodiment, the constant number is predetermined. For example, the constant number can be 4 or 8.</p><p id="p-0193" num="0159">In an embodiment, the constant number is determined based on a number of the subset of the plurality of transform coefficients. For example, the number of the subset of the plurality of transform coefficients can be predetermined (e.g., 4&#xd7;4 low frequency transform coefficients in a TB), and the constant number can be determined to be less than the predetermined number of the subset of the plurality of transform coefficients. The constant number can be 4 for the topmost row or the leftmost column when the subset of the plurality of transform coefficients is predetermined to be 4&#xd7;4 low frequency transform coefficients.</p><p id="p-0194" num="0160">In an embodiment, the constant number is determined based on a comparison between one dimension of the block and a threshold. In an example, when a width (or a height) of the block is greater than the threshold, the constant number in the topmost row (or in the leftmost column) can be a first number. Otherwise, the constant number in the topmost row (or in the leftmost column) can be a second number that is less than the first number.</p><p id="p-0195" num="0161">In an embodiment, the constant number is determined based on a comparison between one dimension of the block and more than one threshold. In an example, the dimension of the block can be compared with two thresholds. When the width (or the height) of the block is not greater than a first threshold, the constant number in the topmost row (or in the leftmost column) can be a first number. When the width (or the height) of the block is greater than a first threshold and less than a second threshold, the constant number in the topmost row (or in the leftmost column) can be a second number. When the width (or the height) of the block is greater than the second threshold, the constant number in the topmost row (or in the leftmost column) can be a third number. In another example, the dimension of the block can be compared with a different number of thresholds.</p><p id="p-0196" num="0162">In an embodiment, the constant number is determined based on a look-up table that includes a plurality of values of the constant number. Each of plurality of values is associated with a different value of one dimension of the block. For example, when the width (or the height) of the block is within a first range, the constant number in the topmost row (or in the leftmost column) can be a first number according to the look-up table. When the width (or the height) of the block is within a second range, the constant number in the topmost row (or in the leftmost column) can be a second number according to the look-up table, and so on.</p><p id="p-0197" num="0163">In an embodiment, positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are determined based on one dimension of the block. For example, the positions of the subset of samples in the topmost row (or the leftmost column) of the block are determined based on the width (or the height) of the block.</p><p id="p-0198" num="0164">In an embodiment, at least two positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are adjacent. For example, the positions of two samples in the topmost row (or in the leftmost column) are adjacent to each other.</p><p id="p-0199" num="0165">In an embodiment, positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are evenly spaced. For example, in FIG. <b>12</b>, the positions of the four samples p<sub>1,0</sub>, p<sub>3,0</sub>, p<sub>5,0</sub>, and p<sub>7,0 </sub>in the topmost row (or p<sub>0,0</sub>, p<sub>0,2</sub>, p<sub>0,4</sub>, and p<sub>0,6 </sub>in the leftmost column) are evenly spaced.</p><p id="p-0200" num="0166">In an embodiment, the process (<b>1400</b>) calculates, for each of the plurality of sign prediction hypotheses, the cost of the respective sign prediction hypothesis based on (i) the subset of samples in the at least one of the topmost row or the leftmost column of the current block and (ii) neighboring reconstructed samples in at least one of a row above the current block or a column left to the current block.</p><p id="p-0201" num="0167">V. Computer System</p><p id="p-0202" num="0168">The techniques described above, can be implemented as computer software using computer-readable instructions and physically stored in one or more computer-readable media. For example, <figref idref="DRAWINGS">FIG. <b>15</b></figref> shows a computer system (<b>1500</b>) suitable for implementing certain embodiments of the disclosed subject matter.</p><p id="p-0203" num="0169">The computer software can be coded using any suitable machine code or computer language, that may be subject to assembly, compilation, linking, or like mechanisms to create code comprising instructions that can be executed directly, or through interpretation, micro-code execution, and the like, by one or more computer central processing units (CPUs), Graphics Processing Units (GPUs), and the like.</p><p id="p-0204" num="0170">The instructions can be executed on various types of computers or components thereof, including, for example, personal computers, tablet computers, servers, smartphones, gaming devices, internet of things devices, and the like.</p><p id="p-0205" num="0171">The components shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref> for computer system (<b>1500</b>) are exemplary in nature and are not intended to suggest any limitation as to the scope of use or functionality of the computer software implementing embodiments of the present disclosure. Neither should the configuration of components be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary embodiment of a computer system (<b>1500</b>).</p><p id="p-0206" num="0172">Computer system (<b>1500</b>) may include certain human interface input devices. Such a human interface input device may be responsive to input by one or more human users through, for example, tactile input (such as: keystrokes, swipes, data glove movements), audio input (such as: voice, clapping), visual input (such as: gestures), olfactory input (not depicted). The human interface devices can also be used to capture certain media not necessarily directly related to conscious input by a human, such as audio (such as: speech, music, ambient sound), images (such as: scanned images, photographic images obtain from a still image camera), video (such as two-dimensional video, three-dimensional video including stereoscopic video).</p><p id="p-0207" num="0173">Input human interface devices may include one or more of (only one of each depicted): keyboard (<b>1501</b>), mouse (<b>1502</b>), trackpad (<b>1503</b>), touch screen (<b>1510</b>), data-glove (not shown), joystick (<b>1505</b>), microphone (<b>1506</b>), scanner (<b>1507</b>), and camera (<b>1508</b>).</p><p id="p-0208" num="0174">Computer system (<b>1500</b>) may also include certain human interface output devices. Such human interface output devices may be stimulating the senses of one or more human users through, for example, tactile output, sound, light, and smell/taste. Such human interface output devices may include tactile output devices (for example tactile feedback by the touch-screen (<b>1510</b>), data-glove (not shown), or joystick (<b>1505</b>), but there can also be tactile feedback devices that do not serve as input devices), audio output devices (such as: speakers (<b>1509</b>), headphones (not depicted)), visual output devices (such as screens (<b>1510</b>) to include CRT screens, LCD screens, plasma screens, OLED screens, each with or without touch-screen input capability, each with or without tactile feedback capability&#x2014;some of which may be capable to output two dimensional visual output or more than three dimensional output through means such as stereographic output; virtual-reality glasses (not depicted), holographic displays and smoke tanks (not depicted)), and printers (not depicted). These visual output devices (such as screens (<b>1510</b>)) can be connected to a system bus (<b>1548</b>) through a graphics adapter (<b>1550</b>).</p><p id="p-0209" num="0175">Computer system (<b>1500</b>) can also include human accessible storage devices and their associated media such as optical media including CD/DVD ROM/RW (<b>1520</b>) with CD/DVD or the like media (<b>1521</b>), thumb-drive (<b>1522</b>), removable hard drive or solid state drive (<b>1523</b>), legacy magnetic media such as tape and floppy disc (not depicted), specialized ROM/ASIC/PLD based devices such as security dongles (not depicted), and the like.</p><p id="p-0210" num="0176">Those skilled in the art should also understand that term &#x201c;computer readable media&#x201d; as used in connection with the presently disclosed subject matter does not encompass transmission media, carrier waves, or other transitory signals.</p><p id="p-0211" num="0177">Computer system (<b>1500</b>) can also include a network interface (<b>1554</b>) to one or more communication networks (<b>1555</b>). The one or more communication networks (<b>1555</b>) can for example be wireless, wireline, optical. The one or more communication networks (<b>1555</b>) can further be local, wide-area, metropolitan, vehicular and industrial, real-time, delay-tolerant, and so on. Examples of the one or more communication networks (<b>1555</b>) include local area networks such as Ethernet, wireless LANs, cellular networks to include GSM, 3G, 4G, 5G, LTE and the like, TV wireline or wireless wide area digital networks to include cable TV, satellite TV, and terrestrial broadcast TV, vehicular and industrial to include CANBus, and so forth. Certain networks commonly require external network interface adapters that attached to certain general purpose data ports or peripheral buses (<b>1549</b>) (such as, for example USB ports of the computer system (<b>1500</b>)); others are commonly integrated into the core of the computer system (<b>1500</b>) by attachment to a system bus as described below (for example Ethernet interface into a PC computer system or cellular network interface into a smartphone computer system). Using any of these networks, computer system (<b>1500</b>) can communicate with other entities. Such communication can be uni-directional, receive only (for example, broadcast TV), uni-directional send-only (for example CANbus to certain CANbus devices), or bi-directional, for example to other computer systems using local or wide area digital networks. Certain protocols and protocol stacks can be used on each of those networks and network interfaces as described above.</p><p id="p-0212" num="0178">Aforementioned human interface devices, human-accessible storage devices, and network interfaces can be attached to a core (<b>1540</b>) of the computer system (<b>1500</b>).</p><p id="p-0213" num="0179">The core (<b>1540</b>) can include one or more Central Processing Units (CPU) (<b>1541</b>), Graphics Processing Units (GPU) (<b>1542</b>), specialized programmable processing units in the form of Field Programmable Gate Areas (FPGA) (<b>1543</b>), hardware accelerators for certain tasks (<b>1544</b>), graphics adapters (<b>1550</b>), and so forth. These devices, along with Read-only memory (ROM) (<b>1545</b>), Random-access memory (<b>1546</b>), internal mass storage (<b>1547</b>) such as internal non-user accessible hard drives, SSDs, and the like, may be connected through the system bus (<b>1548</b>). In some computer systems, the system bus (<b>1548</b>) can be accessible in the form of one or more physical plugs to enable extensions by additional CPUs, GPU, and the like. The peripheral devices can be attached either directly to the core's system bus (<b>1548</b>), or through a peripheral bus (<b>1549</b>). In an example, the screen (<b>1510</b>) can be connected to the graphics adapter (<b>1550</b>). Architectures for a peripheral bus include PCI, USB, and the like.</p><p id="p-0214" num="0180">CPUs (<b>1541</b>), GPUs (<b>1542</b>), FPGAs (<b>1543</b>), and accelerators (<b>1544</b>) can execute certain instructions that, in combination, can make up the aforementioned computer code. That computer code can be stored in ROM (<b>1545</b>) or RAM (<b>1546</b>). Transitional data can be also be stored in RAM (<b>1546</b>), whereas permanent data can be stored for example, in the internal mass storage (<b>1547</b>). Fast storage and retrieve to any of the memory devices can be enabled through the use of cache memory, that can be closely associated with one or more CPU (<b>1541</b>), GPU (<b>1542</b>), mass storage (<b>1547</b>), ROM (<b>1545</b>), RAM (<b>1546</b>), and the like.</p><p id="p-0215" num="0181">The computer readable media can have computer code thereon for performing various computer-implemented operations. The media and computer code can be those specially designed and constructed for the purposes of the present disclosure, or they can be of the kind well known and available to those having skill in the computer software arts.</p><p id="p-0216" num="0182">As an example and not by way of limitation, the computer system having architecture (<b>1500</b>), and specifically the core (<b>1540</b>) can provide functionality as a result of processor(s) (including CPUs, GPUs, FPGA, accelerators, and the like) executing software embodied in one or more tangible, computer-readable media. Such computer-readable media can be media associated with user-accessible mass storage as introduced above, as well as certain storage of the core (<b>1540</b>) that are of non-transitory nature, such as core-internal mass storage (<b>1547</b>) or ROM (<b>1545</b>). The software implementing various embodiments of the present disclosure can be stored in such devices and executed by core (<b>1540</b>). A computer-readable medium can include one or more memory devices or chips, according to particular needs. The software can cause the core (<b>1540</b>) and specifically the processors therein (including CPU, GPU, FPGA, and the like) to execute particular processes or particular parts of particular processes described herein, including defining data structures stored in RAM (<b>1546</b>) and modifying such data structures according to the processes defined by the software. In addition or as an alternative, the computer system can provide functionality as a result of logic hardwired or otherwise embodied in a circuit (for example: accelerator (<b>1544</b>)), which can operate in place of or together with software to execute particular processes or particular parts of particular processes described herein. Reference to software can encompass logic, and vice versa, where appropriate. Reference to a computer-readable media can encompass a circuit (such as an integrated circuit (IC)) storing software for execution, a circuit embodying logic for execution, or both, where appropriate. The present disclosure encompasses any suitable combination of hardware and software.</p><p id="p-0217" num="0183">While this disclosure has described several exemplary embodiments, there are alterations, permutations, and various substitute equivalents, which fall within the scope of the disclosure. It will thus be appreciated that those skilled in the art will be able to devise numerous systems and methods which, although not explicitly shown or described herein, embody the principles of the disclosure and are thus within the spirit and scope thereof.</p><heading id="h-0007" level="1">Appendix A: Acronyms</heading><p id="p-0218" num="0000"><ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0184">ALF: Adaptive Loop Filter</li>        <li id="ul0002-0002" num="0185">AMVP: Advanced Motion Vector Prediction</li>        <li id="ul0002-0003" num="0186">APS: Adaptation Parameter Set</li>        <li id="ul0002-0004" num="0187">ASIC: Application-Specific Integrated Circuit</li>        <li id="ul0002-0005" num="0188">ATMVP: Alternative/Advanced Temporal Motion Vector Prediction</li>        <li id="ul0002-0006" num="0189">AV1: AOMedia Video 1</li>        <li id="ul0002-0007" num="0190">AV2: AOMedia Video 2</li>        <li id="ul0002-0008" num="0191">BMS: Benchmark Set</li>        <li id="ul0002-0009" num="0192">BV: Block Vector</li>        <li id="ul0002-0010" num="0193">CANBus: Controller Area Network Bus</li>        <li id="ul0002-0011" num="0194">CB: Coding Block</li>        <li id="ul0002-0012" num="0195">CC-ALF: Cross-Component Adaptive Loop Filter</li>        <li id="ul0002-0013" num="0196">CD: Compact Disc</li>        <li id="ul0002-0014" num="0197">CDEF: Constrained Directional Enhancement Filter</li>        <li id="ul0002-0015" num="0198">CPR: Current Picture Referencing</li>        <li id="ul0002-0016" num="0199">CPU: Central Processing Unit</li>        <li id="ul0002-0017" num="0200">CRT: Cathode Ray Tube</li>        <li id="ul0002-0018" num="0201">CTB: Coding Tree Block</li>        <li id="ul0002-0019" num="0202">CTU: Coding Tree Unit</li>        <li id="ul0002-0020" num="0203">CU: Coding Unit</li>        <li id="ul0002-0021" num="0204">DPB: Decoder Picture Buffer</li>        <li id="ul0002-0022" num="0205">DPCM: Differential Pulse-Code Modulation</li>        <li id="ul0002-0023" num="0206">DPS: Decoding Parameter Set</li>        <li id="ul0002-0024" num="0207">DVD: Digital Video Disc</li>        <li id="ul0002-0025" num="0208">FPGA: Field Programmable Gate Area</li>        <li id="ul0002-0026" num="0209">JCCR: Joint CbCr Residual Coding</li>        <li id="ul0002-0027" num="0210">JVET: Joint Video Exploration Team</li>        <li id="ul0002-0028" num="0211">GOP: Groups of Pictures</li>        <li id="ul0002-0029" num="0212">GPU: Graphics Processing Unit</li>        <li id="ul0002-0030" num="0213">GSM: Global &#x3b4;ystem for Mobile communications</li>        <li id="ul0002-0031" num="0214">HDR: High Dynamic Range</li>        <li id="ul0002-0032" num="0215">HEVC: High Efficiency Video Coding</li>        <li id="ul0002-0033" num="0216">HRD: Hypothetical Reference Decoder</li>        <li id="ul0002-0034" num="0217">IBC: Intra Block Copy</li>        <li id="ul0002-0035" num="0218">IC: Integrated Circuit</li>        <li id="ul0002-0036" num="0219">ISP: Intra Sub-Partitions</li>        <li id="ul0002-0037" num="0220">JEM: Joint Exploration Model</li>        <li id="ul0002-0038" num="0221">LAN: Local Area Network</li>        <li id="ul0002-0039" num="0222">LCD: Liquid-Crystal Display</li>        <li id="ul0002-0040" num="0223">LR: Loop Restoration Filter</li>        <li id="ul0002-0041" num="0224">LRU: Loop Restoration Unit</li>        <li id="ul0002-0042" num="0225">LTE: Long-Term Evolution</li>        <li id="ul0002-0043" num="0226">MPM: Most Probable Mode</li>        <li id="ul0002-0044" num="0227">MV: Motion Vector</li>        <li id="ul0002-0045" num="0228">OLED: Organic Light-Emitting Diode</li>        <li id="ul0002-0046" num="0229">PBs: Prediction Blocks</li>        <li id="ul0002-0047" num="0230">PCI: Peripheral Component Interconnect</li>        <li id="ul0002-0048" num="0231">PDPC: Position Dependent Prediction Combination</li>        <li id="ul0002-0049" num="0232">PLD: Programmable Logic Device</li>        <li id="ul0002-0050" num="0233">PPS: Picture Parameter Set</li>        <li id="ul0002-0051" num="0234">PU: Prediction Unit</li>        <li id="ul0002-0052" num="0235">RAM: Random Access Memory</li>        <li id="ul0002-0053" num="0236">ROM: Read-Only Memory</li>        <li id="ul0002-0054" num="0237">SAO: Sample Adaptive Offset</li>        <li id="ul0002-0055" num="0238">SCC: Screen Content Coding</li>        <li id="ul0002-0056" num="0239">SDR: Standard Dynamic Range</li>        <li id="ul0002-0057" num="0240">SEI: Supplementary Enhancement Information</li>        <li id="ul0002-0058" num="0241">SNR: Signal Noise Ratio</li>        <li id="ul0002-0059" num="0242">SPS: Sequence Parameter Set</li>        <li id="ul0002-0060" num="0243">SSD: Solid-state Drive</li>        <li id="ul0002-0061" num="0244">TU: Transform Unit</li>        <li id="ul0002-0062" num="0245">USB: Universal Serial Bus</li>        <li id="ul0002-0063" num="0246">VPS: Video Parameter Set</li>        <li id="ul0002-0064" num="0247">VUI: Video Usability Information</li>        <li id="ul0002-0065" num="0248">VVC: Versatile Video Coding</li>        <li id="ul0002-0066" num="0249">WAIP: Wide-Angle Intra Prediction</li>    </ul>    </li></ul></p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of video decoding at a decoder, the method comprising:<claim-text>receiving a video bitstream including coded residuals of a current block;</claim-text><claim-text>determining a plurality of transform coefficients for the current block based on the coded residuals;</claim-text><claim-text>calculating, for each of a plurality of sign prediction hypotheses, a cost of the respective sign prediction hypothesis by performing sign prediction on a subset of the plurality of transform coefficients based on a subset of samples in at least one of a topmost row or a leftmost column of the current block, a number of samples in the subset of samples being a constant number and less than a total number of samples in the at least one of the topmost row or the leftmost column of the current block;</claim-text><claim-text>selecting one of the plurality of sign prediction hypotheses with a minimal cost among the costs of the plurality of sign prediction hypotheses; and</claim-text><claim-text>performing the sign prediction according to the selected sign prediction hypothesis.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the constant number is predetermined.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the constant number is determined based on a number of the subset of the plurality of transform coefficients.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the constant number is determined based on a comparison between one dimension of the current block and a threshold.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the constant number is determined based on a look-up table including a plurality of values of the constant number, each of plurality of values being associated with a different value of one dimension of the current block.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are determined based on one dimension of the current block.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least two positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are adjacent.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are evenly spaced.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the calculating comprises:<claim-text>calculating, for each of the plurality of sign prediction hypotheses, the cost of the respective sign prediction hypothesis based on (i) the subset of samples in the at least one of the topmost row or the leftmost column of the current block and (ii) neighboring reconstructed samples in at least one of a row above the current block or a column left to the current block.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. An apparatus, comprising:<claim-text>processing circuitry configured to:<claim-text>receive a video bitstream including coded residuals of a current block;</claim-text><claim-text>determine a plurality of transform coefficients for the current block based on the coded residuals;</claim-text><claim-text>calculate, for each of a plurality of sign prediction hypotheses, a cost of the respective sign prediction hypothesis by performing sign prediction on a subset of the plurality of transform coefficients based on a subset of samples in at least one of a topmost row or a leftmost column of the current block, a number of samples in the subset of samples being a constant number and less than a total number of samples in the at least one of the topmost row or the leftmost column of the current block;</claim-text><claim-text>select one of the plurality of sign prediction hypotheses with a minimal cost among the costs of the plurality of sign prediction hypotheses; and</claim-text><claim-text>perform the sign prediction according to the selected sign prediction hypothesis.</claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the constant number is predetermined.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the constant number is determined based on a number of the subset of the plurality of transform coefficients.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the constant number is determined based on a comparison between one dimension of the current block and a threshold.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the constant number is determined based on a look-up table including a plurality of values of the constant number, each of plurality of values being associated with a different value of one dimension of the current block.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are determined based on one dimension of the current block.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein at least two positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are adjacent.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein positions of the subset of samples in the at least one of the topmost row or the leftmost column of the current block are evenly spaced.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing circuitry is further configured to:<claim-text>calculate, for each of the plurality of sign prediction hypotheses, the cost of the respective sign prediction hypothesis based on (i) the subset of samples in the at least one of the topmost row or the leftmost column of the current block and (ii) neighboring reconstructed samples in at least one of a row above the current block or a column left to the current block.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A non-transitory computer-readable storage medium storing instructions which, when executed by at least one processor, cause the at least one processor to perform:<claim-text>receiving a video bitstream including coded residuals of a current block;</claim-text><claim-text>determining a plurality of transform coefficients for the current block based on the coded residuals;</claim-text><claim-text>calculating, for each of a plurality of sign prediction hypotheses, a cost of the respective sign prediction hypothesis by performing sign prediction on a subset of the plurality of transform coefficients based on a subset of samples in at least one of a topmost row or a leftmost column of the current block, a number of samples in the subset of samples being a constant number and less than a total number of samples in the at least one of the topmost row or the leftmost column of the current block;</claim-text><claim-text>selecting one of the plurality of sign prediction hypotheses with a minimal cost among the costs of the plurality of sign prediction hypotheses; and</claim-text><claim-text>performing the sign prediction according to the selected sign prediction hypothesis.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the constant number is predetermined.</claim-text></claim></claims></us-patent-application>