<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004708A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004708</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17811822</doc-number><date>20220711</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>169</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>11</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>4</main-group><subgroup>80</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>169</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>11</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180201</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>4</main-group><subgroup>80</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>2200</main-group><subgroup>24</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR DIGITAL IMAGE EDITING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16946948</doc-number><date>20200713</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11386261</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17811822</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15147123</doc-number><date>20160505</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10755036</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16946948</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Snap Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Sheth</last-name><first-name>Rahul</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Tang</last-name><first-name>Kevin Dechau</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Zhang</last-name><first-name>Ning</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system according to various exemplary embodiments includes a processor and a user interface, communication module, and memory coupled to the processor. The memory stores instructions that, when executed by the processor, cause the system to: retrieve a digital image from a server using the communication module; present the digital image on a display of the user interface; receive edits to the digital image via the user interface; generate, based on the edits, a modified digital image, wherein generating the modified digital image includes transforming a format of the digital image to include a field containing an identifier associated with the modified digital image; and transmit the modified digital image to the server using the communication module.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="129.54mm" wi="151.47mm" file="US20230004708A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="231.90mm" wi="155.36mm" file="US20230004708A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="145.12mm" wi="153.50mm" file="US20230004708A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="231.90mm" wi="133.69mm" file="US20230004708A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="223.86mm" wi="129.20mm" file="US20230004708A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="67.73mm" wi="96.52mm" file="US20230004708A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="218.02mm" wi="142.66mm" file="US20230004708A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="237.41mm" wi="150.54mm" file="US20230004708A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CLAIM OF PRIORITY</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 16/946,948, filed Jul. 13, 2020, which application is a continuation of U.S. patent application Ser. No. 15/147,123, filed on May 5, 2016, which are incorporated herein by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">As the popularity of social networking grows, the number of digital images generated and shared using such social networks grows as well. Among other things embodiments of the present disclosure help users perform collaborative edits to digital images shared over social networks.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0004" num="0003">In the drawings, which are not necessarily drawn to scale, like numerals may describe similar components in different views. Like numerals having different letter suffixes may represent different instances of similar components. Some embodiments are illustrated by way of example, and not limitation, in the figures of the accompanying drawings in which:</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example messaging system for exchanging data (e.g., messages and associated content) over a network.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is block diagram illustrating further details regarding a messaging system, according to exemplary embodiments.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram illustrating data which may be stored in the database of the messaging server system, according to various exemplary embodiments.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an exemplary flow diagram of a process for digital image editing according to various aspects of the disclosure.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>E</figref> are screenshots illustrating the steps of the method described in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating a representative software architecture, which may be used in conjunction with various hardware architectures herein described.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating components of a machine, according to some exemplary embodiments, able to read instructions from a machine-readable medium (e.g., a machine-readable storage medium) and perform any one or more of the methodologies discussed herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0012" num="0011">Among other things embodiments of the present disclosure help users perform collaborative edits to digital images shared over social networks.</p><p id="p-0013" num="0012">A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document: Copyright 2016, SNAPCHAT, INC. 2016, All Rights Reserved.</p><p id="p-0014" num="0013">The description that follows includes systems, methods, techniques, instruction sequences, and computing machine program products that embody illustrative embodiments of the disclosure. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide an understanding of various embodiments of the inventive subject matter. It will be evident, however, to those skilled in the art, that embodiments of the inventive subject matter may be practiced without these specific details. In general, well-known instruction instances, protocols, structures, and techniques are not necessarily shown in detail.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example messaging system <b>100</b> for exchanging data (e.g., messages and associated content) over a network. The messaging system <b>100</b> includes multiple client devices <b>102</b>, each of which hosts a number of applications including a messaging client application <b>104</b>. Each messaging client application <b>104</b> is communicatively coupled to other instances of the messaging client application <b>104</b> and a messaging server system <b>108</b> via a network <b>106</b> (e.g., the Internet). As used herein, the term &#x201c;client device&#x201d; may refer to any machine that interfaces to a communications network (such as network <b>106</b>) to obtain resources from one or more server systems or other client devices. A client device may be, but is not limited to, a mobile phone, desktop computer, laptop, portable digital assistants (PDAs), smart phones, tablets, ultra books, netbooks, laptops, multi-processor systems, microprocessor-based or programmable consumer electronics, game consoles, set-top boxes, or any other communication device that a user may use to access a network.</p><p id="p-0016" num="0015">In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, each messaging client application <b>104</b> is able to communicate and exchange data with another messaging client application <b>104</b> and with the messaging server system <b>108</b> via the network <b>106</b>. The data exchanged between messaging client applications <b>104</b>, and between a messaging client application <b>104</b> and the messaging server system <b>108</b>, includes functions (e.g., commands to invoke functions) as well as payload data (e.g., text, audio, video or other multimedia data).</p><p id="p-0017" num="0016">The network <b>106</b> may include, or operate in conjunction with, an ad hoc network, an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a wireless WAN (WWAN), a metropolitan area network (MAN), the Internet, a portion of the Internet, a portion of the Public Switched Telephone Network (PSTN), a plain old telephone service (POTS) network, a cellular telephone network, a wireless network, a Wi-Fi&#xae; network, another type of network, or a combination of two or more such networks. For example, a network or a portion of a network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access (CDMA) connection, a Global System for Mobile communications (GSM) connection, or other type of cellular or wireless coupling. In this example, the coupling may implement any of a variety of types of data transfer technology, such as Single Carrier Radio Transmission Technology (1xRTT), Evolution-Data Optimized (EVDO) technology, General Packet Radio Service (GPRS) technology, Enhanced Data rates for GSM Evolution (EDGE) technology, third Generation Partnership Project (3GPP) including 3G, fourth generation wireless (4G) networks, Universal Mobile Telecommunications System (UMTS), High Speed Packet Access (HSPA), Worldwide Interoperability for Microwave Access (WiMAX), Long Term Evolution (LTE) standard, others defined by various standard setting organizations, other long range protocols, or other data transfer technology.</p><p id="p-0018" num="0017">The messaging server system <b>108</b> provides server-side functionality via the network <b>106</b> to a particular messaging client application <b>104</b>. While certain functions of the messaging system <b>100</b> are described herein as being performed by either a messaging client application <b>104</b> or by the messaging server system <b>108</b>, it will be appreciated that the location of certain functionality either within the messaging client application <b>104</b> or the messaging server system <b>108</b> is a design choice. For example, it may be technically preferable to initially deploy certain technology and functionality within the messaging server system <b>108</b>, but to later migrate this technology and functionality to the messaging client application <b>104</b> where a client device <b>102</b> has a sufficient processing capacity.</p><p id="p-0019" num="0018">The messaging server system <b>108</b> supports various services and operations that are provided to the messaging client application <b>104</b>. Such operations include transmitting data to, receiving data from, and processing data generated by the messaging client application <b>104</b>. This data may include, message content, client device information, geolocation information, media annotation and overlays, message content persistence conditions, social network information, and live event information, as examples. Data exchanges within the messaging system <b>100</b> are invoked and controlled through functions available via user interfaces (UIs) of the messaging client application <b>104</b>.</p><p id="p-0020" num="0019">Turning now specifically to the messaging server system <b>108</b>, an Application Program Interface (API) server <b>110</b> is coupled to, and provides a programmatic interface to, an application server <b>112</b>. The application server <b>112</b> is communicatively coupled to a database server <b>118</b>, which facilitates access to a database <b>120</b> in which is stored data associated with messages processed by the application server <b>112</b>.</p><p id="p-0021" num="0020">The Application Program Interface (API) server <b>110</b> receives and transmits message data (e.g., commands and message payloads) between the client device <b>102</b> and the application server <b>112</b>. Specifically, the API server <b>110</b> provides a set of interfaces (e.g., routines and protocols) that can be called or queried by the messaging client application <b>104</b> in order to invoke functionality of the application server <b>112</b>. The API server <b>110</b> exposes various functions supported by the application server <b>112</b>, including account registration, login functionality, the sending of messages, via the application server <b>112</b>, from a particular messaging client application <b>104</b> to another messaging client application <b>104</b>, the sending of media files (e.g., images or video) from a messaging client application <b>104</b> to the messaging server application <b>114</b>, and for possible access by another messaging client application <b>104</b>, the setting of a collection of media data (e.g., story), the retrieval of a list of friends of a user of a client device <b>102</b>, the retrieval of such collections, the retrieval of messages and content, the adding and deletion of friends to a social graph, the location of friends within a social graph, opening and application event (e.g., relating to the messaging client application <b>104</b>).</p><p id="p-0022" num="0021">The application server <b>112</b> hosts a number of applications and subsystems, including a messaging server application <b>114</b>, an image processing system <b>116</b> and a social network system <b>122</b>. The messaging server application <b>114</b> implements a number of message processing technologies and functions, particularly related to the aggregation and other processing of content (e.g., textual and multimedia content) included in messages received from multiple instances of the messaging client application <b>104</b>. As will be described in further detail, the text and media content from multiple sources may be aggregated into collections of content (e.g., called stories or galleries). These collections are then made available, by the messaging server application <b>114</b>, to the messaging client application <b>104</b>. Other processor and memory intensive processing of data may also be performed server-side by the messaging server application <b>114</b>, in view of the hardware requirements for such processing.</p><p id="p-0023" num="0022">The application server <b>112</b> also includes an image processing system <b>116</b> that is dedicated to performing various image processing operations, typically with respect to images or video received within the payload of a message at the messaging server application <b>114</b>.</p><p id="p-0024" num="0023">The social network system <b>122</b> supports various social networking functions services, and makes these functions and services available to the messaging server application <b>114</b>. To this end, the social network system <b>122</b> maintains and accesses an entity graph <b>304</b> within the database <b>120</b>. Examples of functions and services supported by the social network system <b>122</b> include the identification of other users of the messaging system <b>100</b> with which a particular user has relationships or is &#x201c;following&#x201d;, and also the identification of other entities and interests of a particular user.</p><p id="p-0025" num="0024">The application server <b>112</b> is communicatively coupled to a database server <b>118</b>, which facilitates access to a database <b>120</b> in which is stored data associated with messages processed by the messaging server application <b>114</b>.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is block diagram illustrating further details regarding the messaging system <b>100</b>, according to exemplary embodiments. Specifically, the messaging system <b>100</b> is shown to comprise the messaging client application <b>104</b> and the application server <b>112</b>, which in turn embody a number of some subsystems, namely an ephemeral timer system <b>202</b>, a collection management system <b>204</b> and an annotation system <b>206</b>.</p><p id="p-0027" num="0026">The ephemeral timer system <b>202</b> is responsible for enforcing the temporary access to content permitted by the messaging client application <b>104</b> and the messaging server application <b>114</b>. To this end, the ephemeral timer system <b>202</b> incorporates a number of timers that, based on duration and display parameters associated with a message, or collection of messages (e.g., a SNAPCHAT story), selectively display and enable access to messages and associated content via the messaging client application <b>104</b>. Further details regarding the operation of the ephemeral timer system <b>202</b> are provided below.</p><p id="p-0028" num="0027">The collection management system <b>204</b> is responsible for managing collections of media (e.g., collections of text, image video and audio data). In some examples, a collection of content (e.g., messages, including images, video, text and audio) may be organized into an &#x201c;event gallery&#x201d; or an &#x201c;event story.&#x201d; Such a collection may be made available for a specified time period, such as the duration of an event to which the content relates. For example, content relating to a music concert may be made available as a &#x201c;story&#x201d; for the duration of that music concert. The collection management system <b>204</b> may also be responsible for publishing an icon that provides notification of the existence of a particular collection to the user interface of the messaging client application <b>104</b>.</p><p id="p-0029" num="0028">The collection management system <b>204</b> furthermore includes a curation interface <b>208</b> that allows a collection manager to manage and curate a particular collection of content. For example, the curation interface <b>208</b> enables an event organizer to curate a collection of content relating to a specific event (e.g., delete inappropriate content or redundant messages). Additionally, the collection management system <b>204</b> employs machine vision (or image recognition technology) and content rules to automatically curate a content collection. In certain embodiments, compensation may be paid to a user for inclusion of user generated content into a collection. In such cases, the curation interface <b>208</b> operates to automatically make payments to such users for the use of their content.</p><p id="p-0030" num="0029">The annotation system <b>206</b> provides various functions that enable a user to annotate or otherwise modify or edit media content associated with a message. For example, the annotation system <b>206</b> provides functions related to the generation and publishing of media overlays for messages processed by the messaging system <b>100</b>. The annotation system <b>206</b> operatively supplies a media overlay (e.g., a SNAPCHAT filter) to the messaging client application <b>104</b> based on a geolocation of the client device <b>102</b>. In another example, the annotation system <b>206</b> operatively supplies a media overlay to the messaging client application <b>104</b> based on other information, such as, social network information of the user of the client device <b>102</b>. A media overlay may include audio and visual content and visual effects. Examples of audio and visual content include pictures, texts, logos, animations, and sound effects. An example of a visual effect includes color overlaying. The audio and visual content or the visual effects can be applied to a media content item (e.g., a photo) at the client device <b>102</b>. For example, the media overlay including text that can be overlaid on top of a photograph generated taken by the client device <b>102</b>. In another example, the media overlay includes an identification of a location overlay (e.g., Venice beach), a name of a live event, or a name of a merchant overlay (e.g., Beach Coffee House). In another example, the annotation system <b>206</b> uses the geolocation of the client device <b>102</b> to identify a media overlay that includes the name of a merchant at the geolocation of the client device <b>102</b>. The media overlay may include other indicia associated with the merchant. The media overlays may be stored in the database <b>120</b> and accessed through the database server <b>118</b>.</p><p id="p-0031" num="0030">In one exemplary embodiment, the annotation system <b>206</b> provides a user-based publication platform that enables users to select a geolocation on a map, and upload content associated with the selected geolocation. The user may also specify circumstances under which a particular media overlay should be offered to other users. The annotation system <b>206</b> generates a media overlay that includes the uploaded content and associates the uploaded content with the selected geolocation.</p><p id="p-0032" num="0031">In another exemplary embodiment, the annotation system <b>206</b> provides a merchant-based publication platform that enables merchants to select a particular media overlay associated with a geolocation via a bidding process. For example, the annotation system <b>206</b> associates the media overlay of a highest bidding merchant with a corresponding geolocation for a predefined amount of time</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram <b>300</b> illustrating data <b>300</b> which may be stored in the database <b>120</b> of the messaging server system <b>108</b>, according to certain exemplary embodiments. While the content of the database <b>120</b> is shown to comprise a number of tables, it will be appreciated that the data could be stored in other types of data structures (e.g., as an object-oriented database).</p><p id="p-0034" num="0033">The database <b>120</b> includes message data stored within a message table <b>314</b>. The entity table <b>302</b> stores entity data, including an entity graph <b>304</b>. Entities for which records are maintained within the entity table <b>302</b> may include individuals, corporate entities, organizations, objects, places, events, etc. Regardless of type, any entity regarding which the messaging server system <b>108</b> stores data may be a recognized entity. Each entity is provided with a unique identifier, as well as an entity type identifier (not shown).</p><p id="p-0035" num="0034">The entity graph <b>304</b> furthermore stores information regarding relationships and associations between entities. Such relationships may be social, professional (e.g., work at a common corporation or organization) interested-based or activity-based, merely for example.</p><p id="p-0036" num="0035">The database <b>120</b> also stores annotation data, in the example form of filters, in an annotation table <b>312</b>. Filters for which data is stored within the annotation table <b>312</b> are associated with and applied to videos (for which data is stored in a video table <b>310</b>) and/or images (for which data is stored in an image table <b>308</b>). Filters, in one example, are overlays that are displayed as overlaid on an image or video during presentation to a recipient user. Filters may be of varies types, including a user-selected filters from a gallery of filters presented to a sending user by the messaging client application <b>104</b> when the sending user is composing a message. Other types of filters include geolocation filters (also known as geo-filters) which may be presented to a sending user based on geographic location. For example, geolocation filters specific to a neighborhood or special location may be presented within a user interface by the messaging client application <b>104</b>, based on geolocation information determined by a GPS unit of the client device <b>102</b>. Another type of filter is a data filter, which may be selectively presented to a sending user by the messaging client application <b>104</b>, based on other inputs or information gathered by the client device <b>102</b> during the message creation process. Example of data filters include current temperature at a specific location, a current speed at which a sending user is traveling, battery life for a client device <b>102</b> or the current time.</p><p id="p-0037" num="0036">Other annotation data that may be stored within the image table <b>308</b> is so-called &#x201c;lens&#x201d; data. A &#x201c;lens&#x201d; may be a real-time special effect and sound that may be added to an image or a video.</p><p id="p-0038" num="0037">As mentioned above, the video table <b>310</b> stores video data which, in one embodiment, is associated with messages for which records are maintained within the message table <b>314</b>. Similarly, the image table <b>308</b> stores image data associated with messages for which message data is stored in the entity table <b>302</b>. The entity table <b>302</b> may associate various annotations from the annotation table <b>312</b> with various images and videos stored in the image table <b>308</b> and the video table <b>310</b>.</p><p id="p-0039" num="0038">A story table <b>306</b> stores data regarding collections of messages and associated image, video or audio data, which are compiled into a collection (e.g., a SNAPCHAT story or a gallery). The creation of a particular collection may be initiated by a particular user (e.g., each user for which a record is maintained in the entity table <b>302</b>) A user may create a &#x201c;personal story&#x201d; in the form of a collection of content that has been created and sent/broadcast by that user. To this end, the user interface of the messaging client application <b>104</b> may include an icon that is user selectable to enable a sending user to add specific content to his or her personal story.</p><p id="p-0040" num="0039">A collection may also constitute a &#x201c;live story,&#x201d; which is a collection of content from multiple users that is created manually, automatically or using a combination of manual and automatic techniques. For example, a &#x201c;live story&#x201d; may constitute a curated stream of user-submitted content from varies locations and events. Users, whose client devices have location services enabled and are at a common location event at a particular time may, for example, be presented with an option, via a user interface of the messaging client application <b>104</b>, to contribute content to a particular live story. The live story may be identified to the user by the messaging client application <b>104</b>, based on his or her location. The end result is a &#x201c;live story&#x201d; told from a community perspective.</p><p id="p-0041" num="0040">A further type of content collection is known as a &#x201c;location story&#x201d;, which enables a user whose client device <b>102</b> is located within a specific geographic location (e.g., on a college or university campus) to contribute to a particular collection. In some embodiments, a contribution to a location story may require a second degree of authentication to verify that the end user belongs to a specific organization or other entity (e.g., is a student on the university campus).</p><heading id="h-0005" level="1">Digital Image Editing</heading><p id="p-0042" num="0041">Embodiments of the present disclosure may be used to collaboratively edit a digital image by different users, such as users who are members of a social network. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram of an exemplary method for digital image editing according to various aspects of the present disclosure. The steps of method <b>400</b> may be performed in whole or in part, and may be performed by any number of different systems, such as the systems described in <figref idref="DRAWINGS">FIGS. <b>1</b> and/or <b>7</b></figref>.</p><p id="p-0043" num="0042">In the example shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, method <b>400</b> includes retrieving a digital image (<b>410</b>) presenting the digital image (<b>420</b>), receiving edits to the digital image (<b>430</b>), generating a modified digital image based on the edits (<b>440</b>), and transmitting the modified digital image (<b>450</b>).</p><p id="p-0044" num="0043">Embodiments of the present disclosure may retrieve (<b>410</b>) any number of digital images from any number of different sources. In some embodiments, retrieval of a digital image may include retrieving an image from an image capturing device, such as a digital camera (e.g., operating as part of input module <b>728</b> in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). Additionally, or alternatively, digital images may be retrieved over a network. In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for instance, client device <b>102</b> may retrieve one or more digital images from servers <b>110</b> and/or <b>118</b> via network <b>106</b>.</p><p id="p-0045" num="0044">Images may also be retrieved (<b>410</b>) from a server hosting a social network. <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> illustrates a screenshot showing a list of SNAPCHAT stories from friends of a user in a social network, while <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates a screenshot of an image from one of the SNAPCHAT stories retrieved (<b>410</b>) and presented (<b>420</b>) on the user's client device (e.g., smartphone or other mobile device).</p><p id="p-0046" num="0045">The image may be presented (<b>420</b>) via the display screen of a user interface of a computer system (such as the screen of a smartphone) and edits to the image may likewise be received (<b>430</b>) and/or presented via the user interface. In one example, as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b>C</figref>, an edit interface is presented to the user via the display screen to allow editing of the displayed image.</p><p id="p-0047" num="0046">A modified image may be generated (<b>440</b>) based on the received edits. The modified image may be the originally-retrieved image with the edits applied to it. Additionally or alternatively, a new image may be generated that includes the edits and is separate from the original image. <figref idref="DRAWINGS">FIG. <b>5</b>D</figref> illustrates a screenshot showing a modified image with the user's edits to the original image (shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>), namely circling the word &#x201c;magic&#x201d; in the title and adding text (&#x201c;Why is it magic?&#x201d;) and an emoji.</p><p id="p-0048" num="0047">Embodiments of the present disclosure may operate in conjunction with a variety of editing interfaces and user edits. In some embodiments, for example, the user may provide input to the user interface to apply a filter for modifying the image by overlaying the edits (e.g., the text and emoji shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>) on the image. Edits to the image may also be (or include) audio components, such as a music clip, as well as video and/or animated visual components. The user could also provide input, such as alphanumeric text, an icon, an edit to the underlying image (such a change to the image's size, shape, color, or scale) and the like, that is likewise overlaid on the image. An image that is being retrieved and edited in accordance with embodiments of the present disclosure may be an original, unedited image, or an image that already has edits from the user or another system/user. Accordingly, users can further add edits to images already modified by other users (e.g., members of the user's social network) to further enhance their collaborative editing experience.</p><p id="p-0049" num="0048">In some embodiments, generating the modified digital image (<b>440</b>) may include transforming the format of the digital image to include a field containing an identifier associated with the modified image. In embodiments where the edits are applied to an image in the form of an overlay, the field may be included in a data structure representing the edits in the overlay. In such cases, the overlay and the image may be integrated (i.e., stored together as part of the modified image). Alternatively, the overlay and the image may be separate, with the edits in the overlay (and the identifier field) represented in a separate data structure and/or file from image being modified. In the latter case, embodiments of the present disclosure need only transmit the overlaid edits to the server, and the server may apply the edits to the original image, thus lessening the volume data that is transferred and conserving bandwidth.</p><p id="p-0050" num="0049">In some embodiments, transforming the format of the digital image may include identifying and repurposing a data field within the image to store the identifier. For example, the identifier may be represented using bits from an otherwise unused field in the image file. Transforming the format of the digital image may also include adding the identifier to a meta data field in (or associated with) the modified digital image. Among other things, the identifier can help the server to correlate overlay edits with the original image to which they apply, to identify a plurality of edited images that have a common original parent, and to track subsequent edits to an already-edited image.</p><p id="p-0051" num="0050">A computer system performing the functionality method <b>400</b> may communicate with any number of other systems and devices, including a server, to retrieve (<b>410</b>) and/or transmit (<b>450</b>) one or more images. Such communication may be performed using a variety of different communication protocols and communication mediums, including those described above with reference to network <b>106</b>. In the exemplary system <b>700</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, such communication may be effected using communication module <b>740</b>.</p><p id="p-0052" num="0051">In some embodiments, a plurality of images may be retrieved (<b>410</b>) and presented (<b>420</b>). Such images may then be further modified (<b>430</b>) as described above. <figref idref="DRAWINGS">FIG. <b>5</b>E</figref> illustrates an exemplary screenshot where the image generated based on edits from the user in <figref idref="DRAWINGS">FIG. <b>5</b>D</figref> is presented (on the left) in conjunction with two other images (in the middle and right). The images in the middle and right could contain edits from the user that edited the image in <figref idref="DRAWINGS">FIG. <b>5</b>D</figref>, or edits from other users/systems that were submitted to a server hosting a social network. In this example, all three of the images are presented together simultaneously on the display of the user interface of the user's computing device. In this manner, multiple users in a social network can view images shared by their friends/contacts, make edits to the image, and upload the modified image to the server so that it can be presented together with the original image (and other edited images) for presentation to the members of a user's social network. Among other things, this allows friends to edit and share each other's visual content, thus giving rise to a new type of collaborative editing and social interaction.</p><heading id="h-0006" level="1">Software Architecture</heading><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating an example software architecture <b>606</b>, which may be used in conjunction with various hardware architectures herein described. <figref idref="DRAWINGS">FIG. <b>6</b></figref> is a non-limiting example of a software architecture and it will be appreciated that many other architectures may be implemented to facilitate the functionality described herein. The software architecture <b>606</b> may execute on hardware such as machine <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref> that includes, among other things, processors <b>704</b>, memory <b>714</b>, and I/O components <b>718</b>. A representative hardware layer <b>652</b> is illustrated and can represent, for example, the machine <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>. The representative hardware layer <b>652</b> includes a processing unit <b>654</b> having associated executable instructions <b>604</b>. Executable instructions <b>604</b> represent the executable instructions of the software architecture <b>606</b>, including implementation of the methods, components and so forth described herein. The hardware layer <b>652</b> also includes memory and/or storage modules memory/storage <b>656</b>, which also have executable instructions <b>604</b>. The hardware layer <b>652</b> may also comprise other hardware <b>658</b>.</p><p id="p-0054" num="0053">As used herein, the term &#x201c;component&#x201d; may refer to a device, physical entity or logic having boundaries defined by function or subroutine calls, branch points, application program interfaces (APIs), and/or other technologies that provide for the partitioning or modularization of particular processing or control functions. Components may be combined via their interfaces with other components to carry out a machine process. A component may be a packaged functional hardware unit designed for use with other components and a part of a program that usually performs a particular function of related functions.</p><p id="p-0055" num="0054">Components may constitute either software components (e.g., code embodied on a machine-readable medium) or hardware components. A &#x201c;hardware component&#x201d; is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various exemplary embodiments, one or more computer systems (e.g., a standalone computer system, a client computer system, or a server computer system) or one or more hardware components of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware component that operates to perform certain operations as described herein. A hardware component may also be implemented mechanically, electronically, or any suitable combination thereof. For example, a hardware component may include dedicated circuitry or logic that is permanently configured to perform certain operations.</p><p id="p-0056" num="0055">A hardware component may be a special-purpose processor, such as a Field-Programmable Gate Array (FPGA) or an Application Specific Integrated Circuit (ASIC). A hardware component may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example, a hardware component may include software executed by a general-purpose processor or other programmable processor. Once configured by such software, hardware components become specific machines (or specific components of a machine) uniquely tailored to perform the configured functions and are no longer general-purpose processors. It will be appreciated that the decision to implement a hardware component mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software) may be driven by cost and time considerations.</p><p id="p-0057" num="0056">A processor may be, or in include, any circuit or virtual circuit (a physical circuit emulated by logic executing on an actual processor) that manipulates data values according to control signals (e.g., &#x201c;commands&#x201d;, &#x201c;op codes&#x201d;, &#x201c;machine code&#x201d;, etc.) and which produces corresponding output signals that are applied to operate a machine. A processor may, for example, be a Central Processing Unit (CPU), a Reduced Instruction Set Computing (RISC) processor, a Complex Instruction Set Computing (CISC) processor, a Graphics Processing Unit (GPU), a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Radio-Frequency Integrated Circuit (RFIC) or any combination thereof. A processor may further be a multi-core processor having two or more independent processors (sometimes referred to as &#x201c;cores&#x201d;) that may execute instructions contemporaneously.</p><p id="p-0058" num="0057">Accordingly, the phrase &#x201c;hardware component&#x201d;(or &#x201c;hardware-implemented component&#x201d;) should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. Considering embodiments in which hardware components are temporarily configured (e.g., programmed), each of the hardware components need not be configured or instantiated at any one instance in time. For example, where a hardware component comprises a general-purpose processor configured by software to become a special-purpose processor, the general-purpose processor may be configured as respectively different special-purpose processors (e.g., comprising different hardware components) at different times. Software accordingly configures a particular processor or processors, for example, to constitute a particular hardware component at one instance of time and to constitute a different hardware component at a different instance of time. Hardware components can provide information to, and receive information from, other hardware components. Accordingly, the described hardware components may be regarded as being communicatively coupled. Where multiple hardware components exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) between or among two or more of the hardware components. In embodiments in which multiple hardware components are configured or instantiated at different times, communications between such hardware components may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware components have access.</p><p id="p-0059" num="0058">For example, one hardware component may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware component may then, at a later time, access the memory device to retrieve and process the stored output. Hardware components may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information). The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented components that operate to perform one or more operations or functions described herein. As used herein, &#x201c;processor-implemented component&#x201d; refers to a hardware component implemented using one or more processors. Similarly, the methods described herein may be at least partially processor-implemented, with a particular processor or processors being an example of hardware. For example, at least some of the operations of a method may be performed by one or more processors or processor-implemented components.</p><p id="p-0060" num="0059">Moreover, the one or more processors may also operate to support performance of the relevant operations in a &#x201c;cloud computing&#x201d; environment or as a &#x201c;software as a service&#x201d; (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), with these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., an Application Program Interface (API)). The performance of certain of the operations may be distributed among the processors, not only residing within a single machine, but deployed across a number of machines. In some exemplary embodiments, the processors or processor-implemented components may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other exemplary embodiments, the processors or processor-implemented components may be distributed across a number of geographic locations.</p><p id="p-0061" num="0060">In the exemplary architecture of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the software architecture <b>606</b> may be conceptualized as a stack of layers where each layer provides particular functionality. For example, the software architecture <b>606</b> may include layers such as an operating system <b>602</b>, libraries <b>620</b>, applications <b>616</b> and a presentation layer <b>614</b>. Operationally, the applications <b>616</b> and/or other components within the layers may invoke application programming interface (API) API calls <b>608</b> through the software stack and receive a response as in response to the API calls <b>608</b>. The layers illustrated are representative in nature and not all software architectures have all layers. For example, some mobile or special purpose operating systems may not provide a frameworks/middleware <b>618</b>, while others may provide such a layer. Other software architectures may include additional or different layers.</p><p id="p-0062" num="0061">The operating system <b>602</b> may manage hardware resources and provide common services. The operating system <b>602</b> may include, for example, a kernel <b>622</b>, services <b>624</b> and drivers <b>626</b>. The kernel <b>622</b> may act as an abstraction layer between the hardware and the other software layers. For example, the kernel <b>622</b> may be responsible for memory management, processor management (e.g., scheduling), component management, networking, security settings, and so on. The services <b>624</b> may provide other common services for the other software layers. The drivers <b>626</b> are responsible for controlling or interfacing with the underlying hardware. For instance, the drivers <b>626</b> include display drivers, camera drivers, Bluetooth&#xae; drivers, flash memory drivers, serial communication drivers (e.g., Universal Serial Bus (USB) drivers), Wi-Fi&#xae; drivers, audio drivers, power management drivers, and so forth depending on the hardware configuration.</p><p id="p-0063" num="0062">The libraries <b>620</b> provide a common infrastructure that is used by the applications <b>616</b> and/or other components and/or layers. The libraries <b>620</b> provide functionality that allows other software components to perform tasks in an easier fashion than to interface directly with the underlying operating system <b>602</b> functionality (e.g., kernel <b>622</b>, services <b>624</b> and/or drivers <b>626</b>). The libraries <b>620</b> may include system libraries <b>644</b> (e.g., C standard library) that may provide functions such as memory allocation functions, string manipulation functions, mathematical functions, and the like. In addition, the libraries <b>620</b> may include API libraries <b>646</b> such as media libraries (e.g., libraries to support presentation and manipulation of various media format such as MPREG4, H.264, MP3, AAC, AMR, JPG, PNG), graphics libraries (e.g., an OpenGL framework that may be used to render 2D and 3D in a graphic content on a display), database libraries (e.g., SQLite that may provide various relational database functions), web libraries (e.g., WebKit that may provide web browsing functionality), and the like. The libraries <b>620</b> may also include a wide variety of other libraries <b>648</b> to provide many other APIs to the applications <b>616</b> and other software components/modules.</p><p id="p-0064" num="0063">The frameworks/middleware <b>618</b> (also sometimes referred to as middleware) provide a higher-level common infrastructure that may be used by the applications <b>616</b> and/or other software components/modules. For example, the frameworks/middleware <b>618</b> may provide various graphic user interface (GUI) functions, high-level resource management, high-level location services, and so forth. The frameworks/middleware <b>618</b> may provide a broad spectrum of other APIs that may be utilized by the applications <b>616</b> and/or other software components/modules, some of which may be specific to a particular operating system <b>602</b> or platform.</p><p id="p-0065" num="0064">The applications <b>616</b> include built-in applications <b>638</b> and/or third-party applications <b>640</b>. Examples of representative built-in applications <b>638</b> may include, but are not limited to, a contacts application, a browser application, a book reader application, a location application, a media application, a messaging application, and/or a game application. Third-party applications <b>640</b> may include an application developed using the ANDROID&#x2122; or IOS&#x2122; software development kit (SDK) by an entity other than the vendor of the particular platform, and may be mobile software running on a mobile operating system such as IOS&#x2122;, ANDROID&#x2122; WINDOWS&#xae; Phone, or other mobile operating systems. The third-party applications <b>640</b> may invoke the API calls <b>608</b> provided by the mobile operating system (such as operating system <b>602</b>) to facilitate functionality described herein.</p><p id="p-0066" num="0065">The applications <b>616</b> may use built in operating system functions (e.g., kernel <b>622</b>, services <b>624</b> and/or drivers <b>626</b>), libraries <b>620</b>, and frameworks/middleware <b>618</b> to create user interfaces to interact with users of the system. Alternatively, or additionally, in some systems interactions with a user may occur through a presentation layer, such as presentation layer <b>614</b>. In these systems, the application/component &#x201c;logic&#x201d; can be separated from the aspects of the application/component that interact with a user.</p><heading id="h-0007" level="1">Exemplary Machine</heading><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating components (also referred to herein as &#x201c;modules&#x201d;) of a machine <b>700</b>, according to some exemplary embodiments, able to read instructions from a machine-readable medium (e.g., a machine-readable storage medium) and perform any one or more of the methodologies discussed herein. Specifically, <figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a diagrammatic representation of the machine <b>700</b> in the example form of a computer system, within which instructions <b>710</b>(e.g., software, a program, an application, an applet, an app, or other executable code) for causing the machine <b>700</b> to perform any one or more of the methodologies discussed herein may be executed. As such, the instructions <b>710</b> may be used to implement modules or components described herein. The instructions <b>710</b> transform the general, non-programmed machine <b>700</b> into a particular machine <b>700</b> programmed to carry out the described and illustrated functions in the manner described. In alternative embodiments, the machine <b>700</b> operates as a standalone device or may be coupled (e.g., networked) to other machines. In a networked deployment, the machine <b>700</b> may operate in the capacity of a server machine or a client machine in a server-client network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine <b>700</b> may comprise, but not be limited to, a server computer, a client computer, a personal computer (PC), a tablet computer, a laptop computer, a netbook, a set-top box (STB), a personal digital assistant (PDA), an entertainment media system, a cellular telephone, a smart phone, a mobile device, a wearable device (e.g., a smart watch), a smart home device (e.g., a smart appliance), other smart devices, a web appliance, a network router, a network switch, a network bridge, or any machine capable of executing the instructions <b>710</b>, sequentially or otherwise, that specify actions to be taken by machine <b>700</b>. Further, while only a single machine <b>700</b> is illustrated, the term &#x201c;machine&#x201d; shall also be taken to include a collection of machines that individually or jointly execute the instructions <b>710</b> to perform any one or more of the methodologies discussed herein.</p><p id="p-0068" num="0067">The machine <b>700</b> may include processors <b>704</b>, memory memory/storage <b>706</b>, and I/O components <b>718</b>, which may be configured to communicate with each other such as via a bus <b>702</b>. The memory/storage <b>706</b> may include a memory <b>714</b>, such as a main memory, or other memory storage, and a storage unit <b>716</b>, both accessible to the processors <b>704</b> such as via the bus <b>702</b>. The storage unit <b>716</b> and memory <b>714</b> store the instructions <b>710</b> embodying any one or more of the methodologies or functions described herein. The instructions <b>710</b> may also reside, completely or partially, within the memory <b>714</b>, within the storage unit <b>716</b>, within at least one of the processors <b>704</b> (e.g., within the processor's cache memory), or any suitable combination thereof, during execution thereof by the machine <b>700</b>. Accordingly, the memory <b>714</b>, the storage unit <b>716</b>, and the memory of processors <b>704</b> are examples of machine-readable media.</p><p id="p-0069" num="0068">As used herein, the term &#x201c;machine-readable medium,&#x201d; &#x201c;computer-readable medium,&#x201d; or the like may refer to any component, device or other tangible media able to store instructions and data temporarily or permanently. Examples of such media may include, but is not limited to, random-access memory (RAM), read-only memory (ROM), buffer memory, flash memory, optical media, magnetic media, cache memory, other types of storage (e.g., Erasable Programmable Read-Only Memory (EEPROM)) and/or any suitable combination thereof. The term &#x201c;machine-readable medium&#x201d; should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, or associated caches and servers) able to store instructions. The term &#x201c;machine-readable medium&#x201d; may also be taken to include any medium, or combination of multiple media, that is capable of storing instructions (e.g., code) for execution by a machine, such that the instructions, when executed by one or more processors of the machine, cause the machine to perform any one or more of the methodologies described herein. Accordingly, a &#x201c;machine-readable medium&#x201d; may refer to a single storage apparatus or device, as well as &#x201c;cloud-based&#x201d; storage systems or storage networks that include multiple storage apparatus or devices. The term &#x201c;machine-readable medium&#x201d; excludes signals per se.</p><p id="p-0070" num="0069">The I/O components <b>718</b> may include a wide variety of components to provide a user interface for receiving input, providing output, producing output, transmitting information, exchanging information, capturing measurements, and so on. The specific I/O components <b>718</b> that are included in the user interface of a particular machine <b>700</b> will depend on the type of machine. For example, portable machines such as mobile phones will likely include a touch input device or other such input mechanisms, while a headless server machine will likely not include such a touch input device. It will be appreciated that the I/O components <b>718</b> may include many other components that are not shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. The I/O components <b>718</b> are grouped according to functionality merely for simplifying the following discussion and the grouping is in no way limiting. In various exemplary embodiments, the I/O components <b>718</b> may include output components <b>726</b> and input components <b>728</b>. The output components <b>726</b> may include visual components (e.g., a display such as a plasma display panel (PDP), a light emitting diode (LED) display, a liquid crystal display (LCD), a projector, or a cathode ray tube (CRT)), acoustic components (e.g., speakers), haptic components (e.g., a vibratory motor, resistance mechanisms), other signal generators, and so forth. The input components <b>728</b> may include alphanumeric input components (e.g., a keyboard, a touch screen configured to receive alphanumeric input, a photo-optical keyboard, or other alphanumeric input components), point based input components (e.g., a mouse, a touchpad, a trackball, a joystick, a motion sensor, or other pointing instrument), tactile input components (e.g., a physical button, a touch screen that provides location and/or force of touches or touch gestures, or other tactile input components), audio input components (e.g., a microphone), and the like. The input components <b>728</b> may also include one or more image-capturing devices, such as a digital camera for generating digital images and/or video.</p><p id="p-0071" num="0070">In further exemplary embodiments, the I/O components <b>718</b> may include biometric components <b>730</b>, motion components <b>734</b>, environmental environment components <b>736</b>, or position components <b>738</b>, as well as a wide array of other components. For example, the biometric components <b>730</b> may include components to detect expressions (e.g., hand expressions, facial expressions, vocal expressions, body gestures, or eye tracking), measure biosignals (e.g., blood pressure, heart rate, body temperature, perspiration, or brain waves), identify a person (e.g., voice identification, retinal identification, facial identification, fingerprint identification, or electroencephalogram based identification), and the like. The motion components <b>734</b> may include acceleration sensor components (e.g., accelerometer), gravitation sensor components, rotation sensor components (e.g., gyroscope), and so forth. The environment components <b>736</b> may include, for example, illumination sensor components (e.g., photometer), temperature sensor components (e.g., one or more thermometer that detect ambient temperature), humidity sensor components, pressure sensor components (e.g., barometer), acoustic sensor components (e.g., one or more microphones that detect background noise), proximity sensor components (e.g., infrared sensors that detect nearby objects), gas sensors (e.g., gas detection sensors to detection concentrations of hazardous gases for safety or to measure pollutants in the atmosphere), or other components that may provide indications, measurements, or signals corresponding to a surrounding physical environment. The position components <b>738</b> may include location sensor components (e.g., a Global Position system (GPS) receiver component), altitude sensor components (e.g., altimeters or barometers that detect air pressure from which altitude may be derived), orientation sensor components (e.g., magnetometers), and the like.</p><p id="p-0072" num="0071">Communication may be implemented using a wide variety of technologies. The I/O components <b>718</b> may include communication components <b>740</b> operable to couple the machine <b>700</b> to a network <b>732</b> or devices <b>720</b> via coupling <b>722</b> and coupling <b>724</b> respectively. For example, the communication components <b>740</b> may include a network interface component or other suitable device to interface with the network <b>732</b>. In further examples, communication components <b>740</b> may include wired communication components, wireless communication components, cellular communication components, Near Field Communication (NFC) components, Bluetooth&#xae; components (e.g., Bluetooth&#xae; Low Energy), Wi-Fi&#xae; components, and other communication components to provide communication via other modalities. The devices <b>720</b> may be another machine or any of a wide variety of peripheral devices (e.g., a peripheral device coupled via a Universal Serial Bus (USB)).</p><p id="p-0073" num="0072">Moreover, the communication components <b>740</b> may detect identifiers or include components operable to detect identifiers. For example, the communication components <b>740</b> may include Radio Frequency Identification (RFID) tag reader components, NFC smart tag detection components, optical reader components (e.g., an optical sensor to detect one-dimensional bar codes such as Universal Product Code (UPC) bar code, multi-dimensional bar codes such as Quick Response (QR) code, Aztec code, Data Matrix, Dataglyph, MaxiCode, PDF417, Ultra Code, UCC RSS-2D bar code, and other optical codes), or acoustic detection components (e.g., microphones to identify tagged audio signals). In addition, a variety of information may be derived via the communication components <b>740</b>, such as, location via Internet Protocol (IP) geo-location, location via Wi-Fi&#xae; signal triangulation, location via detecting a NFC beacon signal that may indicate a particular location, and so forth.</p><p id="p-0074" num="0073">Where a phrase similar to &#x201c;at least one of A, B, or C,&#x201d; &#x201c;at least one of A, B, and C,&#x201d; &#x201c;one or more A, B, or C,&#x201d; or &#x201c;one or more of A, B, and C&#x201d; is used, it is intended that the phrase be interpreted to mean that A alone may be present in an embodiment, B alone may be present in an embodiment, C alone may be present in an embodiment, or that any combination of the elements A, B and C may be present in a single embodiment; for example, A and B, A and C, B and C, or A and B and C.</p><p id="p-0075" num="0074">Changes and modifications may be made to the disclosed embodiments without departing from the scope of the present disclosure. These and other changes or modifications are intended to be included within the scope of the present disclosure, as expressed in the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system comprising:<claim-text>a processor; and</claim-text><claim-text>memory coupled to the processor and storing instructions that, when executed by the processor, cause the system to perform operations comprising:</claim-text><claim-text>transmitting an original digital image to a plurality of external systems including a first external system and a second external system;</claim-text><claim-text>receiving, from the first external system, a first modified digital image including a first set of edits to the original image,<claim-text>wherein the first modified digital image is generated by transforming a format of the original digital image to include a field including an identifier associated with the first modified digital image or by adding an overlay of the first set of edits on the original digital image; and</claim-text><claim-text>causing the original digital image and the first modified digital image to simultaneously be displayed separately on a user interface for a predetermined period of time.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first modified digital image is generated by transforming a format of the original digital image to include the field including the identifier associated with the first modified digital image and by adding an overlay of the first set of edits on the original digital image.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the field including identifier associated with the first modified digital image is a metadata field in the first modified digital image.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the predetermined period of time is established by an ephemeral timer.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:<claim-text>receiving, from the second external system, a second modified image including a second set of edits to the original digital image, wherein the second modified image is generated by transforming a format of the original digital image to include a field containing an identifier associated with the second modified digital image.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the second modified image is further generated by adding an overlay of the second set of edits on the original digital image.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the field including identifier associated with the second modified digital image is a metadata field in the second modified digital image.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method comprising:<claim-text>transmitting an original digital image to a plurality of external systems including a first external system and a second external system;</claim-text><claim-text>receiving, from the first external system, a first modified digital image including a first set of edits to the original image, wherein the first modified digital image is generated by transforming a format of the original digital image to include a field including an identifier associated with the first modified digital image; and</claim-text><claim-text>causing the original digital image and the first modified digital image to simultaneously be displayed separately on a user interface for a predetermined period of time.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the first modified digital image is generated by transforming a format of the original digital image to include the field including the identifier associated with the first modified digital image and by adding an overlay of the first set of edits on the original digital image.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the field including identifier associated with the first modified digital image is a metadata field in the first modified digital image.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the predetermined period of time is established by an ephemeral timer.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>receiving, from the second external system, a second modified image including a second set of edits to the original digital image, wherein the second modified image is generated by transforming a format of the original digital image to include a field containing an identifier associated with the second modified digital image.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the second modified image is further generated by adding an overlay of the second set of edits on the original digital image.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the field including identifier associated with the second modified digital image is a metadata field in the second modified digital image.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A non-transitory computer-readable medium storing instructions that, when executed by a computer system, cause the computer system to perform operations comprising:<claim-text>transmitting an original digital image to a plurality of external systems including a first external system and a second external system;</claim-text><claim-text>receiving, from the first external system, a first modified digital image including a first set of edits to the original image, wherein the first modified digital image is generated by transforming a format of the original digital image to include a field including an identifier associated with the first modified digital image; and</claim-text><claim-text>causing the original digital image and the first modified digital image to simultaneously be displayed separately on a user interface for a predetermined period of time.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the first modified digital image is generated by transforming a format of the original digital image to include the field including the identifier associated with the first modified digital image and by adding an overlay of the first set of edits on the original digital image.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the field including identifier associated with the first modified digital image is a metadata field in the first modified digital image.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the predetermined period of time is established by an ephemeral timer.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>receiving, from the second external system, a second modified image including a second set of edits to the original digital image, wherein the second modified image is generated by transforming a format of the original digital image to include a field containing an identifier associated with the second modified digital image.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-readable medium of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the second modified image is further generated by adding an overlay of the second set of edits on the original digital image.</claim-text></claim></claims></us-patent-application>