<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004438A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004438</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17366006</doc-number><date>20210701</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>901</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5044</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5011</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>9014</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">ACCELERATED RESOURCE DISTRIBUTION IN A UNIFIED ENDPOINT MANAGEMENT SYSTEM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>VMware, Inc.</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Sivaramachandran</last-name><first-name>Shanger</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Rao</last-name><first-name>Prashanth</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Vedapuri</last-name><first-name>Janani</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Jain</last-name><first-name>Adarsh Subhash Chandra</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods presented herein provide examples for distributing resources in a UEM system. In one example, the UEM system can receive a request to check out a user device enrolled in the UEM system. The request can include a profile identifier (&#x201c;ID&#x201d;) of a user profile making the request and attributes of the user device. The UEM system can create a hash of group IDs associated with the profile ID. The UEM system can create a device context that includes the device attributes and the hash. The UEM system can then determine if the device context matches to a resource context. Resource contexts can identify a set of UEM resources associated with a device context. Where a match is found, the UEM system can provide the corresponding resources to the user device.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="65.79mm" wi="158.75mm" file="US20230004438A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="217.76mm" wi="151.72mm" orientation="landscape" file="US20230004438A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="205.66mm" wi="157.73mm" file="US20230004438A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="178.73mm" wi="170.26mm" orientation="landscape" file="US20230004438A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="236.30mm" wi="170.26mm" orientation="landscape" file="US20230004438A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Many organizations use Unified Endpoint Management (&#x201c;UEM&#x201d;) systems to manage employee user devices. These UEM systems help secure internal resources and data and provide control over how the user devices are used. Some UEM systems allow user devices to be enrolled in a mode where employees can check them out for temporary use. For example, retail stores can have devices that employees can check out for performing certain job functions like reviewing inventory and checking out customers.</p><p id="p-0003" num="0002">Current methods of checking out UEM managed devices are time consuming and waste computing resources. For example, when a user checks out a device, the UEM system has to queue the device with each service to determine whether an associated resource should be provided to the user device. Many organizations have numerous business locations in the same time zone. Because of this, the UEM system can have thousands of employees arriving to work around the same time and checking out devices. This creates a huge back log in the resource calculation process. Users often must wait up to 15 minutes or even longer while the user device is configured. Most of the configuration time is due to long system queues just trying to determine which resources to provide to the device. This backlog costs the organization thousands of dollars in wasted employee time every day.</p><p id="p-0004" num="0003">As a result, a need exists for efficiently distributing resources in a UEM system.</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0005" num="0004">Examples described herein include systems and methods for distributing resources in a UEM system. In an example, the UEM system can include user devices that users, such as employees, can check out for use. The user devices can be located in various locations of an organization associated with the UEM.</p><p id="p-0006" num="0005">In an example, users can check out a user device by logging in to the user device, or a management application on the user device, using credentials for a user profile in the UEM. When the user logs in, the user device can send attributes of the user device to the UEM system, such as a version of the management application installed on the user device, an operating system version, an enrollment mode, and a unique device identifier (&#x201c;ID&#x201d;). In one example, the UEM system can use the device ID to retrieve other attributes of the device previously stored when the user device was enrolled, such as a group ID assigned to the user device. The UEM system can also retrieve attributes of the user profile using a profile ID from the credentials. For example, the UEM system can retrieve group IDs of groups in the organization that the user profile is assigned to. In one example, the UEM system can hash the group IDs to create a unique group ID for the combination of groups the user profile is assigned to.</p><p id="p-0007" num="0006">In an example, some or all the device attributes and user profile attributes can be included as device context. The UEM system can use the device context to determine UEM resources that should be provided to the user device. In one example, known device contexts can be mapped to resource contexts in the UEM system. A resource context can represent a particular set of UEM resources. When a check-out request is received from a user device, the UEM system can determine whether the device context of the check-out request is already associated with a resource context and thereby identify resources that should be provided to the user device. In an example where no such association already exists, the UEM system can go through a more extensive process of identifying which resources should be provided to the user device, such as by querying all the services that provide UEM resources to determine whether the user device should receive it. The UEM can then create a new resource context that identifies UEM resources that should be provided to any future check-out requests that match the device context. This eliminates the need to query all the UEM resource services on future requests because the combination of resources needed for the check-out request are already known.</p><p id="p-0008" num="0007">In some examples, the UEM system can be integrated with a third party to provide resources from the third party to the user devices. In such examples, the UEM system can send instructions to a server of the third party for sending applications to the user device that are identified in the resource context. In one example, the UEM system can identify applications or services that should be made available to the user device upon request. For example, the UEM system can send the profile ID and a device ID to the third-party server and instructions to allow requests from the user device for certain applications or services based on the device ID and the profile ID. In an example, the third-party server can deny requests for applications or services not identified by the UEM system.</p><p id="p-0009" num="0008">The examples summarized above can each be incorporated into a non-transitory, computer-readable medium having instructions that, when executed by a processor associated with a computing device, cause the processor to perform the stages described. Additionally, the example methods summarized above can each be implemented in a system including, for example, a memory storage and a computing device having a processor that executes instructions to carry out the stages described.</p><p id="p-0010" num="0009">Both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the examples, as claimed.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an illustration of an example system for distributing resources in a UEM system.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flowchart of an example method for distributing resources in a UEM system.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a sequence diagram of an example method for distributing resources in a UEM system.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an illustration of a second example method for distributing resources in a UEM system.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DESCRIPTION OF THE EXAMPLES</heading><p id="p-0015" num="0014">Reference will now be made in detail to the present examples, including examples illustrated in the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.</p><p id="p-0016" num="0015">Systems and methods presented herein provide examples for distributing resources in a UEM system. In an example, the UEM system can receive a request to check out a user device enrolled in the UEM system. The request can include a profile ID of a user making the request and attributes of the user device. The UEM system can create a hash of group IDs associated with the profile ID. The UEM system can create a device context that includes the device attributes and the hash. The UEM system can then determine if the device context matches to a resource context. Resource contexts can identify a set of UEM resources associated with a device context. Where a match is found, the UEM system can provide the corresponding resources to the user device. Where a match is not found, the UEM system can create a new resource context that can be used for future check-out requests with the same device context.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an illustration of a system for distributing resources in a UEM system. The system can include user devices <b>110</b> that have a management application <b>120</b>. The user devices <b>110</b> can be one or more processor-based devices, such as a personal computer, tablet, or cell phone. The management application <b>120</b> can be responsible for executing certain management functions on the user devices <b>110</b>. For example, the user devices <b>110</b> can be enrolled in a UEM system <b>130</b>. The UEM system <b>130</b> can enforce security and compliance protocols on the user devices <b>110</b> through the management application <b>120</b>.</p><p id="p-0018" num="0017">The UEM system <b>130</b> can include one or more servers, including multiple servers implemented virtually across multiple computing platforms. The UEM system <b>130</b> can include various services for providing UEM features and resources to the user devices <b>110</b>. For example, the UEM system <b>130</b> can include a device service <b>140</b> that handles enrollment and configuration of user devices. A resource service <b>150</b> can handle access and distribution of UEM resources, such as data files, profiles, and applications. An integration service <b>160</b> can handle distribution of third-party resources to the user devices <b>110</b>. For example, the integration service <b>160</b> can send instructions to an application <b>180</b> to send an installation file for an application to the user devices <b>110</b>. The device service <b>140</b>, resource service <b>150</b>, and integration service <b>160</b> (the &#x201c;services&#x201d;) can be hosted together or separately on one or more servers of the UEM system <b>130</b>.</p><p id="p-0019" num="0018">The services <b>140</b>, <b>150</b>, <b>160</b> can have access to a database <b>170</b> that stores various UEM data files and resources. The database <b>170</b> can be a storage device, such as one or more database servers. In one example, the UEM system <b>130</b> can include multiple databases <b>170</b> that are responsible for storing different UEM resources. For example, one database <b>170</b> can store user profile information, such as user IDs, groups IDs, credentials, and so on. Another database <b>170</b> can store application files, such as installation and configuration files for internal UEM-controlled applications.</p><p id="p-0020" num="0019">In an example, the user devices <b>110</b> can be enrolled as multi-user devices in the UEM system <b>130</b>. For example, the user devices <b>110</b> can be enrolled in the UEM system <b>130</b>, but not associated with any particular user. As an example, an administrator (&#x201c;admin&#x201d;) user can configure the user devices <b>110</b> at a staging location. The user devices <b>110</b> can be sent to various locations where users can check them out for use at the location. In an example, a user can check out a user device <b>110</b> by logging in to it with profile credentials. The user device <b>110</b> can send the request and profile credentials over a network, such as the Internet or a Local Area Network (&#x201c;LAN&#x201d;). The user device <b>110</b> can send the request and credentials as a data file, such as an encrypted JavaScript Object Notation (&#x201c;JSON&#x201d;) or an Extensible Markup Language (&#x201c;XML&#x201d;). In one example, the user device <b>110</b> can send the request and credentials using an Application Programming Interface (&#x201c;API&#x201d;) call.</p><p id="p-0021" num="0020">In one example, the profile can be specific to the user, and the user's profile can map in the UEM system <b>130</b> to group IDs of the user's roles. In a second example, users at a location can provide credentials for a profile assigned to the location. In a third example, the user can log in based on a specific role. For example, a user can use one credential if the user is checking inventory and a different credential if the user is checking out customers.</p><p id="p-0022" num="0021">In an example, the UEM system <b>130</b> can configure the user device <b>110</b> based on the check-out request. For example, the device service <b>140</b> can receive and authenticate check-out requests. The device services <b>140</b> can also collect a device context of the user device <b>110</b>. The device context can include information about certain attributes of the device, such as an organization group ID assigned to the user device <b>110</b> (referred to throughout as a &#x201c;group ID&#x201d; or &#x201c;OGID&#x201d;), a version of the management application <b>120</b> installed on the user device <b>110</b>, an operating system version, an enrollment mode, and a hash of smart groups that the user profile is assigned to (referred to throughout as a &#x201c;user group hash&#x201d;). The OGID can signify an organization or a device group within an organization that the user device <b>110</b> is associated with. For example, an OGID can indicate a client, business location, or department. Smart groups can describe user roles (such as &#x201c;associate&#x201d; or &#x201c;executive&#x201d;), clearance levels, or work locations within an organization for the user. Smart groups can be created by an administrator and a particular smart group can have a set of resources typically needed by users in that smart group.</p><p id="p-0023" num="0022">In an example, the device services <b>140</b> can send the device context to the resource service <b>150</b>. In one example, some information related to the device context can be retrieved by the resource service <b>150</b>. For example, the device services <b>140</b> can send attributes of the device and the ID of the user profile making the check-out request. The resource service <b>150</b> can query the database <b>170</b> to retrieve the user group hash of the user's profile.</p><p id="p-0024" num="0023">In an example, the database <b>170</b> can store a table that maps device contexts to resource contexts. A resource context can identify a set of UEM resources assigned to user devices with the device context, such as commands, profiles, and applications. For example, the resources can include virtual private network (&#x201c;VPN&#x201d;) profiles and agent files for use in managing the user device. The resource service <b>150</b> can query the database <b>170</b>, such as with an API call, with the device context, and the database <b>170</b> can reply with a resource context that corresponds to the device context. The resource service <b>150</b> can then send the resources of the corresponding resource context to the user device <b>110</b>. This can eliminate the need for the user device <b>110</b> to wait in queues for each resource to determine which resources are needed.</p><p id="p-0025" num="0024">In an example, if no resource context exists in the database <b>170</b> for a device context, the resource service <b>150</b> can create one. For example, the resource service <b>150</b> can queue the user device <b>110</b> with services for the UEM resources to determine which resources are needed for the device context. After the set of resources is identified, the resource service <b>150</b> can create a resource context that identifies the resources, and the resource service <b>150</b> can map the device context to the new resource context in the database <b>170</b>. Any future check-out requests that have that same device context can then map to the new resource context, thus eliminating the need to waste time and resources identifying all the resources needed to check-out the user device <b>110</b>.</p><p id="p-0026" num="0025">In an example, the UEM system <b>130</b> can include an integration service <b>160</b> that is responsible for handling any third-party applications or services associated with a device check-out. For example, the UEM system <b>130</b> can be integrated with a third-party provider so that the third-party can provide services to users of the UEM system <b>130</b> and allow the UEM system <b>130</b> to manage those services on the user devices <b>110</b>. When a resource context identifies a third-party application or service, the integration service <b>150</b> can send instructions to an application server <b>180</b> of the third party to send the third-party application or service to the user device <b>110</b>.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flowchart of an example method for distributing resources in a UEM system. At stage <b>210</b>, the UEM system <b>130</b> can receive a check-out request from the user device <b>110</b>. For example, a user can log in to the user device <b>110</b> using profile credentials. The credentials can include a username or other ID and a password associated with the profile, as an example. The user device <b>110</b> can send the credentials to the UEM system <b>130</b> where the device services <b>140</b> can authenticate the user device <b>110</b>.</p><p id="p-0028" num="0027">At stage <b>220</b>, the UEM system <b>130</b> can determine a device context of the check-out request. In an example, the device context can include a first set of attributes associated with the user device <b>110</b> (&#x201c;device attributes&#x201d;) and a second set of attributes associated with a user profile (&#x201c;profile attributes&#x201d;) associated with the check-out request. Some examples of device attributes can include an OGID, a version of the management application <b>120</b> installed on the user device <b>110</b>, an operating system version, and an enrollment mode. In an example, the user profile attributes can include smart groups that the user profile is assigned to. These groups can describe the user's role at the organization, their work location, and their security access level. The groups can each correspond to various profiles and applications that the user will need as part of their job.</p><p id="p-0029" num="0028">In an example, attributes specific to the user device <b>110</b> can be received from the user device <b>110</b>. For example, the user device <b>110</b> can provide information on the management application <b>120</b> version, the operating system version, the OGID, and the enrollment mode. In an alternative example, some attributes of the user device <b>110</b> can be determined by the UEM system <b>130</b> using a unique device ID provided by the user device <b>110</b>, such as a model and serial number or an International Mobile Equipment Identity (&#x201c;IMEI&#x201d;) number. For example, the device service <b>140</b> can use the device ID to retrieve certain attributes of the user device <b>110</b> that are saved in the database <b>170</b>. The attributes saved in the database <b>170</b> can be attributes that were obtained when the user device <b>110</b> was enrolled, for example. In one example, the attributes saved at the database <b>170</b> can be attributes specific to the enrollment of the user device <b>110</b>, like the OGID and the enrollment mode.</p><p id="p-0030" num="0029">In an example, the user profile attributes can be retrieved from the UEM system <b>130</b> using the credentials provided by the user when logging in. For example, the device service <b>140</b> can send the credentials to the resource service <b>150</b>. The resource service <b>150</b> can then retrieve the user profile attributes from the database <b>170</b>. The user profile attributes can include group IDs that the user profile is assigned to. For example, the database <b>170</b> can store a data table that maps user IDs to group IDs for groups that the user is assigned to. The resource services <b>150</b> can query the database <b>170</b> to retrieve the groups IDs of the user profile. In one example, resource service <b>150</b> can hash the group IDs using a hash function, or alternatively group IDs can already be stored as a hash in the database <b>170</b>.</p><p id="p-0031" num="0030">At stage <b>230</b>, the UEM system <b>130</b> can identify a resource context associated with the device context. In an example, a resource context can identify a set of UEM resources assigned to user devices <b>110</b> with the device context. Some examples of resources of a resource context can include commands, profiles, applications, and data files. In one example, the database <b>170</b> can store one or more data tables that map device contexts to resource contexts. User devices <b>110</b> with the same device context (i.e., the same combination of certain attributes) can be assigned to the same resource context. This allows the UEM system <b>130</b> to quickly identify all the resources a user device <b>110</b> should receive when a user checks it out.</p><p id="p-0032" num="0031">The table below is an example data table that maps a device context to a resource context:</p><p id="p-0033" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="91pt" align="left"/><colspec colname="4" colwidth="28pt" align="left"/><colspec colname="5" colwidth="42pt" align="center"/><colspec colname="6" colwidth="42pt" align="center"/><thead><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row><row><entry/><entry/><entry/><entry/><entry>Management</entry><entry/></row><row><entry>Resource</entry><entry/><entry/><entry>OS</entry><entry>Application</entry><entry>Enrollment</entry></row><row><entry>ID</entry><entry>OGID</entry><entry>Group Hash</entry><entry>Version</entry><entry>Version</entry><entry>Mode</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>1</entry><entry>100</entry><entry>ujq/MntoIaFWWd0k0x3gi4nj</entry><entry>A.11</entry><entry>2999</entry><entry>4</entry></row><row><entry/><entry/><entry>rRT+A+X3/z4FeYNXcZ4=</entry></row><row><entry>2</entry><entry>100</entry><entry>lXfMbZo4tFR/o75Ppi8iM9/</entry><entry>I.10</entry><entry>2999</entry><entry>0</entry></row><row><entry/><entry/><entry>tbF4vhVGb4vzn7da4x38=</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0034" num="0032">In the table above, the Resource ID column includes an ID for a specific resource context. The remaining columns illustrate device attributes that can constitute or be part of a device context. The OGID column includes the organization group ID of the user device <b>110</b>, the Group Hash column includes a user group hash of the user profile user to check out the user device <b>110</b>, the OS version column includes the OS version of the user device <b>110</b>, the Management Application Version column includes the version of the management application <b>120</b> installed on the user device <b>110</b>, and the Enrollment Mode column includes an ID for the enrollment mode of the user device <b>110</b>. The OGID can represent one or more organizational groups attributed to the user device <b>110</b>. The user group hash can represent groups attributed to the user based on the user profile. In the OS version column, the letter can indicate what OS platform is running on the user device <b>110</b>, and the number can indicate the version. For example, the &#x201c;A.11&#x201d; entry can indicate that the user device <b>110</b> is running ANDROID version <b>11</b>, and &#x201c;I.10&#x201d; can indicate that the user device <b>110</b> is running IOS version <b>10</b>. The table above is merely an example, and other formats, device attributes, and user profile attributes can be used to associate a check-out request for a user device <b>110</b> with a resource context.</p><p id="p-0035" num="0033">When a user checks out a user device <b>110</b>, the UEM system <b>130</b> can compare the device context to a table like the table described above to determine whether the device context already exists and is associated with a resource context. As example, if the UEM system <b>130</b> receives a check-out request from a user device <b>110</b> and the attributes of the device context match the corresponding values in the first row of the table above, then the UEM system <b>130</b> knows the device context and that it corresponds to the resource context with the Resource ID 1.</p><p id="p-0036" num="0034">Where the device context does match to a resource context, at stage <b>240</b>, the UEM system <b>130</b> can provide resources associated with the resource context to the user device. For example, the resource service <b>150</b> can send requests to databases and servers, such as the database <b>170</b> and the application server <b>180</b>, that host the resources to provide the resources to the user device <b>110</b>. The databases and servers can then send the resources to the user device <b>110</b>. In one example, the resources can include commands, profiles, and applications.</p><p id="p-0037" num="0035">In an example, some resources can be provided by a third party. For example, the UEM system <b>130</b> can integrate certain third-party applications so that the application is provided by the third party but managed by the UEM system <b>130</b>. In such an example, the resource service <b>150</b> can send the resource context to the integration service <b>160</b>, and the integration service <b>160</b> can send a request to the application server <b>180</b> to send the third-party application to the user device <b>110</b>. In this example, the application server <b>180</b> can be a third-party server.</p><p id="p-0038" num="0036">In one example, the resource context can identify whether a resource should be provided to the user device <b>110</b> or simply made available upon request. For example, the UEM system <b>130</b> can send some applications, commands, and profiles based on the corresponding resource context. However, the resource context can identify some resources that should be made available to the user device <b>110</b>, but not sent to the user device <b>110</b> unless a request is made. As an example, a user can log in to a user device <b>110</b> to check out. The UEM system <b>130</b> can send some resources immediately that the user device <b>110</b> promptly installs. The UEM system <b>130</b> can also indicate other resources that the user can request at a later time. For example, the UEM system <b>130</b> can notify the application server <b>180</b> of other applications that can be downloaded to the user device <b>110</b> upon request. If a request is received to download an application not permitted under the resource context, such a request can be denied.</p><p id="p-0039" num="0037">In an example, the resources corresponding to the resource context can be identified using a data table. The table below illustrates an example of such a data table:</p><p id="p-0040" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="42pt" align="center"/><colspec colname="2" colwidth="49pt" align="center"/><colspec colname="3" colwidth="49pt" align="center"/><colspec colname="4" colwidth="42pt" align="center"/><colspec colname="5" colwidth="35pt" align="center"/><thead><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row><row><entry>Resource</entry><entry/><entry/><entry/><entry/></row><row><entry>ID</entry><entry>ExternalAppID</entry><entry>InternalAppID</entry><entry>CommandID</entry><entry>ProfileID</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>1</entry><entry>100</entry><entry>Null</entry><entry>Null</entry><entry>Null</entry></row><row><entry>1</entry><entry>Null</entry><entry>200</entry><entry>Null</entry><entry>Null</entry></row><row><entry>1</entry><entry>267</entry><entry>Null</entry><entry>Null</entry><entry>Null</entry></row><row><entry>1</entry><entry>Null</entry><entry>Null</entry><entry>7</entry><entry>Null</entry></row><row><entry>1</entry><entry>Null</entry><entry>Null</entry><entry>Null</entry><entry>16</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0041" num="0038">The table above illustrates a resource context for a single resource context with a Resource ID of 1. The table includes a row for each resource that should be sent to user devices <b>110</b> with a matching device context. The table includes an ExternalAppID column that includes IDs that correspond to third-party applications, an InternalAppID column that includes IDs that correspond to internal applications, a CommandID column that includes IDs for command instructions, and a ProfileID column that includes IDs for configuration profiles. As shown above, the illustrated resource context includes two external applications: one with ID <b>100</b>, and another with ID <b>267</b>. When a check-out request is received and the corresponding device context matches the resource ID, the UEM system <b>130</b> can send requests to third-party servers associated with the ExternalAppIDs to send a download for the application to the user device <b>110</b>. For internal resources corresponding to the InternalAppID, CommandID, and ProfileID, the UEM system <b>130</b> can queue the user device <b>110</b> with services that provide those resources. In one example, the table can include a different row for each resource, which can help reduce errors when resources are added to or removed from a resource context.</p><p id="p-0042" num="0039">In some examples, the UEM system <b>130</b> can receive a check-out request for a user device <b>110</b>, but the device context does not map to a resource context. In such an example, the UEM system <b>130</b> can create a new resource context for the device context. For example, the UEM system <b>130</b> can queue the user device <b>110</b> in the various services that provide UEM resources, which can indicate whether the user device <b>110</b> should receive the corresponding resource or not. The UEM system <b>130</b> can collect data on which resources are assigned to the user device <b>110</b> and create a new resource context based on the data. This new resource context can be used to quickly identify resources for future check-out requests that have the same device context.</p><p id="p-0043" num="0040"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a sequence diagram of an example method for distributing resources in the UEM system <b>130</b>. At stage <b>302</b>, the user device <b>110</b> can send a check-out request to the device services <b>140</b>. For example, a user can log in to the user device <b>110</b> using profile credentials. In one example, logging in to the device can include logging in to the management application <b>120</b>. The credentials can include a username or ID and a password associated with the profile, as an example. At stage <b>304</b>, the device services <b>140</b> can authenticate the user device <b>110</b>.</p><p id="p-0044" num="0041">At stage <b>306</b>, the user device <b>110</b> can send device attributes to the device services <b>140</b>. In one example, the user device <b>110</b> can send the device attributes in response to a request from the device services <b>140</b>. Alternatively, the management application <b>120</b> can be configured to send the device attributes with the check-out request. In one example, the device attributes can include an OGID, a management application <b>120</b> version, a operating system version, and an enrollment mode. At stage <b>308</b>, the device services <b>140</b> can send the device attributes to the resource service <b>150</b>.</p><p id="p-0045" num="0042">At stage <b>310</b>, the resource service <b>150</b> can determine a device context of the user device <b>110</b> based on user and device attributes. In one example, this can include obtaining a user group hash associated with the user profile making the check-out request. For example, the database <b>170</b> can store a table that maps user profile IDs to group IDs of smart groups that the user is assigned to. In one example, the user profile IDs can map to a user group hash of the user profile. The resource service <b>150</b> can send a query with the user profile ID to the database <b>170</b> and the database <b>170</b> can respond with the corresponding group IDs. In one example, the database <b>170</b> can send the group IDs as a user group hash. Alternatively, the resource service <b>150</b> can hash the group IDs to create the user group hash. In an example, the combination of the device attributes and the user group hash can constitute or be part of the device context.</p><p id="p-0046" num="0043">At stage <b>312</b>, the resource service <b>150</b> can identify a resource context associated with the device context. For example, the resource service <b>150</b> can access a data table that matches a device context to a resource ID that corresponds to a particular resource context. The resource context can identify UEM resources assigned to user devices <b>110</b> checked out with a corresponding device context.</p><p id="p-0047" num="0044">At stage <b>314</b>, the resource service <b>150</b> can queue deployment of resources with the database <b>170</b>. The database <b>170</b> can include one or more databases and servers that host UEM resources. The resource service <b>150</b> can queue deployment of resources at their corresponding servers or databases.</p><p id="p-0048" num="0045">At stage <b>316</b>, the database <b>170</b> can send the resources to the user device <b>110</b>. For example, the database <b>170</b>, and any other servers or devices in the UEM system <b>130</b>, can download their respective resources to the user device <b>110</b>. The user device <b>110</b> can then install the resources. For example, the user device <b>110</b> can install a configuration profile to configure the user device <b>110</b> according to the check-out request. The user device <b>110</b> can also install and configure any applications received.</p><p id="p-0049" num="0046">In an example of the method described above, if the resource service <b>150</b> cannot identify a resource context at stage <b>312</b>, the resource service <b>150</b> can user an alternate method to identify resources. For example, the resource service <b>150</b> can query the UEM services of the resources to determine whether the user device <b>110</b> should receive the service's resource. Based on the responses, the resource service <b>150</b> can create a new resource context, such as by adding an entry in a data table that stores the resource context and device context data. The resource service <b>150</b> can then queue the resources to deploy to the user device <b>110</b>. When a future check-out request is received with the same device context, the resource service <b>150</b> can identify the needed resources using the resource context instead of querying the resource services.</p><p id="p-0050" num="0047"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an illustration of a second example method for distributing resources in the UEM system <b>130</b> that includes distributing third-party resources. At stage <b>402</b>, the user device <b>110</b> can send a check-out request to the device services <b>140</b>. For example, a user can log in to the user device <b>110</b> using profile credentials. In one example, logging in to the device can include logging in to the management application <b>120</b>. The credentials can include a username or ID and a password associated with the profile, as an example. At stage <b>404</b>, the device services <b>140</b> can authenticate the user device <b>110</b>.</p><p id="p-0051" num="0048">At stage <b>406</b>, the user device <b>110</b> can send device attributes to the device services <b>140</b>. In one example, the user device <b>110</b> can send the device attributes in response to a request from the device services <b>140</b>. Alternatively, the management application <b>120</b> can be configured to send the device attributes with the check-out request. In one example, the device attributes can include an OGID, a management application <b>120</b> version, an operating system version, and an enrollment mode. At stage <b>408</b>, the device services <b>140</b> can send the device attributes to the resource service <b>150</b>.</p><p id="p-0052" num="0049">At stage <b>410</b>, the resource service <b>150</b> can determine a device context of the user device <b>110</b>. In one example, this can include obtaining a user group hash associated with the user profile making the check-out request. For example, the database <b>170</b> can store a table that maps user profile IDs to group IDs of groups that the user is assigned to. The resource service <b>150</b> can send a query with the user profile ID to the database <b>170</b> and the database <b>170</b> can respond with the corresponding group IDs. In one example, the database <b>170</b> can send the group IDs as a user group hash. Alternatively, the resource service <b>150</b> can hash the group IDs to create the user group hash. In an example, the combination of the device attributes and the user group hash can constitute or be part of the device context.</p><p id="p-0053" num="0050">At stage <b>412</b>, the resource service <b>150</b> can identify a resource context associated with the device context. For example, the resource service <b>150</b> can access a data table that matches a device context to a resource ID that corresponds to a particular resource context. The resource context can identify UEM resources assigned to user devices <b>110</b> checked out with a corresponding device context.</p><p id="p-0054" num="0051">At stage <b>414</b>, the integration service <b>160</b> can queue deployment of internal resources with the database <b>170</b>. The database <b>170</b> can include one or more databases and servers that host internal UEM resources, such as internal applications, commands, and profiles. The resource service <b>150</b> can queue deployment of the internal resources at their corresponding servers or databases.</p><p id="p-0055" num="0052">At stage <b>416</b>, the database <b>170</b> can send the internal resources to the user device <b>110</b>. For example, the database <b>170</b>, and any other servers or devices in the UEM system <b>130</b>, can download their respective resources to the user device <b>110</b>. The user device <b>110</b> can then install the resources. For example, the user device <b>110</b> can install a configuration profile to configure the user device <b>110</b> according to the check-out request. The user device <b>110</b> can also install and configure any applications received.</p><p id="p-0056" num="0053">At stage <b>418</b>, the resource service <b>150</b> can send the resource context to the integration service <b>160</b>. The integration service can be responsible for handling any third-party applications or services associated with a device check-out. At stage <b>420</b>, the integration service <b>160</b> can sync application from the resource context with the application server <b>180</b>. For example, the application server <b>180</b> can be a third-party server, and the integration service <b>160</b> can send IDs of applications from the resource context and instructions to send download files of the application to the user device <b>110</b>.</p><p id="p-0057" num="0054">At stage <b>422</b>, the integration service <b>160</b> can send a list of applications to the external application server <b>180</b> that the user device <b>110</b> is authorized to download. The integration service <b>160</b> can do this if there are applications in the resource context that the user device <b>110</b> has access to based on the device context but does not need to be immediately downloaded to the user device <b>110</b>. If the user later requests such an application, the third-party application server <b>180</b> can then send the installation file. If the user device <b>110</b> requests an application that is not synced, then the request would be denied by the application server <b>180</b>.</p><p id="p-0058" num="0055">At stage <b>424</b>, the external application server <b>180</b> can send the synced applications to the user device <b>110</b>. For example, the application server <b>180</b> can send an installation file for any applications identified in the resource context. The user device <b>110</b> can then install the third-party applications.</p><p id="p-0059" num="0056">In an example of the method described above, if the resource service <b>150</b> cannot identify a resource context at stage <b>412</b>, the resource service <b>150</b> can user an alternate method to identify resources. For example, the resource service <b>150</b> can query the UEM services of the resources to determine whether the user device <b>110</b> should receive the service's resource. Based on the responses, the resource service <b>150</b> can create a new resource context, such as by adding an entry in a data table that stores the resource context and device context data. The resource service <b>150</b> can then queue the resources to deploy to the user device <b>110</b>. When a future check-out request is received with the same device context, the resource service <b>150</b> can identify the needed resources using the resource context instead of querying the resource services.</p><p id="p-0060" num="0057">Other examples of the disclosure will be apparent to those skilled in the art from consideration of the specification and practice of the examples disclosed herein. Though some of the described methods have been presented as a series of steps, it should be appreciated that one or more steps can occur simultaneously, in an overlapping fashion, or in a different order. The order of steps presented are only illustrative of the possibilities and those steps can be executed or performed in any suitable fashion. Moreover, the various features of the examples described here are not mutually exclusive. Rather any feature of any example described here can be incorporated into any other suitable example. It is intended that the specification and examples be considered as exemplary only, with a true scope and spirit of the disclosure being indicated by the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for distributing resources in a Unified Endpoint Management system, comprising:<claim-text>receiving, from a user device, a check-out request that includes an identifier (&#x201c;ID&#x201d;) corresponding to a user profile making the request;</claim-text><claim-text>receiving a set of attributes associated with the user device;</claim-text><claim-text>determining a hash of at least one group ID associated with the user profile;</claim-text><claim-text>determining, based on the set of attributes and the hash, a device context for the check-out request;</claim-text><claim-text>identifying a resource context associated with the device context, wherein the resource context identifies a set of resources assigned to user devices with the device context; and</claim-text><claim-text>providing the resources associated with the resource context to the user device.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the set of resources includes at least a configuration profile and an application.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the set of attributes includes at least an organization group ID associated with the user device, a version of a management application installed on the user device, and an enrollment mode.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the resources associated with the resource context include a third-party application, and providing the resources associated with the resource context includes sending instructions to a third-party server of the third-party application to download the third-party application to the user device.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, in an instance where a resource context associated with the device context cannot be identified, the stages further comprise:<claim-text>determining a new set of resources based on the device context;</claim-text><claim-text>creating a new resource context that identifies the new set of resources assigned to user devices with the device context; and</claim-text><claim-text>mapping the device context to the new resource context in a data table.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising providing the new set of resources to user devices that send a check-out request and have the same device context.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, based on the resource context, a third-party application that the user profile is authorized to install;</claim-text><claim-text>sending, to a server associated with the third-party application, instructions to allow the user device to download the third-party application.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A non-transitory, computer-readable medium containing instructions that, when executed by a hardware-based processor, performs stages for distributing resources in a Unified Endpoint Management system, the stages comprising:<claim-text>receiving, from a user device, a check-out request that includes an identifier (&#x201c;ID&#x201d;) corresponding to a user profile making the request;</claim-text><claim-text>receiving a set of attributes associated with the user device;</claim-text><claim-text>determining a hash of at least one group ID associated with the user profile;</claim-text><claim-text>determining, based on the set of attributes and the hash, a device context for the check-out request;</claim-text><claim-text>identifying a resource context associated with the device context, wherein the resource context identifies a set of resources assigned to user devices with the device context; and</claim-text><claim-text>providing the resources associated with the resource context to the user device.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the set of resources includes at least one of a configuration profile and an application.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the set of attributes includes at least an organization group ID associated with the user device, a version of a management application installed on the user device, and an enrollment mode.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the resources associated with the resource context include a third-party application, and providing the resources associated with the resource context includes sending instructions to a third-party server of the third-party application to download the third-party application to the user device.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein, in an instance where a resource context associated with the device context cannot be identified, the stages further comprise:<claim-text>determining a new set of resources based on the device context;</claim-text><claim-text>creating a new resource context that identifies the new set of resources assigned to the user devices with the device context; and</claim-text><claim-text>mapping the device context to the new resource context in a data table.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, the stages further comprising providing the new set of resources to user devices that send a check-out request and have the same device context.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, the stages further comprising:<claim-text>determining, based on the resource context, a third-party application that the user profile is authorized to install;</claim-text><claim-text>sending, to a server associated with the third-party application, instructions to allow the user device to download the third-party application.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A system for distributing resources in a Unified Endpoint Management system, comprising:<claim-text>a memory storage including a non-transitory, computer-readable medium comprising instructions; and</claim-text><claim-text>a computing device including a hardware-based processor that executes the instructions to carry out stages comprising:<claim-text>receiving, from a user device, a check-out request that includes an identifier (&#x201c;ID&#x201d;) corresponding to a user profile making the request;</claim-text><claim-text>receiving a set of attributes associated with the user device;</claim-text><claim-text>determining a hash of at least one group ID associated with the user profile;</claim-text><claim-text>determining, based on the set of attributes and the hash, a device context for the check-out request;</claim-text><claim-text>identifying a resource context associated with the device context, wherein the resource context identifies a set of resources assigned to user devices with the device context; and</claim-text><claim-text>providing the resources associated with the resource context to the user device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the set of resources includes at least a configuration profile and an application.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the set of attributes further at least an organization group ID associated with the user device, a version of a management application installed on the user device, and an enrollment mode.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the resources associated with the resource context include a third-party application, and providing the resources associated with the resource context includes sending instructions to a third-party server of the third-party application to download the third-party application to the user device.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, in an instance where a resource context associated with the device context cannot be identified, the stages further comprise:<claim-text>determining a new set of resources based on the device context;</claim-text><claim-text>creating a new resource context that identifies the new set of resources assigned to the user devices with the device context; and</claim-text><claim-text>mapping the device context to the new resource context in a data table.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the stages further comprising providing the new set of resources to user devices that send a check-out request and have the same device context.</claim-text></claim></claims></us-patent-application>