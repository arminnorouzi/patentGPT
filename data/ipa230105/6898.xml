<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006899A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006899</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17384458</doc-number><date>20210723</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>26</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>045</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e43">GENERATING NETWORK SYSTEM MAPS BASED ON NETWORK TRAFFIC</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217027</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>FORESCOUT TECHNOLOGIES, INC.</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Nechushtan</last-name><first-name>Oren</first-name><address><city>Ramat-Gan</city><country>IL</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Comay</last-name><first-name>Oded</first-name><address><city>Tel Aviv</city><country>IL</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems, methods, and related technologies for generating a network system map based on network traffic and possibly additional data are described. Network traffic may be received and parsed to obtain metadata associated with the network traffic. A network system may be identified based on the metadata. A network system map may be generated for the network system based on one or more of the metadata or the additional data.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="102.53mm" wi="158.75mm" file="US20230006899A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="239.69mm" wi="168.91mm" file="US20230006899A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="232.66mm" wi="172.89mm" orientation="landscape" file="US20230006899A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="181.78mm" wi="149.27mm" orientation="landscape" file="US20230006899A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="194.39mm" wi="174.67mm" orientation="landscape" file="US20230006899A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="232.58mm" wi="174.41mm" orientation="landscape" file="US20230006899A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="241.13mm" wi="128.95mm" file="US20230006899A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="207.18mm" wi="174.67mm" orientation="landscape" file="US20230006899A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="238.42mm" wi="158.75mm" file="US20230006899A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority to U.S. Provisional Patent Application No. 63/217,027, filed Jun. 30, 2021, which is incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Aspects and implementations of the present disclosure relate to network monitoring, and more specifically, generating network system maps based on network traffic.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">As technology advances, the number and variety of devices that are connected or coupled to communications networks are rapidly increasing. Each device may have its own respective vulnerabilities which may leave the network open to compromise or other risks. Preventing the spreading of an infection of a device or an attack through a network can be important for securing a communication network.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004">Aspects and implementations of the present disclosure will be understood more fully from the detailed description given below and from the accompanying drawings of various aspects and implementations of the disclosure, which, however, should not be taken to limit the disclosure to the specific aspects or implementations, but are for explanation and understanding only.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts an illustrative communication network in accordance with one implementation of the present disclosure.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an illustrative network topology in accordance with one implementation of the present disclosure.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating an example system mapping component, in accordance with one implementation of the present disclosure.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating example network system maps, in accordance with one implementation of the present disclosure.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example network system map, in accordance with one implementation of the present disclosure.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a flow diagram of aspects of process for generating network system maps, in accordance with one implementation of the present disclosure.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts illustrative components of a system for generating network system maps, in accordance with one implementation of the present disclosure.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating an example computer system, in accordance with one implementation of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0014" num="0013">Aspects and implementations of the present disclosure are directed to generating network system maps for network systems based on one or more of metadata and additional data. The systems and methods disclosed can be employed with respect to network security, among other fields. More particularly, it can be appreciated that devices with vulnerabilities are a significant and growing problem. At the same time, the proliferation of network-connected devices (e.g., internet of things (IoT) devices such as televisions, security cameras (IP cameras), wearable devices, medical devices, etc.) can make it difficult to effectively ensure that network security is maintained. Classification can be particularly important for securing a network because lack of knowledge about what a device is can prevent application of appropriate security measures. In addition, performing various actions, such a security actions, may also help maintain network security. Classifying devices and performing actions to maintain network security is often based on the network traffic (e.g., packets, messages, frames, etc.) transmitted by the devices. In addition, classifying network systems (e.g., a set of network devices that may perform or provide one or more network based functionalities) may also help maintain network security. Accordingly, described herein in various implementations are systems, methods, techniques, and related technologies, which allow for improved processing, which may include parsing, of network traffic and generating network system maps of different network systems.</p><p id="p-0015" num="0014">Accordingly, described herein in various implementations are systems, methods, techniques, and related technologies, which enable a system mapping component (e.g., a mapper, a system mapper, etc.) to parse network traffic and generate a network system map more quickly, efficiently, or a combination thereof. The system mapping component may parse the network traffic to obtain metadata of the network traffic. Based on the metadata, the system mapping component may identify one or more network systems and may generate one or more network system maps for the one or more network systems. Each network system map may indicate the devices that are part of the respective network system. Each network system map may also indicate how the different devices of the respective network system are coupled to each other. This may allow users to more easily or more quickly identify different network systems and the devices that are part of the network systems.</p><p id="p-0016" num="0015">The system mapping component may identify the network systems and generate the network system maps without initially performing deep packet inspection of the network traffic. For example, the system mapping component may identify the network systems and generate the network system maps based on headers (e.g., a portion of a packet or message that is before the payload of the message or packet) or footers (e.g., a portion of a packet or message that is after the payload of the message or packet) of the network traffic, or based on the protocol used by the network traffic. In another example, the system mapping component may identify the network systems and generate the network system maps without analyzing or processing the payloads of the network traffic. This allows the system mapping component to identify network systems and generate network system maps even when the payload of the network traffic is encrypted or otherwise unreadable.</p><p id="p-0017" num="0016">Previous identification or classification approaches have had several problems. Previous identification approaches would identify individual devices in a network. However, these previous identification approaches would not identify a network system that provides a network based functionality for users or other devices. In addition, the previous identification approaches would not identify which devices were part of a network system (e.g., the devices that operate together in the network system). This makes it more difficult for users to identify different network systems in their network and to identify which devices are part of which network system.</p><p id="p-0018" num="0017">In some embodiments, the system mapping component may allow network systems to be identified based on metadata associated with the network traffic. By not performing a deep packet inspection initially, the system mapping component may use fewer resources (e.g., computing resources, memory resources, etc.) of a network monitor entity. This may also reduce the cost of operation for the network monitor entity. For example, using less processing power may allow the network monitor entity to consume less power. The system mapping component may also be able to operate on other network monitor entities that have less processing capabilities.</p><p id="p-0019" num="0018">In one embodiment, the system mapping component may also be able identify network systems and generate network system maps more quickly. For example, rather than parsing the payloads in network traffic (which would take a longer amount of time), the system mapping component may focus on the metadata (e.g., that is obtained based on analyzing headers and footers of the network traffic, sizes of the network traffic, when network traffic was transmitted or received, etc.) which may allow the system mapping component to generate the network system maps more quickly, efficiently, etc.</p><p id="p-0020" num="0019">It can be appreciated that the described technologies are directed to and address specific technical challenges and longstanding deficiencies in multiple technical areas, including but not limited to network security, monitoring, and policy enforcement. It can be further appreciated that the described technologies provide specific, technical solutions to the referenced technical challenges and unmet needs in the referenced technical fields.</p><p id="p-0021" num="0020">Network segmentation can be used to enforce security policies on a network, for instance in large and medium organizations, by restricting portions or areas of a network which a device can access or communicate with. Segmentation or &#x201c;zoning&#x201d; can provide effective controls to limit movement across the network (e.g., by a hacker or malicious software). Enforcement points including firewalls, routers, switches, cloud infrastructure, other network devices, etc., may be used to enforce segmentation on a network (and different address subnets may be used for each segment). Enforcement points may enforce segmentation by filtering or dropping packets according to the network segmentation policies/rules. The viability of a network segmentation project depends on the quality of visibility the organization has into its devices and the amount of work or labor involved in configuring network devices.</p><p id="p-0022" num="0021">An entity or entities, as discussed herein, include devices (e.g., computer systems, for instance laptops, desktops, servers, mobile devices, IoT devices, OT devices, etc.), endpoints, virtual machines, services, serverless services (e.g., cloud based services), containers (e.g., user-space instances that work with an operating system featuring a kernel that allows the existence of multiple isolated user-space instances), cloud based storage, accounts, and users. Depending on the device, a device may have an IP address (e.g., a device) or may be without an IP address (e.g., a serverless service). Embodiments are able to dynamically (e.g., on the fly or responsive to changing conditions, for instance, a device being communicatively coupled to a network or in response to determination of characteristics of a device) control access of various entities or micro-segment various entities, as described herein.</p><p id="p-0023" num="0022">The enforcement points may be one or more network devices (e.g., firewalls, routers, switches, virtual switch, hypervisor, SDN controller, virtual firewall, etc.) that are able to enforce access or other rules, ACLs, or the like to control (e.g., allow or deny) communication and network traffic (e.g., including dropping packets) between the device and one or more other entities communicatively coupled to a network. Access rules may control whether a device can communicate with other entities in a variety of ways including, but not limited to, blocking communications (e.g., dropping packets sent to one or more particular entities), allowing communication between particular entities (e.g., a desktop and a printer), allowing communication on particular ports, etc. It is appreciated that an enforcement point may be any device that is capable of filtering, controlling, restricting, or the like communication or access on a network.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts an illustrative communication network <b>100</b>, in accordance with one implementation of the present disclosure. The communication network <b>100</b> includes a network monitor entity <b>102</b>, a network device <b>104</b>, an aggregation device <b>106</b>, a system <b>150</b>, devices <b>120</b> and <b>130</b>, and network coupled devices <b>122</b><i>a</i>-<i>b</i>. The devices <b>120</b> and <b>130</b> and network coupled devices <b>122</b><i>a</i>-<i>b </i>may be any of a variety of devices including, but not limited to, computing systems, laptops, smartphones, servers, Internet of Things (IoT) or smart devices, supervisory control and data acquisition (SCADA) devices, operational technology (OT) devices, campus devices, data center devices, edge devices, etc. It is noted that the devices of communication network <b>100</b> may communicate in a variety of ways including wired and wireless connections and may use one or more of a variety of protocols.</p><p id="p-0025" num="0024">Network device <b>104</b> may be one or more network devices configured to facilitate communication among aggregation device <b>106</b>, system <b>150</b>, network monitor entity <b>102</b>, devices <b>120</b> and <b>130</b>, and network coupled devices <b>122</b><i>a</i>-<i>b</i>. Network device <b>104</b> may be one or more network switches, access points, routers, firewalls, hubs, etc.</p><p id="p-0026" num="0025">Network monitor entity <b>102</b> may be operable for a variety of tasks including generating system maps for network systems in a network, as described herein. Network monitor entity <b>102</b> can generate these system maps based on metadata associated with or obtained from network traffic. In some embodiments, network monitor entity <b>102</b> can use local resources (e.g., processing, memory, data resources, or other resources), cloud resources, or a combination thereof for generating these network maps. In various embodiments, various libraries may be used to generate these system maps, as discussed in more detail below.</p><p id="p-0027" num="0026">Network monitor entity <b>102</b> may also use additional data or other types of data to update the system maps. For example, after an initial system map is generated based on the metadata, the network monitor entity <b>102</b> may update the initial system map based on user input, packet analysis (e.g., an analysis of the payload of the network traffic or packets), etc.</p><p id="p-0028" num="0027">Network monitor entity <b>102</b> can determine one or more enforcement points where the device is communicatively coupled to the network and thereby determine the one or more enforcement points closest to the device. For example, network monitor entity <b>102</b> may access information on a switch (e.g., a switch cache) to determine a port (e.g., physical port, wireless port, or virtual port) where a device with a particular IP address or MAC address or other identifier is communicatively coupled. Network monitor entity <b>102</b> may also access information from a wireless access point where the device is communicatively coupled. In some embodiments, network monitor entity <b>102</b> may poll information from a cloud service to determine where a device is communicatively coupled or connected to a network. In various embodiments, network monitor entity <b>102</b> access syslog or SNMP information from a device itself to determine where a device is communicatively coupled or connected to a network (e.g., without accessing information from a network device or enforcement point). Network monitor entity <b>102</b> supports applying access policies in situations where a device is communicatively coupled to a network with more than one connection (e.g., a wired connection and a wireless connection).</p><p id="p-0029" num="0028">Based on the enforcement point, network monitor entity <b>102</b> may determine the one or more access rules to be assigned to the one or more enforcement points based on an access policy. In some embodiments, based on information about the one or more enforcement points closest to the device, network monitor entity <b>102</b> translates the access policy into one or more commands that will be used to configure the access rules on the one or more enforcement points. The closest enforcement point to a device can be enforcement point where the device is communicatively coupled. The enforcement point may be network device or network infrastructure device closest in proximity (e.g., physical proximity) to the device. The enforcement point comprises the port where the device is communitive coupled to the network, and communication to and from the device is sent first through that port. In some embodiments, the port of the enforcement point is the last point of communication within network infrastructure before communication is sent to the device. In various embodiments, the closest enforcement point is where communication from the device is initially sent when communications are sent from the device (e.g., prior to communications with the network backbone or Internet backbone). For example, the closest enforcement to a device connected to a switch is the switch. As another example, the closest enforcement point to a device wirelessly communicatively coupled to a wireless access point is the wireless access point. In various embodiments, network monitor entity <b>102</b> may access the current configuration of the one or more enforcement points to determine the access rules (e.g., ACLs) that are to be applied to the one or more enforcement points, as described herein. In some embodiments, a device is communicatively coupled to a wireless controller via a wireless access point and the wireless controller or a switch is the closest enforcement point (e.g., based on the wireless controller or the switch being able to apply access rules, for instance ACLs, to communications of the device, for instance, in the case where the wireless access point is not able to or does not have the functionality to apply access rules). In various embodiments, a device is communicatively coupled to a layer <b>3</b> switch via a layer <b>2</b> switch and the layer <b>3</b> switch is the closest enforcement point (e.g., based on the layer <b>3</b> switch being able to apply access rules, for instance ACLs, to communications of the device, for instance, in the case where the layer <b>2</b> switch is not able to or does not have the functionality to apply access rules).</p><p id="p-0030" num="0029">Network monitor entity <b>102</b> may then apply or assign the access rules to the one or more enforcement points closest to the device. Network monitor entity <b>102</b> may communicate the access rules via application programming interfaces (APIs), command line interface (CLI) commands, Web interface, simple network management protocol (SNMP) interface, etc. In some embodiments, network monitor entity <b>102</b> may verify that the one or more enforcement points have been properly or correctly configured based on the access rules.</p><p id="p-0031" num="0030">Network monitor entity <b>102</b> may provide an interface (e.g., a graphical user interface (GUI)) for viewing, monitoring, and modifying classification or associated thresholds associated one or more models, as described herein. Network monitor entity <b>102</b> may further monitor network traffic over time to reclassify entities as new entities join the network, entities rejoin the network, and new models are made available.</p><p id="p-0032" num="0031">Network monitor entity <b>102</b> may further perform a variety of operations including identification, classification, and taking one or more remediation actions (e.g., changing network access of a device, changing the virtual local area network (VLAN), sending an email, sending a short message service (SMS) message, etc.).</p><p id="p-0033" num="0032">Network monitor entity <b>102</b> may also parse network traffic. For example, the network monitor entity <b>102</b> may parse (e.g., read, analyze, access, etc.) different protocol fields of the network traffic (e.g., packets, messages, frames, etc.). The network monitor entity <b>102</b> may provide the field values of the protocol fields (e.g., values of certain portions of network packets, messages, frames, etc.) to one or more different processing engines (e.g., rule engines, machine learning models, etc.) that may request the protocol fields, as discussed in more detail below. The network monitor entity <b>102</b> may include a parser and one or more processing engines, as described herein.</p><p id="p-0034" num="0033">An enforcement point may be a router, firewall, switch, hypervisor, software-defined networking (SDN) controller, virtual firewall, or other network device or infrastructure that may have an ACL like or rule like policy or functionality to apply based on the port where a device is communicatively coupled thereto. Enforcements points may also be a next generation firewall (NGFW) and cloud infrastructure. A NGFW can be updated with an ACL like policy regarding a device accessing the Internet. Cloud infrastructure (e.g., Amazon web services (AWS) security groups) can be updated to drop packets from the IP of the device that have a destination outside the cloud. Embodiments are operable to configure enforcement points at the edge of a network where a device is communicatively coupled thereto thereby controlling access of the device on a customized basis (e.g., customized or tailored for the device).</p><p id="p-0035" num="0034">In some embodiments, if the categorization or characteristics functionality is being updated (e.g., which could result in a change in one or more access rules that are assigned to an enforcement point closest a device and thus impact the enforcement of an access policy by the enforcement points), notifications may be sent (e.g., via email or other methods as described herein) or presented to a user (e.g., via a graphical user interface (GUI)) to indicate that the categorization or characteristics of one or more entities is changing and should be confirmed before one or more enforcement points are updated based on the changed categorization or characteristics. After conformation, the access rules may be changed.</p><p id="p-0036" num="0035">Network monitor entity <b>102</b> may be a computing system, network device (e.g., router, firewall, an access point), network access control (NAC) device, intrusion prevention system (IPS), intrusion detection system (IDS), deception device, cloud-based device, virtual machine based system, etc. Network monitor entity <b>102</b> may be communicatively coupled to the network device <b>104</b> in such a way as to receive network traffic flowing through the network device <b>104</b> (e.g., port mirroring, sniffing, acting as a proxy, passive monitoring, etc.). In some embodiments, network monitor entity <b>102</b> may include one or more of the aforementioned devices. In various embodiments, network monitor entity <b>102</b> may further support high availability and disaster recovery (e.g., via one or more redundant devices).</p><p id="p-0037" num="0036">In some embodiments, network monitor entity <b>102</b> may monitor a variety of protocols (e.g., Samba, hypertext transfer protocol (HTTP), secure shell (SSH), file transfer protocol (FTP), transfer control protocol/internet protocol (TCP/IP), user datagram protocol (UDP), Telnet, HTTP over secure sockets layer/transport layer security (SSL/TLS), server message block (SMB), point-to-point protocol (PPP), remote desktop protocol (RDP), windows management instrumentation (WMI), windows remote management (WinRM), etc.).</p><p id="p-0038" num="0037">The monitoring of entities by network monitor entity <b>102</b> may be based on a combination of one or more pieces of information including traffic analysis, information from external or remote systems (e.g., system <b>150</b>), communication (e.g., querying) with an aggregation device (e.g., aggregation device <b>106</b>), and querying the device itself (e.g., via an API, CLI, web interface, SNMP, etc.), which are described further herein. Network monitor entity <b>102</b> may be operable to use one or more APIs to communicate with aggregation device <b>106</b>, device <b>120</b>, device <b>130</b>, or system <b>150</b>. Network monitor entity <b>102</b> may monitor for or scan for entities that are communicatively coupled to a network via a NAT device (e.g., firewall, router, etc.) dynamically, periodically, or a combination thereof.</p><p id="p-0039" num="0038">Information from one or more external or third party systems (e.g., system <b>150</b>) may further be used for determining one or more tags or characteristics for a device. For example, a vulnerability assessment (VA) system may be queried to verify or check if a device is in compliance and provide that information to network monitor entity <b>102</b>. External or third party systems may also be used to perform a scan or a check on a device to determine a software version.</p><p id="p-0040" num="0039">Device <b>130</b> can include agent <b>140</b>. The agent <b>140</b> may be a hardware component, software component, or some combination thereof configured to gather information associated with device <b>130</b> and send that information to network monitor entity <b>102</b>. The information can include the operating system, version, patch level, firmware version, serial number, vendor (e.g., manufacturer), model, asset tag, software executing on a device (e.g., anti-virus software, malware detection software, office applications, web browser(s), communication applications, etc.), services that are active or configured on the device, ports that are open or that the device is configured to communicate with (e.g., associated with services running on the device), media access control (MAC) address, processor utilization, unique identifiers, computer name, account access activity, etc. The agent <b>140</b> may be configured to provide different levels and pieces of information based on device <b>130</b> and the information available to agent <b>140</b> from device <b>130</b>. Agent <b>140</b> may be able to store logs of information associated with device <b>130</b>. Network monitor entity <b>102</b> may utilize agent information from the agent <b>140</b>. While network monitor entity <b>102</b> may be able to receive information from agent <b>140</b>, installation or execution of agent <b>140</b> on many entities may not be possible, e.g., IoT or smart devices.</p><p id="p-0041" num="0040">System <b>150</b> may be one or more external, remote, or third party systems (e.g., separate) from network monitor entity <b>102</b> and may have information about devices <b>120</b> and <b>130</b> and network coupled devices <b>122</b><i>a</i>-<i>b</i>. System <b>150</b> may include a vulnerability assessment (VA) system, a threat detection (TD) system, endpoint management system, a mobile device management (MDM) system, a firewall (FW) system, a switch system, an access point system, etc. Network monitor entity <b>102</b> may be configured to communicate with system <b>150</b> to obtain information about devices <b>120</b> and <b>130</b> and network coupled devices <b>122</b><i>a</i>-<i>b </i>on a periodic basis, as described herein. For example, system <b>150</b> may be a vulnerability assessment system configured to determine if device <b>120</b> has a computer virus or other indicator of compromise (IOC).</p><p id="p-0042" num="0041">The vulnerability assessment (VA) system may be configured to identify, quantify, and prioritize (e.g., rank) the vulnerabilities of a device. The VA system may be able to catalog assets and capabilities or resources of a device, assign a quantifiable value (or at least rank order) and importance to the resources, and identify the vulnerabilities or potential threats of each resource. The VA system may provide the aforementioned information for use by network monitor entity <b>102</b>.</p><p id="p-0043" num="0042">The advanced threat detection (ATD) or threat detection (TD) system may be configured to examine communications that other security controls have allowed to pass. The ATD system may provide information about a device including, but not limited to, source reputation, executable analysis, and threat-level protocols analysis. The ATD system may thus report if a suspicious file has been downloaded to a device being monitored by network monitor entity <b>102</b>.</p><p id="p-0044" num="0043">Endpoint management systems can include anti-virus systems (e.g., servers, cloud based systems, etc.), next-generation antivirus (NGAV) systems, endpoint detection and response (EDR) software or systems (e.g., software that record endpoint-system-level behaviors and events), compliance monitoring software (e.g., checking frequently for compliance).</p><p id="p-0045" num="0044">The mobile device management (MDM) system may be configured for administration of mobile devices, e.g., smartphones, tablet computers, laptops, and desktop computers. The MDM system may provide information about mobile devices managed by MDM system including operating system, applications (e.g., running, present, or both), data, and configuration settings of the mobile devices and activity monitoring. The MDM system may be used get detailed mobile device information which can then be used for device monitoring (e.g., including device communications) by network monitor entity <b>102</b>.</p><p id="p-0046" num="0045">The firewall (FW) system may be configured to monitor and control incoming and outgoing network traffic (e.g., based on security rules). The FW system may provide information about a device being monitored including attempts to violate security rules (e.g., unpermitted account access across segments) and network traffic of the device being monitored.</p><p id="p-0047" num="0046">The switch or access point (AP) system may be any of a variety of network devices (e.g., network device <b>104</b> or aggregation device <b>106</b>) including a network switch or an access point, e.g., a wireless access point, or combination thereof that is configured to provide a device access to a network. For example, the switch or AP system may provide MAC address information, address resolution protocol (ARP) table information, device naming information, traffic data, etc., to network monitor entity <b>102</b> which may be used to monitor entities and control network access of one or more entities. The switch or AP system may have one or more interfaces for communicating with IoT or smart devices or other devices (e.g., ZigBee&#x2122;, Bluetooth&#x2122;, etc.), as described herein. The VA system, ATD system, and FW system may thus be accessed to get vulnerabilities, threats, and user information of a device being monitored in real-time which can then be used to determine a risk level of the device.</p><p id="p-0048" num="0047">Aggregation device <b>106</b> may be configured to communicate with network coupled devices <b>122</b><i>a</i>-<i>b </i>and provide network access to network coupled devices <b>122</b><i>a</i>-<i>b</i>. Aggregation device <b>106</b> may further be configured to provide information (e.g., operating system, device software information, device software versions, device names, application present, running, or both, vulnerabilities, patch level, etc.) to network monitor entity <b>102</b> about the network coupled devices <b>122</b><i>a</i>-<i>b</i>. Aggregation device <b>106</b> may be a wireless access point that is configured to communicate with a wide variety of devices through multiple technology standards or protocols including, but not limited to, Bluetooth, Wi-Fi&#x2122;, ZigBee&#x2122;, Radio-frequency identification (RFID), Light Fidelity (Li-Fi), Z-Wave, Thread, Long Term Evolution (LTE), WiFi&#x2122; HaLow, HomePlug, Multimedia over Coax Alliance (MoCA), and Ethernet. For example, aggregation device <b>106</b> may be coupled to the network device <b>104</b> via an Ethernet connection and coupled to network coupled devices <b>122</b><i>a</i>-<i>b </i>via a wireless connection. Aggregation device <b>106</b> may be configured to communicate with network coupled devices <b>122</b><i>a</i>-<i>b </i>using a standard protocol with proprietary extensions or modifications.</p><p id="p-0049" num="0048">Aggregation device <b>106</b> may further provide log information of activity and properties of network coupled devices <b>122</b><i>a</i>-<i>b </i>to network monitor entity <b>102</b>. It is appreciated that log information may be particularly reliable for stable network environments (e.g., where the types of devices on the network do not change often). The log information may include information of updates of software of network coupled devices <b>122</b><i>a</i>-<i>b. </i></p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an illustrative network topology in accordance with one implementation of the present disclosure. <figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an example network <b>200</b> with multiple enforcement points (e.g., firewall <b>206</b> and switch <b>210</b>) and a network monitor entity <b>280</b> (e.g., an example/implementation of network monitor entity <b>102</b>) which can perform or determine one or more classifications, as described herein, associated with the various entities communicatively coupled in example network <b>200</b>. Network monitor entity <b>280</b> may further identify network systems and devices that are part of network system, and may further generate network system maps for the network system, as described herein.</p><p id="p-0051" num="0050">Classification system <b>262</b> may be a cloud classification system operable to perform classification of a device. In some embodiments, classification system <b>262</b> may be part of a larger system operable to perform a variety of functions, e.g., part of a cloud based network monitor device/entity, security device, etc. Classification system <b>262</b> may further be operable to train one or more models for classifying devices or entities. Example components are shown of network monitor entity <b>280</b> and classification system <b>262</b> and other components may be present or included.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows example devices <b>220</b>-<b>222</b> (e.g., devices <b>106</b>, <b>122</b><i>a</i>-<i>b</i>, <b>120</b>, and <b>130</b>, other physical or virtual devices, other entities, etc.) and it is appreciated that more or fewer network devices or other entities may be used in place of the devices of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Example devices <b>220</b>-<b>222</b> may be any of a variety of devices or entities (e.g., smart devices, multimedia devices, networking devices, accessories, mobile devices, IoT devices, retail devices, healthcare devices, etc.), as described herein. Enforcement points including firewall <b>206</b> and switch <b>210</b> may be any device (e.g., network device <b>104</b>, cloud infrastructure, etc.) that is operable to allow traffic to pass, drop packets, restrict traffic, etc. Network monitor entity <b>280</b> may be any of a variety of network devices or entities, e.g., router, firewall, an access point, network access control (NAC) device, intrusion prevention system (IPS), intrusion detection system (IDS), deception device, cloud-based device or device, virtual machine based system, etc. Network monitor entity <b>280</b> may be substantially similar to network monitor entity <b>102</b>. Embodiments support IPv4, IPv6, and other addressing schemes. In some embodiments, network monitor entity <b>280</b> may be communicatively coupled with firewall <b>206</b> and switch <b>210</b> through additional individual connections (e.g., to receive or monitor network traffic through firewall <b>206</b> and switch <b>210</b>).</p><p id="p-0053" num="0052">Switch <b>210</b> communicatively couples the various devices of network <b>200</b> including firewall <b>206</b>, network monitor entity <b>280</b>, and devices <b>220</b>-<b>222</b>. Firewall <b>206</b> may perform network address translation (NAT). Firewall <b>206</b> communicatively couples network <b>200</b> to Internet <b>255</b> and firewall <b>206</b> may restrict or allow access to Internet <b>255</b> based on particular rules or ACLs configured on firewall <b>206</b>. Firewall <b>206</b> and switch <b>210</b> are enforcement points, as described herein.</p><p id="p-0054" num="0053">Network monitor entity <b>280</b> can access network traffic from network <b>200</b> (e.g., via port mirroring or SPAN ports of firewall <b>206</b> and switch <b>210</b> or other methods). Network monitor entity <b>280</b> can perform passive scanning of network traffic by observing and accessing portions of packets from the network traffic of network <b>200</b>. Network monitor entity <b>280</b> may perform an active scan of a device of network <b>200</b> by sending one or more requests to the device of network <b>200</b>. The information from passive and active scans of entities of network <b>200</b> can be used to determine one or more properties associated with the entities of network <b>200</b>. The network monitor entity <b>280</b> (e.g., the system mapping component <b>290</b>) may obtain metadata associated with network traffic that is received, detected, etc., during the passive or active scans. The network monitor entity <b>280</b> may generate network system maps (e.g., initial network system maps of network systems) based on the metadata.</p><p id="p-0055" num="0054">Network monitor entity <b>280</b> includes local classification engine <b>240</b> which may perform classification of the entities of network <b>200</b> including firewall <b>206</b>, switch <b>210</b>, and devices <b>220</b>-<b>222</b>.</p><p id="p-0056" num="0055">Local classification engine <b>240</b> can send data (e.g., property values) about entities of network <b>200</b>, as determined by local classification engine <b>240</b>, to classification system <b>262</b>. Local classification engine <b>240</b> may encode and encrypt the data prior to sending the data to classification system <b>262</b>. In some embodiments, local classification engine <b>240</b> checks the confidence of each classification and communicates with classification system <b>262</b> data to perform a classification, system mapping, or combination thereof. Local classification engine <b>240</b> may receive a classification from classification system <b>262</b> which network monitor entity <b>280</b> can use to perform various security related or other measures. In some embodiments, classification, system mapping, or a combination thereof, of a device may be performed in part by local network monitor entity <b>280</b> (e.g., local classification engine <b>240</b>) and in part by classification system <b>262</b>.</p><p id="p-0057" num="0056">The network monitor entity <b>280</b> also includes a system mapping component <b>290</b>. The system mapping component <b>290</b> may parse (e.g., analyze, read, decode, decipher, process, etc.) network traffic such as messages, packets, frames, etc. For example, the system mapping component <b>290</b> may read values (e.g., field values) of certain portions in network traffic. The network traffic may be transmitted by devices <b>220</b> and <b>222</b>. The system mapping component <b>290</b> may parse the network traffic to obtain metadata associated with the network traffic. The system mapping component <b>290</b> may identify a network system based on the metadata. The network system may a collection, group, set, etc., of devices or entities that provides one or more network based services, functionalities, operations, etc., for other devices or users of the network <b>200</b>. The system mapping component <b>290</b> may also generate a network system map for the network system. The network system map may identify the different devices that are part of the network system and may also indicate how the different devices or entities are connected or coupled (e.g., communicatively) to each other.</p><p id="p-0058" num="0057">Classification system <b>262</b> can perform a cloud based classification, as described herein. In some embodiments, classification system <b>262</b> includes cloud classification engine <b>264</b>, cloud model data store <b>266</b>, cloud entity data store <b>268</b>, and model training component <b>270</b>.</p><p id="p-0059" num="0058">Cloud classification engine <b>264</b> may perform classification based on data received from network monitor entity <b>280</b> (e.g., based on features determined using properties of a device), as described herein. Cloud classification engine <b>264</b> may unencrypt and decode the information received prior to performing a classification. Cloud classification engine <b>264</b> may use cloud model data store <b>266</b> in determining a classification based on one or more models. A classification determined by cloud classification engine <b>264</b> can be sent back to network monitor entity <b>280</b>. Cloud classification engine <b>264</b> may be an example of a processing engine that is not located on the network monitor entity <b>280</b> (e.g., that is separate from the network monitor entity <b>280</b>).</p><p id="p-0060" num="0059">Cloud model data store <b>266</b> is model data store (e.g., a cloud model database) that may store different models used to classify different devices. Cloud profile data store <b>266</b> is not subject to the resource conditions or limitations (e.g., processing power, storage, etc.) that may impact network monitor entity <b>280</b> (e.g., and local classification engine <b>240</b>). Cloud entity data store <b>268</b> is a data store (e.g., a cloud entity database) of device information that has been uploaded to classification system <b>262</b>. For example, the data in cloud entity data store <b>268</b> may include entity or device name, operating system, function, vendor/model, and host information from a variety of networks (e.g., that have network monitor entities configured to upload device information).</p><p id="p-0061" num="0060">In one embodiment, the classification system <b>262</b> may include system mapping component <b>269</b>. The system mapping component <b>269</b> may be similar or identical to the system mapping component <b>290</b> (of the network monitor entity <b>280</b>). The system mapping component <b>269</b> may perform similar or identical function, actions, operations, etc., as the system mapping component <b>290</b>. For example, the system mapping component <b>269</b> may also obtain metadata from network traffic or generate network system maps based on the metadata.</p><p id="p-0062" num="0061">Both local classification engine <b>240</b> and cloud classification engine <b>264</b> may use profile based classification along with other classification methods in conjunction with classifications based on various models.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating an example system mapping component <b>290</b>, in accordance with one implementation of the present disclosure. In one embodiment, the system mapping component may be located on or may be part of a network monitor entity <b>280</b>, also as illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The network monitor entity <b>280</b> may monitor a variety of protocols and entities or devices. Network monitor entity <b>280</b> may be operable for a variety of tasks including parsing network traffic, determining one or more properties, determining one or more classifications, etc., as described herein. Network monitor entity <b>280</b> can determine one or more enforcement points where a device is communicatively coupled to the network and thereby determine the one or more enforcement points closest to the device. In various embodiments, network monitor entity <b>280</b> may access the current configuration of the one or more enforcement points to determine the access rules (e.g., ACLs) that are to be applied to the one or more enforcement points, as described herein. Network monitor entity <b>280</b> may then apply or assign the access rules to the one or more enforcement points closest to the device. In another embodiment, the system mapping component may be located on or may be part of a classification system <b>262</b> (e.g., part of a cloud based system, remote system, etc.), as illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Although the system mapping component <b>290</b> is illustrated as part of the network monitor entity <b>280</b>, the system mapping component <b>290</b> may be located on another device in other embodiments. For example, the system mapping component <b>290</b> may be part of the classification system <b>262</b>.</p><p id="p-0064" num="0063">The system mapping component <b>290</b> includes a parsing engine <b>310</b>, a mapping engine <b>320</b>, library engine <b>340</b>, device libraries <b>351</b>, and system libraries <b>352</b>.</p><p id="p-0065" num="0064">In one embodiment, the system mapping component <b>290</b> may obtain or access network traffic transmitted by one or more devices that are communicatively coupled to a network (e.g., transmitted by devices <b>220</b> and <b>222</b> in the network <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). For example, the system mapping component <b>290</b> may access network traffic from the network. The system mapping component <b>290</b> can perform passive scanning of network traffic by observing and accessing portions of packets from the network traffic of network (e.g., packets transmitted or received by devices on the network).</p><p id="p-0066" num="0065">In one embodiment, the parsing engine <b>310</b> may parse (e.g., analyze, read, decode, decipher, process, etc.) network traffic such as messages, packets, frames, portions thereof, etc. For example, the parsing engine <b>310</b> may analyze or parse headers (e.g., a header of a message, packet, etc.), footers (e.g., a footer of a message, packet, etc.), protocols used by network traffic, etc.</p><p id="p-0067" num="0066">In one embodiment, the parsing engine <b>310</b> may obtain metadata of the network traffic. The metadata may be used by the mapping engine <b>320</b> to classify or identify devices or entities, and to classify or identify network systems, as discussed in more detail below. In one embodiment, the metadata may include data in one or more of headers (e.g., fields in packet header) and footers (e.g., fields in a packet footer) of the network traffic. For example, the metadata may include a source address (e.g., a source IP address of a packet or message), a source port (e.g., a port number), a destination address (e.g., a destination IP of a packet or message), a destination port, a protocol used by the network traffic (e.g., real time streaming protocol (RTSP), H.264, etc.). In another example, the metadata may include the size of the messages or frames in the network traffic (e.g., the packet or frame size). In a further example, the metadata may include scheduling information or statistics about the network data. For example, the metadata may include the average size of the packets, the number of packets that are or were transmitted or received, the frequency at which packets are or were transmitted or received, when packets are or were transmitted or received, etc.</p><p id="p-0068" num="0067">In one embodiment, the parsing engine <b>310</b> may obtain the metadata without initially performing a deep packet inspection (DPI) of the network traffic or without analyzing the payloads in the network traffic. For example, the parsing engine <b>310</b> may obtain, collect, determine, etc., metadata without processing or analyzing the payload of a message or packet. This may allow the mapping engine <b>320</b> to generate a network system map without performing DPI or without analyzing payloads in the network traffic.</p><p id="p-0069" num="0068">In some embodiments, the parsing engine <b>310</b> may initially generate the network system map without performing DPI or without analyzing payloads in the network traffic. After generating the network system map (e.g., an initial system map), the parsing engine <b>310</b> may perform DPI (or analyze payloads) or may user other modules, system, components, etc., to perform the DPI. The parsing engine <b>310</b> may update the system map based on the DPI (or payload analysis) that was performed (after the initial system map was generated). This may allow the parsing engine <b>310</b> to update the system map (e.g., to update network system roles, network system types, network system name, etc., of devices in the network system map).</p><p id="p-0070" num="0069">As discussed above, a network system may be a group of devices or entities of the network. For example, a network system may include a subset of a plurality of devices that are on a network. The network system may provide one or more network based services, functionalities, operations, etc., for other devices or users of the network. For example, the network system may be a voice- over-IP (VOIP) system that allows devices (e.g., client devices such as IP phones, applications, etc.) to make audio or phone calls via the network. In another example, the network system may be a security or surveillance system that allows a user to monitor different video feeds (e.g., streaming video) from different cameras (e.g., security cameras). In a further example, the network system may be an application or web system that allows users to access services that are hosted by an application or web server. The network systems described herein are merely examples and other types of network systems may be used in other embodiments.</p><p id="p-0071" num="0070">In one embodiment, the mapping engine <b>320</b> may identify, determine, etc., a network system, based on one or more of the metadata, device libraries <b>351</b>, and system libraries <b>352</b>. For example, based on the protocols used by network traffic (e.g., based on the RTSP used in the network packets or messages), the mapping engine <b>320</b> may determine that the network traffic is for a security system (e.g., a video surveillance system). The mapping engine <b>320</b> may also identify the different entities (e.g., other devices of the network) that may be part of the security system. For example, the mapping engine <b>320</b> may identify a storage device or system that stores the video, may identify one or more cameras, etc., as part of the security system. The mapping engine <b>320</b> may use the device libraries <b>351</b> to identify or classify the different devices of the network. The mapping engine <b>320</b> may also use the system libraries <b>352</b> to identify or classify a network system (e.g., to determine the network system type of the network system).</p><p id="p-0072" num="0071">In one embodiment, the device libraries <b>351</b> and the system libraries <b>352</b> may include data or information that may be used to classify, identify, etc., devices and network systems. In one embodiment, the device libraries <b>351</b> may include conditions, criteria, parameters, etc., that may be used to match against the metadata to identify different types of devices. For example, the device libraries <b>351</b> may indicate fields and values of fields that may or should be detected in the network traffic for a specific type of device. In one embodiment, the system libraries <b>352</b> may include conditions, criteria, parameters, etc., that may be used to match against the metadata to identify different types of network systems. For example, the system libraries <b>352</b> may indicate traffic patterns (e.g., when different messages are transmitted between different devices, how much traffic is transmitted between different pairs or groups of devices, etc.) that may be used to identify a network system. The device libraries <b>351</b> may also be referred to as templates, device templates, profiles, or device profiles. The system libraries <b>352</b> may also be referred to as templates, system templates, profiles, or system profiles.</p><p id="p-0073" num="0072">In one embodiment, the mapping engine <b>320</b> may identify the network system by first identifying a device of the network system. For example, a network system may be a VOIP system. The mapping engine <b>320</b> may analyze the metadata of the network traffic obtained by the parsing engine <b>310</b>. The metadata (e.g., source and destination address) may indicate that multiple devices (e.g., VOIP telephones) communicate with the same device (e.g., a VOIP server, which may be referred to as a private branch exchange (PBX)). Based on the amount of messages or packets that are addressed to the device, the mapping engine <b>320</b> may determine that the device or entity is part of a network system.</p><p id="p-0074" num="0073">In some embodiments, the mapping engine <b>320</b> may perform analysis of the flow of the network traffic (e.g., may perform network flow analysis). For example, the mapping engine <b>320</b> may monitor how different packets flow between different devices (e.g., how a packet is forwarded from one device to another, how a device responds to a packet that is received, etc.). This may allow the mapping engine <b>320</b> to identify devices that may be part of a network system. For example, if a packet from a first device is forwarded through two other devices before reaching a destination device, the mapping engine <b>320</b> may be able to analyze this flow of packets to identify the first device, the destination device, and the two other devices as being part of the network system. Various existing flow analysis modules, components, systems, etc., may be used by the mapping engine <b>320</b>. For example, the mapping engine <b>320</b> may include these flow analysis modules or the mapping engine <b>320</b> may communicate with separate flow analysis modules.</p><p id="p-0075" num="0074">In one embodiment, the mapping engine <b>320</b> may also determine a network system type for the network system. For example, the mapping engine <b>320</b> may also determine that a device is a VOIP server based on the protocol of the messages communicated to and from the device (e.g., session initiation protocol (SIP) messages). The mapping engine <b>320</b> may use one or more of the system libraries <b>352</b> and the metadata to determine that the network system is a VOIP system (e.g., a network system that provides users or client devices with telephony services). For example, the system library <b>352</b> may indicate that because other devices communicate with the VOIP server and use a particular protocol, the network system is a VOIP system.</p><p id="p-0076" num="0075">In one embodiment, the mapping engine <b>320</b> may generate a tuple for each device that is identified or classified by the mapping engine <b>320</b>. The tuple may include a first portion that may indicate a type of the network system (e.g., a network system type) that the device belongs to. For example, the first portion of the tuple may be a string, alphanumeric text, or other data identifying a network system as a VOIP system, a security system, etc. The tuple may also include a second portion that may indicate a name or identifier for the network system (e.g., a network system name). For example, the second portion of the tuple may be an alphanumeric identifier for the network system. The network system name may allow for two network systems of the same network system type to be distinguished from each other (e.g., distinguishing between a production system and a test system, distinguishing between a first network system for a first corporate site and a second network system for a second corporate site, etc.). The tuple may also include a third portion that may indicate a role that the device or entity may have in the network system. The role for a device or entity may indicate or be related to one or more functions, operations, actions, services, etc., that the device may perform within the network system. For example, the third portion of the tuple may be a string indicating that a device or entity is a &#x201c;VOIP Server&#x201d; or a &#x201c;VOIP Phone.&#x201d;</p><p id="p-0077" num="0076">In one embodiment, the mapping engine <b>320</b> may generate a network system map for a network system. The network system map may identify the devices (e.g., entities) that are part of the network system. For example, the system map may identify servers, databases or data storage devices, client devices, etc., that are part of the network system. The network system map may also indicate interconnections or communicative couplings between different devices (e.g., how different devices are coupled to each other). For example, for each device, the network system map may indicate, illustrate, etc., all of the devices that the respective device is coupled to.</p><p id="p-0078" num="0077">In one embodiment, the network system map for a network system (e.g., a VOIP system, a security or security system, etc.), may be generated based on one or more network system types, one or more network system names, and one or more network system roles for the devices or entities. For example, each device in the network system map may be associated with a respective network system type, a respective network system name, and a respective network system role. As discussed above, the network system type, the network system name, and the network system role for a device or entity may be referred to as a tuple.</p><p id="p-0079" num="0078">In one embodiment, the mapping engine <b>320</b> may identify the network system and generate the system map based on other devices that are at different coupling levels to a first device or a starting device. For example, the mapping engine <b>320</b> may initially identify a first device of the network system. The mapping engine <b>320</b> may then identify a first set of devices that are coupled (e.g., communicatively coupled) to the first device. The first set of devices that are coupled to the first device may be devices that are at a first connection (or communicative coupling) level to the first device. The mapping engine may then identify a second set of devices that are coupled to the first set of devices. The second set of devices may be coupled to the first device at a second coupling level to the first device. The mapping engine may continue to identify devices at additional coupling levels until all devices that are coupled to each other within the network system are identified.</p><p id="p-0080" num="0079">In one embodiment, the mapping engine <b>320</b> may update a network system map (for a network system). For example, the mapping engine <b>320</b> may analyze metadata of network traffic and may generate an initial network system map, as discussed above. As additional network traffic is received (from the devices or entities in the network), the mapping engine <b>320</b> may analyze additional metadata of the additional network traffic. For example, the parsing engine <b>310</b> may analyze or parse the additional network traffic to obtain the additional metadata and the mapping engine <b>320</b> may analyze or process the additional metadata based on the device libraries <b>351</b> and the system libraries <b>352</b>. The additional metadata may provide new or additional information about the network system and the devices in the network system. For example, the additional metadata may include additional fields (e.g., fields in packet headers of footers), may include additional protocols, changes in the size of the network traffic, etc. The mapping engine <b>320</b> may update the network system map based on the additional metadata. For example, the mapping engine <b>320</b> may update the network system type associated with one or more devices in the network system map. In another example, the mapping engine <b>320</b> may update the network system role associated with one or more devices in the network system map.</p><p id="p-0081" num="0080">In one embodiment, the mapping engine <b>320</b> may receive input (e.g., user input) and may generate or update a network system map based on the input. For example, a user may provide user input (to the mapping engine <b>320</b>) indicating that a device should be added to the network system map for a network system. In another example, a user may provide user input updating a network system role for a device in a network system map.</p><p id="p-0082" num="0081">In another embodiment, the mapping engine <b>320</b> may use other inputs and/or data to generate a network system map. For example, the mapping engine <b>320</b> may use classifications provided by other modules, systems, components, etc., to identify devices, network system roles, etc. In another example, the mapping engine <b>320</b> may use domain name service (DNS) names to identify devices or network systems. For example, the DNS of a device may be used to identify a network system role. In a further example, the vendor or manufacturer of a device may be used to identify a network device or a network system. For example, a vendor or model number of a device may be used to determine a network system role for a device.</p><p id="p-0083" num="0082">In one embodiment, the system mapping component <b>290</b> may generate, create, etc., one or more of a device library <b>351</b> and a system library <b>352</b>, based on the network traffic that is obtained or received. For example, the library engine <b>340</b> may analyze the network traffic and/or the metadata associated with the network traffic to automatically generate (e.g., create) a new device library <b>351</b> or a new system library <b>352</b>. The library engine <b>340</b> may include a module or component that allows new libraries to be created. For example, the library engine <b>340</b> may include a machine learning model, rule-based engine or system, etc. The new device library <b>351</b> may allow the system mapping component <b>290</b> to identify, classify, etc., additional or new types of devices. The new system library <b>352</b> may allow the system mapping component <b>290</b> to identify, classify, etc., additional or new types of network systems. The library engine <b>340</b> may also allow new device libraries <b>351</b> and new system libraries <b>352</b> to be added to the system mapping component <b>290</b>. For example, the library engine <b>340</b> may allow a user to transmit or upload new device libraries <b>351</b> and new system libraries <b>352</b> to the system mapping component <b>290</b>.</p><p id="p-0084" num="0083">In one embodiment, the system mapping component <b>290</b> may update one or more device libraries <b>351</b> and system libraries <b>352</b>. For example, a user may modify a device library <b>351</b> to add additional parameters, criteria, etc., for classifying a type of device. The system mapping component <b>290</b> may allow the user to update the device library <b>351</b> (e.g., via a user interface, such as a graphical user interface (GUI), a command line interface (CLI), etc.). The updates to the device libraries <b>351</b> and system libraries <b>352</b> may be obtained from a network location (e.g., a network storage system, a cloud computing or storage platform, etc.) or may be provided to the network monitor entity <b>280</b> via a local interface (e.g., a local port or connection, such as a universal serial bus (USB) port). The updates to the device libraries <b>351</b> and system libraries <b>352</b> may also be provided by a vendor or manufacturer of the network monitor entity <b>280</b>.</p><p id="p-0085" num="0084">As discussed above, previous identification or classification approaches would identify individual devices in a network, but would not identify a network system and would not identify which devices were part of a network system (e.g., the devices that operate together in the network system). The system mapping component <b>290</b> may allow network systems to be identified based on metadata associated with the network traffic.</p><p id="p-0086" num="0085">In addition, by not initially performing deep packet inspection, the system mapping component <b>290</b> may use fewer resources (e.g., computing resources, memory resources, etc.) of the network monitor entity <b>280</b>. This may also reduce the cost of operation for the network monitor entity and may allow the network monitor entity <b>280</b> to operate more efficiently. The system mapping component <b>290</b> may also be able identify network systems and generate network system maps more quickly by using the metadata associated with the network traffic rather than performing deep packet inspection on the network traffic.</p><p id="p-0087" num="0086">In some embodiments, the network maps may allow a user to more easily visualize or catalog the different network systems that operate within a network. The networks maps also allow a user to more easily visualize or catalog the different devices that are part of the different network systems.</p><p id="p-0088" num="0087">In one embodiment, the network maps may allow a network to be more secure or protected. For example, by identifying the different devices that are part of the different network systems, a user can more easily isolate the devices of the different network systems from each other. This allows the user to secure the different network systems from malicious users which may attempt to comprise a device in a first network system by routing data from another device in a second network system.</p><p id="p-0089" num="0088">In another embodiment, the network maps may allow a user to provide role based access control for different devices. For example, based on the network system type or network system role of a device, certain access or permissions may be automatically granted (or not granted) to a device. This allows the user to more easily control the access or permissions that are granted to a device.</p><p id="p-0090" num="0089">In a further embodiment, the network maps may also allow a user to more easily assess vulnerable portions of a network system. For example, a network map may identify a main controller or server for a network system. If multiple client devices communicate with the main server, the security of the main server should be prioritized to prevent the main server from being compromised.</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating example network system maps <b>400</b> and <b>405</b>, in accordance with one implementation of the present disclosure. As discussed above a network system map may identify the devices (e.g., entities) that are part of the network system. A network system map may also indicate interconnections or couplings between different devices. Network system map <b>400</b> is for a first network system and network system map <b>405</b> is for a second network system. The first and second network systems (represented by network system maps <b>400</b> and <b>405</b> respectively) may be surveillance systems (e.g., a security system, a surveillance camera system, etc.). In one embodiment, the network system maps <b>400</b> and <b>405</b> may be presented to the user via a user interface to allow a user to view the devices that are part of the network system maps <b>400</b> and <b>405</b> and how they are interconnected or communicatively coupled.</p><p id="p-0092" num="0091">Network system map <b>400</b> includes storage system <b>430</b>, camera controller <b>421</b>, and cameras <b>411</b>. The network system map <b>400</b> includes lines and arrows that indicate how the storage system <b>430</b>, camera controller <b>421</b>, and cameras <b>411</b> are interconnected (e.g., cameras <b>411</b> are communicatively coupled to the camera controller <b>421</b>). The cameras <b>411</b> may be video cameras, digital cameras, etc., for a first network system (e.g., a first surveillance system). The camera controller <b>421</b> may be a computing device, server, etc., that may be used to manage or view the streaming video from the cameras <b>411</b>. The storage system <b>430</b> may be one or more storage devices or systems that may store the streaming videos. Each device in the network system map <b>400</b> may be associated with or may include a tuple. As discussed above, a tuple may include a network system type, a network system name, and a network system identifier. For example, each camera <b>411</b> is associated with the tuple &#x201c;(Surveillance System; Building A; Camera),&#x201d; where &#x201c;Surveillance System&#x201d; indicates the network system type, &#x201c;Building A&#x201d; indicates the network system name, and &#x201c;Camera&#x201d; indicates the network system role. The camera controller <b>421</b> is associated with the tuple &#x201c;(Surveillance System; Building A; Camera Controller),&#x201d; where &#x201c;Surveillance System&#x201d; indicates the network system type, &#x201c;Building A&#x201d; indicates the network system name, and &#x201c;Camera Controller&#x201d; indicates the network system role. The storage system <b>430</b> is associated with the tuple &#x201c;(Surveillance System; Building A; Camera Controller),&#x201d; where &#x201c;Surveillance System&#x201d; indicates the network system type, &#x201c;Building A&#x201d; indicates the network system name, and &#x201c;storage&#x201d; indicates the network system role.</p><p id="p-0093" num="0092">Network system map <b>405</b> includes storage system <b>430</b>, camera controller <b>422</b>, and cameras <b>412</b>. The network system map <b>405</b> includes lines and arrows that indicate how the storage system <b>430</b>, camera controller <b>422</b>, and cameras <b>412</b> are interconnected (e.g., cameras <b>412</b> are communicatively coupled to the camera controller <b>422</b>). The cameras <b>412</b> may be similar to cameras <b>411</b> and the camera controller <b>422</b> may be similar to camera controller <b>421</b>. Each device in the network system map <b>405</b> may be associated with or may include a tuple. For example, each camera <b>412</b> is associated with the tuple &#x201c;(Surveillance System; Building B; Camera),&#x201d; where &#x201c;Surveillance System&#x201d; indicates the network system type, &#x201c;Building B&#x201d; indicates the network system name, and &#x201c;Camera&#x201d; indicates the network system role. The camera controller <b>422</b> is associated with the tuple &#x201c;(Surveillance System; Building B; Camera Controller),&#x201d; where &#x201c;Surveillance System&#x201d; indicates the network system type, &#x201c;Building B&#x201d; indicates the network system name, and &#x201c;Camera Controller&#x201d; indicates the network system role. The storage system <b>430</b> is associated with the tuple &#x201c;(Surveillance System; Building B; Camera Controller),&#x201d; where &#x201c;Surveillance System&#x201d; indicates the network system type, &#x201c;Building B&#x201d; indicates the network system name, and &#x201c;storage&#x201d; indicates the network system role.</p><p id="p-0094" num="0093">As illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a device may be included in multiple network system maps. For example, storage system <b>430</b> is included in both network system map <b>400</b> and network system map <b>405</b>. A device or entity may be included in multiple network system maps if multiple network systems include or share the device. For example, the storage system <b>430</b> may be used to store video streams (e.g., video data) for the first and second network systems. Thus, the storage system <b>430</b> may be associate with multiple tuples (e.g., (Surveillance System; Building B; Camera Controller) and (Surveillance System; Building B; Camera Controller)).</p><p id="p-0095" num="0094">As discussed above, a system mapping component (e.g., system mapping component <b>290</b> illustrated in <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>) may identify a first device in a network system and then identify other devices that are connected or coupled to the first device at different connection or coupling levels (e.g., coupled to the first device via one or more other devices in series). For example, the system mapping component may identify or classify the camera controllers <b>421</b> and <b>422</b> first. The system mapping component may then identify or classify the other devices at the next coupling level (e.g., a first coupling level which includes devices that are communicatively coupled to the camera controllers <b>421</b> and <b>422</b>, such as cameras <b>411</b> and <b>412</b>).</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example system map <b>500</b>, in accordance with one implementation of the present disclosure. As discussed above a network system map may identify the devices (e.g., entities) that are part of the network system and how the devices are interconnected or (communicatively) coupled. Network system map <b>500</b> is for a VOIP network system. The network system map <b>500</b> may be presented to the user via a user interface to allow a user to view the devices that are part of the network system map <b>500</b> (e.g., are part of the VOIP system) and how they are interconnected or coupled.</p><p id="p-0097" num="0096">Network system map <b>500</b> includes VOIP phones <b>510</b>, VOIP server <b>520</b>, VOIP server <b>530</b>, and VOIP phones <b>540</b>. The network system map <b>500</b> includes lines and arrows that indicate how VOIP phones <b>510</b>, VOIP server <b>520</b>, VOIP server <b>530</b>, and VOIP phones <b>540</b> are interconnected (e.g., cameras VOIP phones are communicatively coupled to VOIP server <b>520</b>, VOIP server <b>520</b> is communicatively coupled to VOIP server <b>530</b>, etc.). The VOIP phones <b>510</b> and <b>540</b> may be IP phones or computing devices that include a VOIP application. The VOIP servers <b>520</b> and <b>530</b> may be devices (e.g., computing or network devices) that provide telephone services to VOIP phones. Each device in the network system map <b>500</b> may be associated with or may include a tuple. As discussed above, a tuple may include a network system type, a network system name, and a network system identifier. For example, each VOIP phone <b>510</b> and <b>540</b> is associated with the tuple &#x201c;(VOIP System; Phone System <b>1</b>; VOIP Phone),&#x201d; where &#x201c;VOIP System&#x201d; indicates the network system type, &#x201c;Phone System <b>1</b>&#x201d; indicates the network system name, and &#x201c;VOIP Phone&#x201d; indicates the network system role. The VOIP servers <b>530</b> are associated with the tuple &#x201c;(VOIP System; Phone System <b>1</b>; VOIP Server),&#x201d; where &#x201c;VOIP System&#x201d; indicates the network system type, &#x201c;Phone System <b>1</b>&#x201d; indicates the network system name, and &#x201c;VOIP Server&#x201d; indicates the network system role.</p><p id="p-0098" num="0097">As discussed above, a system mapping component (e.g., system mapping component <b>290</b> illustrated in <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>) may identify a first device in a network system and then identify other devices that are connected or coupled to the first device at different coupling levels (e.g., coupled to the first device via one or more other devices in series). For example, the system mapping component may identify or classify VOIP server <b>520</b> first. The system mapping component may then identify or classify devices at the next connection or coupling level (e.g., a first coupling level) which includes devices that are communicatively coupled to the VOIP server <b>520</b>, such as VOIP server <b>530</b> and VOIP phones <b>510</b>. The system mapping component may then identify or classify devices at the next connection or coupling level (e.g., a second coupling level) which includes devices that are communicatively coupled to the VOIP server <b>530</b>, such as VOIP phones <b>540</b>.</p><p id="p-0099" num="0098">With reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, flowchart <b>600</b> illustrates example operations used by various embodiments. Although specific operation blocks (&#x201c;blocks&#x201d;) are disclosed in flowchart <b>600</b>, such blocks are examples. That is, embodiments are well suited to performing various other blocks or variations of the blocks recited in flowchart <b>600</b>. It is appreciated that the blocks in flowchart <b>600</b> may be performed in an order different</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a flow diagram of aspects of process <b>600</b> for generating network system maps, in accordance with one implementation of the present disclosure. Various portions of process <b>600</b> may be performed by different components (e.g., components of system <b>800</b>) of an entity or device (e.g., network monitor entity <b>102</b>, network monitor entity <b>280</b>, system mapping component <b>290</b>, etc.). Process <b>600</b> may parse network traffic to obtain metadata and may generate a network system map based on the metadata and one or more libraries.</p><p id="p-0101" num="0100">At block <b>605</b>, network traffic is obtained (e.g., accessed, read, analyzed, etc.). The traffic may have been transmitted by and/or received by a device. The traffic may be obtained by a network monitoring device (e.g., network monitoring entities <b>102</b> or <b>280</b>) via a port mirroring or SPAN port or via another method, as described herein. The network traffic (e.g., packets, messages, frames, etc.) may include one or more properties and property values for each device communicatively coupled to one or more networks. The one or more properties and property values may be extracted from the network traffic. The one or more properties and property values may be based on one or more fields or portions of the one or more fields within network traffic (e.g., packets, messages, frames, etc.). The network traffic may include active scanning properties (e.g., if active scanning is enabled).</p><p id="p-0102" num="0101">The network traffic is parsed at block <b>610</b>. For example, parsing engine <b>310</b> illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> may parse the network traffic by analyzing or reading certain or select portions of the network traffic (e.g., by analyzing the headers, footers, etc., of packets). The network traffic may be parsed to obtain metadata associated with the network traffic. The metadata may include portions of the network traffic such as portions of the headers or footers. The network traffic may also include information such as when packets were transmitted, sizes of packets, an order of packets, etc.</p><p id="p-0103" num="0102">At block <b>615</b>, a network system is identified based on the metadata. For example, mapping engine <b>320</b> (illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) may analyze the metadata to identify devices that may be part of the network system. The mapping engine <b>320</b> may determine network system types, network system names, and network system roles for the different devices or entities of the network system, based on the metadata. The mapping engine <b>320</b> may use device libraries and system libraries to determine, identify, etc., network system types, network system names, and network system roles for the different devices of the network system.</p><p id="p-0104" num="0103">A network system map is generated at block <b>620</b>. The network system map may identify all of the devices that are part of the network system. For example, the network system map may include a list of all of the devices that are in the network system. The network system map may also indicate how the different devices are interconnected or coupled (as illustrated in <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>). The network system map may also include tuple for each device in the network system. A tuple for a device may include the network system type, the network system name, and a network system role associated with the device.</p><p id="p-0105" num="0104">At block <b>625</b>, the process <b>600</b> may determine whether additional network traffic has been obtained or received. If no additional network traffic has been received, the process <b>600</b> may end. If additional network traffic has been received, the additional network traffic is parsed to obtain additional metadata or other data at block <b>630</b>. The network map may be updated at block <b>635</b>. For example, the additional metadata may allow the mapping engine <b>320</b> to narrow the classification of a device (e.g., to narrow the classification of a device from a streaming media device to a VOIP phone). The mapping engine <b>320</b> may update the network system role in the tuple for the device (in the network system map) to reflect the updated classification.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates example components used by various embodiments. Although specific components are disclosed in system <b>700</b>, it should be appreciated that such components are examples. That is, embodiments are well suited to having various other components or variations of the components recited in system <b>700</b>. It is appreciated that the components in system <b>700</b> may operate with other components than those presented, and that not all of the components of system <b>700</b> may be required to achieve the goals of system <b>700</b>.</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts illustrative components of a system for generating network system maps, in accordance with one implementation of the present disclosure. Example system <b>700</b> includes a network communication interface <b>702</b>, an external system interface <b>704</b>, a traffic monitor component <b>706</b>, a data access component <b>708</b>, a property determination component <b>710</b>, a display component <b>714</b>, a notification component <b>716</b>, a policy component <b>718</b>, a classification component <b>720</b>, a model training component <b>722</b>, and a model selection component <b>724</b>. The components of system <b>700</b> may be part of a computing system or other electronic device (e.g., network monitor entity <b>102</b> or network monitor entity <b>280</b>) or a virtual machine or device and be operable to monitor and one or more entities communicatively coupled to a network, monitor network traffic, determine one or more classifications of a device, perform one or more actions, as described herein. For example, the system <b>700</b> may further include a memory and a processing device, operatively coupled to the memory, which may perform the operations of or execute the components of system <b>700</b>. The components of system <b>700</b> may access various data and characteristics or properties associated with a device (e.g., network communication information) and data associated with one or more entities. It is appreciated that the modular nature of system <b>700</b> may allow the components to be independent and allow flexibility to enable or disable individual components or to extend, upgrade, or combination thereof components without affecting other components thereby providing scalability and extensibility. System <b>700</b> may perform one or more blocks of sequence or flow diagram <b>600</b>. In some embodiments the components of <b>700</b> may be part of network monitor entity (e.g., network monitor entities <b>102</b> and <b>280</b>), in the cloud, or the various components may be distributed between local and cloud resources.</p><p id="p-0108" num="0107">Communication interface <b>702</b> is operable to communicate with one or more entities (e.g., network device <b>104</b>, firewall <b>206</b>, switch <b>210</b>, other devices coupled thereto, devices <b>220</b>-<b>222</b>, etc.) coupled to a network that are coupled to system <b>700</b> and receive or access information about entities (e.g., device information, device communications, device characteristics, properties, etc.), access information as part of a passive scan, send one or more requests as part of an active scan, receive active scan results or responses (e.g., responses to requests), as described herein. The communication interface <b>702</b> may be operable to work with one or more components to initiate access to characteristics or determination of characteristics of a device to allow determination of one or more properties which may then be used for device compliance, asset management, standards compliance, classification, identification, etc., as described herein. Communication interface <b>702</b> may be used to receive and store network traffic for determining properties, as described herein.</p><p id="p-0109" num="0108">External system interface <b>704</b> is operable to communicate with one or more third party, remote, or external systems to access information including characteristics or properties about a device (e.g., to be used to determine a security aspects). External system interface <b>704</b> may further store the accessed information in a data store. For example, external system interface <b>704</b> may access information from a vulnerability assessment (VA) system to enable determination of one or more compliance or risk characteristics associated with the device. External system interface <b>704</b> may be operable to communicate with a vulnerability assessment (VA) system, an advanced threat detection (ATD) system, a mobile device management (MDM) system, a firewall (FW) system, a switch system, an access point (AP) system, etc. External system interface <b>704</b> may query a third party system using an API or CLI. For example, external system interface <b>704</b> may query a firewall or a switch for information (e.g., network session information) about a device or for a list of entities that are communicatively coupled to the firewall or switch and communications associated therewith. In some embodiments, external system interface <b>704</b> may query a switch, a firewall, or other system for information of communications associated with a device.</p><p id="p-0110" num="0109">Traffic monitor component <b>706</b> is operable to monitor network traffic to determine if a new device has joined the network or a device has rejoined the network and monitor traffic for analysis by data access component <b>708</b>, and classification component <b>720</b>, as described herein. Traffic monitor component <b>706</b> may have a packet engine operable to access packets of network traffic (e.g., passively) and analyze the network traffic. The traffic monitor component <b>706</b> may communicate with, interact with, operate in conjunction with, etc., system mapping component <b>290</b>. The traffic monitor component <b>706</b> may further be able to access and analyze traffic logs from one or more entities (e.g., network device <b>104</b>, system <b>150</b>, or aggregation device <b>106</b>) or from a device being monitored. The traffic monitor component <b>706</b> may further be able to access traffic analysis data associated with a device being monitored, e.g., where the traffic analysis is performed by a third party system.</p><p id="p-0111" num="0110">Data access component <b>708</b> may be operable for accessing data including metadata associated with one or more network monitoring entities (e.g., network monitor entities <b>102</b> or <b>280</b>-<b>282</b>), including properties that the network monitoring device is monitoring or collecting, software versions (e.g., of the profile library of the network monitoring device), and the internal configuration of the network monitoring device. The data accessed by data access component <b>708</b> may be used by embodiments to perform classification including ensuring that the most up to date models, profiles, and other classification information is being used (e.g., by classification component <b>720</b>). Data access component <b>708</b> may further access vertical or environment data and other user associated data, including vertical, environment, common type of devices for the network or network portions, segments, areas with classification issues, etc., which may be used for classification.</p><p id="p-0112" num="0111">Data access component <b>708</b> may access data associated with active or passive traffic analysis or scans or a combination thereof. Data access component may further be able to access and analyze traffic logs from one or more entities (e.g., network device <b>104</b>, system <b>150</b>, or aggregation device <b>106</b>) or from a device being monitored. Data access component <b>708</b> may further be able to access traffic analysis data associated with a device being monitored, e.g., where the traffic analysis is performed by a third party system. Information accessed by data access component <b>708</b> may be stored, displayed, and used as a basis for classification, generating system maps, presenting or displaying network system maps, updating or modifying network system maps, etc., as described herein.</p><p id="p-0113" num="0112">Property determination component <b>710</b> is configured to determine one or more properties associated with a device, as described herein. Property determination component <b>710</b> may determine one or more properties and associated values associated with a device based on analysis (e.g., including extraction of properties and values, for instances, based on one or more fields of packets, frames, messages, etc.) of network traffic, as described herein. The properties can then be stored and used by other components (e.g., classification component <b>720</b>, model training component <b>722</b>, model selection component <b>724</b>) for performing classification, training one or more models, evaluating one or more models, and performing actions (e.g., security actions), as described herein.</p><p id="p-0114" num="0113">Classification component <b>720</b> is configured to determine one or more classifications, as described herein. Classification component <b>720</b> is further configured to determine a confidence associated with a classification (result), as described herein, which may then be compared with a confidence threshold, as described herein. Classification component <b>720</b> may use model selection component <b>724</b> to select one or more models for classification. Classification component <b>720</b> may further use profile libraries, entity or device fingerprints, etc., in conjunction or in place of classification using the one or more models, as described herein. Classification component <b>720</b> may use local resources (e.g., local classification engine <b>240</b>), cloud resources (e.g., classification system <b>262</b>), or a combination thereof for determining a classification.</p><p id="p-0115" num="0114">Model selection component <b>724</b> is configured to select a model for use by classification component <b>720</b>, as described herein. Model selection component <b>724</b> may select a model based on parsing network traffic. For example, a model for classifying a device as a media streaming device, a smart device, etc., may be identified based on one or more field values determined by parsing network traffic.</p><p id="p-0116" num="0115">System mapping component <b>290</b> is configured to obtain network traffic from a network. The network traffic is transmitted by a plurality of devices or entities communicatively coupled to the network. System mapping component <b>290</b> is further configured to parse the network traffic to obtain metadata or other data from the network traffic. System mapping component <b>290</b> is further configured to identify a network system based on the metadata of the network traffic and a set of libraries. System mapping component <b>290</b> is further configured to generate a network system map for the network system.</p><p id="p-0117" num="0116">Display component <b>714</b> is configured to optionally display one or more graphical user interfaces or other interfaces (e.g., command line interface) for depicting various information associated with entities, classification, thresholds (e.g., confidence thresholds), and models, as described herein. In some embodiments, display component <b>714</b> may display or render, a network graph of entities including one or more classifications, access rules associated with entities, and other access rule information (e.g., access policies, access templates, etc.), network system maps, etc.</p><p id="p-0118" num="0117">Notification component <b>716</b> is operable to initiate one or more notifications based on the results of one or more classifications and other analysis of communications, as described herein. The notification may be any of a variety of notifications, e.g., IT ticket, email, SMS, a HTTP notification, etc., as described herein.</p><p id="p-0119" num="0118">Policy component <b>718</b> is operable for initiating or triggering one or more remediation actions or security actions according to one or more policies, e.g., based on one or more classifications, as described herein. Policy component <b>718</b> may further be configured to perform other operations including checking compliance status, finding open ports, etc. In some embodiments, policy component <b>718</b> may verify that an assignment of one or more access rules to one or more enforcements points has been properly assigned or configured. Policy component <b>718</b> may restrict network access, signal a patch system or service, signal an update system or service, etc., as described herein. The policy component <b>718</b> may thus, among other things, invoke automatically (e.g., without user or human interaction) patching, automatically updating, and automatically restrict network access of a device (e.g., that has out-of-date software or based on access rule violation or attempted violation).</p><p id="p-0120" num="0119">The actions may include restricting network access to a particular level (e.g., full, limited, or no network access, for instance via an enforcement point), remediation actions (e.g., triggering patch systems or services, triggering update systems or services, triggering third party product action, etc.), informational actions (e.g., sending an email notification to a user or IT administrator or creating an IT ticket reflecting the level of compliance), and logging actions (e.g., logging or storing the compliance level).</p><p id="p-0121" num="0120">In one embodiment, the policy component <b>718</b> is operable for initiating or triggering one or more remediation actions or security actions according to one or more policies, based on network systems or network system maps. For example, the policy component <b>718</b> may apply a policy to devices that are part of a network system. The policy component <b>718</b> may also apply a policy to a subset of the devices in a network system. For example, the policy component <b>718</b> may apply a policy to all devices that have a particular network system role within the network system.</p><p id="p-0122" num="0121">The system <b>700</b> may be software stored on a non-transitory computer readable medium having instructions encoded thereon that, when executed by a processing device, cause the processing device to obtain network traffic from a network. The network traffic is transmitted by a plurality of devices or entities communicatively coupled to the network. The instructions may further cause the processing device to parse the network traffic to obtain metadata of the network traffic. The instructions may further cause the processing device to identify a network system based on the metadata of the network traffic. The network system may include a subset of the plurality of devices. The network system may provide a network based functionality for one or more users or other devices via the network. The instructions may further cause the processing device to generate a network system map for the network system. The network system map may indicate each of the subset of the plurality of devices and couplings between the subset of the plurality of devices.</p><p id="p-0123" num="0122">In various embodiments, to identify the network system, the processing device is further to select a first device from the plurality of devices, based on one or more of the metadata of the network traffic and additional data. The network system comprises the first device. The instructions may further cause the processing device to determine a network system type for the network system, a network system name for the network system, and a network system role for the first device based on the metadata of the network traffic. The network system role indicates a role of the first device within the network system. In some embodiments, the network system map is generated based on the network system type for the network system, the network system name for the network system, and the network system role. In other embodiments, to identify the network system, the processing device is further to select additional devices at different coupling levels to the first device. The network system further includes the additional devices. The instructions may further cause the processing device to determine additional network system roles for the additional devices. The network system map may be generated further based on the additional network system roles for the additional devices.</p><p id="p-0124" num="0123">In some embodiments, the metadata of the network traffic includes one or more of headers of the network traffic, footers of the network traffic, one or more protocols of the network traffic, and one or more sizes of the network traffic. In other embodiments, to parsing the network traffic, the processing device is further to determine one or more of a set of times when packets of the network traffic were transmitted and a set of sizes of the packets of the network traffic.</p><p id="p-0125" num="0124">In one embodiment, the network system map is initially generated without performing deep packet inspection on the network traffic or without parsing payloads of the network traffic. In another embodiment, the network system map is generated further based on a set of libraries. The set of libraries include data for classifying different devices of the network and for classifying different network systems.</p><p id="p-0126" num="0125">In some embodiments, the instructions may cause the processing device to obtain additional network traffic from the network. The additional network traffic is transmitted by the plurality of devices communicatively coupled to the network. The instructions may further cause the processing device to parse the additional network traffic to obtain additional metadata of the additional network traffic. The instruction may further cause the processing device to update the network system map for the network system.</p><p id="p-0127" num="0126"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating an example computer system, in accordance with one implementation of the present disclosure. <figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a diagrammatic representation of a machine in the example form of a computer system <b>800</b> within which a set of instructions, for causing the machine to perform any one or more of the methodologies discussed herein, may be executed. In alternative embodiments, the machine may be connected (e.g., networked) to other machines in a local area network (LAN), an intranet, an extranet, or the Internet. The machine may operate in the capacity of a server or a client machine in a client-server network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine may be a personal computer (PC), a tablet PC, a set-top box (STB), a Personal Digital Assistant (PDA), a cellular telephone, a web appliance, a server, a network router, a switch or bridge, a hub, an access point, a network access control device, or any machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. Further, while only a single machine is illustrated, the term &#x201c;machine&#x201d; shall also be taken to include any collection of machines that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein. In one embodiment, computer system <b>800</b> may be representative of a server, such as network monitor entity <b>102</b> running system mapping component <b>290</b> to generate network system maps, as described herein.</p><p id="p-0128" num="0127">The exemplary computer system <b>800</b> includes a processing device <b>802</b>, a main memory <b>804</b> (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM), a static memory <b>806</b> (e.g., flash memory, static random access memory (SRAM), etc.), and a data storage device <b>818</b>, which communicate with each other via a bus <b>830</b>. Any of the signals provided over various buses described herein may be time multiplexed with other signals and provided over one or more common buses. Additionally, the interconnection or coupling between circuit components or blocks may be shown as buses or as single signal lines. Each of the buses may alternatively be one or more single signal lines and each of the single signal lines may alternatively be buses.</p><p id="p-0129" num="0128">Processing device <b>802</b> represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processing device may be complex instruction set computing (CISC) microprocessor, reduced instruction set computer (RISC) microprocessor, very long instruction word (VLIW) microprocessor, or processor implementing other instruction sets, or processors implementing a combination of instruction sets. Processing device <b>802</b> may also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like. The processing device <b>802</b> is configured to execute system mapping component <b>290</b>, for performing the operations and steps discussed herein.</p><p id="p-0130" num="0129">The data storage device <b>818</b> may include a machine-readable storage medium <b>828</b>, on which is stored one or more set of instructions <b>822</b> (e.g., software) embodying any one or more of the methodologies of operations described herein, including instructions to cause the processing device <b>802</b> to execute system mapping component <b>290</b>. The instructions <b>822</b> may also reside, completely or at least partially, within the main memory <b>804</b> or within the processing device <b>802</b> during execution thereof by the computer system <b>800</b>; the main memory <b>804</b> and the processing device <b>802</b> also constituting machine-readable storage media. The instructions <b>822</b> may further be transmitted or received over a network <b>820</b> via the network interface device <b>808</b>.</p><p id="p-0131" num="0130">The machine-readable storage medium <b>828</b> may also be used to store instructions to perform a method for generating network system maps, as described herein. The machine-readable storage medium <b>828</b> may also be used to store instructions to perform a method for updating network system maps and updating libraries, as described herein. While the machine-readable storage medium <b>828</b> is shown in an exemplary embodiment to be a single medium, the term &#x201c;machine-readable storage medium&#x201d; should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, or associated caches and servers) that store the one or more sets of instructions. A machine-readable medium includes any mechanism for storing information in a form (e.g., software, processing application) readable by a machine (e.g., a computer). The machine-readable medium may include, but is not limited to, magnetic storage medium (e.g., floppy diskette); optical storage medium (e.g., CD-ROM); magneto-optical storage medium; read-only memory (ROM); random-access memory (RAM); erasable programmable memory (e.g., EPROM and EEPROM); flash memory; or another type of medium suitable for storing electronic instructions.</p><p id="p-0132" num="0131">The preceding description sets forth numerous specific details such as examples of specific systems, components, methods, and so forth, in order to provide a good understanding of several embodiments of the present disclosure. It will be apparent to one skilled in the art, however, that at least some embodiments of the present disclosure may be practiced without these specific details. In other instances, well-known components or methods are not described in detail or are presented in simple block diagram format in order to avoid unnecessarily obscuring the present disclosure. Thus, the specific details set forth are merely exemplary. Particular embodiments may vary from these exemplary details and still be contemplated to be within the scope of the present disclosure.</p><p id="p-0133" num="0132">Reference throughout this specification to &#x201c;one embodiment&#x201d; or &#x201c;an embodiment&#x201d; means that a particular feature, structure, or characteristic described in connection with the embodiments included in at least one embodiment. Thus, the appearances of the phrase &#x201c;in one embodiment&#x201d; or &#x201c;in an embodiment&#x201d; in various places throughout this specification are not necessarily all referring to the same embodiment. In addition, the term &#x201c;or&#x201d; is intended to mean an inclusive &#x201c;or&#x201d; rather than an exclusive &#x201c;or.&#x201d;</p><p id="p-0134" num="0133">Additionally, some embodiments may be practiced in distributed computing environments where the machine-readable medium is stored on and or executed by more than one computer system. In addition, the information transferred between computer systems may either be pulled or pushed across the communication medium connecting the computer systems.</p><p id="p-0135" num="0134">Embodiments of the claimed subject matter include, but are not limited to, various operations described herein. These operations may be performed by hardware components, software, firmware, or a combination thereof.</p><p id="p-0136" num="0135">Although the operations of the methods herein are shown and described in a particular order, the order of the operations of each method may be altered so that certain operations may be performed in an inverse order or so that certain operation may be performed, at least in part, concurrently with other operations. In another embodiment, instructions or sub-operations of distinct operations may be in an intermittent or alternating manner.</p><p id="p-0137" num="0136">When an action, function, operation, etc., is described herein as being performed automatically, this may indicate that the action, function, operation, etc., may be performed without requiring human or user input, invocation, or interaction.</p><p id="p-0138" num="0137">The above description of illustrated implementations of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific implementations of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. The words &#x201c;example&#x201d; or &#x201c;exemplary&#x201d; are used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as &#x201c;example&#x201d; or &#x201c;exemplary&#x201d; is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words &#x201c;example&#x201d; or &#x201c;exemplary&#x201d; is intended to present concepts in a concrete fashion. As used in this application, the term &#x201c;or&#x201d; is intended to mean an inclusive &#x201c;or&#x201d; rather than an exclusive &#x201c;or&#x201d;. That is, unless specified otherwise, or clear from context, &#x201c;X includes A or B&#x201d; is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then &#x201c;X includes A or B&#x201d; is satisfied under any of the foregoing instances. In addition, the articles &#x201c;a&#x201d; and &#x201c;an&#x201d; as used in this application and the appended claims should generally be construed to mean &#x201c;one or more&#x201d; unless specified otherwise or clear from context to be directed to a singular form. Moreover, use of the term &#x201c;an embodiment&#x201d; or &#x201c;one embodiment&#x201d; or &#x201c;an implementation&#x201d; or &#x201c;one implementation&#x201d; throughout is not intended to mean the same embodiment or implementation unless described as such. Furthermore, the terms &#x201c;first,&#x201d; &#x201c;second,&#x201d; &#x201c;third,&#x201d; &#x201c;fourth,&#x201d; etc. as used herein are meant as labels to distinguish among different elements and may not necessarily have an ordinal meaning according to their numerical designation.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>accessing, by a network monitoring device coupled to a network, network traffic from the network, wherein the network traffic is transmitted by a plurality of devices communicatively coupled to the network;</claim-text><claim-text>parsing the network traffic to obtain metadata of the network traffic, wherein the metadata comprises properties associated with the plurality of devices and properties of the network traffic;</claim-text><claim-text>identifying a network system based on the metadata of the network traffic, wherein the network system comprises a subset of the plurality of devices that operate together to provide</claim-text><claim-text>a network based functionality for one or more other devices via the network, and wherein each device of the network system is associated with at least one of a network system type or a network system name corresponding to the network system; and</claim-text><claim-text>generating a network system map for the network system based on the metadata, wherein the network system map indicates each of the subset of the plurality of devices and couplings between the subset of the plurality of devices.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the network system comprises:<claim-text>selecting a first device from the plurality of devices, based on one or more of the metadata of the network traffic and additional data, wherein the network system comprises the first device; and</claim-text><claim-text>determining the network system type for the network system, the network system name for the network system, and a network system role for the first device based on the metadata of the network traffic, wherein the network system role indicates a role of the first device within the network system.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the network system map is generated based on the network system type for the network system, the network system name for the network system, and the network system role.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein identifying the network system further comprises:<claim-text>selecting additional devices at different coupling levels to the first device, wherein the network system further comprises the additional devices; and</claim-text><claim-text>determining additional network system roles for the additional devices.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the network system map is generated further based on the additional network system roles for the additional devices.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the metadata of the network traffic comprises at least one of one or more of headers of the network traffic, footers of the network traffic, one or more protocols of the network traffic, or one or more sizes of the network traffic.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein parsing the network traffic comprises:<claim-text>determining one or more of a set of times when packets of the network traffic were transmitted and a set of sizes of the packets of the network traffic.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the network system map is initially generated without performing deep packet inspection on the network traffic or without parsing payloads of the network traffic.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>analyzing one or more payloads of the network traffic; and</claim-text><claim-text>updating the network system network map based on the payloads of the network traffic.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the network system map is generated further based on a set of libraries; and</claim-text><claim-text>the set of libraries comprises data for classifying different devices of the network and for classifying different network systems.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>obtaining additional network traffic from the network, wherein the additional network traffic is transmitted by the plurality of devices communicatively coupled to the network;</claim-text><claim-text>parsing the additional network traffic to obtain additional metadata of the additional network traffic; and</claim-text><claim-text>updating the network system map for the network system.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A system, comprising:<claim-text>a memory; and</claim-text><claim-text>a processing device, operatively coupled to the memory, to:<claim-text>access network traffic from a network, wherein the network traffic is transmitted by a plurality of devices communicatively coupled to the network;</claim-text><claim-text>parse the network traffic to obtain metadata of the network traffic, wherein the metadata comprises properties associated with the plurality of devices and properties of the network traffic;</claim-text><claim-text>identify a network system based on the metadata of the network traffic, wherein the network system comprises a subset of the plurality of devices that operate together to provide;<claim-text>a network based functionality for one or more other devices via the network, and wherein each device of the network system is associated with at least one of a network system type or a network system name corresponding to the network system; and</claim-text></claim-text><claim-text>generate a network system map for the network system based on the metadata, wherein the network system map indicates each of the subset of the plurality of devices and couplings between the subset of the plurality of devices.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein to identify the network system the processing device is further to:<claim-text>select a first device from the plurality of devices, based on one or more of the metadata of the network traffic and additional data, wherein the network system comprises the first device; and</claim-text><claim-text>determine the network system type for the network system, the network system name for the network system, and a network system role for the first device based on the metadata of the network traffic, wherein the network system role indicates a role of the first device within the network system.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the network system map is generated based on the network system type for the network system, the network system name for the network system, and the network system role.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein to identify the network system the processing device is further to:<claim-text>select additional devices at different coupling levels to the first device, wherein the network system further comprises the additional devices; and</claim-text><claim-text>determine additional network system roles for the additional devices.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the network system map is generated further based on the additional network system roles for the additional devices.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the metadata of the network traffic comprises at least one of one or more of headers of the network traffic, footers of the network traffic, one or more protocols of the network traffic, or one or more sizes of the network traffic.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein to parse the network traffic the processing device is further to:<claim-text>determine one or more of a set of times when packets of the network traffic were transmitted and a set of sizes of the packets of the network traffic.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the network system map is initially generated without performing deep packet inspection on the network traffic or without parsing payloads of the network traffic.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer readable medium having instructions encoded thereon that, when executed by a processing device, cause the processing device to:<claim-text>access network traffic from a network, wherein the network traffic is transmitted by a plurality of devices communicatively coupled to the network;</claim-text><claim-text>parse the network traffic to obtain metadata of the network traffic, wherein the metadata comprises properties associated with the plurality of devices and properties of the network traffic;</claim-text><claim-text>identify a network system based on the metadata of the network traffic, wherein<claim-text>the network system comprises a subset of the plurality of devices that operate together to provide</claim-text><claim-text>a network based functionality for one or more other device via the network; and</claim-text></claim-text><claim-text>generate a network system map for the network system based on the metadata associated with the plurality of devices of the network, wherein the network system map indicates each of the subset of the plurality of devices and couplings between the subset of the plurality of devices.</claim-text></claim-text></claim></claims></us-patent-application>