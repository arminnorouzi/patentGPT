<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007266A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007266</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17784465</doc-number><date>20201211</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>82</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>82</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">APPARATUS AND METHOD FOR CODING IMAGE ON BASIS OF SIGNALING OF INFORMATION FOR FILTERING</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>62947509</doc-number><date>20191212</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>LG ELECTRONICS INC.</orgname><address><city>Seoul</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>HENDRY</last-name><first-name>Hendry</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>PALURI</last-name><first-name>Seethal</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Seunghwan</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/KR2020/018164</doc-number><date>20201211</date></document-id><us-371c12-date><date>20220610</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An image decoding method according to embodiments of the present document may comprise the steps of: acquiring, via a bitstream, image information including residual information; generating reconstruction samples on the basis of the residual information; and performing an in-loop filtering procedure for the reconstruction samples so as to generate modified reconstruction samples. The step of generating of the modified reconstruction samples may comprise a step of determining whether the in-loop filtering procedure is performed across virtual boundaries. In an example, wherein the image information includes an SPS, and on the basis of whether reference picture resampling is available, whether the SPS includes additional virtual boundary-related information may be determined.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="51.73mm" wi="158.75mm" file="US20230007266A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="191.60mm" wi="110.74mm" orientation="landscape" file="US20230007266A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="207.86mm" wi="145.71mm" orientation="landscape" file="US20230007266A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="204.47mm" wi="132.00mm" orientation="landscape" file="US20230007266A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="179.15mm" wi="140.97mm" orientation="landscape" file="US20230007266A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="131.15mm" wi="130.05mm" file="US20230007266A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="189.91mm" wi="123.11mm" orientation="landscape" file="US20230007266A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="123.11mm" wi="111.84mm" file="US20230007266A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="123.11mm" wi="111.84mm" file="US20230007266A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="111.76mm" wi="111.84mm" file="US20230007266A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="188.81mm" wi="130.22mm" orientation="landscape" file="US20230007266A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="92.54mm" wi="113.88mm" file="US20230007266A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="193.55mm" wi="121.50mm" orientation="landscape" file="US20230007266A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="171.79mm" wi="141.48mm" orientation="landscape" file="US20230007266A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND OF THE DISCLOSURE</heading><heading id="h-0002" level="1">Field of the Disclosure</heading><p id="p-0002" num="0001">The present document relates to an image coding apparatus and method based on signaling of information for filtering.</p><heading id="h-0003" level="1">Related Art</heading><p id="p-0003" num="0002">Recently, demand for high-resolution, high-quality image/video such as 4K or 8K or higher ultra high definition (UHD) image/video has increased in various fields. As image/video data has high resolution and high quality, the amount of information or bits to be transmitted increases relative to the existing image/video data, and thus, transmitting image data using a medium such as an existing wired/wireless broadband line or an existing storage medium or storing image/video data using existing storage medium increase transmission cost and storage cost.</p><p id="p-0004" num="0003">In addition, interest and demand for immersive media such as virtual reality (VR) and artificial reality (AR) content or holograms has recently increased and broadcasting for image/video is having characteristics different from reality images such as game images has increased.</p><p id="p-0005" num="0004">Accordingly, a highly efficient image/video compression technology is required to effectively compress, transmit, store, and reproduce information of a high-resolution, high-quality image/video having various characteristics as described above. Specifically, there is discussion on a method for effectively signaling in-loop filtering-related information and subpicture-related information for improving subjective/objective visual quality of a reconstructed picture.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">According to an embodiment of the present document, a method and an apparatus for increasing image coding efficiency are provided.</p><p id="p-0007" num="0006">According to an embodiment of the present document, efficient filtering application method and apparatus are provided.</p><p id="p-0008" num="0007">According to an embodiment of the present document, a method and apparatus for effectively applying deblocking, sample adaptive offset (SAO), and adaptive loop filtering (ALF) are provided.</p><p id="p-0009" num="0008">According to an embodiment of the present document, in-loop filtering may be performed based on virtual boundaries.</p><p id="p-0010" num="0009">According to an embodiment of the present document, whether a sequence parameter set (SPS) includes additional virtual boundaries-related information (e.g., information on positions and the number of virtual boundaries) is determined based on whether resampling for reference pictures is enabled.</p><p id="p-0011" num="0010">According to an embodiment of the present document, image coding may be performed based on subpictures.</p><p id="p-0012" num="0011">According to an embodiment of the present document, subpictures used in image coding may be independently coded.</p><p id="p-0013" num="0012">According to an embodiment of the present document, a picture may include only one subpicture. In addition, the subpicture may be independently coded.</p><p id="p-0014" num="0013">According to an embodiment of the present document, a picture may be generated based on a merging process of subpictures. In addition, the subpictures may be independently coded subpictures.</p><p id="p-0015" num="0014">According to an embodiment of the present document, each of subpictures used in image coding may be treated as a picture.</p><p id="p-0016" num="0015">According to an embodiment of the present document, an encoding apparatus for performing video/image encoding is provided.</p><p id="p-0017" num="0016">According to one embodiment of the present document, there is provided a computer-readable digital storage medium in which encoded video/image information, generated according to the video/image encoding method disclosed in at least one of the embodiments of the present document, is stored.</p><p id="p-0018" num="0017">According to an embodiment of the present document, there is provided a computer-readable digital storage medium in which encoded information or encoded video/image information, causing to perform the video/image decoding method disclosed in at least one of the embodiments of the present document by the decoding apparatus, is stored.</p><p id="p-0019" num="0018">According to an embodiment of the present document, overall image/video compression efficiency may be improved.</p><p id="p-0020" num="0019">According to an embodiment of the present document, subjective/objective visual quality may be improved through efficient filtering.</p><p id="p-0021" num="0020">According to an embodiment of the present document, the in-loop filtering process based on the virtual boundaries may be effectively performed, and filtering performance may be improved.</p><p id="p-0022" num="0021">According to an embodiment of the present document, information for in-loop filtering based on the virtual boundaries may be effectively signaled.</p><p id="p-0023" num="0022">According to an embodiment of the present document, subpicture-related information may be effectively signaled. Therefore, subjective/objective image quality may be improved, and there may be a decrease in a hardware resource consumption required for coding.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically shows an example of a video/image coding system to which embodiments of the present disclosure may be applied.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a view schematically illustrating the configuration of a video/image encoding apparatus to which embodiments of the present disclosure may be applied.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a view schematically illustrating the configuration of a video/image decoding apparatus to which embodiments of the present disclosure may be applied.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>4</b></figref> exemplarily shows a hierarchical architecture for a coded video/image.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example of an adaptive loop filtering (ALF) filter shape.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a virtual boundary applied to a filtering process according to an embodiment of the present document.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart illustrating an encoding method based on filtering in an encoding apparatus.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart illustrating a decoding method based on filtering in a decoding apparatus.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>9</b></figref> and <figref idref="DRAWINGS">FIG. <b>10</b></figref> schematically show an example of a video/image encoding method and related components according to embodiment(s) of the present document.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>11</b></figref> and <figref idref="DRAWINGS">FIG. <b>12</b></figref> schematically show an example of an image/video decoding method and related components according to an embodiment(s) of the present document.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows an example of a content streaming system to which embodiment(s) disclosed in the present document may be applied.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EXEMPLARY EMBODIMENTS</heading><p id="p-0035" num="0034">The present disclosure may be modified in various forms, and specific embodiments thereof will be described and illustrated in the drawings. However, the embodiments are not intended for limiting the disclosure. The terms used in the following description are used to merely describe specific embodiments, but are not intended to limit the disclosure. An expression of a singular number includes an expression of the plural number, so long as it is clearly read differently. The terms such as &#x201c;include&#x201d; and &#x201c;have&#x201d; are intended to indicate that features, numbers, steps, operations, elements, components, or combinations thereof used in the following description exist and it should be thus understood that the possibility of existence or addition of one or more different features, numbers, steps, operations, elements, components, or combinations thereof is not excluded.</p><p id="p-0036" num="0035">In addition, each configuration of the drawings described in this document is an independent illustration for explaining functions as features that are different from each other, and does not mean that each configuration is implemented by mutually different hardware or different software. For example, two or more of the configurations can be combined to form one configuration, and one configuration can also be divided into multiple configurations. Without departing from the gist of this document, embodiments in which configurations are combined and/or separated are included in the scope of claims.</p><p id="p-0037" num="0036">Hereinafter, examples of the present embodiment will be described in detail with reference to the accompanying drawings. In addition, like reference numerals are used to indicate like elements throughout the drawings, and the same descriptions on the like elements will be omitted.</p><p id="p-0038" num="0037">This document relates to video/image coding. For example, methods/embodiments disclosed in this document may be related to the versatile video coding (VVC) standard (ITU-T Rec. H.266), the next-generation video/image coding standard after VVC, or other video coding related standards (e.g., high efficiency video coding (HEVC) standard (ITU-T Rec. H.265), essential video coding (EVC) standard, AVS2 standard, and the like).</p><p id="p-0039" num="0038">This document suggests various embodiments of video/image coding, and the above embodiments may also be performed in combination with each other unless otherwise specified.</p><p id="p-0040" num="0039">In this document, a video may refer to a series of images over time. A picture generally refers to the unit representing one image at a particular time frame, and a slice/tile refers to the unit constituting a part of the picture in terms of coding. A slice/tile may include one or more coding tree units (CTUs). One picture may consist of one or more slices/tiles. One picture may consist of one or more tile groups. One tile group may include one or more tiles.</p><p id="p-0041" num="0040">A pixel or a pel may mean a smallest unit constituting one picture (or image). Also, &#x2018;sample&#x2019; may be used as a term corresponding to a pixel. A sample may generally represent a pixel or a value of a pixel, and may represent only a pixel/pixel value of a luma component or only a pixel/pixel value of a chroma component.</p><p id="p-0042" num="0041">A unit may represent a basic unit of image processing. The unit may include at least one of a specific region of the picture and information related to the region. One unit may include one luma block and two chroma (ex. cb, cr) blocks. The unit may be used interchangeably with terms such as block or area in some cases. In a general case, an M&#xd7;N block may include samples (or sample arrays) or a set (or array) of transform coefficients of M columns and N rows. Alternatively, the sample may mean a pixel value in the spatial domain, and when such a pixel value is transformed to the frequency domain, it may mean a transform coefficient in the frequency domain.</p><p id="p-0043" num="0042">In this document, the term &#x201c;/&#x201d; and &#x201c;,&#x201d; should be interpreted to indicate &#x201c;and/or.&#x201d; For instance, the expression &#x201c;A/B&#x201d; may mean &#x201c;A and/or B.&#x201d; Further, &#x201c;A, B&#x201d; may mean &#x201c;A and/or B.&#x201d; Further, &#x201c;A/B/C&#x201d; may mean &#x201c;at least one of A, B, and/or C.&#x201d; Also, &#x201c;A/B/C&#x201d; may mean &#x201c;at least one of A, B, and/or C.&#x201d;</p><p id="p-0044" num="0043">Further, in the document, the term &#x201c;or&#x201d; should be interpreted to indicate &#x201c;and/or.&#x201d; For instance, the expression &#x201c;A or B&#x201d; may comprise 1) only A, 2) only B, and/or 3) both A and B. In other words, the term &#x201c;or&#x201d; in this document should be interpreted to indicate &#x201c;additionally or alternatively.&#x201d;</p><p id="p-0045" num="0044">In the present specification, &#x201c;at least one of A and B&#x201d; may mean &#x201c;only A&#x201d;, &#x201c;only B&#x201d;, or &#x201c;both A and B&#x201d;. Further, in the present specification, the expression &#x201c;at least one of A or B&#x201d; or &#x201c;at least one of A and/or B&#x201d; may be interpreted the same as &#x201c;at least one of A and B&#x201d;.</p><p id="p-0046" num="0045">Further, in the present specification, &#x201c;at least one of A, B and C&#x201d; may mean &#x201c;only A&#x201d;, &#x201c;only B&#x201d;, &#x201c;only C&#x201d;, or &#x201c;any combination of A, B and C&#x201d;. Further, &#x201c;at least one of A, B or C&#x201d; or &#x201c;at least one of A, B and/or C&#x201d; may mean &#x201c;at least one of A, B and C&#x201d;.</p><p id="p-0047" num="0046">Further, the parentheses used in the present specification may mean &#x201c;for example&#x201d;. Specifically, in the case that &#x201c;prediction (intra prediction)&#x201d; is expressed, it may be indicated that &#x201c;intra prediction&#x201d; is proposed as an example of &#x201c;prediction&#x201d;. In other words, the term &#x201c;prediction&#x201d; in the present specification is not limited to &#x201c;intra prediction&#x201d;, and it may be indicated that &#x201c;intra prediction&#x201d; is proposed as an example of &#x201c;prediction&#x201d;. Further, even in the case that &#x201c;prediction (i.e., intra prediction)&#x201d; is expressed, it may be indicated that &#x201c;intra prediction&#x201d; is proposed as an example of &#x201c;prediction&#x201d;.</p><p id="p-0048" num="0047">In the present specification, technical features individually explained in one drawing may be individually implemented, or may be simultaneously implemented.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a video/image coding system to which the disclosure of the present document may be applied.</p><p id="p-0050" num="0049">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a video/image coding system may include a source device and a reception device. The source device may transmit encoded video/image information or data to the reception device through a digital storage medium or network in the form of a file or streaming.</p><p id="p-0051" num="0050">The source device may include a video source, an encoding apparatus, and a transmitter. The receiving device may include a receiver, a decoding apparatus, and a renderer. The encoding apparatus may be called a video/image encoding apparatus, and the decoding apparatus may be called a video/image decoding apparatus. The transmitter may be included in the encoding apparatus. The receiver may be included in the decoding apparatus. The renderer may include a display, and the display may be configured as a separate device or an external component.</p><p id="p-0052" num="0051">The video source may acquire video/image through a process of capturing, synthesizing, or generating the video/image. The video source may include a video/image capture device and/or a video/image generating device. The video/image capture device may include, for example, one or more cameras, video/image archives including previously captured video/images, and the like. The video/image generating device may include, for example, computers, tablets and smartphones, and may (electronically) generate video/images. For example, a virtual video/image may be generated through a computer or the like. In this case, the video/image capturing process may be replaced by a process of generating related data.</p><p id="p-0053" num="0052">The encoding apparatus may encode input video/image. The encoding apparatus may perform a series of processes such as prediction, transform, and quantization for compaction and coding efficiency. The encoded data (encoded video/image information) may be output in the form of a bitstream.</p><p id="p-0054" num="0053">The transmitter may transmit the encoded image/image information or data output in the form of a bitstream to the receiver of the receiving device through a digital storage medium or a network in the form of a file or streaming. The digital storage medium may include various storage mediums such as USB, SD, CD, DVD, Blu-ray, HDD, SSD, and the like. The transmitter may include an element for generating a media file through a predetermined file format and may include an element for transmission through a broadcast/communication network. The receiver may receive/extract the bitstream and transmit the received bitstream to the decoding apparatus.</p><p id="p-0055" num="0054">The decoding apparatus may decode the video/image by performing a series of processes such as dequantization, inverse transform, and prediction corresponding to the operation of the encoding apparatus.</p><p id="p-0056" num="0055">The renderer may render the decoded video/image. The rendered video/image may be displayed through the display.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram schematically illustrating the configuration of a video/image encoding apparatus to which the disclosure of the present document may be applied. Hereinafter, what is referred to as the video encoding apparatus may include an image encoding apparatus.</p><p id="p-0058" num="0057">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the encoding apparatus <b>200</b> may include and be configured with an image partitioner <b>210</b>, a predictor <b>220</b>, a residual processor <b>230</b>, an entropy encoder <b>240</b>, an adder <b>250</b>, a filter <b>260</b>, and a memory <b>270</b>. The predictor <b>220</b> may include an inter predictor <b>221</b> and an intra predictor <b>222</b>. The residual processor <b>230</b> may include a transformer <b>232</b>, a quantizer <b>233</b>, a dequantizer <b>234</b>, and an inverse transformer <b>235</b>. The residual processor <b>230</b> may further include a subtractor <b>231</b>. The adder <b>250</b> may be called a reconstructor or reconstructed block generator. The image partitioner <b>210</b>, the predictor <b>220</b>, the residual processor <b>230</b>, the entropy encoder <b>240</b>, the adder <b>250</b>, and the filter <b>260</b>, which have been described above, may be configured by one or more hardware components (e.g., encoder chipsets or processors) according to an embodiment. In addition, the memory <b>270</b> may include a decoded picture buffer (DPB), and may also be configured by a digital storage medium. The hardware component may further include the memory <b>270</b> as an internal/external component.</p><p id="p-0059" num="0058">The image partitioner <b>210</b> may split an input image (or, picture, frame) input to the encoding apparatus <b>200</b> into one or more processing units. As an example, the processing unit may be called a coding unit (CU). In this case, the coding unit may be recursively split according to a Quad-tree binary-tree ternary-tree (QTBTTT) structure from a coding tree unit (CTU) or the largest coding unit (LCU). For example, one coding unit may be split into a plurality of coding units of a deeper depth based on a quad-tree structure, a binary-tree structure, and/or a ternary-tree structure. In this case, for example, the quad-tree structure is first applied and the binary-tree structure and/or the ternary-tree structure may be later applied. Alternatively, the binary-tree structure may also be first applied. A coding process according to the present disclosure may be performed based on a final coding unit which is not split any more. In this case, based on coding efficiency according to image characteristics or the like, the maximum coding unit may be directly used as the final coding unit, or as necessary, the coding unit may be recursively split into coding units of a deeper depth, such that a coding unit having an optimal size may be used as the final coding unit. Here, the coding process may include a process such as prediction, transform, and reconstruction to be described later. As another example, the processing unit may further include a prediction unit (PU) or a transform unit (TU). In this case, each of the prediction unit and the transform unit may be split or partitioned from the aforementioned final coding unit. The prediction unit may be a unit of sample prediction, and the transform unit may be a unit for inducing a transform coefficient and/or a unit for inducing a residual signal from the transform coefficient.</p><p id="p-0060" num="0059">The unit may be interchangeably used with the term such as a block or an area in some cases. Generally, an M&#xd7;N block may represent samples composed of M columns and N rows or a group of transform coefficients. The sample may generally represent a pixel or a value of the pixel, and may also represent only the pixel/pixel value of a luma component, and also represent only the pixel/pixel value of a chroma component. The sample may be used as the term corresponding to a pixel or a pel configuring one picture (or image).</p><p id="p-0061" num="0060">The subtractor <b>231</b> may generate a residual signal (residual block, residual samples, or residual sample array) by subtracting a prediction signal (predicted block, prediction samples, or prediction sample array) output from the predictor <b>220</b> from an input image signal (original block, original samples, or original sample array), and the generated residual signal is transmitted to the transformer <b>232</b>. The predictor <b>220</b> may perform prediction for a processing target block (hereinafter, referred to as a &#x201c;current block&#x201d;), and generate a predicted block including prediction samples for the current block. The predictor <b>220</b> may determine whether intra prediction or inter prediction is applied on a current block or in a CU unit. As described later in the description of each prediction mode, the predictor may generate various kinds of information related to prediction, such as prediction mode information, and transfer the generated information to the entropy encoder <b>240</b>. The information on the prediction may be encoded in the entropy encoder <b>240</b> and output in the form of a bitstream.</p><p id="p-0062" num="0061">The intra predictor <b>222</b> may predict a current block with reference to samples within a current picture. The referenced samples may be located neighboring to the current block, or may also be located away from the current block according to the prediction mode. The prediction modes in the intra prediction may include a plurality of non-directional modes and a plurality of directional modes. The non-directional mode may include, for example, a DC mode or a planar mode. The directional mode may include, for example, 33 directional prediction modes or 65 directional prediction modes according to the fine degree of the prediction direction. However, this is illustrative and the directional prediction modes which are more or less than the above number may be used according to the setting. The intra predictor <b>222</b> may also determine the prediction mode applied to the current block using the prediction mode applied to the neighboring block.</p><p id="p-0063" num="0062">The inter predictor <b>221</b> may induce a predicted block of the current block based on a reference block (reference sample array) specified by a motion vector on a reference picture. At this time, in order to decrease the amount of motion information transmitted in the inter prediction mode, the motion information may be predicted in units of a block, a sub-block, or a sample based on the correlation of the motion information between the neighboring block and the current block. The motion information may include a motion vector and a reference picture index. The motion information may further include inter prediction direction (L0 prediction, L1 prediction, Bi prediction, or the like) information. In the case of the inter prediction, the neighboring block may include a spatial neighboring block existing within the current picture and a temporal neighboring block existing in the reference picture. The reference picture including the reference block and the reference picture including the temporal neighboring block may also be the same as each other, and may also be different from each other. The temporal neighboring block may be called the name such as a collocated reference block, a collocated CU (colCU), or the like, and the reference picture including the temporal neighboring block may also be called a collocated picture (colPic). For example, the inter predictor <b>221</b> may configure a motion information candidate list based on the neighboring blocks, and generate information indicating what candidate is used to derive the motion vector and/or the reference picture index of the current block. The inter prediction may be performed based on various prediction modes, and for example, in the case of a skip mode and a merge mode, the inter predictor <b>221</b> may use the motion information of the neighboring block as the motion information of the current block. In the case of the skip mode, the residual signal may not be transmitted unlike the merge mode. A motion vector prediction (MVP) mode may indicate the motion vector of the current block by using the motion vector of the neighboring block as a motion vector predictor, and signaling a motion vector difference.</p><p id="p-0064" num="0063">The predictor <b>220</b> may generate a prediction signal based on various prediction methods described below. For example, the predictor may not only apply intra prediction or inter prediction to predict one block but also simultaneously apply both intra prediction and inter prediction. This may be called combined inter and intra prediction (CIIP). In addition, the predictor may perform an intra block copy (IBC) for prediction of a block. The intra block copy may be used for content image/moving image coding of a game or the like, for example, screen content coding (SCC). The IBC basically performs prediction in the current picture, but may be performed similarly to inter prediction in that a reference block is derived in the current picture. That is, the IBC may use at least one of inter prediction techniques described in the present document.</p><p id="p-0065" num="0064">The prediction signal generated through the inter predictor <b>221</b> and/or the intra predictor <b>222</b> may be used to generate a reconstructed signal or to generate a residual signal. The transformer <b>232</b> may generate transform coefficients by applying a transform technique to the residual signal. For example, the transform technique may include at least one of a discrete cosine transform (DCT), a discrete sine transform (DST), a graph-based transform (GBT), or a conditionally non-linear transform (CNT). Here, the GBT means transform obtained from a graph when relationship information between pixels is represented by the graph. The CNT refers to the transform obtained based on a prediction signal generated using all previously reconstructed pixels. In addition, the transform process may be applied to square pixel blocks having the same size, or may be applied to blocks having a variable size rather than a square.</p><p id="p-0066" num="0065">The quantizer <b>233</b> may quantize the transform coefficients and transmit them to the entropy encoder <b>240</b>, and the entropy encoder <b>240</b> may encode the quantized signal (information on the quantized transform coefficients) and output a bitstream. The information on the quantized transform coefficients may be referred to as residual information. The quantizer <b>233</b> may rearrange block type quantized transform coefficients into a one-dimensional vector form based on a coefficient scanning order, and generate information on the quantized transform coefficients based on the quantized transform coefficients in the one-dimensional vector form. The entropy encoder <b>240</b> may perform various encoding methods such as, for example, exponential Golomb, context-adaptive variable length coding (CAVLC), context-adaptive binary arithmetic coding (CABAC), and the like. The entropy encoder <b>240</b> may encode information necessary for video/image reconstruction together with or separately from the quantized transform coefficients (e.g., values of syntax elements and the like). Encoded information (e.g., encoded video/image information) may be transmitted or stored in the unit of a network abstraction layer (NAL) in the form of a bitstream. The video/image information may further include information on various parameter sets, such as an adaptation parameter set (APS), a picture parameter set (PPS), a sequence parameter set (SPS), or a video parameter set (VPS). In addition, the video/image information may further include general constraint information. In the present document, information and/or syntax elements being signaled/transmitted to be described later may be encoded through the above-described encoding process, and be included in the bitstream. The bitstream may be transmitted through a network, or may be stored in a digital storage medium. Here, the network may include a broadcasting network and/or a communication network, and the digital storage medium may include various storage media, such as USB, SD, CD, DVD, Blu-ray, HDD, SSD, and the like. A transmitter (not illustrated) transmitting a signal output from the entropy encoder <b>240</b> and/or a storage unit (not illustrated) storing the signal may be configured as an internal/external element of the encoding apparatus <b>200</b>, and alternatively, the transmitter may be included in the entropy encoder <b>240</b>.</p><p id="p-0067" num="0066">The quantized transform coefficients output from the quantizer <b>233</b> may be used to generate a prediction signal. For example, the residual signal (residual block or residual samples) may be reconstructed by applying dequantization and inverse transform to the quantized transform coefficients through the dequantizer <b>234</b> and the inverse transformer <b>235</b>. The adder <b>250</b> adds the reconstructed residual signal to the prediction signal output from the predictor <b>220</b> to generate a reconstructed signal (reconstructed picture, reconstructed block, reconstructed samples, or reconstructed sample array). If there is no residual for the processing target block, such as a case that a skip mode is applied, the predicted block may be used as the reconstructed block. The generated reconstructed signal may be used for intra prediction of a next processing target block in the current picture, and may be used for inter prediction of a next picture through filtering as described below.</p><p id="p-0068" num="0067">Meanwhile, luma mapping with chroma scaling (LMCS) may be applied during a picture encoding and/or reconstruction process.</p><p id="p-0069" num="0068">The filter <b>260</b> may improve subjective/objective image quality by applying filtering to the reconstructed signal. For example, the filter <b>260</b> may generate a modified reconstructed picture by applying various filtering methods to the reconstructed picture, and store the modified reconstructed picture in the memory <b>270</b>, specifically, in a DPB of the memory <b>270</b>. The various filtering methods may include, for example, deblocking filtering, a sample adaptive offset (SAO), an adaptive loop filter, a bilateral filter, and the like. The filter <b>260</b> may generate various kinds of information related to the filtering, and transfer the generated information to the entropy encoder <b>290</b> as described later in the description of each filtering method. The information related to the filtering may be encoded by the entropy encoder <b>290</b> and output in the form of a bitstream.</p><p id="p-0070" num="0069">The modified reconstructed picture transmitted to the memory <b>270</b> may be used as a reference picture in the inter predictor <b>221</b>. When the inter prediction is applied through the encoding apparatus, prediction mismatch between the encoding apparatus <b>200</b> and the decoding apparatus can be avoided and encoding efficiency can be improved.</p><p id="p-0071" num="0070">The DPB of the memory <b>270</b> may store the modified reconstructed picture for use as the reference picture in the inter predictor <b>221</b>. The memory <b>270</b> may store motion information of a block from which the motion information in the current picture is derived (or encoded) and/or motion information of blocks in the picture, having already been reconstructed. The stored motion information may be transferred to the inter predictor <b>221</b> to be utilized as motion information of the spatial neighboring block or motion information of the temporal neighboring block. The memory <b>270</b> may store reconstructed samples of reconstructed blocks in the current picture, and may transfer the reconstructed samples to the intra predictor <b>222</b>.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram for schematically explaining the configuration of a video/image decoding apparatus to which the disclosure of the present document may be applied.</p><p id="p-0073" num="0072">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the decoding apparatus <b>300</b> may include and configured with an entropy decoder <b>310</b>, a residual processor <b>320</b>, a predictor <b>330</b>, an adder <b>340</b>, a filter <b>350</b>, and a memory <b>360</b>. The predictor <b>330</b> may include an inter predictor <b>331</b> and an intra predictor <b>332</b>. The residual processor <b>320</b> may include a dequantizer <b>321</b> and an inverse transformer <b>322</b>. The entropy decoder <b>310</b>, the residual processor <b>320</b>, the predictor <b>330</b>, the adder <b>340</b>, and the filter <b>350</b>, which have been described above, may be configured by one or more hardware components (e.g., decoder chipsets or processors) according to an embodiment. Further, the memory <b>360</b> may include a decoded picture buffer (DPB), and may be configured by a digital storage medium. The hardware component may further include the memory <b>360</b> as an internal/external component.</p><p id="p-0074" num="0073">When the bitstream including the video/image information is input, the decoding apparatus <b>300</b> may reconstruct the image in response to a process in which the video/image information is processed in the encoding apparatus illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. For example, the decoding apparatus <b>300</b> may derive the units/blocks based on block split-related information acquired from the bitstream. The decoding apparatus <b>300</b> may perform decoding using the processing unit applied to the encoding apparatus. Therefore, the processing unit for the decoding may be, for example, a coding unit, and the coding unit may be split according to the quad-tree structure, the binary-tree structure, and/or the ternary-tree structure from the coding tree unit or the maximum coding unit. One or more transform units may be derived from the coding unit. In addition, the reconstructed image signal decoded and output through the decoding apparatus <b>300</b> may be reproduced through a reproducing apparatus.</p><p id="p-0075" num="0074">The decoding apparatus <b>300</b> may receive a signal output from the encoding apparatus of <figref idref="DRAWINGS">FIG. <b>2</b></figref> in the form of a bitstream, and the received signal may be decoded through the entropy decoder <b>310</b>. For example, the entropy decoder <b>310</b> may parse the bitstream to derive information (e.g., video/image information) necessary for image reconstruction (or picture reconstruction). The video/image information may further include information on various parameter sets such as an adaptation parameter set (APS), a picture parameter set (PPS), a sequence parameter set (SPS), or a video parameter set (VPS). In addition, the video/image information may further include general constraint information. The decoding apparatus may further decode picture based on the information on the parameter set and/or the general constraint information. Signaled/received information and/or syntax elements described later in this document may be decoded may decode the decoding process and obtained from the bitstream. For example, the entropy decoder <b>310</b> decodes the information in the bitstream based on a coding method such as exponential Golomb coding, CAVLC, or CAB AC, and output syntax elements required for image reconstruction and quantized values of transform coefficients for residual. More specifically, the CABAC entropy decoding method may receive a bin corresponding to each syntax element in the bitstream, determine a context model by using a decoding target syntax element information, decoding information of a decoding target block or information of a symbol/bin decoded in a previous stage, and perform an arithmetic decoding on the bin by predicting a probability of occurrence of a bin according to the determined context model, and generate a symbol corresponding to the value of each syntax element. In this case, the CABAC entropy decoding method may update the context model by using the information of the decoded symbol/bin for a context model of a next symbol/bin after determining the context model. The information related to the prediction among the information decoded by the entropy decoder <b>310</b> may be provided to the predictor <b>330</b>, and information on the residual on which the entropy decoding has been performed in the entropy decoder <b>310</b>, that is, the quantized transform coefficients and related parameter information, may be input to the dequantizer <b>321</b>. In addition, information on filtering among information decoded by the entropy decoder <b>310</b> may be provided to the filter <b>350</b>. Meanwhile, a receiver (not illustrated) for receiving a signal output from the encoding apparatus may be further configured as an internal/external element of the decoding apparatus <b>300</b>, or the receiver may be a constituent element of the entropy decoder <b>310</b>. Meanwhile, the decoding apparatus according to the present document may be referred to as a video/image/picture decoding apparatus, and the decoding apparatus may be classified into an information decoder (video/image/picture information decoder) and a sample decoder (video/image/picture sample decoder). The information decoder may include the entropy decoder <b>310</b>, and the sample decoder may include at least one of the dequantizer <b>321</b>, the inverse transformer <b>322</b>, the predictor <b>330</b>, the adder <b>340</b>, the filter <b>350</b>, and the memory <b>360</b>.</p><p id="p-0076" num="0075">The dequantizer <b>321</b> may dequantize the quantized transform coefficients to output the transform coefficients. The dequantizer <b>321</b> may rearrange the quantized transform coefficients in a two-dimensional block form. In this case, the rearrangement may be performed based on a coefficient scan order performed by the encoding apparatus. The dequantizer <b>321</b> may perform dequantization for the quantized transform coefficients using a quantization parameter (e.g., quantization step size information), and acquire the transform coefficients.</p><p id="p-0077" num="0076">The inverse transformer <b>322</b> inversely transforms the transform coefficients to acquire the residual signal (residual block, residual sample array).</p><p id="p-0078" num="0077">The predictor <b>330</b> may perform the prediction of the current block, and generate a predicted block including the prediction samples of the current block. The predictor may determine whether the intra prediction is applied or the inter prediction is applied to the current block based on the information about prediction output from the entropy decoder <b>310</b>, and determine a specific intra/inter prediction mode.</p><p id="p-0079" num="0078">The predictor may generate a prediction signal based on various prediction methods described below. For example, the predictor may not only apply intra prediction or inter prediction to predict one block but also simultaneously apply intra prediction and inter prediction. This may be called combined inter and intra prediction (CIIP). In addition, the predictor may perform an intra block copy (IBC) for prediction of a block. The intra block copy may be used for content image/moving image coding of a game or the like, for example, screen content coding (SCC). The IBC basically performs prediction in the current picture, but may be performed similarly to inter prediction in that a reference block is derived in the current picture. That is, the IBC may use at least one of inter prediction techniques described in the present document.</p><p id="p-0080" num="0079">The intra predictor <b>332</b> may predict the current block by referring to the samples in the current picture. The referred samples may be located in the neighborhood of the current block, or may be located apart from the current block according to the prediction mode. In intra prediction, prediction modes may include a plurality of non-directional modes and a plurality of directional modes. The intra predictor <b>332</b> may determine the prediction mode to be applied to the current block by using the prediction mode applied to the neighboring block.</p><p id="p-0081" num="0080">The inter predictor <b>331</b> may derive a predicted block for the current block based on a reference block (reference sample array) specified by a motion vector on a reference picture. In this case, in order to reduce the amount of motion information being transmitted in the inter prediction mode, motion information may be predicted in the unit of blocks, subblocks, or samples based on correlation of motion information between the neighboring block and the current block. The motion information may include a motion vector and a reference picture index. The motion information may further include information on inter prediction direction (L0 prediction, L1 prediction, Bi prediction, and the like). In case of inter prediction, the neighboring block may include a spatial neighboring block existing in the current picture and a temporal neighboring block existing in the reference picture. For example, the inter predictor <b>331</b> may construct a motion information candidate list based on neighboring blocks, and derive a motion vector of the current block and/or a reference picture index based on the received candidate selection information. Inter prediction may be performed based on various prediction modes, and the information on the prediction may include information indicating a mode of inter prediction for the current block.</p><p id="p-0082" num="0081">The adder <b>340</b> may generate a reconstructed signal (reconstructed picture, reconstructed block, or reconstructed sample array) by adding the obtained residual signal to the prediction signal (predicted block or predicted sample array) output from the predictor <b>330</b>. If there is no residual for the processing target block, such as a case that a skip mode is applied, the predicted block may be used as the reconstructed block.</p><p id="p-0083" num="0082">The adder <b>340</b> may be called a reconstructor or a reconstructed block generator. The generated reconstructed signal may be used for the intra prediction of a next block to be processed in the current picture, and as described later, may also be output through filtering or may also be used for the inter prediction of a next picture.</p><p id="p-0084" num="0083">Meanwhile, a luma mapping with chroma scaling (LMCS) may also be applied in the picture decoding process.</p><p id="p-0085" num="0084">The filter <b>350</b> may improve subjective/objective image quality by applying filtering to the reconstructed signal. For example, the filter <b>350</b> may generate a modified reconstructed picture by applying various filtering methods to the reconstructed picture, and store the modified reconstructed picture in the memory <b>360</b>, specifically, in a DPB of the memory <b>360</b>. The various filtering methods may include, for example, deblocking filtering, a sample adaptive offset, an adaptive loop filter, a bilateral filter, and the like.</p><p id="p-0086" num="0085">The (modified) reconstructed picture stored in the DPB of the memory <b>360</b> may be used as a reference picture in the inter predictor <b>331</b>. The memory <b>360</b> may store the motion information of the block from which the motion information in the current picture is derived (or decoded) and/or the motion information of the blocks in the picture having already been reconstructed. The stored motion information may be transferred to the inter predictor <b>331</b> so as to be utilized as the motion information of the spatial neighboring block or the motion information of the temporal neighboring block. The memory <b>360</b> may store reconstructed samples of reconstructed blocks in the current picture, and transfer the reconstructed samples to the intra predictor <b>332</b>.</p><p id="p-0087" num="0086">In the present specification, the embodiments described in the predictor <b>330</b>, the dequantizer <b>321</b>, the inverse transformer <b>322</b>, and the filter <b>350</b> of the decoding apparatus <b>300</b> may also be applied in the same manner or corresponding to the predictor <b>220</b>, the dequantizer <b>234</b>, the inverse transformer <b>235</b>, and the filter <b>260</b> of the encoding apparatus <b>200</b>.</p><p id="p-0088" num="0087">Meanwhile, as described above, in performing video coding, prediction is performed to improve compression efficiency. Through this, a predicted block including prediction samples for a current block as a block to be coded (i.e., a coding target block) may be generated. Here, the predicted block includes prediction samples in a spatial domain (or pixel domain). The predicted block is derived in the same manner in an encoding apparatus and a decoding apparatus, and the encoding apparatus may signal information (residual information) on residual between the original block and the predicted block, rather than an original sample value of an original block, to the decoding apparatus, thereby increasing image coding efficiency. The decoding apparatus may derive a residual block including residual samples based on the residual information, add the residual block and the predicted block to generate reconstructed blocks including reconstructed samples, and generate a reconstructed picture including the reconstructed blocks.</p><p id="p-0089" num="0088">The residual information may be generated through a transform and quantization process. For example, the encoding apparatus may derive a residual block between the original block and the predicted block, perform a transform process on residual samples (residual sample array) included in the residual block to derive transform coefficients, perform a quantization process on the transform coefficients to derive quantized transform coefficients, and signal related residual information to the decoding apparatus (through a bit stream). Here, the residual information may include value information of the quantized transform coefficients, location information, a transform technique, a transform kernel, a quantization parameter, and the like. The decoding apparatus may perform dequantization/inverse transform process based on the residual information and derive residual samples (or residual blocks). The decoding apparatus may generate a reconstructed picture based on the predicted block and the residual block. Also, for reference for inter prediction of a picture afterward, the encoding apparatus may also dequantize/inverse-transform the quantized transform coefficients to derive a residual block and generate a reconstructed picture based thereon.</p><p id="p-0090" num="0089">In this document, at least one of quantization/dequantization and/or transform/inverse transform may be omitted. When the quantization/dequantization is omitted, the quantized transform coefficient may be referred to as a transform coefficient. When the transform/inverse transform is omitted, the transform coefficient may be called a coefficient or a residual coefficient or may still be called the transform coefficient for uniformity of expression.</p><p id="p-0091" num="0090">In this document, the quantized transform coefficient and the transform coefficient may be referred to as a transform coefficient and a scaled transform coefficient, respectively. In this case, the residual information may include information on transform coefficient(s), and the information on the transform coefficient(s) may be signaled through residual coding syntax. Transform coefficients may be derived based on the residual information (or information on the transform coefficient(s)), and scaled transform coefficients may be derived through inverse transform (scaling) on the transform coefficients. Residual samples may be derived based on inverse transform (transform) of the scaled transform coefficients. This may be applied/expressed in other parts of this document as well.</p><p id="p-0092" num="0091">The predictor of the encoding apparatus/decoding apparatus may derive prediction samples by performing inter prediction in units of blocks. Inter prediction can be a prediction derived in a manner that is dependent on data elements (e.g. sample values or motion information, etc) of picture(s) other than the current picture. When the inter prediction is applied to the current block, based on the reference block (reference sample arrays) specified by the motion vector on the reference picture pointed to by the reference picture index, the predicted block (prediction sample arrays) for the current block can be derived. In this case, in order to reduce the amount of motion information transmitted in the inter prediction mode, the motion information of the current block may be predicted in units of blocks, subblocks, or samples based on the correlation between the motion information between neighboring blocks and the current block. The motion information may include the motion vector and the reference picture index. The motion information may further include inter prediction type (L0 prediction, L1 prediction, Bi prediction, etc.) information. When the inter prediction is applied, the neighboring blocks may include a spatial neighboring block existing in the current picture and a temporal neighboring block existing in the reference picture. The reference picture including the reference block and the reference picture including the temporal neighboring block may be the same or different. The temporal neighboring block may be called a collocated reference block, a collocated CU (colCU), etc., and a reference picture including the temporally neighboring block may be called a collocated picture (colPic). For example, a motion information candidate list may be constructed based on neighboring blocks of the current block, and a flag or index information indicating which candidate is selected (used) to derive the motion vector and/or the reference picture index of the current block may be signaled. The inter prediction may be performed based on various prediction modes. For example, in the skip mode and the merge mode, the motion information of the current block may be the same as the motion information of a selected neighboring block. In the skip mode, unlike the merge mode, a residual signal may not be transmitted. In the case of a motion vector prediction (MVP) mode, a motion vector of a selected neighboring block may be used as a motion vector predictor, and a motion vector difference may be signaled. In this case, the motion vector of the current block may be derived using the sum of the motion vector predictor and the motion vector difference.</p><p id="p-0093" num="0092">The motion information may include L0 motion information and/or L1 motion information according to an inter prediction type (L0 prediction, L1 prediction, Bi prediction, etc.). A motion vector in the L0 direction may be referred to as an L0 motion vector or MVL0, and a motion vector in the L1 direction may be referred to as an L1 motion vector or MVL1. The prediction based on the L0 motion vector may be called L0 prediction, the prediction based on the L1 motion vector may be called the L1 prediction, and the prediction based on both the L0 motion vector and the L1 motion vector may be called a bi-prediction. Here, the L0 motion vector may indicate a motion vector associated with the reference picture list L0 (L0), and the L1 motion vector may indicate a motion vector associated with the reference picture list L1 (L1). The reference picture list L0 may include pictures that are previous than the current picture in output order as reference pictures, and the reference picture list L1 may include pictures that are subsequent than the current picture in output order. The previous pictures may be called forward (reference) pictures, and the subsequent pictures may be called backward (reference) pictures. The reference picture list L0 may further include pictures that are subsequent than the current picture in output order as reference pictures. In this case, the previous pictures may be indexed first, and the subsequent pictures may be indexed next in the reference picture list L0. The reference picture list L1 may further include pictures previous than the current picture in output order as reference pictures. In this case, the subsequent pictures may be indexed first in the reference picture list <b>1</b> and the previous pictures may be indexed next. Here, the output order may correspond to a picture order count (POC) order.</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>4</b></figref> exemplarily shows a hierarchical structure for a coded image/video.</p><p id="p-0095" num="0094">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the coded image/video is divided into VCL (video coding layer) that deals with an image/video decoding process and itself, a subsystem that transmits and stores the coded information, and a network abstraction layer (NAL) that exists between the VCL and subsystems and is responsible for network adaptation functions.</p><p id="p-0096" num="0095">The VCL may generate VCL data including compressed image data (slice data), or generate parameter sets including a picture parameter set (Picture Parameter Set: PPS), a sequence parameter set (Sequence Parameter Set: SPS), a video parameter set (Video Parameter Set: VPS) etc. or a supplemental enhancement information (SEI) message additionally necessary for the decoding process of an image.</p><p id="p-0097" num="0096">In the NAL, a NAL unit may be generated by adding header information (NAL unit header) to a raw byte sequence payload (RBSP) generated in the VCL. In this case, the RBSP refers to slice data, parameter sets, SEI messages, etc. generated in the VCL. The NAL unit header may include NAL unit type information specified according to RBSP data included in the corresponding NAL unit.</p><p id="p-0098" num="0097">As shown in the figure, the NAL unit may be divided into a VCL NAL unit and a Non-VCL NAL unit according to the RBSP generated in the VCL. The VCL NAL unit may mean a NAL unit including information (sliced data) about an image, and the Non-VCL NAL unit may mean a NAL unit containing information (parameter set or SEI message) necessary for decoding an image.</p><p id="p-0099" num="0098">The above-described VCL NAL unit and Non-VCL NAL unit may be transmitted through a network by attaching header information according to a data standard of the subsystem. For example, the NAL unit may be transformed into a data form of a predetermined standard such as H.266/VVC file format, Real-time Transport Protocol (RTP), Transport Stream (TS), etc. and transmitted through various networks.</p><p id="p-0100" num="0099">As described above, in the NAL unit, the NAL unit type may be specified according to the RBSP data structure included in the corresponding NAL unit, and information on this NAL unit type may be stored and signaled in the NAL unit header.</p><p id="p-0101" num="0100">For example, the NAL unit may be roughly classified into the VCL NAL unit type and the Non-VCL NAL unit type depending on whether the NAL unit includes information about the image (slice data). The VCL NAL unit type may be classified according to property and a type of a picture included in the VCL NAL unit, and the Non-VCL NAL unit type may be classified according to the type of a parameter set.</p><p id="p-0102" num="0101">The following is an example of the NAL unit type specified according to the type of parameter set included in the Non-VCL NAL unit type.<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0102">APS (Adaptation Parameter Set) NAL unit: Type for NAL unit including APS</li>        <li id="ul0002-0002" num="0103">DPS (Decoding Parameter Set) NAL unit: Type for NAL unit including DPS</li>        <li id="ul0002-0003" num="0104">VPS (Video Parameter Set) NAL unit: Type for NAL unit including VPS</li>        <li id="ul0002-0004" num="0105">SPS (Sequence Parameter Set) NAL unit: Type for NAL unit including SPS</li>        <li id="ul0002-0005" num="0106">PPS (Picture Parameter Set) NAL unit: Type for NAL unit including PPS</li>        <li id="ul0002-0006" num="0107">PH (Picture header) NAL unit: Type for NAL unit including PH</li>    </ul>    </li></ul></p><p id="p-0103" num="0108">The above-described NAL unit types have syntax information for the NAL unit type, and the syntax information may be stored and signaled in the NAL unit header. For example, the syntax information may be nal_unit_type, and NAL unit types may be specified by a nal_unit_type value.</p><p id="p-0104" num="0109">Meanwhile, as described above, one picture may include a plurality of slices, and one slice may include a slice header and slice data. In this case, one picture header may be further added to a plurality of slices (a slice header and a slice data set) in one picture. The picture header (picture header syntax) may include information/parameters commonly applicable to the picture. In this document, a slice may be mixed or replaced with a tile group. Also, in this document, a slice header may be mixed or replaced with a type group header.</p><p id="p-0105" num="0110">The slice header (slice header syntax or slice header information) may include information/parameters commonly applicable to the slice. The APS (APS syntax) or PPS (PPS syntax) may include information/parameters commonly applicable to one or more slices or pictures. The SPS (SPS syntax) may include information/parameters commonly applicable to one or more sequences. The VPS (VPS syntax) may include information/parameters commonly applicable to multiple layers. The DPS (DPS syntax) may include information/parameters commonly applicable to the entire video. The DPS may include information/parameters related to concatenation of a coded video sequence (CVS). In this document, high level syntax (HLS) may include at least one of the APS syntax, PPS syntax, SPS syntax, VPS syntax, DPS syntax, picture header syntax, and slice header syntax.</p><p id="p-0106" num="0111">In this document, the image/video information encoded in the encoding apparatus and signaled in the form of a bitstream to the decoding apparatus may include, as well as picture partitioning-related information in the picture, intra/inter prediction information, residual information, in-loop filtering information, etc. the information included in the slice header, the information included in the picture header, the information included in the APS, the information included in the PPS, the information included in the SPS, the information included in the VPS, and/or the information included in the DPS. In addition, the image/video information may further include information of the NAL unit header.</p><p id="p-0107" num="0112">Meanwhile, in order to compensate for a difference between an original image and a reconstructed image due to an error occurring in a compression encoding process such as quantization, an in-loop filtering process may be performed on reconstructed samples or reconstructed pictures as described above. As described above, the in-loop filtering may be performed by the filter of the encoding apparatus and the filter of the decoding apparatus, and a deblocking filter, SAO, and/or adaptive loop filter (ALF) may be applied. For example, the ALF process may be performed after the deblocking filtering process and/or the SAO process are completed. However, even in this case, the deblocking filtering process and/or the SAO process may be omitted.</p><p id="p-0108" num="0113">Hereinafter, picture reconstruction and filtering will be described in detail. In image/video coding, a reconstructed block may be generated based on intra prediction/inter prediction in each block unit, and a reconstructed picture including the reconstructed blocks may be generated. When the current picture/slice is an I picture/slice, blocks included in the current picture/slice may be reconstructed based on only intra prediction. Meanwhile, when the current picture/slice is a P or B picture/slice, blocks included in the current picture/slice may be reconstructed based on intra prediction or inter prediction. In this case, intra prediction may be applied to some blocks in the current picture/slice, and inter prediction may be applied to the remaining blocks.</p><p id="p-0109" num="0114">The intra prediction may represent a prediction for generating prediction samples for the current block based on reference samples in the picture (hereinafter, current picture) to which the current block belongs. In case that the intra prediction is applied to the current block, neighboring reference samples to be used for the intra prediction of the current block may be derived. The neighboring reference samples of the current block may include a sample adjacent to a left boundary of the current block having a size of nW&#xd7;nH, total 2&#xd7;nH samples neighboring the bottom-left, a sample adjacent to the top boundary of the current block, total 2&#xd7;nW samples neighboring the top-right, and one sample neighboring the top-left of the current block. Alternatively, the neighboring reference samples of the current block may include top neighboring sample of plural columns and left neighboring sample of plural rows. Alternatively, the neighboring reference samples of the current block may include total nH samples adjacent to the right boundary of the current block having a size of nW&#xd7;nH, total nH samples adjacent to the right boundary of the current block, total nW samples adjacent to the bottom boundary of the current block, and one sample neighboring the bottom-right of the current block.</p><p id="p-0110" num="0115">However, some of the neighboring reference samples of the current block may have not yet been decoded or may not be available. In this case, the decoder may configure the neighboring reference samples to be used for the prediction through substitution of available samples for the unavailable samples. Alternatively, the neighboring reference samples to be used for the prediction may be configured through interpolation of the available samples.</p><p id="p-0111" num="0116">When neighboring reference samples are derived, there are two cases, that is, a case (i) in which a prediction sample may be derived based on an average or interpolation of neighboring reference samples of a current block, and a case (ii) in which the prediction sample may be derived based on a reference sample present in a specific (prediction) direction for the prediction sample among the neighboring reference samples of the current block. The case (i) may be called a non-directional mode or a non-angular mode, and the case (ii) may be called a directional mode or an angular mode. In addition, the prediction sample may also be generated through a first neighboring sample and a second neighboring sample located in a direction opposite to the prediction direction of the intra prediction mode of the current block based on the prediction sample of the current block among the neighboring reference samples. The above case may be referred to as linear interpolation intra prediction (LIP). In addition, chroma prediction samples may be generated based on luma samples by using a linear model. This case may be called an LM mode. In addition, a temporary prediction sample of the current block may be derived based on filtered neighboring reference samples. At least one reference sample, which is derived according to the intra prediction mode among the existing neighboring reference samples, that is, unfiltered neighboring reference samples, and the temporary prediction sample may be weighted-summed to derive the prediction sample of the current block. The above case may be called a position dependent intra prediction (PDPC). In addition, a reference sample line having the highest prediction accuracy among the neighboring multiple reference sample lines of the current block may be selected to derive the prediction sample by using the reference sample located in the prediction direction on the corresponding line, and the reference sample line used herein may be indicated (signaled) to a decoding apparatus, thereby performing intra-prediction encoding. The above case may be called multi-reference line (MRL) intra prediction or MRL-based intra prediction. In addition, intra prediction may be performed based on the same intra prediction mode by dividing the current block into vertical or horizontal sub-partitions, and neighboring reference samples may be derived and used in units of the sub-partitions. That is, in this case, the intra prediction mode for the current block is equally applied to the sub-partitions, and the intra prediction performance may be improved in some cases by deriving and using the neighboring reference samples in units of the sub-partitions. Such a prediction method may be called intra sub-partitions (ISP) or ISP-based intra prediction. The aforementioned intra prediction methods may be called an intra prediction type distinct to the intra prediction mode in the sections 1.2. The intra prediction type may be called in various terms such as an intra prediction technique or an additional intra prediction mode or the like. For example, the intra prediction type (or additional intra prediction mode or the like) may include at least one of the aforementioned LIP, PDPC, MRL, and ISP. A general intra prediction method except for the specific intra prediction type such as LIP, PDPC, MRL, or ISP may be called a normal intra prediction type. The normal intra prediction type may be generally applied when the specific intra prediction type is not applied, and prediction may be performed based on the aforementioned intra prediction mode. Meanwhile, optionally, post-processing filtering may be performed on the derived prediction sample.</p><p id="p-0112" num="0117">Specifically, the intra prediction process may include an operation of determining an intra prediction mode/type, an operation of deriving a neighboring reference sample, and an operation of deriving a prediction sample based on the intra prediction mode/type. In addition, optionally, a post-processing filtering operation may be performed on the derived prediction sample.</p><p id="p-0113" num="0118">A modified reconstructed picture may be generated through the in-loop filtering process, and the modified reconstructed picture may be output as a decoded picture in the decoding apparatus and may also be stored in a decoded picture buffer or memory of the encoding apparatus/decoding apparatus and used as a reference picture in the inter prediction process when the picture is encoded/decoded at a later time. The in-loop filtering process may include a deblocking filtering process, a sample adaptive offset (SAO) process, and/or an adaptive loop filter (ALF) process as described above. In this case, one or some of the deblocking filtering process, SAO process, ALF process, and bi-lateral filter process may be sequentially applied, or all of the processes may be sequentially applied. For example, the SAO process may be performed after the deblocking filtering process is applied to the reconstructed picture. Alternatively, for example, the ALF process may be performed after the deblocking filtering process is applied to the reconstructed picture. This may also be equally performed in the encoding apparatus.</p><p id="p-0114" num="0119">The deblocking filtering is a filtering technique which removes distortion occurring at boundaries between blocks in the reconstructed picture. The deblocking filtering process may, for example, derive a target boundary in the reconstructed picture, determine a boundary strength (bS) for the target boundary, and perform deblocking filtering on the target boundary, based on the bS. The bS may be determined based on a prediction mode, a motion vector difference, whether reference pictures are identical, whether a non-zero significant coefficient exists, etc., of two blocks adjacent to the target boundary.</p><p id="p-0115" num="0120">The SAO is a method in which an offset difference between the reconstructed picture and the original picture is compensated on a sample basis. For example, the SAO may be applied based on a type such as a band offset, an edge offset, or the like. According to the SAO, samples may be classified into different categories according to each SAO type, and an offset value may be added to each sample, based on the category. Filtering information for the SAO may include information on whether the SAO is applied, SAO type information, SAO offset value information, or the like. The SAO may be applied to the reconstructed picture after the deblocking filtering is applied.</p><p id="p-0116" num="0121">The ALF is a technique for filtering the reconstructed picture on a sample basis, based on filter coefficients according to a filter shape. The encoding apparatus may determine whether the ALF is applied, an ALF shape, and/or an ALF filtering coefficient or the like by comparing the reconstructed picture and the original picture, and may signal the determination result to the decoding apparatus. That is, the filtering information for the ALF may include information on whether the ALF is applied, ALF filter shape information, ALF filtering coefficient information, or the like. The ALF may be applied to the reconstructed picture after the deblocking filtering is applied.</p><p id="p-0117" num="0122"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example of an ALF filter shape.</p><p id="p-0118" num="0123">In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, (a) illustrates a 7&#xd7;7 diamond filter shape, and (b) illustrates a 5&#xd7;5 diamond filter shape. In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, Cn in the filter shape represents a filter coefficient. When n is identical in the Cn, it means that the same filter coefficient may be allocated. In the present document, a location and/or unit in which the filter coefficient is allocated according to the ALF filter shape may be called a filter tap. In this case, one filter coefficient may be allocated to each filter tap, and a shape in which the filter tap is arranged may correspond to a filter shape. A filter tap located at a center of the filter shape may be called a center filter tap. The same filter coefficient may be allocated to two filter taps having the same value n and present at locations corresponding to each other with respect to the center filter tap. For example, in case of the 7&#xd7;7 diamond filter shape, 25 filter taps are included, and filter coefficients C0 to C11 are allocated in a central symmetric shape. Therefore, filter coefficients may be allocated to the 25 filter taps by using only 13 filter coefficients. In addition, for example, in case of the 5&#xd7;5 diamond filter shape, 13 filter taps are included, and filter coefficients C0 to C5 are allocated in the central symmetric shape. Therefore, filter coefficients may be allocated to the 13 filter taps by using only 7 filters. For example, in order to decrease a data amount of information on filter coefficients to be signaled, 12 filter coefficients out of the 13 filter coefficient for the 7&#xd7;7 diamond filter shape may be (explicitly) signaled, and one filter coefficient may be (implicitly) derived. In addition, for example, 6 filter coefficients out of the 7 filter coefficients for the 5&#xd7;5 diamond filter shape may be (explicitly) signaled, and one filter coefficient may be (implicitly) derived.</p><p id="p-0119" num="0124"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a virtual boundary applied to a filtering process according to an embodiment of the present document.</p><p id="p-0120" num="0125">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a virtual boundary may be a line defined by shifting a horizontal CTU boundary by N samples. In an embodiment, N may be 4 for a luma component, and/or may be 2 for a chroma component.</p><p id="p-0121" num="0126">In <figref idref="DRAWINGS">FIG. <b>6</b></figref>, modified block classification may be applied for the luma component. For the 1D Laplacian gradient calculation of the 4&#xd7;4 block above the virtual boundary, only samples above the virtual boundary may be used. Similarly, for the 1D Laplacian gradient calculation of the 4&#xd7;4 block below the virtual boundary, only samples below the virtual boundary may be used. Quantization of an activity value A may be accordingly scaled by considering the reduced number of samples used in the 1D Laplacian gradient calculation.</p><p id="p-0122" num="0127"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart illustrating an encoding method based on filtering in an encoding apparatus. The method of <figref idref="DRAWINGS">FIG. <b>7</b></figref> may include steps S<b>700</b> to S<b>730</b>.</p><p id="p-0123" num="0128">In the step S<b>700</b>, the encoding apparatus may generate a reconstructed picture. The step S<b>700</b> may be performed based on the aforementioned reconstructed picture (or reconstructed samples) generation process.</p><p id="p-0124" num="0129">In the step S<b>710</b>, the encoding apparatus may determine whether in-loop filtering is applied (across a virtual boundary) based on in-loop filtering-related information. Herein, the in-loop filtering may include at least one of the aforementioned de-blocking filtering, SAO, and ALF.</p><p id="p-0125" num="0130">In the step S<b>720</b>, the encoding apparatus may generate a modified reconstructed picture (modified reconstructed samples) based on the determination of the step S<b>710</b>. Herein, the modified reconstructed picture (modified reconstructed samples) may be a filtered reconstructed picture (filtered reconstructed samples).</p><p id="p-0126" num="0131">In the step S<b>730</b>, the encoding apparatus may encode image/video information including the in-loop filtering-related information, based on the in-loop filtering process.</p><p id="p-0127" num="0132"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart illustrating a decoding method based on filtering in a decoding apparatus. The method of <figref idref="DRAWINGS">FIG. <b>8</b></figref> may include steps S<b>800</b> to S<b>830</b>.</p><p id="p-0128" num="0133">In the step S<b>800</b>, the decoding apparatus may obtain image/video information including in-loop filtering-related information from a bitstream. Herein, the bitstream may be based on encoded image/video information transmitted from the encoding apparatus.</p><p id="p-0129" num="0134">In the step S<b>810</b>, the decoding apparatus may generate a reconstructed picture. The step S<b>810</b> may be performed based on the aforementioned reconstructed picture (or reconstructed samples).</p><p id="p-0130" num="0135">In the step S<b>820</b>, the decoding apparatus may determine whether in-loop filtering is applied (across a virtual boundary) based on the in-loop filtering-related information. Herein, the in-loop filtering may include at least one of the aforementioned de-blocking filtering, SAO, and ALF.</p><p id="p-0131" num="0136">In the step S<b>830</b>, the decoding apparatus may generate a modified reconstructed picture (modified reconstructed samples) based on the determination of the step S<b>820</b>. Herein, the modified reconstructed picture (modified reconstructed samples) may be a filtered reconstructed picture (filtered reconstructed samples).</p><p id="p-0132" num="0137">As described above, the in-loop filtering process may be applied to the reconstructed picture. In this case, a virtual boundary may be defined to further improve subjective/objective visual quality of the reconstructed picture, and the in-loop filtering process may be applied across the virtual boundary. The virtual boundary may include, for example, a discontinuous edge such as a 360-degree image, a VR image, a bound, a Picture In Picture (PIP), or the like. For example, the virtual boundary may be present at a predetermined location, and a presence and/or location thereof may be signaled. For example, the virtual boundary may be located at an upper fourth sample line of a CTU row (specifically, for example, above the upper fourth sample of the CTU row). As another example, information on the present and/or location of the virtual boundary may be signaled through HLS. The HLS may include the SPS, the PPS, the picture header, the slice header, or the like as described above.</p><p id="p-0133" num="0138">Hereinafter, a high-level syntax signaling and semantics will be described according to embodiments of the present disclosure.</p><p id="p-0134" num="0139">An embodiment of the present document may include a method of controlling loop filters. The present method for controlling the loop filters may be applied to a reconstructed picture. In-loop filters (loop filters) may be used for decoding of encoded bitstreams. The loop filters may include the aforementioned deblocking, SAO, and ALF. The SPS may include flags related to each of the deblocking, SAO, and ALF. The flags may indicate whether each of tools is available for the coding of a coded layer video sequence (CLVS) or coded video sequence (CVS) referring to the SPS.</p><p id="p-0135" num="0140">In an example, when the loop filters are enabled for the coding of the pictures in the CVS, the applying of the loop filters may be controlled not to be across specific boundaries. For example, the loop filters may be controlled not to be across subpicture boundaries, the loop-filters may be controlled not to be across tile boundaries, the loop-filters may be controlled not to be across slice boundaries, and/or the loop filters may be controlled not to be across virtual boundaries.</p><p id="p-0136" num="0141">In-loop filtering-related information may include information, syntax, syntax elements, and/or semantics described in the present document (or embodiments included therein). The in-loop filtering-related information may include information related to whether (the entirety or part of) an in-loop filtering process is enabled across specific boundaries (e.g., a virtual boundary, a subpicture boundary, a slice boundary, and/or a tile boundary). Image information included in a bitstream may include a high level syntax (HLS), and the HLS may include the in-loop filtering-related information. Modified (or filtered) reconstructed samples (reconstructed pictures) may be generated based on the determination on whether the in-loop filtering process is applied across the specific boundaries. In an example, when the in-loop filtering process is disabled for all blocks/boundaries, the modified reconstructed samples may be identical to the reconstructed samples. In another example, the modified reconstructed samples may include modified reconstructed samples derived based on the in-loop filtering. However, in this case, some of the reconstructed samples (e.g., reconstructed samples across virtual boundaries) may not be in-loop filtered based on the aforementioned determination. For example, reconstructed samples across a specific boundary (at least one of a virtual boundary, subpicture boundary, slice boundary, and/or tile boundary for which in-loop filtering is enabled) may be in-loop filtered, but reconstructed samples across other boundaries (e.g., a virtual boundary, subpicture boundary, slice boundary, and/or tile boundary for which in-loop filtering is disabled) may not be in-loop filtered.</p><p id="p-0137" num="0142">In an example, regarding whether the in-loop filtering process is performed across the virtual boundary, the in-loop filtering-related information may include an SPS virtual boundaries present flag, a picture header virtual boundaries present flag, information the number of virtual boundaries, information on positions of virtual boundaries, or the like.</p><p id="p-0138" num="0143">In embodiments included in the present document, the information on the virtual boundaries position may include information on an x-coordinate of a vertical virtual boundary and/or information on a y-coordinate of a horizontal virtual boundary. Specifically, the information on the virtual boundaries position may include the information on the x-coordinate of the vertical virtual boundary and/or the information on the y-axis of the horizontal virtual boundary in units of luma samples. In addition, the information on the virtual boundaries position may include information on the number of pieces of information (syntax elements) on the x-coordinate of the vertical virtual boundary which is present in the SPS. In addition, the information on the virtual boundaries position may include information on the number of pieces of information (syntax elements) on the y-coordinate of the horizontal virtual boundary which is present in the SPS. Alternatively, the information on the virtual boundaries position may include information on the number of pieces of information (syntax elements) on the x-coordinate of the vertical virtual boundary which is present in a picture header. In addition, the information on the virtual boundaries position may include information on the number of pieces of information (syntax elements) on the y-coordinate of the horizontal virtual boundary which is present in the picture header.</p><p id="p-0139" num="0144">The following tables show an exemplary syntax and semantics of an SPS according to the present embodiment.</p><p id="p-0140" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="231pt" align="left"/><colspec colname="1" colwidth="35pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 1</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="231pt" align="left"/><colspec colname="2" colwidth="35pt" align="left"/><tbody valign="top"><row><entry>seq_parameter_set_rbsp( ) {</entry><entry/></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;subpics_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( subpics_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;sps_num_subpics_minus1</entry><entry>u(8)</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; i &#x3c;= sps_num_subpics_minus1; i++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_ctu_top_left_x[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_ctu_top_left_y[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_width_minus1[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_height_minus1[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_treated_as_pic_flag[ i ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;loop_filter_across_subpic_enabled_flag[ i ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;sps_sao_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;sps_alf_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;sps_loop_filter_across_virtual_boundaries_disabled_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( sps_loop_filter_across_virtual_boundaries_disabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;sps_num_ver_virtual_boundaries</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; i &#x3c; sps_num_ver_virtual_boundaries; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;sps_virtual_boundaries_pos_x[ i ]</entry><entry>u(13)</entry></row><row><entry>&#x2003;&#x2003;sps_num_hor_virtual_boundaries</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; i &#x3c; sps_num_hor_virtual_boundaries; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;sps_virtual_boundaries_pos_y[ i ]</entry><entry>u(13)</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0141" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="364pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 2</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>subpics_present_flag equal to 1 specifies that subpicture parameters are present in in the SPS RBSP syntax.</entry></row><row><entry>subpics_present_flag equal to 0 specifies that subpicture parameters are not present in the SPS RBSP syntax.</entry></row><row><entry>sps_num_subpics_minus1 plus 1 specifies the number of subpictures. sps_num_subpics_minus1 shall be in the range of 0</entry></row><row><entry>to 254. When not present, the value of sps_num_subpics_minus1 is inferred to be equal to 0.</entry></row><row><entry>subpic_ctu_top_left_x[ i ] specifies horizontal position of top left CTU of i-th subpicture in unit of CtbSizeY. The length</entry></row><row><entry>of the syntax element is Ceil( Log2( pic_width_max_in_luma_samples / CtbSizeY ) ) bits. When not present, the value of</entry></row><row><entry>subpic_ctu_top_left_x[ i ] is inferred to be equal to 0.</entry></row><row><entry>subpic_ctu_top_left_y[ i ] specifies vertical position of top left CTU of i-th subpicture in unit of CtbSizeY. The length of</entry></row><row><entry>the syntax element is Ceil( Log2( pic_height_max_in_luma_samples / CtbSizeY ) ) bits. When not present, the value of</entry></row><row><entry>subpic_ctu_top_left_y[ i ] is inferred to be equal to 0.</entry></row><row><entry>subpic_width_minus1[ i ] plus 1 specifies the width of the i-th subpicture in units of CtbSizeY. The length of the syntax</entry></row><row><entry>element is Ceil( Log2( pic_width_max_in_luma_samples / CtbSizeY ) ) bits. When not present, the value of</entry></row><row><entry>subpic_width_minus1[ i ] is inferred to be equal to Ceil( pic_width_max_in_luma_samples / CtbSizeY ) &#x2212; 1.</entry></row><row><entry>subpic_height_minus1[ i ] plus 1 specifies the height of the i-th subpicture in units of CtbSizeY. The length of the syntax</entry></row><row><entry>element is Ceil( Log2( pic_height_max_in_luma_samples / CtbSizeY ) ) bits. When not present, the value of</entry></row><row><entry>subpic_height_minus1[ i ] is inferred to be equal to Ceil( pic_height_max_in_luma_samples / CtbSizeY ) &#x2212; 1.</entry></row><row><entry>subpic_treated_as_pic_flag[ i ] equal to 1 specifies that the i-th subpicture of each coded picture in the CLVS is treated as</entry></row><row><entry>a picture in the decoding process excluding in-loop filtering operations. subpic_treated_as_pic_flag[ i ] equal to 0</entry></row><row><entry>specifies that the i-th subpicture of each coded picture in the CLVS is not treated as a picture in the decoding process</entry></row><row><entry>excluding in-loop filtering operations. When not present, the value of subpic_treated_as_pic_flag[ i ] is inferred to be</entry></row><row><entry>equal to 0.</entry></row><row><entry>loop_filter_across_subpic_enabled_flag[ i ] equal to 1 specifies that in-loop filtering operations may be performed across</entry></row><row><entry>the boundaries of the i-th subpicture in each coded picture in the CLVS. loop_filter_across_subpic_enabled_flag[ i ]</entry></row><row><entry>equal to 0 specifies that in-loop filtering operations are not performed across the boundaries of the i-th subpicture in each</entry></row><row><entry>coded picture in the CLVS. When not present, the value of loop_filter_across_subpic_enabled_pic_flag[ i ] is inferred to</entry></row><row><entry>be equal to 1.</entry></row><row><entry>sps_loop_filter_across_virtual_boundaries_disabled_present_flag equal to 1 specifies that the in-loop filtering operations</entry></row><row><entry>are disabled across the virtual boundaries in pictures referring to the SPS.</entry></row><row><entry>sps_loop_filter_across_virtual_boundaries_disabled_present_flag equal to 0 specifies that no such disabling of in-loop</entry></row><row><entry>filtering operations is applied in pictures referring to the SPS. In-loop filtering operations include the deblocking filter,</entry></row><row><entry>sample adaptive offset filter, and adaptive loop filter operations.</entry></row><row><entry>sps_sao_enabled_flag equal to 1 specifies that the sample adaptive offset process is applied to the reconstructed picture</entry></row><row><entry>after the deblocking filter process. sps_sao_enabled_flag equal to 0 specifies that the sample adaptive offset process is not</entry></row><row><entry>applied to the reconstructed picture after the deblocking filter process.</entry></row><row><entry>sps_alf_enabled_flag equal to 0 specifies that the adaptive loop filter is disabled. sps_alf_enabled_flag equal to 1</entry></row><row><entry>specifies that the adaptive loop filter is enabled.</entry></row><row><entry>sps_num_ver_virtual_boundaries specifies the number of sps_virtual_boundaries_pos_x[ i ] syntax elements that are</entry></row><row><entry>present in the SPS. When sps_num_ver_virtual_boundaries is not present, it is inferred to be equal to 0.</entry></row><row><entry>sps_virtual_boundaries_pos_x[ i ] is used to compute the value of VirtualBoundariesPosX[ i ], which specifies the</entry></row><row><entry>location of the i-th vertical virtual boundary in units of luma samples. The value of sps_virtual_boundaries_pos_x[ i ]</entry></row><row><entry>shall be in the range of 1 to Ceil( pic_width_in_luma_samples &#xf7; 8 ) &#x2212; 1, inclusive.</entry></row><row><entry>sps_num_hor_virtual_boundaries specifies the number of sps_virtual_boundaries_pos_y[ i ] syntax elements that are</entry></row><row><entry>present in the SPS. When sps_num_hor_virtual_boundaries is not present, it is inferred to be equal to 0.</entry></row><row><entry>sps_virtual_boundaries_pos_y[ i ] is used to compute the value of VirtualBoundariesPosY[ i ], which specifies the</entry></row><row><entry>location of the i-th horizontal virtual boundary in units of luma samples. The value of sps_virtual_boundaries_pos_y[ i ]</entry></row><row><entry>shall be in the range of 1 to Ceil( pic_height_in_luma_samples &#xf7; 8 ) &#x2212; 1, inclusive.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0142" num="0145">The following tables show an exemplary syntax and semantics of a picture parameter set (PPS) according to the present embodiment.</p><p id="p-0143" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="168pt" align="left"/><colspec colname="1" colwidth="49pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 3</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="154pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><tbody valign="top"><row><entry/><entry>pic_parameter_set_rbsp( ) {</entry><entry/></row><row><entry/><entry>&#x2003;...</entry></row><row><entry/><entry>&#x2003;no_pic_partition_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;if( !no_pic_partition_flag ) {</entry></row><row><entry/><entry>&#x2003;&#x2003;...</entry></row><row><entry/><entry>&#x2003;&#x2003;loop_filter_across_tiles_enabled_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;&#x2003;loop_filter_across_slices_enabled_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;}</entry></row><row><entry/><entry>&#x2003;...</entry></row><row><entry/><entry>&#x2003;deblocking_filter_control_present_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;if( deblocking_filter_control_present flag ) {</entry></row><row><entry/><entry>&#x2003;&#x2003;deblocking_filter_override_enabled_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;&#x2003;pps_deblocking_filter_disabled_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;&#x2003;if( !pps_deblocking_filter_disabled flag ) {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;pps_beta_offset_div2</entry><entry>se(v)</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;pps_tc_offset_div2</entry><entry>se(v)</entry></row><row><entry/><entry>&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;}</entry></row><row><entry/><entry>&#x2003;...</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0144" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="364pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 4</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>no_pic_partition_flag equal to 1 specifies that no picture partitioning applied to each picture referring to the PPS.</entry></row><row><entry>no_pic_partition_flag equal to 0 specifies each picture referring to the PPS may be partitioned into more than one tile or</entry></row><row><entry>slice.</entry></row><row><entry>loop_filter_across_tiles_enabled_flag equal to 1 specifies that in-loop filtering operations may be performed across tile</entry></row><row><entry>boundaries in pictures referring to the PPS. loop_filter_across_tiles_enabled_flag equal to 0 specifics that in-loop filtering</entry></row><row><entry>operations are not performed across tile boundaries in pictures referring to the PPS. The in-loop filtering operations</entry></row><row><entry>include the deblocking filter, sample adaptive offset filter, and adaptive loop filter operations.</entry></row><row><entry>loop_filter_across_slices_enabled_flag equal to 1 specifies that in-loop filtering operations may be performed across slice</entry></row><row><entry>boundaries in pictures referring to the PPS. loop_filter_across_slice_enabled_flag equal to 0 specifies that in-loop</entry></row><row><entry>filtering operations are not performed across slice boundaries in pictures referring to the PPS. The in-loop filtering</entry></row><row><entry>operations include the deblocking filter, sample adaptive offset filter, and adaptive loop filter operations.</entry></row><row><entry>deblocking_filter_control_present_flag equal to 1 specifies the presence of deblocking filter control syntax elements in</entry></row><row><entry>the PPS. deblocking_filter_control_present_flag equal to 0 specifies the absence of deblocking filter control syntax</entry></row><row><entry>elements in the PPS.</entry></row><row><entry>deblocking_filter_override_enabled_flag equal to 1 specifies the presence of pic_deblocking_filter_override_flag in the</entry></row><row><entry>PHs referring to the PPS or slice_deblocking_filter_override_flag in the slice headers referring to the PPS.</entry></row><row><entry>deblocking_filter_override_enabled_flag equal to 0 specifies the absence of pic_deblocking_filter_override_flag in PHs</entry></row><row><entry>referring to the PPS or slice_deblocking_filter_override_flag in slice headers referring to the PPS. When not present, the</entry></row><row><entry>value of deblocking_filter_override_enabled_flag is inferred to be equal to 0.</entry></row><row><entry>pps_deblocking_filter_disabled_flag equal to 1 specifies that the operation of deblocking filter is not applied for slices</entry></row><row><entry>referring to the PPS in which slice_deblocking_filter_disabled_flag is not present. pps_deblocking_filter_disabled_flag</entry></row><row><entry>equal to 0 specifies that the operation of the deblocking filter is applied for slices referring to the PPS in which</entry></row><row><entry>slice_deblocking_filter_disabled_flag is not present. When not present, the value of pps_deblocking_filter_disabled_flag</entry></row><row><entry>is inferred to be equal to 0.</entry></row><row><entry>pps_beta_offset_div2 and pps_tc_offset_div2 specify the default deblocking parameter offsets for &#x3b2; and tC (divided by 2)</entry></row><row><entry>that are applied for slices referring to the PPS, unless the default deblocking parameter offsets are overridden by the</entry></row><row><entry>deblocking parameter offsets present in the slice headers of the slices referring to the PPS. The values of</entry></row><row><entry>pps_beta_offset_div2 and pps_tc_offset_div2 shall both be in the range of &#x2212;6 to 6, inclusive. When not present, the value</entry></row><row><entry>of pps_beta_offset_div2 and pps_tc_offset_div2 are inferred to be equal to 0.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0145" num="0146">The following tables show an exemplary syntax and semantics of a picture header according to the present embodiment.</p><p id="p-0146" num="0000"><tables id="TABLE-US-00005" num="00005"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="238pt" align="left"/><colspec colname="1" colwidth="35pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 5</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="238pt" align="left"/><colspec colname="2" colwidth="35pt" align="left"/><tbody valign="top"><row><entry>picture_header_rbsp( ) {</entry><entry/></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;if( !sps_loop_filter_across_virtual_boundaries_disabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;ph_loop_filter_across_virtual_boundaries_disabled_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( ph_loop_filter_across_virtual_boundaries_disabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;ph_num_ver_virtual_boundaries</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( i = 0; i &#x3c; ph_num_ver_virtual_boundaries; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;ph_virtual_boundaries_pos_x[ i ]</entry><entry>u(13)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;ph_num_hor_virtual_boundaries</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( i = 0; i &#x3c; ph_num_hor_virtual_boundaries; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;ph_virtual_boundaries_pos_y[ i ]</entry><entry>u(13)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;if( sps_sao_enabled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;pic_sao_enabled_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( pic_sao_enabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pic_sao_luma_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if(ChromaArrayType != 0 )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;pic_sao_chroma_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;if( sps_alf_enabled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;pic_alf_enabled_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( pic_alf_enabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pic_alf_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( pic_alf_enabled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;pic_num_alf_aps_ids_luma</entry><entry>u(3)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;for( i = 0; i &#x3c; pic_num_alf_aps_ids_luma; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pic_alf_aps_id_luma[ i ]</entry><entry>u(3)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( ChromaArrayType != 0 )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pic_alf_chroma_idc</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( pic_alf_chroma_idc )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pic_alf_aps_id_chroma</entry><entry>u(3)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;if( deblocking_filter_override_enabled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;pic_deblocking_filter_override_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( pic_deblocking_filter_override_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pic_deblocking_filter_override_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( pic_deblocking_filter_override_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;pic_deblocking_filter_disabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( !pic_deblocking_filter_disabled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pic_beta_offset_div2</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pic_tc_offset_div2</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0147" num="0000"><tables id="TABLE-US-00006" num="00006"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="371pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 6</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>ph_loop_filter_across_virtual_boundaries_disabled_present_flag equal to 1 specifies that the in-loop filtering operations</entry></row><row><entry>are disabled across the virtual boundaries in pictures associated to the PH.</entry></row><row><entry>ph_loop_filter_across_virtual_boundaries_disable<sub>&#x2014;&#x2014;</sub>present_flag equal to 0 specifies that no such disabling of in-loop</entry></row><row><entry>filtering operations is applied in pictures associated to the PH. The in-loop filtering operations include the deblocking</entry></row><row><entry>filter, sample adaptive offset filter, and adaptive loop filter operations.</entry></row><row><entry>ph_num_ver_virtual_boundaries specifies the number of ph_virtual_boundaries_pos_x[ i ] syntax elements that are</entry></row><row><entry>present in the PH.</entry></row><row><entry>ph_virtual_boundaries_pos_x[ i ] is used to compute the value of VirtualBoundariesPosX[ i ], which specifies the</entry></row><row><entry>location of the i-th vertical virtual boundary in units of luma samples. The value of ph_virtual_boundaries_pos_x[ i ] shall</entry></row><row><entry>be in the range of 1 to Ceil( pic_width_in_luma_samples &#xf7; 8 ) &#x2212; 1, inclusive.</entry></row><row><entry>ph_num_hor_virtual_boundaries specifies the number of ph_virtual_boundaries_pos_y[ i ] syntax elements that are</entry></row><row><entry>present in the PH.</entry></row><row><entry>ph_virtual_boundaries_pos_y[ i ] is used to compute the value of VirtualBoundariesPosY[ i ], which specifies the</entry></row><row><entry>location of the i-th horizontal virtual boundary in units of luma samples. The value of ph_virtual_boundaries_pos_y[ i ]</entry></row><row><entry>shall be in the range of 1 to Ceil( pic_height_in_luma_samples &#xf7; 8 ) &#x2212; 1, inclusive.</entry></row><row><entry>pic_sao_enabled_present_flag equal to 1 specifies that pic sao luma flag and pic sao chroma flag are present in the</entry></row><row><entry>PH. pic_sao_enabled_present_flag equal to 0 specifies that pic_sao_luma_flag and pic_sao_chroma_flag are not present</entry></row><row><entry>in the PH. When pic_sao_enabled_present_flag is not present, it is inferred to be equal to 0.</entry></row><row><entry>pic_sao_luma_enabled_flag equal to 1 specifies that SAO is enabled for the luma component in all slices associated with</entry></row><row><entry>the PH; pic_sao_luma_enabled_flag equal to 0 specifies that SAO for the luma component may be disabled for one, or</entry></row><row><entry>more, or all slices associated with the PH.</entry></row><row><entry>pic_sao_chroma_enabled_flag equal to 1 specifies that SAO is enabled for the chroma component in all slices associated</entry></row><row><entry>with the PH; pic_sao_chroma_enabled_flag equal to 0 specifies that SAO for chroma component may be disabled for</entry></row><row><entry>one, or more, or all slices associated with the PH.</entry></row><row><entry>pic_alf_enabled_present_flag equal to 1 specifies that pic_alf_enabled_flag, pic_num_alf_aps_ids_luma,</entry></row><row><entry>pic_alf_aps_id_luma[ i ], pic_alf_chroma_idc, and pic_alf_aps_id_chroma are present in the PH.</entry></row><row><entry>pic_alf_enabled_present_flag equal to 0 specifies that pic_alf_enabled_flag, pic_num_alf_aps_ids_luma,</entry></row><row><entry>pic_alf_aps_id_luma[ i ], pic_alf_chroma_idc, and pic_alf_aps_id_chroma are not present in the PH. When</entry></row><row><entry>pic_alf_enabled_present_flag is not present, it is inferred to be equal to 0.</entry></row><row><entry>pic_alf_enabled_flag equal to 1 specifies that adaptive loop filter is enabled for all slices associated with the PH and may</entry></row><row><entry>be applied to Y, Cb, or Cr colour component in the slices. pic_alf_enabled_flag equal to 0 specifies that adaptive loop</entry></row><row><entry>filter may be disabled for one, or more, or all slices associated with the PH. When not present, pic_alf_enabled_flag is</entry></row><row><entry>inferred to be equal to 0.</entry></row><row><entry>pic_num_alf_aps_ids_luma specifies the number of ALF APSs that the slices associated with the PH refers to.</entry></row><row><entry>pic_alf_aps_id_luma[ i ] specifies the adaptation_parameter_set_id of the i-th ALF APS that the luma component of the</entry></row><row><entry>slices associated with the PH refers to.</entry></row><row><entry>The value of alf_luma_filter_signal_flag of the APS NAL unit having aps_params_type equal to ALF_APS and</entry></row><row><entry>adaptation_parameter_set_id equal to pic_alf_aps_id_luma[ i ] shall be equal to 1.</entry></row><row><entry>pic_alf_chroma_idc equal to 0 specifies that the adaptive loop filter is not applied to Cb and Cr colour components.</entry></row><row><entry>pic_alf_chroma_idc equal to 1 indicates that the adaptive loop filter is applied to the Cb colour component.</entry></row><row><entry>pic_alf_chroma_idc equal to 2 indicates that the adaptive loop filter is applied to the Cr colour component.</entry></row><row><entry>pic_alf_chroma_idc equal to 3 indicates that the adaptive loop filter is applied to Cb and Cr colour components. When</entry></row><row><entry>pic_alf_chroma_idc is not present, it is inferred to be equal to 0.</entry></row><row><entry>pic_alf_aps_id_chroma specifies the adaptation_parameter_set_id of the ALF APS that the chroma component of the</entry></row><row><entry>slices associated with the PH refers to.</entry></row><row><entry>pic_deblocking_filter_override_present_flag equal to 1 specifics that pic_deblocking_filter_override_flag is present in the</entry></row><row><entry>PH. pic_deblocking_filter_override_present_flag equal to 0 specifies that pic_deblocking_filter_override_flag is not</entry></row><row><entry>present in the PH. When pic_deblocking_filter_override_present_flag is not present, it is inferred to be equal to 0.</entry></row><row><entry>pic_deblocking_filter_override_flag equal to 1 specifies that deblocking parameters are present in the PH.</entry></row><row><entry>pic_deblocking_filter_override_flag equal to 0 specifies that deblocking parameters are not present in the PH. When not</entry></row><row><entry>present, the value of pic_pic_deblocking_filter_override_flag is inferred to be equal to 0.</entry></row><row><entry>pic_deblocking_filter_disabled_flag equal to 1 specifies that the operation of the deblocking filter is not applied for the</entry></row><row><entry>slices associated with the PH. pic_deblocking_filter_disabled_flag equal to 0 specifies that the operation of the</entry></row><row><entry>deblocking filter is applied for the slices associated with the PH. When pic_deblocking_filter_disabled_flag is not</entry></row><row><entry>present, it is inferred to be equal to pps_deblocking_filter_disabled_flag.</entry></row><row><entry>pic_beta_offset_div2 and pic_tc_offset_div2 specify the deblocking parameter offsets for &#x3b2; and tC (divided by 2) for the</entry></row><row><entry>slices associated with the PH. The values of pic_beta_offset_div2 and pic_tc_offset_div2 shall both be in the range of &#x2212;6</entry></row><row><entry>to 6, inclusive. When not present, the values of pic_beta_offset_div2 and pic_tc_offset_div2 are inferred to be equal to</entry></row><row><entry>pps_beta_offset_div2 and pps_tc_offset_div2, respectively.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0148" num="0147">The following tables show an exemplary syntax and semantics of a slice header according to the present embodiment.</p><p id="p-0149" num="0000"><tables id="TABLE-US-00007" num="00007"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="217pt" align="left"/><colspec colname="1" colwidth="42pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 7</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="217pt" align="left"/><colspec colname="2" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>slice_header( ) {</entry><entry/></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;if( pps_cu_chroma_qp_offset_list_enabled_flag )</entry></row><row><entry>&#x2003;&#x2003;cu_chroma_qp_offset_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( sps_sao_enabled_flag &#x26;&#x26; !pic_sao_enabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;slice_sao_luma_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( ChromaArrayType != 0 )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;slice_sao_chroma_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;if( sps_alf_enabled_flag &#x26;&#x26; !pic_alf_enabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;slice_alf_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( slice_alf_enabled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;slice_num_alf_aps_ids_luma</entry><entry>u(3)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( i = 0; i &#x3c; slice_num_alf_aps_ids_luma; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;slice_alf_aps_id_luma[ i ]</entry><entry>u(3)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( ChromaArrayType != 0 )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;slice_alf_chroma_idc</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( slice_alf_chroma_idc )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;slice_alf_aps_id_chroma</entry><entry>u(3)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;if( deblocking_filter_override_enabled_flag &#x26;&#x26;</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;!pic_deblocking_filter_override_present_flag )</entry></row><row><entry>&#x2003;&#x2003;slice_deblocking_filter_override_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( slice_deblocking_filter_override_flag ) {</entry></row><row><entry>&#x2003;&#x2003;slice_deblocking_filter_disabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( !slice_deblocking_filter_disabled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;slice_beta_offset_div2</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;slice_tc_offset_div2</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0150" num="0000"><tables id="TABLE-US-00008" num="00008"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="364pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 8</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>cu_chroma_qp_offset_enabled_flag equal to 1 specifies that the cu_chroma_qp_offset_flag may be present in the</entry></row><row><entry>transform unit and palette coding syntax. cu_chroma_qp_offset_enabled_flag equal to 0 specifies that the</entry></row><row><entry>cu_chroma_qp_offset_flag is not present in the transform unit or palette coding syntax. When not present, the value of</entry></row><row><entry>cu_chroma_qp_offset_enabled_flag is inferred to be equal to 0.</entry></row><row><entry>slice_sao_luma_flag equal to 1 specifies that SAO is enabled for the luma component in the current slice;</entry></row><row><entry>slice_sao_luma_flag equal to 0 specifies that SAO is disabled for the luma component in the current slice. When</entry></row><row><entry>slice_sao_luma_flag is not present, it is inferred to be equal to pic_sao_luma_enabled_flag.</entry></row><row><entry>slice_sao_chroma_flag equal to 1 specifies that SAO is enabled for the chroma component in the current slice;</entry></row><row><entry>slice_sao_chroma_flag equal to 0 specifies that SAO is disabled for the chroma component in the current slice. When</entry></row><row><entry>slice_sao_chroma_flag is not present, it is inferred to be equal to pic_sao_chroma_enabled_flag.</entry></row><row><entry>slice_alf_enabled_flag equal to 1 specifies that adaptive loop filter is enabled and may be applied to Y, Cb, or Cr colour</entry></row><row><entry>component in a slice. slice_alf_enabled_flag equal to 0 specifies that adaptive loop filter is disabled for all colour</entry></row><row><entry>components in a slice. When not present, the value of slice_alf_enabled_flag is inferred to be equal to</entry></row><row><entry>pic_alf_enabled_flag.</entry></row><row><entry>slice_num_alf_aps_ids_luma specifies the number of ALF APSs that the slice refers to. When slice_alf_enabled_flag is</entry></row><row><entry>equal to 1 and slice_num_alf_aps_ids_luma is not present, the value of slice_num_alf_aps_ids_luma is interred to be</entry></row><row><entry>equal to the value of pic_num_alf_aps_ids_luma.</entry></row><row><entry>slice_alf_aps_id_luma[ i ] specifies the adaptation_parameter_set_id of the i-th ALF APS that the luma component of the</entry></row><row><entry>slice refers to. The TemporalId of the APS NAL unit having aps_params_type equal to ALF APS and</entry></row><row><entry>adaptation_parameter_set_id equal to slice_alf_aps_id_luma[ i ] shall be less than or equal to the TemporalId of the</entry></row><row><entry>coded slice NAL unit. When slice_alf_enabled_flag is equal to 1 and slice_alf_aps_id_luma[ i ] is not present, the value</entry></row><row><entry>of slice_alf_aps_id_luma[ i ] is inferred to be equal to the value of pic_alf_aps_id_luma[ i ].</entry></row><row><entry>The value of alf_luma_filter_signal_flag of the APS NAL unit having aps_params_type equal to ALF_APS and</entry></row><row><entry>adaptation_parameter_set_id equal to slice_alf_aps_id_luma[ i ] shall be equal to 1.</entry></row><row><entry>slice_alf_chroma_idc equal to 0 specifies that the adaptive loop filter is not applied to Cb and Cr colour components.</entry></row><row><entry>slice_alf_chroma_idc equal to 1 indicates that the adaptive loop filter is applied to the Cb colour component.</entry></row><row><entry>slice_alf_chroma_idc equal to 2 indicates that the adaptive loop filter is applied to the Cr colour component.</entry></row><row><entry>slice_alf_chroma_idc equal to 3 indicates that the adaptive loop filter is applied to Cb and Cr colour components. When</entry></row><row><entry>slice_alf_chroma_idc is not present, it is inferred to be equal to pic_alf_chroma_idc.</entry></row><row><entry>slice_alf_aps_id_chroma specifies the adaptation_parameter_set_id of the ALF APS that the chroma component of the</entry></row><row><entry>slice refers to. The TemporalId of the APS NAL unit having aps_params_type equal to ALF_APS and</entry></row><row><entry>adaptation_parameter_set_id equal to slice_alf_aps_id_chroma shall be less than or equal to the TemporalId of the coded</entry></row><row><entry>slice NAL unit. When slice_alf_enabled_flag is equal to 1 and slice_alf_aps_id_chroma is not present, the value of</entry></row><row><entry>slice_alf_aps_id_chroma is inferred to be equal to the value of pic_alf_aps_id_chroma.</entry></row><row><entry>The value of alf_chroma_filter_signal_flag of the APS NAL unit having aps_params_type equal to ALF_APS and</entry></row><row><entry>adaptation_parameter_set_id equal to slice_alf_aps_id_chroma shall be equal to 1.</entry></row><row><entry>slice_deblocking_filter_override_flag equal to 1 specifies that deblocking parameters are present in the slice header.</entry></row><row><entry>slice_deblocking_filter_override_flag equal to 0 specifies that deblocking parameters are not present in the slice header.</entry></row><row><entry>When not present, the value of slice_deblocking_filter_override_flag is inferred to be equal to</entry></row><row><entry>pic_deblocking_filter_override_flag.</entry></row><row><entry>slice_deblocking_filter_disabled_flag equal to 1 specifies that the operation of the deblocking filter is not applied for the</entry></row><row><entry>current slice. slice_deblocking_filter_disabled_flag equal to 0 specifies that the operation of the deblocking filter is</entry></row><row><entry>applied for the current slice. When slice_deblocking_filter_disabled_flag is not present, it is interred to be equal to</entry></row><row><entry>pic_deblocking_filter_disabled_flag.</entry></row><row><entry>slice_beta_offset_div2 and slice_tc_offset_div2 specify the deblocking parameter offsets for &#x3b2; and tC (divided by 2) for</entry></row><row><entry>the current slice. The values of slice_beta_offset div2 and slice_tc_offset_div2 shall both be in the range of &#x2212;6 to 6,</entry></row><row><entry>inclusive. When not present, the values of slice_beta_offset_div2 and slice_tc_offset_div2 are inferred to be equal to</entry></row><row><entry>pic_beta_offset_div2 and pic_tc_offset_div2, respectively.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0151" num="0148">Hereinafter, information related to subpictures, information related to virtual boundaries usable in in-loop filtering, and signaling thereof will be described.</p><p id="p-0152" num="0149">When there is no subpicture having boundaries treated like picture boundaries even if a picture includes several subpictures, an advantage of using the subpicture cannot be utilized. In an embodiment of this document, image/video information for image coding may include information for treating a subpicture as a picture, which may be referred to as a picture handling flag (i.e., subpic_treated_as_pic_flag[i]).</p><p id="p-0153" num="0150">In order to signal a layout of the subpicture, a flag (i.e., subpic_present_flag) related to whether subpictures are present is signaled. This may be referred to as a subpicture present flag. When a value of subpic_present_flag is 1, information (i.e., sps_num_subpics_minus1) related to the number of subpictures for partitioning the picture is signaled. In an example, the number of subpictures for partitioning the picture may be equal to sps_num_subpics_minus1+1 (1 is added to sps_num_subpics_minus1). Available values of sps_num_subpics_minus1 include 0, which means that only one subpicture may be present in the picture. If the picture includes only one subpicture, signaling of subpicture-related information may be regarded as a redundant process since the subpicture itself is a picture.</p><p id="p-0154" num="0151">In the existing embodiment, if the picture includes only one subpicture and subpicture signaling is present, a value of the picture handling flag (i.e., subpic_treated_as_pic_flag[i]) and/or a value of a flag (i.e., loop_filter_across_subpic_enabled_flag) related to whether loop filtering is performed across subpictures may be 0 or 1. Herein, there is a problem in that a case where the value of subpic_treated_as_pic_flag[i] is 0 is inconsistent with a case where subpicture boundaries are picture boundaries. This requires an additional redundant process in which a decoder is allowed to confirm that the picture boundaries are the subpicture boundaries.</p><p id="p-0155" num="0152">When a picture is generated based on a merging process of two or more subpictures, all subpictures used in the merging process shall be independently coded subpictures (a subpicture in which the value of the picture handling flag (subpic_reated_as_pic_flag[i]) is 1). This is because, when a subpicture (referred to as a &#x2018;first subpicture&#x2019; in this paragraph) other than the independently coded subpicture is merged, blocks in the first subpicture are coded by referring to a reference block existing outside the first subpicture, which may cause a problem after the merging.</p><p id="p-0156" num="0153">In addition, when the picture is partitioned into subpictures, subpicture ID signaling may be present or may not be present. When the subpicture ID signaling is present, the subpicture ID signaling may be present (included) in an SPS, a PPS, and/or a picture header (PH). A case where the subpicture ID signaling is not present in the SPS may include a case where a bitstream is generated as a result of a subpicture merging process. Accordingly, it is preferable that all subpictures are independently coded when the subpicture ID signaling is not included in the SPS.</p><p id="p-0157" num="0154">In an image coding process in which virtual boundaries are used, information on positions of the virtual boundaries may be signaled in an SPS or a picture header. The signaling of the information on the positions of the virtual boundaries in the SPS means that there is no change in the positions in the entire CLVS. However, when reference picture resampling (RPR) is enabled for the CLVS, pictures in the CLVS may have different sizes. Herein, the RPR (also referred to as adaptive resolution change (ARC)) is performed for a normal coding operation of pictures having different resolutions (spatial resolutions). For example, the RPR may include up-sampling and down-sampling. High coding efficiency for adaptation of a bitrate and spatial resolution may be achieved through the RPR. There is a need to ensure that all of the positions of the virtual boundaries are present in one picture, by considering the RPR.</p><p id="p-0158" num="0155">In the existing ALF process, the k-order exponential Golomb code with k=3 is used to signal absolute values of luma and chroma ALF coefficients. However, the k-order exponential Golomb coding is problematic because it causes significant computational overhead and complexity.</p><p id="p-0159" num="0156">Embodiments described hereinafter may propose solutions for the aforementioned problem. The embodiments may be applied independently. Alternatively, at least two embodiments may be applied in combination.</p><p id="p-0160" num="0157">In an embodiment of this document, when subpicture signaling is present and a picture has only one subpicture, the only one subpicture is an independently coded subpicture. For example, when the picture has only one subpicture, the only one subpicture is an independently coded subpicture, and a value of a picture handling flag (i.e., subpic_treated_as_pic_flag[i]) for the only one subpicture is 1. Accordingly, a redundant process related to the subpicture may be omitted.</p><p id="p-0161" num="0158">In an embodiment of this document, when subpicture signaling is present, the number of subpictures may be greater than 1. In an example, if subpicture signaling is present (i.e., a value of subpics_present_flag is 1), information on the number of subpictures (i.e., sps_num_subpics_minus1) may be greater than 0, and the number of subpictures may be sps_num_subpics_minus1+1 (1 is added to sps_num_subpics_minus1). In another example, the information on the number of subpictures may be sps_num_subpics_minus2, and the number of subpictures may be sps_num_subpics_minus2+2 (<b>2</b> is added to sps_num_subpics_minus2). In another example, a subpicture present flag (subpics_present_flag) may be replaced with information on the number of subpictures (sps_num_subpics_minus1), and thus subpicture signaling may be present when sps_num_subpics_minus1 is greater than 0.</p><p id="p-0162" num="0159">In an embodiment of this document, when a picture is partitioned into subpictures, at least one subpicture among the subpictures may be an independently coded subpicture. Herein, a value of a picture handling flag (i.e., subpic_treated_as_pic_flag[i]) for the independently coded subpicture may be 1.</p><p id="p-0163" num="0160">In an embodiment of this document, subpictures of a picture based on a merging process of two or more subpictures may be independently coded subpictures.</p><p id="p-0164" num="0161">In an embodiment of this document, when subpicture identification (ID) signaling is present at a position other than an SPS (other syntax, other high-level syntax information), all subpictures may be independently coded subpictures, and a value of a picture handling flag (i.e., subpic_treated_as_pic_flag) for all subpictures may be 1. In an example, the subpicture ID signaling may be present in a PPS, and in this case, all subpictures may be independently coded subpictures. In another example, the subpicture ID signaling may be present in a picture header, and in this case, all subpictures are independently coded subpictures.</p><p id="p-0165" num="0162">In an embodiment of this document, when virtual boundary signaling is present in an SPS for CLVS and reference picture resampling is enabled, all horizontal virtual boundary positions may be within a minimum picture height of pictures referring to the SPS, and all vertical virtual boundary positions may be within a minimum picture width of pictures referring to the SPS.</p><p id="p-0166" num="0163">In an embodiment of this document, when reference picture resampling (RPR) is enabled, virtual boundary signaling may be included in a picture header. That is, when the RPR is enabled, the virtual boundary signaling may not be included in the SPS.</p><p id="p-0167" num="0164">In an embodiment of this document, fixed length coding (FLC) with the number of bits (or bit length) may be used to signal ALF data. In an example, information on the ALF data may include information on a bit length of an absolute value of an ALF luma coefficient (i.e., alf_luma_coeff_abs_len_minus1) and/or information on a bit length of an absolute value of an ALF chroma coefficient (i.e., alf_chroma_coeff_abs_len_minus1). For example, the information on the bit length of the absolute value of the ALF luma coefficient and/or the information on the bit length of the absolute value of the ALF chroma coefficient may be ue(v) coded.</p><p id="p-0168" num="0165">The following table shows an exemplary syntax of the SPS according to the present embodiment.</p><p id="p-0169" num="0000"><tables id="TABLE-US-00009" num="00009"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="182pt" align="left"/><colspec colname="1" colwidth="35pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 9</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="182pt" align="left"/><colspec colname="2" colwidth="35pt" align="left"/><tbody valign="top"><row><entry>seq_parameter_set_rbsp( ) {</entry><entry/></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;subpics_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( subpics_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;sps_num_subpics_minus2</entry><entry>u(8)</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; i &#x3c;= sps_num_subpics_minus2 + 1; i++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_ctu_top_left_x[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_ctu_top_left_y[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_width_minus1[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_height_minus1[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;subpic_treated_as_pic_flag[ i ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;loop_filter_across_subpic_enabled_flag[ i ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;sps_subpic_id_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( sps_subpics_id_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;sps_subpic_id_signalling_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( sps_subpics_id_signalling_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;sps_subpic_id_len_minus1</entry><entry>ue(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( i = 0; i &#x3c;= sps_num_subpics_minus1; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;sps_subpic_id[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0170" num="0166">The following table shows an exemplary semantics of syntax elements included in the syntax.</p><p id="p-0171" num="0000"><tables id="TABLE-US-00010" num="00010"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="350pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 10</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>sps_num_subpics_minus2 plus 2 specifies the number of subpictures. sps_num_subpics_minus2 shall be in the</entry></row><row><entry>range of 0 to 253. When not present, the value of sps_num_subpics_minus1 is inferred to be equal to 1.</entry></row><row><entry>...</entry></row><row><entry>subpic_treated_as_pic_flag[ i ] equal to 1 specifies that the i-th subpicture of each coded picture in the CLVS is</entry></row><row><entry>treated as a picture in the decoding process excluding in-loop filtering operations. subpic_treated_as_pic_flag[ i ]</entry></row><row><entry>equal to 0 specifies that the i-th subpicture of each coded picture in the CLVS is not treated as a picture in the</entry></row><row><entry>decoding process excluding in-loop filtering operations. When not present, the value of</entry></row><row><entry>subpic_treated_as_pic_flag[ i ] is inferred to be equal to 0.</entry></row><row><entry>It is a bistream conformance constraint that there shall be at least one value of subpic_treated_as_pic_flag[ i ] be</entry></row><row><entry>equal to 1.</entry></row><row><entry>...</entry></row><row><entry>It is a bistream conformance constraint that when sps_subpic_id_present_flag is equal to 1 and</entry></row><row><entry>sps_subpic_id_signalling_present_flag is equal to 0, the value of subpic_treated_as_pic_flag[ i ] for all subpictures</entry></row><row><entry>shall be equal to 1.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0172" num="0167">The following table shows an exemplary syntax of the SPS according to the present embodiment.</p><p id="p-0173" num="0000"><tables id="TABLE-US-00011" num="00011"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="231pt" align="left"/><colspec colname="1" colwidth="35pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 11</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="231pt" align="left"/><colspec colname="2" colwidth="35pt" align="left"/><tbody valign="top"><row><entry>seq_parameter_set_rbsp( ) {</entry><entry/></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;ref_pic_resampling_enabled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;...</entry></row><row><entry>&#x2003;sps_loop_filter_across_virtual_boundaries_disabled_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( sps_loop_filter_across_virtual_boundaries_disabled_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;sps_num_ver_virtual_boundaries</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; i &#x3c; sps_num_ver_virtual_boundaries; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;sps_virtual_boundaries_pos_x[ i ]</entry><entry>u(13)</entry></row><row><entry>&#x2003;&#x2003;sps_num_hor_virtual_boundaries</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; i &#x3c; sps_num_hor_virtual_boundaries; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;sps_virtual_boundaries_pos_y[ i ]</entry><entry>u(13)</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;...</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0174" num="0168">The following table shows an exemplary semantics of syntax elements included in the syntax.</p><p id="p-0175" num="0000"><tables id="TABLE-US-00012" num="00012"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="343pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 12</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>sps_num_ver_virtual_boundaries specifies the number of sps_virtual_boundaries_pos_x[ i ] syntax elements</entry></row><row><entry>that are present in the SPS. When sps_num_ver_virtual_boundaries is not present, it is inferred to be equal to 0.</entry></row><row><entry>sps_virtual_boundaries_pos_x[ i ] is used to compute the value of VirtualBoundariesPosX[ i ], which specifies</entry></row><row><entry>the location of the i-th vertical virtual boundary in units of luma samples. The value of</entry></row><row><entry>sps_virtual_boundaries_pos_x[ 1 ] shall be in the range of 1 to Ceil(pic_width_max_in_luma_samples &#xf7; 8 ) &#x2212; 1,</entry></row><row><entry>inclusive.</entry></row><row><entry>Let minPicWidthInCLVS be the smallest value of pic_width_in_luma_samples in PPSs referring to the SPS, it is</entry></row><row><entry>a bistream conformance constraint that the value of sps_virtual_boundaries_pos_x[ i ] for i in the range from 0 to</entry></row><row><entry>sps_num_ver_virtual_boundaries &#x2212; 1, inclusive, is less than or equal to Ceil( minPicWidthInCLVS &#xf7; 8 ) &#x2212; 1.</entry></row><row><entry>sps_num_hor_virtual_boundaries specifies the number of sps_virtual_boundaries_pos_y[i ] syntax elements</entry></row><row><entry>that are present in the SPS. When sps_num_hor_virtual_boundaries is not present, it is inferred to be equal to 0.</entry></row><row><entry>sps_virtual_boundaries_pos_y[ i ] is used to compute the value of VirtualBoundariesPosY[ i ], which specifies</entry></row><row><entry>the location of the i-th horizontal virtual boundary in units of luma samples. The value of</entry></row><row><entry>sps_virtual_boundaries_pos_y[ i ] shall be in the range of 1 to Ceil( pic_height_max_in_luma_samples &#xf7; 8 ) &#x2212; 1,</entry></row><row><entry>inclusive.</entry></row><row><entry>Let minPicHeightInCLVS be the smallest value of pic_height_in_luma_samples in PPSs referring to the SPS, it is</entry></row><row><entry>a bistream conformance constraint that the value of sps_virtual_boundaries_pos_y[ i ] for i in the range from 0 to</entry></row><row><entry>sps_num_hor_virtual_boundaries &#x2212; 1, inclusive, is less than or equal to Ceil( minPicHeightInCLVS &#xf7; 8 ) &#x2212; 1.</entry></row><row><entry>...</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0176" num="0169">The following table shows an exemplary syntax of ALF data according to the present embodiment.</p><p id="p-0177" num="0000"><tables id="TABLE-US-00013" num="00013"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="252pt" align="left"/><colspec colname="1" colwidth="35pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 13</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="252pt" align="left"/><colspec colname="2" colwidth="35pt" align="left"/><tbody valign="top"><row><entry>alf_data( ) {</entry><entry/></row><row><entry>&#x2003;alf_luma_filter_signal_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;alf_chroma_filter_signal_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( alf_luma_filter_signal_flag ) {</entry></row><row><entry>&#x2003;&#x2003;alf_luma_clip_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;alf_luma_num_filters_signalled_minus1</entry><entry>ue(v)</entry></row><row><entry>&#x2003;&#x2003;if( alf_luma_num_filters_signalled_minus1 &#x3e; 0 )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( filtIdx = 0; filtIdx &#x3c; NumAlfFilters; filtIdx++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;alf_luma_coeff_delta_idx[ filtIdx ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;for( sfIdx = 0; sfIdx &#x3c;= alf_luma_num_filters_signalled_minus1; sfIdx++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;alf_luma_coeff_abs_len_minus1[ sfIdx ]</entry><entry>ue(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( j = 0; j &#x3c; 12; j++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;alf_luma_coeff_abs[ sfIdx ][ j ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( alf_luma_coeff_abs[ sfIdx ][ j ] )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;alf_luma_coeff_sign[ sfIdx ][ j ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;if( alf_luma_clip_flag )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( sfIdx = 0; sfIdx &#x3c;= alf_luma_num_filters_signalled_minus1; sfIdx++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;for( j = 0; j &#x3c; 12; j++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;alf_luma_clip_idx[ sfIdx ][ j ]</entry><entry>u(2)</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;if( alf_chroma_filter_signal_flag ) {</entry></row><row><entry>&#x2003;&#x2003;alf_chroma_num_alt_filters_minus1</entry><entry>ue(v)</entry></row><row><entry>&#x2003;&#x2003;for( altIdx = 0; altIdx &#x3c;= alf_chroma_num_alt_filters_minus1; altIdx++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;alf_chroma_clip_flag[ altIdx ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;alf_chroma_coeff_abs_len_minus1[ altIdx ]</entry><entry>ue(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( j = 0; j &#x3c; 6, j++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;alf_chroma_coeff_abs[ altIdx ][ j ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( alf_chroma_coeff_abs[ altIdx ][ j ] &#x3e; 0 )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;alf_chroma_coeff_sign[ altIdx ][j ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( alf_chroma_clip_flag[ altIdx ] )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;for( j = 0; j &#x3c; 6; j++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;alf_chroma_clip_idx[ altIdx ][ j ]</entry><entry>u(2)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0178" num="0170">The following table shows an exemplary semantics of syntax elements included in the syntax.</p><p id="p-0179" num="0000"><tables id="TABLE-US-00014" num="00014"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="343pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 14</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>alf_luma_coeff_abs_len_minus1[ sfIdx ] plus 1 specifies the number of bits used to represent the syntax</entry></row><row><entry>element alf_luma_coeff_abs[ sfIdx ][ j ]. The value of alf_luma_abs_len_minus1 shall be in the range of 0 to 15,</entry></row><row><entry>inclusive.</entry></row><row><entry>alf_luma_coeff_abs[ sfIdx ][ j ] specifies the absolute value of the j-th coefficient of the signalled luma filter</entry></row><row><entry>indicated by sfIdx. When alf_luma_coeff_abs[ sfIdx ][ j ] is not present, it is inferred to be equal 0.</entry></row><row><entry>alf_chroma_coeff_abs_len_minus1[ altIdx ] plus 1 specifies the number of bits used to represent the syntax</entry></row><row><entry>element alf_chroma_coeff_abs[ altIdx ][ j ]. The value of alf_chroma_abs_len_minus1 shall be in the range of 0</entry></row><row><entry>to 15, inclusive.</entry></row><row><entry>alf_chroma_coeff_abs[ altIdx ][ j ] specifics the absolute value of the j-th chroma filter coefficient for the</entry></row><row><entry>alternative chroma filter with index altIdx. When alf_chroma_coeff_abs[ altIdx ][ j ] is not present, it is inferred</entry></row><row><entry>to be equal 0.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0180" num="0171">According to embodiments of the present document described together with the above tables, through image coding based on subpictures and/or virtual boundaries, subjective/objective image quality may be improved, and there may be a decrease in a hardware resource consumption required for coding.</p><p id="p-0181" num="0172"><figref idref="DRAWINGS">FIG. <b>9</b></figref> and <figref idref="DRAWINGS">FIG. <b>10</b></figref> schematically show an example of a video/image encoding method and related components according to embodiment(s) of the present document.</p><p id="p-0182" num="0173">The method disclosed in <figref idref="DRAWINGS">FIG. <b>9</b></figref> may be performed by the encoding apparatus disclosed in <figref idref="DRAWINGS">FIG. <b>2</b></figref> or <figref idref="DRAWINGS">FIG. <b>10</b></figref>. Specifically, for example, S<b>900</b> and S<b>910</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref> may be performed by a by a residual processor <b>230</b> of the encoding apparatus of <figref idref="DRAWINGS">FIG. <b>10</b></figref>, S<b>920</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref> may be performed by a filter <b>260</b> of the encoding apparatus of <figref idref="DRAWINGS">FIG. <b>10</b></figref>, and S<b>930</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref> may be performed by an entropy encoder <b>240</b> of the encoding apparatus of <figref idref="DRAWINGS">FIG. <b>10</b></figref>. In addition, although not shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, prediction samples or prediction-related information may be derived by a predictor <b>220</b> of the encoding apparatus of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, and a bitstream may be generated from residual information or prediction-related information by the entropy encoder <b>240</b> of the encoding apparatus. The method disclosed in <figref idref="DRAWINGS">FIG. <b>9</b></figref> may include the aforementioned embodiments in the present document.</p><p id="p-0183" num="0174">The encoding apparatus may derive at least one reference picture. The encoding apparatus may perform a prediction process, based on the at least one reference picture. Specifically, the encoding apparatus may derive the prediction samples of the current blocks, based on a prediction mode. In this case, various prediction methods disclosed in the present document, such as inter prediction or intra prediction, may be applied. The encoding apparatus may generate prediction samples for the current block in the current picture, based on the prediction process. For example, the encoding apparatus may perform an inter prediction process, based on the at least one reference picture, and may generate prediction samples, based on the inter prediction process.</p><p id="p-0184" num="0175">The encoding apparatus may generate reference picture-related information. The encoding apparatus may generate the reference picture-related information, based on the at least one reference picture. The reference picture-related information may be used for inter prediction by the decoding apparatus.</p><p id="p-0185" num="0176">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the encoding apparatus may derive residual samples (S<b>900</b>). The encoding apparatus may derive residual samples for a current block, and the residual samples for the current block may be derived based on original samples and prediction samples of the current block. Specifically, the encoding apparatus may derive the prediction samples of the current blocks, based on a prediction mode. In this case, various prediction methods disclosed in the present document, such as inter prediction or intra prediction, may be applied. The residual samples may be derived based on the prediction samples and the original samples.</p><p id="p-0186" num="0177">The encoding apparatus may derive transform coefficients. The encoding apparatus may derive the transform coefficients, based on a transform process for the residual samples. For example, the transform process may include at least one of a discrete cosine transform (DCT), a discrete sine transform (DST), a graph-based transform (GBT), and a conditionally non-linear transform (CNT).</p><p id="p-0187" num="0178">The encoding apparatus may derive quantized transform coefficients. The encoding apparatus may derive the quantized transform coefficients, based on a quantization process for the transform coefficients. The quantized transform coefficients may have a 1-dimensional vector form, based on a coefficient scan order.</p><p id="p-0188" num="0179">The encoding apparatus may generate residual information (S<b>910</b>). The encoding apparatus may generate the residual information, based on the transform coefficients. The encoding apparatus may generate residual information indicating the quantized transform coefficients. The residual information may be generated through various encoding methods such as exponential Golomb, CAVLC, CABAC, or the like.</p><p id="p-0189" num="0180">The encoding apparatus may generate reconstructed samples. The encoding apparatus may generate the reconstructed samples, based on the residual information. The reconstructed samples may be generated by adding the prediction sample and the residual samples based on the residual information. Specifically, the encoding apparatus may perform prediction (intra or inter prediction) on the current block, and may generate reconstructed samples, based on original samples and the prediction samples generated from the prediction.</p><p id="p-0190" num="0181">The reconstructed samples may include reconstructed luma samples and reconstructed chroma samples. Specifically, the residual samples may include residual luma samples and residual chroma samples. The residual luma samples may be generated based on original luma samples and prediction luma samples. The residual chroma samples may be generated based on the original chroma samples and the prediction chroma samples. The encoding apparatus may derive transform coefficients for the residual luma samples (luma transform coefficients) and/or transform coefficients for the residual chroma samples (chroma transform coefficients). Quantized transform coefficients may include quantized luma transform coefficients and/or quantized chroma transform coefficients.</p><p id="p-0191" num="0182">The encoding apparatus may determine whether the in-loop filtering process is performed on the reconstructed samples of the current picture across virtual boundaries (S<b>920</b>). The virtual boundaries may be described according to the aforementioned content. The in-loop filtering process may include at least one of a deblocking process, an SAO process, and an ALF process.</p><p id="p-0192" num="0183">The encoding apparatus may encode video/image information (S<b>930</b>). The encoding apparatus may encode the video/image information, based on the residual information and the determination of the step S<b>920</b>. For example, the encoding apparatus may generate in-loop filtering-related information and/or virtual boundaries-related information, based on the determination of the step S<b>920</b>. The video/image information may include residual information, prediction-related information, reference picture-related information, subpicture-related information, in-loop filtering-related information, and/or virtual boundaries-related information (and/or additional virtual boundaries-related information). The encoded video/image information may be output in the form of a bitstream. The bitstream may be transmitted to a decoding apparatus through a network or a storage medium.</p><p id="p-0193" num="0184">The image/video information may include a variety of information according to an embodiment of the present document. For example, the image/video may include information disclosed in at least one of the tables 1 to 14 above.</p><p id="p-0194" num="0185">In an embodiment, the image information may include a sequence parameter set (SPS). For example, whether the SPS includes additional virtual boundaries-related information may be determined based on whether reference picture resampling is enabled. Herein, the reference picture resampling may be performed according to the aforementioned reference picture resampling (RPR). The additional virtual boundaries-related information may also be simply referred to as virtual boundaries-related information. The term &#x2018;additional&#x2019; is used to be distinguished from virtual boundaries-related information such as an SPS virtual boundaries present flag and/or a PH virtual boundaries present flag.</p><p id="p-0195" num="0186">In an embodiment, the additional virtual boundaries-related information may include the number of virtual boundaries and positions of the virtual boundaries.</p><p id="p-0196" num="0187">In an embodiment, the additional virtual boundaries-related information may include information on the number of vertical virtual boundaries, information on positions of the vertical virtual boundaries, information on the number of horizontal virtual boundaries, and information on positions of the horizontal virtual boundaries.</p><p id="p-0197" num="0188">In an embodiment, the image information may include a reference picture resampling enabled flag. For example, whether the reference picture resampling is enabled may be determined based on the reference picture resampling enabled flag.</p><p id="p-0198" num="0189">In an embodiment, the SPS may include an SPS virtual boundaries present flag related to whether the SPS includes the additional virtual boundaries-related information. A value of the SPS virtual boundaries present flag may be determined to be 0, based on that the reference picture resampling is enabled.</p><p id="p-0199" num="0190">In an embodiment, the additional virtual boundaries-related information may be not included in the SPS, based on that reference picture resampling is enabled. The image information may include picture header information. In addition, the picture header information may include the additional virtual boundaries-related information.</p><p id="p-0200" num="0191">In an embodiment, the current picture may include a subpicture as only one subpicture. The subpicture may be independently coded. The reconstructed samples may be generated based on the subpicture. Subpicture-related information may be generated based on the subpicture. The image information may include the subpicture-related information.</p><p id="p-0201" num="0192">In an embodiment, a subpicture_treated_as_picture flag may be not present in the image information. Therefore, a value of the subpicture_treated_as_picture flag may be set through inference (estimation or prediction) at a decoding end. In an example, the value of the subpicture_treated_as_picture flag may be set to 1.</p><p id="p-0202" num="0193">In an embodiment, the current picture may include subpictures. In an example, the subpictures may be derived based on a merging process of two or more independently-coded-subpictures. The reconstructed samples may be generated based on the subpictures. Subpicture-related information may be generated based on the subpictures. In addition, the image information may include the subpicture-related information.</p><p id="p-0203" num="0194"><figref idref="DRAWINGS">FIG. <b>11</b></figref> and <figref idref="DRAWINGS">FIG. <b>12</b></figref> schematically show an example of a video/image decoding method and related components according to embodiment(s) of the present document.</p><p id="p-0204" num="0195">The method disclosed in <figref idref="DRAWINGS">FIG. <b>11</b></figref> may be performed by the decoding apparatus disclosed in <figref idref="DRAWINGS">FIG. <b>3</b></figref> or <figref idref="DRAWINGS">FIG. <b>12</b></figref>. Specifically, for example, S<b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref> may be performed by an entropy decoder <b>310</b> of the decoding apparatus, S<b>1110</b> may be performed by a residual processor <b>320</b> and/or adder <b>340</b> of the decoding apparatus, and S<b>1120</b> may be performed by a filter <b>350</b> of the decoding apparatus. The method disclosed in <figref idref="DRAWINGS">FIG. <b>11</b></figref> may include the aforementioned embodiments in the present document.</p><p id="p-0205" num="0196">Referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the decoding apparatus may receive/obtain video/image information (S<b>1100</b>). The video/image information may include residual information, prediction-related information, reference picture-related information, subpicture-related information, in-loop filtering-related information, and/or virtual boundaries-related information (and/or additional virtual boundaries-related information). The decoding apparatus may receive/obtain the image/video information through a bitstream.</p><p id="p-0206" num="0197">The image/video information may include a variety of information according to an embodiment of the present document. For example, the image/video may include information disclosed in at least one of the tables 1 to 14 above.</p><p id="p-0207" num="0198">The decoding apparatus may derive quantized transform coefficients. The decoding apparatus may derive the quantized transform coefficients, based on the residual information. The quantized transform coefficients may have a 1-dimensional vector form, based on a coefficient scan order. Quantized transform coefficients may include quantized luma transform coefficients and/or quantized chroma transform coefficients.</p><p id="p-0208" num="0199">The decoding apparatus may derive the transform coefficients. The decoding apparatus may derive the transform coefficients, based on a dequantization process for the quantized transform coefficients. The decoding apparatus may derive luma transform coefficients through dequantization, based on the quantized luma transform coefficients. The decoding apparatus may derive chroma transform coefficients through dequantization, based on the quantized chroma transform coefficients.</p><p id="p-0209" num="0200">The decoding apparatus may generate/derive residual samples. The decoding apparatus may derive the residual samples, based on the inverse-transform process for the transform coefficients. The decoding apparatus may derive residual luma samples through the inverse-transform process, based on the luma transform coefficients. The decoding apparatus may derive residual chroma samples through the inverse-transform, based on the chroma transform coefficients.</p><p id="p-0210" num="0201">The decoding apparatus may derive at least one reference picture, based on reference picture-related information. The decoding apparatus may perform a prediction process, based on the at least one reference picture. Specifically, the decoding apparatus may derive the prediction samples of the current blocks, based on a prediction mode. In this case, various prediction methods disclosed in the present document, such as inter prediction or intra prediction, may be applied. The decoding apparatus may generate prediction samples for the current block in the current picture, based on the prediction process. For example, the decoding apparatus may perform an inter prediction process, based on the at least one reference picture, and may generate prediction samples, based on the inter prediction process.</p><p id="p-0211" num="0202">The decoding apparatus may generate/derive reconstructed samples (S<b>1110</b>). For example, the decoding apparatus may generate/derive reconstructed luma samples and/or reconstructed chroma samples. The decoding apparatus may generate the reconstructed luma samples and/or the reconstructed chroma samples, based on the residual information. The decoding apparatus may generate the reconstructed samples, based on the residual information. The reconstructed samples may include the reconstructed luma samples and/or the reconstructed chroma samples. A luma component of the reconstructed samples may correspond to the reconstructed luma samples, and a chroma component of the reconstructed samples may correspond to the reconstructed chroma samples. The decoding apparatus may generate prediction luma samples and/or prediction chroma samples through a prediction process. The decoding apparatus may generate the reconstructed luma samples, based on the prediction luma samples and the residual luma samples. The decoding apparatus may generate the constructed chroma samples, based on the prediction chroma samples and the residual chroma samples.</p><p id="p-0212" num="0203">The decoding apparatus may generate modified (filtered) reconstructed samples (S<b>1120</b>). The decoding apparatus may generate the modified reconstructed samples, based on an in-loop filtering process for the reconstructed samples. The decoding apparatus may generate the modified reconstructed samples, based on in-loop filtering-related information (e.g., virtual boundaries-related information). The decoding apparatus may use a deblocking process, an SAO process, and/or an ALF process to generate the modified reconstructed samples.</p><p id="p-0213" num="0204">The step S<b>1120</b> may include determining of whether the in-loop filtering process is performed across virtual boundaries. That is, the decoding apparatus may determine whether the in-loop filtering process is performed across the virtual boundaries. The decoding apparatus may determine whether the in-loop filtering process is performed based on in-loop filtering-related information (and/or virtual boundaries-related information).</p><p id="p-0214" num="0205">In an embodiment, the image information may include an SPS. For example, whether the SPS includes additional virtual boundaries-related information may be determined based on whether reference picture resampling is enabled. Herein, the reference picture resampling may be performed according to the aforementioned RPR. The additional virtual boundaries-related information may also be simply referred to as virtual boundaries-related information. The term &#x2018;additional&#x2019; is used to be distinguished from virtual boundaries-related information such as an SPS virtual boundaries present flag and/or a PH virtual boundaries present flag.</p><p id="p-0215" num="0206">In an embodiment, the additional virtual boundaries-related information may include the number of virtual boundaries and positions of the virtual boundaries.</p><p id="p-0216" num="0207">In an embodiment, the additional virtual boundaries-related information may include information on the number of vertical virtual boundaries, information on positions of the vertical virtual boundaries, information on the number of horizontal virtual boundaries, and information on positions of the horizontal virtual boundaries.</p><p id="p-0217" num="0208">In an embodiment, the image information may include a reference picture resampling enabled flag. For example, whether the reference picture resampling is enabled may be determined based on the reference picture resampling enabled flag.</p><p id="p-0218" num="0209">In an embodiment, the SPS may include an SPS virtual boundaries present flag related to whether the SPS includes the additional virtual boundaries-related information. A value of the SPS virtual boundaries present flag may be determined to be 0, based on that the reference picture resampling is enabled.</p><p id="p-0219" num="0210">In an embodiment, the additional virtual boundaries-related information may be not included in the SPS, based on that reference picture resampling is enabled. The image information may include picture header information. In addition, the picture header information may include the additional virtual boundaries-related information.</p><p id="p-0220" num="0211">In an embodiment, the current picture may include a subpicture as only one subpicture. The subpicture may be independently coded. The reconstructed samples may be generated based on the subpicture, and information related to the subpicture may be generated based on the subpicture. In addition, the image information may include information related to the subpicture.</p><p id="p-0221" num="0212">In an embodiment, a picture handling flag for the subpicture (a subpicture_treated_as_picture flag) may not be present in the image information. Therefore, a value of subpicture_treated_as_picture flag may be set through inference (estimation or prediction) at a decoding end. In an example, the value of subpicture_treated_as_picture flag may be set to 1.</p><p id="p-0222" num="0213">In an embodiment, the current picture may include subpictures. In an example, the subpictures may be derived based on a merging process of two or more independently-coded-subpictures. The reconstructed samples may be generated based on the subpictures. Subpicture-related information may be generated based on the subpictures. In addition, the image information may include the subpicture-related information.</p><p id="p-0223" num="0214">In the presence of the residual sample for the current block, the decoding apparatus may receive residual information for a current block. The residual information may include a transform coefficient for residual samples. The decoding apparatus may derive residual samples (or a residual sample array) for the current block, based on the residual information. Specifically, the decoding apparatus may derive quantized transform coefficients, based on the residual information. The quantized transform coefficients may have a 1-dimensional vector form, based on a coefficient scan order. The decoding apparatus may derive the transform coefficients, based on a dequantization process for the quantized transform coefficients. The decoding apparatus may derive residual samples, based on the transform coefficients.</p><p id="p-0224" num="0215">The decoding apparatus may generate reconstructed samples, based on (intra) prediction samples and residual samples, and may derive a reconstructed block or reconstructed picture, based on the reconstructed samples. Specifically, the decoding apparatus may include reconstructed samples, based on a sum between the (intra) prediction samples and the residual samples. Thereafter, as described above, the decoding apparatus may optionally apply the in-loop filtering process such as the deblocking filtering and/or the SAO process to the reconstructed picture to improve subjective/objective image quality.</p><p id="p-0225" num="0216">For example, the decoding apparatus may obtain image information including all or parts of the above-described pieces of information (or syntax elements) by decoding the bitstream or the encoded information. Further, the bitstream or the encoded information may be stored in a computer readable storage medium, and may cause the above-described decoding method to be performed.</p><p id="p-0226" num="0217">Although methods have been described on the basis of a flowchart in which steps or blocks are listed in sequence in the above-described embodiments, the steps of the present document are not limited to a certain order, and a certain step may be performed in a different step or in a different order or concurrently with respect to that described above. Further, it will be understood by those ordinary skilled in the art that the steps of the flowcharts are not exclusive, and another step may be included therein or one or more steps in the flowchart may be deleted without exerting an influence on the scope of the present disclosure.</p><p id="p-0227" num="0218">The aforementioned method according to the present disclosure may be in the form of software, and the encoding apparatus and/or decoding apparatus according to the present disclosure may be included in a device for performing image processing, for example, a TV, a computer, a smart phone, a set-top box, a display device, or the like.</p><p id="p-0228" num="0219">When the embodiments of the present disclosure are implemented by software, the aforementioned method may be implemented by a module (process or function) which performs the aforementioned function. The module may be stored in a memory and executed by a processor. The memory may be installed inside or outside the processor and may be connected to the processor via various well-known means. The processor may include Application-Specific Integrated Circuit (ASIC), other chipsets, a logical circuit, and/or a data processing device. The memory may include a Read-Only Memory (ROM), a Random Access Memory (RAM), a flash memory, a memory card, a storage medium, and/or other storage device. In other words, the embodiments according to the present disclosure may be implemented and executed on a processor, a micro-processor, a controller, or a chip. For example, functional units illustrated in the respective figures may be implemented and executed on a computer, a processor, a microprocessor, a controller, or a chip. In this case, information on implementation (for example, information on instructions) or algorithms may be stored in a digital storage medium.</p><p id="p-0229" num="0220">In addition, the decoding apparatus and the encoding apparatus to which the embodiment(s) of the present document is applied may be included in a multimedia broadcasting transceiver, a mobile communication terminal, a home cinema video device, a digital cinema video device, a surveillance camera, a video chat device, and a real time communication device such as video communication, a mobile streaming device, a storage medium, a camcorder, a video on demand (VoD) service provider, an Over The Top (OTT) video device, an internet streaming service provider, a 3D video device, a Virtual Reality (VR) device, an Augment Reality (AR) device, an image telephone video device, a vehicle terminal (for example, a vehicle (including an autonomous vehicle) terminal, an airplane terminal, or a ship terminal), and a medical video device; and may be used to process an image signal or data. For example, the OTT video device may include a game console, a Bluray player, an Internet-connected TV, a home theater system, a smartphone, a tablet PC, and a Digital Video Recorder (DVR).</p><p id="p-0230" num="0221">In addition, the processing method to which the embodiment(s) of the present document is applied may be produced in the form of a program executed by a computer and may be stored in a computer-readable recording medium. Multimedia data having a data structure according to the embodiment(s) of the present document may also be stored in the computer-readable recording medium. The computer readable recording medium includes all kinds of storage devices and distributed storage devices in which computer readable data is stored. The computer-readable recording medium may include, for example, a Bluray disc (BD), a universal serial bus (USB), a ROM, a PROM, an EPROM, an EEPROM, a RAM, a CD-ROM, a magnetic tape, a floppy disk, and an optical data storage device. The computer-readable recording medium also includes media embodied in the form of a carrier wave (for example, transmission over the Internet). In addition, a bitstream generated by the encoding method may be stored in the computer-readable recording medium or transmitted through a wired or wireless communication network.</p><p id="p-0231" num="0222">In addition, the embodiment(s) of the present document may be embodied as a computer program product based on a program code, and the program code may be executed on a computer according to the embodiment(s) of the present document. The program code may be stored on a computer-readable carrier.</p><p id="p-0232" num="0223"><figref idref="DRAWINGS">FIG. <b>13</b></figref> represents an example of a contents streaming system to which the embodiment of the present document may be applied.</p><p id="p-0233" num="0224">Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the content streaming system to which the embodiments of the present document is applied may generally include an encoding server, a streaming server, a web server, a media storage, a user device, and a multimedia input device.</p><p id="p-0234" num="0225">The encoding server functions to compress to digital data the contents input from the multimedia input devices, such as the smart phone, the camera, the camcorder and the like, to generate a bitstream, and to transmit it to the streaming server. As another example, in a case where the multimedia input device, such as, the smart phone, the camera, the camcorder or the like, directly generates a bitstream, the encoding server may be omitted.</p><p id="p-0235" num="0226">The bitstream may be generated by an encoding method or a bitstream generation method to which the embodiments of the present document is applied. And the streaming server may temporarily store the bitstream in a process of transmitting or receiving the bitstream.</p><p id="p-0236" num="0227">The streaming server transmits multimedia data to the user equipment on the basis of a user's request through the web server, which functions as an instrument that informs a user of what service there is. When the user requests a service which the user wants, the web server transfers the request to the streaming server, and the streaming server transmits multimedia data to the user. In this regard, the contents streaming system may include a separate control server, and in this case, the control server functions to control commands/responses between respective equipment in the content streaming system.</p><p id="p-0237" num="0228">The streaming server may receive contents from the media storage and/or the encoding server. For example, in a case the contents are received from the encoding server, the contents may be received in real time. In this case, the streaming server may store the bitstream for a predetermined period of time to provide the streaming service smoothly.</p><p id="p-0238" num="0229">For example, the user equipment may include a mobile phone, a smart phone, a laptop computer, a digital broadcasting terminal, a personal digital assistant (PDA), a portable multimedia player (PMP), a navigation, a slate PC, a tablet PC, an ultrabook, a wearable device (e.g., a watch-type terminal (smart watch), a glass-type terminal (smart glass), a head mounted display (HMD)), a digital TV, a desktop computer, a digital signage or the like.</p><p id="p-0239" num="0230">Each of servers in the contents streaming system may be operated as a distributed server, and in this case, data received by each server may be processed in distributed manner.</p><p id="p-0240" num="0231">Claims in the present description can be combined in a various way. For example, technical features in method claims of the present description can be combined to be implemented or performed in an apparatus, and technical features in apparatus claims can be combined to be implemented or performed in a method. Further, technical features in method claim(s) and apparatus claim(s) can be combined to be implemented or performed in an apparatus. Further, technical features in method claim(s) and apparatus claim(s) can be combined to be implemented or performed in a method.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-19" num="01-19"><claim-text><b>1</b>-<b>19</b>. (canceled)</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. An image decoding method performed by a decoding apparatus, comprising:<claim-text>obtaining image information including residual information through a bitstream;</claim-text><claim-text>generating reconstructed samples of a current picture, based on the residual information;</claim-text><claim-text>performing an in-loop filtering process on the reconstructed samples of the current picture to generate modified reconstructed samples; and</claim-text><claim-text>determining whether the in-loop filtering process is performed across virtual boundaries,</claim-text><claim-text>wherein the image information includes a sequence parameter set (SPS),</claim-text><claim-text>wherein based on whether reference picture resampling is enabled, whether the SPS includes additional virtual boundaries-related information is determined, and</claim-text><claim-text>wherein the additional virtual boundaries-related information includes information on a number of the virtual boundaries included in the SPS and information on positions of the virtual boundaries included in the SPS.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The image decoding method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the additional virtual boundaries-related information includes information on the number of vertical virtual boundaries, information on positions of the vertical virtual boundaries, information on the number of horizontal virtual boundaries, and information on positions of the horizontal virtual boundaries.</claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The image decoding method of <claim-ref idref="CLM-00020">claim 20</claim-ref>,<claim-text>wherein the image information includes a reference picture resampling enabled flag, and</claim-text><claim-text>wherein whether the reference picture resampling is enabled is determined based on the reference picture resampling enabled flag.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The image decoding method of <claim-ref idref="CLM-00020">claim 20</claim-ref>,<claim-text>wherein the SPS includes an SPS virtual boundaries present flag related to whether the SPS includes the additional virtual boundaries-related information, and</claim-text><claim-text>wherein a value of the SPS virtual boundaries present flag is determined to be 0, based on that the reference picture resampling is enabled.</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The image decoding method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the additional virtual boundaries-related information is not included in the SPS, based on that the reference picture resampling is enabled.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The image decoding method of <claim-ref idref="CLM-00024">claim 24</claim-ref>,<claim-text>wherein the image information includes picture header information, and</claim-text><claim-text>wherein the picture header information includes information on a number of the virtual boundaries and information on positions of the virtual boundaries.</claim-text></claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. An image encoding method performed by an encoding apparatus, comprising:<claim-text>generating residual samples for a current block;</claim-text><claim-text>generating residual information, based on the residual samples for the current block;</claim-text><claim-text>determining whether the in-loop filtering process is performed on the reconstructed samples of the current picture across virtual boundaries; and</claim-text><claim-text>encoding image information, based on the residual information and the determination,</claim-text><claim-text>wherein the image information includes a sequence parameter set (SPS),</claim-text><claim-text>wherein based on whether reference picture resampling is enabled, whether the SPS includes additional virtual boundaries-related information is determined, and</claim-text><claim-text>wherein the additional virtual boundaries-related information includes information on a number of the virtual boundaries included in the SPS and information on positions of the virtual boundaries included in the SPS.</claim-text></claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The image encoding method of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the additional virtual boundaries-related information includes information on the number of vertical virtual boundaries, information on positions of the vertical virtual boundaries, information on the number of horizontal virtual boundaries, and information on positions of the horizontal virtual boundaries.</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The image encoding method of <claim-ref idref="CLM-00026">claim 26</claim-ref>,<claim-text>wherein the image information includes a reference picture resampling enabled flag, and</claim-text><claim-text>wherein whether the reference picture resampling is enabled is determined based on the reference picture resampling enabled flag.</claim-text></claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The image encoding method of <claim-ref idref="CLM-00026">claim 26</claim-ref>,<claim-text>wherein the SPS includes an SPS virtual boundaries present flag related to whether the SPS includes the additional virtual boundaries-related information, and</claim-text><claim-text>wherein a value of the SPS virtual boundaries present flag is determined to be 0, based on that the reference picture resampling is enabled.</claim-text></claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The image encoding method of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the additional virtual boundaries-related information is not included in the SPS, based on that the reference picture resampling is enabled.</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. The image encoding method of <claim-ref idref="CLM-00030">claim 30</claim-ref>,<claim-text>wherein the image information includes picture header information, and</claim-text><claim-text>wherein the picture header information includes information on a number of the virtual boundaries and information on positions of the virtual boundaries.</claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The image encoding method of <claim-ref idref="CLM-00026">claim 26</claim-ref>,<claim-text>wherein the current picture includes a subpicture as only one subpicture,</claim-text><claim-text>wherein subpicture is independently coded,</claim-text><claim-text>wherein the reconstructed samples are generated based on the subpicture,</claim-text><claim-text>wherein subpicture-related information is generated based on the subpicture, and</claim-text><claim-text>wherein the image information includes the subpicture-related information.</claim-text></claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The image encoding method of <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein a subpicture_treated_as_picture flag is not present in the image information.</claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The image encoding method of <claim-ref idref="CLM-00033">claim 33</claim-ref>, wherein a value of the subpicture_treated_as_picture flag is set to 1.</claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The image encoding method of <claim-ref idref="CLM-00026">claim 26</claim-ref>,<claim-text>wherein the current picture includes subpictures,</claim-text><claim-text>wherein the subpictures are derived based on a merging process of two or more independently-coded-subpictures,</claim-text><claim-text>wherein the reconstructed samples are generated based on the subpictures,</claim-text><claim-text>wherein subpicture-related information is generated based on the subpictures, and</claim-text><claim-text>wherein the image information includes the subpicture-related information.</claim-text></claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. A non-transitory computer readable storage medium storing a bitstream generated by an image encoding method, the image encoding method comprising:<claim-text>generating residual samples for a current block;</claim-text><claim-text>generating residual information, based on the residual samples for the current block;</claim-text><claim-text>determining whether the in-loop filtering process is performed on the reconstructed samples of the current picture across virtual boundaries; and</claim-text><claim-text>encoding image information, based on the residual information and the determination,</claim-text><claim-text>wherein the image information includes a sequence parameter set (SPS),</claim-text><claim-text>wherein based on whether reference picture resampling is enabled whether the SPS includes additional virtual boundaries-related information is determined, and</claim-text><claim-text>wherein the additional virtual boundaries-related information includes information on a number of the virtual boundaries included in the SPS and information on positions of the virtual boundaries included in the SPS.</claim-text></claim-text></claim></claims></us-patent-application>