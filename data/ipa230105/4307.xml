<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004308A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004308</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17704354</doc-number><date>20220325</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>KR</country><doc-number>10-2021-0085267</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0619</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0655</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0673</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHODS OF OPERATING MEMORY CONTROLLERS, MEMORY CONTROLLERS PERFORMING THE METHODS AND MEMORY SYSTEMS INCLUDING THE MEMORY CONTROLLERS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Samsung Electronics Co., Ltd.</orgname><address><city>Suwon-si</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Kim</last-name><first-name>Sungrae</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Cho</last-name><first-name>Sunghye</first-name><address><city>Hwaseong-si</city><country>KR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Lee</last-name><first-name>Kijun</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Lee</last-name><first-name>Myungkyu</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In a method of operating a memory controller, a decoding status flag is received from a memory module including a plurality of data chips and at least one parity chip. Each of the plurality of data chips and the at least one parity chip may include an on-die error correction code (ECC) engine. The decoding status flag is generated by the on-die ECC engines. A first number and a second number may be obtained based on the decoding status flag. The first number represents a number of first chips including an uncorrectable error that is uncorrectable by the on-die ECC engine. The second number represents a number of second chips including a correctable error that is correctable by the on-die ECC engine. At least one of a plurality of decoding schemes is selected based on at least one of the first number and the second number. A system ECC engine may perform ECC decoding on at least one of the first chips and the second chips based on the selected decoding scheme.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="124.46mm" wi="131.57mm" file="US20230004308A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="151.47mm" wi="133.60mm" file="US20230004308A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="142.92mm" wi="148.76mm" file="US20230004308A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="161.97mm" wi="153.67mm" file="US20230004308A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="233.51mm" wi="157.14mm" orientation="landscape" file="US20230004308A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="233.85mm" wi="156.80mm" orientation="landscape" file="US20230004308A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="150.11mm" wi="137.92mm" file="US20230004308A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="152.65mm" wi="154.94mm" file="US20230004308A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="246.21mm" wi="84.92mm" file="US20230004308A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="133.10mm" wi="84.92mm" file="US20230004308A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="153.16mm" wi="156.13mm" file="US20230004308A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="224.71mm" wi="164.68mm" file="US20230004308A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="179.49mm" wi="130.98mm" file="US20230004308A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="245.03mm" wi="155.02mm" orientation="landscape" file="US20230004308A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="206.42mm" wi="147.83mm" file="US20230004308A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="223.69mm" wi="137.84mm" file="US20230004308A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="178.05mm" wi="128.95mm" file="US20230004308A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="127.00mm" wi="144.10mm" file="US20230004308A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="230.12mm" wi="147.83mm" file="US20230004308A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="181.27mm" wi="147.91mm" file="US20230004308A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="101.26mm" wi="138.01mm" file="US20230004308A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="237.91mm" wi="145.20mm" orientation="landscape" file="US20230004308A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="237.91mm" wi="145.12mm" orientation="landscape" file="US20230004308A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="237.91mm" wi="145.12mm" orientation="landscape" file="US20230004308A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="238.08mm" wi="145.12mm" orientation="landscape" file="US20230004308A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="238.17mm" wi="145.20mm" orientation="landscape" file="US20230004308A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="240.88mm" wi="160.44mm" orientation="landscape" file="US20230004308A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="238.17mm" wi="144.86mm" orientation="landscape" file="US20230004308A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="230.12mm" wi="147.49mm" file="US20230004308A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="178.56mm" wi="122.60mm" file="US20230004308A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="91.86mm" wi="138.01mm" file="US20230004308A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="238.68mm" wi="145.46mm" orientation="landscape" file="US20230004308A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="238.93mm" wi="145.29mm" orientation="landscape" file="US20230004308A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="238.76mm" wi="145.12mm" orientation="landscape" file="US20230004308A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="238.93mm" wi="145.12mm" orientation="landscape" file="US20230004308A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="238.93mm" wi="145.20mm" orientation="landscape" file="US20230004308A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="242.99mm" wi="145.03mm" orientation="landscape" file="US20230004308A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="132.00mm" wi="155.79mm" file="US20230004308A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="144.78mm" wi="149.52mm" file="US20230004308A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims priority under 35 USC &#xa7; 119 to Korean Patent Application No. 10-2021-0085267 filed on Jun. 30, 2021, in the Korean Intellectual Property Office (KIPO), with the contents of the above-identified application herein incorporated by reference in their entirety.</p><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Aspects of the present disclosure relate generally to semiconductor integrated circuits, and more particularly to methods of operating memory controllers, memory controllers performing the methods, and memory systems including the memory controllers.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Semiconductor memory devices may be classified into nonvolatile memory devices, such as flash memories, and volatile memory devices, such as dynamic random access memories (DRAMs). High speed operation and cost efficiency of volatile memory devices make it possible for volatile memory devices to be used for system memories. Miniaturization and/or increased integration of memory devices is a desirable goal in semiconductor memory device manufacturing. Due to the continuing reduction in size of fabrication design rules of the volatile memory devices, bit errors in memory cells of the volatile memory devices may increase rapidly and yield of the volatile memory devices may decrease. In addition, a plurality of volatile memory devices may be provided in the form of memory modules in order to provide a relatively large storage capacity. Thus, various research projects to improve reliability of the volatile memory devices and the memory modules are ongoing.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">Some aspects of the present disclosure provide a method of operating a memory controller capable of efficiently performing an optimal error correction code (ECC) decoding depending on a state of a memory module.</p><p id="p-0006" num="0005">Some aspects of the present disclosure provide a memory controller that performs the method of operating the memory controller and a memory system that includes the memory controller.</p><p id="p-0007" num="0006">According to some aspects, in a method of operating a memory controller configured to control a memory module, a decoding status flag may be received from the memory module including a plurality of data chips and at least one parity chip. Each of the plurality of data chips and the at least one parity chip may include an on-die error correction code (ECC) engine. The decoding status flag may be generated by the on-die ECC engines. A first number and a second number may be obtained based on the decoding status flag. The first number represents a number of first chips including an uncorrectable error that is uncorrectable by the respective on-die ECC engine. The second number represents a number of second chips including a correctable error that is correctable by the respective on-die ECC engine. At least one of a plurality of decoding schemes is selected based on at least one of the first number and the second number. An ECC decoding may be performed, by a system ECC engine included in the memory controller, on at least one of the first chips and the second chips based on the selected decoding scheme.</p><p id="p-0008" num="0007">According to some aspects, a memory controller configured to control a memory module may include a decoding status flag decoder and a system error correction code (ECC) engine. The decoding status flag decoder may receive a decoding status flag from the memory module, and obtains a first number and a second number based on the decoding status flag. The memory module may include a plurality of data chips and at least one parity chip. Each of the plurality of data chips and the at least one parity chip may include an on-die ECC engine. The decoding status flag may be generated by the on-die ECC engine. The first number represents a number of first chips including an uncorrectable error that is uncorrectable by the respective on-die ECC engine. The second number represents a number of second chips including a correctable error that is correctable by the on-die ECC engine among the plurality of data chips and the at least one parity chip. The system ECC engine may select at least one of a plurality of decoding schemes based on at least one of the first number and the second number, and may perform an ECC decoding on at least one of the first chips and the second chips based on the selected decoding scheme.</p><p id="p-0009" num="0008">According to some aspects, a memory system includes a memory module and a memory controller. The memory module includes a plurality of data chips and at least one parity chip. Each of the plurality of data chips and the at least one parity chip includes an on-die error correction code (ECC) engine. The memory controller controls the memory module. The memory controller includes a decoding status flag decoder and a system ECC engine. The decoding status flag decoder receives a decoding status flag from the memory module, and obtains a first number and a second number based on the decoding status flag. The decoding status flag may be generated by the on-die ECC engines. The first number represents a number of first chips including an uncorrectable error that is uncorrectable by the respective on-die ECC engine. The second number represents a number of second chips including a correctable error that is correctable by the respective on-die ECC engine. The system ECC engine selects at least one of a plurality of decoding schemes based on at least one of the first number and the second number, and performs an ECC decoding on at least one of the first chips and the second chips based on the selected decoding scheme. The system ECC engine selects the at least one of the plurality of decoding schemes based on the second number in response to the first number being less than or equal to a first reference value, and selects the at least one of the plurality of decoding schemes based on the first number in response to the first number being greater than the first reference value. Each on-die ECC engine includes a syndrome generation circuit, an error locator, a data corrector and a decoding status flag generator. The syndrome generation circuit generates a syndrome based on read data and parity data. The error locator generates an error position signal by decoding the syndrome. The error position signal represents a position of an error bit in the read data. The data corrector outputs corrected data by correcting the error bit included in the read data based on the error position signal. The decoding status flag generator generates the decoding status flag based on the syndrome and the error position signal. The decoding status flag represents a state of the error bit in the read data.</p><p id="p-0010" num="0009">In the method of operating the memory controller, the memory controller and the memory system according to example embodiments, the memory controller may receive the decoding status flag that is generated by the on-die ECC engine included in the memory chip included in the memory module, and the system ECC engine included in the memory controller may perform the ECC decoding by selecting the decoding scheme suitable for the current situation of error occurrence in the memory module based on the decoding status flag signal. Accordingly, the performance and/or efficiency of the ECC decoding may be improved or enhanced.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010">Some illustrative and non-limiting examples of embodiments will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a flowchart illustrating a method of operating a memory controller according to some example embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating a memory controller and a memory system including the memory controller according to some example embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating an example of a memory controller according to some example embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. <b>4</b>A and <b>4</b>B</figref> are diagrams illustrating examples of data sets corresponding to a plurality of burst lengths in a memory system according to some example embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example of a system ECC engine included in a memory controller according to some example embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, <b>6</b>C and <b>6</b>D</figref> are diagrams illustrating an example of a parity generation matrix used in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating an example of an ECC encoder included in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIGS. <b>8</b>A and <b>8</b>B</figref> are diagrams illustrating an example of a parity check matrix used in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an example of an ECC decoder included in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram illustrating an example of a data chip included in a memory module included in a memory system according to some example embodiments.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram illustrating an example of a bank array included in a data chip of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram illustrating an example of an on-die ECC engine included in a memory module included in a memory system according to some example embodiments.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram illustrating an example of an ECC encoder included in an on-die ECC engine of <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram illustrating an example of an ECC decoder included in an on-die ECC engine of <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart illustrating an example of selecting at least one of a plurality of decoding schemes in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIGS. <b>16</b> and <b>17</b></figref> are flowcharts illustrating an example of selecting at least one of a plurality of decoding schemes and an example of performing an ECC decoding in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIGS. <b>18</b>, <b>19</b>A, <b>19</b>B, <b>19</b>C, <b>19</b>D, <b>19</b>E, <b>19</b>F and <b>19</b>G</figref> are diagrams for describing operations of <figref idref="DRAWINGS">FIGS. <b>16</b> and <b>17</b></figref>.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIGS. <b>20</b> and <b>21</b></figref> are flowcharts illustrating another example of selecting at least one of a plurality of decoding schemes and an example of performing an ECC decoding in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIGS. <b>22</b>, <b>23</b>A, <b>23</b>B, <b>23</b>C, <b>23</b>D and <b>23</b>E</figref> are diagrams for describing operations of <figref idref="DRAWINGS">FIGS. <b>20</b> and <b>21</b></figref>.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a block diagram illustrating an example of a memory module that may be employed to a memory system according to some example embodiments.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a block diagram illustrating an example of a memory system according to some example embodiments.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a block diagram illustrating an electronic system including a memory module according to some example embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0034" num="0033">Various example embodiments will be described more fully with reference to the accompanying drawings, in which some of the example embodiments are shown. The present disclosure may, however, be embodied in many different forms and should not be construed as limited to those embodiments set forth herein. Like reference numerals refer to like elements throughout this application.</p><p id="p-0035" num="0034">Some aspects of the present disclosure provide methods of operating a memory controller according to some example embodiments, as seen in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, which is a flowchart illustrating such a method. The memory controller may be included in a memory system that also includes a memory module that is controlled by the memory controller. In some embodiments, the memory module includes a plurality of data chips and at least one parity chip, and each of the plurality of data chips and the at least one parity chip includes an on-die ECC engine. The memory controller includes a system ECC engine. Detailed configurations of the memory system, the memory controller and the memory module will be described with reference to <figref idref="DRAWINGS">FIGS. <b>2</b> through <b>14</b></figref>.</p><p id="p-0036" num="0035">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in a method of operating a memory controller according to some example embodiments, the memory controller may be applied, employed, operated, or driven to perform an error correction code (ECC) decoding. Example embodiments may be referred to or described herein as methods of operating a memory system and/or methods of performing an ECC decoding on a memory module included in a memory system.</p><p id="p-0037" num="0036">The memory controller may receive a decoding status flag from the memory module (step S<b>100</b>). The decoding status flag may be generated by the on-die ECC engine. The decoding status flag may represent or indicate whether each memory chip includes an uncorrectable error (UE) that is uncorrectable by the on-die ECC engine, and/or whether each memory chip includes a correctable error (CE) that is correctable by the on-die ECC engine. Stated differently, errors in decoding may be classified as uncorrectable errors that cannot be corrected by the on-die ECC engine, or as correctable errors that can be corrected by the on-die ECC engine.</p><p id="p-0038" num="0037">The memory controller may obtain a first number and a second number based on the decoding status flag (step S<b>200</b>). The first number may represent a number (or quantity) of first chips among the plurality of data chips and the at least one parity chip with an uncorrectable error. The second number represents the number (or quantity) of second chips among the plurality of data chips and the at least one parity chip with a correctable error. In other words, the decoding status flag may include information associated with or related to the uncorrectable errors that are uncorrectable by the on-die ECC engine and the correctable errors that are correctable by the on-die ECC engine.</p><p id="p-0039" num="0038">The memory controller may select at least one of a plurality of decoding schemes based on at least one of the first number and the second number (step S<b>300</b>). The system ECC engine included in the memory controller may perform the ECC decoding on at least one of the first chip and the second chip based on the selected decoding scheme (step S<b>400</b>). In other words, the ECC decoding may be performed by selecting a decoding scheme that is suitable or appropriate for a current situation (or status) and/or occurrences of errors in the in the memory module. Steps S<b>300</b> and S<b>400</b> will be described in greater detail with reference to <figref idref="DRAWINGS">FIGS. <b>15</b> through <b>23</b></figref>.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating a memory controller and a memory system including the memory controller according to some example embodiments.</p><p id="p-0041" num="0040">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a memory system <b>10</b> may include a memory controller <b>100</b> and a memory module MM. The memory module MM may include a plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>(e.g., <b>200</b><i>a</i>, <b>200</b><i>b</i>, <b>200</b><i>c</i>, . . . , <b>200</b><i>k</i>) and <b>200</b><i>p</i>. The plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p </i>may include a plurality of data chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and at least one parity chip <b>200</b><i>p</i>. Each of the plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p </i>may be referred to as a semiconductor memory device or a memory device.</p><p id="p-0042" num="0041">The memory controller <b>100</b> may control an overall operation of the memory system <b>10</b>. The memory controller <b>100</b> may control an overall data exchange between an external host device and the plurality of memory chips (or memory devices) <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p</i>. For example, the memory controller <b>100</b> may write data in the plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p </i>and/or read data from the plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p </i>in response to a request from the host. Alternatively or additionally, the memory controller <b>100</b> may issue operation commands to the plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p </i>for controlling the plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p. </i></p><p id="p-0043" num="0042">In some example embodiments, each of the plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p </i>may include a volatile memory including volatile memory cells, such as a dynamic random access memory (DRAM).</p><p id="p-0044" num="0043">In some example embodiments, the number of the plurality of data chips <b>200</b><i>a </i>to <b>200</b><i>k </i>may be eight or sixteen. However, the number of the data chips <b>200</b><i>a </i>to <b>200</b><i>k </i>is not limited thereto, and may be more than eight or sixteen, or less than eight or sixteen, and may be a power of two, or may not be a power of two. In some example embodiments, each of the data chips <b>200</b><i>a </i>to <b>200</b><i>k </i>may be referred to as a data memory, and each of the parity chip <b>200</b><i>p </i>may be referred to as an ECC memory or a redundant memory.</p><p id="p-0045" num="0044">The memory controller <b>100</b> may transmit a command CMD and an address ADDR to the memory module MM, may exchange a codeword set SCW with the memory module MM, and may receive a decoding status flag DSF from the memory module MM.</p><p id="p-0046" num="0045">The memory controller <b>100</b> may include a system (SYS) ECC engine (or a first ECC engine) <b>130</b> and a decoding status flag (DSF) decoder <b>185</b>. Each of the plurality of memory chips <b>200</b><i>a </i>to <b>200</b><i>k </i>and <b>200</b><i>p </i>may include a respective one of a plurality of on-die (OD) ECC engines (or second ECC engines) <b>400</b><i>a </i>to <b>400</b><i>k </i>(e.g., <b>400</b><i>a</i>, <b>400</b><i>b</i>, <b>400</b><i>c</i>, . . . , <b>400</b><i>k</i>) and <b>400</b><i>p </i>that generate the decoding status flag DSF.</p><p id="p-0047" num="0046">In a write operation of the memory system <b>10</b>, the system ECC engine <b>130</b> may generate a parity data set by performing an ECC encoding on a user data set and a meta data using a parity generation matrix, and may provide the codeword set SCW including the user data set, the meta data and the parity data set to the memory module MM. The user data set (or main data) may be stored in the data chips <b>200</b><i>a </i>to <b>200</b><i>k</i>, and the meta data and parity data set may be stored in the parity chip <b>200</b><i>p. </i></p><p id="p-0048" num="0047">In a read operation of the memory system <b>10</b>, the decoding status flag decoder <b>185</b> may receive the decoding status flag DSF from the memory module MM, and may check, based on the decoding status flag DSF, whether an uncorrectable error that is uncorrectable by the on-die ECC engines <b>400</b><i>a </i>to <b>400</b><i>k </i>and <b>400</b><i>p </i>and/or a correctable error that is correctable by the on-die ECC engines <b>400</b><i>a </i>to <b>400</b><i>k </i>and <b>400</b><i>p </i>are included in the codeword set SCW (e.g., in the user data set). In addition, when the uncorrectable error that is uncorrectable by the on-die ECC engines <b>400</b><i>a </i>to <b>400</b><i>k </i>and <b>400</b><i>p </i>and/or the correctable error that is correctable by the on-die ECC engines <b>400</b><i>a </i>to <b>400</b><i>k </i>and <b>400</b><i>p </i>are included in the codeword set SCW, the decoding status flag decoder <b>185</b> may check, based on the decoding status flag DSF, the type and number of chips including the uncorrectable error(s) and/or the correctable error(s). The system ECC engine <b>130</b> may select at least one of a plurality of decoding schemes DEC<b>1</b>, . . . , DECX based on the type and number of chips including the uncorrectable error(s) and/or the correctable error(s), and may correct an error (or error bit) in the codeword set SCW by performing an ECC decoding on the codeword set SCW using the selected decoding scheme. In other words, the decoding status flag decoder <b>185</b> may perform steps S<b>100</b> and S<b>200</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and the system ECC engine <b>130</b> may perform steps S<b>300</b> and S<b>400</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0049" num="0048">Although <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates that one decoding status flag DSF is received from the memory module MM, example embodiments are not limited thereto. For example, each memory chip (or each on-die ECC engine included in each memory chip) may generate one decoding status flag, and a plurality of decoding status flags may be received from the memory module MM. In this example, each decoding status flag may include error information of a corresponding memory chip. For example, a first decoding status flag DSF may include error information of a first memory chip <b>200</b><i>a</i>, a second decoding status flag DSF may include error information of a second memory chip <b>200</b><i>b</i>, and so on.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating an example of a memory controller according to example embodiments.</p><p id="p-0051" num="0050">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a memory controller <b>100</b> may include a processor <b>110</b>, a host interface <b>120</b>, a data register <b>125</b>, a system ECC engine <b>130</b>, a decoding status flag decoder <b>185</b>, a command buffer <b>190</b> and an address buffer <b>195</b>. The system ECC engine <b>130</b> may include an ECC encoder <b>140</b>, an ECC decoder <b>150</b> and a memory <b>180</b>.</p><p id="p-0052" num="0051">The host interface <b>120</b> may receive a request REQ and a user data set SDQ from an external host device, may generate meta data MDT associated with the user data set SDQ, may provide the user data set SDQ to the data register <b>125</b>, and may provide the meta data MDT to the ECC encoder <b>140</b>. The data register <b>125</b> may continuously (and/or sequentially and/or serially) output the user data set SDQ to the ECC encoder <b>140</b>.</p><p id="p-0053" num="0052">The ECC encoder <b>140</b> may generate a first codeword set SCW<b>1</b> by performing an ECC encoding on the user data set SDQ and the meta data MDT using a parity generation matrix. The first codeword set SCW<b>1</b> may correspond to write data that is provided to the memory module MM and is stored in the memory module MM.</p><p id="p-0054" num="0053">The ECC decoder <b>150</b> may generate the user data set SDQ and/or a corrected user data set C_SDQ by performing an ECC decoding on a second codeword set SCW<b>2</b> using a parity check matrix, and may provide the user data set SDQ and/or the corrected user data set C_SDQ to the processor <b>110</b>. The second codeword set SCW<b>2</b> may correspond to read data that is retrieved from the memory module MM.</p><p id="p-0055" num="0054">The memory <b>180</b> may store the parity generation matrix and the parity check matrix.</p><p id="p-0056" num="0055">The processor <b>110</b> may receive the user data set SDQ and/or the corrected user data set C_SDQ, and may control the system ECC engine <b>130</b>, the command buffer <b>190</b> and/or the address buffer <b>195</b>. For example, the processor <b>110</b> may include a central processing unit (CPU).</p><p id="p-0057" num="0056">The command buffer <b>190</b> may store the command CMD corresponding to the request REQ, and may transmit the command CMD to the memory module MM under a control of the processor <b>110</b>. The address buffer <b>195</b> may store the address ADDR, and may transmit the address ADDR to the memory module MM under a control of the processor <b>110</b>.</p><p id="p-0058" num="0057">The DSF decoder <b>185</b> may generate a decoding signal DS by decoding the decoding status flag DSF received from the memory module MM, and may provide the decoding signal DS to the ECC decoder <b>150</b> and the processor <b>110</b>. The decoding signal DS may represent the type, location and number of errors included in the second codeword set SCW<b>2</b> (e.g., in the user data set SDQ provided from the memory module MM). The ECC decoder <b>150</b> and/or the processor <b>110</b> may select at least one of the plurality of decoding schemes DEC<b>1</b> to DECX based on the decoding signal DS, and the ECC decoder <b>150</b> may perform the ECC decoding based on the selected decoding scheme. In other words, step S<b>300</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be performed by the ECC decoder <b>150</b>, or may be performed under a control of the processor <b>110</b>.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIGS. <b>4</b>A and <b>4</b>B</figref> are diagrams illustrating examples of data sets corresponding to a plurality of burst lengths in a memory system according to example embodiments.</p><p id="p-0060" num="0059">Referring to <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, a memory module MM may include a plurality of memory chips <b>201</b><i>a </i>to <b>201</b><i>k </i>(e.g., <b>201</b><i>a</i>, <b>201</b><i>b</i>, <b>201</b><i>c</i>, . . . , <b>200</b><i>k</i>), <b>201</b><i>pa </i>and <b>201</b><i>pb</i>. The plurality of memory chips <b>201</b><i>a </i>to <b>201</b><i>k</i>, <b>201</b><i>pa </i>and <b>201</b><i>pb </i>may include a plurality of data chips <b>201</b><i>a </i>to <b>201</b><i>k</i>, a first parity chip <b>201</b><i>pa </i>and a second parity chip <b>201</b><i>pb</i>. For example, the plurality of data chips <b>201</b><i>a </i>to <b>201</b><i>k </i>may include first to N-th data chips, where N is a natural number equal to or greater than two. In the example of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, one memory chip may be connected to four data input/output (I/O) pins, and four data signals DQ<b>1</b>, DQ<b>2</b>, DQ<b>3</b> and DQ<b>4</b> may be input to and/or output from one memory chip. The example of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> may be referred to as x<b>4</b> structure.</p><p id="p-0061" num="0060">As illustrated in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, each of the data chips <b>201</b><i>a </i>to <b>201</b><i>k </i>and the parity chips <b>201</b><i>pa </i>and <b>201</b><i>pb </i>may perform a burst operation.</p><p id="p-0062" num="0061">Herein, a burst operation may represent an operation of writing and/or reading a large amount of data by sequentially increasing and/or decreasing an initial address provided from the memory controller <b>100</b>. A basic unit of the burst operation may be referred to a burst length (BL).</p><p id="p-0063" num="0062">Each of data sets DQ_BL<b>1</b>, . . . , DQ_BLk corresponding to a plurality of burst lengths may be input to and/or output from each of the data chips <b>201</b><i>a </i>to <b>201</b><i>k</i>. Each of the data sets DQ_BL<b>1</b> to DQ_BLk may include data segments DQ_BL SG<b>1</b>, DQ_BL SG<b>2</b>, DQ_BL SG<b>3</b>, DQ_BL SG<b>4</b>, DQ_BL SG<b>5</b>, DQ_BL SG<b>6</b>, DQ_BL SG<b>7</b> and DQ_BL SG<b>8</b> corresponding to each of the plurality of burst lengths. The data sets DQ_BL<b>1</b> to DQ_BLk may correspond to the user data set SDQ. For example, <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates an example where the burst length is eight, however, example embodiments and the present disclosure are not limited thereto.</p><p id="p-0064" num="0063">While the burst operation is performed on each of the data chips <b>201</b><i>a </i>to <b>201</b><i>k</i>, the meta data MDT and a first parity data PRTL corresponding to the plurality of burst lengths may be input to and/or output from the first parity chip <b>201</b><i>pa</i>, and a second parity data PRTM corresponding to the plurality of burst lengths may be input to and/or output from the second parity chip <b>201</b><i>pb</i>. The second parity data PRTM may include a first sub parity data PRTM<b>1</b> and a second sub parity data PRTM<b>2</b>.</p><p id="p-0065" num="0064">The first parity data PRTL may be referred to as error locator parity data, and may be associated with locations of error bits in the user data set SDQ. The second parity data PRTM may be referred to as error magnitude parity data, and may be associated with magnitudes (or numbers or counts) of the error bits in the user data set SDQ. <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates an example where the error locator parity data and the error magnitude parity data are stored in different parity chips.</p><p id="p-0066" num="0065">Referring to <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, a memory module MM may include a plurality of memory chips <b>202</b><i>a </i>to <b>202</b><i>p</i>. The descriptions repeated with <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> will be omitted.</p><p id="p-0067" num="0066">The plurality of memory chips <b>202</b><i>a </i>to <b>202</b><i>p </i>may include a plurality of data chips <b>202</b><i>a </i>and a first parity chip <b>202</b><i>p</i>. For example, the plurality of data chips <b>202</b><i>a </i>may include first to M-th data chips, where M is a natural number equal to or greater than two. In the example of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, one memory chip may be connected to eight data I/O pins, and eight data signals DQ<b>1</b>, DQ<b>2</b>, DQ<b>3</b>, DQ<b>4</b>, DQ<b>5</b>, DQ<b>6</b>, DQ<b>7</b> and DQ<b>8</b> may be input to and/or output from one memory chip. The example of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> may be referred to as x<b>8</b> structure.</p><p id="p-0068" num="0067">The size of data sets DQ_BL<b>1</b><i>a </i>and DQ_BL<b>1</b><i>b </i>that are input to and/or output from one memory chip in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> may be twice the size of the data set DQ_BL<b>1</b> that are input to and/or output from one memory chip in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>. When the memory module MM of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> and the memory module MM of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> include the same number of data I/O pins, the number of the data chips <b>202</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> may be a half of the number of the data chips <b>201</b><i>a </i>to <b>201</b><i>k </i>in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> (e.g., M=N/2). For example, N=16 and M=8. In addition, <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> illustrates an example where the error locator parity data and the error magnitude parity data are stored in one parity chip.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example of a system ECC engine included in a memory controller according to some example embodiments.</p><p id="p-0070" num="0069">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a system ECC engine <b>130</b> may include an ECC encoder <b>140</b>, an ECC decoder <b>150</b> and a memory <b>180</b>. The memory <b>180</b> may be referred to as an ECC memory. Although the ECC encoder <b>140</b> and the ECC decoder <b>150</b> are illustrated as separate components, example embodiments and the present disclosure are not limited thereto.</p><p id="p-0071" num="0070">The ECC encoder <b>140</b> may perform the ECC encoding on the user data set SDQ and the meta data MBT using a parity generation matrix PCM to generate a parity data set SPRT including the first parity data PRTL and the second parity data PRTM, and may output the first codeword set SCW<b>1</b> including the user data set SDQ, the meta data MBT and the parity data set SPRT.</p><p id="p-0072" num="0071">The ECC decoder <b>150</b> may receive, from the memory module MM, the second codeword set SCW<b>2</b> including the user data set SDQ, the meta data MBT and the parity data set SPRT, and may receive the decoding signal DS from the decoding status flag decoder <b>185</b>. The ECC decoder <b>150</b> may select at least one of the plurality of decoding schemes DEC<b>1</b> to DECX based on the decoding signal DS, may perform the ECC decoding on the second codeword set SCW<b>2</b> using a parity check matrix PCM and the selected decoding scheme to generate the corrected user data set C_SDQ, and may output the user data set SDQ and/or the corrected user data set C_SDQ.</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, <b>6</b>C and <b>6</b>D</figref> are diagrams illustrating an example of a parity generation matrix used in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0074" num="0073">Referring to <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, a parity generation matrix PGM may include a first parity sub matrix HS<sub>11</sub>, a second parity sub matrix HS<sub>12 </sub>and a third parity sub matrix HS<sub>13</sub>.</p><p id="p-0075" num="0074">The first parity sub matrix HS<sub>11 </sub>may include a plurality of offset sub matrices OSM<b>1</b> to OSMk (e.g., OSM<b>1</b>, OSM<b>2</b>, . . . , OSMk) corresponding to the data chips <b>201</b><i>a </i>to <b>201</b><i>k </i>in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> and the data chips <b>202</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, along with two zero sub matrices ZSM corresponding to the parity chips <b>201</b><i>pa </i>and <b>201</b><i>pb </i>in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> and the parity chip <b>202</b><i>p </i>in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>. For example, each of the offset sub matrices OSM<b>1</b> to OSMk and the zero sub matrices ZSM may include p*p elements, where p is a natural number greater than or equal to two.</p><p id="p-0076" num="0075">The second parity sub matrix HS<sub>12 </sub>may include a plurality of unit (or identity) sub matrices ISM and a plurality of zero sub matrices ZSM that are alternately arranged. For example, each of the unit sub matrices ISM and the zero sub matrices ZSM may include p*p elements. The third parity sub matrix HS<sub>13 </sub>may include a plurality of zero sub matrices ZSM and a plurality of unit sub matrices ISM that are alternately arranged. For example, each of the zero sub matrices ZSM and the unit sub matrices ISM may include p*p elements. The second parity sub matrix HS<sub>12 </sub>and the third parity sub matrix HS<sub>13 </sub>may be arranged differently from each other.</p><p id="p-0077" num="0076">Referring to <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, an example of a base offset sub matrix OSMb, which is used for generating the offset sub matrices OSM<b>1</b> to OSMk included in the first parity sub matrix HS<sub>11 </sub>in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, is illustrated. The base offset sub matrix OSMb may include (p+3) high level elements (represented with &#x2018;1&#x2019; in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>). For example, the offset sub matrix OSM<b>1</b> among the offset sub matrices OSM<b>1</b> to OSMk may be obtained by powers of the base offset sub matrix OSMb. The offset sub matrix OSM<b>2</b> among the offset sub matrices OSM<b>1</b> to OSMk may be obtained by multiplying the offset sub matrix OSM<b>1</b> and a sub matrix obtained by powers of the base offset sub matrix OSMb by an offset.</p><p id="p-0078" num="0077">Referring to <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>, an example of a zero sub matrix ZSM included in the first, second, and third parity sub matrices HS<sub>11</sub>, HS<sub>12 </sub>and HS<sub>13 </sub>in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is illustrated. In the zero sub matrix ZSM, all of elements may be zero (&#x2018;0&#x2019;).</p><p id="p-0079" num="0078">Referring to <figref idref="DRAWINGS">FIG. <b>6</b>D</figref>, an example of a unit sub matrix ISM included in the second and third parity sub matrices HS<sub>12 </sub>and HS<sub>13 </sub>in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is illustrated. The unit sub matrix ISM may includes p high level elements arranged in a diagonal direction, for example along a major diagonal of the matrix. Elements other than the high level elements may be zero.</p><p id="p-0080" num="0079">In the example of <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, <b>6</b>C and <b>6</b>D</figref>, p may be sixteen. For example, p may correspond to the number of bits of the data sets DQ_BL<b>1</b> to DQ_BLk that are input to and/or output from each of the data chips <b>201</b><i>a </i>to <b>201</b><i>k </i>in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> during a single burst operation, and/or may correspond to the number of bits of the data sets DQ_BL<b>1</b><i>a </i>and DQ_BL<b>1</b><i>b </i>that are input to and/or output from each of the data chips <b>202</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> during a single burst operation. In addition, the number of non-zero elements in the first parity sub matrix HS<sub>11 </sub>may be greater than the number of non-zero elements in the second parity sub matrix HS<sub>12 </sub>or the number of non-zero elements in the third parity sub matrix HS<sub>13</sub>.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating an example of an ECC encoder included in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0082" num="0081">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, an ECC encoder <b>140</b> may include an error locator parity generator <b>141</b>, a first error magnitude parity generator <b>143</b>, a second error magnitude parity generator <b>145</b> and a buffer <b>147</b>.</p><p id="p-0083" num="0082">The error locator parity generator <b>141</b> may perform an ECC encoding on the user data set SDQ and the meta data MDT using the first parity sub matrix HS<sub>11 </sub>to generate the first parity data PRTL, which may be used for determining locations of errors. The error locator parity generator <b>141</b> may provide the first parity data PRTL to the buffer <b>147</b>. The first parity data PRTL may be referred to as error locator parity data.</p><p id="p-0084" num="0083">The error locator parity generator <b>141</b> may generate the first parity data PRTL by performing a matrix-multiplication operation on the user data set SDQ and the meta data MDT with the first parity sub matrix HS<sub>11</sub>. If a vector representation of the user data set SDQ and the meta data MDT corresponds to ms, and if a vector representation of the first parity data PRTL corresponds to p<sub>L</sub>, then p<sub>L</sub>=HS<sub>11</sub>[ms 0]<sup>f</sup>. Here, T represents a transposed matrix, and 0 represents a zero matrix.</p><p id="p-0085" num="0084">The first error magnitude parity generator <b>143</b> may perform an ECC encoding on the user data set SDQ and the meta data MDT using the second parity sub matrix HS<sub>12 </sub>to generate the first sub parity data PRTM<b>1</b>, which may be used for determining the number of bit errors. The first error magnitude parity generator <b>143</b> may provide the first sub parity data PRTM<b>1</b> to the buffer <b>147</b>. The first sub parity data PRTM<b>1</b> may be referred to as a first error magnitude parity data.</p><p id="p-0086" num="0085">The first error magnitude parity generator <b>143</b> may generate the first sub parity data PRTM<b>1</b> by performing a matrix-multiplication operation on the user data set SDQ and the meta data MDT with the second parity sub matrix HS<sub>12</sub>. If a vector representation of the first sub parity data PRTM<b>1</b> corresponds to p<sub>M1</sub>, then p<sub>M1</sub>=HS<sub>11</sub>[ms p<sub>L </sub>0]<sup>T</sup>.</p><p id="p-0087" num="0086">The second error magnitude parity generator <b>145</b> may perform an ECC encoding on the user data set SDQ and the meta data MDT using the third parity sub matrix HS<sub>13 </sub>to generate the second sub parity data PRTM<b>2</b>, which may be used for determining the number of bit errors. The second error magnitude parity generator <b>145</b> may provide the second sub parity data PRTM<b>2</b> to the buffer <b>147</b>. The second sub parity data PRTM<b>2</b> may be referred to as a second error magnitude parity data.</p><p id="p-0088" num="0087">The second error magnitude parity generator <b>145</b> may generate the second sub parity data PRTM<b>2</b> by performing a matrix-multiplication operation on the user data set SDQ and the meta data MDT with the third parity sub matrix HS <b>13</b>. If a vector representation of the second sub parity data PRTM<b>2</b> corresponds to p<sub>M2</sub>, then p<sub>M2</sub>=HS<sub>13 </sub>[ms p<sub>L </sub>0]<sup>T</sup>. The first sub parity data PRTM<b>1</b> and the second sub parity data PRTM<b>2</b> may be included in the second parity data PRTM.</p><p id="p-0089" num="0088">The buffer <b>147</b> may receive the user data set SDQ, the meta data MDT, the first parity data PRTL and the second parity data PRTM including the first sub parity data PRTM<b>1</b> and the second sub parity data PRTM<b>2</b>, and may provide the first codeword set SCW<b>1</b> including the user data set SDQ, the meta data MDT, the first parity data PRTL, the first sub parity data PRTM<b>1</b> and the second sub parity data PRTM<b>2</b> to the memory module MM.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIGS. <b>8</b>A and <b>8</b>B</figref> are diagrams illustrating an example of a parity check matrix used in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0091" num="0090">Referring to <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>, a parity check matrix PCM may include a first parity sub matrix HS<sub>21</sub>, a second parity sub matrix HS<sub>22 </sub>and a third parity sub matrix HS<sub>23</sub>.</p><p id="p-0092" num="0091">The first parity sub matrix HS<sub>21 </sub>may include offset sub matrices OSM<b>1</b> to OSMk (e.g., OSM<b>1</b>, OSM<b>2</b>, . . . , OSMk) corresponding to the memory chips <b>200</b><i>a </i>to <b>200</b><i>k</i>, and zero sub matrices ZSM. The second parity sub matrix HS<sub>22 </sub>may include unit sub matrices ISM and zero sub matrices ZSM that are alternately arranged. The third parity sub matrix HS<sub>23 </sub>may include zero sub matrices ZSM and unit sub matrices ISM that are alternately arranged. For example, each of the offset sub matrices OSM<b>1</b> to OSMk, the zero sub matrices ZSM and the unit sub matrices ISM may include p*p elements.</p><p id="p-0093" num="0092">As illustrated in <figref idref="DRAWINGS">FIGS. <b>6</b>A and <b>8</b>A</figref>, the first, second and third parity sub matrices HS<sub>21</sub>, HS<sub>22 </sub>and HS<sub>23 </sub>may be substantially the same as the first, second and third parity sub matrices HS<sub>11</sub>, HS<sub>12 </sub>and HS<sub>13</sub>, respectively. In some example embodiments, the ECC encoder <b>140</b> and the ECC decoder <b>150</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may share the parity generation matrix PGM, and may perform the ECC encoding and the ECC decoding, respectively. In other words, the parity generation matrix PGM in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may be equivalent to the parity check matrix PCM in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0094" num="0093">The ECC decoder <b>150</b> may correct errors included in the user data set SDQ by units of symbol (e.g., on a symbol-by-symbol basis) using the parity check matrix PCM. For example, the ECC decoder <b>150</b> may correct multiple errors included in one symbol of the user data set SDQ using the parity check matrix PCM. Each of the data sets DQ_BL<b>1</b> to DQ_BLk, DQ_BL<b>1</b><i>a </i>and DQ_BL<b>1</b><i>b </i>may correspond to one symbol.</p><p id="p-0095" num="0094">Referring to <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>, an example of an offset sub matrix OSM, which corresponds to one of the offset sub matrices OSM<b>1</b> to OSMk included in the first parity sub matrix HS<sub>21 </sub>in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>, is illustrated. The offset sub matrix OSM may be obtained by powers of the base offset sub matrix OSMb by an offset ofs.</p><p id="p-0096" num="0095">As illustrated in <figref idref="DRAWINGS">FIGS. <b>8</b>A and <b>8</b>B</figref>, the number of non-zero elements in the first parity sub matrix HS<sub>21 </sub>may be greater than the number of non-zero elements in the second parity sub matrix HS<sub>22 </sub>or the number of non-zero elements in the third parity sub matrix HS<sub>23</sub>. Therefore, the ECC decoder <b>150</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may generate a first sub syndrome SDR_M<b>1</b> and a second sub syndrome SDR_M<b>2</b> using the second parity sub matrix HS<sub>22 </sub>and the third parity sub matrix HS<sub>23</sub>, and may generate a second syndrome SDR_M by summing the first sub syndrome SDR_M<b>1</b> and the second sub syndrome SDR_M<b>2</b>.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an example of an ECC decoder included in a system ECC engine of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0098" num="0097">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an ECC decoder <b>150</b> may include a first error magnitude syndrome generator <b>151</b>, a second error magnitude syndrome generator <b>152</b>, an error locator syndrome generator <b>153</b> and a data corrector <b>155</b>.</p><p id="p-0099" num="0098">The first error magnitude syndrome generator <b>151</b> may generate the first sub syndrome SDR_M<b>1</b> that represents the number of error bits by performing a matrix-multiplication operation on the second codeword set SCW<b>2</b> and the second parity sub matrix HS<sub>22</sub>. If a vector representation of the second codeword set SCW<b>2</b> corresponds to r<sup>T</sup>, and if a vector representation of the first sub syndrome SDR_M<b>1</b> corresponds to SM<sub>01</sub>, then SM<sub>01</sub>=HS<sub>22</sub>r<sup>T</sup>.</p><p id="p-0100" num="0099">The second error magnitude syndrome generator <b>152</b> may generate the second sub syndrome SDR_M<b>2</b> that represents the number of error bits by performing a matrix-multiplication operation on the second codeword set SCW<b>2</b> and the third parity sub matrix HS<sub>23</sub>. If a vector representation of the second sub syndrome SDR_M<b>2</b> corresponds to S<sub>M02</sub>, then S<sub>M02</sub>=HS<sub>23</sub>r<sup>T</sup>. The first sub syndrome SDR_M<b>1</b> and the second sub syndrome SDR_M<b>2</b> may be included in the second syndrome SDR_M, which is an error magnitude syndrome.</p><p id="p-0101" num="0100">The error locator syndrome generator <b>153</b> may generate a first syndrome SDR_L that represents positions of errors by performing a matrix-multiplication operation on the second codeword set SCW<b>2</b> and the first parity sub matrix HS<sub>21</sub>, and may provide the first syndrome SDR_L to the data corrector <b>155</b>. If a vector representation of the first syndrome SDR_L corresponds to S<sub>L</sub>, then S<sub>L</sub>=HS<sub>21</sub>r<sup>T</sup>.</p><p id="p-0102" num="0101">The data corrector <b>155</b> may correct correctable error bits in the user data set SDQ included in the second codeword set SCW<b>2</b> by units of symbol (e.g., on a symbol-by-symbol basis) based on the first syndrome SDR_L and the second syndrome SDR_M to output the corrected user data set C_SDQ. The data corrector <b>155</b> may output the user data set SDQ when the second codeword set SCW<b>2</b> (e.g., the user data set SDQ) includes uncorrectable errors.</p><p id="p-0103" num="0102">In some example embodiments, when the first syndrome SDR_L has zero value and the second syndrome SDR_M has zero value, it may represent that the user data set SDQ included in the second codeword set SCW<b>2</b> includes no errors. When the first syndrome SDR_L has non-zero value and the second syndrome SDR_M has non-zero value, it may represent that the user data set SDQ included in the second codeword set SCW<b>2</b> includes correctable errors which can be corrected based on the first syndrome SDR_L and the second syndrome SDR_M. When the first syndrome SDR_L has zero value and the second syndrome SDR_M has non-zero value, it may represent that the user data set SDQ included in the second codeword set SCW<b>2</b> includes uncorrectable errors which cannot be corrected using the first syndrome SDR_L and the second syndrome SDR_M.</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram illustrating an example of a data chip included in a memory module included in a memory system according to some example embodiments.</p><p id="p-0105" num="0104">Referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, a data chip <b>200</b><i>a </i>may include a control logic circuit <b>210</b>, an address register <b>220</b>, a bank control logic circuit <b>230</b>, a row address multiplexer <b>240</b>, a column address latch <b>250</b>, a row decoder <b>260</b>, a column decoder <b>270</b>, a memory cell array <b>300</b>, a sense amplifier unit <b>285</b>, an input/output (I/O) gating circuit <b>290</b>, a data I/O buffer <b>295</b>, an on-die ECC engine <b>400</b><i>a </i>and/or a refresh counter <b>245</b>. The data chip <b>200</b><i>a </i>may include a single number of, or a plurality of, each of the above.</p><p id="p-0106" num="0105">The memory cell array <b>300</b> may include first to eighth bank arrays <b>310</b> to <b>380</b> (e.g., first to eighth bank arrays <b>310</b>, <b>320</b>, <b>330</b>, <b>340</b>, <b>350</b>, <b>360</b>, <b>370</b> and <b>380</b>). The row decoder <b>260</b> may include first to eighth bank row decoders <b>260</b><i>a </i>to <b>260</b><i>h </i>connected respectively to the first to eighth bank arrays <b>310</b> to <b>380</b>. The column decoder <b>270</b> may include first to eighth bank column decoders <b>270</b><i>a </i>to <b>270</b><i>h </i>connected respectively to the first to eighth bank arrays <b>310</b> to <b>380</b>. The sense amplifier unit <b>285</b> may include first to eighth bank sense amplifiers <b>285</b><i>a </i>to <b>285</b><i>h </i>connected respectively to the first to eighth bank arrays <b>310</b> to <b>380</b>.</p><p id="p-0107" num="0106">The first to eighth bank arrays <b>310</b> to <b>380</b>, the first to eighth bank row decoders <b>260</b><i>a </i>to <b>260</b><i>h</i>, the first to eighth bank column decoders <b>270</b><i>a </i>to <b>270</b><i>h</i>, and the first to eighth bank sense amplifiers <b>285</b><i>a </i>to <b>285</b><i>h </i>may form first to eighth banks. Each of the first to eighth bank arrays <b>310</b> to <b>380</b> may include a plurality of wordlines WL, a plurality of bitlines BTL, and a plurality of memory cells MC that are at intersections of the wordlines WL and the bitlines BTL.</p><p id="p-0108" num="0107">Although <figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates the data chip <b>200</b><i>a </i>including eight banks (and eight bank arrays, eight row decoders, and so on), the data chip <b>200</b><i>a </i>may include any number of banks; for example, one, two, four, eight, sixteen, or thirty two banks, or any number therebetween one and thirty two.</p><p id="p-0109" num="0108">The address register <b>220</b> may receive the address ADDR including a bank address BANK_ADDR, a row address ROW_ADDR, and a column address COL_ADDR from the memory controller <b>100</b>. The address register <b>220</b> may provide the received bank address BANK_ADDR to the bank control logic circuit <b>230</b>, may provide the received row address ROW_ADDR to the row address multiplexer <b>240</b>, and may provide the received column address COL_ADDR to the column address latch <b>250</b>.</p><p id="p-0110" num="0109">The bank control logic circuit <b>230</b> may generate bank control signals in response to the bank address BANK_ADDR. One of the first to eighth bank row decoders <b>260</b><i>a </i>to <b>260</b><i>h </i>corresponding to the bank address BANK_ADDR may be activated in response to the bank control signals, and one of the first to eighth bank column decoders <b>270</b><i>a </i>to <b>270</b><i>h </i>corresponding to the bank address BANK_ADDR may be activated in response to the bank control signals.</p><p id="p-0111" num="0110">The row address multiplexer <b>240</b> may receive the row address ROW_ADDR from the address register <b>220</b>, and may receive a refresh row address REF_ADDR from the refresh counter <b>245</b>. The row address multiplexer <b>240</b> may selectively output the row address ROW_ADDR or the refresh row address REF_ADDR as a row address RA. The row address RA that is output from the row address multiplexer <b>240</b> may be applied to the first to eighth bank row decoders <b>260</b><i>a </i>to <b>260</b><i>h. </i></p><p id="p-0112" num="0111">The activated one of the first to eighth bank row decoders <b>260</b><i>a </i>to <b>260</b><i>h </i>may decode the row address RA that is output from the row address multiplexer <b>240</b>, and may activate in the corresponding bank array a wordline WL corresponding to the row address RA. For example, the activated bank row decoder may generate a wordline driving voltage, and may apply the wordline driving voltage to the wordline WL corresponding to the row address RA.</p><p id="p-0113" num="0112">The column address latch <b>250</b> may receive the column address COL_ADDR from the address register <b>220</b>, and may temporarily store the received column address COL_ADDR. In some example embodiments, in a burst mode, the column address latch <b>250</b> may generate column addresses that increment from the received column address COL_ADDR. The column address latch <b>250</b> may apply the temporarily stored or generated column address to the first to eighth bank column decoders <b>270</b><i>a </i>to <b>270</b><i>h. </i></p><p id="p-0114" num="0113">The activated one of the first to eighth bank column decoders <b>270</b><i>a </i>to <b>270</b><i>h </i>may decode the column address COL_ADDR that is output from the column address latch <b>250</b>, and may control the I/O gating circuit <b>290</b> to output data corresponding to the column address COL_ADDR.</p><p id="p-0115" num="0114">The I/O gating circuit <b>290</b> may include circuitry configured to gate input/output data. The I/O gating circuit <b>290</b> may further include read data latches configured to store data that is output from the first to eighth bank arrays <b>310</b> to <b>380</b>, and may also include write control devices for writing data to the first to eighth bank arrays <b>310</b> to <b>380</b>.</p><p id="p-0116" num="0115">A codeword CW read from one of the first to eighth bank arrays <b>310</b> to <b>380</b> may be sensed by a sense amplifier <b>285</b> connected to the one bank array from which the codeword CW is to be read, and may be stored in the read data latches. The codeword CW stored in the read data latches may be provided to the memory controller <b>100</b> via the data I/O buffer <b>295</b> after the on-die ECC engine <b>400</b><i>a </i>performs an ECC decoding on the codeword CW. The codeword CW may be provided to the memory controller <b>100</b> as data set (or user data or main data) DQ_BL.</p><p id="p-0117" num="0116">The data set DQ_BL to be written in one of the first to eighth bank arrays <b>310</b> to <b>380</b> may be provided to the data I/O buffer <b>295</b> from the memory controller <b>100</b>, and may be provided to the on-die ECC engine <b>400</b><i>a </i>from the data I/O buffer <b>295</b>. The on-die ECC engine <b>400</b><i>a </i>may perform an ECC encoding on the data set DQ_BL to generate parity data, the on-die ECC engine <b>400</b><i>a </i>may provide the codeword CW including the data set DQ_BL and the parity data to the I/O gating circuit <b>290</b>, and the I/O gating circuit <b>290</b> may write the codeword CW in a sub-page of a target page in one bank array through the write drivers.</p><p id="p-0118" num="0117">The data I/O buffer <b>295</b> may provide the data set DQ_BL from the memory controller <b>100</b> to the on-die ECC engine <b>400</b><i>a </i>in a write operation of the data chip <b>200</b><i>a</i>, and may provide the data set DQ_BL from the on-die ECC engine <b>400</b><i>a </i>to the memory controller <b>100</b> in a read operation of the data chip <b>200</b><i>a. </i></p><p id="p-0119" num="0118">The on-die ECC engine <b>400</b><i>a </i>may provide an error generation signal EGS to the control logic circuit <b>210</b> when the ECC decoding is performed and at least one error bit is detected. In addition, the on-die ECC engine <b>400</b><i>a </i>may generate the decoding status flag DSF including information associated with the uncorrectable error or errors that are uncorrectable by the on-die ECC engine <b>400</b><i>a</i>, and the correctable error or errors that are correctable by the on-die ECC engine <b>400</b><i>a. </i></p><p id="p-0120" num="0119">The control logic circuit <b>210</b> may control operations of the data chip <b>200</b><i>a</i>. For example, the control logic circuit <b>210</b> may generate control signals for the data chip <b>200</b><i>a </i>to perform the write operation and/or the read operation. The control logic circuit <b>210</b> may include a command decoder <b>211</b> that decodes the command CMD received from the memory controller <b>100</b>, and a mode register <b>212</b> that sets an operation mode of the data chip <b>200</b><i>a</i>. In some example embodiments, operations described herein as being performed by the control logic circuit <b>210</b> may be performed by processing circuitry.</p><p id="p-0121" num="0120">For example, the command decoder <b>211</b> may generate the control signals corresponding to the command CMD by decoding a write enable signal, a row address strobe signal, a column address strobe signal, a chip select signal, etc. For example, the control logic circuit <b>210</b> may generate a first control signal CTL<b>1</b> that controls the I/O gating circuit <b>290</b>, and a second control signal CTL<b>2</b> that controls the on-die ECC engine <b>400</b><i>a. </i></p><p id="p-0122" num="0121">The parity chip <b>200</b><i>p </i>may have the same or substantially the same configuration as the data chip <b>200</b><i>a</i>. The parity chip <b>200</b><i>p </i>may input/output a corresponding parity data.</p><p id="p-0123" num="0122"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram illustrating an example of a bank array included in a data chip of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0124" num="0123">Referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, a first bank array <b>310</b> may include a plurality of wordlines WL<b>1</b>, WL<b>2</b>, . . . , WL<b>2</b><i>m</i>&#x2212;1, WL<b>2</b><i>m </i>(where m is a natural number greater than or equal to two), a plurality of bitlines BTL<b>1</b>, BTL<b>2</b>, . . . , BTL<b>2</b><i>n</i>&#x2212;1, BTL<b>2</b><i>n </i>(where n is a natural number greater than or equal to two that may or may not be the same as m), and a plurality of memory cells MC arranged at or near intersections between the wordlines WL<b>1</b> to WL<b>2</b><i>m </i>and the bitlines BTL<b>1</b> to BTL<b>2</b><i>n</i>. For example, each of the plurality of memory cells MC may include a DRAM cell structure. The plurality of wordlines WL<b>1</b> to WL<b>2</b><i>m </i>to which the plurality of memory cells MC are connected may be referred to as rows of the first bank array <b>310</b>, and the plurality of bitlines BTL<b>1</b> to BTL<b>2</b><i>n </i>to which the plurality of memory cells MC are connected may be referred to as columns of the first bank array <b>310</b>.</p><p id="p-0125" num="0124"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram illustrating an example of an on-die ECC engine included in a memory module included in a memory system according to some example embodiments.</p><p id="p-0126" num="0125">Referring to <figref idref="DRAWINGS">FIG. <b>12</b></figref>, an on-die ECC engine <b>400</b><i>a </i>may include an ECC encoder <b>410</b>, a memory <b>415</b>, and an ECC decoder <b>430</b>.</p><p id="p-0127" num="0126">The memory <b>415</b> may store an ECC <b>420</b>. For example, the ECC <b>420</b> may be a single error correction (SEC) code, or may be a single error correction/double error detection (SECDED) code. However, example embodiments and the present disclosure are not limited thereto.</p><p id="p-0128" num="0127">Using the ECC <b>420</b>, the ECC encoder <b>410</b> may generate parity data PRT associated with write data WMD to be stored in a normal cell array NCA of the first bank array <b>310</b>. The parity data PRT may be stored in a redundancy cell array RCA of the first bank array <b>310</b>.</p><p id="p-0129" num="0128">Using the ECC <b>420</b>, the ECC decoder <b>430</b> may perform an ECC decoding on read data RMD based on the read data RMD and the parity data PRT read respectively from the normal cell array NCA and redundant cell array RCA of the first bank array <b>310</b>. When the read data RMD includes at least one error bit as a result of the ECC decoding, the ECC decoder <b>430</b> may provide the error generation signal EGS to the control logic circuit <b>210</b>, may generate the decoding status flag DSF and provide the decoding status flag DSF to the memory controller <b>100</b>, and may correct the error bit in the read data RMD and output corrected main data C_MD in a read operation.</p><p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram illustrating an example of an ECC encoder included in an on-die ECC engine of <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0131" num="0130">Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, an ECC encoder <b>410</b> may include a parity generator <b>412</b>. The parity generator <b>412</b> may receive the write data WMD and basis bits BB, and may generate the parity data PRT by performing, for example, an XOR array operation.</p><p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram illustrating an example of an ECC decoder included in an on-die ECC engine of <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0133" num="0132">Referring to <figref idref="DRAWINGS">FIG. <b>14</b></figref>, an ECC decoder <b>430</b> may include a syndrome generation circuit <b>440</b>, an error locator <b>460</b>, a data corrector <b>470</b>, and a decoding status flag generator <b>480</b>. The syndrome generation circuit <b>440</b> may include a check bit generator <b>441</b> and a syndrome generator <b>443</b>.</p><p id="p-0134" num="0133">The syndrome generation circuit <b>440</b> may generate a syndrome SDR based on the read data RMD and the parity data PRT. The check bit generator <b>441</b> may generate check bits CHB based on the read data RMD by performing, an XOR array operation. The syndrome generator <b>443</b> may generate the syndrome SDR by comparing corresponding bits of the parity data PRT and the check bits CHB.</p><p id="p-0135" num="0134">When all bits of the syndrome SDR are non-zero, the error locator <b>460</b> may generate an error position signal EPS representing a position of an error bit in the read data RMD, and may provide the error position signal EPS to the data corrector <b>470</b>. In addition, when the read data RMD includes the error bit, the error locator <b>460</b> may generate the error generation signal EGS, and may provide the error generation signal EGS to the control logic circuit <b>210</b>.</p><p id="p-0136" num="0135">The data corrector <b>470</b> may receive the read data RMD, may correct the error bit in the read data RMD based on the error position signal EPS when the read data RMD includes the error bit, and may generate and output the corrected main data C_MD.</p><p id="p-0137" num="0136">The decoding status flag generator <b>480</b> may generate the decoding status flag DSF that represents a state of the error bit in the read data RMD based on the syndrome SDR and the error position signal EPS. For example, the decoding status flag DSF may represent that the read data RMD does not include any error (e.g., no error; NE), may represent that the read data RMD includes an error that cannot be corrected by the on-die ECC engine <b>400</b><i>a </i>(e.g., uncorrectable error; UE), or may represent that the read data RMD includes an error that can be corrected by the on-die ECC engine <b>400</b><i>a </i>(e.g., correctable error; CE).</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart illustrating an example of selecting at least one of a plurality of decoding schemes discussed herein, e.g., with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0139" num="0138">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>15</b></figref>, in step S<b>300</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, when the first number of the first chips including the uncorrectable errors that are uncorrectable by the on-die ECC engine is less than or equal to a first reference value (step S<b>310</b>: YES), the at least one of the plurality of decoding schemes may be selected based on the second number of the second chips including the correctable errors that are correctable by the on-die ECC engine (step S<b>330</b>). When the first number is greater than the first reference value (step S<b>310</b>: NO), the at least one of the plurality of decoding schemes may be selected based on the first number (step S<b>350</b>).</p><p id="p-0140" num="0139">In some example embodiments, the first reference value may be zero. For example, step S<b>330</b> may be performed when the first number is zero, and step S<b>350</b> may be performed when the first number is one or more.</p><p id="p-0141" num="0140"><figref idref="DRAWINGS">FIGS. <b>16</b> and <b>17</b></figref> are flowcharts illustrating an example of selecting at least one of a plurality of decoding schemes and an example of performing an ECC decoding in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0142" num="0141">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>15</b> and <b>16</b></figref>, in step S<b>330</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the decoding scheme may be selected by comparing the second number with a second reference value and a third reference value. In step S<b>400</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the ECC decoding may be performed based on the selected decoding scheme.</p><p id="p-0143" num="0142">For example, when the second number is less than or equal to the second reference value (step S<b>332</b>: YES), a first decoding scheme may be selected, and the system ECC engine may perform the ECC decoding on the second chips based on the first decoding scheme (step S<b>412</b>).</p><p id="p-0144" num="0143">When the second number is greater than the second reference value (step S<b>332</b>: NO), and when the second number is less than or equal to the third reference value (step S<b>334</b>: YES), the first decoding scheme may be selected, and the system ECC engine may perform the ECC decoding on the second chips based on the first decoding scheme (step S<b>414</b>).</p><p id="p-0145" num="0144">When the second number is greater than the third reference value (step S<b>334</b>: NO), the first decoding scheme may be selected, and the system ECC engine may perform the ECC decoding on the second chips based on the first decoding scheme (step S<b>416</b>).</p><p id="p-0146" num="0145">In some example embodiments, when the ECC decoding is failed even if steps S<b>334</b> and S<b>414</b> are performed, it may be determined that an additional correction is possible as in &#x201c;NO&#x201d; in step S<b>336</b>, a third decoding scheme different from the first decoding scheme may be additionally selected even at the risk of the occurrence of a final error, and the system ECC engine may additionally perform the ECC decoding on the second chips based on the third decoding scheme (step S<b>418</b>). In other example embodiments, when the ECC decoding is failed even if steps S<b>334</b> and S<b>414</b> are performed, it may be determined that the ECC decoding by the system ECC engine is uncorrectable or not possible as in &#x201c;YES&#x201d; in step S<b>336</b>, and the process may be terminated with declaring the ECC decoding not possible.</p><p id="p-0147" num="0146">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>15</b> and <b>17</b></figref>, in step S<b>350</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the decoding scheme may be selected by comparing the first number with a fourth reference value and a fifth reference value. In step S<b>400</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the ECC decoding may be performed based on the selected decoding scheme.</p><p id="p-0148" num="0147">For example, when the first number is greater than the first reference value (step S<b>310</b>: NO), and when the first number is less than or equal to the fourth reference value (step S<b>352</b>: YES), a second decoding scheme different from the first decoding scheme may be selected, and the system ECC engine may perform the ECC decoding on the first chips based on the second decoding scheme (step S<b>422</b>).</p><p id="p-0149" num="0148">When the first number is greater than the fourth reference value (step S<b>335</b>: NO), and when the first number is less than or equal to the fifth reference value (step S<b>354</b>: YES), the third decoding scheme different from the first and second decoding schemes may be selected, and the system ECC engine may perform the ECC decoding on the first chips based on the third decoding scheme (step S<b>424</b>).</p><p id="p-0150" num="0149">When the first number is greater than the fifth reference value (step S<b>354</b>: NO), it may be determined that the ECC decoding by the system ECC engine is impossible (step S<b>426</b>), and the process may be terminated with declaring the ECC decoding impossible.</p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIGS. <b>18</b>, <b>19</b>A, <b>19</b>B, <b>19</b>C, <b>19</b>D, <b>19</b>E, <b>19</b>F and <b>19</b>G</figref> are diagrams for describing operations of <figref idref="DRAWINGS">FIGS. <b>16</b> and <b>17</b></figref>.</p><p id="p-0152" num="0151">Referring to <figref idref="DRAWINGS">FIGS. <b>18</b>, <b>19</b>A, <b>19</b>B, <b>19</b>C, <b>19</b>D, <b>19</b>E, <b>19</b>F and <b>19</b>G</figref>, detailed examples based on <figref idref="DRAWINGS">FIGS. <b>16</b> and <b>17</b></figref> are illustrated when the second reference value is one, the third reference value is two, the fourth reference value is one, and the fifth reference value is two. In <figref idref="DRAWINGS">FIGS. <b>19</b>A, <b>19</b>B, <b>19</b>C, <b>19</b>D, <b>19</b>E, <b>19</b>F and <b>19</b>G</figref>, the memory module may include sixteen data chips C<b>0</b>, C<b>1</b>, C<b>2</b>, C<b>3</b>, . . . , C<b>14</b>, C<b>15</b> that input and output data sets DQ_BL<b>1</b>, DQ_BL<b>2</b>, DQ_BL<b>3</b>, DQ_BL<b>4</b>, DQ_BL<b>15</b>, DQ_BL<b>16</b>, and two parity chips CLP and CMP that input and output parity data PRTL and PRTM, and each memory chip may be connected to four data I/O pins. In other words, examples where N=16 in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> are illustrated in <figref idref="DRAWINGS">FIGS. <b>19</b>A, <b>19</b>B, <b>19</b>C, <b>19</b>D, <b>19</b>E, <b>19</b>F and <b>19</b>G</figref>. &#x201c;CE&#x201d; and &#x201c;UE&#x201d; represent the correctable errors that are correctable by the on-die ECC engine and the uncorrectable errors that are uncorrectable by the on-die ECC engine, respectively.</p><p id="p-0153" num="0152">In an example of CASE11, e.g., when the number of chips including uncorrectable errors is zero and the number of chips including correctable errors is zero or one as illustrated in <figref idref="DRAWINGS">FIGS. <b>19</b>A and <b>19</b>B</figref>, &#x201c;NE&#x201d; (e.g., no error) may have the possibility of un-detection, and &#x201c;CE&#x201d; may have the possibility of mis-correction, and thus the system ECC engine may perform the ECC decoding on the data chip C<b>0</b> using a first decoding scheme CPK_x<b>4</b> as in step S<b>412</b>.</p><p id="p-0154" num="0153">In an example of CASE21, e.g., when the number of chips including uncorrectable errors is zero and the number of chips including correctable errors is two as illustrated in <figref idref="DRAWINGS">FIG. <b>19</b>C</figref>, the system ECC engine may perform the ECC decoding on at least one of the data chips C<b>0</b> and C<b>1</b> using the first decoding scheme CPK_x<b>4</b> as in step S<b>414</b>, and may selectively/additionally perform the ECC decoding on at least one of the data chips C<b>0</b> and C<b>1</b> using a third decoding scheme <b>2</b>CED_x<b>4</b> as in step S<b>418</b>.</p><p id="p-0155" num="0154">In an example of CASE31, e.g., when the number of chips including uncorrectable errors is zero and the number of chips including correctable errors is three or more as illustrated in <figref idref="DRAWINGS">FIG. <b>19</b>D</figref>, the system ECC engine may perform the ECC decoding on at least one of the data chips C<b>0</b>, C<b>1</b> and C<b>2</b> using the first decoding scheme CPK_x<b>4</b> as in step S<b>416</b>.</p><p id="p-0156" num="0155">In an example of CASE41, e.g., when the number of chips including uncorrectable errors is one as illustrated in <figref idref="DRAWINGS">FIG. <b>19</b>E</figref>, &#x201c;UE&#x201d; may be information more accurate than &#x201c;NE&#x201d; and &#x201c;CE&#x201d;, and thus the system ECC engine may perform the ECC decoding on the data chip C<b>0</b> using a second decoding scheme <b>1</b>CED_x<b>4</b> as in step S<b>422</b>.</p><p id="p-0157" num="0156">In an example of CASE51, e.g., when the number of chips including uncorrectable errors is two as illustrated in <figref idref="DRAWINGS">FIG. <b>19</b>F</figref>, the system ECC engine may perform the ECC decoding on at least one of the data chips C<b>0</b> and C<b>1</b> using the third decoding scheme <b>2</b>CED_x<b>4</b> as in step S<b>424</b>.</p><p id="p-0158" num="0157">In an example of CASE61, e.g., when the number of chips including uncorrectable errors is three or more as illustrated in <figref idref="DRAWINGS">FIG. <b>19</b>G</figref>, it may be declared that the ECC decoding by the system ECC engine is not possible (e.g., SECC UE) as in step S<b>426</b>.</p><p id="p-0159" num="0158">In some example embodiments, the first decoding scheme CPK_x<b>4</b>, the second decoding scheme <b>1</b>CED_x<b>4</b> and the third decoding scheme <b>2</b>CED_x<b>4</b> that are different from each other may represent Chipkill scheme, 1-chip erasure decoding scheme and 2-chip erasure decoding scheme, respectively. The first decoding scheme CPK_x<b>4</b> may be performed on one data chip, the second decoding scheme <b>1</b>CED_x<b>4</b> may be performed on one data chip, and the third decoding scheme <b>2</b>CED_x<b>4</b> may be performed on two data chips.</p><p id="p-0160" num="0159">Chipkill is a technique of advanced error checking and correcting (ECC) computer memory technology that protects computer memory systems from any single memory chip failure as well as multi-bit errors from any portion of a single memory chip. One relatively simple scheme to perform this function may scatter the bits of a Hamming code ECC word across multiple memory chips, such that the failure of any single memory chip will affect only one ECC bit per word. This allows memory contents to be reconstructed despite the complete failure of one chip. Typical implementations use more advanced codes, such as a Bose-Chaudhuri-Hocquenghem (BCH) code, that can correct multiple bits with less overhead.</p><p id="p-0161" num="0160">In coding theory, an erasure decoding (or coding) is a technique of using a forward error correction (FEC) code under the assumption of bit erasures (rather than bit errors), which transforms a message of k symbols into a longer message (codeword) with n symbols such that the original message can be recovered from a subset of the n symbols. The fraction r=k/n is called the code rate. The fraction k&#x2032;/k, where k&#x2032; denotes the number of symbols required for recovery, is called reception efficiency.</p><p id="p-0162" num="0161">In some example embodiments, the second decoding scheme <b>1</b>CED_x<b>4</b> may be performed to correct an error for only one specific memory chip by adding an error magnitude syndrome (e.g., the second syndrome SDR_M in <figref idref="DRAWINGS">FIG. <b>9</b></figref>), and then by re-calculating an error locator syndrome (e.g., the first syndrome SDR_L in <figref idref="DRAWINGS">FIG. <b>9</b></figref>).</p><p id="p-0163" num="0162">In some example embodiments, the third decoding scheme <b>2</b>CED_x<b>4</b> may be performed to correct an error for two specific memory chips using a syndrome and a position of an error. For example, the ECC encoding may be performed on the data chips C<b>0</b> and C<b>1</b> using the third decoding scheme <b>2</b>CED_x<b>4</b> by calculating a solution of a 2*2 linear system based on Equation 1 in steps S<b>418</b> and S<b>424</b>.</p><p id="p-0164" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mrow>       <mo>[</mo>       <mtable>        <mtr>         <mtd>          <mn>1</mn>         </mtd>         <mtd>          <mn>1</mn>         </mtd>        </mtr>        <mtr>         <mtd>          <msup>           <mi>&#x3b1;</mi>           <mn>1</mn>          </msup>         </mtd>         <mtd>          <msup>           <mi>&#x3b1;</mi>           <mn>2</mn>          </msup>         </mtd>        </mtr>       </mtable>       <mo>]</mo>      </mrow>      <mo>[</mo>      <mtable>       <mtr>        <mtd>         <msub>          <mi>E</mi>          <mn>0</mn>         </msub>        </mtd>       </mtr>       <mtr>        <mtd>         <msub>          <mi>E</mi>          <mn>1</mn>         </msub>        </mtd>       </mtr>      </mtable>      <mo>]</mo>     </mrow>     <mo>=</mo>     <mrow>      <mo>[</mo>      <mtable>       <mtr>        <mtd>         <msub>          <mi>S</mi>          <mn>0</mn>         </msub>        </mtd>       </mtr>       <mtr>        <mtd>         <msub>          <mi>S</mi>          <mn>1</mn>         </msub>        </mtd>       </mtr>      </mtable>      <mo>]</mo>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>1</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0165" num="0163">In some example embodiments, it may be checked that the syndrome is non-zero, a condition of the decoding status flag DSF may be checked to identify the number of uncorrectable errors and/or correctable errors, a suitable decoding scheme may be selected based on a result of the checks, and thus steps S<b>412</b>, S<b>414</b>, S<b>418</b>, S<b>422</b> and S<b>424</b> may be performed based on the selected decoding scheme.</p><p id="p-0166" num="0164">In the x<b>4</b> structure, only one chip error in the memory module may be corrected by a conventional method, however, up to two chip errors in the memory module may be corrected by above-described example embodiments.</p><p id="p-0167" num="0165"><figref idref="DRAWINGS">FIGS. <b>20</b> and <b>21</b></figref> are flowcharts illustrating another example of selecting at least one of a plurality of decoding schemes and an example of performing an ECC decoding in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. At least some of the descriptions of <figref idref="DRAWINGS">FIGS. <b>20</b> and <b>21</b></figref> that are overlapping with those of <figref idref="DRAWINGS">FIGS. <b>16</b> and <b>17</b></figref> will be omitted in the interest of brevity.</p><p id="p-0168" num="0166">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>15</b> and <b>20</b></figref>, in step S<b>330</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the decoding scheme may be selected by comparing the second number with a sixth reference value and a seventh reference value. In step S<b>400</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the ECC decoding may be performed based on the selected decoding scheme.</p><p id="p-0169" num="0167">Steps S<b>342</b>, S<b>344</b>, S<b>346</b>, S<b>432</b>, S<b>434</b>, S<b>436</b> and S<b>438</b> may be similar to steps S<b>332</b>, S<b>334</b>, S<b>336</b>, S<b>422</b>, S<b>424</b>, S<b>426</b> and S<b>428</b> in <figref idref="DRAWINGS">FIG. <b>16</b></figref>, respectively.</p><p id="p-0170" num="0168">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>15</b> and <b>21</b></figref>, in step S<b>350</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the decoding scheme may be selected by comparing the first number with an eighth reference value. In step S<b>400</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the ECC decoding may be performed based on the selected decoding scheme.</p><p id="p-0171" num="0169">Steps S<b>362</b>, S<b>442</b> and S<b>444</b> may be similar to steps S<b>352</b>, S<b>422</b> and S<b>426</b> in <figref idref="DRAWINGS">FIG. <b>17</b></figref>, respectively. Steps S<b>364</b> and S<b>446</b> may be similar to steps S<b>346</b> and S<b>438</b> in <figref idref="DRAWINGS">FIG. <b>20</b></figref>, respectively.</p><p id="p-0172" num="0170"><figref idref="DRAWINGS">FIGS. <b>22</b>, <b>23</b>A, <b>23</b>B, <b>23</b>C, <b>23</b>D and <b>23</b>E</figref> are diagrams for describing operations of <figref idref="DRAWINGS">FIGS. <b>20</b> and <b>21</b></figref>. Some of the descriptions of <figref idref="DRAWINGS">FIGS. <b>22</b> and <b>23</b>A</figref>-E overlapping with those of <figref idref="DRAWINGS">FIGS. <b>18</b>, <b>19</b>A, <b>19</b>B, <b>19</b>C, <b>19</b>D, <b>19</b>E, <b>19</b>F and <b>19</b>G</figref> will be omitted in the interest of brevity.</p><p id="p-0173" num="0171">Referring to <figref idref="DRAWINGS">FIGS. <b>22</b>, <b>23</b>A, <b>23</b>B, <b>23</b>C, <b>23</b>D and <b>23</b>E</figref>, detailed examples based on <figref idref="DRAWINGS">FIGS. <b>20</b> and <b>21</b></figref> are illustrated when the sixth reference value is zero, the seventh reference value is one, and the eighth reference value is one. In <figref idref="DRAWINGS">FIGS. <b>23</b>A, <b>23</b>B, <b>23</b>C, <b>23</b>D and <b>23</b>E</figref>, the memory module may include eight data chips C<b>0</b>&#x2032;, C<b>1</b>&#x2032;, . . . , C<b>7</b>&#x2032; that input and output data sets DQ_BL<b>1</b><i>a</i>, DQ_BL<b>1</b><i>b</i>, DQ_BL<b>2</b><i>a</i>, DQ_BL<b>2</b><i>b</i>, DQ_BL<b>8</b><i>a</i>, . . . , DQ_BL<b>8</b><i>b</i>, and one parity chip CP that inputs and outputs parity data PRTL and PRTM, and each memory chip may be connected to eight data I/O pins. In other words, examples where M=8 in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> are illustrated in <figref idref="DRAWINGS">FIGS. <b>23</b>A, <b>23</b>B, <b>23</b>C, <b>23</b>D and <b>23</b>E</figref>.</p><p id="p-0174" num="0172">In an example of CASE12, e.g., when the number of chips including uncorrectable errors is zero and the number of chips including correctable errors is zero as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b>A</figref>, the system ECC engine may perform the ECC decoding using a first decoding scheme HCPK_x<b>8</b> as in step S<b>432</b>.</p><p id="p-0175" num="0173">In an example of CASE22, e.g., when the number of chips including uncorrectable errors is zero and the number of chips including correctable errors is one as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b>B</figref>, the system ECC engine may perform the ECC decoding on the data chip C<b>0</b>&#x2032; using the first decoding scheme HCPK_x<b>8</b> as in step S<b>434</b>, and may selectively/additionally perform the ECC decoding on the data chip C<b>0</b>&#x2032; using a second decoding scheme <b>1</b>CED_x<b>8</b> as in step S<b>438</b>.</p><p id="p-0176" num="0174">In an example of CASE32, e.g., when the number of chips including uncorrectable errors is zero and the number of chips including correctable errors is two or more as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b>C</figref>, the system ECC engine may perform the ECC decoding on at least one of the data chips C<b>0</b>&#x2032; and C<b>1</b>&#x2032; using the first decoding scheme HCPK_x<b>8</b> as in step S<b>436</b>.</p><p id="p-0177" num="0175">In an example of CASE42, e.g., when the number of chips including uncorrectable errors is one as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b>D</figref>, the system ECC engine may perform the ECC decoding on the data chip C<b>0</b>&#x2032; using the first decoding scheme HCPK_x<b>8</b> as in step S<b>442</b>, and may selectively/additionally perform the ECC decoding on the data chip C<b>0</b>&#x2032; using the second decoding scheme <b>1</b>CED_x<b>8</b> as in step S<b>446</b>.</p><p id="p-0178" num="0176">In an example of CASE52, e.g., when the number of chips including uncorrectable errors is two or more as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b>E</figref>, it may be declared that the ECC decoding by the system ECC engine is not possible (e.g., SECC UE) as in step S<b>444</b>.</p><p id="p-0179" num="0177">In some example embodiments, the first decoding scheme HCPK_x<b>8</b> and the second decoding scheme <b>1</b>CED_x<b>8</b> that are different from each other may represent half-Chipkill scheme and 1-chip erasure decoding scheme, respectively. The first decoding scheme HCPK_x<b>8</b> may be performed on a partial region (e.g., a half) of one data chip, and the second decoding scheme <b>1</b>CED_x<b>8</b> may be performed on the entire region of one data chip. The first decoding scheme HCPK_x<b>8</b> may be similar to the first decoding scheme CPK_x<b>4</b> in <figref idref="DRAWINGS">FIG. <b>18</b></figref>, and the second decoding scheme <b>1</b>CED_x<b>8</b> may be similar to the third decoding scheme <b>2</b>CED_x<b>4</b> in <figref idref="DRAWINGS">FIG. <b>18</b></figref>.</p><p id="p-0180" num="0178">In the x<b>8</b> structure, only half chip error in the memory module may be corrected by a conventional method, however, up to one chip error in the memory module may be corrected by above-described example embodiments.</p><p id="p-0181" num="0179"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a block diagram illustrating an example of a memory module that may be employed to a memory system according to example embodiments.</p><p id="p-0182" num="0180">Referring to <figref idref="DRAWINGS">FIG. <b>24</b></figref>, a memory module <b>500</b> may include a buffer chip <b>590</b> (e.g., a registered clock driver; RCD) arranged in or mounted on a circuit board <b>501</b>, a plurality of memory devices <b>601</b><i>a</i>, <b>601</b><i>b</i>, <b>601</b><i>c</i>, <b>601</b><i>d</i>, <b>601</b><i>e</i>, <b>602</b><i>a</i>, <b>602</b><i>a</i>, <b>602</b><i>c</i>, <b>602</b><i>d</i>, <b>602</b><i>e</i>, <b>603</b><i>a</i>, <b>603</b><i>b</i>, <b>603</b><i>c</i>, <b>603</b><i>d</i>, <b>604</b><i>a</i>, <b>604</b><i>b</i>, <b>604</b><i>c </i>and <b>604</b><i>d</i>, module resistance units <b>560</b> and <b>570</b>, a serial present detection (SPD) chip <b>580</b>, and/or a power management integrated circuit (PMIC) <b>585</b>.</p><p id="p-0183" num="0181">The buffer chip <b>590</b> may control the semiconductor memory devices <b>601</b><i>a </i>to <b>601</b><i>e</i>, <b>602</b><i>a </i>to <b>602</b><i>e</i>, <b>603</b><i>a </i>to <b>603</b><i>d </i>and <b>604</b><i>a </i>to <b>604</b><i>d</i>, and the PMIC <b>585</b>, under a control of the memory controller <b>100</b>. For example, the buffer chip <b>590</b> may receive the address ADDR, the command CMD, the user data set SDQ and the meta data MDT from the memory controller <b>100</b>.</p><p id="p-0184" num="0182">The SPD chip <b>580</b> may be a programmable read only memory (PROM) (e.g., an electrically erasable PROM (EEPROM)). The SPD chip <b>580</b> may include initial information and/or device information DI of the memory module <b>500</b>. In some example embodiments, the SPD chip <b>580</b> may include the initial information and/or the device information DI such as a module form, a module configuration, a storage capacity, a module type, an execution environment, and/or the like of the memory module <b>500</b>.</p><p id="p-0185" num="0183">When a memory system including the memory module <b>500</b> is booted up, the memory controller <b>100</b> may read the device information DI from the SPD chip <b>580</b>, and may recognize the memory module <b>500</b> based on the device information DI. The memory controller <b>100</b> may control the memory module <b>500</b> based on the device information DI from the SPD chip <b>580</b>. For example, the memory controller <b>100</b> may recognize a type of the memory devices included in the memory module <b>500</b> based on the device information DI from the SPD chip <b>580</b>.</p><p id="p-0186" num="0184">Here, the circuit board <b>501</b>, which may be a printed circuit board (PCB), may extend in a second direction D<b>2</b>, perpendicular to a first direction D<b>1</b>, between a first edge portion <b>503</b> and a second edge portion <b>505</b>. The first edge portion <b>503</b> and the second edge portion <b>505</b> may extend in the first direction D<b>1</b>. The buffer chip <b>590</b> may be arranged on a center of the circuit board <b>501</b>. The plurality of memory devices <b>601</b><i>a </i>to <b>601</b><i>e</i>, <b>602</b><i>a </i>to <b>602</b><i>e</i>, <b>603</b><i>a </i>to <b>603</b><i>d </i>and <b>604</b><i>a </i>to <b>604</b><i>d </i>may be arranged in a plurality of rows between the buffer chip <b>590</b> and the first edge portion <b>503</b>, and between the buffer chip <b>590</b> and the second edge portion <b>505</b>. In some example embodiments, operations described herein as being performed by the buffer chip <b>590</b> may be performed by processing circuitry.</p><p id="p-0187" num="0185">In this example, the memory devices <b>601</b><i>a </i>to <b>601</b><i>e </i>and <b>602</b><i>a </i>to <b>602</b><i>e </i>may be arranged in or along a plurality of rows between the buffer chip <b>590</b> and the first edge portion <b>503</b>. The memory devices <b>603</b><i>a </i>to <b>603</b><i>d </i>and <b>604</b><i>a </i>to <b>604</b><i>d </i>may be arranged in or along a plurality of rows between the buffer chip <b>590</b> and the second edge portion <b>505</b>. The memory devices <b>601</b><i>a </i>to <b>601</b><i>d</i>, <b>602</b><i>a </i>to <b>602</b><i>d</i>, <b>603</b><i>a </i>to <b>603</b><i>d </i>and <b>604</b><i>a </i>to <b>604</b><i>d </i>may be referred to as data chips, and the memory devices <b>601</b><i>e </i>and <b>602</b><i>e </i>may be referred to as parity chips.</p><p id="p-0188" num="0186">The buffer chip <b>590</b> may generate first parity data and second parity data based on the user data set SDQ and the meta data MDT, may store the user data set SDQ and the meta data MDT in the data chips, and may store the first parity data and the second parity data in the parity chips.</p><p id="p-0189" num="0187">The buffer chip <b>590</b> may provide a command/address signal (e.g., CA) to the memory devices <b>601</b><i>a </i>to <b>601</b><i>e </i>through a command/address transmission line <b>561</b>, and may provide a command/address signal to the memory devices <b>602</b><i>a </i>to <b>602</b><i>e </i>through a command/address transmission line <b>563</b>. In addition, the buffer chip <b>590</b> may provide a command/address signal to the memory devices <b>603</b><i>a </i>to <b>603</b><i>d </i>through a command/address transmission line <b>571</b>, and may provide a command/address signal to the memory devices <b>604</b><i>a </i>to <b>604</b><i>d </i>through a command/address transmission line <b>573</b>.</p><p id="p-0190" num="0188">The command/address transmission lines <b>561</b> and <b>563</b> may be connected in common to the module resistance unit <b>560</b> that is adjacent to the first edge portion <b>503</b>, and the command/address transmission lines <b>571</b> and <b>573</b> may be connected in common to the module resistance unit <b>570</b> that is adjacent to the second edge portion <b>505</b>. Each of the module resistance units <b>560</b> and <b>570</b> may include a termination resistor Rtt/2 connected to a termination voltage Vtt.</p><p id="p-0191" num="0189">For example, each of or at least one of the plurality of memory devices <b>601</b><i>a </i>to <b>601</b><i>e</i>, <b>602</b><i>a </i>to <b>602</b><i>e</i>, <b>603</b><i>a </i>to <b>603</b><i>d </i>and <b>604</b><i>a </i>to <b>604</b><i>d </i>may be or include a DRAM device.</p><p id="p-0192" num="0190">The SPD chip <b>580</b> may be arranged to be adjacent to the buffer chip <b>590</b>, and the PMIC <b>585</b> may be between the memory device <b>603</b><i>d </i>and the second edge portion <b>505</b>. The PMIC <b>585</b> may generate a power supply voltage VDD based on an input voltage VIN, and may provide the power supply voltage VDD to the memory devices <b>601</b><i>a </i>to <b>601</b><i>e</i>, <b>602</b><i>a </i>to <b>602</b><i>e</i>, <b>603</b><i>a </i>to <b>603</b><i>d </i>and <b>604</b><i>a </i>to <b>604</b><i>d. </i></p><p id="p-0193" num="0191"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a block diagram illustrating an example of a memory system according to some example embodiments.</p><p id="p-0194" num="0192">Referring to <figref idref="DRAWINGS">FIG. <b>25</b></figref>, a memory system <b>800</b> may include a memory controller <b>810</b> and/or memory modules <b>820</b> and <b>830</b>. For example, the memory system <b>800</b> may have quad-rank memory modules. While two memory modules are depicted in <figref idref="DRAWINGS">FIG. <b>25</b></figref>, more or fewer memory modules may be included in the memory system <b>800</b>, according to example embodiments.</p><p id="p-0195" num="0193">The memory controller <b>810</b> may control the memory modules <b>820</b> and/or <b>830</b> so as to perform a command supplied from a processor and/or a host. The memory controller <b>810</b> may be implemented using processing circuitry (e.g., a processor) and/or may be implemented with a host, an application processor (AP) or a system-on-a-chip (SoC). For signal integrity, a source termination may be implemented with a resistor RTT on a bus <b>840</b> of the memory controller <b>810</b>. The resistor RTT may be connected to a power supply voltage VDDQ. The memory controller <b>810</b> may include a transmitter <b>811</b> that may transmit a signal to at least one of the memory modules <b>820</b> and/or <b>830</b>, and a receiver <b>813</b> that may receive a signal from at least one of the memory modules <b>820</b> and/or <b>830</b>. The memory controller <b>810</b> may include a system ECC engine <b>815</b>. The system ECC engine <b>815</b> may correspond to the system ECC engine <b>130</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0196" num="0194">As discussed herein, the system ECC engine <b>815</b> may select at least one of the plurality of decoding schemes DEC<b>1</b> to DECX based on the decoding status flag DSF received from the memory modules <b>820</b> and/or <b>830</b>, and may perform the ECC decoding using the selected decoding scheme. Accordingly, the ECC decoding may be performed by selecting the decoding scheme suitable or appropriate for the current situation and/or occurrences of errors in the plurality of memory modules <b>820</b> and/or <b>830</b>.</p><p id="p-0197" num="0195">The memory modules <b>820</b> and <b>830</b> may be referred to as a first memory module <b>820</b> and a second memory module <b>830</b>. The first memory module <b>820</b> and the second memory module <b>830</b> may be connected to the memory controller <b>810</b> through the bus <b>840</b>. Each of the first memory module <b>820</b> and the second memory module <b>830</b> may correspond to the memory module MM in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The first memory module <b>820</b> may include memory ranks RK<b>1</b> and RK<b>2</b>, and the second memory module <b>830</b> may include memory ranks RK<b>3</b> and RK<b>4</b>.</p><p id="p-0198" num="0196">Each of the first memory module <b>820</b> and the second memory module <b>830</b> may include a plurality of memory chips including a plurality of data chips and at least one parity chip, and each memory chip may include an on-die ECC engine <b>825</b> that generates the decoding status flag DSF. The on-die ECC engine <b>825</b> may correspond to the on-die ECC engines <b>400</b><i>a </i>to <b>400</b><i>k </i>and <b>400</b><i>p </i>in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0199" num="0197"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a block diagram illustrating an electronic system including a memory module according to some example embodiments.</p><p id="p-0200" num="0198">Referring to <figref idref="DRAWINGS">FIG. <b>26</b></figref>, an electronic system <b>900</b> may include an application processor <b>910</b>, a connectivity module <b>920</b>, a user interface <b>930</b>, a nonvolatile memory device (NVM) <b>940</b>, a memory module (MM) <b>950</b> such as a DIMM, and/or a power supply <b>970</b>. For example, the electronic system <b>900</b> may be a mobile system.</p><p id="p-0201" num="0199">The application processor <b>910</b> may include a memory controller <b>911</b>. The memory controller <b>911</b> may include a system ECC engine (e.g., the system ECC engine <b>130</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0202" num="0200">The application processor <b>910</b> may execute applications, such as at least one of a web browser, a game application, a video player, etc. The connectivity module <b>920</b> may perform wired and/or wireless communication with an external device.</p><p id="p-0203" num="0201">The memory module <b>950</b> may store data processed by the application processor <b>910</b> and/or operate as a working memory. The memory module <b>950</b> may include a plurality of memory devices (MD) <b>951</b>, <b>952</b>, <b>953</b>, . . . , <b>95</b><i>q </i>(where q is a positive integer greater than three), and/or a buffer chip (RCD) <b>961</b>. The memory module <b>950</b> may be the memory module <b>500</b> of <figref idref="DRAWINGS">FIG. <b>24</b></figref>.</p><p id="p-0204" num="0202">The plurality of memory devices <b>951</b> to <b>95</b><i>q </i>may include a plurality of memory chips each of which includes an on-die ECC engine (e.g., the on-die ECC engines <b>400</b><i>a </i>to <b>400</b><i>k </i>and <b>400</b><i>p </i>of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). Therefore, the memory controller <b>911</b> may select at least one of the plurality of decoding schemes DEC<b>1</b> to DECX based on the decoding status flag DSF received from the memory module <b>950</b>, and may perform the ECC decoding using the selected decoding scheme. Accordingly, the ECC decoding may be performed by selecting the decoding scheme that is suitable or appropriate for the current situation and/or occurrences of errors in the plurality of memory devices <b>951</b> to <b>95</b><i>q. </i></p><p id="p-0205" num="0203">The nonvolatile memory device <b>940</b> may store a boot image for booting the electronic system <b>900</b>. The user interface <b>930</b> may include at least one input device, such as a keypad, a touch screen, etc., and at least one output device, such as a speaker, a display device, etc. The power supply <b>970</b> may supply an operating voltage to the electronic system <b>900</b>.</p><p id="p-0206" num="0204">The electronic system <b>900</b> or components of the electronic system <b>900</b> may be mounted using various types of packages.</p><p id="p-0207" num="0205">The inventive concepts may be applied to various electronic devices and systems that include the memory modules and the memory systems. For example, the inventive concepts of the present disclosure may be applied to systems such as a personal computer (PC), a server computer, a data center, a workstation, a mobile phone, a smart phone, a tablet computer, a laptop computer, a personal digital assistant (PDA), a portable multimedia player (PMP), a digital camera, a portable game console, a music player, a camcorder, a video player, a navigation device, a wearable device, an internet of things (IoT) device, an internet of everything (IoE) device, an e-book reader, a virtual reality (VR) device, an augmented reality (AR) device, a robotic device, a drone, or the like.</p><p id="p-0208" num="0206">The foregoing is illustrative of some example embodiments and is not to be construed as limiting thereof or limiting of the inventive concepts. Although some example embodiments have been described, those skilled in the art will readily appreciate that many modifications are possible in the example embodiments without materially departing from the novel teachings and advantages of the example embodiments and of the inventive concepts. Accordingly, all such modifications are intended to be included within the scope of the example embodiments as defined in the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230004308A1-20230105-M00001.NB"><img id="EMI-M00001" he="6.35mm" wi="76.20mm" file="US20230004308A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of operating a memory controller configured to control a memory module, the memory module including a plurality of data chips and at least one parity chip, each of the data chips and the at least one parity chip including an on-die error correction code (ECC) engine, the method comprising:<claim-text>receiving a decoding status flag from the memory module;</claim-text><claim-text>obtaining a first number and a second number based on the decoding status flag, the first number representing a number of first chips including an uncorrectable error that is uncorrectable by the respective on-die ECC engine, the second number representing a number of second chips including a correctable error that is correctable by the respective on-die ECC engine;</claim-text><claim-text>selecting at least one of a plurality of decoding schemes based on at least one of the first number and the second number; and</claim-text><claim-text>performing, by a system ECC engine included in the memory controller, an ECC decoding on at least one of the first chips and the second chips based on the selected decoding scheme.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein selecting the at least one of the plurality of decoding schemes based on the at least one of the first number and the second number includes:<claim-text>in response to the first number being less than or equal to a first reference value, selecting the at least one of the plurality of decoding schemes based on the second number; and</claim-text><claim-text>in response to the first number being greater than the first reference value, selecting the at least one of the plurality of decoding schemes based on the first number.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the first reference value is zero.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the first number is less than or equal to the first reference value, wherein selecting the at least one of the plurality of decoding schemes based on the second number includes selecting a first decoding scheme, and wherein performing the ECC decoding on at least one of the first chips and the second chips based on the selected decoding scheme includes performing the first decoding scheme on the second chips.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the selected first decoding scheme is a Chipkill decoding scheme.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein selecting the at least one of the plurality of decoding schemes based on the second number further includes:<claim-text>in response to the second number being greater than a second reference value and less than or equal to a third reference value, additionally selecting another decoding scheme after the first decoding scheme is selected.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein performing the ECC decoding on the at least one of the first chips and the second chips includes:<claim-text>in response to the second number being greater than the second reference value and less than or equal to the third reference value, additionally performing the ECC decoding on the second chips based on the other decoding scheme after the ECC decoding is performed on the second chips based on the first decoding scheme.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the first number is greater than the first reference value, and selecting the at least one of the plurality of decoding schemes based on the first number includes:<claim-text>in response to the first number being greater than the first reference value and less than or equal to a fourth reference value, selecting a second decoding scheme different from a first decoding scheme;</claim-text><claim-text>in response to the first number being greater than the fourth reference value and less than or equal to a fifth reference value, selecting a third decoding scheme different from the first and second decoding schemes; and</claim-text><claim-text>in response to the first number being greater than the fifth reference value, determining that the ECC decoding by the system ECC engine is not possible.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein performing the ECC decoding on the at least one of the first chips and the second chips includes:<claim-text>in response to the first number being greater than the first reference value and less than or equal to the fourth reference value, performing the ECC decoding on the first chips based on the second decoding scheme; and</claim-text><claim-text>in response to the first number being greater than the fourth reference value and less than or equal to the fifth reference value, performing the ECC decoding on the first chips based on the third decoding scheme.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the second decoding scheme and the third decoding scheme are erasure decoding schemes.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the first number is less than or equal to the first reference value, and selecting the at least one of the plurality of decoding schemes based on the second number includes selecting a half-Chipkill decoding scheme.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein selecting the at least one of the plurality of decoding schemes based on the second number further includes:<claim-text>in response to the second number being greater than a sixth reference value and less than or equal to a seventh reference value, additionally selecting a second decoding scheme different from the half-Chipkill decoding scheme after the half-Chipkill decoding scheme is selected.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the first number is greater than the first reference value, and selecting the at least one of the plurality of decoding schemes based on the first number includes:<claim-text>in response to the first number being less than or equal to an eighth reference value, selecting a half-Chipkill decoding scheme; and</claim-text><claim-text>in response to the first number being greater than the eighth reference value, determining that the ECC decoding by the system ECC engine is not possible.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein selecting the at least one of the plurality of decoding schemes based on the first number further includes:<claim-text>in response to the first number being less than or equal to the eighth reference value, additionally selecting a second decoding scheme different from the first decoding scheme after the first decoding scheme is selected.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the second decoding scheme is an erasure decoding scheme.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A memory controller configured to control a memory module, the memory module comprising a plurality of data chips and at least one parity chip, each of the plurality of data chips and the at least one parity chip including an on-die error correction code (ECC) engine, the memory controller comprising:<claim-text>a decoding status flag decoder configured to receive a decoding status flag from the memory module, and to obtain a first number and a second number based on the decoding status flag, the first number representing a number of first chips including an uncorrectable error that is uncorrectable by the on-die ECC engine, the second number representing a number of second chips including a correctable error that is correctable by the on-die ECC engine; and</claim-text><claim-text>a system ECC engine configured to select at least one of a plurality of decoding schemes based on at least one of the first number and the second number, and to perform an ECC decoding on at least one of the first chips and the second chips based on the selected decoding scheme.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The memory controller of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein:<claim-text>the plurality of data chips include first to N-th data chips configured to store main data, where N is a natural number equal to or greater than two, and</claim-text><claim-text>the at least one parity chip includes a first parity chip configured to store error locator parity data, and a second parity chip configured to store error magnitude parity data.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The memory controller of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the plurality of decoding schemes include a first decoding scheme that is performed on one data chip, a second decoding scheme that is performed on one data chip and is different from the first decoding scheme, and a third decoding scheme that is performed on two data chips and is different from the first and second decoding schemes.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The memory controller of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein:<claim-text>the plurality of data chips include first to M-th data chips configured to store main data, where M is a natural number equal to or greater than two, and</claim-text><claim-text>the at least one parity chip includes a first parity chip configured to store error locator parity data and error magnitude parity data.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A memory system comprising:<claim-text>a memory module including a plurality of data chips and at least one parity chip, each of the plurality of data chips and the at least one parity chip including an on-die error correction code (ECC) engine; and</claim-text><claim-text>a memory controller configured to control the memory module,</claim-text><claim-text>wherein the memory controller includes:<claim-text>a decoding status flag decoder configured to receive a decoding status flag from the memory module, and to obtain a first number and a second number based on the decoding status flag, the decoding status flag being generated by the on-die ECC engine, the first number representing a number of first chips that include an uncorrectable error that is uncorrectable by the on-die ECC engine, the second number representing a number of second chips that include a correctable error that is correctable by the on-die ECC engine; and</claim-text><claim-text>a system ECC engine configured to select at least one of a plurality of decoding schemes based on at least one of the first number and the second number, and to perform an ECC decoding on at least one of the first chips and the second chips based on the selected decoding scheme, and</claim-text><claim-text>wherein the system ECC engine is configured to select the at least one of the plurality of decoding schemes based on the second number in response to the first number being less than or equal to a first reference value, and to select the at least one of the plurality of decoding schemes based on the first number in response to the first number being greater than the first reference value, and</claim-text></claim-text><claim-text>wherein each the on-die ECC engine includes:<claim-text>a syndrome generation circuit configured to generate a syndrome based on read data and parity data;</claim-text><claim-text>an error locator configured to generate an error position signal by decoding the syndrome, the error position signal representing a position of an error bit in the read data;</claim-text><claim-text>a data corrector configured to output corrected data by correcting the error bit included in the read data based on the error position signal; and</claim-text><claim-text>a decoding status flag generator configured to generate the decoding status flag based on the syndrome and the error position signal, the decoding status flag representing a state of the error bit in the read data.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>