<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005563A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005563</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17366988</doc-number><date>20210702</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>42</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>26</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>K</subclass><main-group>19</main-group><subgroup>21</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>42</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>102</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>26</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>K</subclass><main-group>19</main-group><subgroup>21</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>2029</main-group><subgroup>1802</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">PROGRAMMING CODEWORDS FOR ERROR CORRECTION OPERATIONS TO MEMORY</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Micron Technology, Inc.</orgname><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Sforzin</last-name><first-name>Marco</first-name><address><city>Cernusco Sul Naviglio</city><country>IT</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present disclosure includes apparatuses, methods, and systems for programming codewords for error correction operations to memory. An embodiment includes a memory having a plurality of groups of memory cells, wherein each respective one of the plurality of groups includes a plurality of sub-groups of memory cells, and circuitry configured to program a portion of a codeword for an error correction operation to one of the plurality of groups of memory cells by determining an address in that group of memory cells by performing an XOR operation on an address of one of the plurality of sub-groups of that group of memory cells, and programming the portion of the codeword to the determined address.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="159.85mm" wi="158.75mm" file="US20230005563A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="102.19mm" wi="167.13mm" file="US20230005563A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="186.35mm" wi="67.39mm" orientation="landscape" file="US20230005563A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="217.51mm" wi="98.55mm" file="US20230005563A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="177.04mm" wi="164.08mm" file="US20230005563A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="233.60mm" wi="166.96mm" file="US20230005563A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="210.14mm" wi="123.02mm" orientation="landscape" file="US20230005563A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="93.05mm" wi="93.13mm" file="US20230005563A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present disclosure relates generally to semiconductor memory and methods, and more particularly, to programming codewords for error correction operations to memory.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Memory devices are typically provided as internal, semiconductor, integrated circuits and/or external removable devices in computers or other electronic devices. There are many different types of memory including volatile and non-volatile memory. Volatile memory can require power to maintain its data and can include random-access memory (RAM), dynamic random access memory (DRAM), and synchronous dynamic random access memory (SDRAM), among others. Non-volatile memory can provide persistent data by retaining stored data when not powered and can include NAND flash memory, NOR flash memory, read only memory (ROM), and resistance variable memory such as phase change random access memory (PCRAM), resistive random access memory (RRAM), magnetic random access memory (MRAM), and programmable conductive memory, among others.</p><p id="p-0004" num="0003">Memory devices can be utilized as volatile and non-volatile memory for a wide range of electronic applications in need of high memory densities, high reliability, and low power consumption. Non-volatile memory may be used in, for example, personal computers, portable memory sticks, solid state drives (SSDs), digital cameras, cellular telephones, portable music players such as MP3 players, and movie players, among other electronic devices.</p><p id="p-0005" num="0004">Resistance variable memory devices can include resistance variable memory cells that can store data based on the resistance state of a storage element (e.g., a memory element having a variable resistance). As such, resistance variable memory cells can be programmed to store data corresponding to a target data state by varying the resistance level of the memory element. Resistance variable memory cells can be programmed to a target data state (e.g., corresponding to a particular resistance state) by applying sources of an electrical field or energy, such as positive or negative electrical pulses (e.g., positive or negative voltage or current pulses) to the cells (e.g., to the memory element of the cells) for a particular duration. A state of a resistance variable memory cell can be determined by sensing current through the cell responsive to an applied interrogation voltage. The sensed current, which varies based on the resistance level of the cell, can indicate the state of the cell.</p><p id="p-0006" num="0005">Various memory arrays can be organized in a cross-point architecture with memory cells (e.g., resistance variable cells) being located at intersections of a first and second signal lines used to access the cells (e.g., at intersections of word lines and bit lines). Some resistance variable memory cells can comprise a select element (e.g., a diode, transistor, or other switching device) in series with a storage element (e.g., a phase change material, metal oxide material, and/or some other material programmable to different resistance levels). Some resistance variable memory cells, which may be referred to as self-selecting memory cells, can comprise a single material which can serve as both a select element and a storage element for the memory cell.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a three-dimensional view of an example of a memory array, in accordance with an embodiment of the present disclosure.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates threshold voltage distributions associated with various states of memory cells, in accordance with an embodiment of the present disclosure.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> is an example of a current-versus-voltage curve corresponding to a memory state of <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, in accordance with an embodiment of the present disclosure.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b>C</figref> is an example of a current-versus-voltage curve corresponding to another memory state of <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, in accordance with an embodiment of the present disclosure.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustration of an example apparatus, in accordance with an embodiment of the present disclosure.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>B</figref> are exploded three-dimensional views of examples of sub-groups of memory arrays, in accordance with an embodiment of the present disclosure.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an illustration of an example organization of a memory array, in accordance with an embodiment of the present disclosure.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an illustration of an example electrical distance for a memory cell of a memory array, in accordance with an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0015" num="0014">The present disclosure includes apparatuses, methods, and systems for programming codewords for error correction operations to memory. An embodiment includes a memory having a plurality of groups of memory cells, wherein each respective one of the plurality of groups includes a plurality of sub-groups of memory cells, and circuitry configured to program a portion of a codeword for an error correction operation to one of the plurality of groups of memory cells by determining an address in that group of memory cells by performing an XOR operation on an address of one of the plurality of sub-groups of that group of memory cells, and programming the portion of the codeword to the determined address.</p><p id="p-0016" num="0015">During the sensing of a resistance variable memory cell, such as a self-selecting memory cell, a voltage may be applied to the memory cell, and the data state of the cell can be determined based on the amount of current that flows through the cell in response to the applied voltage. For example, when the voltage is applied to the memory cell, the resulting amount of current that is on a signal line (e.g., bit line or word line) to which the memory cell is coupled can be compared to a reference current, and the state of the memory cell can be determined based on the comparison. For instance, the cell can be determined to be in a first (e.g., reset) data state if the comparison indicates the signal line current is less than the reference current, and the cell can be determined to be in a second (e.g., set) data state if the comparison indicates the signal line current is greater than the reference current.</p><p id="p-0017" num="0016">However, as such sense operations are performed on a memory cell during operation of the memory over time, various mechanisms, such as read disturb and/or current leakage, among others, can eventually cause the memory cell to be determined (e.g., sensed) to be in a different data state than the state to which the cell is actually programmed. For instance, such mechanisms may cause a memory cell that is programmed to the first (e.g., reset) data state to be erroneously determined to be in the second (e.g., set) data state, and/or vice versa.</p><p id="p-0018" num="0017">Error correction operations can be used to correct such errors occurring in data sensed from the memory. For instance, error correction operations can utilize codewords to perform error correction operations on erroneous data sensed from the memory. To increase the effectiveness (e.g., the correction rate and/or uniformity) of the error correction operations, different portions of the codewords may be stored in different portions of the memory, and at different distances from the row and column decoders of their respective memory portions (e.g., the memory cells used to store the different portions of the codewords may be located in different partitions of the memory, and at different electrical distances from their respective row and column decoders).</p><p id="p-0019" num="0018">An address offset mechanism can be used to ensure different portions of the codewords are programmed to different portions of the memory at different electrical distances from their respective row and column decoders. In previous approaches, the address offset mechanism can be based on an addition modulo operation performed on the most significant bits of the address to which the codeword is being programmed. Such an address offset mechanism, however, can be complex and slow, which can reduce the throughput of the memory.</p><p id="p-0020" num="0019">Embodiments of the present disclosure, in contrast, can utilize an XOR-based address offset mechanism, and/or an address offset mechanism operation performed on any of the bits (e.g. rather than the most significant bits) of the address to which the codeword is being programmed, to ensure different portions of the codeword are programmed to different portions of the memory at different electrical distances from their respective row and column decoders. Such address offset mechanisms can be simpler and faster than previous address offset mechanisms, which can increase the throughput of the memory as compared with previous address offset mechanisms.</p><p id="p-0021" num="0020">As used herein, &#x201c;a&#x201d;, &#x201c;an&#x201d;, or &#x201c;a number of&#x201d; can refer to one or more of something, and &#x201c;a plurality of&#x201d; can refer to two or more such things. For example, a memory device can refer to one or more memory devices, and a plurality of memory devices can refer to two or more memory devices. Additionally, the designators &#x201c;N&#x201d; and &#x201c;M&#x201d;, as used herein, particularly with respect to reference numerals in the drawings, indicates that a number of the particular feature so designated can be included with a number of embodiments of the present disclosure.</p><p id="p-0022" num="0021">The figures herein follow a numbering convention in which the first digit or digits correspond to the drawing figure number and the remaining digits identify an element or component in the drawing. Similar elements or components between different figures may be identified by the use of similar digits.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a three-dimensional view of an example of a memory array <b>100</b> (e.g., a cross-point memory array), in accordance with an embodiment of the present disclosure. Memory array <b>100</b> may include a plurality of first signal lines (e.g., first access lines), which may be referred to as word lines <b>110</b>-<b>0</b> to <b>110</b>-N, and a plurality of second signal lines (e.g., second access lines), which may be referred to as bit lines <b>120</b>-<b>0</b> to <b>120</b>-M) that cross each other (e.g., intersect in different planes). For example, each of word lines <b>110</b>-<b>0</b> to <b>110</b>-N may cross bit lines <b>120</b>-<b>0</b> to <b>120</b>-M. A memory cell <b>125</b> may be between the bit line and the word line (e.g., at each bit line/word line crossing).</p><p id="p-0024" num="0023">The memory cells <b>125</b> may be resistance variable memory cells, for example. The memory cells <b>125</b> may include a material programmable to different data states. In some examples, each of memory cells <b>125</b> may include a single material, between a top electrode (e.g., top plate) and a bottom electrode (e.g., bottom plate), that may serve as a select element (e.g., a switching material) and a storage element, so that each memory cell <b>125</b> may act as both a selector device and a memory element. Such a memory cell may be referred to herein as a self-selecting memory cell. For example, each memory cell may include a chalcogenide material that may be formed of various doped or undoped materials, that may or may not be a phase-change material, and/or that may or may not undergo a phase change during reading and/or writing the memory cell. Chalcogenide materials may be materials or alloys that include at least one of the elements S, Se, and Te. Chalcogenide materials may include alloys of S, Se, Te, Ge, As, Al, Sb, Au, indium (In), gallium (Ga), tin (Sn), bismuth (Bi), palladium (Pd), cobalt (Co), oxygen (O), silver (Ag), nickel (Ni), platinum (Pt). Example chalcogenide materials and alloys may include, but are not limited to, Ge&#x2014;Te, In&#x2014;Se, Sb&#x2014;Te, Ga&#x2014;Sb, In&#x2014;Sb, As&#x2014;Te, Al&#x2014;Te, Ge&#x2014;Sb&#x2014;Te, Te&#x2014;Ge&#x2014;As, In&#x2014;Sb&#x2014;Te, Te&#x2014;Sn&#x2014;Se, Ge&#x2014;Se&#x2014;Ga, Bi&#x2014;Se&#x2014;Sb, Ga&#x2014;Se&#x2014;Te, Sn&#x2014;Sb&#x2014;Te, In&#x2014;Sb&#x2014;Ge, Te&#x2014;Ge&#x2014;Sb&#x2014;S, Te&#x2014;Ge&#x2014;Sn&#x2014;O, Te&#x2014;Ge&#x2014;Sn&#x2014;Au, Pd&#x2014;Te&#x2014;Ge&#x2014;Sn, In&#x2014;Se&#x2014;Ti&#x2014;Co, Ge&#x2014;Sb&#x2014;Te&#x2014;Pd, Ge&#x2014;Sb&#x2014;Te&#x2014;Co, Sb&#x2014;Te&#x2014;Bi&#x2014;Se, Ag&#x2014;In&#x2014;Sb&#x2014;Te, Ge&#x2014;Sb&#x2014;Se&#x2014;Te, Ge&#x2014;Sn&#x2014;Sb&#x2014;Te, Ge&#x2014;Te&#x2014;Sn&#x2014;Ni, Ge&#x2014;Te&#x2014;Sn&#x2014;Pd, or Ge&#x2014;Te&#x2014;Sn&#x2014;Pt. Example chalcogenide materials can also include SAG-based glasses NON phase change materials such as SeAsGe. The hyphenated chemical composition notation, as used herein, indicates the elements included in a particular compound or alloy and is intended to represent all stoichiometries involving the indicated elements. For example, Ge&#x2014;Te may include GexTey, where x and y may be any positive integer.</p><p id="p-0025" num="0024">In various embodiments, the threshold voltages of memory cells <b>125</b> may snap back in response to a magnitude of an applied voltage differential across them exceeding their threshold voltages. Such memory cells may be referred to as snapback memory cells. For example, a memory cell <b>125</b> may change (e.g., snap back) from a non-conductive (e.g., high impedance) state to a conductive (e.g., lower impedance) state in response to the applied voltage differential exceeding the threshold voltage. For example, a memory cell snapping back may refer to the memory cell transitioning from a high impedance state to a lower impedance state responsive to a voltage differential applied across the memory cell being greater than the threshold voltage of the memory cell. A threshold voltage of a memory cell snapping back may be referred to as a snapback event, for example.</p><p id="p-0026" num="0025">The architecture of memory array <b>100</b> may be referred to as a cross-point architecture in which a memory cell is formed at a topological cross-point between a word line and a bit line as illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Such a cross-point architecture may offer relatively high-density data storage with lower production costs compared to other memory architectures. For example, the cross-point architecture may have memory cells with a reduced area and, resultantly, an increased memory cell density compared to other architectures.</p><p id="p-0027" num="0026">Embodiments of the present disclosure, however, are not limited to the example memory array architecture illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, embodiments of the present disclosure can include a three-dimensional memory array having a plurality of vertically oriented (e.g., vertical) access lines and a plurality of horizontally oriented (e.g., horizontal) access lines. The vertical access lines can be bit lines arranged in a pillar-like architecture, and the horizontal access lines can be word lines arranged in a plurality of conductive planes or decks separated (e.g., insulated) from each other by a dielectric material. The chalcogenide material of the respective memory cells of such a memory array can be located at the crossing of a respective vertical bit line and horizontal word line.</p><p id="p-0028" num="0027">Further, in some architectures (not shown), a plurality of first access lines may be formed on parallel planes or tiers parallel to a substrate. The plurality of first access lines may be configured to include a plurality of holes to allow a plurality of second access lines formed orthogonally to the planes of first access lines, such that each of the plurality of second access lines penetrates through a vertically aligned set of holes (e.g., the second access lines vertically disposed with respect to the planes of the first access lines and the horizontal substrate). Memory cells including a storage element (e.g., self-selecting memory cells including a chalcogenide material) may be formed at the crossings of first access lines and second access lines (e.g., spaces between the first access lines and the second access lines in the vertically aligned set of holes). In a similar fashion as described above, the memory cells (e.g., self-selecting memory cells including a chalcogenide material) may be operated (e.g., read and/or programmed) by selecting respective access lines and applying voltage or current pulses.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates threshold distributions associated with various states of memory cells, such as memory cells <b>125</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in accordance with an embodiment of the present disclosure. For instance, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, the memory cells can be programmed to one of two possible data states (e.g., state 0 or state 1). That is, <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates threshold voltage distributions associated with two possible data states to which the memory cells can be programmed.</p><p id="p-0030" num="0029">In <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, the voltage VCELL may correspond to a voltage differential applied to (e.g., across) the memory cell, such as the difference between a bit line voltage (VBL) and a word line voltage (VWL) (e.g., VCELL=VBL&#x2212;VWL). The threshold voltage distributions (e.g., ranges) <b>201</b>-<b>1</b>, <b>201</b>-<b>2</b>, <b>202</b>-<b>1</b>, and <b>202</b>-<b>2</b> may represent a statistical variation in the threshold voltages of memory cells programmed to a particular state. The distributions illustrated in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> correspond to the current versus voltage curves described further in conjunction with <figref idref="DRAWINGS">FIGS. <b>2</b>B and <b>2</b>C</figref>, which illustrate snapback asymmetry associated with assigned data states.</p><p id="p-0031" num="0030">In some examples, the magnitudes of the threshold voltages of a memory cell <b>125</b> in a particular state may be asymmetric for different polarities, as shown in <figref idref="DRAWINGS">FIGS. <b>2</b>A, <b>2</b>B and <b>2</b>C</figref>. For example, the threshold voltage of a memory cell <b>125</b> programmed to a reset state (e.g., state 0) or a set state (e.g., state 1) may have a different magnitude in one polarity than in an opposite polarity. For instance, in the example illustrated in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, a first data state (e.g., state 0) is associated with a first asymmetric threshold voltage distribution (e.g., threshold voltage distributions <b>201</b>-<b>1</b> and <b>201</b>-<b>2</b>) whose magnitude is greater for a negative polarity than a positive polarity, and a second data state (e.g., state 1) is associated with a second asymmetric threshold voltage distribution (e.g., threshold voltage distributions <b>202</b>-<b>1</b> and <b>202</b>-<b>2</b>) whose magnitude is greater for a positive polarity than a negative polarity. In such an example, an applied voltage magnitude sufficient to cause a memory cell <b>125</b> to snap back can be different (e.g., higher or lower) for one applied voltage polarity than the other.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates demarcation voltages VDM<b>1</b> and VDM<b>2</b>, which can be used to determine the state of a memory cell (e.g., to distinguish between states as part of a read operation). In this example, VDM<b>1</b> is a positive voltage used to distinguish cells in state 0 (e.g., in threshold voltage distribution <b>201</b>-<b>2</b>) from cells in state 1 (e.g., threshold voltage distribution <b>202</b>-<b>2</b>). Similarly, VDM<b>2</b> is a negative voltage used to distinguish cells in state 1 (e.g., threshold voltage distribution <b>202</b>-<b>1</b>) from cells in state 0 (e.g., threshold voltage distribution <b>201</b>-<b>1</b>). In the examples of <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>C</figref>, a memory cell <b>125</b> in a positive state 1 does not snap back in response to applying VDM<b>1</b>; a memory cell <b>125</b> in a positive state 0 snaps back in response to applying VDM<b>1</b>; a memory cell <b>125</b> in a negative state 1 snaps back in response to applying VDM<b>2</b>; and a memory cell <b>125</b> in a negative state 0 does not snap back in response to applying VDM<b>2</b>.</p><p id="p-0033" num="0032">Embodiments are not limited to the example shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>. For example, the designations of state 0 and state 1 can be interchanged (e.g., distributions <b>201</b>-<b>1</b> and <b>201</b>-<b>2</b> can be designated as state 1 and distributions <b>202</b>-<b>1</b> and <b>202</b>-<b>2</b> can be designated as state 0).</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIGS. <b>2</b>B and <b>2</b>C</figref> are examples of current-versus-voltage curves corresponding to the memory states of <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, in accordance with an embodiment of the present disclosure. As such, in this example, the curves in <figref idref="DRAWINGS">FIGS. <b>2</b>B and <b>2</b>C</figref> correspond to cells in which state 1 is designated as the higher threshold voltage state in a particular polarity (positive polarity direction in this example), and in which state 0 is designated as the higher threshold voltage state in the opposite polarity (negative polarity direction in this example). As noted above, the state designation can be interchanged such that state 0 could correspond to the higher threshold voltage state in the positive polarity direction with state 1 corresponding to the higher threshold voltage state in the negative direction.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIGS. <b>2</b>B and <b>2</b>C</figref> illustrate memory cell snapback as described herein. VCELL can represent an applied voltage across the memory cell. For example, VCELL can be a voltage applied to a top electrode corresponding to the cell minus a voltage applied to a bottom electrode corresponding to the cell (e.g., via a respective word line and bit line). As shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, responsive to an applied positive polarity voltage (VCELL), a memory cell programmed to state 1 (e.g., threshold voltage distribution <b>200</b>-<b>2</b>) is in a non-conductive state until VCELL reaches voltage Vtst<b>02</b>, at which point the cell transitions to a conductive (e.g., lower resistance) state. This transition can be referred to as a snapback event, which occurs when the voltage applied across the cell (in a particular polarity) exceeds the cell's threshold voltage. Accordingly, voltage Vtst<b>02</b> can be referred to as a snapback voltage. In <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, voltage Vtst<b>01</b> corresponds to a snapback voltage for a cell programmed to state 1 (e.g., threshold voltage distribution <b>202</b>-<b>1</b>). That is, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, the memory cell transitions (e.g., switches) to a conductive state when VCELL exceeds Vtst<b>01</b> in the negative polarity direction.</p><p id="p-0036" num="0035">Similarly, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>C</figref>, responsive to an applied negative polarity voltage (VCELL), a memory cell programmed to state 0 (e.g., threshold voltage distribution <b>201</b>-<b>1</b>) is in a non-conductive state until VCELL reaches voltage Vtst<b>11</b>, at which point the cell snaps back to a conductive (e.g., lower resistance) state. In <figref idref="DRAWINGS">FIG. <b>2</b>C</figref>, voltage Vtst<b>12</b> corresponds to the snapback voltage for a cell programmed to state 0 (e.g., threshold voltage distribution <b>201</b>-<b>2</b>). That is, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>C</figref>, the memory cell snaps back from a high impedance non-conductive state to a lower impedance conductive state when VCELL exceeds Vtst<b>12</b> in the positive polarity direction.</p><p id="p-0037" num="0036">In various instances, a snapback event can result in a memory cell switching states. For instance, if a VCELL exceeding Vtst<b>02</b> is applied to a state 1 cell, the resulting snapback event may reduce the threshold voltage of the cell to a level below VDM<b>1</b>, which would result in the cell being read as state 0 (e.g., threshold voltage distribution <b>201</b>-<b>2</b>). As such, in a number of embodiments, a snapback event can be used to write a cell to the opposite state (e.g., from state 1 to state 0 and vice versa).</p><p id="p-0038" num="0037">As memory cells <b>125</b> are repeatedly programmed (e.g., written) to different data states and repeatedly sensed (e.g., read), the magnitudes of their snapback voltages (e.g., Vtst , Vtst<b>02</b>, Vtst<b>11</b>, and Vtst<b>12</b>) may change due to the stress caused by continuously applying the programming voltages and the demarcation voltages (e.g., VDM<b>1</b> and VDM<b>2</b>) to the cells, which in turn may make it easier or more difficult for the cells to snap back. This change may cause the cell to be sensed to be in a different data state that the state to which the cell was actually programmed. For instance, a memory cell that is programmed to the reset state (e.g., state 0) may erroneously be sensed to be in the set state (e.g., state 1), and/or vice versa.</p><p id="p-0039" num="0038">Error correction operations can be used to correct such errors occurring in data sensed from memory cells <b>125</b>. For instance, error correction operations can utilize codewords to perform error correction operations on erroneous data sensed from the memory cells. As an example, an error correction operation can utilize redundant data bits in addition to information bits to generate a codeword (e.g., a codeword data pattern). Error correction can be performed on a received word to recover the original codeword, and the presence of redundant bits enables the original data bits to be recovered even if some number of the original or redundant bits have been corrupted.</p><p id="p-0040" num="0039">To increase the effectiveness (e.g., the correction rate and/or uniformity) of the error correction operation, different portions of the codeword may be stored in different portions of the memory, and at different distances from the row and column decoders of their respective memory portions (e.g., the memory cells used to store the different portions of the codewords may be located in different partitions of the memory, and at different electrical distances from their respective row and column decoders). An address offset mechanism can be used to ensure different portions of the codeword are programmed to different portions of the memory at different electrical distances from their respective row and column decoders. For example, embodiments of the present disclosure can utilize an XOR-based address offset mechanism, and/or an address offset mechanism operation performed on any of the bits (e.g. rather than the most significant bits) of the address to which the codeword is being programmed, to ensure different portions of the codeword are programmed to different portions of the memory at different electrical distances from their respective row and column decoders, as will be further described herein.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustration of an example apparatus, such as an electronic memory system <b>300</b>, in accordance with an embodiment of the present disclosure. Memory system <b>300</b> may include an apparatus, such as a memory device <b>302</b> and a controller <b>304</b>, such as a memory controller (e.g., a host controller). Controller <b>304</b> might include a processor, for example. Controller <b>304</b> might be coupled to a host, for example, and may receive command signals (or commands), address signals (or addresses), and data signals (or data) from the host and may output data to the host.</p><p id="p-0042" num="0041">Memory device <b>302</b> includes a memory array <b>306</b> of memory cells. For example, memory array <b>306</b> may include one or more of the memory arrays, such as a cross-point array, of memory cells disclosed herein. For instance, memory array <b>306</b> can include a plurality of groups (e.g., partitions) of memory cells, and each respective group can include a plurality of sub-groups (e.g., tiles) of memory cells, as will be further described herein (e.g., in connection with <figref idref="DRAWINGS">FIG. <b>5</b></figref>). As an example, memory array <b>306</b> can include 16 groups with 256 sub-groups in each respective group, or 32 groups with 128 sub-groups in each respective group. Further, memory array <b>306</b> can include crossing signal (e.g., word and bit) lines, and each of the sub-groups can include decks of memory cells located at the crossings, as will be further described herein (e.g., in connection with <figref idref="DRAWINGS">FIGS. <b>4</b>A and <b>4</b>B</figref>).</p><p id="p-0043" num="0042">Memory device <b>302</b> may include address circuitry <b>308</b> to latch address signals provided over I/O connections <b>310</b> through I/O circuitry <b>312</b>. Address signals may be received and decoded by a row decoder <b>314</b> and a column decoder <b>316</b> to access the memory array <b>306</b>. For example, row decoder <b>314</b> and/or column decoder <b>316</b> may include drivers. Different memory cells of memory array <b>306</b> may have different electrical distances with respect to (e.g., be different electrical distances from) row decoder <b>314</b> and column decoder <b>316</b>, as will be further described herein (e.g., in connection with <figref idref="DRAWINGS">FIG. <b>6</b></figref>). Further, although a single row decoder and a single column decoder are shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, embodiments of the present disclosure are not so limited. For example, in embodiments in which memory array <b>306</b> includes 16 groups of memory cells, memory device <b>302</b> may include four row decoders and four column decoders. As an additional example, in embodiments in which memory array <b>306</b> includes 32 groups of memory cells, memory device <b>302</b> may include five row decoders and five column decoders.</p><p id="p-0044" num="0043">Memory device <b>302</b> may sense (e.g., read) data in memory array <b>306</b> by sensing voltage and/or current changes in the memory array columns using sense/buffer circuitry that in some examples may include read/latch circuitry <b>320</b> and/or sensing circuitry <b>305</b>. Read/latch circuitry <b>320</b> may read and latch data from the memory array <b>306</b>. Sensing circuitry <b>305</b> may include a number of sense amplifiers coupled to memory cells of memory array <b>306</b>, which may operate in combination with the read/latch circuitry <b>320</b> to sense (e.g., read) memory states from targeted memory cells. I/O circuitry <b>312</b> may be included for bi-directional data communication over the I/O connections <b>310</b> with controller <b>304</b>. Write circuitry <b>322</b> may be included to write data to memory array <b>306</b>.</p><p id="p-0045" num="0044">In some embodiments, controller <b>304</b> can concurrently (e.g., simultaneously) program (e.g., write) data to a single memory cell of each respective sub-group of one of the plurality of groups of memory cells, and can concurrently sense (e.g., read) data stored in a single memory cell of each respective sub-group of one of the plurality of groups of memory cells (e.g., a single memory cell in each respective tile of a partition can be simultaneously read or written). Further, controller <b>304</b> can perform program operations on each of the plurality of groups of memory cells in parallel, and can perform sense operations on each of the plurality of groups of memory cells in parallel (e.g., read and write operations can be performed in a staggered parallelism through the partitions).</p><p id="p-0046" num="0045">Control circuitry <b>324</b> may decode signals provided by control connections <b>326</b> from controller <b>304</b>. These signals may include chip signals, write enable signals, and address latch signals that are used to control the operations on memory array <b>306</b>, including data read and data write operations.</p><p id="p-0047" num="0046">Control circuitry <b>324</b> may be included in controller <b>304</b>, for example. Controller <b>304</b> may include other circuitry, firmware, software, or the like, whether alone or in combination. Controller <b>304</b> may be an external controller (e.g., in a separate die from the memory array <b>306</b>, whether wholly or in part) or an internal controller (e.g., included in a same die as the memory array <b>306</b>). For example, an internal controller might be a state machine or a memory sequencer.</p><p id="p-0048" num="0047">In some examples, controller <b>304</b> can program codewords for error correction operations to memory array <b>306</b>. For example, controller <b>304</b> can program different portions of the codeword to different portions of memory array <b>306</b>, at different distances from row decoder <b>314</b> and column decoder <b>316</b>, using an XOR-based address offset mechanism, and/or using an address offset mechanism operation performed on any of the bits (e.g. rather than the most significant bits) of the address to which the codeword is being programmed.</p><p id="p-0049" num="0048">For example, controller <b>304</b> can program a different portion of a codeword for an error correction operation to each respective one of the plurality of groups of memory cells of memory array <b>306</b> by determining an address (e.g., a physical address) in each respective one of the plurality of groups of memory cells, and programming a different portion of the codeword to each respective determined address. For instance, controller <b>306</b> can program a first portion of the codeword to a first one of the plurality of groups of memory cells by determining an address in that group and programming the first portion of the codeword to the determined address in that group, a second portion of the codeword to a second one of the plurality of groups of memory cells by determining an address in that group and programming the second portion of the codeword to the determined address in that group, etc.</p><p id="p-0050" num="0049">In an embodiment, the address in the group of memory cells can be determined by performing an XOR operation on an address (e.g., on the bits representing the row address and column address) of one of the plurality of sub-groups of that group of memory cells. The XOR operation can be performed on any portion (e.g., any subset) of the address of the sub-group. For example, any portion of the address can comprise a portion of the address that is not the most significant portion (e.g., that is not the most significant bits) of the address. That is, the XOR operation does not have to be performed on the most significant portion (e.g., the most significant bits) of the address.</p><p id="p-0051" num="0050">For example, the address of the sub-group can include a first number of bits corresponding to the row of the sub-group in memory array <b>306</b> and a second number of bits corresponding to the column of the sub-group in memory array <b>306</b>, and any portion of the address (e.g., the portion of the address on which the XOR operation is performed) can comprise a (e.g., one or more) bit of the first number of bits that is not a most significant bit of the first number of bits and a bit of the second number of bits that is not a most significant bit of the second number of bits. Further, any portion of the address can comprise less than all of the first number of bits and less than all of the second number of bits. As an example, the first number of bits and the second number of bits can each comprise twelve bits, and the portion of the address can comprise five of the first number of bits and five of the second number of bits, with at least one of the respective five bits not being a most significant bit of the respective twelve bits.</p><p id="p-0052" num="0051">Controller <b>306</b> can perform the XOR operation on the address of the sub-group (e.g., on the portion of the address) using a function of the group (e.g., partition) of memory cells in which the sub-group is included. The function can be, for instance, a shift rotate function.</p><p id="p-0053" num="0052">As an example, the address in the group of memory cells can be given by:</p><p id="p-0054" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x&#x2dc;[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>o</sub><i>]=x[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>0</sub><i>]XOR </i>&#x3b4;(<i>P</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0055" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y&#x2dc;[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>0</sub><i>]=y[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>0</sub><i>]XOR </i>&#x3b4;(<i>P</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0056" num="0000">where x[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the row of the sub-group on which the XOR operation is performed, y[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the column of the sub-group on which the XOR operation is performed, &#x3b4;(P) is the function of the of the group (e.g., partition P) of memory cells in which the sub-group is included used to perform the XOR operation, x&#x2dc;[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the determined row address in the group of memory cells, and y&#x2dc;[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the determined column address in the group of memory cells. The function &#x3b4;(P) can be given by:</p><p id="p-0057" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x3b4;(<i>P</i>)=<i>f</i>(<i>P</i>)+<i>f</i>(<i>R</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0058" num="0000">where f(P) is the shift rotate function and f(R) is a constant offset that may be dependent upon memory array <b>306</b>.</p><p id="p-0059" num="0053">In an additional embodiment, the address in the group of memory cells can be determined by performing an addition modulo operation on an address (e.g., on the bits representing the row address and column address) of one of the plurality of sub-groups of that group of memory cells. The addition modulo operation can be performed on any portion (e.g., any subset) of the address of the sub-group (e.g., a portion of the address that is not the most significant portion of the address), in a manner analogous to that previously described in connection with the XOR operation.</p><p id="p-0060" num="0054">Controller <b>306</b> can perform the addition modulo operation on the address of the sub-group (e.g., on the portion of the address) using a function of the group (e.g., partition) of memory cells in which the sub-group is included. The function can be, for instance, a shift rotate function.</p><p id="p-0061" num="0055">As an example, the address in the group of memory cells can be given by:</p><p id="p-0062" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x&#x2dc;[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>0</sub><i>]=x[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>0</sub>]+&#x3b4;(<i>P</i>) mod <i>N </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0063" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y&#x2dc;[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>0</sub><i>]=y[i</i><sub>4</sub><i>i</i><sub>3</sub><i>i</i><sub>2</sub><i>i</i><sub>1</sub><i>i</i><sub>0</sub>]+&#x3b4;(<i>P</i>) mod <i>N </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0064" num="0000">where x[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the row of the sub-group on which the addition modulo operation is performed, y[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the column of the sub-group on which the addition modulo operation is performed, &#x3b4;(P) is the function of the of the group (e.g., partition P) of memory cells in which the sub-group is included used to perform the addition modulo operation, N is the number (e.g., quantity) of groups (e.g., partitions) of memory cells included in memory array <b>306</b>, x&#x2dc;[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the determined row address in the group of memory cells, and y&#x2dc;[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] is the subset of the bits corresponding to the determined column address in the group of memory cells. The function &#x3b4;(P) can be analogous to the function &#x3b4;(P) previously described in connection with the XOR operation. Further, x[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] can be any subset of the bits of the address corresponding to the row (e.g., bits that are not the most significant bits of the address), and y[i<sub>4</sub>i<sub>3</sub>i<sub>2</sub>i<sub>1</sub>i<sub>0</sub>] can be any subset of the bits of the address corresponding to the column (e.g., bits that are not the most significant bits of the address), as previously described herein.</p><p id="p-0065" num="0056">Each respective determined address can have a different electrical distance with respect to (e.g., be a different electrical distance from) row decoder <b>314</b> and column decoder <b>316</b>. For instance, the determined address in the first group of memory cells can have a first electrical distance with respect to row decoder <b>314</b> and column decoder <b>316</b>, the determined address in the second group of memory cells can have a second electrical distance with respect to row decoder <b>314</b> and column decoder <b>316</b>, etc. An example of such an electrical distance will be further described herein (e.g., in connection with <figref idref="DRAWINGS">FIG. <b>6</b></figref>).</p><p id="p-0066" num="0057"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is an exploded three-dimensional view of an example of a sub-group <b>430</b> of a memory array, in accordance with an embodiment of the present disclosure. <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is an exploded three-dimensional view of an example of a sub-group <b>431</b> of a memory array, in accordance with an embodiment of the present disclosure. The memory arrays can be, for example, memory array <b>306</b> previously described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>, and sub-groups <b>430</b> and <b>431</b> can be tiles of their respective memory arrays, as previously described herein.</p><p id="p-0067" num="0058">As shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, sub-group <b>430</b> includes a plurality of first signal lines (e.g., first word lines) <b>410</b>, a plurality of second signal lines (e.g., second word lines) <b>410</b>, and a plurality of third signal lines (e.g. bit lines) <b>420</b>. As an example, sub-group <b>430</b> can include 4,096 first word lines <b>410</b>, 4,096 second word lines <b>410</b>, and 2,048 bit lines <b>420</b>.</p><p id="p-0068" num="0059">As shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, the plurality of bit lines <b>420</b> cross the plurality of first word lines <b>410</b> and the plurality of second word lines <b>410</b> (e.g., the plurality of bit lines <b>420</b> intersect with the plurality of first word lines <b>410</b> and the plurality of second word lines <b>410</b> in different planes). For example, each of the plurality of bit lines <b>420</b> may cross each of the plurality of first word lines <b>410</b> and each of the plurality of second word lines <b>410</b>.</p><p id="p-0069" num="0060">As shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, sub-group <b>430</b> includes a first deck <b>432</b>-<b>1</b> of memory cells and a second deck <b>432</b>-<b>2</b> of memory cells. The memory cells can be analogous to memory cells <b>125</b> previously described in connection with <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, the memory cells of deck <b>432</b>-<b>1</b> can be located between bit lines <b>420</b> and first word lines <b>410</b> (e.g., at each respective crossing of bit lines <b>420</b> and first word lines <b>410</b>), and the memory cells of deck <b>432</b>-<b>2</b> can be located between bit lines <b>420</b> and second word lines <b>410</b> (e.g., at each respective crossing of bit lines <b>420</b> and second word lines <b>410</b>).</p><p id="p-0070" num="0061">As shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, sub-group <b>431</b> includes a plurality of first signal lines (e.g., first word lines) <b>410</b>, a plurality of second signal lines (e.g., second word lines) <b>410</b>, and a plurality of third signal lines (e.g. first bit lines) <b>420</b>. Sub-group <b>431</b> further includes a plurality of fourth signal lines (e.g., third word lines) <b>410</b>, and a plurality of fifth signal lines (e.g., second bit lines) <b>420</b>. As an example, sub-group <b>431</b> can include 4,096 first word lines <b>410</b>, 4,096 second word lines <b>410</b>, 4,096 third word lines <b>410</b>, 4,096 first bit lines <b>420</b>, and 4,096 second bit lines <b>420</b>.</p><p id="p-0071" num="0062">As shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the plurality of first bit lines <b>420</b> cross the plurality of first word lines <b>410</b> and the plurality of second word lines <b>410</b> (e.g., the plurality of first bit lines <b>420</b> intersect with the plurality of first word lines <b>410</b> and the plurality of second word lines <b>410</b> in different planes). For example, each of the plurality of first bit lines <b>420</b> may cross each of the plurality of first word lines <b>410</b> and each of the plurality of second word lines <b>410</b>. Further, the plurality of second bit lines <b>420</b> cross the plurality of second word lines <b>410</b> and the plurality of third word lines <b>410</b> (e.g., the plurality of second bit lines <b>420</b> intersect with the plurality of second word lines <b>410</b> and the plurality of third word lines <b>410</b> in different planes). For example, each of the plurality of second bit lines <b>420</b> may cross each of the plurality of second word lines <b>410</b> and each of the plurality of third word lines <b>410</b>.</p><p id="p-0072" num="0063">As shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, sub-group <b>431</b> includes a first deck <b>432</b>-<b>1</b> of memory cells, a second deck <b>432</b>-<b>2</b> of memory cells, a third deck <b>432</b>-<b>3</b> of memory cells, and a fourth deck <b>432</b>-<b>4</b> of memory cells. The memory cells can be analogous to memory cells <b>125</b> previously described in connection with <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, the memory cells of deck <b>432</b>-<b>1</b> can be located between first bit lines <b>420</b> and first word lines <b>410</b> (e.g., at each respective crossing of first bit lines <b>420</b> and first word lines <b>410</b>), and the memory cells of deck <b>432</b>-<b>2</b> can be located between first bit lines <b>420</b> and second word lines <b>410</b> (e.g., at each respective crossing of first bit lines <b>420</b> and second word lines <b>410</b>). Further, the memory cells of deck <b>432</b>-<b>3</b> can be located between second bit lines <b>420</b> and second word lines <b>410</b> (e.g., at each respective crossing of second bit lines <b>420</b> and second word lines <b>410</b>), and the memory cells of deck <b>432</b>-<b>4</b> can be located between second bit lines <b>420</b> and third word lines <b>410</b> (e.g., at each respective crossing of second bit lines <b>420</b> and third word lines <b>410</b>).</p><p id="p-0073" num="0064"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an illustration of an example organization of a memory array <b>540</b>, in accordance with an embodiment of the present disclosure. Memory array <b>540</b> can be, for example, memory array <b>306</b> previously described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0074" num="0065">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, memory array <b>540</b> includes a plurality of groups (e.g., partitions) <b>542</b>-<b>1</b>, . . . , <b>542</b>-<b>4</b>, <b>542</b>-<b>5</b>, . . . , <b>542</b>-<b>32</b> of memory cells, which may be collectively referred to herein as groups <b>542</b>. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, memory array <b>540</b> includes (e.g., in partitioned into) 32 groups of memory cells, arranged in eight rows and four columns.</p><p id="p-0075" num="0066">A separate, enlarged view of four adjacent groups (e.g., groups <b>542</b>-<b>1</b>, <b>542</b>-<b>2</b>, <b>542</b>-<b>5</b>, and <b>542</b>-<b>6</b>) of the array <b>540</b> is also illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Four such adjacent groups of the array <b>540</b> can be referred to as a quad partition. For simplicity, only one such quad partition is illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, but array <b>540</b> can include additional quad partitions in an analogous manner.</p><p id="p-0076" num="0067">The position <b>544</b> of the word lines and/or bit lines in each of the four groups <b>542</b>-<b>1</b>, <b>542</b>-<b>2</b>, <b>542</b>-<b>5</b>, and <b>542</b>-<b>6</b> of the quad partition is also shown in this enlarged view. For instance, the enlarged view illustrates the position <b>544</b>-<b>1</b> of the word lines and/or bit lines in group <b>542</b>-<b>1</b>, the position <b>544</b>-<b>2</b> of the word lines and/or bit lines in group <b>542</b>-<b>2</b>, the position <b>544</b>-<b>5</b> of the word lines and/or bit lines in group <b>542</b>-<b>5</b>, and the position <b>544</b>-<b>6</b> of the word lines and/or bit lines in group <b>542</b>-<b>6</b>. The word lines and/or bit lines can be positioned in opposite corners of each respective group of the four adjacent groups <b>542</b>-<b>1</b>, <b>542</b>-<b>2</b>, <b>542</b>-<b>5</b>, and <b>542</b>-<b>6</b>, as illustrated in the enlarged view.</p><p id="p-0077" num="0068">Each respective one of the plurality of groups <b>542</b> of memory cells can include a plurality of sub-groups (e.g., tiles) of memory cells. For simplicity, the sub-groups of only one of the groups <b>542</b> of memory cells (e.g., group <b>542</b>-<b>1</b>) is illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, but each of the plurality of groups <b>542</b> can include sub-groups in an analogous manner.</p><p id="p-0078" num="0069">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, group <b>542</b>-<b>1</b> includes a plurality of sub-groups (e.g., tiles) <b>546</b>-<b>1</b>, . . . , <b>546</b>-<b>8</b>, <b>546</b>-<b>9</b>, . . . , <b>546</b>-<b>128</b> of memory cells, which may be collectively referred to herein as sub-groups <b>546</b>. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, group <b>542</b>-<b>1</b> includes (e.g., in partitioned into) 128 sub-groups of memory cells, arranged in eight rows and sixteen columns.</p><p id="p-0079" num="0070"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an illustration of an example electrical distance for a memory cell <b>625</b> of a memory array <b>650</b>, in accordance with an embodiment of the present disclosure. Memory cell <b>625</b> and memory array <b>650</b> can be analogous to the memory cells and memory arrays previously described herein.</p><p id="p-0080" num="0071">As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, memory cell <b>625</b> can be coupled to signal lines <b>610</b> and <b>620</b> (e.g., word line <b>610</b> and bit line <b>620</b>), in a manner analogous to that previously described herein. Further, word line <b>610</b> can be coupled to row decoder <b>652</b>, and bit line <b>620</b> can be coupled to column decoder <b>654</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. Row decoder <b>652</b> and column decoder <b>654</b> can be analogous to row decoder <b>314</b> and column decoder <b>316</b>, respectively, previously described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>. For instance, row decoder <b>652</b> and column decoder <b>654</b> can receive and decode address signals to access memory cell <b>625</b>, as previously described herein.</p><p id="p-0081" num="0072">As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, memory cell <b>625</b> is located a distance &#x3b1; from row decoder <b>652</b>, and a distance &#x3b2; from column decoder <b>654</b>. For instance, word line <b>610</b> has a length &#x3b1; between row decoder <b>652</b> and memory cell <b>625</b>, and bit line <b>620</b> has a length &#x3b2; between column decoder <b>654</b> and memory cell <b>625</b>.</p><p id="p-0082" num="0073">The electrical distance of memory cell <b>625</b> with respect to (e.g., from) row decoder <b>652</b> and column decoder <b>654</b> is a function of distances &#x3b1; and &#x3b2; illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. The electrical distance of memory cell <b>625</b> can also be dependent on the structure and/or deck of the sub-group of memory cells in which memory cell <b>625</b> is located. For example, if memory cell <b>625</b> is included in a sub-group having the structure previously described in connection with <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, the electrical distance (ED) can be given by:</p><p id="p-0083" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>ED=&#x3b1;+&#x3b2;</i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0084" num="0000">regardless of whether memory cell <b>625</b> is included in deck <b>432</b>-<b>1</b> or deck <b>432</b>-<b>2</b>. As an additional example, if memory cell <b>625</b> is included in a sub-group having the structure previously described in connection with <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the electrical distance (ED) can be given by:</p><p id="p-0085" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>ED=</i>2&#x3b1;+&#x3b2;<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0086" num="0000">if memory cell <b>625</b> is included in deck <b>432</b>-<b>1</b> or deck <b>432</b>-<b>4</b>, and by:</p><p id="p-0087" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>ED=&#x3b1;+&#x3b2;</i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0088" num="0000">if memory cell <b>625</b> is included in deck <b>432</b>-<b>2</b> or deck <b>432</b>-<b>3</b>.</p><p id="p-0089" num="0074">Although specific embodiments have been illustrated and described herein, those of ordinary skill in the art will appreciate that an arrangement calculated to achieve the same results can be substituted for the specific embodiments shown. This disclosure is intended to cover adaptations or variations of a number of embodiments of the present disclosure. It is to be understood that the above description has been made in an illustrative fashion, and not a restrictive one. Combination of the above embodiments, and other embodiments not specifically described herein will be apparent to those of ordinary skill in the art upon reviewing the above description. The scope of a number of embodiments of the present disclosure includes other applications in which the above structures and methods are used. Therefore, the scope of a number of embodiments of the present disclosure should be determined with reference to the appended claims, along with the full range of equivalents to which such claims are entitled.</p><p id="p-0090" num="0075">In the foregoing Detailed Description, some features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the disclosed embodiments of the present disclosure have to use more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus, the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separate embodiment.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus, comprising:<claim-text>a memory having a plurality of groups of memory cells, wherein each respective one of the plurality of groups includes a plurality of sub-groups of memory cells; and</claim-text><claim-text>circuitry configured to program a portion of a codeword for an error correction operation to one of the plurality of groups of memory cells by:<claim-text>determining an address in that group of memory cells by performing an XOR operation on an address of one of the plurality of sub-groups of that group of memory cells; and</claim-text><claim-text>programming the portion of the codeword to the determined address.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein performing the XOR operation on the address of the one of the plurality of sub-groups comprises performing the XOR operation on a portion of the address of the one of the plurality of sub-groups.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the circuitry is configured to perform the XOR operation on the address of the one of the plurality of sub-groups using a function of that group of memory cells.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the function is a shift rotate function.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each of the of memory cells of the plurality of groups is a self-selecting memory cell in which a single material serves as a select element and a storage element.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the single material is a chalcogenide material.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A method of operating memory, comprising:<claim-text>programming a portion of a codeword for an error correction operation to one of a plurality of groups of memory cells of the memory by:<claim-text>determining an address in that group of memory cells by performing an addition modulo operation on any portion of an address of one of a plurality of sub-groups of memory cells of that group of memory cells; and</claim-text><claim-text>programming the portion of the codeword to the determined address.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein any portion of the address of the one of the plurality of sub-groups comprises a portion of the address of the one of the plurality of sub-groups that is not a most significant portion of the address of the one of the plurality of sub-groups.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the method includes programming an additional portion of the codeword for the error correction operation to an additional one of the plurality of groups of memory cells of the memory by:<claim-text>determining an address in that additional group of memory cells by performing an addition modulo operation on any portion of an address of one of a plurality of sub-groups of memory cells of that additional group of memory cells; and</claim-text><claim-text>programming the additional portion of the codeword to the determined address in that additional group.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:<claim-text>the determined address in that group of memory cells has a first electrical distance with respect to a row decoder and a column decoder associated with the determined address in that group; and</claim-text><claim-text>the determined address in that additional group of memory cells has a second electrical distance with respect to a row decoder and a column decoder associated with the determined address in that additional group;</claim-text><claim-text>wherein the second electrical distance is different than the first electrical distance.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the method includes performing the addition modulo operation using a function of that group of memory cells.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein:<claim-text>the plurality of groups of memory cells are partitions of memory cells; and</claim-text><claim-text>the plurality of sub-groups of memory cells are tiles of memory cells.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A method of operating memory, comprising:<claim-text>programming a portion of a codeword for an error correction operation to one of a plurality of groups of memory cells of the memory by:<claim-text>determining an address in that group of memory cells by performing an XOR operation on any portion of an address of one of a plurality of sub-groups of memory cells of that group of memory cells; and</claim-text><claim-text>programming the portion of the codeword to the determined address.</claim-text></claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the address of the one of the plurality of sub-groups includes:<claim-text>a first number of bits corresponding to a row of the sub-group; and</claim-text><claim-text>a second number of bits corresponding to a column of the sub-group.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein any portion of the address of the one of the plurality of sub-groups comprises:<claim-text>a bit of the first number of bits that is not a most significant bit of the first number of bits; and</claim-text><claim-text>a bit of the second number of bits that is not a most significant bit of the second number of bits.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein any portion of the address of the one of the plurality of sub-groups comprises:<claim-text>less than all of the first number of bits; and</claim-text><claim-text>less than all of the second number of bits.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein any portion of the address of the one of the plurality of sub-groups comprises:<claim-text>five of the first number of bits; and</claim-text><claim-text>five of the second number of bits.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. An apparatus, comprising:<claim-text>a memory having a plurality of groups of memory cells, wherein each respective one of the plurality of groups includes a plurality of sub-groups of memory cells; and</claim-text><claim-text>circuitry configured to program a different portion of a codeword for an error correction operation to each respective one of the plurality of groups of memory cells by:<claim-text>determining an address in each respective one of the plurality of groups of memory cells by performing an XOR operation on an address of a sub-group of that respective group of memory cells; and</claim-text><claim-text>programming a different portion of the codeword to each respective determined address.</claim-text></claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein:<claim-text>the memory includes:<claim-text>a plurality of first signal lines;</claim-text><claim-text>a plurality of second signal lines; and</claim-text><claim-text>a plurality of third signal lines that cross the plurality of first signal lines and the plurality of second signal lines; and</claim-text></claim-text><claim-text>each of the plurality of sub-groups includes a first deck of memory cells and a second deck of memory cells, wherein:<claim-text>the memory cells of the first deck are located at each respective crossing of the plurality of third signal lines and the plurality of first signal lines; and</claim-text><claim-text>the memory cells of the second deck are located at each respective crossing of the plurality of third signal lines and the plurality of second signal lines.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The apparatus of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein:<claim-text>the memory includes:<claim-text>a plurality of fourth signal lines; and</claim-text><claim-text>a plurality of fifth signal lines that cross the plurality of second signal lines and the plurality of fourth signal lines; and</claim-text></claim-text><claim-text>each of the plurality of sub-groups includes a third deck of memory cells and a fourth deck of memory cells, wherein:<claim-text>the memory cells of the third deck are located at each respective crossing of the plurality of fifth signal lines and the plurality of second signal lines; and</claim-text><claim-text>the memory cells of the fourth deck are located at each respective crossing of the plurality of fifth signal lines and the plurality of fourth signal lines.</claim-text></claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the circuitry is configured to:<claim-text>concurrently program data to a single memory cell of each respective one of the plurality of sub-groups of one of the plurality of groups; and</claim-text><claim-text>concurrently sense data stored in a single memory cell of each respective one of the plurality of sub-groups of one of the plurality of groups.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the circuitry is configured to:<claim-text>perform program operations on each of the plurality of groups of memory cells in parallel; and</claim-text><claim-text>perform sense operations on each of the plurality of groups of memory cells in parallel.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein each respective determined address has a different electrical distance with respect to a row decoder and a column decoder associated with that address.</claim-text></claim></claims></us-patent-application>