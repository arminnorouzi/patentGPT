<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005237A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005237</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17778926</doc-number><date>20191206</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>V</subclass><main-group>10</main-group><subgroup>26</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>V</subclass><main-group>10</main-group><subgroup>82</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20220101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>V</subclass><main-group>10</main-group><subgroup>267</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20220101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>V</subclass><main-group>10</main-group><subgroup>82</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>V</subclass><main-group>2201</main-group><subgroup>07</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">PARAMETER DETERMINATION APPARATUS, PARAMETER DETERMINATION METHOD, AND NON-TRANSITORY COMPUTER READABLE MEDIUM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NEC Cporportation</orgname><address><city>Minato-ku,Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KAMIMURA</last-name><first-name>Junichi</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>NEC Cporportation</orgname><role>03</role><address><city>Minato-ku,Tokyo</city><country>JP</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/JP2019/047862</doc-number><date>20191206</date></document-id><us-371c12-date><date>20220523</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A detection object analysis unit (<b>4</b>) is a parameter determination apparatus that determines parameters of a plurality of anchor boxes to be used in a sliding window method when a bounding box and a class of an object in an image are detected using a neural network and the sliding window method. The detection object analysis unit (<b>4</b>) includes a distribution generation unit (<b>11</b>) that generates distribution information of parameters of bounding boxes indicated by object specifying information of a plurality of pieces of learning data. The detection object analysis unit (<b>4</b>) includes a clustering processing unit (<b>12</b>) that generates a plurality of clusters by clustering the distribution information. The detection object analysis unit (<b>4</b>) includes a parameter determination unit (<b>13</b>) that determines the parameters of the plurality of anchor boxes based on the plurality of clusters.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="142.41mm" wi="140.29mm" file="US20230005237A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="77.30mm" wi="96.27mm" file="US20230005237A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="211.75mm" wi="130.98mm" orientation="landscape" file="US20230005237A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="164.00mm" wi="142.32mm" file="US20230005237A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="159.34mm" wi="75.52mm" file="US20230005237A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="137.84mm" wi="153.92mm" file="US20230005237A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="129.46mm" wi="158.24mm" file="US20230005237A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="143.34mm" wi="147.91mm" file="US20230005237A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="115.23mm" wi="114.98mm" file="US20230005237A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates to a parameter determination apparatus, a parameter determination method, and a non-transitory computer readable medium.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">In recent years, a number of techniques for detecting objects by artificial intelligence using deep learning have been proposed.</p><p id="p-0004" num="0003">Object detection means estimate what an object in an image is and concurrently estimate the position and the size of the object by surrounding the object with a rectangle called a bounding box.</p><p id="p-0005" num="0004">In deep learning used in artificial intelligence, a learning method called supervised learning has been mainly performed. Supervised learning is a mechanism in which a machine analyzes data to which a human has imparted a ground truth and learns this data so that the machine will be able to derive the ground truth. When object detection is performed, artificial intelligence performs learning using learning data indicating where in an image an object is present and what this object is. That is, a neural network used in object detection outputs a bounding box and a class of an object in an input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each of which includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object. The learning data set may include from thousands to tens of thousands of pieces of learning data.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates images included in one piece of learning data.</p><p id="p-0007" num="0006">The object specifying information is information indicating the bounding box and the class of the object. The information indicating the bounding box may generally include coordinate data (x, y) of the upper left point of the bounding box and the size data (the height and the width) of the bounding box. Therefore, the information included in the learning data shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> may include the images themselves shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> and five object specifying information items. The five object specifying information items may be expressed by, for example, (dog, x1, y1, h1, h1), (dog, x2, y2, h2, w2), (giraffe, x3, y3, h3, w3), (bike, x4, y4, h4, w4), and (tower, x5, y5, h5, w5). Note that the coordinate data may not be the coordinate data of the upper left point of the bounding box, and may instead be, for example, coordinate data of the lower right point of the bounding box or coordinate data of the centroid of the bounding box.</p><p id="p-0008" num="0007">In the field of object detection, when artificial intelligence learns given data, a sliding window method has often been employed.</p><p id="p-0009" num="0008">The sliding window method is a method of searching for an object candidate area by shifting a plurality of anchor boxes having different scales and aspect ratios by a certain number of pixels. The anchor boxes are moved across the image to search for objects, and image features of a part with a large overlap area with a ground truth rectangle are used for learning. The anchor boxes have various sizes and aspect ratios, and a countless number of anchor boxes are scattered throughout the image. In the neural network, when the position of an object is estimated, the position of the bounding box of the object and the category of the object are estimated by obtaining image features regarding an area near each anchor box. When the position of the bounding box of the object and the category of the object are learned, the deviations between the position of the bounding box and the category of the object that have been estimated and the position of the bounding box and the category of the object of the ground truth of training data with the largest area overlapping with its anchor box are calculated, and the neural network is repeatedly adjusted in such a way that the deviations become small. The category of the object means the same as the class of the object.</p><p id="p-0010" num="0009">Reference URL:</p><p id="p-0011" num="0000">https://www.datasciencecentral.com/profiles/blogs/autonomous-driving-car-detect ion-with-yolo-model-with-keras-in</p><p id="p-0012" num="0010">The technique disclosed in Non-Patent Literature 1 enables object detection by deep learning by using an identifier that separately performs estimation of the position of the object rectangle and estimation of the category. The technique disclosed in Non-Patent Literature 1 includes an identifier that outputs the positions of object rectangles from inside the image and an identifier that outputs the categories of the object area candidates.</p><p id="p-0013" num="0011">The technique disclosed in Non-Patent Literature 2, which focuses on using features having a plurality of scales, enables object detection in which estimation of object candidate areas and estimation of the categories are performed, which are separately performed in Non-Patent Literature 1, to be concurrently performed.</p><heading id="h-0003" level="1">CITATION LIST</heading><heading id="h-0004" level="1">Non Patent Literature</heading><p id="p-0014" num="0000"><ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0012">[Non Patent Literature 1] Ren, Shaoqing, et al. &#x201c;Faster r-cnn: Towards real-time object detection with region proposal networks.&#x201d; Advances in neural information processing systems. 2015.</li>    <li id="ul0001-0002" num="0013">[Non Patent Literature 2] Redmon, Joseph, et al. &#x201c;You only look once: Unified, real-time object detection.&#x201d; Proceedings of the IEEE conference on computer vision and pattern recognition. 2016.</li></ul></p><heading id="h-0005" level="1">SUMMARY OF INVENTION</heading><heading id="h-0006" level="1">Technical Problem</heading><p id="p-0015" num="0014">In the aforementioned object detection systems disclosed in Non-Patent Literature 1 and 2, the scales, the aspect ratios, and the number of anchor boxes are hyperparameters, which need to be set manually. Therefore, a number of anchor boxes are set so that they correspond to objects having various shapes. However, the scales and the aspect ratios of the bounding boxes that specify the areas of objects are often limited, and depending on target objects to be detected, there are many anchor boxes that are not actually used for learning.</p><p id="p-0016" num="0015">An object of the present invention is to reduce the load of object detection processing.</p><heading id="h-0007" level="1">Solution to Problem</heading><p id="p-0017" num="0016">According to a first aspect of the present invention, a parameter determination apparatus for determining parameters of a plurality of anchor boxes to be used in a sliding window method when a bounding box and a class of an object in an image are detected using a neural network and the sliding window method, in which the neural network outputs a bounding box and a class of an object in an input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each of which includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object, the parameter determination apparatus including: a distribution generation unit configured to generate distribution information of parameters of bounding boxes indicated by the object specifying information of the plurality of pieces of learning data; a clustering unit configured to generate a plurality of clusters by clustering the distribution information; and a parameter determination unit configured to determine the parameters of the plurality of anchor boxes based on the plurality of clusters is provided.</p><p id="p-0018" num="0017">According to a second aspect of the present invention, a parameter determination method for determining parameters of a plurality of anchor boxes to be used in a sliding window method when a bounding box and a class of an object in an image are detected using a neural network and the sliding window method, in which the neural network outputs a bounding box and a class of an object in an input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each of which includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object, the parameter determination method including: generating distribution information of parameters of bounding boxes indicated by the object specifying information of the plurality of pieces of learning data; generating a plurality of clusters by clustering the distribution information; and determining the parameters of the plurality of anchor boxes based on the plurality of clusters is provided.</p><heading id="h-0008" level="1">Advantageous Effects of Invention</heading><p id="p-0019" num="0018">According to the present invention, the load of object detection processing may be reduced.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0009" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a functional block diagram of a parameter determination apparatus (first embodiment);</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a functional block diagram of an object detection system (second embodiment);</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart showing processing of the object detection system at the time of learning (second embodiment);</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart showing processing of the object detection system at the time of prediction (second embodiment);</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is an explanatory diagram of clustering (second embodiment);</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is a an explanatory diagram of clustering (second embodiment);</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an explanatory diagram of a loss function (second embodiment); and</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating image data for learning (second embodiment).</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0010" level="1">DESCRIPTION OF EMBODIMENTS</heading><heading id="h-0011" level="1">First Embodiment</heading><p id="p-0028" num="0027">Hereinafter, with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a first embodiment will be described. <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a parameter determination apparatus <b>80</b> that determines parameters of a plurality of anchor boxes used in a sliding window method for object detection. The parameter determination apparatus <b>80</b> determines parameters of a plurality of anchor boxes used in the sliding window method when a bounding box and a class of an object in an image are detected using a neural network and the sliding window method.</p><p id="p-0029" num="0028">The neural network outputs the bounding box and the class of an object in an input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each of which includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object. That is, the learned model is a model learned using the learning data set. The learning data set includes a plurality of pieces of learning data. The learning data includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object.</p><p id="p-0030" num="0029">The parameter determination apparatus <b>80</b> includes a distribution generation unit <b>100</b> that generates distribution information of parameters of bounding boxes indicated by object specifying information of a plurality of pieces of learning data.</p><p id="p-0031" num="0030">The parameter determination apparatus <b>80</b> includes a clustering processing unit <b>101</b>, which is a clustering unit configured to cluster the distribution information and generate a plurality of clusters.</p><p id="p-0032" num="0031">The parameter determination apparatus <b>80</b> includes an anchor box parameter determination unit <b>102</b>, which is a parameter determination unit configured to determine parameters of a plurality of anchor boxes based on the plurality of clusters.</p><p id="p-0033" num="0032">According to the aforementioned configuration, it is possible to reduce the load of processing of detecting the bounding box and the class of an object in an image. That is, the load of object detection processing may be reduced.</p><heading id="h-0012" level="1">Second Embodiment</heading><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a functional block diagram of the object detection system <b>1</b>. The object detection system <b>1</b> includes a Central Processing Unit (CPU), a readable/writable Random Access Memory (RAM), and a Read Only Memory (ROM). The CPU loads a control program stored in the ROM and executes the loaded control program, whereby the control program causes hardware such as the CPU to function as various functional units. The various functional units include a CNN learner <b>2</b>, a CNN predictor <b>3</b>, a detection object analysis unit <b>4</b>, which is a parameter determination apparatus, a learning image storing unit <b>5</b>, a detection image storing unit <b>6</b>, and a learned model storing unit <b>7</b>.</p><p id="p-0035" num="0034">The learning image storing unit <b>5</b> stores a learning data set to be used for learning by the CNN learner <b>2</b>.</p><p id="p-0036" num="0035">That is, the neural network used in object detection outputs the bounding box and the class of an object in the input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each including an image that shows at least one object and object specifying information indicating the bounding box and the class of the object. That is, the learned model is a model learned using the learning data set. The learning data set includes a plurality of pieces of learning data. The learning data includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object. The learning data set may include thousands to tens of thousands of pieces of learning data.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates images included in one piece of learning data.</p><p id="p-0038" num="0037">The object specifying information is information indicating the bounding box and the class of the object. The information indicating the bounding box may generally include coordinate data (x, y) of the upper left point of the bounding box and the size data (the height and the width) of the bounding box. Therefore, the information included in the learning data shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> may include the images themselves shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> and five object specifying information items. The five object specifying information items may be expressed by, for example, (dog, x1, y1, h1, h1), (dog, x2, y2, h2, w2), (giraffe, x3, y3, h3, w3), (bike, x4, y4, h4, w4), and (tower, x5, y5, h5, w5). Note that the coordinate data may not be the coordinate data of the upper left point of the bounding box, and may instead be, for example, coordinate data of the lower right point of the bounding box or coordinate data of the centroid of the bounding box.</p><p id="p-0039" num="0038">The bounding boxes that surround the respective objects in <figref idref="DRAWINGS">FIG. <b>7</b></figref> are drawn only for convenience of the explanation and are not actually present on the images for learning.</p><p id="p-0040" num="0039">The detection image storing unit <b>6</b> stores images used for object detection by the CNN predictor <b>3</b>. The images for object detection, which are similar to those shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, are images each including at least one object.</p><p id="p-0041" num="0040">The CNN learner <b>2</b> acquires the learning data set stored in the learning image storing unit <b>5</b>, and performs learning so as to receive images included in each piece of learning data and output the corresponding object specifying information, thereby generating a learned model, which is a prediction model for object detection. The CNN learner <b>2</b> stores the learned model that has been generated in the learned model storing unit <b>7</b>.</p><p id="p-0042" num="0041">The CNN predictor <b>3</b> outputs the bounding box and the class of the object to be detected from the detection image using the learned model stored in the learned model storing unit <b>7</b>. Specifically, the CNN predictor <b>3</b> outputs the reliability of the bounding box and the class of the object to be detected from the detection image using the learned model.</p><p id="p-0043" num="0042">The detection object analysis unit <b>4</b> determines parameters of a plurality of anchor boxes used in the sliding window method when the bounding box and the class of the object in the image are detected using the neural network and the sliding window method. The detection object analysis unit <b>4</b> is shared by the CNN learner <b>2</b> and the CNN predictor <b>3</b>. The detection object analysis unit <b>4</b> includes a distribution generation unit <b>11</b>, a clustering processing unit <b>12</b>, which is a clustering unit, and an anchor box parameter determination unit <b>13</b>, which is a parameter determination unit. The detection object analysis unit <b>4</b> is connected to the CNN learner <b>2</b> and the CNN predictor <b>3</b>. The detection object analysis unit <b>4</b> determines parameters of anchor boxes used in the CNN learner <b>2</b> and the CNN predictor <b>3</b>. The parameters of an anchor box are generally the size (the height and the width) of the anchor box. Alternatively, the parameters of the anchor box may be one or both of the scale and the aspect ratio of the anchor box. The detection object analysis unit <b>4</b> determines the parameters of the anchor boxes used for the learning by the CNN learner <b>2</b> and the prediction by the CNN predictor <b>3</b> based on the learning data set.</p><p id="p-0044" num="0043">The distribution generation unit <b>11</b> loads the learning data set stored in the learning image storing unit <b>5</b> to generate distribution information of parameters of bounding boxes indicated by object specifying information of a plurality of pieces of learning data. Specifically, the distribution generation unit <b>11</b> generates distribution information indicating the distribution of scales and aspect ratios of the respective bounding boxes. The distribution generation unit <b>11</b> may generate distribution information indicating the distribution of the width dimensions and the height dimensions of the respective bounding boxes. In this case, the distribution generation unit <b>11</b> may generate distribution information indicating the distribution of the width dimensions and the height dimensions of the respective bounding boxes by plotting each of the bounding boxes in a two-dimensional space in which, for example, the vertical axis indicates the height and the horizontal axis indicates the width based on the height dimension and the width dimension of this bounding box.</p><p id="p-0045" num="0044">The clustering processing unit <b>12</b> generates a plurality of clusters by clustering the distribution information of the parameters of the bounding boxes indicated by the object specifying information of the plurality of pieces of learning data. Specifically, the clustering processing unit <b>12</b> clusters plots indicating the parameters of the plurality of bounding boxes plotted in the two-dimensional space into several sets.</p><p id="p-0046" num="0045">Since the number of anchor boxes disclosed in Non-Patent Literature 1 is 9, the number of sets generated by clustering is preferably, but not limited to, nine in order to reduce the load of the processing. Further, the clustering processing unit <b>12</b> performs clustering by applying a weight in such a way that within-cluster variance increases in proportion to the scale of the bounding box. The clustering method may generally be a K-means method. In the K-means method, first, clusters are randomly assigned to the plots and the centroid of each cluster is obtained. Next, the clusters assigned to the plots are each changed to a cluster having the centroid to a cluster whose centroid is the closest to each plot. The calculation of the centroid and the change in the clusters are repeated until when there is no longer any change in the clusters. At this time, distance calculation in view of the scale of the bounding box is performed, whereby clustering with different within-cluster variance is achieved.</p><p id="p-0047" num="0046">The anchor box parameter determination unit <b>13</b> determines parameters of the anchor boxes from the results of clustering performed by the clustering processing unit <b>12</b>. The parameters may either be the scale and the aspect ratio or the width dimension and the height dimension. Each cluster on the space indicates a range in which a single anchor box that corresponds to this cluster is applied. That is, by determining the parameters of the anchor boxes based on the centroids of the respective clusters, all the anchor boxes are able to cover the learning data set with a good balance. Further, since the base of the distribution information indicates the width and the height, it is possible to determine, from the coordinates of the centroid of each of the clusters, the scale and the aspect ratio of the anchor box that corresponds to this cluster.</p><p id="p-0048" num="0047">After the parameters of the anchor boxes are determined, these anchor boxes, which are used as sliding windows, are slid in the image (actually they are evenly scattered in the image), and thus the bounding box and the class of the object may be estimated using the image features of only the area included in each anchor box.</p><p id="p-0049" num="0048">Referring next to <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref>, operations of the object detection system <b>1</b> will be described. <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart of an operation of the object detection system <b>1</b> at the time of learning. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart of the operation of the object detection system <b>1</b> at the time of object detection (at the time of prediction).</p><p id="p-0050" num="0049">As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the CNN learner <b>2</b> receives the learning data set for learning from the learning image storing unit <b>5</b> and extracts the features for the object detection (Step S<b>201</b>). The detection object analysis unit <b>4</b> receives the learning data set for learning from the learning image storing unit <b>5</b> and determines the scales and the aspect ratios of the anchor boxes (Step S<b>202</b>). The CNN learner <b>2</b> searches for an object in the image using the anchor boxes determined by the detection object analysis unit <b>4</b> as sliding windows, and calculates the reliability for each bounding box and for each class of the object from the features that correspond to the object (S<b>203</b>). The deviations between the ground truth bounding box that the operator has given and the predicted bounding box are calculated based on the ground truth bounding box and reliability for each class that the operator has given (Step S<b>204</b>). The CNN learner <b>2</b> optimizes the prediction model in such a way that the deviations become small (S<b>205</b>). It is determined whether the optimization of the prediction model has been performed a predetermined number of times (Step S<b>206</b>). When it is determined that the optimization of the prediction model has been performed the predetermined number of times (S<b>206</b>: YES), the CNN learner <b>2</b> stores the prediction model in the learned model storing unit <b>7</b> as a learned model, and ends the processing. When it is determined that the optimization of the prediction model has not yet been performed the predetermined number of times (S<b>206</b>: NO), the CNN learner <b>2</b> returns the processing to S<b>201</b>.</p><p id="p-0051" num="0050">The CNN predictor <b>3</b> receives an image from the detection image storing unit <b>6</b> and the learned model from the learned model storing unit <b>7</b>. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the CNN predictor <b>3</b> calculates the features of the image for object detection (Step S<b>101</b>). The detection object analysis unit <b>4</b> receives the learning data set for learning from the learning image storing unit <b>5</b> and determines the scales and the aspect ratios of the anchor boxes (Step S<b>102</b>). Since the scales and the aspect ratios of the anchor boxes have already been determined in Step S<b>202</b>, Step S<b>102</b> can be omitted. The CNN predictor <b>3</b> searches for an object in the image using the parameters of the anchor boxes that have been determined, calculates the reliability for each bounding box and for each class of the object from the features of the part corresponding to the object, and outputs the calculated results (S<b>103</b>).</p><p id="p-0052" num="0051">Next, effects of this example embodiment will be described.</p><p id="p-0053" num="0052">In this example embodiment, the detection object analysis unit <b>4</b> is configured to automatically determine parameters of the anchor boxes in accordance with the learning data set, which enables the anchor boxes being used for object detection to be limited to the anchor boxes that fit the object to be detected, whereby it is possible to reduce the load of the processing of the identifiers, that is, the CNN learner <b>2</b> and the CNN predictor <b>3</b> while maintaining the accuracy of detecting the object.</p><p id="p-0054" num="0053">Further, in this example embodiment, the clustering processing unit <b>12</b> is configured to perform clustering by weighting the within-cluster variance, whereby it is possible to stabilize learning. <figref idref="DRAWINGS">FIGS. <b>5</b>A and <b>5</b>B</figref> each show one example of the processing of the clustering processing unit <b>12</b>. In <figref idref="DRAWINGS">FIGS. <b>5</b>A and <b>5</b>B</figref>, the distribution of the parameters of bounding boxes is divided into four clusters. <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> shows a case in which the within-cluster variance is constant and <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> shows a case in which the within-cluster variance is weighted in proportion to the scales of the bounding boxes. When the within-cluster variance is constant as shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, the variation in the relative values of the scale of the object to be detected covered by each anchor box increases. On the other hand, by weighting the within-cluster variance in proportion to the scales of the bounding boxes as shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the variation in the relative values of the scale of the object to be detected covered by each anchor box decreases, and learning of the CNN learner <b>2</b> can be made stable.</p><p id="p-0055" num="0054">Note that the optimization of the learning in the CNN learner <b>2</b> is performed by decreasing the loss function defined by the following expression. The loss function can be expressed by the following Expression (1). The following Expression (1) is composed of two elements. The former term Lcls(p,u) represents an error between an estimated class probability p of the object rectangle and a ground truth class probability u. The latter term Lloc(t,v) represents an error between an estimated rectangle t of the object which is based on the anchor box shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref> and a ground truth rectangle v. Lloc(t,v) can be expressed by the following Expression (2). The symbols x and y respectively indicate the x and y coordinates of the central position of the rectangle and the symbols w and h respectively indicate the width and the height of the rectangle. The symbols xa, ya, wa, and ha respectively indicate the X coordinate, the Y coordinate, the width, and the height of the central position of the anchor box. The symbols x, y, w, and h respectively indicate the X coordinate, the Y coordinate, the width, and the height of the central position of the estimated rectangle.</p><p id="p-0056" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Expression</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>1</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mi>L</mi>     <mo>=</mo>     <mrow>      <mrow>       <msub>        <mi>L</mi>        <mi>cls</mi>       </msub>       <mo>(</mo>       <mrow>        <mi>p</mi>        <mo>,</mo>        <mi>u</mi>       </mrow>       <mo>)</mo>      </mrow>      <mo>+</mo>      <mrow>       <mi>&#x3bb;</mi>       <mo>&#x2062;</mo>       <mrow>        <msub>         <mi>L</mi>         <mi>loc</mi>        </msub>        <mo>(</mo>        <mrow>         <mi>t</mi>         <mo>,</mo>         <mi>v</mi>        </mrow>        <mo>)</mo>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>1</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00001-2" num="00001.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Expression</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>2</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <msub>       <mi>L</mi>       <mi>loc</mi>      </msub>      <mo>(</mo>      <mrow>       <mi>t</mi>       <mo>,</mo>       <mi>v</mi>      </mrow>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <munder>       <mo>&#x2211;</mo>       <mrow>        <mi>i</mi>        <mo>&#x2208;</mo>        <mrow>         <mo>[</mo>         <mrow>          <mi>x</mi>          <mo>,</mo>          <mi>y</mi>          <mo>,</mo>          <mi>w</mi>          <mo>,</mo>          <mi>h</mi>         </mrow>         <mo>]</mo>        </mrow>       </mrow>      </munder>      <mrow>       <mo>(</mo>       <mrow>        <msub>         <mi>t</mi>         <mi>i</mi>        </msub>        <mo>-</mo>        <msub>         <mi>v</mi>         <mi>i</mi>        </msub>       </mrow>       <mo>)</mo>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>2</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00001-3" num="00001.3"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Expression</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mn>3</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <msub>       <mi>t</mi>       <mi>x</mi>      </msub>      <mo>=</mo>      <mfrac>       <mrow>        <mi>x</mi>        <mo>-</mo>        <msub>         <mi>x</mi>         <mi>a</mi>        </msub>       </mrow>       <msub>        <mi>w</mi>        <mi>a</mi>       </msub>      </mfrac>     </mrow>     <mo>,</mo>     <mrow>      <msub>       <mi>t</mi>       <mi>y</mi>      </msub>      <mo>=</mo>      <mfrac>       <mrow>        <mi>y</mi>        <mo>-</mo>        <msub>         <mi>y</mi>         <mi>a</mi>        </msub>       </mrow>       <msub>        <mi>h</mi>        <mi>a</mi>       </msub>      </mfrac>     </mrow>     <mo>,</mo>     <mrow>      <msub>       <mi>t</mi>       <mi>w</mi>      </msub>      <mo>=</mo>      <mrow>       <mi>log</mi>       <mo>&#x2061;</mo>       <mo>(</mo>       <mfrac>        <mi>w</mi>        <msub>         <mi>w</mi>         <mi>a</mi>        </msub>       </mfrac>       <mo>)</mo>      </mrow>     </mrow>     <mo>,</mo>     <mrow>      <msub>       <mi>t</mi>       <mi>h</mi>      </msub>      <mo>=</mo>      <mrow>       <mi>log</mi>       <mo>&#x2061;</mo>       <mo>(</mo>       <mfrac>        <mi>h</mi>        <msub>         <mi>h</mi>         <mi>a</mi>        </msub>       </mfrac>       <mo>)</mo>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>3</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0057" num="0055">While the preferable example embodiments of the present invention have been described above, the aforementioned example embodiments have the following features.</p><p id="p-0058" num="0056">The detection object analysis unit <b>4</b> is a parameter determination apparatus that determines parameters of the plurality of anchor boxes used in the sliding window method when the bounding box and the class of the object in the image are detected using a neural network and the sliding window method.</p><p id="p-0059" num="0057">The neural network outputs the bounding box and the class of an object in the input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each of which includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object.</p><p id="p-0060" num="0058">The detection object analysis unit <b>4</b> includes the distribution generation unit <b>11</b> that generates distribution information of parameters of the bounding boxes indicated by the object specifying information of the plurality of pieces of learning data, the clustering processing unit <b>12</b> that generates a plurality of clusters by clustering distribution information, and the parameter determination unit <b>13</b> configured to determine parameters of a plurality of anchor boxes based on the plurality of clusters. According to the aforementioned configuration, it is possible to reduce the load of processing for object detection.</p><p id="p-0061" num="0059">Further, the clustering processing unit <b>12</b> clusters the distribution information in such a manner that the within-cluster variance of each cluster increases in proportion to the scale of the bounding box. According to the aforementioned configuration, the variation in the relative values of the scale of the object to be detected covered by each anchor box decreases.</p><p id="p-0062" num="0060">Further, the distribution generation unit <b>11</b> generates the distribution information of the vertical dimensions and the horizontal dimensions of parameters of the bounding boxes indicated by the object specifying information of the plurality of pieces of learning data and the parameter determination unit <b>13</b> determines the vertical dimensions and the horizontal dimensions of the plurality of anchor boxes.</p><p id="p-0063" num="0061">The parameter determination method for determining parameters of a plurality of anchor boxes used in the sliding window method when the bounding box and the class of the object in the image are detected using the neural network and the sliding window method includes a distribution generation step (S<b>202</b>), a clustering step (S<b>202</b>), and a parameter determination step (S<b>202</b>). According to the aforementioned method, it is possible to reduce the load of processing for object detection.</p><p id="p-0064" num="0062">In the aforementioned examples, the program(s) can be stored and provided to a computer using any type of non-transitory computer readable media. Non-transitory computer readable media include any type of tangible storage media. Examples of non-transitory computer readable media include magnetic storage media (such as flexible disks, magnetic tapes, hard disk drives, etc.), optical magnetic storage media (e.g., magneto-optical disks), CD-Read Only Memory (ROM), CD-R, CD-R/W, a Digital Versatile Disc (DVD), semiconductor memories (such as mask ROM, Programmable ROM (PROM), Erasable PROM (EPROM), flash ROM, Random Access Memory (RAM), etc.). Further, the program(s) may be provided to a computer using any type of transitory computer readable media. Examples of transitory computer readable media include electric signals, optical signals, and electromagnetic waves. Transitory computer readable media can provide the program to a computer via a wired communication line (e.g., electric wires, and optical fibers) or a wireless communication line.</p><heading id="h-0013" level="1">REFERENCE SIGNS LIST</heading><p id="p-0065" num="0000"><ul id="ul0002" list-style="none">    <li id="ul0002-0001" num="0063"><b>80</b> Parameter Determination Apparatus</li>    <li id="ul0002-0002" num="0064"><b>100</b> Distribution Generation Unit</li>    <li id="ul0002-0003" num="0065"><b>101</b> Clustering Processing Unit</li>    <li id="ul0002-0004" num="0066"><b>102</b> Anchor Box Parameter Determination Unit</li>    <li id="ul0002-0005" num="0067"><b>2</b> CNN Learner</li>    <li id="ul0002-0006" num="0068"><b>3</b> CNN Predictor</li>    <li id="ul0002-0007" num="0069"><b>4</b> Detection Object Analysis Unit</li>    <li id="ul0002-0008" num="0070"><b>5</b> Learning Image Storing Unit</li>    <li id="ul0002-0009" num="0071"><b>6</b> Detection Image Storing Unit</li>    <li id="ul0002-0010" num="0072"><b>7</b> Object Detection Model Storing Unit</li>    <li id="ul0002-0011" num="0073"><b>11</b> Distribution Generation Unit</li>    <li id="ul0002-0012" num="0074"><b>14</b> Clustering Processing Unit</li>    <li id="ul0002-0013" num="0075"><b>13</b> Anchor Box Parameter Determination Unit</li></ul></p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001 MATH-US-00001-2 MATH-US-00001-3" nb-file="US20230005237A1-20230105-M00001.NB"><img id="EMI-M00001" he="25.74mm" wi="76.20mm" file="US20230005237A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A parameter determination apparatus for determining parameters of a plurality of anchor boxes to be used in a sliding window method when a bounding box and a class of an object in an image are detected using a neural network and the sliding window method, wherein<claim-text>the neural network outputs a bounding box and a class of an object in an input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each of which includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object, the parameter determination apparatus comprising:</claim-text><claim-text>at least one memory storing computer-executable instructions; and</claim-text><claim-text>at least one processor configured to access the at least one memory and execute the computer-executable instructions to:</claim-text><claim-text>generate distribution information of parameters of bounding boxes indicated by the object specifying information of the plurality of pieces of learning data;</claim-text><claim-text>generate a plurality of clusters by clustering the distribution information; and</claim-text><claim-text>determine the parameters of the plurality of anchor boxes based on the plurality of clusters.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The parameter determination apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the generating the plurality of clusters includes clustering the distribution information in such a way that within-cluster variance of each cluster increases in proportion to the scale of the bounding box.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The parameter determination apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the generating the distribution information includes generating distribution information on vertical dimensions and horizontal dimensions of the parameters of the bounding boxes indicated by the object specifying information of the plurality of pieces of learning data, and</claim-text><claim-text>the parameter determination unit determines the vertical dimensions and the horizontal dimensions of the plurality of anchor boxes.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. A computer-implemented parameter determination method for determining parameters of a plurality of anchor boxes to be used in a sliding window method when a bounding box and a class of an object in an image are detected using a neural network and the sliding window method, wherein<claim-text>the neural network outputs a bounding box and a class of an object in an input image using a learned model learned using a learning data set formed so as to include a plurality of pieces of learning data, each of which includes an image that shows at least one object and object specifying information indicating the bounding box and the class of the object, the parameter determination method being performed by at least one processor executing stored instructions to perform steps comprising:</claim-text><claim-text>generating distribution information of parameters of bounding boxes indicated by the object specifying information of the plurality of pieces of learning data;</claim-text><claim-text>generating a plurality of clusters by clustering the distribution information; and</claim-text><claim-text>determining the parameters of the plurality of anchor boxes based on the plurality of clusters.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. A non-transitory computer readable medium storing a program for causing a computer to execute the parameter determination method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>.</claim-text></claim></claims></us-patent-application>