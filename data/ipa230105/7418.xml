<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007419A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007419</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17860863</doc-number><date>20220708</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>S</subclass><main-group>5</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>S</subclass><main-group>5</main-group><subgroup>005</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>S</subclass><main-group>3</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AUDIO CHANNEL SPATIAL TRANSLATION</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17136348</doc-number><date>20201229</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11395085</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17860863</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16439670</doc-number><date>20190612</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10887715</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17136348</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16162192</doc-number><date>20181016</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10469970</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16439670</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15487358</doc-number><date>20170413</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10104488</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16162192</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>13139984</doc-number><date>20110615</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>9628934</doc-number></document-id></parent-grant-document><parent-pct-document><document-id><country>WO</country><doc-number>PCT/US2009/068334</doc-number><date>20091216</date></document-id></parent-pct-document></parent-doc><child-doc><document-id><country>US</country><doc-number>15487358</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>61138823</doc-number><date>20081218</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Dolby Laboratories Licensing Corporation</orgname><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>DAVIS</last-name><first-name>Mark F.</first-name><address><city>Pacifica</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Dolby Laboratories Licensing Corporation</orgname><role>02</role><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present invention is directed to methods and apparatus for translating a first plurality of audio input channels to a second plurality of audio output channels. This includes determining that there is pair-wise coding among any of the first plurality of audio input channels, determining an input/output-mapping matrix for mapping at least a first set of the first plurality of audio input channels to at least a second set of the second plurality of audio output channels; and deriving the second plurality of audio output channels based on first plurality of audio input channels, the input/output-mapping matrix and the determined pair-wise coding. The first plurality of audio input channels represent the same soundfield represented by the second plurality of audio output channels.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="83.57mm" wi="158.75mm" file="US20230007419A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="135.89mm" wi="126.75mm" file="US20230007419A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="137.67mm" wi="111.00mm" file="US20230007419A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="206.25mm" wi="142.75mm" orientation="landscape" file="US20230007419A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="176.61mm" wi="136.31mm" orientation="landscape" file="US20230007419A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="202.27mm" wi="142.66mm" orientation="landscape" file="US20230007419A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="163.24mm" wi="145.71mm" orientation="landscape" file="US20230007419A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="189.31mm" wi="97.96mm" orientation="landscape" file="US20230007419A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="203.96mm" wi="113.96mm" orientation="landscape" file="US20230007419A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="209.80mm" wi="130.47mm" orientation="landscape" file="US20230007419A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="195.41mm" wi="132.16mm" orientation="landscape" file="US20230007419A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="145.03mm" wi="131.83mm" file="US20230007419A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="206.08mm" wi="138.94mm" orientation="landscape" file="US20230007419A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="190.16mm" wi="139.02mm" file="US20230007419A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="201.85mm" wi="104.14mm" file="US20230007419A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="196.26mm" wi="105.41mm" file="US20230007419A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/136,348, filed Dec. 29, 2020, which is a continuation of U.S. patent application Ser. No. 16/439,670, filed Jun. 12, 2019, now U.S. Pat. No. 10,887,715, which is a continuation of U.S. patent application Ser. No. 16/162,192, filed Oct. 16, 2018, now U.S. Pat. No. 10,469,970, which is a continuation of U.S. patent application Ser. No. 15/487,358, filed Apr. 13, 2017, now U.S. Pat. No. 10,104,488, which is a continuation of U.S. patent application Ser. No. 13/139,984, Jun. 15, 2011, now U.S. Pat. No. 9,628,934, which is the U.S. National Stage Application of PCT Application No. PCT/US2009/068334, filed Dec. 16, 2009, which claims priority to U.S. Provisional Application No. 61/138,823, filed Dec. 18, 2008, each of which is incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The invention relates to audio signal processing. More particularly the invention relates to translating a plurality of audio input channels representing a soundfield to one or a plurality of audio output channels representing the same soundfield, wherein each channel is a single audio stream representing audio arriving from a direction.</p><heading id="h-0003" level="1">BACKGROUND ART</heading><p id="p-0004" num="0003">Although humans have only two ears, we hear sound as a three dimensional entity, relying upon a number of localization cues, such as head related transfer functions (HRTFs) and head motion. Full fidelity sound reproduction therefore requires the retention and reproduction of the full 3D soundfield, or at least the perceptual cues thereof. Unfortunately, sound recording technology is not oriented toward capture of the 3D soundfield, nor toward capture of a 2D plane of sound, nor even toward capture of a 1D line of sound. Current sound recording technology is oriented strictly toward capture, preservation, and presentation of zero dimensional, discrete channels of audio.</p><p id="p-0005" num="0004">Most of the effort on improving fidelity since Edison's original invention of sound recording has focused on ameliorating the imperfections of his original analog modulated-groove cylinder/disc media. These imperfections included limited, uneven frequency response, noise, distortion, wow, flutter, speed accuracy, wear, dirt, and copying generation loss. Although there were any number of piecemeal attempts at isolated improvements, including electronic amplification, tape recording, noise reduction, and record players that cost more than some cars, the traditional problems of individual channel quality were arguably not finally resolved until the singular development of digital recording in general, and specifically the introduction of the audio Compact Disc. Since then, aside from some effort at further extending the quality of digital recording to 24 bits/96 kHz sampling, the primary efforts in audio reproduction research have been focused on reducing the amount of data needed to maintain individual channel quality, mostly using perceptual coders, and on increasing the spatial fidelity. The latter problem is the subject of this document.</p><p id="p-0006" num="0005">Efforts on improving spatial fidelity have proceeded along two fronts: trying to convey the perceptual cues of a full sound field, and trying to convey an approximation to the actual original sound field. Examples of systems employing the former approach include binaural recording and two-speaker-based virtual surround systems. Such systems exhibit a number of unfortunate imperfections, especially in reliably localizing sounds in some directions, and in requiring the use of headphones or a fixed single listener position.</p><p id="p-0007" num="0006">For presentation of spatial sound to multiple listeners, whether in a living room or a commercial venue like a movie theatre, the only viable alternative has been to try to approximate the actual original sound field. Given the discrete channel nature of sound recording, it is not surprising that most efforts to date have involved what might be termed conservative increases in the number of presentation channels. Representative systems include the panned-mono three-speaker film soundtracks of the early 50's, conventional stereo sound, quadraphonic systems of the 60's, five channel discrete magnetic soundtracks on 70 mm films, Dolby surround using a matrix in the 70's, AC-3 5.1 channel sound of the 90's, and recently, Surround-EX 6.1 channel sound. &#x201c;Dolby&#x201d;, &#x201c;Pro Logic&#x201d; and &#x201c;Surround EX&#x201d; are trademarks of Dolby Laboratories Licensing Corporation. To one degree or another, these systems provide enhanced spatial reproduction compared to monophonic presentation. However, mixing a larger number of channels incurs larger time and cost penalties on content producers, and the resulting perception is typically one of a few scattered, discrete channels, rather than a continuum soundfield. Aspects of Dolby Pro Logic decoding are described in U.S. Pat. No. 4,799,260, which patent is incorporated by reference herein in its entirety. Details of AC-3 are set forth in &#x201c;Digital Audio Compression Standard (AC-3, E-AC-3), Revision B,&#x201d; Advanced Television Systems Committee, 14 Jun. 2005.</p><p id="p-0008" num="0007">Once the sound field is characterized, it is possible in principle for a decoder to derive the optimal signal feed for any output loudspeaker. The channels supplied to such a decoder will be referred to herein variously as &#x201c;cardinal,&#x201d; &#x201c;transmitted,&#x201d; and &#x201c;input&#x201d; channels, and any output channel with a location that does not correspond to the position of one of the input channels will be referred to as an &#x201c;intermediate&#x201d; channel. An output channel may also have a location coincident with the position of an input channel.</p><heading id="h-0004" level="1">BACKGROUND OF THE INVENTION</heading><heading id="h-0005" level="1">Encoding or Downmixing</heading><p id="p-0009" num="0008">According to an encoding or downmixing aspect of the present invention, a process for translating M audio input channels, each associated with a spatial direction, to N audio output channels, each associated with a spatial direction, wherein M and N are positive whole integers, M is three or more, and N is three or more, comprises deriving the N audio output channels from the M audio input channels, wherein one or more of the M audio input channels is associated with a spatial direction other than a spatial direction with which any of the N audio output channels is associated, at least one of the one or more of the M audio input channels being mapped to a respective set of at least three of the N output channels. The at least three output channels of a set may be associated with contiguous spatial directions. N may be five or more and the deriving may map the at least one of the one or more of the M audio input channels to a respective set of three, four, or five of the N output channels. The at least three, four, or five of the N output channels of a set may be associated with contiguous spatial directions.</p><p id="p-0010" num="0009">In specific embodiments, M may be at least six, N may be at least five, and the M audio input channels may be associated, respectively, with five spatial directions corresponding to five spatial directions associated with the N audio output channels and at least one spatial direction not associated with the N audio output channels.</p><p id="p-0011" num="0010">Each of the N audio output channels may be associated with a spatial direction in a common plane. At least one of the associated spatial directions of the M audio input channels may be above the plane or below the plane with which the N audio output channels are associated. At least some of the associated spatial directions of the M audio input channels may vary in distance with respect to a reference spatial direction.</p><p id="p-0012" num="0011">In specific embodiments, the spatial directions with which the N audio output channels are associated may include left, center, right, left surround and right surround. The spatial directions with which the M audio input channels are associated may include left, center, right, left surround, right surround, left front elevated, center front elevated, right front elevated, left surround elevated, center surround elevated, and right surround elevated. The spatial directions with which the M audio input channels are associated may further include top elevated.</p><heading id="h-0006" level="1">Decoding or Upmixing</heading><p id="p-0013" num="0012">According to an decoding or upmixing aspect of the present invention, a process for translating N audio input channels, each associated with a spatial direction, to M audio output channels, each associated with a spatial direction, wherein M and N are positive whole integers, N is three or more, and M is one or more, comprises deriving the M audio output channels from the N audio input channels, wherein one or more of the M audio output channels is associated with a spatial direction other than a spatial direction with which any of the N audio input channels is associated, at least one of the one or more of the M audio output channels being derived from a respective set of at least three of the N input channels. At least one of the one or more of the M audio output channels may be derived from a respective set of at least three of the N input channels at least in part by approximating the cross-correlation of the at least three of the N input channels. Approximating the cross-correlation may include calculating the common energy for each pair of the at least three of the N input channels. The common energy for any of the pairs may have a minimum value. The amplitude of the derived M audio output channel may be based on the lowest estimated amplitude of the common energy of any pair of the at least three of the N input channels. The amplitude of the derived M audio output channel may be taken to be zero when the common energy for any pair of the at least three of the N input channels is zero.</p><p id="p-0014" num="0013">A plurality of derived M audio output channels may be derived from respective sets N input channels that share a common pair of N input channels, wherein calculating the common energy may include compensating for the common energy of shared common pairs of N input channels.</p><p id="p-0015" num="0014">The approximating may include processing the plurality of derived M audio channels in a hierarchical order such that each derived audio channel may be ranked according to the number of input channels from which it is derived, the greatest number of input channels having the highest ranking, the approximating processing the plurality of derived M audio channels in order according to their hierarchical order.</p><p id="p-0016" num="0015">Calculating the common energy may further include compensating for the common energy of shared common pairs of N input channels relating to derived audio channels having a higher hierarchical ranking.</p><p id="p-0017" num="0016">At least three of the N input channels of a set may be associated with contiguous spatial directions.</p><p id="p-0018" num="0017">N may be five or more and the deriving may map the at least one of the one or more of the M audio input channels to a respective set of three, four, or five of the N input channels. At least three, four, or five of the N input channels of a set may be associated with contiguous spatial directions.</p><p id="p-0019" num="0018">In specific embodiments, M may be at least six, N may be five, and the at least six output audio input channels may be associated, respectively, with five spatial directions corresponding to five spatial directions associated with the N audio input channels and at least one spatial direction not associated with the N audio input channels.</p><p id="p-0020" num="0019">Each of the N audio input channels may be associated with a spatial direction in a common plane. At least one of the associated spatial directions of the M audio input channels may be above the plane or below the plane with which the N audio output channels are associated. At least some of the associated spatial directions of the M audio input channels may vary in distance with respect to a reference spatial direction.</p><p id="p-0021" num="0020">In specific embodiments, the spatial directions with which the N audio output channels are associated may include left, center, right, left surround and right surround. The spatial directions with which the M audio output channels are associated may include left, center, right, left surround, right surround, left front elevated, center front elevated, right front elevated, left surround elevated, center surround elevated, and right surround elevated. The spatial directions with which the N audio input channels are associated may further include top elevated.</p><p id="p-0022" num="0021">According to a first aspect of other aspects of the invention, a process for translating M audio input signals, each associated with a direction, to N audio output signals, each associated with a direction, wherein N is larger than M, M is two or more and N is a positive integer equal to three or more, comprises providing an M:N variable matrix, applying the M audio input signals to the variable matrix, deriving the N audio output signals from the variable matrix, and controlling the variable matrix in response to the input signals so that a soundfield generated by the output signals has a compact sound image in the direction of the nominal ongoing primary direction of the input signals when the input signals are highly correlated, the image spreading from compact to broad as the correlation decreases and progressively splitting into multiple compact sound images, each in a direction associated with an input signal, as the correlation continues to decrease to highly uncorrelated.</p><p id="p-0023" num="0022">According to this first aspect of other aspects of the invention, the variable matrix may be controlled in response to measures of: (1) the relative levels of the input signals, and (2) the cross-correlation of the input signals. In that case, for a measure of cross-correlation of the input signals having values in a first range, bounded by a maximum value and a reference value, the soundfield may have a compact sound image when the measure of cross-correlation is the maximum value and may have a broadly spread image when the measure of cross-correlation is the reference value, and for a measure of cross-correlation of the input signals having values in a second range, bounded by the reference value and a minimum value, the soundfield may have the broadly spread image when the measure of cross-correlation is the reference value and may have a plurality of compact sound images, each in a direction associated with an input signal, when the measure of cross correlation is the minimum value.</p><p id="p-0024" num="0023">According to a further aspect of other aspects of the present invention, a process for translating M audio input signals, each associated with a direction, to N audio output signals, each associated with a direction, wherein N is larger than M, and M is three or more, comprises providing a plurality of m:n variable matrices, where m is a subset of M and n is a subset of N, applying a respective subset of the M audio input signals to each of the variable matrices, deriving a respective subset of the N audio output signals from each of the variable matrices, controlling each of the variable matrices in response to the subset of input signals applied to it so that a soundfield generated by the respective subset of output signals derived from it has a compact sound image in the direction of the nominal ongoing primary direction of the subset of input signals applied to it when such input signals are highly correlated, the image spreading from compact to broad as the correlation decreases and progressively splitting into multiple compact sound images, each in a direction associated with an input signal applied to it, as the correlation continues to decrease to highly uncorrelated, and deriving the N audio output signals from the subsets of N audio output channels.</p><p id="p-0025" num="0024">According to this further aspect of other aspects of the present invention, the variable matrices may also be controlled in response to information that compensates for the effect of one or more other variable matrices receiving the same input signal. Furthermore, deriving the N audio output signals from the subsets of N audio output channels may also include compensating for multiple variable matrices producing the same output signal. According to such further aspects of other aspects of the present invention, each of the variable matrices may be controlled in response to measures of: (a) the relative levels of the input signals applied to it, and (b) the cross-correlation of the input signals.</p><p id="p-0026" num="0025">According to yet a further aspect of other aspects of the present invention, a process for translating M audio input signals, each associated with a direction, to N audio output signals, each associated with a direction, wherein N is larger than M, and M is three or more, comprises providing an M:N variable matrix responsive to scale factors that control matrix coefficients or control the matrix outputs, applying the M audio input signals to the variable matrix, providing a plurality of m:n variable matrix scale factor generators, where m is a subset of M and n is a subset of N, applying a respective subset of the M audio input signals to each of the variable matrix scale factor generators, deriving a set of variable matrix scale factors for respective subsets of the N audio output signals from each of the variable matrix scale factor generators, controlling each of the variable matrix scale factor generators in response to the subset of input signals applied to it so that when the scale factors generated by it are applied to the M:N variable matrix, a soundfield generated by the respective subset of output signals produced has a compact sound image in the nominal ongoing primary direction of the subset of input signals that produced the applied scale factors when such input signals are highly correlated, the image spreading from compact to broad as the correlation decreases and progressively splitting into multiple compact sound images, each in a direction associated with an input signal that produced the applied scale factors, as the correlation continues to decrease to highly uncorrelated, and deriving the N audio output signals from the variable matrix.</p><p id="p-0027" num="0026">According to this yet further aspect of other aspects of the present invention, the variable matrix scale factor generators may also be controlled in response to information that compensates for the effect of one or more other variable matrix scale factor generators receiving the same input signal. Furthermore, deriving the N audio output signals from the variable matrix may include compensating for multiple variable matrix scale factor generators producing scale factors for the same output signal. According to such yet further aspects of other aspects of the present invention each of the variable matrix scale factor generators may be controlled in response to measures of: (a) the relative levels of the input signals applied to it, and (b) the cross-correlation of the input signals.</p><p id="p-0028" num="0027">As used herein, a &#x201c;channel&#x201d; is a single audio stream representing or associated with audio arriving from a direction (e.g., azimuth, elevation, and, optionally, distance, to allow for a closer or more distant virtual or projected channel).</p><p id="p-0029" num="0028">In accordance with the present invention, M audio input channels representing a soundfield are translated to N audio output channels representing the same soundfield, wherein each channel is a single audio stream represents audio arriving from a direction, M and N are positive whole integers, and M is at least 2 and N is at least 3, and N is larger than M. One or more sets of output channels are generated, each set having one or more output channels. Each set is usually associated with two or more spatially adjacent input channels and each output channel in a set is generated by determining a measure of the cross-correlation of the two or more input channels and a measure of the level interrelationships of the two or more input channels. The measure of cross-correlation preferably is a measure of the zero-time-offset cross-correlation, which is the ratio of the common energy level with respect to the geometric mean of the input signal energy levels. The common energy level preferably is the smoothed or averaged common energy level and the input signal energy levels are the smoothed or averaged input signal energy levels.</p><p id="p-0030" num="0029">In one aspect of the present invention, multiple sets of output channels may be associated with more than two input channels and a process may determine the correlation of input channels, with which each set of output channels is associated, according to a hierarchical order such that each set or sets is ranked according to the number of input channels with which its output channel or channels are associated, the greatest number of input channels having the highest ranking, and the processing processes sets in order according to their hierarchical order. Further according to an aspect of the present invention, the processing takes into account the results of processing higher order sets.</p><p id="p-0031" num="0030">Certain playback or decoding aspects of the present invention assume that each of the M audio input channels representing audio arriving from a direction was generated by a passive-matrix nearest-neighbor amplitude-panned encoding of each source direction (i.e., a source direction is assumed to map primarily to the nearest input channel or channels), without the requirement of additional side chain information (the use of side chain or auxiliary information is optional), making it compatible with existing mixing techniques, consoles, and formats. Although such source signals may be generated by explicitly employing a passive encoding matrix, most conventional recording techniques inherently generate such source signals (thus, constituting an &#x201c;effective encoding matrix&#x201d;). Certain playback or decoding aspects of the present invention are also largely compatible with natural recording source signals, such as might be made with five real directional microphones, since, allowing for some possible time delay, sounds arriving from intermediate directions tend to map principally to the nearest microphones (in a horizontal array, specifically to the nearest pair of microphones).</p><p id="p-0032" num="0031">A decoder or decoding process according to aspects of the present invention may be implemented as a lattice of coupled processing modules or modular functions (hereinafter, &#x201c;modules&#x201d; or &#x201c;decoding modules&#x201d;), each of which is used to generate one or more output channels (or, alternatively, control signals usable to generate one or more output channels), typically from the two or more of the closest spatially adjacent input channels associated with the decoding module. The output channels typically represent relative proportions of the audio signals in the closest spatially adjacent input channels associated with the particular decoding module. As explained in more detail below, the decoding modules are loosely coupled to each other in the sense that modules share inputs and there is a hierarchy of decoding modules. Modules are ordered in the hierarchy according to the number of input channels they are associated with (the module or modules with the highest number of associated input channels is ranked highest). A supervisor or supervisory function presides over the modules so that common input signals are equitably shared between or among modules and higher-order decoder modules may affect the output of lower-order modules.</p><p id="p-0033" num="0032">Each decoder module may, in effect, include a matrix such that it directly generates output signals or each decoder module may generate control signals that are used, along with the control signals generated by other decoder modules, to vary the coefficients of a variable matrix or the scale factors of inputs to or outputs from a fixed matrix in order to generate all of the output signals.</p><p id="p-0034" num="0033">Decoder modules emulate the operation of the human ear to attempt to provide perceptually transparent reproduction. Signal translation according to the present invention, of which decoder modules and module functions are an aspect, may be applied either to wideband signals or to each frequency band of a multiband processor, and depending on implementation, may be performed once per sample or once per block of samples. A multiband embodiment may employ either a filter bank, such as a discrete critical-band filterbank or a filterbank having a band structure compatible with an associated decoder, or a transform configuration, such as an FFT (Fast Fourier Transform) or MDCT (Modified Discrete Cosine Transform) linear filterbank.</p><p id="p-0035" num="0034">Another aspect of this invention is that the quantity of speakers receiving the N output channels can be reduced to a practical number by judicious reliance upon virtual imaging, which is the creation of perceived sonic images at positions in space other than where a loudspeaker is located. Although the most common use of virtual imaging is in the stereo reproduction of an image part way between two speakers, by panning a monophonic signal between the channels, virtual imaging, as contemplated as an aspect of the present invention, may include the rendering of phantom projected images that provide the auditory impression of being beyond the walls of a room or inside the walls of a room. Virtual imaging is not considered a viable technique for group presentation with a sparse number of channels, because it requires the listener to be equidistant from the two speakers, or nearly so. In movie theatres, for example, the left and right front speakers are too far apart to obtain useful phantom imaging of a center image to much of the audience, so, given the importance of the center channel as the source of much of the dialog, a physical center speaker is used instead.</p><p id="p-0036" num="0035">As the density of the speakers is increased, a point will be reached where virtual imaging is viable between any pair of speakers for much of the audience, at least to the extent that pans are smooth; with sufficient speakers, the gaps between the speakers are no longer perceived as such.</p><heading id="h-0007" level="1">Signal Distribution</heading><p id="p-0037" num="0036">As mentioned above, a measure of cross-correlation determines the ratio of dominant (common signal components) to non-dominant (non-common signal components) energy in a module and the degree of spreading of the non-dominant signal components among the output channels of the module. This may be better understood by considering the signal distribution to the output channels of a module under different signal conditions for the case of a two-input module. Unless otherwise noted, the principles set forth extend directly to higher order modules.</p><p id="p-0038" num="0037">The problem with signal distribution is that there is often too little information to recover the original signal amplitude distribution, much less the signals themselves. The basic information available is the signal levels at each module input and the averaged cross product of the input signals, the common energy level. The zero-time offset cross-correlation is the ratio of the common energy level with respect to the geometric mean of the input signal energy levels.</p><p id="p-0039" num="0038">The significance of cross-correlation is that it functions as a measure of the net amplitude of signal components common to all inputs. If there is a single signal panned anywhere between the inputs of the module (an &#x201c;interior&#x201d; or &#x201c;intermediate&#x201d; signal), all the inputs will have the same waveform, albeit with possibly different amplitudes, and under these conditions, the correlation will be 1.0. At the other extreme, if all the input signals are independent, meaning there is no common signal component, the correlation will be zero. Values of correlation intermediate between 0 and 1.0 can be considered to correspond to intermediate balance levels of some single, common signal component and independent signal components at the inputs. Consequently, any input signal condition may be divided into a common signal, the &#x201c;dominant&#x201d; signal, and input signal components left over after subtracting common signal contributions, comprising, an &#x201c;all the rest&#x201d; signal component (the &#x201c;non-dominant&#x201d; or residue signal energy). As noted above, the common or &#x201c;dominant&#x201d; signal amplitude is not necessarily louder than the residue or non-dominant signal levels.</p><p id="p-0040" num="0039">For example, consider the case of an arc of five channels (L (Left), MidL (Mid-Left), C (Center), MidR (Mid-Right), R (Right)) mapped to a single Lt/Rt (left total and right total) pair in which it is desired to recover the original five channels. If all five channels have equal amplitude independent signals, then Lt and Rt will be equal in amplitude, with an intermediate value of common energy, corresponding to an intermediate value of cross-correlation between zero and one (because Lt and Rt are not independent signals). The same levels can be achieved with appropriately chosen levels of L, C, and R, with no signals from MidL and MidR. Thus, a two-input, five-output module might feed only the output channel corresponding to the dominant direction (C in this case) and the output channels corresponding to the input signal residues (L, R) after removing the C energy from the Lt and Rt inputs, giving no signals to the MidL and MidR output channels. Such a result is undesirable&#x2014;turning off a channel unnecessarily is almost always a bad choice, because small perturbations in signal conditions will cause the &#x201c;off&#x201d; channel to toggle between on and off, causing an annoying chattering sound (&#x201c;chattering&#x201d; is a channel rapidly turning on and off), especially when the &#x201c;off&#x201d; channel is listened to in isolation.</p><p id="p-0041" num="0040">Consequently, when there are multiple possible output signal distributions for a given set of module input signal values, the conservative approach from the point of view of individual channel quality is to spread the non-dominant signal components as evenly as possible among the module's output channels, consistent with the signal conditions. An aspect of the present invention is evenly spreading the available signal energy, subject to the signal conditions, according to a three-way split rather than a &#x201c;dominant&#x201d; versus &#x201c;all the rest&#x201d; two-way split. Preferably, the three-way split comprises dominant (common) signal components, fill (even-spread) signal components, and input signal components residue. Unfortunately, there is only enough information to make a two-way split (dominant signal components and all other signal components). One suitable approach for realizing a three-way split is described herein in which for correlation values above a particular value, the two-way split employs the dominant and spread non-dominant signal components; for correlation values below that value, the two-way split employs the spread non-dominant signal components and the residue. The common signal energy is split between &#x201c;dominant&#x201d; and &#x201c;even-spread&#x201d;. The &#x201c;even-spread&#x201d; component includes both &#x201c;common&#x201d; and &#x201c;residue&#x201d; signal components. Therefore, &#x201c;spreading&#x201d; involves a mixture of common (correlated) and residue (uncorrelated) signal components.</p><p id="p-0042" num="0041">Before processing, for a given input/output channel configuration of a given module, a correlation value is calculated corresponding to all output channels receiving the same signal amplitude. This correlation value may be referred to as the &#x201c;random_xcor&#x201d; value. For a single, centered-derived intermediate-output channel and two input channels, the random-xcor value may calculate as 0.333. For three equally spaced intermediate channels and two input channels, the random-xcor value may calculate as 0.483. Although such time values have been found to provide satisfactory results, they are not critical. For example, values of about 0.3 and 0.5, respectively, are usable. In other words, for a module with M inputs and N outputs, there is a particular degree of correlation of the M inputs that can be considered as representing equal energies in all N outputs. This can be arrived at by considering the M inputs as if they had been derived using a passive N to M matrix receiving N independent signals of equal energy, although of course the actual inputs may be derived by other means. This threshold correlation value is &#x201c;random_xcor&#x201d;, and it may represent a dividing line between two regimes of operation.</p><p id="p-0043" num="0042">Then, during processing, if the cross-correlation value of a module is greater than or equal to the random_xcor value, it is scaled to a range of 1.0 to 0:</p><p id="p-0044" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>scaled_xcor=(correlation&#x2212;random_xcor)/(1&#x2212;random_xcor)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0045" num="0043">The &#x201c;scaled_xcor&#x201d; value represents the amount of dominant signal above the even-spread level. Whatever is left over may be distributed equally to the other output channels of the module.</p><p id="p-0046" num="0044">However, there is an additional factor that should be accounted for, namely that as the nominal ongoing primary direction of the input signals becomes progressively more off-center, the amount of spread energy should either be progressively reduced if equal distribution to all output channels is maintained or, alternatively, the amount of spread energy should be maintained but the energy distributed to output channels should be reduced in relation to the &#x201c;off centeredness&#x201d; of the dominant energy&#x2014;in other words, a tapering of the energy along the output channels. In the latter case, additional processing complexity may be required to maintain the output power equal to the input power. It will be noted that some references to &#x201c;power&#x201d; herein should, from a strict viewpoint, refer to &#x201c;energy.&#x201d; References to &#x201c;power&#x201d; are commonly employed in the literature.</p><p id="p-0047" num="0045">If, on the other hand, the current correlation value is less than the random-xcor value, the dominant energy is considered to be zero, the evenly-spread energy is progressively reduced, and the residue signal, whatever is left over, is allowed to accumulate at the inputs. At correlation=zero, there is no interior signal, just independent input signals that are mapped directly to output channels.</p><p id="p-0048" num="0046">The operation of this aspect of the invention may be explained further as follows:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0047">a) When the actual correlation is greater than random_xcor, there is enough common energy to consider there to be a dominant signal to be steered (panned) between two adjacent outputs (or, of course, fed to one output if its direction happens to coincide with that one output); the energy assigned to it is subtracted from the inputs to give residues which are distributed (preferably uniformly) among all the outputs.</li>        <li id="ul0002-0002" num="0048">b) When the actual correlation is precisely random_xcor, the input energy (which might be thought as all residue) is distributed uniformly among all the outputs (this is the definition of random_xcor).</li>        <li id="ul0002-0003" num="0049">c) When the actual correlation is less than random_xcor, there is not enough common energy for a dominant signal, so the energy of the inputs is distributed among the outputs with proportions dependent on how much less. This is as if one treated the correlated part as the residue, to be uniformly distributed among all outputs, and the uncorrelated part rather like a number of dominant signals to be sent to outputs corresponding to the directions of the inputs. In the extreme of the correlation being zero, each input is fed to one output position only (generally one of the outputs, but it could be a panned position between two of them).</li>    </ul>    </li></ul></p><p id="p-0049" num="0050">Thus, there is a continuum between full correlation, with a single signal panned between two outputs in accordance with the relative energies of the inputs, through random-xcor with the inputs distributed uniformly among all outputs, to zero correlation with M inputs fed independently to M output positions.</p><heading id="h-0008" level="1">Interaction Compensation</heading><p id="p-0050" num="0051">As mentioned above, channel translation according to an aspect of the present invention may be considered to involve a lattice of &#x201c;modules&#x201d;. Because multiple modules may share a given input channel, interactions are possible between modules and may degrade performance unless some compensation is applied. Although it is not generally possible to separate signals at an input according to which module they &#x201c;go with&#x201d;, estimating the amount of an input signal used by each connected module can improve the resulting correlation and direction estimates, resulting in improved overall performance.</p><p id="p-0051" num="0052">As mentioned above, there are two types of module interactions: those that involve modules at a common or lower hierarchy level (i.e., modules with a like number of inputs or fewer inputs), referred to as &#x201c;neighbors&#x201d;, and modules at a higher hierarchy level (having more inputs) than a given module but sharing one or more common inputs, referred to as &#x201c;higher-order neighbors&#x201d;.</p><p id="p-0052" num="0053">Consider first neighbor compensation at a common hierarchy level. To understand the problems caused by neighbor interaction, consider an isolated two-input module with identical L/R (left and right) input signals, A. This corresponds to a single dominant (common) signal halfway between the inputs. The common energy is A<sup>2 </sup>and the correlation is 1.0. Assume a second two-input module with a common signal, B, at its L/R inputs, a common energy B<sup>2</sup>, and also a correlation of 1.0. If the two modules are connected at a common input, the signal at that input will be A+B. Assuming signals A and B are independent, then the averaged product of AB will be zero, so the common energy of the first module will be A(A+B)=A<sup>2</sup>+AB=A<sup>2 </sup>and the common energy of the second module will be B(A+B)=B<sup>2</sup>+AB=B<sup>2</sup>. So, the common energy is not affected by neighboring modules, so long as they process independent signals. This is generally a valid assumption. If the signals are not independent, are the same, or at least substantially share common signal components, the system will react in a manner consistent with the response of the human ear&#x2014;namely, the common input will be larger causing the resulting audio image to pull toward the common input. In that case, the L/R input amplitude ratios of each module are offset because the common input has more signal amplitude (A+B) than either outer input, which causes the direction estimate to be biased toward the common input. In that case, the correlation value of both modules is now something less than 1.0 because the waveforms at both pairs of inputs are different. Because the correlation value determines the degree of spreading of the non-common signal components and the ratio of the dominant (common signal component) to non-dominant (non-common signal component) energy, uncompensated common-input signal causes the non-common signal distribution of each module to be spread.</p><p id="p-0053" num="0054">To compensate, a measure of the &#x201c;common input level&#x201d; attributable to each input of each module, is estimated, and then each module is informed regarding the total amount of such common input level energy of all neighboring levels of the same hierarchy level at each module input. Two ways of calculating the measure of common input level attributable to each input of a module are described herein: one which is based on the common energy of the inputs to the module (described generally in the next paragraph), and another, which is more accurate but requires greater computational resources, which is based on the total energy of the interior outputs of the module (described below in connection with the arrangement of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>).</p><p id="p-0054" num="0055">According to the first way of calculating the measure of common input level attributable to each input of a module, the analysis of a module's input signals does not allow directly solving for the common input level at each input, only a proportion of the overall common energy, which is the geometric mean of the common input energy levels. Because the common input energy level at each input cannot exceed the total energy level at that input, which is measured and known, the overall common energy is factored into estimated common input levels proportional to the observed input levels, subject to the qualification below. Once the ensemble of common input levels is calculated for all modules in the lattice (whether the measure of common input levels is based on the first or second way of calculation), each module is informed of the total of the common input levels of all the neighboring modules at each input, a quantity referred to as the &#x201c;neighbor level&#x201d; of a module at each of its inputs. The module then subtracts the neighbor level from the input level at each of its inputs to derive compensated input levels, which are used to calculate the correlation and the direction (nominal ongoing primary direction of the input signals).</p><p id="p-0055" num="0056">For the example cited above, the neighbor levels are initially zero, so because the common input has more signal than either end input, the first module claims a common input power level at that input in excess of A<sup>2 </sup>and the second module claims a common input level at the same input in excess of B<sup>2</sup>. Since the total claims are more than the available energy at that level, the claims are limited to about A<sup>2 </sup>and B<sup>2</sup>, respectively. Because there are no other modules connected to the common input, each common input level corresponds to the neighbor level of the other module. Consequently, the compensated input power level seen by the first module is</p><p id="p-0056" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>A</i><sup>2</sup>+<i>B</i><sup>2</sup>)&#x2212;<i>B</i><sup>2</sup>=<i>A</i><sup>2 </sup><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0057" num="0057">and the compensated input power level seen by the second module is</p><p id="p-0058" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>A</i><sup>2</sup>+<i>B</i><sup>2</sup>)&#x2212;<i>A</i><sup>2</sup>=<i>B</i><sup>2</sup>.<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0059" num="0058">However, these are just the levels that would have been observed with the modules isolated. Consequently, the resulting correlation values will be 1.0, and the dominant directions will be centered, at the proper amplitudes, as desired. Nevertheless, the recovered signals themselves will not be completely isolated&#x2014;the first module's output will have some B signal component, and vice versa, but this is a limitation of a matrix system, and if the processing is performed on a multiband basis, the mixed signal components will be at a similar frequency, rendering the distinction between them somewhat moot. In more complex situations, the compensation usually will not be as precise, but experience with the system indicates that the compensation in practice mitigates most of the effects of neighbor module interaction.</p><p id="p-0060" num="0059">Having established the principles and signals used in neighbor level compensation, extension to higher-order neighbor level compensation is fairly straightforward. This applies to situations in which two or more modules at different hierarchy levels share more than one input channel in common. For example, there might be a three-input module sharing two inputs with a two-input module. A signal component common to all three inputs will also be common to both inputs of the two-input module, and without compensation, will be rendered at different positions by each module. More generally, there may be a signal component common to all three inputs and a second component common to only the two-input module inputs, requiring that their effects be separated as much as possible for proper rendering of the output soundfield. Consequently, the three-input common signal effects, as embodied in the common input levels described above, should be subtracted from the inputs before the two-input calculation can be performed properly. In fact, the higher-order common signal elements should be subtracted not only from the lower-level module's input levels, but from its observed measure of common energy level as well, before proceeding with the lower level calculation. This is different from the effects of common input levels of modules at the same hierarchy level that do not affect the measure of common energy level of a neighboring module. Thus, the higher-order neighbor levels should be accounted for, and employed, separately from the same-order neighbor levels. At the same time that higher-order neighbor levels are passed down to modules lower in the hierarchy, remaining common levels of lower level modules should also be passed upward in the hierarchy because, as mentioned above, lower level modules act like ordinary neighbors to higher level modules. Some quantities are interdependent and difficult to solve for simultaneously. In order to avoid performing complex simultaneous-solution resource intensive computations, previous calculated values may be passed to the relevant modules. A potential interdependence of module common input levels at different hierarchy levels can be resolved either by using the previous value, as above, or performing calculations in a repetitive sequence (i.e., a loop), from highest hierarchy level to lowest. Alternatively, a simultaneous equation solution may also be possible, although it may involve non-trivial computational overhead.</p><p id="p-0061" num="0060">Although the interaction compensation techniques described only deliver approximately correct values for complex signal distributions, they are believed to provide improvement over a lattice arrangement that fails to take module interactions into consideration.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0009" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a top plan view showing schematically an idealized encoding and/or decoding arrangement in the manner of a test arrangement employing a sixteen channel horizontal array around the walls of a room, a six channel array disposed in a circle above the horizontal array and a single overhead (top) channel.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is a top plan view showing schematically an idealized alternative encoding and/or decoding arrangement employing a sixteen channel horizontal array around the walls of a room, a six channel array disposed in a circle above the horizontal array and a single overhead (top) channel.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> are a functional block diagram providing an overview of a multiband transform embodiment of a plurality of modules operating with a central supervisor implementing a decoding example of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref>&#x2032; and <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>&#x2032; are a functional block diagram providing an overview of a multiband transform embodiment of a plurality of modules operating with a central supervisor implementing a decoding example of <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a functional block diagram useful in understanding the manner in which a supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;B&#x2032; or <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;, may determine an endpoint scale factor.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref> show a functional block diagram of a module according to an aspect of the present invention.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic view showing a hypothetical arrangement of a three input module fed by a triangle of input channels, three interior output channels, and a dominant direction. The view is useful in understanding the distribution of dominant signal components.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIGS. <b>6</b>A and <b>6</b>B</figref> are functional block diagrams showing, respectively, one suitable arrangement for (1) generating the total estimated energy for each input of a module in response to the total energy at each input, and (2) in response to a measure of cross-correlation of the input signals, generating an excess endpoint energy scale factor component for each of the module's endpoints.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a functional block diagram showing a preferred function of the &#x201c;sum and/or greater of&#x201d; block <b>367</b> of <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is an idealized representation of the manner in which an aspect of the present invention generates scale factor components in response to a measure of cross-correlation.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIGS. <b>9</b>A and <b>9</b>B</figref> through <figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> are series of idealized representations illustrating the output scale factors of a module resulting from various examples of input signal conditions.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0010" level="1">MODES FOR CARRYING OUT THE INVENTION</heading><p id="p-0073" num="0072">In order to test aspects of the present invention, an arrangement was deployed having a horizontal array of 5 speakers on each wall of a room having four walls (one speaker in each corner with three spaced evenly between each corner), 16 speakers total, allowing for common corner speakers, plus a ring of 6 speakers above a centrally-located listener at a vertical angle of about 45 degrees, plus a single speaker directly above, total 23 speakers, plus a subwoofer/LFE (low frequency effects) channel, total 24 speakers, all fed from a personal computer set up for 24-channel playback. Although by current parlance, this system might be referred to as a 23.1 channel system, for simplicity it will be referred to as a 24-channel system herein.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a top plan view showing schematically an idealized decoding arrangement in the manner of the just-described test arrangement. The figure also represents an idealized encoding arrangement in which 23.1 source channels are downmixed to 6.1 channels consisting of 5.1 channels (left, center, right, left surround, right surround and LFE), as is standard in commonly-employed systems, plus one additional channel (a top channel).</p><p id="p-0075" num="0074">Returning to the description of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> as a decoding or upmixing arrangement, five wide range horizontal input channels are shown as squares <b>1</b>&#x2032;, <b>3</b>&#x2032;, <b>5</b>&#x2032;, <b>9</b>&#x2032; and <b>13</b>&#x2032; on the outer circle. A vertical or top channel, which may be derived from the five wide range inputs via correlation or generated reverberation, or separately supplied as a sixth channel (as just mentioned above and as in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>/<b>2</b>B), is shown as the broken square <b>23</b>&#x2032; in the center. The twenty-three wide range output channels are shown as numbered filled circles <b>1</b>-<b>23</b>. The outer circle of sixteen output channels is on a horizontal plane, the inner circle of six output channels is forty-five degrees above the horizontal plane. Output channel <b>23</b> is directly above one or more listeners. Five two-input decoding modules are delineated by brackets <b>24</b>-<b>28</b> around the outer circle, connected between each pair of horizontal input channels. Five additional two-input vertical decoding modules are delineated by brackets <b>29</b>-<b>33</b> connecting the vertical channel to each of the horizontal inputs. Output channel <b>21</b>, the elevated center rear channel, is derived from a three-input decoding module <b>34</b> illustrated as arrows between output channel <b>21</b> and input channels <b>9</b>, <b>13</b> and <b>23</b>. Thus, three-input module <b>34</b> is one level higher in hierarchy than its two-input lower hierarchy neighbor modules <b>27</b>, <b>32</b> and <b>33</b>. In this example, each module is associated with a respective pair or trio of closest spatially adjacent input channels. Every module in this example has at least three same-level neighbors. For example, modules <b>25</b>, <b>28</b> and <b>29</b> are neighbors of module <b>24</b>.</p><p id="p-0076" num="0075">Although the decoding modules represented in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> have, variously, three, four or five output channels, a decoding module may have any reasonable number of output channels. An output channel may be located intermediate two or more input channels or at the same position as an input channel. Thus, in the <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> example, each of the input channel locations is also an output channel. Two or three decoding modules share each input channel.</p><p id="p-0077" num="0076">Although the arrangement of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> employs five modules (<b>24</b>-<b>28</b>) (each having two inputs) and five inputs (<b>1</b>&#x2032;, <b>3</b>&#x2032;, <b>5</b>&#x2032;, <b>9</b>&#x2032; and <b>13</b>&#x2032;) to derive sixteen horizontal outputs (<b>1</b>-<b>16</b>) representing locations around the four walls of a room, similar results may be obtained with a minimum of three inputs and three modules (each having two inputs, each module sharing one input with another module).</p><p id="p-0078" num="0077">By employing multiple modules in which each module has output channels in an arc or a line (such as the example of <figref idref="DRAWINGS">FIGS. <b>1</b>A, <b>1</b>B, <b>2</b> and <b>2</b></figref>&#x2032;), decoding ambiguities encountered in prior art decoders in which correlations less than zero are decoded as indicating rearward directions may be avoided.</p><p id="p-0079" num="0078">An alternative to the encoding/decoding arrangement of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is described below in connection with the description of <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>.</p><p id="p-0080" num="0079">Although input and output channels may be characterized by their physical position, or at least their direction, characterizing them with a matrix is useful because it provides a well-defined signal relationship. Each matrix element (row i, column j) is a transfer function relating input channel i to output channel j. Matrix elements are usually signed multiplicative coefficients, but may also include phase or delay terms (in principle, any filter), and may be functions of frequency (in discrete frequency terms, a different matrix at each frequency). This is straightforward in the case of dynamic scale factors applied to the outputs of a fixed matrix, but it also lends itself to variable-matrixing, either by having a separate scale factor for each matrix element, or, for matrix elements more elaborate than simple scalar scale factors, in which matrix elements themselves are variable, e.g., a variable delay.</p><p id="p-0081" num="0080">There is some flexibility in mapping physical positions to matrix elements; in principle, embodiments of aspects of the present invention may handle mapping an input channel to any number of output channels, and vice versa, but the most common situation is to assume signals mapped only to the nearest output channels via simple scalar factors which, to preserve power, sum-square to 1.0. Such mapping is often done via a sine/cosine panning function.</p><p id="p-0082" num="0081">For example, with two input channels and three interior output channels on a line between them plus the two endpoint output channels coincident with the input positions (i.e., an M:N module in which M is 2 and N is 5), one may assume that the span represents 90 degrees of arc (the range that sine or cosine change from 0 to 1 or vice versa), so that each channel is 90 degrees/4 intervals=22.5 degrees apart, giving the channels matrix coefficients of (cos (angle), sin (angle)):</p><p id="p-0083" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Lout coeffs=cos(0), sin(0)=(1, 0)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0084" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidLout coeffs=cos(22.5), sin(22.5)=(0.92, 0.38)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0085" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Cout coeffs=cos(45), sin(45)=(0.71, 0.71)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0086" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidRout coeffs=cos(67.5, sin(67.5)=(0.38, 0.92)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0087" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Rout coeffs=cos(90), sin(90)=(0, 1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0088" num="0082">Thus, for the case of a matrix with fixed coefficients and a variable gain controlled by a scale factor at each matrix output, the signal output at each of the five output channels is (where &#x201c;SF&#x201d; is a scale factor for a particular output identified by the subscript):</p><p id="p-0089" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Lout=Lt(SF<sub>L</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0090" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidLout=((0.92)Lt+(0.38)Rt))(SF<sub>MidL</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0091" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Cout=((0.45)Lt+(0.45)Rt))(SF<sub>C</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0092" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidRout=((0.38)Lt+(0.92)Lt))(SF<sub>MidR</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0093" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Rout=Rt(SF<sub>R</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0094" num="0083">Generally, given an array of input channels, one may conceptually join nearest inputs with straight lines, representing potential decoder modules. (They are &#x201c;potential&#x201d; because if there is no output channel that needs to be derived from a module, the module is not needed). For typical arrangements, any output channel on a line between two input channels may be derived from a two-input module (if sources and transmission channels are in a common plane, then any one source appears in at most two input channels, in which case there is no advantage in employing more than two inputs). An output channel in the same position as an input channel is an endpoint channel, perhaps of more than one module. An output channel not on a line or at the same position as an input (e.g., inside or outside a triangle formed by three input channels) requires a module having more than two inputs.</p><p id="p-0095" num="0084">Decode modules with more than two inputs are useful when a common signal occupies more than two input channels. This may occur, for example, when the source channels and input channels are not in a plane: a source channel may map to more than two input channels. This occurs in the example of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> when mapping 24 channels (16 horizontal ring channels, 6 elevated ring channels, 1 vertical channel, plus LFE) to 6.1 channels (including a composite vertical or top channel). In that case, the center rear channel in the elevated ring is not in a direct line between two of the source channels, it is in the middle of a triangle formed by the Ls (13), Rs (9), and top (23) channels, so a three-input module is required to extract it. One way to map elevated channels to a horizontal array is to map each of them to more than two input channels. That allows the 24 channels of the <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> example to be mapped to a conventional 5.1 channel array. In that alternative, a plurality of three-input modules may extract the elevated channels, and the leftover signal components may be processed by two-input modules to extract the main horizontal ring of channels. Such alternatives are described further below in connection with <figref idref="DRAWINGS">FIGS. <b>1</b>B and <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;.</p><p id="p-0096" num="0085">In general, it is not necessary to check for all possible combinations of signal commonality among the input channels. With planar channel arrays (e.g., channels representing horizontally arrayed directions), it is usually adequate to perform pairwise similarity comparison of spatially adjacent channels. For channels arranged in a canopy or the surface of a sphere, signal commonality may extend to three or more channels. Use and detection of signal commonality may also be used to convey additional signal information. For example, a vertical or top signal component may be represented by mapping to all five full range channels of a horizontal five-channel array. Such an alternative is described further below in connection with <figref idref="DRAWINGS">FIGS. <b>1</b>B and <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;.</p><p id="p-0097" num="0086">Decisions about which input channel combinations to analyze for commonality, along with a default input/output-mapping matrix, need only be done once per input/output channel translator or translator function arrangement, in configuring the translator or translator function. The &#x201c;initial mapping&#x201d; (before processing) derives a passive &#x201c;master&#x201d; matrix that relates the input/output channel configurations to the spatial orientation of the channels. As one alternative, the processor or processing portion of the invention may generate time-varying scale factors, one per output channel, which modify either the output signal levels of what would otherwise have been a simple, passive matrix or the matrix coefficients themselves. The scale factors in turn derive from a combination of (a) dominant, (b) even-spread (fill), and (c) residue (endpoint) signal components as described below.</p><p id="p-0098" num="0087">A master matrix is useful in configuring an arrangement of modules such as shown in the examples of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref> and described further below in connection with <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;. By examining the master matrix, one may deduce, for example, how many decoder modules are needed, how they are connected, how many input and output channels each has and the matrix coefficients relating each modules' inputs and outputs. These coefficients may be taken from the master matrix; only the non-zero values are needed unless an input channel is also an output channel (i.e., an endpoint).</p><p id="p-0099" num="0088">Each module preferably has a &#x201c;local&#x201d; matrix, which is that portion of the master matrix applicable to the particular module. In the case of a multiple module arrangement, such as the example of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>2</b>A</figref>/<b>2</b>B, the module may use the local matrix for the purpose of producing scale factors (or matrix coefficients) for controlling the master matrix, as is described below in connection with <figref idref="DRAWINGS">FIGS. <b>2</b>, <b>2</b></figref>&#x2032; and <b>4</b>A-<b>4</b>C, or for the purpose of producing a subset of the output signals, which output signals are assembled by a central process, such as a supervisor as described in connection with <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;. Such a supervisor, in the latter case, compensates for multiple versions of the same output signal produced by modules having a common output signal in a manner analogous to the manner in which supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032; determines a final scale factor to replace the preliminary scale factors produced by modules that produce preliminary scale factors for the same output channel.</p><p id="p-0100" num="0089">In the case of multiple modules that produce scale factors rather than output signals, such modules may continually obtain the matrix information relevant to itself from a master matrix via a supervisor rather than have a local matrix. However, less computational overhead is required if the module has its own local matrix. In the case of a single, stand-alone module, the module has a local matrix, which is the only matrix required (in effect, the local matrix is the master matrix), and that local matrix is used to produce output signals.</p><p id="p-0101" num="0090">Unless otherwise indicated, descriptions of embodiments of the invention having multiple modules are with reference to the alternative in which modules produce scale factors.</p><p id="p-0102" num="0091">Any decode module output channel with only one nonzero coefficient in the module's local matrix (that coefficient is 1.0, since the coefficients sum-square to 1.0) is an endpoint channel. Output channels with more than one nonzero coefficient are interior output channels. Consider a simple example. If output channels O<b>1</b> and O<b>2</b> are both derived from input channels I<b>1</b> and I<b>2</b> (but with different coefficient values), then one needs a 2-input module connected between I<b>1</b> and I<b>2</b> generating outputs O<b>1</b> and O<b>2</b>, possibly among others. In a more complex case, if there are 5 inputs and 16 outputs, and one of the decoder modules has inputs I<b>1</b> and I<b>2</b> and feeds outputs O<b>1</b> and O<b>2</b> such that:</p><p id="p-0103" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>O</i>1=<i>A I</i>1+<i>B I</i>2+0 <i>I</i>3+0 <i>I</i>4+0 <i>I</i>5<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0104" num="0092">(note no contribution from input channels I<b>3</b>, I<b>4</b>, or I<b>5</b>), and</p><p id="p-0105" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>O</i>2=<i>C I</i>1+<i>D I</i>2+0 <i>I</i>3+0 <i>I</i>4+0 <i>I</i>5<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0106" num="0093">(note no contribution from input channels I<b>3</b>, I<b>4</b>, or I<b>5</b>),</p><p id="p-0107" num="0000">then the decoder may have two inputs (I<b>1</b> and I<b>2</b>), two outputs, and the scale factors relating them are:</p><p id="p-0108" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>O</i>1=<i>A I</i>1+<i>B I</i>2, and<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0109" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>O</i>2=<i>C I</i>1+<i>D I</i>2.<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0110" num="0094">Either the master matrix or the local matrix, in the case of a single, stand-alone module, may have matrix elements that function to provide more than multiplication. For example, as noted above, matrix elements may include a filter function, such as a phase or delay term, and/or a filter that is a function of frequency. One example of filtering that may be applied is a matrix of pure delays that may render phantom projected images. In practice, such a master or local matrix may be divided, for example, into two functions, one that employs coefficients to derive the output channels, and a second that applies a filter function.</p><p id="p-0111" num="0095"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref>/<b>2</b>B are a functional block diagram providing an overview of a multiband transform embodiment implementing the example of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032; is a functional block diagram providing an overview of a multiband transform embodiment implementing the example of <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. It differs from <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>/<b>2</b>B in that certain ones of the modules of <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> (namely, modules <b>29</b>-<b>34</b>) receive a different set of inputs (such modules are designated by numerals <b>29</b>&#x2032;-<b>34</b>; <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>&#x2032; also has an additional module, module <b>35</b>&#x2032;). Other than the differences in some module inputs, <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032; are the same and the same reference numerals are used for corresponding elements. In both <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, a PCM audio input, for example, having multiple interleaved audio signal channels is applied to a supervisor or supervisory function <b>201</b> (hereinafter &#x201c;supervisor <b>201</b>&#x201d;) that includes a de-interleaver that recovers separate streams of each of six audio signal channels (<b>1</b>&#x2032;, <b>3</b>&#x2032;, <b>5</b>&#x2032;, <b>9</b>&#x2032;, <b>13</b>&#x2032; and <b>23</b>&#x2032;) carried by the interleaved input and applies each to a time-domain to frequency-domain transform or transform function (hereinafter &#x201c;forward transform&#x201d;). Alternatively, the audio channels may be received in separate streams, in which case no de-interleaver is required.</p><p id="p-0112" num="0096">As noted above, signal translation according to the present invention may be applied either to wideband signals or to each frequency band of a multiband processor, which may employ either a filter bank, such as a discrete critical-band filterbank or a filterbank having a band structure compatible with an associated decoder, or a transform configuration, such as an FFT (Fast Fourier Transform) or MDCT (Modified Discrete Cosine Transform) linear filterbank. <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B, <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, <b>4</b>A-<b>4</b>C and other figures are described in the context of a multiband transform configuration.</p><p id="p-0113" num="0097">Not shown in <figref idref="DRAWINGS">FIGS. <b>1</b>A, <b>1</b>B, <b>2</b>A</figref>/<b>2</b>B, <b>2</b>A&#x2032;/<b>2</b>B&#x2032; and other figures, for simplicity, is an optional LFE input channel (a potential seventh input channel in <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>2</b>A</figref>/<b>2</b>B and a potential sixth input channel in <figref idref="DRAWINGS">FIGS. <b>1</b>B and <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;) and output channel (a potential 24<sup>th </sup>output channel in <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>2</b>A</figref>/<b>2</b>B). The LFE channel may be treated generally in the same manner as the other input and output channels, but with its own scale factor fixed at &#x201c;1&#x201d; and its own matrix coefficient, also fixed at &#x201c;1&#x201d;. In cases where the source channels have no LFE but the output channels do (for example, a 2:5.1 upmix), an LFE channel may be derived by using a lowpass filter (for example, a fifth-order Butterworth filter with a 120 Hz corner frequency) applied to the sum of the channels, or, to avoid cancellation upon addition of the channels, a phase-corrected sum of the channels may be employed. In cases where the input has an LFE channel, but not the output, the LFE channel may be added to one or more of the output channels.</p><p id="p-0114" num="0098">Continuing with the description of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, modules <b>24</b>-<b>34</b> (<b>24</b>-<b>28</b> and <b>29</b>&#x2033; through <b>35</b>&#x2032; in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;) receive appropriate ones of the six inputs <b>1</b>&#x2032;, <b>3</b>&#x2032;, <b>5</b>&#x2032;, <b>9</b>&#x2032;, <b>13</b>&#x2032; and <b>23</b>&#x2032; in the manner shown in <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref>. Each module generates a preliminary scale factor (&#x201c;PSF&#x201d;) output for each of the audio output channels associated with it as shown in <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref>. Thus, for example, module <b>24</b> receives inputs <b>1</b>&#x2032; and <b>3</b>&#x2032; and generates preliminary scale factor outputs PSF1, PSF2 and PSF3. Alternatively, as mentioned above, each module may generate a preliminary set of audio outputs for each of the audio output channels associated with it. Each module also may communicate with a supervisor <b>201</b>, as explained further below. Information sent from the supervisor <b>201</b> to various modules may include neighbor level information and higher-order neighbor level information, if any. Information sent to the supervisor from each module may include the total estimated energy of interior the outputs attributable to each of the module's inputs. The modules may be considered part of a control signal-generating portion of the overall system of <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>2</b></figref>&#x2032;.</p><p id="p-0115" num="0099">A supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, may perform a number of diverse functions. A supervisor may, for example, determine if more than one module is in use, and, if not, the supervisor need not perform any functions relating to neighbor levels. During initialization, the supervisor may inform the or each module the number of inputs and outputs it has, the matrix coefficients relating them, and the sampling rate of the signal. As already mentioned, it may read the blocks of interleaved PCM samples and de-interleave them into separate channels. It may apply unlimiting action in the time domain, for example, in response to additional information indicating that the source signal was amplitude limited and the degree of that limiting. If the system is operating in a multiband mode, it may apply windowing and a filterbank (e.g., FFT, MDCT, etc.) to each channel (so that multiple modules do not perform redundant transforms that substantially increase the processing overhead) and pass streams of transform values to each module for processing. Each module passes back to the supervisor a two-dimensional array of scale factors: one scale factor for all transform bins in each subband of each output channel (when in a multiband transform configuration, otherwise one scale factor per output channel), or, alternatively, a two-dimensional array of output signals: an ensemble of complex transform bins for each subband of each output channel (when in a multiband transform configuration, otherwise one output signal per output channel). The supervisor may smooth the scale factors and apply them to the signal path matrixing (matrix <b>203</b>, described below) to yield (in a multiband transform configuration) output channel complex spectra. Alternatively, when the module produces output signals, the supervisor may derive the output channels (output channel complex spectra, in a multiband transform configuration), compensating for local matrices that produce the same output signal. It may then perform an inverse transform plus windowing and overlap-add, in the case of MDCT, for each output channel, interleaving the output samples to form a composite multichannel output stream (or, optionally, it may omit interleaving so as to provide multiple output streams), and sends it on to an output file, soundcard, or other final destination.</p><p id="p-0116" num="0100">Although various functions may be performed by a supervisor, as described herein, or by multiple supervisors, one of ordinary skill in the art will appreciate that various ones or all of those functions may be performed in the modules themselves rather than by a supervisor common to all or some of the modules. For example, if there is only a single, stand-alone module, there need be no distinction between module functions and supervisor functions. Although, in the case of multiple modules, a common supervisor may reduce the required overall processing power by eliminating or reducing redundant processing tasks, the elimination of a common supervisor or its simplification may allow modules to be easily added to one another, for example, to upgrade to more output channels.</p><p id="p-0117" num="0101">Returning to the description of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, the six inputs <b>1</b>&#x2032;, <b>3</b>&#x2032;, <b>5</b>&#x2032;, <b>9</b>&#x2032;, <b>13</b>&#x2032; and <b>23</b>&#x2032; are also applied to a variable matrix or variable matrixing function <b>203</b> (hereinafter &#x201c;matrix <b>203</b>&#x201d;). Matrix <b>203</b> may be considered a part of the signal path of the system of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;. Matrix <b>203</b> also receives as inputs from supervisor <b>201</b> a set of final scale factors SF1 through SF23 for each of the 23 output channels of the <figref idref="DRAWINGS">FIG. <b>1</b>A and <b>1</b>B</figref> examples. The final scale factors may be considered as being the output of the control signal portion of the system of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;. As is explained further below, the supervisor <b>201</b> preferably passes on, as final scale factors to the matrix, the preliminary scale factors for every &#x201c;interior&#x201d; output channel, but the supervisor determines final scale factors for every endpoint output channel in response to information it receives from modules. An &#x201c;interior&#x201d; output channel is intermediate to the two or more &#x201c;endpoint&#x201d; output channels of each module. Alternatively, if the modules produce output signals rather than scale factors, no matrix <b>203</b> is required; the supervisor itself produces the output signals.</p><p id="p-0118" num="0102">In the <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref> examples, it is assumed that the endpoint output channels coincide with the input channel locations, although it is not necessary that they coincide, as is discussed further elsewhere. Thus, output channels <b>2</b>, <b>4</b>, <b>6</b>-<b>8</b>, <b>10</b>-<b>12</b>, <b>14</b>-<b>16</b>, <b>17</b>, <b>18</b>, <b>19</b>, <b>20</b>, <b>21</b> and <b>22</b> are interior output channels. Interior output channel <b>21</b> is intermediate or bracketed by three input channels (input channels <b>9</b>&#x2032;, <b>13</b>&#x2032; and <b>23</b>&#x2032;), whereas the other interior channels are each intermediate (between or bracketed by) two input channels. Because there are multiple preliminary scale factors for those endpoint output channels that are shared between or among modules (i.e., output channels <b>1</b>, <b>3</b>, <b>5</b>, <b>9</b>, <b>13</b> and <b>23</b>), the supervisor <b>201</b> determines the final endpoint scale factors (SF1, SF3, etc.) among the scale factors SF1 through SF23. The final interior output scale factors (SF2, SF4, SF6, etc.) are the same as the preliminary scale factors.</p><p id="p-0119" num="0103">A disadvantage of the arrangements of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>2</b>A</figref>/<b>2</b>B is that a plurality of input source channels are mapped to 6.1 channels (5.1 channels plus a top-elevation channel), rendering such a downmix incompatible with existing 5.1 channel horizontal planar array systems, such as those used in Dolby Digital film soundtracks or on DVD's (&#x201c;Dolby&#x201d; and &#x201c;Dolby Digital&#x201d; are trademarks of Dolby Laboratories Licensing Corporation).</p><p id="p-0120" num="0104">As mentioned above, one way to map elevated channels to a horizontal planar array is to map each of them to more than two input channels. For example, that allows the 24 original source channels of the <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> example to be mapped to a conventional 5.1 channel array (see Table A below in which the reference numerals 1 through 23 refer to directions in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>). In such an alternative, a plurality of more-than-two-input modules (not shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>) may extract &#x201c;varied-distance&#x201d; in-plane (outside or inside the listening area established by a standard 5.1 channel array) or &#x201c;out-of-plane&#x201d; (above the plane&#x2014;&#x201c;elevated&#x201d; channels or below the plane&#x2014;&#x201c;lowered&#x201d;) channels, and the leftover signal components may be processed by two-input modules to extract horizontal channels. &#x201c;Varied-distance&#x201d; channels may be fed to actual speakers placed in the interior of the room, to provide a variable-distance presentation; and could be projected to the interior or exterior of the listening space as virtual interior or exterior channels. A vertical or top signal component may be represented by mapping, for example, to all five channels of a horizontal five-channel array. Thus, the 5.1 channel downmix can be played with a conventional 5.1 channel decoder, while a decoder in accordance with the examples of <figref idref="DRAWINGS">FIG. <b>1</b>B and <b>2</b>B</figref> can recover an approximation to the original 24 channels or some other desired output channel configuration.</p><p id="p-0121" num="0105">Thus, according to the alternative of the examples of <figref idref="DRAWINGS">FIGS. <b>1</b>B and <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032; and as shown in Table A, each standard horizontal source channel is mapped to one or two downmix channels of the 5.1 channel downmix, while other source channels are each mapped to more than two channels of the 5.1 channel downmix. Thus, for a 23.1 channel source arrangement of the <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref> examples, the various channels may be mapped as follows:</p><p id="p-0122" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="112pt" align="center"/><colspec colname="2" colwidth="98pt" align="center"/><colspec colname="3" colwidth="7pt" align="center"/><thead><row><entry namest="1" nameend="3" rowsep="1">TABLE A</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row><row><entry>Encode/Downmix</entry><entry>Decode/Upmix</entry><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="56pt" align="left"/><colspec colname="2" colwidth="56pt" align="left"/><colspec colname="3" colwidth="56pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><tbody valign="top"><row><entry>Source</entry><entry>Downmix</entry><entry>Source</entry><entry>Upmix</entry></row><row><entry>Channel</entry><entry>Channels</entry><entry>Channel(s)</entry><entry>Channel</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row><row><entry>Lf (1)</entry><entry>Lf</entry><entry>Lf</entry><entry>Lf (1)</entry></row><row><entry>&#x2002;(2)</entry><entry>Lf + Cf</entry><entry>Lf + Cf</entry><entry>&#x2002;(2)</entry></row><row><entry>Cf (3)</entry><entry>Cf</entry><entry>Cf</entry><entry>Cf (3)</entry></row><row><entry>&#x2002;(4)</entry><entry>Cf + Rf</entry><entry>Cf + Rf</entry><entry>&#x2002;(4)</entry></row><row><entry>Rf (5)</entry><entry>Rf</entry><entry>Rf</entry><entry>Rf (5)</entry></row><row><entry>&#x2002;(6)</entry><entry>Rf + Rs</entry><entry>Rf + Rs</entry><entry>&#x2002;(6)</entry></row><row><entry>&#x2002;(7)</entry><entry>Rf + Rs</entry><entry>Rf + Rs</entry><entry>&#x2002;(7)</entry></row><row><entry>&#x2002;(8)</entry><entry>Rf + Rs</entry><entry>Rf + Rs</entry><entry>&#x2002;(8)</entry></row><row><entry>Rs (9)</entry><entry>Rs</entry><entry>Rs</entry><entry>Rs (9)</entry></row><row><entry>(10)</entry><entry>Rs + Ls</entry><entry>Rs + Ls</entry><entry>(10)</entry></row><row><entry>(11)</entry><entry>Rs + Ls</entry><entry>Rs + Ls</entry><entry>(11)</entry></row><row><entry>(12)</entry><entry>Rs + Ls</entry><entry>Rs + Ls</entry><entry>(12)</entry></row><row><entry>Ls (13)</entry><entry>Ls</entry><entry>Ls</entry><entry>Ls (13)</entry></row><row><entry>(14)</entry><entry>Ls + Lf</entry><entry>Ls + Lf</entry><entry>(14)</entry></row><row><entry>(15)</entry><entry>Ls + Lf</entry><entry>Ls + Lf</entry><entry>(15)</entry></row><row><entry>(16)</entry><entry>Ls + Lf</entry><entry>Ls + Lf</entry><entry>(16)</entry></row><row><entry>Lf-E (17)</entry><entry>Lf + Cf + Ls</entry><entry>Lf + Cf + Ls</entry><entry>Lf-E (17)</entry></row><row><entry>Cf-E (18)</entry><entry>Lf + Cf + Rf</entry><entry>Lf + Cf + Rf</entry><entry>Cf-E (18)</entry></row><row><entry>Rf-E (19)</entry><entry>Cf + Rf + Rs</entry><entry>Cf + Rf + Rs</entry><entry>Rf-E (19)</entry></row><row><entry>Rs-E (20)</entry><entry>Rf + Rs + Ls</entry><entry>Rf + Rs + Ls</entry><entry>Rs-E (20)</entry></row><row><entry>Cs-E (21)</entry><entry>Lf + Rf + Ls +</entry><entry>Lf + Rf + Ls +</entry><entry>Cs-E (21)</entry></row><row><entry/><entry>Rs</entry><entry>Rs</entry></row><row><entry>Ls-E (22)</entry><entry>Rs + Ls + Lf</entry><entry>Rs + Ls + Lf</entry><entry>Ls-E (22)</entry></row><row><entry>Top-E (23)</entry><entry>Lf + Cf + Rf +</entry><entry>Lf + Cf + Rf +</entry><entry>Top-E (23)</entry></row><row><entry/><entry>Ls + Rs</entry><entry>Ls + Rs</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0123" num="0106">In Table A, Lf is left front, Cf is center front, Rf is right front, Ls is left surround, Rs is right surround, Lf-E is left front-elevated, Cf-E is center front-elevated, Rf-E is right front-elevated, Rs-E is right surround-elevated, Cs-e is center surround-elevated, Ls-E is left surround-elevated, and Top-E is top-elevated. The weighting factors (matrix coefficients) may all be equal within each group, or they may be chosen individually. For example, each source channel mapped to three output channels may be mapped to the middle listed channel with twice as much power as the outer-listed two channels; e.g. Lf-Elevated may be mapped to Lf and Ls with matrix coefficients of 0.5 (power 0.25) and to Cf with coefficient of 0.7071 (power 0.5). Mapping to four or five output channels may be performed with all equal matrix coefficients. Following common matrixing practice, the set of matrix coefficients for each source channel may be chosen so as to sum-square to 1.0.</p><p id="p-0124" num="0107">Alternative, more elaborate downmixing arrangements, including dynamic power-preserving downmixing based on source channel cross-correlation, may be provided and are within the scope of the present invention.</p><p id="p-0125" num="0108">It will be noted that in the example of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, the downmixing of 23.1 to 6.1 channels involved mapping all but one of the source channels to only two downmix channels. In that arrangement, only the Cs-Elevated channel mapped to three downmix channels (Ls+Rs+Top).</p><p id="p-0126" num="0109">In order to extract channels that have been mapped to multiple downmix channels, it is necessary to identify the amount of common signal elements in two or more downmix channels. A common technique for doing this (even in application outside of upmixing) is cross correlation. As mentioned above, the measure of cross-correlation preferably is a measure of the zero-time-offset cross-correlation, which is the ratio of the common power level with respect to the geometric mean of the input signal power levels. The common power level preferably is the smoothed or averaged common power level and the input signal power levels are the smoothed or averaged input signal power levels. In this context, the cross-correlation of two signals, S1 and S2, may be expressed as:</p><p id="p-0127" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Xcor=|<i>S</i>1*<i>S</i>2|/Sqrt(|<i>S</i>1*<i>S</i>1|*|<i>S</i>2*<i>S</i>2|),<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0128" num="0000">where the vertical bars indicate an average or smoothed value. Correlation of three or more signals is more complicated, although a technique for calculating the cross correlation of three signals is described herein under the heading &#x201c;Higher Order Calculation of Common Power.&#x201d; For downmixing to 5.1 channels, it is shown in Table A that source channels may map to as many as five downmix channels, necessitating the derivation of cross correlation values from a like number of channels, i.e., up to 5th order cross correlation.</p><p id="p-0129" num="0110">Rather than trying to perform an exact solution, which would be computationally intensive, an approximate cross-correlation technique, according to an aspect of the present invention, uses only second-order cross-correlations as described in the above Xcor equation.</p><p id="p-0130" num="0111">The approximate cross-correlation technique involves computing the common power (defined as the numerator of the above Xcor equation) for each pair of nodes involved. For a 3<sup>rd </sup>order correlation of signals S1, S2, and S3, this would be |S1*S2|, |S2*S3|, and |S1*S3|. For a 4<sup>th </sup>order correlation, the common power terms would be |S1*S2|, |S1*S3|, |S1*S4|, |S2*S3|, |S2*S4|, and |S3*S4|The situation for 5<sup>th </sup>order is similar, with a total of ten such terms required. Many of these cross power calculations (five, in fact, for upmixing from 5.1) are already needed for decoding the horizontal channels, so for correlations up to fifth order, a total of ten smoothed cross products are needed, five of which are already calculated and five more are needed for the 5<sup>th </sup>order calculation. This total of 10 pairwise calculations also serves for all the 4<sup>th </sup>order correlations as well.</p><p id="p-0131" num="0112">If any of the pairwise cross power values are zero, it means there is no common signal between the two nodes in question, hence there is no signal common to all N (N=3, 4, or 5) nodes, hence there is zero output from the output channel in question. Otherwise, if none are zero, the amount of the common signal indicated by the cross power value of two nodes, Node(i) and Node(j), can be calculated by assuming that the observed cross power obtains from the signal common to all nodes under consideration. If the source channel amplitude is A, then the amplitude at nodes Node(i) and Node(j) is given by the corresponding downmix matrix coefficients, M<sub>i </sub>and M<sub>j</sub>, as AM<sub>i </sub>and AM<sub>j</sub>. Therefore the common power between those nodes, X==|Si*Sj|=|AM<sub>i</sub>*AM<sub>J</sub>|. Therefore, the estimate of the desired output amplitude from the cross power of a pair of nodes i and j is:</p><p id="p-0132" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>A</i>(estimated)=Sqrt(<i>X</i>/<i>M</i><sub>i</sub>*<i>M</i><sub>j</sub>).<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0133" num="0113">From considering the estimated value of A for all pairs of nodes associated with a given output channel, the true value of A can be no greater than the minimum estimate. If the node pair corresponding to the minimum estimate is common to no other outputs, then the minimum estimate is taken as the value of A.</p><p id="p-0134" num="0114">If there are other output channels being mapped to the two nodes in question, then there is not enough information (within this technique) to differentiate between them, so an equal signal distribution between the output channels in question is assumed and all other output channels are mapped to the two nodes in question.</p><p id="p-0135" num="0115">To aid this operation, one may calculate during program initialization a matrix that may be referred to as the &#x201c;Transfer Matrix,&#x201d; a square matrix relating input node i to input node j, derived from the original encoding (downmix) matrix, wherein the value of the Transfer Matrix at row i column j=the sum of all encoding matrix cross products having a common output channel. For example, suppose that encode source channel <b>1</b> maps to downmix channels <b>1</b> and <b>2</b> with matrix values (0.7071, 0.7071), and suppose that source channel <b>17</b> maps to downmix channels <b>1</b>, <b>2</b>, and <b>3</b> with matrix values 0.577 each (note: 0.577*0.577=0.3333, so the matrix values sum squared to 1.0 as desired.) Then the Transfer Matrix at element <b>1</b>,<b>2</b> is (0.7071*0.7071+0.577*0.577)=0.5+0.33=0.83. Thus, each element of the Transfer Matrix is a measure of the total output power derived from that pair of nodes. If in deriving the output level of channel <b>17</b>, one finds a minimum cross power estimate of A<sup>2 </sup>involving downmix nodes <b>1</b> and <b>2</b>, then the amount of A one may assign to output channel <b>17</b> is:</p><p id="p-0136" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Outpower=<i>A</i><sup>2</sup>*(0.577*0.577)/0.83=0.4<i>A</i><sup>2</sup>.<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0137" num="0116">From the ratio of the estimated output amplitude and the amplitudes at the input nodes, we get the final scale factor for the output channel in question.</p><p id="p-0138" num="0117">As explained elsewhere in this document, one may perform the derivation of output levels in a hierarchical order, starting with the output channel derived from the largest number of channels (five in the <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> example), then the output channels derived from four channels, etc.</p><p id="p-0139" num="0118">After calculating the output level of a given node, the power contribution of each encoded channel to the output is subtracted from the measured power levels associated with the given node before continuing to the next node output calculation.</p><p id="p-0140" num="0119">A disadvantage of the cross-correlation approximation technique is that more signal may be fed to an output channel than was originally present. However, the audible consequences of an error in feeding more signal to an output channel derived from three or more encoded inputs are minor, as the contributing channels are proximate to the output channel and the human ear will have trouble differentiating the extra signal to the derived output channel, given that the local array of output channels will have the correct total power. If the encoded 5.1-channel program is played without decoding, the channels that have been mapped to three or more of the 5.1 channels will be reproduced from the corresponding 5.1 channel speaker array, and heard as somewhat broadened sources by listeners, which should not be objectionable.</p><heading id="h-0011" level="1">Blind Upmixing</heading><p id="p-0141" num="0120">The decoding process just described can optionally be fed from any existing 5.1-channel source, even one not specifically encoded as just described. One may refer to such decoding as &#x201c;blind upmixing&#x201d;. It is desired that such an arrangement produce interesting, esthetically pleasing results, and that it make reasonable use of the derived output channels. Unfortunately, it is not uncommon to find that commercial 5.1-channel motion picture soundtracks have few common signal elements between pairs of channels, and even fewer among combinations of three or more channels. In such a case, an upmixer as just described produces little output for any derived output channel, which is undesirable. In this case, one may provide a blind upmix mode in which the input channel signals are modified or augmented so that at least some signal output is provided in a derived output channels when at least one of the input channels from which the output channel is derived has a signal input.</p><p id="p-0142" num="0121">According to aspects of the present invention, non-augmented decoding looks for<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0122">(a) correlation among all the input channels from which the output channel is derived, and</li>        <li id="ul0004-0002" num="0123">(b) significant signal levels at each of the input channels from which the output channel is derived.</li>    </ul>    </li></ul></p><p id="p-0143" num="0124">If there is low pair-wise correlation among any of the involved input channels, or low signal level at any of the involved input channels, then the derived channel gets little or no signal. Each contributing input channel, in effect, has veto power over whether the derived channel gets signal.</p><p id="p-0144" num="0125">In order to perform a blind upmix of channels that have not been encoded in a manner as described herein, one may derive channels in a manner so as to have some signal when, under certain signal conditions, the derived signal would be zero. This may be achieved, for example, by modifying both of the above conditions. As to the first condition, this may be accomplished by setting a lower limit on the value of the correlation. For example, the limit may be a minimum based on the &#x201c;random equal-distribution&#x201d; correlation value described elsewhere herein. Then, to satisfy condition (b), one may simply take a weighted average of the signal power of the input channels from which the output channel is derived, wherein the weighting may be the matrix coefficient of the input channel. Employment of such an averaging technique is not critical. Other ways to assure that a derived channel has some signal when at least one of the input channels from which it is derived has some signal may be employed. .</p><p id="p-0145" num="0126"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a functional block diagram useful in understanding the manner in which a supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, may determine an endpoint scale factor. The supervisor does not sum all the outputs of the modules sharing an input to get an endpoint scale factor. Instead, it additively combines, such as in a combiner <b>301</b>, the total estimated interior energy for a input from each module that shares the input, such as input <b>9</b>&#x2032;, which is shared by modules <b>26</b> and <b>27</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;. This sum represents the total energy level at the input claimed by the interior outputs of all the connected modules. It then subtracts that sum from the smoothed input energy level at that input (e.g., the output of smoother <b>325</b> or <b>327</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, as described below) of any one of the modules that share the input (module <b>26</b> or module <b>27</b>, in this example), such as in combiner <b>303</b>. It is sufficient to choose any one of the modules' smoothed inputs at the common input even though the levels may differ slightly from module to module because the modules each adjust their time constants independently of each other. The difference, at the output of combiner <b>303</b>, is the desired output signal energy level at that input, which energy level is not allowed to go below zero. By dividing that desired output signal level by the smoothed input level at that input, as in divider <b>305</b>, and performing a square root operation, as in block <b>307</b>, the final scale factor (SF<b>9</b>, in this example) for that output is obtained. Note that the supervisor derives a single final scale factor for each such shared input regardless of how many modules share the input. An arrangement for determining the total estimated energy of the interior outputs attributable to each of the module's inputs is described below in connection with <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>.</p><p id="p-0146" num="0127">Because the levels are energy levels (a second-order quantity), as opposed to amplitudes (a first-order quantity), after the divide operation, a square-root operation is applied in order to obtain the final scale factor (scale factors are associated with first-order quantities). The addition of the interior levels and subtraction from the total input level are all performed in a pure energy sense, because interior outputs of different module interiors are assumed to be independent (uncorrelated). If this assumption is not true in an unusual situation, the calculation may yield more leftover signal at the input than there should be, which may cause a slight spatial distortion in the reproduced soundfield (e.g., a slight pulling of other nearby interior images toward the input), but in the same situation, the human ear likely reacts similarly. The interior output channel scale factors, such as PSF6 through PSF 8 of module <b>26</b>, are passed on by the supervisor as final scale factors (they are not modified). For simplicity, <figref idref="DRAWINGS">FIG. <b>3</b></figref> only shows the generation of one of the endpoint final scale factors. Other endpoint final scale factors may be derived in a similar manner.</p><p id="p-0147" num="0128">Returning to the description of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, as mentioned above, in the variable matrix <b>203</b>, the variability may be complicated (all coefficients variable) or simple (coefficients varying in groups, such as being applied to the inputs or the outputs of a fixed matrix). Although either approach may be employed to produce substantially the same results, one of the simpler approaches, that is, a fixed matrix followed by a variable gain for each output (the gain of each output controlled by scale factors) has been found to produce satisfactory results and is employed in the embodiments described herein. Although a variable matrix in which each matrix coefficient is variable is usable, it has the disadvantage of having more variables and requiring more processing power.</p><p id="p-0148" num="0129">Supervisor <b>201</b> also performs an optional time domain smoothing of the final scale factors before they are applied to the variable matrix <b>203</b>. In a variable matrix system, output channels are never &#x201c;turned off&#x201d;, the coefficients are arranged to reinforce some signals and cancel others. However, a fixed-matrix, variable-gain system, as in described embodiments of the present invention, however, does turn channels on and off, and is more susceptible to undesirable &#x201c;chattering&#x201d; artifacts. This may occur despite the two-stage smoothing described below (e.g., smoothers <b>319</b>/<b>325</b>, etc.). For example, when a scale factor is close to zero, because only a small change is needed to go from &#x2018;small&#x2019; to &#x2018;none&#x2019; and back, transitions to and from zero may cause audible chattering.</p><p id="p-0149" num="0130">The optional smoothing performed by supervisor <b>201</b> preferably smooths the output scale factors with variable time constants that depend on the size of the absolute difference (&#x201c;abs-diff&#x201d;) between newly derived instantaneous scale factor values and a running value of the smoothed scale factor. For example, if the abs-diff is greater than 0.4 (and, of course, &#x3c;=1.0), there is little or no smoothing applied; a small additional amount of smoothing is applied to abs-diff values between 0.2 and 0.4; and below values of 0.2, the time constant is a continuous inverse function of the abs-diff. Although these values are not critical, they have been found to reduce audible chattering artifacts. Optionally, in a multiband version of a module, the scale factor smoother time constants may also scale with frequency as well as time, in the manner of frequency smoothers <b>413</b>, <b>415</b> and <b>417</b> of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, described below.</p><p id="p-0150" num="0131">As stated above, the variable matrix <b>203</b> preferably is a fixed decode matrix with variable scale factors (gains) at the matrix outputs. Each matrix output channel may have (fixed) matrix coefficients that would have been the encode downmix coefficients for that channel had there been an encoder with discrete inputs (instead of mixing source channels directly to the downmixed array, which avoids the need for a discrete encoder.) The coefficients preferably sum-square to 1.0 for each output channel. The matrix coefficients are fixed once it is known where the output channels are (as discussed above with regard to the &#x201c;master&#x201d; matrix); whereas the scale factors, controlling the output gain of each channel, are dynamic.</p><p id="p-0151" num="0132">Inputs comprising frequency domain transform bins applied to the modules <b>24</b>-<b>34</b> of <figref idref="DRAWINGS">FIGS. <b>2</b></figref> (<b>24</b>-<b>28</b> and <b>29</b>&#x2032;-<b>35</b>&#x2032; of <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;) may be grouped into frequency subbands by each module after initial quantities of energy and common energy are calculated at the bin level, as is explained further below. Thus, there is a preliminary scale factor (PSF in <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;) and a final scale factor (SF in <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;) for every frequency subband. The frequency-domain output channels <b>1</b>-<b>23</b> produced by matrix <b>203</b> each comprise a set of transform bins (subband-sized groups of transform bins are treated by the same scale factor). The sets of frequency-domain transform bins are converted to a set of PCM output channels <b>1</b>-<b>23</b>, respectively, by a frequency- to time-domain transform or transform function <b>205</b> (hereinafter &#x201c;inverse transform&#x201d;), which may be a function of the supervisor <b>201</b>, but is shown separately for clarity. The supervisor <b>201</b> may interleave the resulting PCM channels <b>1</b>-<b>23</b> to provide a single interleaved PCM output stream or leave the PCM output channels as separate streams.</p><p id="p-0152" num="0133"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref> show a functional block diagram of a module according an aspect of to the present invention. The module receives two or more input signal streams from a supervisor, such as the supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/B&#x2032;. Each input comprises an ensemble of complex-valued frequency-domain transform bins. Each input, <b>1</b> through m, is applied to a function or device (such as function or device <b>401</b> for input <b>1</b> and function or device <b>403</b> for input m) that calculates the energy of each bin, which is the sum of the squares of the real and imaginary values of each transform bin (only the paths for two inputs, <b>1</b> and m, are shown to simplify the drawing). Each of the inputs is also applied to a function or device <b>405</b> that calculates the common energy of each bin across the module's input channels. In the case of an FFT embodiment, this may be calculated by taking the cross product of the input samples (in the case of two inputs, L and R, for example, the real part of the complex product of the complex L bin value and the complex conjugate of the complex R bin value). Embodiments using real values need only cross-multiply the real value for each input. For more than two inputs, the special cross-multiplication technique described below may be employed, namely, if all the signs are the same, the product is given a positive sign, else it is given a negative sign and scaled by the ratio of the number of possible positive results (always two: they are either all positive or all negative) to the number of possible negative results.</p><heading id="h-0012" level="1">Pairwise Calculation of Common Energy</heading><p id="p-0153" num="0134">For example, suppose an input channel pair A/B contains a common signal X along with individual, uncorrelated signals Y and Z:</p><p id="p-0154" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>A=</i>0.707<i>X+Y </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0155" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>B=</i>0.707<i>X+Z </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0156" num="0135">where the scalefactors of 0.707=&#x221a;{square root over (0.5)} provide a power preserving mapping to the nearest input channels.</p><p id="p-0157" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RMSEnergy(<i>A</i>)=&#x222b;<i>A</i><sup>2</sup>&#x2202;<i>t</i>=<o ostyle="single"><i>A</i><sup>2</sup></o>=<o ostyle="single">(0.707<i>X+Y</i>)<sup>2</sup></o>=<o ostyle="single">(0.5<i>X</i><sup>2</sup>+0.707<i>XY+Y</i><sup>2</sup>)</o>=0.5<o ostyle="single"><i>X</i><sup>2</sup></o>+0.707<o ostyle="single"><i>XY</i></o>+<o ostyle="single"><i>Y</i><sup>2</sup></o><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0158" num="0000">Because X and Y are uncorrelated,</p><p id="p-0159" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><o ostyle="single"><i>XY</i></o>=0<?in-line-formulae description="In-line Formulae" end="tail"?></p><heading id="h-0013" level="2">So:</heading><p id="p-0160" num="0136"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><o ostyle="single"><i>A</i><sup>2</sup></o>=0.5<o ostyle="single"><i>X</i><sup>2</sup></o>+<o ostyle="single"><i>Y</i><sup>2</sup></o><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0161" num="0000">i.e., Because X and Y are uncorrelated, the total energy in input channel A is the sum of the energies of signals X and Y.</p><p id="p-0162" num="0137">Similarly:</p><p id="p-0163" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><o ostyle="single"><i>B</i><sup>2</sup></o>=0 5<o ostyle="single"><i>X</i><sup>2</sup></o>+<o ostyle="single"><i>Z</i><sup>2</sup></o><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0164" num="0138">Since X, Y, and Z are uncorrelated, the averaged cross-product of A and B is:</p><p id="p-0165" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i><o ostyle="single">AB</o>=</i>0.5<o ostyle="single"><i>X</i><sup>2</sup></o><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0166" num="0139">So, in the case of an output signal shared equally by two neighboring input channels that may also contain independent, uncorrelated signals, the averaged cross-product of the signals is equal to the energy of the common signal component in each channel. If the common signal is not shared equally, i.e., it is panned toward one of the inputs, the averaged cross-product will be the geometric mean between the energy of the common components in A and B, from which individual channel common energy estimates can be derived by normalizing by the square root of the ratio of the channel amplitudes. Actual time averages are computed subsequent smoothing stages, as described below.</p><heading id="h-0014" level="1">Higher Order Calculation of Common Energy</heading><p id="p-0167" num="0140">A technique for approximating the common energy of decoding modules with three or more inputs is provided above. Provided here is another way to derive the common energy of decoding modules with three or more inputs. This may be accomplished by forming the averaged cross products of all the input signals. Simply performing pairwise processing of the inputs fails to differentiate between separate output signals between each pair of inputs and a signal common to all.</p><p id="p-0168" num="0141">Consider, for example, three input channels, A, B, and C, made up of uncorrelated signals W, Y, Z, and common signal X:</p><p id="p-0169" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>A=X+W </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0170" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>B=X+Y </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0171" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>C=X+Z </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0172" num="0142">If the average cross-product is calculated, all terms involving combinations of W, Y, and Z cancel, as in the second order calculation, leaving the average of X<sup>3</sup>:</p><p id="p-0173" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><o ostyle="single"><i>ABC</i></o>=<o ostyle="single"><i>X</i><sup>3</sup></o><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0174" num="0143">Unfortunately, if X is a zero mean time signal, as expected, then the average of its cube is zero. Unlike averaging X<sup>2</sup>, which is positive for any nonzero value of X, X<sup>3 </sup>has the same sign as X, so the positive and negative contributions will tend to cancel. Obviously, the same holds for any odd power of X, corresponding to an odd number of module inputs, but even exponents greater than two can also lead to erroneous results; for example, four inputs with components (X, X, &#x2212;X, &#x2212;X) will have the same product/average as (X, X, X, X).</p><p id="p-0175" num="0144">This problem may be resolved by employing a variant of the averaged product technique. Before being averaged, the sign of the each product is discarded by taking the absolute value of the product. The signs of each term of the product are examined. If they are all the same, the absolute value of the product is applied to the averager. If any of the signs are different from the others, the negative of the absolute value of the product is averaged. Since the number of possible same-sign combinations may not be the same as the number of possible different-sign combinations, a weighting factor comprised of the ratio of the number of same to different sign combinations is applied to the negated absolute value products to compensate. For example, a three-input module has two ways for the signs to be the same, out of eight possibilities, leaving six possible ways for the signs to be different, resulting in a scale factor of 2/6=&#x2153;. This compensation causes the integrated or summed product to grow in a positive direction if and only if there is a signal component common to all inputs of a decoding module.</p><p id="p-0176" num="0145">However, in order for the averages of different order modules to be comparable, they must all have the same dimensions. A conventional second-order correlation involves averages of two-input multiplications and hence of quantities with the dimensions of energy or power. Thus, the terms to be averaged in higher order correlations must be modified also to have the dimensions of power. For a kth order correlation, the individual product absolute values must therefore be raised to the power 2/k before being averaged.</p><p id="p-0177" num="0146">Of course, regardless of the order, the individual input energies of a module, if needed, can be calculated as the average of the square of the corresponding input signal, and need not be first raised to the kth power and then reduced to a second order quantity.</p><p id="p-0178" num="0147">Returning to the description of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, the transform bin outputs of each of the blocks may be grouped into subbands by a respective function or device <b>407</b>, <b>409</b> and <b>411</b>. The subbands may approximate the human ear's critical bands, for example. The remainder of the module embodiment of <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref> operates separately and independently on each subband. In order to simplify the drawing, only the operation on one subband is shown.</p><p id="p-0179" num="0148">Each subband from blocks <b>407</b>, <b>409</b> and <b>411</b> is applied to a frequency smoother or frequency smoothing function <b>413</b>, <b>415</b> and <b>417</b> (hereinafter &#x201c;frequency smoother&#x201d;), respectively. The purpose of the frequency smoothers is explained below. Each frequency-smoothed subband from a frequency smoother is applied to optional &#x201c;fast&#x201d; smoothers or smoothing functions <b>419</b>, <b>421</b> and <b>423</b> (hereinafter &#x201c;fast smoothers&#x201d;), respectively, that provide time-domain smoothing. Although preferred, the fast smoothers may be omitted when the time constant of the fast smoothers is close to the block length time of the forward transform that generated the input bins (for example, a forward transform in supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;). The fast smoothers are &#x201c;fast&#x201d; relative to the &#x201c;slow&#x201d; variable time constant smoothers or smoother functions <b>425</b>, <b>427</b> and <b>429</b> (hereinafter &#x201c;slow smoothers&#x201d;) that receive the respective outputs of the fast smoothers. Examples of fast and slow smoother time constant values are given below.</p><p id="p-0180" num="0149">Thus, whether fast smoothing is provided by the inherent operation of a forward transform or by a fast smoother, a two-stage smoothing action is preferred in which the second, slower, stage is variable. However, a single stage of smoothing may provide acceptable results.</p><p id="p-0181" num="0150">The time constants of the slow smoothers preferably are in synchronism with each other within a module. This may be accomplished, for example, by applying the same control information to each slow smoother and by configuring each slow smoother to respond in the same way to applied control information. The derivation of the information for controlling the slow smoothers is described below.</p><p id="p-0182" num="0151">Preferably, each pair of smoothers are in series, in the manner of the pairs <b>419</b>/<b>425</b>, <b>421</b>/<b>427</b> and <b>423</b>/<b>429</b> as shown in <figref idref="DRAWINGS">FIGS. <b>4</b>A and <b>4</b>B</figref>, in which a fast smoother feeds a slow smoother. A series arrangement has the advantage that the second stage is resistant to short rapid signal spikes at the input of the pair. However, similar results may be obtained by configuring the pairs of smoothers in parallel. For example, in a parallel arrangement the resistance of the second stage in a series arrangement to short rapid signal spikes may be handled in the logic of a time constant controller.</p><p id="p-0183" num="0152">Each stage of the two-stage smoothers may be implemented by a single-pole lowpass filter (a &#x201c;leaky integrator&#x201d;) such as an RC lowpass filter (in an analog embodiment) or, equivalently, a first-order lowpass filter (in a digital embodiment). For example, in a digital embodiment, the first-order filters may each be realized as a &#x201c;biquad&#x201d; filter, a general second-order IIR filter, in which some of the coefficients are set to zero so that the filter functions as a first-order filter. Alternatively, the two smoothers may be combined into a single second-order biquad stage, although it is simpler to calculate coefficient values for the second (variable) stage if it is separate from the first (fixed) stage.</p><p id="p-0184" num="0153">It should be noted that in the embodiment of <figref idref="DRAWINGS">FIGS. <b>4</b>A, <b>4</b>Band <b>4</b>C</figref>, all signal levels are expressed as energy (squared) levels, unless an amplitude is required by taking a square root. Smoothing is applied to the energy levels of applied signals, making the smoothers RMS sensing, instead of average sensing, (average sensing smoothers are fed by linear amplitudes). Because the signals applied to the smoothers are squared-levels, the smoothers react to sudden increases in signal level more quickly than average-smoothers, since increases are magnified by the squaring function.</p><p id="p-0185" num="0154">The two-stage smoothers thus provide a time average for each subband of each input channel's energy (that of the 1st channel is provided by slow smoother <b>425</b> and that of the mth channel by slow smoother <b>427</b>) and the average for each subband of the input channels' common energy (provided by slow smoother <b>429</b>).</p><p id="p-0186" num="0155">The average energy outputs of the slow smoothers (<b>425</b>, <b>427</b>, <b>429</b>) are applied to combiners <b>431</b>, <b>433</b> and <b>435</b>, respectively, in which (1) the neighbor energy levels (if any) (from supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/B&#x2032;, for example) are subtracted from the smoothed energy level of each of the input channels, and (2) the higher-order neighbor energy levels (if any) (from supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, for example) are subtracted from each of the slow smoother's average energy outputs. For example, each module receiving input <b>3</b>&#x2032; (<figref idref="DRAWINGS">FIGS. <b>1</b>A, <b>2</b>A</figref>/B and <b>2</b>A&#x2032;/B&#x2032;) has two neighboring modules and receives neighbor energy level information that compensates for the effect of those two neighboring modules. However, neither of those modules is a &#x201c;higher-order&#x201d; module (i.e., all modules sharing input channel <b>3</b>&#x2032; are two-input modules). In contrast, module <b>28</b> (<figref idref="DRAWINGS">FIGS. <b>1</b>A, <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;) is an example of a module that has a higher-order module sharing one of its inputs. Thus, for example, in module <b>28</b>, the average energy output from a slow smoother for input <b>13</b>&#x2032; receives higher-order neighbor level compensation.</p><p id="p-0187" num="0156">The resulting &#x201c;neighbor-compensated&#x201d; energy levels for each subband of each of the module's inputs are applied to a function or device <b>437</b> that calculates a nominal ongoing primary direction of those energy levels. The direction indication may be calculated as the vector sum of the energy-weighted inputs. For a two input module, this simplifies to being the L/R ratio of the smoothed and neighbor-compensated input signal energy levels.</p><p id="p-0188" num="0157">Assume, for example, a planar surround array in which the positions of the channels are given as 2-ples representing x, y coordinates for the case of two inputs. The listener in the center is assumed to be at, say, (0, 0). The left front channel, in normalized spatial coordinates, is at (1, 1). The right front channel is at (-1, 1). If the left input amplitude (Lt) is 4 and the right input amplitude (Rt) is 3, then, using those amplitudes as weighting factors, the nominal ongoing primary direction is:</p><p id="p-0189" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(4*(1, 1)+3*(&#x2212;1, 1))/(4+3)=(0.143, 1),<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0190" num="0000">or slightly to the left of center on a horizontal line connecting Left and Right.</p><p id="p-0191" num="0158">Alternatively, once a master matrix is defined, the spatial direction may be expressed in matrix coordinates, rather than physical coordinates. In that case, the input amplitudes, normalized to sum-square to one, are the effective matrix coordinates of the direction. In the above example, the left and right levels are 4 and 3, which normalize to 0.8 and 0.6. Consequently, the &#x201c;direction&#x201d; is (0.8, 0.6). In other words, the nominal ongoing primary direction is a sum-square-to-one-normalized version of the square root of the neighbor-compensated smoothed input energy levels. Block <b>337</b> produces the same number of outputs, indicating a spatial direction, as there are inputs to the module (two in this example).</p><p id="p-0192" num="0159">The neighbor-compensated smoothed energy levels for each subband of each of the module's inputs applied to the direction-determining function or device <b>337</b> are also applied to a function or device <b>339</b> that calculates the neighbor-compensated cross-correlation (&#x201c;neighbor-compensated_xcor&#x201d;). Block <b>339</b> also receives as an input the averaged common energy of the module's inputs for each subband from slow variable smoother <b>329</b>, which has been compensated in combiner <b>335</b> by higher-order neighbor energy levels, if any. The neighbor-compensated cross-correlation is calculated in block <b>339</b> as the higher-order compensated smoothed common energy divided by the Mth root, where M is the number of inputs, of the product of the neighbor-compensated smoothed energy levels for each of the module's input channels to derive a true mathematical correlation value in the range 1.0 to &#x2212;1.0. Preferably, values from 0 to &#x2212;1.0 are taken to be zero. Neighbor-compensated_xcor provides an estimate of the cross-correlation that exists in the absence of other modules.</p><p id="p-0193" num="0160">The neighbor-compensated_xcor from block <b>339</b> is then applied to a weighting device or function <b>341</b> that weights the neighbor-compensated_xcor with the neighbor-compensated direction information to produce a direction-weighted neighbor-compensated cross-correlation (&#x201c;direction-weighted_xcor&#x201d;). The weighting increases as the nominal ongoing primary direction departs from a centered condition. In other words, unequal input amplitudes (and, hence, energies) cause a proportional increase in direction-weighted_xcor. Direction-weighted_xcor provides an estimate of image compactness. Thus, in the case of a two input module having, for example, left L and right R inputs, the weighting increases as the direction departs from center toward either left or right (i.e., the weighting is the same in any direction for the same degree of departure from the center). For example, in the case of a two input module, the neighbor-compensated_xcor value is weighted by an L/R or R/L ratio, such that uneven signal distribution urges the direction-weighted_xcor toward 1.0. For such a two-input module,<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0161">when R&#x3e;=L.</li>    </ul>    </li></ul></p><p id="p-0194" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>direction-weighted_xcor=(1&#x2212;((1&#x2212;neighbor-compensated_xcor)*(<i>L/R</i>)),<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0195" num="0162">and<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0163">when R&#x3c;L,</li>    </ul>    </li></ul></p><p id="p-0196" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>direction-weighted_xcor=(1&#x2212;((1&#x2212;neighbor-compensated_xcor)*(<i>R/L</i>))<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0197" num="0164">Alternatively, a weighted cross correlation (WgtXcor) may be obtained in other ways. For example:</p><p id="p-0198" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>let <i>A=</i>(|<i>L*L|&#x2212;|R*R</i>|)/(|<i>L*L|+|R*R</i>|)) (normalized input power difference) (where &#x201c;| . . . |,&#x201d; indicates an averaging), and<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0199" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>let <i>B=</i>2*|<i>L*R</i>|/(|<i>L*L|+R*R</i>|)) (normalized input cross power) (where &#x201c;| . . . |,&#x201d; indicates an averaging).<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0200" num="0165">Then, one may use:</p><p id="p-0201" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>WgtXcor=<i>A+B, </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0202" num="0166">or, using sum of squares:</p><p id="p-0203" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>WgtXcor=Sqrt(<i>A*A+B*B</i>).<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0204" num="0000">In either case, WgtXcor approaches 1 as L or R approaches 0, regardless of the value of |L*R|.</p><p id="p-0205" num="0167">For modules with more than two inputs, calculation of the direction-weighted_xcor from the neighbor-weighted xcor requires, for example, replacing the ratio L/R or R/L in the above by an &#x201c;evenness&#x201d; measure that varies between 1.0 and 0. For example, to calculate the evenness measure for any number of inputs, normalize the input signal levels by the total input power, resulting in normalized input levels that sum in an energy (squared) sense to 1.0. Divide each normalized input level by the similarly normalized input level of a signal centered in the array. The smallest ratio becomes the evenness measure. Therefore, for example, for a three-input module with one input having zero level, the evenness measure is zero, and the direction-weighted_xcor is equal to one. (In that case, the signal is on the border of the three-input module, on a line between two of its inputs, and a two-input module (lower in the hierarchy) decides where on the line the nominal ongoing primary direction is, and how wide along that line the output signal should be spread.)</p><p id="p-0206" num="0168">Returning to the description of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the direction-weighted_xcor is weighted further by its application to a function or device <b>443</b> that applies a &#x201c;random_xcor&#x201d; weighting to produce an &#x201c;effective_xcor&#x201d;. Effective_xcor provides an estimate of the input signals' distribution shape.</p><p id="p-0207" num="0169">Random_xcor is the average cross product of the input magnitudes divided by the square root of the average input energies. The value of random_xcor may be calculated by assuming that the output channels were originally module input channels, and calculating the value of xcor that results from all those channels having independent but equal-level signals, being passively downmixed. According to this approach, for the case of a three-output module with two inputs, random_xcor calculates to 0.333, and for the case of a five-output module (three interior outputs) with two inputs, random_xcor calculates to 0.483. The random_xcor value need only be calculated once for each module. Although such random_xcor values have been found to provide satisfactory results, the values are not critical and other values may be employed at the discretion of the system designer. A change in the value of random_xcor affects the dividing line between the two regimes of operation of the signal distribution system, as described below. The precise location of that dividing line is not critical.</p><p id="p-0208" num="0170">The random_xcor weighting performed by function or device <b>343</b> may be considered to be a renormalization of the direction-weighted_xcor value such that an effective_xcor is obtained:</p><p id="p-0209" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>effective_xcor=(direction-weighted_xcor&#x2212;random_xcor)/(1&#x2212;random_xcor), if direction-weighted_xcor&#x3e;=random_xcor, effective_xcor=0 otherwise<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0210" num="0171">Random_xcor weighting accelerates the reduction in direction-weighted_xcor as direction-weighted_xcor decreases below 1.0, such that when direction-weighted_xcor equals random_xcor, the effective_xcor value is zero. Because the outputs of a module represent directions along an arc or a line, values of effective_xcor less than zero are treated as equal to zero.</p><p id="p-0211" num="0172">Information for controlling the slow smoothers <b>325</b>, <b>327</b> and <b>329</b> is derived from the non-neighbor-compensated slow and fast smoothed input channels' energies and from the slow and fast smoothed input channels' common energy. In particular, a function or device <b>345</b> calculates a fast non-neighbor compensated cross-correlation in response to the fast smoothed input channels' energies and the fast smoothed input channels' common energy. A function or device <b>347</b> calculates a fast non-neighbor compensated direction (ratio or vector, as discussed above in connection with the description of block <b>337</b>) in response to the fast smoothed input channel energies. A function or device <b>349</b> calculates a slow non-neighbor compensated cross-correlation in response to the slow smoothed input channels' energies and the slow smoothed input channels' common energy. A function or device <b>351</b> calculates a slow non-neighbor compensated direction (ratio or vector, as discussed above) in response to the slow smoothed input channel energies. The fast non-neighbor compensated cross-correlation, fast non-neighbor compensated direction, slow non-neighbor compensated cross-correlation and slow non-neighbor compensated cross-correlation, along with direction-weighted_xcor from block <b>341</b>, are applied to a device or function <b>353</b> that provides the information for controlling the variable slow smoothers <b>325</b>, <b>327</b> and <b>329</b> to adjust their time constants (hereinafter &#x201c;adjust time constants&#x201d;). Preferably, the same control information is applied to each variable slow smoother. Unlike the other quantities fed to the time constant selection box, which compare a fast to a slow measure, the direction-weighted_xcor preferably is used without reference to any fast value, such that if the absolute value of the direction-weighted_xcor is greater than a threshold, it may cause adjust time constants <b>353</b> to select a faster time constant. Rules for operation of &#x201c;adjust time constants&#x201d; <b>353</b> are set forth below.</p><p id="p-0212" num="0173">Generally, in a dynamic audio system, it is desirable to use slow time constants as much as possible, staying at a quiescent value, to minimize audible disruption of the reproduced soundfield, unless a &#x201c;new event&#x201d; occurs in the audio signal, in which case it is desirable for a control signal to change rapidly to a new quiescent value, then remain at that value until another &#x201c;new event&#x201d; occurs. Typically, audio processing systems have equated changes in amplitude with a &#x201c;new event.&#x201d; However, when dealing with cross products or cross-correlation, newness and amplitude do not always equate: a new event may cause a decrease in the cross-correlation. By sensing changes in parameters relevant to the module's operation, namely measures of cross-correlation and direction, a module's time constants may speed up and rapidly assume a new control state as desired.</p><p id="p-0213" num="0174">The consequences of improper dynamic behavior include image wandering, chattering (a channel rapidly turning on and off), pumping (unnatural changes in level), and, in a multiband embodiment, chirping (chattering and pumping on a band-by-band basis). Some of these effects are especially critical to the quality of isolated channels.</p><p id="p-0214" num="0175">Embodiments such as those of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>2</b>A</figref>/<b>2</b>B and of <figref idref="DRAWINGS">FIGS. <b>1</b>B and <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032; employ a lattice of decoding modules. Such a configuration results in two classes of dynamics problems: inter- and intra-module dynamics. In addition, the several ways to implement the audio processing (for example wideband, multiband using FFT or MDCT linear filterbank, or discrete filterbank, critical band or otherwise) each require its own dynamic behavior optimization.</p><p id="p-0215" num="0176">The basic decoding process within each module depends on a measure of energy ratios of the input signals and a measure of cross-correlation of the input signals, (in particular, the direction-weighted correlation (direction-weighted_xcor), described above; the output of block <b>341</b> in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>), which, together, control signal distribution among the outputs of a module. Derivation of such basic quantities requires smoothing, which, in the time domain, requires computing a time-weighted average of the instantaneous values of those quantities. The range of required time constants is quite large: very short (1 msec, for example) for fast transient changes in signal conditions, to very long (150 msec, for example) for low values of correlation, where the instantaneous variation is likely to be much greater than the true averaged value.</p><p id="p-0216" num="0177">A common method of implementing variable time constant behavior is, in analog terms, the use of a &#x201c;speed-up&#x201d; diode. When the instantaneous level exceeds the averaged level by a threshold amount, the diode conducts, resulting in a shorter effective time constant. A drawback of this technique is that a momentary peak in an otherwise steady-state input may cause a large change in the smoothed level, which then decays very slowly, providing unnatural emphasis of isolated peaks that would otherwise have little audible consequence.</p><p id="p-0217" num="0178">The correlation calculation described in connection with the embodiment of <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref> makes the use of speedup diodes (or their DSP equivalent) problematical. For example, all smoothers within a particular module preferably have synchronized time constants, so that their smoothed levels are comparable. Therefore, a global (ganged) time constant switching mechanism is preferred. Additionally, a rapid change in signal conditions is not necessarily associated with an increase in common energy level. Using a speedup diode for this level is likely to produce biased, inaccurate estimates of correlation. Therefore, embodiments of aspects of the present invention preferably use two-stage smoothing without a diode-equivalent speedup. Estimates of correlation and direction may be derived at least from both the first and second stages of the smoothers to set the time constant of the second stage.</p><p id="p-0218" num="0179">For each pair of smoothers (e.g., <b>319</b>/<b>325</b>), the first stage, the fixed fast stage, time constant may be set to a fixed value, such as 1 msec. The second stage, variable slow stage, time constants may be, for example, selectable among 10 msec (fast), 30 msec (medium), and 150 msec (slow). Although such time constants have been found to provide satisfactory results, their values are not critical and other values may be employed at the discretion of the system designer. In addition, the second stage time constant values may be continuously variable rather than discrete. Selection of the time constants may be based not only on the signal conditions described above, but also on a hysteresis mechanism using a &#x201c;fast flag&#x201d;, which is used to ensure that once a genuine fast transition is encountered, the system remains in fast mode, avoiding the use of the medium time constant, until the signal conditions re-enable the slow time constant. This may help assure rapid adaptation to new signal conditions.</p><p id="p-0219" num="0180">Selecting which of the three possible second-stage time constants to use may be accomplished by &#x201c;adjust time constants&#x201d; <b>353</b> in accordance with the following rules for the case of two inputs:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0181">If the absolute value of direction-weighted_xcor is less than a first reference value (0.5, for example) and the absolute difference between fast non-neighbor-compensated_xcor and slow non-neighbor-compensated_xcor is less than the same first reference value, and the absolute difference between the fast and slow direction ratios (each of which has a range +1 to &#x2212;1) is less than the same first reference value, then the slow second stage time constant is used, and the fast flag is set to True, enabling subsequent selection of the medium time constant.</li>        <li id="ul0010-0002" num="0182">Else, if the fast flag is True, the absolute difference between the fast and slow non-neighbor-compensated_xcor is greater than the first reference value and less than a second reference value (0.75, for example), the absolute difference between the fast and slow temporary L/R ratios is greater than the first reference value and less than the second reference value, and the absolute value of direction-weighted_xcor is greater than the first reference value and less than the second reference value, then the medium second stage time constant is selected.</li>        <li id="ul0010-0003" num="0183">Else, the fast second stage time constant is used, and the fast flag is set to False, disabling subsequent use of the medium time constant until the slow time constant is again selected.</li>    </ul>    </li></ul></p><p id="p-0220" num="0184">In other words, the slow time constant is chosen when all three conditions are less than a first reference value, the medium time constant is chosen when all conditions are between a first reference value and a second reference value and the prior condition was the slow time constant, and the fast time constant is chosen when any of the conditions are greater than the second reference value.</p><p id="p-0221" num="0185">Although the just-stated rules and reference values have been found to produce satisfactory results, they are not critical and variations in the rules or other rules that take fast and slow cross-correlation and fast and slow direction into account may be employed at the discretion of the system designer. In addition, other changes may be made. For example, it may be simpler but equally effective to use diode-speedup type processing, but with ganged operation so that if any smoother in a module is in fast mode, all the other smoothers are also switched to fast mode. It may also be desirable to have separate smoothers for time constant determination and signal distribution, with the smoothers for time constant determination maintained with fixed time constants, and only the signal distribution time constants varied.</p><p id="p-0222" num="0186">Because, even in fast mode, the smoothed signal levels require several milliseconds to adapt, a time delay may be built into the system to allow control signals to adapt before applying them to a signal path. In a wideband embodiment, this delay may be realized as a discrete delay (5 msec, for example) in the signal path. In multiband (transform) versions, the delay is a natural consequence of block processing, and if analysis of a block is performed before signal path matrixing of that block, no explicit delay may be required.</p><p id="p-0223" num="0187">Multiband embodiments of aspects of the invention may use the same time constants and rules as wideband versions, except that the sampling rate of the smoothers may be set to the signal sampling rate divided by the block size, (e.g., the block rate), so that the coefficients used in the smoothers are adjusted appropriately.</p><p id="p-0224" num="0188">For frequencies below 400 Hz, in multiband embodiments, the time constants preferably are scaled inversely to frequency. In the wideband version, this is not possible inasmuch as there are no separate smoothers at different frequencies, so, as partial compensation, a gentle bandpass/preemphasis filter may be applied to the input signal to the control path, to emphasize middle and upper-middle frequencies. This filter may have, for example, a two-pole highpass characteristic with a corner frequency at 200 Hz, plus a 2-pole lowpass characteristic with a corner frequency at 8000 Hz, plus a preemphasis network applying 6 dB of boost from 400 Hz to 800 Hz and another 6 dB of boost from 1600 Hz to 3200 Hz. Although such a filter has been found suitable, the filter characteristics are not critical and other parameters may be employed at the discretion of the system designer.</p><p id="p-0225" num="0189">In addition to time-domain smoothing, multiband versions of aspects of the invention preferably also employ frequency-domain smoothing, as described above in connection with <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> (frequency smoothers <b>413</b>, <b>415</b> and <b>417</b>). For each block, the non- neighbor-compensated energy levels may be averaged with a sliding frequency window, adjusted to approximate a &#x2153;-octave (critical band) bandwidth, before being applied to the subsequent time-domain processing described above. Since the transform-based filterbanks have intrinsically linear frequency resolution, the width of this window (in number of transform coefficients) increases with increasing frequency, and is usually only one transform coefficient wide at low frequencies (below about 400 Hz). Therefore, the total smoothing applied to the multiband processing relies more on time domain smoothing at low frequencies, and frequency-domain smoothing at higher frequencies, where rapid time response is likely to be more necessary at times.</p><p id="p-0226" num="0190">Turning to the description of <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>, preliminary scale factors (shown as &#x201c;PSFs&#x201d; in <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>2</b></figref>&#x2032;), which ultimately affect the dominant/fill/endpoint signal distribution, may be produced by a combination of devices or functions <b>455</b>, <b>457</b> and <b>459</b> that calculate &#x201c;dominant&#x201d; scale factor components, &#x201c;fill&#x201d; scale factor components and &#x201c;excess endpoint energy&#x201d; scale factor components, respectively, respective normalizers or normalizer functions <b>361</b>, <b>363</b> and <b>365</b>, and a device or function <b>367</b> that takes either the greatest of the dominant and fill scale factor components and/or the additive combination of the fill and excess endpoint energy scale factor components. The preliminary scale factors may be sent to a supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032; if the module is one of a plurality of modules. Preliminary scale factors may each have a range from zero to one.</p><heading id="h-0015" level="1">Dominant Scale Factor Components</heading><p id="p-0227" num="0191">In addition to effective_xcor, device or function <b>355</b> (&#x201c;calculate dominant scale factor components&#x201d;) receives the neighbor-compensated direction information from block <b>337</b> and information regarding the local matrix coefficients from a local matrix <b>369</b>, so that it may determine the N nearest output channels (where N=number of inputs) that can be applied to a weighted sum to yield the nominal ongoing primary direction coordinates and apply the &#x201c;dominant&#x201d; scale factor components to them to yield the dominant coordinates. The output of block <b>355</b> is either one scale factor component (per subband) if the nominal ongoing primary direction happens to coincide with an output direction or, otherwise, multiple scale factor components (one per the number of inputs per subband) bracketing the nominal ongoing primary direction and applied in appropriate proportions so as to pan or map the dominant signal to the correct virtual location in a power-preserving sense (i.e., for N=2, the two assigned dominant-channel scale factor components should sum-square to effective_xcor).</p><p id="p-0228" num="0192">For a two-input module, all the output channels are in a line or arc, so there is a natural ordering (from &#x201c;left&#x201d; to &#x201c;right&#x201d;), and it is readily apparent which channels are next to each other. For the hypothetical case discussed above having two input channels and five output channels with sin/cos coefficients as shown, the nominal ongoing primary direction may be assumed to be (0.8, 0.6), between the Middle Left ML channel (0.92, 0.38) and the center C channel (0.71, 0.71). This may be accomplished by finding two consecutive channels where the L coefficient is larger than the nominal ongoing primary direction L coordinate, and the channel to its right has an L coefficient less than the dominant L coordinate.</p><p id="p-0229" num="0193">The dominant scale factor components are apportioned to the two closest channels in a constant power sense. To do this, a system of two equations and two unknowns is solved, the unknowns being the dominant-component scale factor component of the channel to the left of the dominant direction (SFL), and the corresponding scale factor component to the right of the nominal ongoing primary direction (SFR) (these equations are solved for SFL and SFR).</p><p id="p-0230" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>first_dominant_coord=SFL*left-channel matrix value 1+SFR*right-channel matrix value 1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0231" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>second_dominant_coord=SFL*left-channel matrix value 2+SFR*right-channel matrix value 2<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0232" num="0000">Note that left- and right-channel means the channels bracketing the nominal ongoing primary direction, not the L and R input channels to the module.</p><p id="p-0233" num="0194">The solution is the anti-dominant level calculations of each channel, normalized to sum-square to 1.0, and used as dominant distribution scale factor components (SFL, SFR), each for the other channel. In other words, the anti-dominant value of an output channel with coefficients A, B for a signal with coordinates C, D is the absolute value of AD&#x2212;BC. For the numerical example under consideration:</p><p id="p-0234" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Antidom (ML channel)=abs(0.92*0.6&#x2212;0.38*0.8)=0.248<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0235" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Antidom (C channel)=abs(0.71*0.6&#x2212;0.71*0.8)=0.142<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0011" list-style="none">    <li id="ul0011-0001" num="0000">    <ul id="ul0012" list-style="none">        <li id="ul0012-0001" num="0195">(where &#x201c;abs&#x201d; indicates taking the absolute value).</li>    </ul>    </li></ul></p><p id="p-0236" num="0196">Normalizing the latter two numbers to sum-square to 1.0 yields values of 0.8678 and 0.4969 respectively. Thus, switching these values to the opposite channels, the dominant scale factor components are (note that the value of the dominant scale factor, prior to direction weighting, is the square root of effective_xcor):</p><p id="p-0237" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>ML dom sf=0.4969*sqrt(effective_xcor)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0238" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>C dom sf=0.8678*sqrt(effective_xcor)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0013" list-style="none">    <li id="ul0013-0001" num="0000">    <ul id="ul0014" list-style="none">        <li id="ul0014-0001" num="0197">(the dominant signal is closer to Cout than MidLout).</li>    </ul>    </li></ul></p><p id="p-0239" num="0198">The use of one channel's antidom component, normalized, as the other channel's dominant scale factor component may be better understood by considering what happens if the nominal ongoing primary direction happens to point exactly at one of the two chosen channels. Suppose that one channel's coefficients are [A, B] and the other channel's coefficients are [C, D] and the nominal ongoing primary direction coordinates are [A, B] (pointing to the first channel), then:</p><p id="p-0240" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Antidom (first chan)=abs(<i>AB&#x2212;BA</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0241" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Antidom (second chan)=abs(<i>CB&#x2212;DA</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0242" num="0199">Note that the first antidom value is zero. When the two antidom signals are normalized to sum-square to 1.0, the second antidom value is 1.0. When switched, the first channel receives a dominant scale factor component of 1.0 (times square root of effective_xcor) and the second channel receives 0.0, as desired.</p><p id="p-0243" num="0200">When this approach is extended to modules with more than two inputs, there is no longer a natural ordering that occurs when the channels are in a line or arc. Once again, block <b>337</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, for example, calculates the nominal ongoing primary direction coordinates by taking the input amplitudes, after neighbor compensation, and normalizing them to sum-square to one. Block <b>455</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, for example, then identifies the N nearest channels (where N=number of inputs) that can be applied to a weighted sum to yield the dominant coordinates. (Note: distance or nearness can be calculated as the sum of the coordinate differences squared, as if they were (x, y, z) spatial coordinates). Thus, one does not always pick the N nearest channels because they have to be weight-summed to yield the nominal ongoing primary direction.</p><p id="p-0244" num="0201">For example, suppose one has a three input module fed by a triangle of channels: Ls, Rs, and Top as in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Assume there are three interior output channels close together near the bottom of the triangle, with module local matrix coefficients [0.71, 0.69, 0.01], [0.70, 0.70, 0.01], and [0.69. 0.71, 0.01], respectively. Assume that the nominal ongoing primary direction is slightly below the center of the triangle, with coordinates [0.6, 0.6, 0.53]. (Note: the middle of the triangle has coordinates [0.5, 0.5, 0.707].) The three nearest channels to the nominal ongoing primary direction are those three interior channels at the bottom, but they do not sum to the dominant coordinates using scale factors between 0 and 1, so instead one chooses two from the bottom and the top endpoint channel to distribute the dominant signal, and solve the three equations for the three weighting factors in order to complete the dominant calculation and proceed to the fill and endpoint calculations.</p><p id="p-0245" num="0202">In the examples of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>2</b>A</figref>/<b>2</b>B, there is only one three-input module and it is used to derive only one interior channel, which simplifies the calculations.</p><heading id="h-0016" level="1">Fill Scale Factor Components</heading><p id="p-0246" num="0203">In addition to effective_xcor, device or function <b>357</b> (&#x201c;calculate fill scale factor components&#x201d;) receives random_xcor, direction-weighted_xcor from block <b>341</b>, &#x201c;EQUIAMPL&#x201d; (&#x201c;EQUIAMPL&#x201d; is defined and explained below), and information regarding the local matrix coefficients from the local matrix (in case the same fill scale factor component is not applied to all outputs, as is explained below in connection with <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>). The output of block <b>457</b> is a scale factor component for each module output (per subband).</p><p id="p-0247" num="0204">As explained above, effective_xcor is zero when the direction-weighted_xcor is less than or equal to random_xcor. When direction-weighted_xcor&#x3e;=random_xcor, the fill scale factor component for all output channels is</p><p id="p-0248" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>fill scale factor component=sqrt(1&#x2212;effective_xcor)*EQUIAMPL<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0249" num="0205">Thus, when direction-weighted_xcor=random_xcor, the effective_xcor is 0, so (1&#x2212;effective_xcor) is 1.0, so the fill amplitude scale factor component is equal to EQUIAMPL (ensuring output power=input power in that condition). That point is the maximum value that the fill scale factor components reach.</p><p id="p-0250" num="0206">When weighted_xcor is less than random_xcor, the dominant scale factor component(s) is (are) zero and the fill scale factor components are reduced to zero as the direction-weighted_xcor approaches zero:</p><p id="p-0251" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>fill scale factor component=sqrt(direction-weighted_xcor/random_xcor)*EQUIAMPL<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0252" num="0207">Thus, at the boundary, where direction-weighted_xcor=random_xcor, the fill preliminary scale factor component is again equal to EQUIAMPL, assuring continuity with the results of the above equation for the case of direction-weighted_xcor greater than random_xcor.</p><p id="p-0253" num="0208">Associated with every decoder module is not only a value of random_xcor but also a value of &#x201c;EQUIAMPL&#x201d;, which is a scale factor value that all the scale factors should have if the signals are distributed equally such that power is preserved, namely:</p><p id="p-0254" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>EQUIAMPL=square_root_of (Number of decoder module input channels/Number of decoder module output channels)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0255" num="0209">For example, for a two-input module with three outputs:</p><p id="p-0256" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>EQUIAMPL=sqrt(2/3)=0.8165<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0015" list-style="none">    <li id="ul0015-0001" num="0000">    <ul id="ul0016" list-style="none">        <li id="ul0016-0001" num="0210">where &#x201c;sqrt( )&#x201d; means &#x201c;square_root_of ( ) &#x201d;</li>    </ul>    </li></ul></p><p id="p-0257" num="0211">For a two-input module with 4 outputs:</p><p id="p-0258" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>EQUIAMPL=sqrt(2/4)=0.7071<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0259" num="0212">For a two-input module with 5 outputs:</p><p id="p-0260" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>EQUIAMPL=sqrt(2/5)=0.6325<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0261" num="0213">Although such EQUIAMPL values have been found to provide satisfactory results, the values are not critical and other values may be employed at the discretion of the system designer. Changes in the value of EQUIAMPL affect the levels of the output channels for the &#x201c;fill&#x201d; condition (intermediate correlation of the input signals) with respect to the levels of the output channels for the &#x201c;dominant&#x201d; condition (maximum condition of the input signals) and the &#x201c;all endpoints&#x201d; condition (minimum correlation of the input signals).</p><heading id="h-0017" level="1">Endpoint Scale Factor Components</heading><p id="p-0262" num="0214">In addition to neighbor-compensated_xcor (from block <b>439</b>, <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>), device or function <b>359</b> (&#x201c;calculate excess endpoint energy scale factor components&#x201d;) receives the respective 1st through the mth input's smoothed non-neighbor-compensated energy (from blocks <b>325</b> and <b>327</b>) and, optionally, information regarding the local matrix coefficients from the local matrix (in case either or both of the endpoint outputs of the module do not coincide with an input and the module applies excess endpoint energy to the two outputs having directions closest to the input's direction, as discussed further below). The output of block <b>359</b> is a scale factor component for each endpoint output if the directions coincide with input directions, otherwise two scale factor components, one for each of the outputs nearest the end, as is explained below.</p><p id="p-0263" num="0215">However, the excess endpoint energy scale factor components produced by block <b>359</b> are not the only &#x201c;endpoint&#x201d; scale factor components. There are three other sources of endpoint scale factor components (two in the case of a single, stand-alone module):<ul id="ul0017" list-style="none">    <li id="ul0017-0001" num="0000">    <ul id="ul0018" list-style="none">        <li id="ul0018-0001" num="0216">First, within a particular module's preliminary scale factor calculations, the endpoints are possible candidates for dominant signal scale factor components by block <b>355</b> (and normalizer <b>361</b>).</li>        <li id="ul0018-0002" num="0217">Second, in the &#x201c;fill&#x201d; calculation of block <b>357</b> (and normalizer <b>363</b>) of <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>, the endpoints are treated as possible fill candidates, along with all the interior channels. Any non-zero fill scale factor component may be applied to all outputs, even the endpoints and the chosen dominant outputs.</li>        <li id="ul0018-0003" num="0218">Third, if there is a lattice of multiple modules, a supervisor (such as supervisor <b>201</b> of the <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032; examples) performs a final, fourth, assignment of the &#x201c;endpoint&#x201d; channels, as described above in connection with <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B, <b>2</b>A&#x2032;/<b>2</b>B&#x2032; and <b>3</b>.</li>    </ul>    </li></ul></p><p id="p-0264" num="0219">In order for block <b>459</b> to calculate the &#x201c;excess endpoint energy&#x201d; scale factor components, the total energy at all interior outputs is reflected back to the module's inputs, based on neighbor-compensated_xcor, to estimate how much of the energy of interior outputs is contributed by each input (&#x201c;interior energy at input &#x2018;n&#x2019;&#x201d;), and that energy is used to compute the excess endpoint energy scale factor component at each module output that is coincident with an input (i.e., an endpoint).</p><p id="p-0265" num="0220">Reflecting the interior energy back to the inputs is also required in order to provide information needed by a supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, to calculate neighbor levels and higher-order neighbor levels. One way to calculate the interior energy contribution at each of a module's inputs and to determine the excess endpoint scale factor component for each endpoint output is shown in <figref idref="DRAWINGS">FIGS. <b>6</b>A and <b>6</b>B</figref>.</p><p id="p-0266" num="0221"><figref idref="DRAWINGS">FIGS. <b>6</b>A and <b>6</b>B</figref> are functional block diagrams showing, respectively, in a module, such as any one of modules <b>24</b>-<b>34</b> of <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>/<b>2</b>B and any one of modules <b>24</b>-<b>28</b> and <b>29</b>&#x2032;-<b>35</b>&#x2032; of <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;, one suitable arrangement for (1) generating the total estimated interior energy for each input of a module, <b>1</b> through m, in response to the total energy at each input, <b>1</b> through m, and (2) in response to the neighbor-compensated_xcor (see <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the output of block <b>439</b>), generating an excess endpoint energy scale factor component for each of the module's endpoints. The total estimated interior energy for each input of a module, (<figref idref="DRAWINGS">FIG. <b>6</b>A</figref>) is required by the supervisor, in the case of a multiple module arrangement, and, in any case, by the module itself in order to generate the excess endpoint energy scale factor components.</p><p id="p-0267" num="0222">Using the scale factor components derived in blocks <b>455</b> and <b>457</b> of <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>, along with other information, the arrangement of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> calculates the total estimated energy at each interior output (but not its endpoint outputs). Using the calculated interior output energy levels, it multiples each output level by the matrix coefficient relating that output to each input [&#x201c;m&#x201d; inputs, &#x201c;m&#x201d; multipliers], which provides the energy contribution of that input to that output. For each input, it sums all the energy contributions of all the interior output channels to obtain the total interior energy contribution of that input. The total interior energy contribution of each input is reported to the supervisor and is used by the module to calculate the excess endpoint energy scale factor component for each endpoint output.</p><p id="p-0268" num="0223">Referring to <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> in detail, the smoothed total energy level for each module input (not neighbor-compensated, preferably) is applied to a set of multipliers, one multiplier for each of the module's interior outputs. For simplicity in presentation, <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> shows two inputs, &#x201c;<b>1</b>&#x201d; and &#x201c;m&#x201d; and two interior outputs &#x201c;X&#x201d; and &#x201c;Z&#x201d;. The smoothed total energy level for each module input is multiplied by a matrix coefficient (of the module's local matrix) that relates the particular input to one of the module's interior outputs (note that the matrix coefficients are their own inverses because matrix coefficients sum square to one). This is done for every combination of input and interior output. Thus, as shown in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the smoothed total energy level at input <b>1</b> (which may be obtained, for example at the output of the slow smoother <b>425</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>) is applied to a multiplier <b>601</b> that multiplies that energy level by a matrix coefficient relating interior output X to input <b>1</b>, providing a scaled output energy level component X<b>1</b> at output X. Similarly, multipliers <b>603</b>, <b>605</b> and <b>607</b> provide scaled energy level components Xm, Z<b>1</b> and Zm.</p><p id="p-0269" num="0224">The energy level components for each interior output (e.g., X<b>1</b> and Xm; Z<b>1</b> and Zm) are summed in combiners <b>611</b> and <b>613</b> in an amplitude/power manner in accordance with neighbor-compensated_xcor. If the inputs to a combiner are in phase, indicated by a neighbor-weighted cross correlation of 1.0, their linear amplitudes add. If they are uncorrelated, indicated by a neighbor-weighted cross correlation of zero, their energy levels add. If the cross-correlation is between one and zero, the sum is partly an amplitude sum and partly a power sum. In order to sum properly the inputs to each combiner, both the amplitude sum and the power sum are calculated and weighted by neighbor-compensated_xcor and (1&#x2212;neighbor-weighted_xcor), respectively. In order to obtain the weighted sum, either the square root of the power sum is taken, to obtain an equivalent amplitude, or the linear amplitude sum is squared to obtain its power level before doing the weighted sum. For example, taking the latter approach (weighted sum of powers), if the amplitude levels are 3 and 4 and neighbor-weighted_xcor is, the amplitude sum is 3+4=7, or a power level of 49 and the power energy sum is 9+16=25. So the weighted sum is 0.7*49+(1&#x2212;0.7)*25=41.8 (power energy level) or, taking the square root, 6.47.</p><p id="p-0270" num="0225">The summation products (X<b>1</b>+Xm; Z<b>1</b>+Zm) are multiplied by the scale factor components for each of the outputs, X and Z, in multipliers <b>613</b> and <b>615</b> to produce the total energy level at each interior output, which may be identified as X&#x2032; and Z&#x2032;. The scale factor component for each of the interior outputs is obtained from block <b>467</b> (<figref idref="DRAWINGS">FIG. <b>4</b>C</figref>). Note that the &#x201c;excess endpoint energy scale factor components&#x201d; from block <b>459</b> (<figref idref="DRAWINGS">FIG. <b>4</b>C</figref>) do not affect interior outputs and are not involved in the calculations performed by the <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> arrangement.</p><p id="p-0271" num="0226">The total energy level at each interior output, X&#x2032; and Z&#x2032; is reflected back to respective ones of the module's inputs by multiplying each by a matrix coefficient (of the module's local matrix) that relates the particular output to each of the module's inputs. This is done for every combination of interior output and input. Thus, as shown in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the total energy level X&#x2032; at interior output X is applied to a multiplier <b>617</b> that multiplies the energy level by a matrix coefficient relating interior output X to input <b>1</b> (which is the same as its inverse, as noted above), providing a scaled energy level component X<b>1</b>&#x2032; at input <b>1</b>.</p><p id="p-0272" num="0227">It should be noted that when a second order value, such as the total energy level X&#x2032;, is weighted by a first order value, such as a matrix coefficient, a second order weight is required. This is equivalent to taking the square root of the energy to obtain an amplitude, multiplying that amplitude by the matrix coefficient and squaring the result to get back to an energy value.</p><p id="p-0273" num="0228">Similarly, multipliers <b>619</b>, <b>621</b> and <b>623</b> provide scaled energy levels Xm', Z<b>1</b>&#x2032; and Zm'. The energy components relating to each output (e.g., X<b>1</b>&#x2032; and Z<b>1</b>&#x2032;, Xm' and Zm') are summed in combiners <b>625</b> and <b>627</b> in an amplitude / power manner, as described above in connection with combiners <b>611</b> and <b>613</b>, in accordance with neighbor-compensated_xcor. The outputs of combiners <b>625</b> and <b>627</b> represent the total estimated interior energy for inputs <b>1</b> and m, respectively. In the case of a multiple module lattice, this information is sent to the supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032;, so that the supervisor may calculate neighbor levels. The supervisor solicits all the total interior energy contributions of each input from all the modules connected to that input, then informs each module, for each of its inputs, what the sum of all the other total interior energy contributions was from all the other modules connected to that input. The result is the neighbor level for that input of that module. The generation of neighbor level information is described further below.</p><p id="p-0274" num="0229">The total estimated interior energy contributed by each of inputs <b>1</b> and m are also required by the module in order to calculate the excess endpoint energy scale factor component for each endpoint output. <figref idref="DRAWINGS">FIG. <b>6</b>B</figref> shows how such scale factor component information may be calculated. For simplicity in presentation, only the calculation of scale factor component information for one endpoint is show, it being understood that a similar calculation is performed for each endpoint output. The total estimated interior energy contributed by an input, such as input <b>1</b>, is subtracted in a combiner or combining function <b>629</b> from the smoothed total input energy for the same input, input <b>1</b> in this example (the same smoothed total energy level at input <b>1</b>, obtained, for example at the output of the slow smoother <b>425</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, which is applied to a multiplier <b>601</b>). The result of the subtraction is divided in divider or dividing function <b>631</b> by the smoothed total energy level for the same input <b>1</b>. The square root of the result of the division is taken in a square rooter or square rooting function <b>633</b>. It should be noted that the operation of the divider or dividing function <b>631</b> (and other dividers described herein) should include a test for a zero denominator. In that case, the quotient may be set to zero.</p><p id="p-0275" num="0230">If there is only a single stand-alone module, the endpoint preliminary scale factor components are thus determined by virtue of having determined the dominant, fill and excess endpoint energy scale factors.</p><p id="p-0276" num="0231">Thus, all output channels including endpoints have assigned scale factors, and one may proceed to use them to perform signal path matrixing. However, if there is a lattice of multiple modules, each one has assigned an endpoint scale factor to each input feeding it, so each input having more than one module connected to it has multiple scale factor assignments, one from each connected module. In this case, the supervisor (such as supervisor <b>201</b> of the <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032; examples) performs a final, fourth, assignment of the &#x201c;endpoint&#x201d; channels, as described above in connection with <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B, <b>2</b>A&#x2032;/<b>2</b>B&#x2032; and <b>3</b> that the supervisor determines final endpoint scale factors that override all the scale factor assignments made by individual modules as endpoint scale factors.</p><p id="p-0277" num="0232">In practical arrangements, there is no certainty that there is actually an output channel direction corresponding to an endpoint position, although this is often the case. If there is no physical endpoint channel, but there is at least one physical channel beyond the endpoint, the endpoint energy is panned to the physical channels nearest the end, as if it were a dominant signal component. In a horizontal array, this is the two channels nearest to the endpoint position, preferably using a constant-energy distribution (the two scale factors sum-square to 1.0). In other words, when a sound direction does not correspond to the position of a real sound channel, even if that direction is an endpoint signal, it is preferred to pan it to the nearest available pair of real channels, because if the sound slowly moved, it jumps suddenly from one output channel to another. Thus, when there is no physical endpoint sound channel, it is not appropriate to pan an endpoint signal to the one sound channel closest to the endpoint location unless there is no physical channel beyond the endpoint, in which case there is no choice other than to the one sound channel closes to the endpoint location.</p><p id="p-0278" num="0233">Another way to implement such panning is for the supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b>A</figref>/<b>2</b>B and <b>2</b>A&#x2032;/<b>2</b>B&#x2032; to generate &#x201c;final&#x201d; scale factors based on an assumption that each input also has a corresponding output channel (i.e., each corresponding input and output are coincident, representing the same location). Then, an output matrix, such as the variable matrix <b>203</b> of <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>/B or <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>&#x2032;/<b>2</b>B&#x2032;, may map an output channel to one or more appropriate output channels if there is no actual output channel that directly corresponds to an input channel.</p><p id="p-0279" num="0234">As mentioned above, the outputs of each of the &#x201c;calculate scale factor component&#x201d; devices or functions <b>455</b>, <b>457</b> and <b>459</b> are applied to respective normalizing devices or functions <b>461</b>, <b>463</b> and <b>465</b>. Such normalizers are desirable because the scale factor components calculated by blocks <b>455</b>, <b>457</b> and <b>459</b> are based on neighbor- compensated levels, whereas the ultimate signal path matrixing (in the master matrix, in the case of multiple modules, or in the local matrix, in the case of a stand-alone module) involves non-neighbor-compensated levels (the input signals applied to the matrix are not neighbor- compensated). Typically, scale factor components are reduced in value by a normalizer.</p><p id="p-0280" num="0235">One suitable way to implement normalizers is as follows. Each normalizer receives the neighbor-compensated smoothed input energy for each of the module's inputs (as from combiners <b>331</b> and <b>333</b>), the non-neighbor-compensated smoothed input energy for each of the module's inputs (as from blocks <b>325</b> and <b>327</b>), local matrix coefficient information from the local matrix, and the respective outputs of blocks <b>355</b>, <b>357</b> and <b>359</b>. Each normalizer calculates a desired output for each output channel and an actual output level for each output channel, assuming a scale factor of 1. It then divides the calculated desired output for each output channel by the calculated actual output level for each output channel and takes the square root of the quotient to provide a potential preliminary scale factor for application to &#x201c;sum and/or greater of&#x201d; <b>367</b>. Consider the following example.</p><p id="p-0281" num="0236">Assume that the smoothed non-neighbor compensated input energy levels of a two-input module are 6 and 8, and that the corresponding neighbor-compensated energy levels are 3 and 4. Assume also a center interior output channel having matrix coefficients=(0.71, 0.71), or squared: (0.5, 0.5). If the module selects an initial scale factor for this channel (based on neighbor-compensated levels) of 0.5, or squared=0.25, then the desired output level of this channel (assuming pure energy summation for simplicity and using neighbor-compensated levels) is:</p><p id="p-0282" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>0.25*(3*0.5+4*0.5)=0.875.<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0283" num="0237">Because the actual input levels are 6 and 8, if the above scale factor (squared) of 0.25 is used for the ultimate signal path matrixing, the output level is</p><p id="p-0284" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>0.25*(6*0.5+8*0.5)=1.75<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0285" num="0000">instead of the desired output level of 0.875. The normalizer adjusts the scale factor to get the desired output level when non-neighbor compensated levels are used.</p><p id="p-0286" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Actual output, assuming SF=1=(6*0.5+8*0.5)=7.<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0287" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(Desired output level)/(Actual output assuming SF=1)=0.875/7.0=0.125=final scale factor squared<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0288" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Final scale factor for that output channel=sqrt(0.125)=0.354, instead of the initially calculated value of 0.5.<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0289" num="0238">The &#x201c;sum or and/or greatest of&#x201d; <b>367</b> preferably sums the corresponding fill and endpoint scale factor components for each output channel per subband, and, selects the greater of the dominant and fill scale factor components for each output channel per subband. The function of the &#x201c;sum and/or greater of&#x201d; block <b>367</b> in its preferred form may be characterized as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. Namely, dominant scale factor components and fill scale factor components are applied to a device or function <b>701</b> that selects the greater of the scale factor components for each output (&#x201c;greater of&#x201d; <b>701</b>) and applies them to an additive combiner or combining function <b>703</b> that sums the scale factor components from greater of <b>701</b> with the excess endpoint energy scale factors for each output. Alternatively, acceptable results may be obtained when the &#x201c;sum and/or greatest of&#x201d; <b>467</b>: (1) sums in both Region 1 and Region 2, (2) takes the greater of in both Region 1 and Region 2, or (3) selects the greatest of in Region 1 and sums in Region 2.</p><p id="p-0290" num="0239"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is an idealized representation of the manner in which an aspect of the present invention generates scale factor components in response to a measure of cross-correlation. The figure is particularly useful for reference to <figref idref="DRAWINGS">FIGS. <b>9</b>A and <b>9</b>B</figref> through <figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> examples. As mentioned above, the generation of scale factor components may be considered as having two regions or regimes of operation: a first region, Region 1, bounded by &#x201c;all dominant&#x201d; and &#x201c;evenly filled&#x201d; in which the available scale factor components are a mixture of dominant and fill scale factor components, and a second region, Region 2, bounded by &#x201c;evenly filled&#x201d; and &#x201c;all endpoints&#x201d; in which the available scale factor components are a mixture of fill and excess endpoint energy scale factor components. The &#x201c;all dominant&#x201d; boundary condition occurs when the direction-weighted_xcor is one. Region 1 (dominant plus fill) extends from that boundary to the point where the direction-weighted_xcor is equal to random_xcor, the &#x201c;evenly filled&#x201d; condition. The &#x201c;all endpoints&#x201d; boundary condition occurs when the direction-weighted_xcor is zero. Region 2 (fill plus endpoint) extends from the &#x201c;evenly filled&#x201d; boundary condition to the &#x201c;all endpoint&#x201d; boundary condition. The &#x201c;evenly filled&#x201d; boundary point may be considered to be in either Region 1 or Region 2. As mentioned below, the precise boundary point is not critical.</p><p id="p-0291" num="0240">As illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, as the dominant scale factor component(s) decline in value, the fill scale factor components increase in value, reaching a maximum as the dominant scale factor component(s) reach a zero value, at which point as the fill scale factor components decline in value, the excess endpoint energy scale factor components increase in value. The result, when applied to an appropriate matrix that receives the module's input signals, is an output signal distribution that provides a compact sound image when the input signals are highly correlated, spreading (widening) from compact to broad as the correlation decreases, and progressively splitting or bowing outward into multiple sound images, each at an endpoint, from broad, as the correlation continues to decrease to highly uncorrelated.</p><p id="p-0292" num="0241">Although it is desirable that there be a single spatially compact sound image (at the nominal ongoing primary direction of the input signals) for the case of full correlation and a plurality of spatially compact sound images (each at an endpoint) for the case of full uncorrelation, the spatially spread sound image between those extremes may be achieved in ways other than as shown in the illustration of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. It is not critical, for example, that the fill scale factor component values reach a maximum for the case of random_xcor =direction-weighted_xcor, nor that the values of the three scale factor components change linearly as shown. Modifications of the <figref idref="DRAWINGS">FIG. <b>8</b></figref> relationships (and the equations expressed herein that underlie the figure) and other relationships between a suitable measure of cross-correlation and scale factor values that are capable of producing the compact dominant to broad spread to compact endpoints signal distribution for a measure of cross-correlation from highly correlated to highly uncorrelated are also contemplated by the present invention. For example, instead of obtaining a compact dominant to broad spread to compact endpoints signal distribution by employing a dual region approach such as described above, such results may be obtained by a mathematical approach, such as one employing pseudo-inverse-based equation solving.</p><heading id="h-0018" level="1">Output Scale Factor Examples</heading><p id="p-0293" num="0242">A series of idealized representations, <figref idref="DRAWINGS">FIGS. <b>9</b>A and <b>9</b>B</figref> through <figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref>, illustrate the output scale factors of a module for various examples of input signal conditions. For simplicity, a single, stand-alone module is assumed so that the scale factors it produces for a variable matrix are the final scale factors. The module and an associated variable matrix have two input channels (such as left L and right R) that coincide with two endpoint output channels (that may also be designated L and R). In this series of examples, there are three interior output channels (such as left middle Lm, center C, and right middle Rm).</p><p id="p-0294" num="0243">The meanings of &#x201c;all dominant&#x201d;, &#x201c;mixed dominant and fill&#x201d;, &#x201c;evenly filled&#x201d;, &#x201c;mixed fill and endpoints&#x201d;, and &#x201c;all endpoints&#x201d; are further illustrated in connection with the examples of <figref idref="DRAWINGS">FIGS. <b>9</b>A and <b>9</b>B through <b>16</b>A and <b>16</b>B</figref>. In each pair of <figref idref="DRAWINGS">FIGS. <b>9</b>A and <b>9</b>B</figref>, for example), the &#x201c;A&#x201d; figure shows the energy levels of two inputs, left L and right R and the &#x201c;B&#x201d; figure shows scale factor components for the five outputs, left L, left middle LM, center C, right middle RM and right R. The figures are not to scale.</p><p id="p-0295" num="0244">In <figref idref="DRAWINGS">FIG. <b>9</b>A</figref>, the input energy levels, shown as two vertical arrows, are equal. In addition, both the direction-weighted_xcor (and the effective_xcor) is 1.0 (full correlation). In this example, there is only one non-zero scale factor, shown in <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> as a single vertical arrow at C, which is applied to the center interior channel C output, resulting in a spatially compact dominant signal. In this example, the output is centered (L/R=1) and, thus, happens to coincide with the center interior output channel C. If there is no coincident output channel, the dominant signal is applied in appropriate proportions to the nearest output channels so as to pan the dominant signal to the correct virtual location between them. If, for example, there were no center output channel C, the left middle LM and right middle RM output channels would have non-zero scale factors, causing the dominant signal to be applied equally to LM and RM outputs. In this case of full correlation (all dominant signal), there are no fill and no endpoint signal components. Thus, the preliminary scale factors produced by block <b>467</b> (<figref idref="DRAWINGS">FIG. <b>4</b>C</figref>) are the same as the normalized dominant scale factor components produced by block <b>361</b>.</p><p id="p-0296" num="0245">In <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, the input energy levels are equal, but direction-weighted_xcor is less than 1.0 and more than random_xcor. Consequently, the scale factor components are that of Region 1&#x2014;mixed dominant and fill scale factor components. The greater of the normalized dominant scale factor component (from block <b>361</b>) and the normalized fill scale factor component (from block <b>363</b>) is applied to each output channel (by block <b>367</b>) so that the dominant scale factor is located at the same central output channel C as in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, but is smaller, and the fill scale factors appear at each of the other output channels, L, LM, RM and R (including the endpoints L and R).</p><p id="p-0297" num="0246">In <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, the input energy levels remain equal, but direction-weighted_xcor=random_xcor. Consequently, the scale factors, <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>, are that of the boundary condition between Regions 1 and 2&#x2014;the evenly filled condition in which there are no dominant or endpoint scale factors, just fill scale factors having the same value at each output (hence, &#x201c;evenly filled&#x201d;), as indicated by the identical arrows at each output. The fill scale factor levels reach their highest value in this example. As discussed below, fill scale factors may be applied unevenly, such as in a tapered manner depending on input signal conditions.</p><p id="p-0298" num="0247">In <figref idref="DRAWINGS">FIG. <b>12</b>A</figref>, the input energy levels remain equal, but direction-weighted_xcor is less than random_xcor and greater than zero (Region 2). Consequently, as shown in <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>, there are fill and endpoint scale factors, but no dominant scale factors.</p><p id="p-0299" num="0248">In <figref idref="DRAWINGS">FIG. <b>13</b>A</figref>, the input energy levels remain equal, but direction-weighted_xcor is zero. Consequently, the scale factors, shown in <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, are that of the all endpoints boundary condition. There are no interior output scale factors, only endpoint scale factors.</p><p id="p-0300" num="0249">In the examples of <figref idref="DRAWINGS">FIGS. <b>9</b>A</figref>/<b>9</b>B through <b>13</b>A/<b>13</b>B, because the energy levels of the two inputs are equal, the direction-weighted_xcor (such as produced by block <b>441</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>) is the same as the neighbor-compensated_xcor (such as produced by block <b>439</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>). However, in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref>, the input energy levels are not equal (L is greater than R). Although the neighbor-weighted_xcor is equal to random_xcor in this example, the resulting scale factors, shown in <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, are not fill scale factors applied evenly to all channels as in the example of <figref idref="DRAWINGS">FIGS. <b>11</b>A and <b>11</b>B</figref>. Instead, the unequal input energy levels cause a proportional increase in the direction-weighted_xcor (proportional to the degree to which the nominal ongoing primary direction departs from its central position) such that it becomes greater than the neighbor-compensated_xcor, thereby causing the scale factors to be weighted more towards all dominant (as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>). This is a desired result because strongly L- or R-weighted signals should not have broad width; they should have a compact width near the L or R channel endpoint. The resulting output, shown in <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, is a non-zero dominant scale factor located closer to the L output than the R output (the neighbor-compensated direction information, in this case, happens to locate the dominant component precisely at the left middle LM position), reduced fill scale factor amplitudes, and no endpoint scale factors (the direction weighting pushes the operation into Region 1 of <figref idref="DRAWINGS">FIG. <b>8</b></figref> (mixed dominant and fill)).</p><p id="p-0301" num="0250">For the five outputs corresponding to the scale factors of <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, the outputs may be expressed as:</p><p id="p-0302" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Lout=Lt(SF<sub>L</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0303" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidLout=((0.92)Lt+(0.38)Rt))(SF<sub>MidL</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0304" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Cout=((0.45)Lt+(0.45)Rt))(SF<sub>C</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0305" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidRout=((0.38)Lt+(0.92)Lt))(SF<sub>MidR</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0306" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Rout=Rt(SF<sub>R</sub>).<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0307" num="0251">Thus, in the <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> example, even though the scale factors (SF) for each of the four outputs other than MidLout are equal (fill), the corresponding signal outputs are not equal because Lt is larger than Rt (resulting in more signal output toward the left) and the dominant output at Mid Left is larger than the scale factor indicates. Because the nominal ongoing primary direction is coincident with the MidLeft output channel, the ratio of Lt to Rt is the same as the matrix coefficients for the MidLeft output channel, namely 0.92 to 0.38. Assume that those are the actual amplitudes for Lt and Rt. To calculate the output levels, one multiplies these levels by the corresponding matrix coefficients, adds, and scales by the respective scale factors:</p><p id="p-0308" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>output amplitude (output_channel_sub_i)=sf (i)*(Lt_Coeff (i)*Lt+Rt_Coeff (i)*Rt)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0309" num="0252">Although one preferably takes into account the mix between amplitude and energy addition (as in the calculations relating to <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>), in this example cross-correlation is fairly high (large dominant scale factor) and ordinary summation may be performed:</p><p id="p-0310" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Lout=0.1*(1*0.92+0*0.38)=0.092<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0311" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidLout=0.9*(0.92*0.92+0.38*0.38)=0.900<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0312" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Cout=0.1*(0.71*0.92+0.71*0.38)=0.092<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0313" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MidRout=0.1*(0.38*0.92+0.92*0.38)=0.070<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0314" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Rout=0.1*(0*0.92+1*0.38)=0.038<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0315" num="0253">Thus, this example demonstrates that the signal outputs at the Lout, Cout, MidRout and Rout are unequal because Lt is larger than Rt even though the scale factors for those outputs are equal.</p><p id="p-0316" num="0254">The fill scale factors may be equally distributed to the output channels as shown in the examples of <figref idref="DRAWINGS">FIGS. <b>10</b>B, <b>11</b>B, <b>12</b>B and <b>14</b>B</figref>. Alternatively, the fill scale factor components, rather than being uniform, may be varied with position in some manner as a function of the dominant (correlated) and/or endpoint (uncorrelated) input signal components (or, equivalently, as a function of the direction-weighted_xcor value.) For example, for moderately high values of direction-weighted_xcor, the fill scale factor component amplitudes may curve convexly, such that output channels near the nominal ongoing primary direction receive more signal level than channels farther away. For direction-weighted_xcor=random_xcor, the fill scale factor component amplitudes may flatten to an even distribution, and for direction-weighted_xcor&#x3c;random_xcor, the amplitudes may curve concavely, favoring channels near the endpoint directions.</p><p id="p-0317" num="0255">Examples of such curved fill scale factor amplitudes are set forth in <figref idref="DRAWINGS">FIG. <b>15</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>. The <figref idref="DRAWINGS">FIG. <b>15</b>B</figref> output results from an input (<figref idref="DRAWINGS">FIG. <b>15</b>A</figref>) that is the same as in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, described above. The <figref idref="DRAWINGS">FIG. <b>16</b>B</figref> output results from an input (<figref idref="DRAWINGS">FIG. <b>16</b>A</figref>) that is the same as in <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>, described above.</p><heading id="h-0019" level="1">Communication Between Module and Supervisor With Regard to Neighbor Levels and Higher-Order Neighbor Levels</heading><p id="p-0318" num="0256">Each module in a multiple-module arrangement, such as the example of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>2</b></figref> and the example of <figref idref="DRAWINGS">FIGS. <b>1</b>B and <b>2</b></figref>&#x2032;, requires two mechanisms in order to support communication between it and a supervisor, such as supervisor <b>201</b> of <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>2</b></figref>&#x2032;:<ul id="ul0019" list-style="none">    <li id="ul0019-0001" num="0000">    <ul id="ul0020" list-style="none">        <li id="ul0020-0001" num="0257">(a) one to cull and report the information required by the supervisor to calculate neighbor levels and higher-order neighbor levels (if any). The information required by the supervisor is the total estimated interior energy attributable to each of the module's inputs as generated, for example, by the arrangement of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>.</li>        <li id="ul0020-0002" num="0258">(b) another to receive and apply the neighbor levels (if any) and higher-order neighbor levels (if any) from the supervisor. In the example of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the neighbor levels are subtracted in respective combiners <b>431</b> and <b>433</b> from the smoothed energy levels of each input, and the higher-order neighbor levels (if any) are subtracted in respective combiners <b>431</b>, <b>433</b> and <b>435</b> from the smoothed energy levels of each input and the common energy across the channels.</li>    </ul>    </li></ul></p><p id="p-0319" num="0259">Once a supervisor knows all the total estimated interior energy contributions of each input of each module:<ul id="ul0021" list-style="none">    <li id="ul0021-0001" num="0000">    <ul id="ul0022" list-style="none">        <li id="ul0022-0001" num="0260">(1) it determines if the total estimated interior energy contributions of each input (summed from all the modules connected to that input) exceeds the total available signal level at that input. If the sum exceeds the total available, the supervisor scales back each reported interior energy reported by each module connected to that input so that they sum to the total input level.</li>        <li id="ul0022-0002" num="0261">(2) it informs each module of its neighbor levels at each input as the sum of all the other interior energy contributions of that input (if any).</li>    </ul>    </li></ul></p><p id="p-0320" num="0262">Higher-order (HO) neighbor levels are neighbor levels of one or more higher-order modules that share the inputs of a lower-level module. The above calculation of neighbor levels relates only to modules at a particular input that have the same hierarchy: all the three-input modules (if any), then all the two-input modules, etc. An HO-neighbor level of a module is the sum of all the neighbor levels of all the higher order modules at that input. (i.e., the HO neighbor level at an input of a two-input module is the sum of all the third, fourth, and higher order modules, if any, sharing the node of a two-input module). Once a module knows what its HO-neighbor levels are at a particular one of its inputs, it subtracts them, along with the same-hierarchy-level neighbor levels, from the total input energy level of that input to get the neighbor-compensated level at that input node. This is shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> where the neighbor levels for input <b>1</b> and input m are subtracted in combiners <b>431</b> and <b>433</b>, respectively, from the outputs of the variable slow smoothers <b>425</b> and <b>427</b>, and the higher-order neighbor levels for input <b>1</b>, input m and the common energy are subtracted in combiners <b>431</b>, <b>433</b> and <b>435</b>, respectively, from the outputs of the variable slow smoothers <b>425</b>, <b>427</b> and <b>429</b>.</p><p id="p-0321" num="0263">One difference between the use of neighbor levels and HO-neighbor levels for compensation is that the HO-neighbor levels also are used to compensate the common energy across the input channels (e.g., accomplished by the subtraction of an HO-neighbor level in combiner <b>435</b>). The rationale for this difference is that the common level of a module is not affected by adjacent modules of the same hierarchy, but it can be affected by a higher-order module sharing all the inputs of a module.</p><p id="p-0322" num="0264">For example, assume input channels Ls (left surround), Rs (right surround), and Top, with an interior output channel in the middle of the triangle between them (elevated ring rear), plus an interior output channel on a line between Ls and Rs (main horizontal ring rear), the former output channel needs a three-input module to recover the signal common to all three inputs. Then, the latter output channel, being on a line between two inputs (Ls and Rs), needs a two-input module. However, the total common signal level observed by the two-input module includes common elements of the three input module that do not belong to the latter output channel, so one subtracts the square root of the pairwise products of the HO neighbor levels from the common energy of the two-input module to determine how much common energy is due solely to its interior channel (the latter one mentioned). Thus, in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the smoothed common energy level (from block <b>429</b>) has subtracted from it the derived HO common level to yield a neighbor-compensated common energy level (from combiner <b>435</b>) that is used by the module to calculate (in block <b>439</b>) the neighbor-compensated_xcor.</p><p id="p-0323" num="0265">The present invention and its various aspects may be implemented in analog circuitry, or more probably as software functions performed in digital signal processors, programmed general-purpose digital computers, and/or special purpose digital computers. Interfaces between analog and digital signal streams may be performed in appropriate hardware and/or as functions in software and/or firmware. Although the present invention and its various aspects may involve analog or digital signals, in practical applications most or all processing functions are likely to be performed in the digital domain on digital signal streams in which audio signals are represented by samples.</p><p id="p-0324" num="0266">It should be understood that implementation of other variations and modifications of the invention and its various aspects will be apparent to those skilled in the art, and that the invention is not limited by these specific embodiments described. It is therefore contemplated to cover by the present invention any and all modifications, variations, or equivalents that fall within the true spirit and scope of the basic underlying principles disclosed and claimed herein.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for translating a first plurality of audio input channels to a second plurality of audio output channels, the method comprising:<claim-text>receiving, by an audio processor decoder module, the first plurality of audio input channels;</claim-text><claim-text>determining that there is pair-wise coding among any of the first plurality of audio input channels;</claim-text><claim-text>determining an input/output-mapping matrix for mapping at least a first set of the first plurality of audio input channels to at least a second set of the second plurality of audio output channels, wherein the input/output-mapping matrix is a mixing matrix, wherein each matrix element of the input/output-mapping matrix is a transfer function relating to mapping an input channel i of the first plurality of audio input channels to an output channel j of the second plurality of audio output channels; and</claim-text><claim-text>deriving the second plurality of audio output channels based on the first plurality of audio input channels, the input/output-mapping matrix and the determined pair-wise coding,</claim-text><claim-text>wherein at least one coefficient of the input/output-mapping matrix is computed based at least in part on a cross-correlation of pair-wise coded audio input signals,</claim-text><claim-text>wherein the cross-correlation is based at least in part on a cross power value for the pair-wise coded audio input signals,</claim-text><claim-text>wherein the deriving of the second plurality of audio output channels based on first plurality of audio input channels causes a soundfield represented by the first plurality of audio input channels to be determined and reproduced, and</claim-text><claim-text>wherein the first plurality of audio input channels represents a same soundfield represented by the second plurality of audio output channels;</claim-text><claim-text>wherein a total number of audio input channels in the first plurality of audio input channels equals a total number of audio output channels in the second plurality of audio output channels.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a first specific set of three or more audio input channels in first plurality of audio input channels is mapped to a second specific set of the second plurality of audio output channels based on a third set of fixed mixing coefficients of the input/output-mapping matrix.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. A non-transitory computer readable storage medium containing instructions that when executed by a processor perform the method of <claim-ref idref="CLM-00001">claim 1</claim-ref>.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. A system for translating a first plurality of audio input channels to a second plurality of audio output channels, the system comprising:<claim-text>a receiver for receiving the first plurality of audio input channels;</claim-text><claim-text>a processor configured to determine that there is pair-wise coding among any of the first plurality of audio input channels, the processor further configured to determine an input/output-mapping matrix for mapping at least a first set of the first plurality of audio input channels to at least a second set of the second plurality of audio output channels, wherein the input/output-mapping matrix is a mixing matrix, wherein each matrix element of the input/output-mapping matrix is a transfer function relating to mapping an input channel i of the first plurality of audio input channels to an output channel j of the second plurality of audio output channels; and</claim-text><claim-text>a decoder configured to derive the second plurality of audio output channels based on the first plurality of audio input channels, the input/output-mapping matrix and the determined pair-wise coding,</claim-text><claim-text>wherein at least one coefficient of the input/output-mapping matrix is computed based at least in part on a cross-correlation of the pair-wise coded audio input signals,</claim-text><claim-text>wherein the cross-correlation is based at least in part on a cross power value for the pair-wise coded audio input signals,</claim-text><claim-text>wherein the deriving of the second plurality of audio output channels based on first plurality of audio input channels causes a soundfield represented by the first plurality of audio input channels to be determined and reproduced, and</claim-text><claim-text>wherein the first plurality of audio input channels represents a same soundfield represented by the second plurality of audio output channels;</claim-text><claim-text>wherein a total number of audio input channels in the first plurality of audio input channels equals a total number of audio output channels in the second plurality of audio output channels.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein a first specific set of three or more audio input channels in first plurality of audio input channels is mapped to a second specific set of the second plurality of audio output channels based on a third set of fixed mixing coefficients of the input/output-mapping matrix.</claim-text></claim></claims></us-patent-application>