<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004566A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004566</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930932</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2457</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>23</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>248</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>24573</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2365</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>248</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2291</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>6232</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">ALGORITHMIC SUGGESTIONS BASED ON A UNIVERSAL DATA SCAFFOLD</invention-title><us-related-documents><division><relation><parent-doc><document-id><country>US</country><doc-number>17073007</doc-number><date>20201016</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11442944</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930932</doc-number></document-id></child-doc></relation></division><us-provisional-application><document-id><country>US</country><doc-number>62923303</doc-number><date>20191018</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Thinkspan, LLC</orgname><address><city>Highland Park</city><state>IL</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Taylor</last-name><first-name>Brian Samuel</first-name><address><city>Highland Park</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Murphy</last-name><first-name>Matthew Maxwell</first-name><address><city>Chicago</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Faris</last-name><first-name>James Michael</first-name><address><city>Chicago</city><state>IL</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">User information is protected by providing a protective layer between a provider and a user device. A server receives a suggestion to present to the user device from a third party, such as a provider of goods or services that wants to push the suggestion to the user device. The suggestion includes a request for user information. The server then determines a likelihood that the request for user information is a necessary component of the suggestion. When the likelihood is low, the request is removed from the suggestion. When the likelihood is high, the server creates an executable computer code that includes the request. The executable computer code can be transmitted to the user device to present the suggestion to the user device without disclosing the user's information to the server.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="192.11mm" wi="149.44mm" file="US20230004566A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="215.65mm" wi="151.47mm" file="US20230004566A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="194.39mm" wi="139.36mm" orientation="landscape" file="US20230004566A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="143.51mm" wi="103.80mm" orientation="landscape" file="US20230004566A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="143.00mm" wi="133.86mm" file="US20230004566A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="201.76mm" wi="135.81mm" orientation="landscape" file="US20230004566A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="101.77mm" wi="148.17mm" file="US20230004566A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="172.04mm" wi="132.50mm" file="US20230004566A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="230.29mm" wi="122.68mm" file="US20230004566A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="209.97mm" wi="118.53mm" file="US20230004566A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="210.14mm" wi="117.18mm" file="US20230004566A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="209.97mm" wi="117.26mm" file="US20230004566A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="125.56mm" wi="118.28mm" file="US20230004566A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="215.56mm" wi="165.69mm" file="US20230004566A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="228.01mm" wi="155.79mm" orientation="landscape" file="US20230004566A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="214.29mm" wi="171.03mm" orientation="landscape" file="US20230004566A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="202.35mm" wi="172.04mm" file="US20230004566A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="199.73mm" wi="114.81mm" file="US20230004566A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="140.04mm" wi="114.81mm" file="US20230004566A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="211.16mm" wi="124.97mm" file="US20230004566A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="206.33mm" wi="140.72mm" file="US20230004566A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="206.33mm" wi="140.72mm" file="US20230004566A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="215.48mm" wi="153.50mm" file="US20230004566A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="206.33mm" wi="140.72mm" file="US20230004566A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="223.44mm" wi="158.24mm" file="US20230004566A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="199.64mm" wi="187.88mm" file="US20230004566A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="172.21mm" wi="192.36mm" orientation="landscape" file="US20230004566A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="257.64mm" wi="196.51mm" orientation="landscape" file="US20230004566A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="129.71mm" wi="101.77mm" file="US20230004566A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="182.37mm" wi="101.77mm" file="US20230004566A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="195.58mm" wi="146.81mm" orientation="landscape" file="US20230004566A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a divisional of U.S. patent application Ser. No. 17/073,007, filed Oct. 16, 2020, now U.S. Pat. No. 11,442,944, which claims benefit of priority to U.S. Provisional Application No. 62/923,303 filed Oct. 18, 2019, the contents of which are incorporated herein by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">A file hosting service (e.g., Dropbox&#xae;, Google Drive&#xae;, or Microsoft OneDrive&#xae;) is an Internet-hosted service that is specifically designed to host user files. For example, a file hosting service may allow users to upload files that could then be accessed using a different computer, tablet, mobile phone, or other network-connected device. Users often have the option of sharing files publicly or keeping files protected (e.g., by requiring authentication prior to allowing access).</p><p id="p-0004" num="0003">Some file hosting services also permit users to collaborate on digital files, such as word processor documents, spreadsheets, and Portable Document Format (PDF) documents. But file hosting services are subject to some constraints because they store digital files having unstructured data. For example, a file hosting service will only permit a user to view those digital files for which it has a viewer corresponding to the file type (e.g., PDF documents require a viewer such as Adobe Reader&#xae;). However, because many standard compliant formats are presented by viewers as visual renderings, the file hosting service is typically unaware of what the underlying data actually means.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an environment in which the disclosed embodiments can be implemented.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a universal data scaffold template implemented by the data management platform of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, consistent with various embodiments.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating examples of universal data scaffold for multiple content types, consistent with various embodiments.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example of various content types supported by the data management platform, consistent with various embodiments.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of examples of structuring digital content uploaded to the data management platform based on the universal data scaffolds, consistent with various embodiments.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of an example of analyzing unstructured data associated with digital content to transform the unstructured data to a structured data of a specified content type, consistent with various embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is an example of a graph of the digital contents associated with a user, consistent with various embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> is an example of a graphical representation of the digital contents in a graphical user interface, consistent with various embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b>C</figref> is another example of a graphical representation of the digital contents in a GUI, consistent with various embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> is another example of a graphical representation of the digital contents in a GUI, consistent with various embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b>E</figref> is another example of a graphical representation of the digital contents in a GUI, consistent with various embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of an example for generating recommendations based on intelligence derived from a graph of the digital contents, consistent with various embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of zero-knowledge encryption of digital content, consistent with various embodiments.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram of an example of storing encrypted bundles in the data management platform and a server, consistent with various embodiments.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is an example illustrating zero-knowledge data retrieval from the server, consistent with various embodiments.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram of an example for presenting offers to users of the data management platform, consistent with various embodiments.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram of the data management platform of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, consistent with various embodiments.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram of the server of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, consistent with various embodiments.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flow diagram of a process for performing data management operations on the digital contents associated with a user, consistent with various embodiments.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a flow diagram of a process for displaying the digital contents on the user device, consistent with various embodiments.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flow diagram of a process for performing zero-knowledge encryption of the digital contents in the data management platform, consistent with various embodiments.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flow diagram of a process for decrypting the digital contents in the data management platform, consistent with various embodiments.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flow diagram of a process for sending zero-knowledge offers to the users of the data management platform, consistent with various embodiments.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a flow diagram of a process for displaying the zero-knowledge offers to the users of the data management platform, consistent with various embodiments.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows a system capable of presenting a suggestion to the user.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>22</b></figref> shows a data structure <b>2200</b> associated with the universal data scaffold with a passive suggestion and an active suggestion.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>23</b></figref> shows the use of an artificial intelligence (AI) model to determine suggestions to present at a user device.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a flowchart of a method to securely present a suggestion to a user without disclosing the user's information.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a flowchart of a method to create an insulating layer between a provider and a user device by generating a secure computer code to execute at a user device.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a block diagram of a computer system as may be used to implement features of some embodiments of the disclosed technology.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0035" num="0034">Disclosed are embodiments for a data management platform that provides a secure storage environment for digital content, such as digital files. The data management platform can represent the stored digital contents as a semantic graph. In the semantic graph, nodes represent digital contents and an edge between two nodes represents the relationship between the corresponding two digital contents. The semantic graph is constructed using structured data associated with the digital contents. The structured data allows the data management platform to collect, process, and present the digital contents in a graphical user interface in a more meaningful way. The data management platform also provides various other functionalities such as sharing of digital contents between users of the data management platform, presenting notifications regarding one or more aspects of a digital content, intelligent/context-based fetching or retrieval of relevant digital contents, zero-knowledge encryption of the digital contents, and generating zero-knowledge suggestions. A suggestion can be an offer.</p><p id="p-0036" num="0035">The data management platform facilitates storing of the digital content as structured data, which is defined using a universal data scaffold of the data management platform. A digital content is stored as one of multiple content types in the data management platform, and each content type is defined using a universal data scaffold. In some embodiments, a universal data scaffold includes a set of attributes that defines a content type. For example, for a content type such as a car, the universal data scaffold can include a set of attributes such as a make, a model, a year, a vehicle identification number (&#x201c;VIN&#x201d;) of the car. When a user uploads a first digital content, such as picture of a car, or a bill of sale of the car, or creates a data record for a car, the data management platform determines the content type of the digital content as &#x201c;car&#x201d;, obtains the universal data scaffold of &#x201c;car,&#x201d; and obtains attribute values from the digital content, such as &#x201c;Ford,&#x201d; &#x201c;Fusion,&#x201d; and &#x201c;2014,&#x201d; for the set of attributes defined in the &#x201c;car&#x201d; universal data scaffold. The data management platform can determine the type of the digital content based on appointing the workflow from which the document was uploaded. For example, if the document was uploaded in response to a question about a vehicle, the data management platform can determine that the type of digital content is a car.</p><p id="p-0037" num="0036">The data management platform can have various such universal data scaffolds for multiple content types. One of the attributes in the universal data scaffold can also include a relationship attribute, which identifies a second digital content (of the same content type or another content type) related to the first digital content. For example, one of the attributes in &#x201c;car&#x201d; universal data scaffold can be a relationship attribute, such as &#x201c;owner&#x201d; or &#x201c;owned by&#x201d; which relates the car digital content to a &#x201c;person&#x201d; content type digital content. Structured data permits the relationship to be readily established between various digital contents. The universal data scaffolds can enable the data management platform to intelligently connect digital contents of different types having a common theme. For example, digital content such as documents related to a vehicle (e.g., maintenance records, driver licenses, and insurance policies) may be associated with one another and/or the individual who owns the vehicle. The connections formed between different structured data are what give the structured data its meaning.</p><p id="p-0038" num="0037">The data management platform can also retrieve data from public databases such as the phone book, the Yellow Pages, a public criminal database, etc. Upon retrieving the data, the data management platform can format retrieved data into a universal data scaffold data structure. As a result, both the private data and the public data of the individual can be available to the data management platform to provide better recommendations or suggestions to the user.</p><p id="p-0039" num="0038">The universal data scaffold can also be associated with other metadata, such as rules. A user can set various rules for the digital contents, such as a sharing rule that defines sharing of a digital content with another user. For example, in a universal data scaffold for a &#x201c;child&#x201d; content type, a parent user can set a sharing rule to share with a nanny user only a portion of digital contents related to the child, such as immunization records associated with the child.</p><p id="p-0040" num="0039">The data management platform can be implemented in various configurations. For example, in a first configuration, the data management platform can be implemented at a server computing device (&#x201c;server&#x201d;), which a user can access from a user device using an application, such as a web browser on the user device. In the second configuration, a portion of the data management platform can also be implemented at the user device, for example, as an &#x201c;app&#x201d; that can be downloaded to and executed at the user device. The user can access the app on the user device to upload and/or retrieve digital contents to and/or from the server. Regardless of which configuration the data management platform is implemented in, the server stores all universal data scaffolds. When a user downloads and installs the app, a copy of all the universal data scaffolds that are available at the server are also installed at the user device. When a universal data scaffold is updated at the server, e.g., attributes are added, removed, and/or modified, the updated universal data scaffold is transmitted to the data management platform on the user devices, e.g., as part of an app update.</p><p id="p-0041" num="0040">The data management platform can store the digital contents as a graph database in which digital contents are represented as nodes of the graph. A relationship between two digital contents is represented by an edge connecting the nodes corresponding to the two digital contents. A node can be a data structure that contains the digital content, attribute values of the digital content, and an edge that connects the node to another node. Note that the digital contents can be stored in formats other than graph database. For example, the digital contents can be stored in a relational database. They can be stored in any format that allows the data management platform to obtain, derive determine, or interpret the structured data associated with and relationships between the digital contents based on the universal data scaffolds. The data management platform can present the digital contents in a graphical user interface (GUI) using which the user can view, modify, and/or create digital contents. The GUI makes use of the universal data scaffold associated with a digital content to show various attributes associated with the digital content and/or any related digital contents. For example, the GUI can show a picture of the car, and attributes such as Make, Model and Year of the car, which are derived from the universal data scaffold of the car. The GUI can also show related digital content, such as a license plate of the car, which is derived from the universal data scaffold of the car, e.g., from the license plate attribute in the universal data scaffold of the car.</p><p id="p-0042" num="0041">The data management platform also supports zero-knowledge encryption of the digital contents, in which the data management platform encrypts the digital contents prior to storing them at the data storage system ensuring security and privacy of the digital contents. For example, the app can encrypt a node corresponding to the digital content and then transmit the encrypted node to the server to back up the digital content at the data storage system. When the node is encrypted, the data management platform generates an encrypted bundle, which is typically a blob, having an encrypted form of the digital content, including the attribute values of the digital content, and the universal data scaffold of the digital content. The encrypted bundle is then transmitted to the server for storage at the data storage system. The encryption is typically done at the user device, e.g., using an encryption key that only the user device has access to. Since the server would not have access to the encrypted key used the by the user device in encrypting the digital content, the encrypted bundle cannot be decrypted at the server, therefore making the digital content secure at the server. In some embodiments, the data management platform does not encrypt the digital contents in which case the digital contents are transmitted to and stored at the server without being encrypted. In some embodiments, the data management platform can provide an option to the user to disable the encryption in which case the digital contents are transmitted to and stored at the server without being encrypted. However, the digital contents stored at the server may be less secure in such scenarios compared to scenarios where they are stored as encrypted data.</p><p id="p-0043" num="0042">The data management platform also facilitates zero-knowledge suggestions in which suggestions of goods and/or services are stored at user devices, e.g., as part of the universal data scaffolds, but are displayed to those users who satisfy a specified criterion, and the eligible user, if interested, may then accept, reject, or ignore the suggestion. Neither the data management platform nor a vendor who has provided the suggestion may know to which users a specified suggestion was displayed until a user accepts the specified suggestion. In some embodiments, even after the user accepts the specified suggestion, the data management platform may anonymize the acceptance, e.g. by removing some or all user identification information, before forwarding the acceptance to the vendor. In some embodiments, a zero-knowledge suggestion is a suggestion that may only be known to the user to whom the suggestion was displayed until acceptance. In fact, suggestions may simply be stored with the underlying universal data scaffolding of the digital content with which the suggestion is to be presented. For example, digital content having information pertaining to a nanny (or some other employee) may include a suggestion for a payroll service, a suggestion for a background check, etc. In some embodiments, the zero-knowledge suggestions are included as part of the universal data scaffolds, and would be stored on the user device when the user installs the data management platform on the user device. Because these suggestions can be programmed into the data management platform during development, the entity responsible for providing the good/service, such as a vendor, or the data management platform may not be aware that a suggestion was made to a user until a notification of acceptance is received from that user.</p><p id="p-0044" num="0043">The universal data scaffolding enables all users to use the same storage architecture and rules to create various content types. Consequently, an entity responsible for supporting the storage of various content types need not worry about users generating digital contents of different content types that are incompatible with one another. Instead, the universal data scaffold can represent shared, common content types that share a commonality across the users of data management platform in how information is mapped. Thus, each user may populate a personalized database of digital contents using universal data scaffolding that appear similar to every user. This consistency can allow the content types to be universally shared, as well as support the private delivery of analytics/intelligence.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an environment in which the disclosed embodiments can be implemented. The environment <b>100</b> includes a data management platform <b>110</b> that facilitates storage of digital content, such as digital files, at a server <b>120</b>. As described above, the data management platform <b>110</b> can be implemented in multiple configurations, and the environment <b>100</b> illustrates a configuration in which the data management platform <b>110</b> is implemented at a user device <b>105</b>. The data management platform <b>110</b> allows the user <b>135</b> to perform data management operations such as upload, download, generate, modify, and/ or view digital content. In some embodiments, the data management platform <b>110</b> can be an app that can be downloaded to the user device <b>105</b> from an app store, which can be hosted at a server of a third-party entity <b>145</b>, and executed at the user device <b>105</b> to provide access to the server <b>120</b>. The server <b>120</b> can be accessible via the network <b>130</b>, such as Internet, local area network (LAN), or wide area network (WAN). The data management platform <b>110</b> provides a graphical user interface (GUI) <b>115</b> for the user <b>135</b> to perform the data management operations. In some embodiments, the data management platform <b>110</b> can be a web browser application on the user device <b>105</b>. The data management platform <b>110</b> can store the digital content at the user device <b>105</b>, e.g., on-device storage component. The data management platform <b>110</b> synchronizes with the server <b>120</b> to back up any new digital content uploaded or existing digital content modified by the user <b>135</b> to the server <b>120</b> for storage at a data storage system <b>125</b>.</p><p id="p-0046" num="0045">The digital content can include any multimedia content such as an image file (e.g., Joint Photographic Experts Group (JPEG) files, Tagged Image File Format (TIFF) files, and Portable Document Format (PDF) files), an audio file (e.g., Waveform Audio (WAV) files and MP3 files), a video file (e.g., QuickTime File Format (QTFF) files, Audio Video Interleaved (AVI) files, and MP4 files), a document, a data record created in the server <b>120</b>, etc. The user device <b>105</b> can be any network-accessible computing device associated with a user <b>135</b>, such as a mobile phone, a tablet computer, a desktop computer, a laptop computer, a wearable electronic device (e.g., a watch or fitness band), a virtual/augmented reality device, a smart television, or some other internet of things (IoT) device.</p><p id="p-0047" num="0046">The user <b>135</b> can upload a first digital content, such as an image of a car, to the data management platform <b>110</b> using the GUI <b>115</b>. The data management platform <b>110</b> determines whether the uploaded digital content is in a structured data format as defined by at least one of the multiple universal data scaffolds <b>155</b> of the server <b>120</b>, e.g., a first universal data scaffold. In some embodiments, the data management platform <b>110</b> has a copy of all the universal data scaffolds <b>155</b> at the user device <b>105</b>, e.g., which are bundled in the app that is downloaded to and installed at the user device <b>105</b>. However, if one or more of the universal data scaffolds <b>155</b> or other ad hoc data scaffolds that are at the server <b>120</b> but not available at the user device <b>105</b>, the data management platform <b>110</b> can retrieve them from the server <b>120</b>. If the first digital content is not in the structured data format defined by the first universal data scaffold, the data management platform <b>110</b> transforms the first digital content to the structured data format based on the first universal data scaffold, e.g., as described at least in association with <figref idref="DRAWINGS">FIG. <b>5</b></figref> below, and stores the first digital content in the user device <b>105</b>. The user <b>135</b> can upload digital content to the data management platform <b>110</b> from the user device <b>105</b> and/or from one or more digital content sources <b>140</b>, such as an external storage device connected to the user device <b>105</b>, or online data storage services. The data management platform <b>110</b> enables the user <b>135</b> to view the digital contents in the GUI <b>115</b> example of which is described at least with reference to <figref idref="DRAWINGS">FIG. <b>7</b>B</figref> below. The user <b>135</b> can navigate through the GUI <b>115</b> to view, edit and/or create digital content.</p><p id="p-0048" num="0047">The data management platform <b>110</b> synchronizes the user device <b>105</b> with the server <b>120</b> to back up the digital content stored at the user device <b>105</b> to the server <b>120</b>, e.g., based on a trigger condition. A trigger condition that initiates the backup of the digital content to the server <b>120</b> can include one or more of a scheduled time interval, a receipt of a command from the user <b>135</b>, opening of the data management platform <b>110</b> on the user device <b>105</b>, closing of the data management platform <b>110</b> on the user device <b>105</b>, number of digital content that has not been backed up exceeds a specified threshold, a memory of the user device <b>105</b> consumed by the data management platform <b>110</b> exceeds a specified threshold, etc. The server <b>120</b> can store the backed up digital content at the data storage system <b>125</b>.</p><p id="p-0049" num="0048">The data management platform <b>110</b> can encrypt the digital content prior to backing them up to the server <b>120</b>. For example, the data management platform <b>110</b> can encrypt a node corresponding to the first digital content and then transmit the encrypted node to the server <b>120</b> to back up the first digital content at the data storage system <b>125</b>. When the node is encrypted, the data management platform <b>110</b> generates an encrypted bundle having an encrypted version of (a) the first digital content, including attribute values of the first digital content, and (b) the first universal data scaffold of the first digital content. However, in some embodiments, the universal data scaffolds in the encrypted bundles may not be encrypted as they are not private to a specific user and common across the users of the data management platform <b>110</b>. The encrypted bundle is then transmitted to the server <b>120</b> for storage at the data storage system <b>125</b>.</p><p id="p-0050" num="0049">The server <b>120</b> co-ordinates or facilitates various data management operations performed by the user <b>135</b>. For example, the server <b>120</b> responds to storage requests from the user <b>135</b> by storing the encrypted digital content received from the user device <b>105</b> at the data storage system <b>125</b>. The server <b>120</b> can also respond to data access requests from the user <b>135</b> by retrieving the digital content from the data storage system <b>125</b> and forwarding them to the user device <b>105</b>. The server <b>120</b> manages digital contents of multiple users in which each user has a separate user account or user profile at the server <b>120</b>. The server <b>120</b> may store digital contents of multiple users in the data storage system <b>125</b>.</p><p id="p-0051" num="0050">The server <b>120</b> also facilitates zero-knowledge offers in which offers of goods and/or services are stored at user devices but are displayed to those users who satisfy a specified criterion, and the eligible user, if interested, may then accept, reject, or ignore the offer. Neither the server <b>120</b> nor a vendor, e.g., one of the third-party entities <b>145</b>, who provided the offer to the server <b>120</b> to be distributed to the users may know to which users a specified offer was displayed until a user accepts the specified offer.</p><p id="p-0052" num="0051">The data management platform <b>110</b> is also compatible with data storage archives that are designed based on customized data scaffolds. A customized data scaffold archive <b>150</b> manages digital content that are structured based on customized data scaffolds, that is, a data scaffold that is different from the universal data scaffold defined in the data management platform <b>110</b>. For example, a car dealer may want to have a different data scaffold for a car than the universal data scaffold defined for a car by the data management platform. That is, the customized data scaffold can have a first set of attributes defining a car, whereas the universal data scaffold may have a second set of attributes. The data management platform <b>110</b> includes an application programming interfaces (APIs) that enable importing and/or exporting digital content from/to the customized data scaffold archive <b>150</b> while still maintaining the structured data associated with the digital content. The APIs can determine differences between the two data scaffolds (e.g., universal data scaffold for a car and the customized data scaffold for the car), obtain attribute values for any attributes that need to have a value but don't, and store the digital content with the corresponding structured data accordingly. In some embodiments, the customized data scaffold archive <b>150</b> can be created by the same entity as the data management platform <b>110</b> and then offered to another entity, e.g., a buyer such as an organization, for sale.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a universal data scaffold template <b>200</b> implemented by the data management platform of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, consistent with various embodiments. Structured data allows the data management platform <b>110</b> to collect, process, and present information in a more meaningful way. For example, if the user <b>135</b> uploads a digital content indicating that they own a vehicle, the data management platform <b>110</b> may begin analyzing other digital content to identify a driver license of a primary driver, a license plate, insurance documentation, etc., related to the vehicle. Such an analysis and/or intelligence of the data management platform <b>110</b> is made possible using a universal data scaffold, which defines a structured data format for digital belongings to be stored by the data management platform.</p><p id="p-0054" num="0053">A universal data scaffold is defined based on universal data scaffold template <b>200</b>, which includes universal definition <b>205</b> and metadata <b>250</b>. The universal definition <b>205</b> provides a template of variables for defining a set of attributes of a content type. For example, the universal definition <b>205</b> includes a type variable <b>210</b> that is used to define a content type; a field variable <b>215</b> to define one or more attributes of the content type; a field data type variable <b>220</b> to define a data type of the attributes; a formatter variable <b>225</b> to define a format in which the content type is to be displayed; a translation variable <b>230</b> to define translation for one or more attributes; and a relationship variable <b>235</b> to define relationship with other digital contents.</p><p id="p-0055" num="0054">The metadata <b>250</b> provides various settings and/or rules using which the user can customize the behavior of digital content in the data management platform <b>110</b>. The sharing rule <b>251</b> can be used by the user to set rules for sharing a digital content with other entities, e.g., another user or another user device of the same user. For example, a first user, such as a parent of a child, can define a sharing rule <b>251</b> to share a subset of digital contents associated with the child, e.g., immunization records, with another user, such as a nanny.</p><p id="p-0056" num="0055">The security rule <b>252</b> can be used to set rules regarding access permissions for a digital content for various entities. For example, the parent can define a security rule <b>252</b> to provide the nanny read-only access to the immunization records.</p><p id="p-0057" num="0056">The notification rules <b>253</b> can be used to set rules regarding generating notifications. For example, the parent can define a notification rule <b>253</b> to generate a notification on a user device associated with the parent, when the child is up for a particular vaccination, which can be determined based on the immunization records stored in the server <b>120</b>. The notification rule <b>253</b> also enables the user to set a frequency of the notification, a timing of the notification of an event prior to the occurrence of the event, etc.</p><p id="p-0058" num="0057">The location-based rule <b>254</b> allows the user to define any location-specific rules. For example, the parent can define a location-based specific rule <b>254</b> to display a specified digital content, e.g., the immunization record or a doctor's note from a previous visit, when the parent is at or near a pediatrician's clinic, which can be determined based on location-based services in the user device carried by the parent.</p><p id="p-0059" num="0058">The device-specific rule <b>255</b> can be used to set rules specific to a particular user device. For example, the parent user can set a device-specific rule <b>255</b> rule for showing a specified digital content by default when the data management platform <b>110</b> is opened at the user devices, such as to show a first digital content in a first user device and a second digital content in a second user device.</p><p id="p-0060" num="0059">The relationship-specific rules <b>256</b> can be used by the user to set rules based on a specified relationship between the digital contents, or between users of the data management platform <b>110</b>. For example, a first user, e.g., father of a child, can set a relationship-specific rule <b>256</b> to share all digital content associated with the child of the first user with a second user, e.g., a mother of the child.</p><p id="p-0061" num="0060">Note that the universal data scaffold template <b>200</b> is not limited to the above universal definition <b>205</b> and the metadata <b>250</b>. The universal definition <b>205</b> can have more or less definitions, and the metadata can have more or less rules, and other settings associated with the digital content.</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating examples of universal data scaffold for multiple content types, consistent with various embodiments. The data management platform <b>110</b> supports storing digital content of various content types and each content type is defined using a universal data scaffold. A car universal data scaffold <b>305</b>, which is defined using the universal data scaffold template <b>200</b>, includes a set attributes that defines a digital content of the type &#x201c;car.&#x201d; For example, the set of attributes that defines the content type &#x201c;car&#x201d; include &#x201c;make,&#x201d; which is of data type string, &#x201c;model,&#x201d; which is of data type string, &#x201c;year,&#x201d; which is of data type date, and &#x201c;VIN&#x201d; which is of data type string. When a user stores a digital content of content type of &#x201c;car&#x201d; in the data management platform <b>110</b>, the data management platform <b>110</b> obtains attribute values for the above attributes defined in the car universal data scaffold <b>305</b>, e.g., either by prompting the user to manually provide the above attribute values or by automatically analyzing the digital content, which is described at least with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>. For example, when the user <b>135</b> uploads a first digital content, such as picture of a car, or a bill of sale of the car, the data management platform <b>110</b> can analyze the digital content to identify the content type as &#x201c;car&#x201d;, and obtain attribute values from the first digital content for the attributes make, model, and year as &#x201c;Ford,&#x201d; &#x201c;Fusion,&#x201d; and &#x201c;2014,&#x201d; respectively.</p><p id="p-0063" num="0062">The car universal data scaffold <b>305</b> further includes relationship attributes such as &#x201c;driven_by,&#x201d; &#x201c;owner&#x201d; and &#x201c;photo&#x201d; which define a relationship with other digital content, such as a person who drives the car, a person who owns the car, and a photo of the car, respectively. That is, the relationship attribute can identify a digital content related to the first digital content. Further, the related digital content can be of the same content type as the first digital content or of different content type. For example, the first digital content, such as a Ford Fusion car of the above example, can have a second digital content of type &#x201c;person,&#x201d; which can be a data record of the user &#x201c;John,&#x201d; as an attribute value of the relationship attributes &#x201c;driven_by&#x201d; and the &#x201c;owner,&#x201d; and a third digital content of type &#x201c;photo&#x201d; can be an attribute value of the attribute &#x201c;photo.&#x201d; In some embodiments, it is because of such relationships between different digital contents or content types, the data management platform <b>110</b> can mine the data storage system <b>125</b> for determining related digital content and link/or connect the related digital content. In some embodiments, the data management platform <b>110</b> will also prompt the user <b>135</b> when the user <b>135</b> uploads a digital content of the first content type to identify a related digital content, which can be of the same or different content type, in which such a determination is made based on the relationship attributes defined in the universal data scaffold for the first content type.</p><p id="p-0064" num="0063">Note that some attributes of the car universal data scaffold <b>305</b>, such as make, model, year and VIN, are native to the content type to which the universal data scaffold corresponds, e.g., direct values of the digital content, while other attributes, such as &#x201c;driven_by,&#x201d; &#x201c;owner,&#x201d; and &#x201c;photo&#x201d; are of derived type, e.g., values are derived from other content type. Further, note that not all attributes of a universal data scaffold may have attribute values. For example, the user <b>135</b> may not input, or the data management platform <b>110</b> may not determine, a value of a particular attribute, e.g., VIN, of the car universal data scaffold <b>305</b>. In some embodiments, the universal data scaffold may define at least some attributes as mandatory, which requires the user to input the value if the data management platform <b>110</b> is not able to determine one.</p><p id="p-0065" num="0064">The car universal data scaffold <b>305</b> is defined based on the universal data scaffold template <b>200</b>. For example, the type &#x201c;car&#x201d; corresponds to the type variable <b>210</b>, the attributes make, model, year and VIN corresponds to the field <b>215</b> variable and the data types of the attributes correspond to the field data type variable <b>220</b>, and the relationship attributes &#x201c;driven_by,&#x201d; &#x201c;owner,&#x201d; and &#x201c;photo&#x201d; correspond to the relationship variable <b>235</b>. The universal data scaffold template <b>200</b> also allows the user <b>135</b> to define ad hoc relationships between digital contents. Note that a universal data scaffold may not define all variables of the universal data scaffold template <b>200</b>. The car universal data scaffold <b>305</b> can also include metadata (not illustrated), such as the metadata <b>250</b>, which includes various settings and/or rules that the user can set or customize. In some embodiments, the rules in the metadata can have default values, which the user <b>135</b> can choose to customize.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>3</b></figref> also illustrates a person universal data scaffold <b>310</b>, which is used to define a content type &#x201c;person.&#x201d; That is, the person universal data scaffold <b>310</b> defines structured data associated with a person, and can include attributes such as a first name, middle name, last name, date of birth, address, email, and phone. The user <b>135</b> can use the person universal data scaffold <b>310</b> to store information associated with a person. A digital content of type &#x201c;person&#x201d; can be created in various ways, e.g., by uploading a picture of a person, identification document of a person, or just by creating a data record of the person in the GUI <b>115</b>. For example, a digital content of type &#x201c;person&#x201d; for a user, John, can have attribute values such as &#x201c;John,&#x201d; &#x201c;M.,&#x201d; &#x201c;Grisham,&#x201d; &#x201c;Dec. 31, 1899&#x201d; for the attributes a first name, middle name, last name, and date of birth, respectively, defined in the person universal data scaffold <b>310</b>. In the example of car universal data scaffold <b>305</b>, John can be represented as the driver and owner of the ford fusion car by linking the first digital content, which represents the Ford Fusion car, with the second digital content, such as a data record of John, by inputting the attribute values of the relationship attributes &#x201c;driven_by&#x201d; and the &#x201c;owner,&#x201d; as &#x201c;person.p1,&#x201d; wherein &#x201c;person&#x201d; is content type of the second digital content and &#x201c;p1&#x201d; is an object identifier of the second digital content. Note that the above syntax is just for illustration and various other forms of representation may be used for specifying a digital content as an attribute value.</p><p id="p-0067" num="0066">The universal data scaffolding enables the data management platform <b>110</b> to make intelligent determinations because the universal data scaffolding is common across the users of the data management platform <b>110</b>. For example, the data management platform <b>110</b> may be able to determine when the driver license, license plate, lease term, or insurance coverage will expire, and then take appropriate action, such as generating a notification at the user device <b>105</b> reminding the user <b>135</b> to renew the driver's license.</p><p id="p-0068" num="0067">The data management platform <b>110</b> defines various such universal data scaffolds for different content types. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example <b>400</b> of various content types supported by the data management platform <b>110</b>, consistent with various embodiments. The user <b>135</b> can upload digital content of many content types, e.g., content types <b>410</b>, to the data management platform <b>110</b>. In the example <b>400</b>, the content types <b>410</b> supported by the data management platform <b>110</b> include a car, a dog, a recipe, a house, a receipt, and a photo. Each of the content types <b>410</b> is defined using a separate universal data scaffold. For example, the content type &#x201c;car&#x201d; is defined using the car universal data scaffold <b>305</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Similarly, the content type &#x201c;dog&#x201d; can be defined using a dog universal scaffold, which can include attributes such as a breed, name, date of birth, photo, medicine, tag, Vet, walker, and genetic test. By building a storage archive of digital content of various content types <b>410</b>, and structuring the digital content using the universal data scaffolds, the data management platform <b>110</b> can make intelligent determinations about various aspects of the digital content, such as keeping track of various dates and generating notification reminders and/or making recommendations to the user <b>135</b>. For example, if the user <b>135</b> has stored digital content of type &#x201c;dog,&#x201d; such as pictures and/or information about a dog of the user <b>135</b>, the data management platform <b>110</b> can make a recommendation to the user <b>135</b> to get a genetic test done for the dog in an event the data management platform <b>110</b> determines that there are no attribute values associated with the attribute &#x201c;genetic test&#x201d; of the dog universal data scaffold.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of examples of structuring digital content uploaded to the data management platform <b>110</b> based on the universal data scaffolds, consistent with various embodiments. In the examples <b>510</b>-<b>520</b>, the data management platform <b>110</b> receives the digital content, analyzes the digital content to determine if any transformation to structured data is necessary, transforms, if necessary, the unstructured data to structured data based on a universal data scaffold associated with the content type of the digital content, and then stores the digital content in association with the universal data scaffold.</p><p id="p-0070" num="0069">In the first example <b>510</b>, the data management platform <b>110</b> identifies a content type of the digital content based on one or more input fields using which the user <b>135</b> inputs data associated with the digital content, and then stores the digital content in association with a universal data scaffold of the identified content type. The GUI <b>115</b> can provide different sets of input fields for receiving data of different content types. That is, certain input fields may be directly associated with certain universal data scaffold. Accordingly, by the virtue of the user <b>135</b> entering information in those fields, the data management platform <b>110</b> may inherently understand the content type and the structure of the data being entered. For example, the GUI <b>115</b> can include a first set of input fields configured to receive data for content type &#x201c;car.&#x201d; The data management platform <b>110</b> determines that any data input using the first set of input fields is structured data associated with the content type &#x201c;car,&#x201d; and therefore, stores that structure data in association with the car universal data scaffold.</p><p id="p-0071" num="0070">In the second example <b>515</b>, the data management platform <b>110</b> determines the content type of the uploaded digital content automatically, prompting the user <b>135</b> to identify the content type, or a combination. <figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of an example <b>600</b> of analyzing unstructured data associated with digital content to transform the unstructured data to a structured data of content type &#x201c;receipt,&#x201d; consistent with various embodiments. The user <b>135</b> can upload an image file <b>605</b>, which is a scan of a restaurant bill. The data management platform <b>110</b> can analyze the image file <b>605</b> using various techniques, e.g., optical character recognition (OCR), and identify the word &#x201c;Receipt,&#x201d; &#x201c;bill&#x201d; or the like in the image file <b>605</b>, and determine the image file <b>605</b> to be of content type &#x201c;receipt.&#x201d; The data management platform <b>110</b> can also determine the content type based on at least one of user input, machine learning techniques, or deductive inference rules. After determining the content type, the data management platform <b>110</b> can then retrieve the receipt universal data scaffold, which is a universal data scaffold defined for content type &#x201c;receipt,&#x201d; and determine a set of attributes <b>610</b> of the receipt from the receipt universal data scaffold, such as a restaurant name, date, price, and expense type. The data management platform <b>110</b> can continue to analyze the image file <b>605</b> to obtain or extract attribute values for the set of attributes <b>610</b>. For example, the data management platform <b>110</b> can obtain the values for the attributes restaurant name, date, and price as &#x201c;Murphy's Deli,&#x201d; &#x201c;Jun. 2, 2017&#x201d; and &#x201c;$1264,&#x201d; respectively. However, the data management platform <b>110</b> may not obtain the value for the attribute expense type. The data management platform <b>110</b> may prompt the user <b>135</b> to identify the expense type and receive the value from the user <b>135</b>. Thus, the data management platform <b>110</b> has transformed the unstructured data associated with the image file <b>605</b> to structured data of a content type &#x201c;receipt&#x201d; based on the receipt universal data scaffold.</p><p id="p-0072" num="0071">In the example <b>600</b>, the data management platform <b>110</b> determined some attribute values automatically and some by seeking input from the user <b>135</b>. In some embodiments, the data management platform <b>110</b> may automatically determine the necessary information in determining the structured data and not seek any input from the user <b>135</b>. For example, if the expense type is not a mandatory field, the data management platform <b>110</b> can end the analysis process after determining the attribute values for the other attributes (e.g., restaurant name, date, and price) and store the structured data. In some embodiments, the data management platform <b>110</b> can be even more interactive with the user <b>135</b> in determining the necessary information for generating the structured data. For example, if the data management platform <b>110</b> is not able to automatically determine the content type, the data management platform <b>110</b> may present a question such as &#x201c;What is this content? Please choose content type&#x201d; and present a list of content types for the user <b>135</b> to choose from. In some embodiments, the data management platform <b>110</b> may have automatically determined the content type as &#x201c;receipt&#x201d; but the accuracy of the determination may be below a predefined threshold, and therefore, the data management platform <b>110</b> can present a question such as &#x201c;Is this a receipt? Please confirm or choose another content type.&#x201d; The data management platform <b>110</b> can continue to ask the user <b>135</b> to confirm after each attribute value is determined or all at once.</p><p id="p-0073" num="0072">Continuing with <figref idref="DRAWINGS">FIG. <b>6</b></figref>, in yet another example, the data management platform <b>110</b> can be configured, e.g., using one of the rules in metadata associated with receipt universal data scaffold, to request if the user <b>135</b> wants to add a mileage receipt if the expense type of the restaurant bill is &#x201c;business.&#x201d; The degree of automation, or in other words, interaction between the user <b>135</b> and the data management platform <b>110</b>, in transforming the unstructured data to structured data can be configured by the user <b>135</b>, e.g., in one of the setting options provided by the data management platform <b>110</b>. For example, the degree of automation can be configured in three different levels as &#x201c;low,&#x201d; &#x201c;medium,&#x201d; and &#x201c;high&#x201d; in which low indicates a lowest of three levels of automation&#x2014;the number of questions presented to the user may be above a first threshold, &#x201c;high&#x201d; indicates a highest level of automation&#x2014;the number of questions presented to the user <b>135</b> may be below a second threshold (second threshold being lower that first threshold), and &#x201c;medium&#x201d; indicates a level of automation between &#x201c;low&#x201d; and &#x201c;high&#x201d;&#x2014;the number of questions presented to the user <b>135</b> may be between the first and second thresholds.</p><p id="p-0074" num="0073">Referring back to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in the third example <b>520</b>, the user <b>135</b> inputs the digital content of a specified content type in a structured format, and the data management platform <b>110</b> intelligently identifies the content type and stores the digital content in association with the universal data scaffold defined for the corresponding content type. For example, the user <b>135</b> can specify that the user is uploading an image file of a W2 document, or the data management platform <b>110</b> analyzes the W2 document, e.g., using OCR, to determine the image file is of type &#x201c;W2,&#x201d; and the data management maps the image file to the W2 universal data scaffold. The data management platform <b>110</b> continues to analyze the W2 document, e.g., using OCR, to obtain the attribute values of the attributes defined in the W2 universal data scaffold, and stores the structured data, e.g., the image file and attribute values, in association with the W2 universal data scaffold. In some embodiments, the user <b>135</b> can receive a digital content in structured data format from another user of the data management platform <b>110</b> and upload the received digital content to the data management platform <b>110</b>. In such embodiments, the data management platform <b>110</b> can readily identify the structured data based on the universal data scaffold associated with the received digital content, and store it accordingly.</p><p id="p-0075" num="0074">Structured data allows the data management platform <b>110</b> to collect, process, and present information in a more meaningful way. For example, if the user <b>135</b> uploads a digital content, such as an image of a car or a data record of the car, indicating that they own a vehicle, the data management platform <b>110</b> may begin analyzing other digital content to identify a driver license of a primary driver, a license plate, insurance documentation, etc., related to the vehicle. The data management platform may automatically link those digital contents as related to the car, prompt the user <b>135</b> to confirm that the documents are indeed related, or even prompt the user <b>135</b> to identify the related documents. Such an analysis and/or intelligence of the data management platform <b>110</b> is made possible by the use of a universal data scaffold.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is an example of a graph <b>700</b> of the digital contents associated with a user, consistent with various embodiments. As described above, the digital contents are stored in the data storage system <b>125</b> as a graph database, for example as graph <b>700</b>. The graph <b>700</b> represents digital contents as nodes, and relationships between the digital contents as edges connecting the nodes. For example, the graph <b>700</b> represents a first digital content, such as a data record or photo of a person, as a first node <b>705</b>, a second digital content, such as a data record or photo of a car, as a second node <b>710</b>, and a third digital content, such as an oil change receipt, as a third node <b>725</b>. Further, an edge <b>720</b> connecting the first node <b>705</b> and the second node <b>710</b> indicates a relationship <b>715</b> of &#x201c;primary driver&#x201d; between the digital content corresponding to the nodes in which the person corresponding to the first node <b>705</b> is a primary driver of the car corresponding to the second node <b>710</b>.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> is an example of a graphical representation <b>750</b> of the digital contents in a GUI, consistent with various embodiments. In some embodiments, the graphical representation <b>750</b> can be generated in the GUI <b>115</b>. The graphical representation <b>750</b> includes a digital content such as a picture <b>755</b> of a car, and multiple attributes <b>760</b> of the car, such as mileage, purchase date and VIN of the car. The picture <b>755</b>, and attributes <b>760</b> and their values can be obtained from the graph <b>700</b>, e.g., second node <b>710</b>. The graphical representation <b>750</b> also displays a license plate picture <b>765</b> of the car, which can be obtained from the second node <b>710</b> if the license plate is defined as an attribute of the car, or from another node (not illustrated) of the graph <b>700</b> if the license plate is defined as a related digital content.</p><p id="p-0078" num="0077">The graphical representation <b>750</b> also includes a tool bar <b>770</b> that provides several GUI elements using which the user <b>135</b> can perform several data management operations, such as add or remove a picture, change attribute values associated with the digital content displayed in the graphical representation <b>750</b>, or identify related digital content. In some embodiments, at least some of the operations allowed by the tool bar <b>770</b> are context sensitive to the type of digital content displayed in the graphical representation <b>750</b>, which is determined based on the universal data scaffold the digital content is associated with. For example, if the content type is a car such as the car of the picture <b>755</b> in the graphical representation <b>750</b>, then based on the car universal data scaffold <b>305</b>, the tool bar <b>770</b> can allow the user <b>135</b> to perform operations pertinent to the content type &#x201c;car&#x201d; such as viewing additional pictures of the car of the picture <b>755</b>; viewing/editing a primary driver or owner associated with the car of the picture <b>755</b>; viewing/editing attribute values associated with the car of the picture <b>755</b>; viewing/editing maintenance records associated with the car of the picture <b>755</b>; viewing/editing important dates associated with the car of the picture <b>755</b>, such as an expiration date of the registration of the car; etc. In another example, if the content type of the digital content displayed in the graphical representation <b>750</b> is a &#x201c;person&#x201d;, then based on the person universal data scaffold <b>310</b>, the tool bar <b>770</b> can allow the user <b>135</b> to perform operations including viewing additional pictures of the person; viewing/editing attributes associated with the person such as a first name, middle name, last name, a photo of the person; viewing/editing contact details; viewing/editing family or friends information associated with the person; viewing/editing important dates associated with the person, such as birthday, wedding anniversary, etc. Note that the graphical representation <b>750</b> can include GUI elements other than the tool bar <b>770</b>, which can provide the same operations as the tool bar <b>770</b> or different operations.</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>7</b>C</figref> is another example of a graphical representation <b>775</b> of the digital contents in a GUI, consistent with various embodiments. The graphical representation <b>775</b> includes a digital content such as a picture <b>776</b> of a car, and multiple attributes <b>777</b> of the car, all of which can be obtained from a graph of the digital contents, such as second node <b>710</b> of the graph <b>700</b>. The graphical representation <b>775</b> also displays a license plate picture <b>779</b> of the car, which can be obtained from the second node <b>710</b>. The graphical representation <b>775</b> also displays information regarding a primary driver of the car of the picture <b>776</b>, which can be obtained from the first node <b>705</b> based on the relationship <b>715</b>. The graphical representation <b>775</b> also displays information regarding a primary driver <b>778</b> of the car of the picture <b>776</b>, which can be obtained from the first node <b>705</b> based on the relationship <b>715</b>, and a picture of the driver's license of the primary driver <b>778</b>, which can be obtained from the third node <b>726</b> based on the relationship <b>727</b>.</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> is another example of a graphical representation <b>780</b> of the digital contents in a GUI, consistent with various embodiments. The graphical representation <b>780</b> includes the picture <b>776</b> of the car, the license plate picture <b>779</b> of the car and a first section <b>781</b> that displays information regarding insurance policy of the car of the picture <b>776</b>, which can be obtained from a specified node (not illustrated) related to the second node <b>710</b> based on the relationship such as &#x201c;insurance policy.&#x201d; The graphical representation <b>780</b> also displays the insurance policy documents <b>782</b>, which can be obtained from the specified node. In some embodiments, the user <b>135</b> may navigate to the graphical representation <b>780</b> by scrolling the graphical representation <b>775</b>.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>7</b>E</figref> is another example of a graphical representation <b>785</b> of the digital contents in a GUI, consistent with various embodiments. The graphical representation <b>785</b> includes the picture <b>776</b> of the car and a second section <b>786</b> that displays information regarding the insurance policy of the car of the picture <b>776</b>, such as insurance agent and carrier, which can be obtained from a specified node (not illustrated) related to the second node <b>710</b> based on the relationship such as &#x201c;insurer.&#x201d; In some embodiments, the user <b>135</b> may navigate to the graphical representation <b>785</b> by selecting one of the GUI elements in the graphical representation <b>780</b>.</p><p id="p-0082" num="0081">In some embodiments, the data management platform <b>110</b> downloads or caches a subset of the digital content associated with the user <b>135</b> at the user device <b>105</b>. The user <b>135</b> may navigate through the graphical representation <b>750</b> to view different digital contents and if a digital content is not stored in the user device <b>105</b>, then the data management platform <b>110</b> obtains the digital content from the server <b>120</b>. For example, in the graphical representation <b>750</b> if the user <b>135</b> selects an option from the tool bar <b>770</b> to view information regarding the owner or the primary driver of the car, and if the corresponding data, e.g., the first node <b>705</b>, is not stored at the user device <b>105</b>, the data management platform <b>110</b> can fetch the first node <b>705</b> from the server <b>120</b>, and then retrieve the details of the owner, such as a picture and name of the owner, from the first node <b>705</b>, and display the details of the owner in the graphical representation <b>750</b>.</p><p id="p-0083" num="0082">In some embodiments, the data management platform <b>110</b> can display some of the digital contents in the graphical representation <b>750</b> by default, e.g., when the data management platform <b>110</b> is opened by the user <b>135</b>. The data management platform <b>110</b> can select the digital contents to be displayed by default regardless of whether the user <b>135</b> requested for them. The selected digital contents are fetched from the server <b>120</b> and cached at the user device <b>105</b>. The selection can be done based on context associated with the user <b>135</b>, such as, the geographical location the user <b>135</b> is at, the date/day/time of the year/month/week, another user the user <b>135</b> is with, most frequently viewed digital content, most recently viewed digital content, digital content indicated as favorite, based on chronological order of the digital content added, based on a prediction that the user <b>135</b> may access a specified digital content (which can be determined based on a data access pattern of the user <b>135</b>), any other real-time characteristic associated with the user <b>135</b>, such as relevance of a current occasion, date, time, day, year, geographical location, etc. For example, if the user <b>135</b> is at a particular place, such as &#x201c;Golden Gate&#x201d; bridge in San Francisco, California, USA, the graphical representation <b>750</b> may display pictures that were captured at or near the Golden Gate bridge. In another example, if the user <b>135</b> is at a pediatrician clinic, and if the data management platform <b>110</b> determines that the user <b>135</b> has stored digital content associated with a child, such as immunization records of the child, results of lab tests, or medical reports, the graphical representation <b>750</b> may display the corresponding digital content. In still another example, the data management platform <b>110</b> may determine on a specific day that a year ago on the same date, the user <b>135</b> was vacationing in Hawaii, and the graphical representation <b>750</b> may display pictures associated with the vacation in Hawaii. In still another example, the data management platform <b>110</b> may determine that a specific day is a birthday of the user <b>135</b>, and the graphical representation <b>750</b> may display on the birthday of the user <b>135</b> pictures associated with prior birthday celebrations of the user <b>135</b>. In yet another example, if the data management platform <b>110</b> determines that the user <b>135</b> is with another user of the data management platform <b>110</b>, a second user, the graphical representation <b>750</b> may display digital content associated with both the users, e.g., pictures of occasions that are associated with both the users such as a get-together of both the users. In some embodiments, the user <b>135</b> may also customize the display settings in the data management platform <b>110</b> that indicates user-defined criteria for selecting digital content to be displayed in the graphical representation <b>750</b> by default.</p><p id="p-0084" num="0083">The structured data associated with the digital content, which is generated based on universal data scaffolds of the corresponding content type, enables the data management platform <b>110</b> to identify the related digital content, relationships between the digital content and generate the graphical representation <b>750</b>. By representing the digital content as a semantic graph, such as in the graph <b>700</b>, the data management platform <b>110</b> gives more meaning and/or context to the digital content hosted by the data management platform <b>110</b>. The user <b>135</b> can make more meaningful use of the digital content. For example, while the second node <b>710</b>, which corresponds to a car has structured information such as a first name, middle name, last name, a photo of the person, the relationships the second node <b>710</b> has with other nodes is what gives the structured data its context or meaning, such as (a) the car is driven by the person corresponding to the first node <b>705</b> and (b) oil change was performed on the car as indicated by the third node <b>725</b>. In another example, the user <b>135</b> can quickly and easily navigate to the node corresponding to the driver's license, and open the driver's license to review, e.g., check the expiration date on the driver's license.</p><p id="p-0085" num="0084">In some embodiments, the user <b>135</b> can share a digital content with another user of the data management platform <b>110</b>. For example, a specified user can request the data management platform <b>110</b> at the specified user's user device to obtain a group of digital contents associated with the user <b>135</b>. When the data management platform <b>110</b> on the user device <b>105</b> receives the request, the data management platform <b>110</b> at the user device <b>105</b> determines based on the metadata, e.g., sharing rules, associated with the universal data scaffolds of the group of digital contents, whether the group of digital contents can be shared with the specified user. In an event the data management platform <b>110</b> at the user device <b>105</b> determines that the group of the digital contents can be shared with the specified user, the data management platform <b>110</b> sends a message having the group of the digital contents to the specified user's user device. In some embodiments, the message can be sent to the specified user's user device via the server <b>120</b>. The data management platform <b>110</b> at the specified user's user device receives the message, and performs the necessary operations to merge the received group of digital contents with the digital contents associated with the specified user, e.g., based on the universal data scaffolds associated with the digital contents being merged, and displays the group of digital contents to the specified user, e.g., in the graphical representation <b>750</b>.</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of an example for generating recommendations based on intelligence derived from a graph <b>800</b> of the digital contents, consistent with various embodiments. In some embodiments, the graph <b>800</b> is similar to the graph <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, and the graph <b>800</b> may contains a subset of the entire digital content associated with the user <b>135</b>. The data management platform <b>110</b> can make use of the structured data associated with the digital content and the relationships between the nodes in the graph <b>800</b> to derive various types of intelligence, and generate recommendations, offers and/or notifications based on the derived intelligence. For example, the data management platform <b>110</b> can analyze the graph <b>800</b> to make a recommendation for a scenario such as &#x201c;Is there a car that has not had maintenance in 3 months?&#x201d; and if so, generate a recommendation to recommend the user <b>135</b> to get the maintenance work done on the car. The data management platform <b>110</b> can also generate a notification that reminds or alerts the user <b>135</b> that a maintenance is due soon or past due. Furthermore, the data management platform <b>110</b> can also present an offer for maintenance work from a particular vendor (e.g., one of the third-party entities <b>145</b>) to the user <b>135</b>.</p><p id="p-0087" num="0086">In some embodiments, to derive intelligence for such scenarios, the data management platform <b>110</b> can navigate the graph <b>800</b> in various paths (e.g., series of edges) and test for the presence/absence of nodes, and filter on attributes of the nodes and edges. For example, to derive the intelligence for the above scenario, the data management platform <b>110</b> navigates a first path <b>810</b> from first node <b>705</b> to third node <b>725</b> to determine if the person is associated with a car, and since the person is associated with the car as indicated by the second node <b>710</b> the data management platform <b>110</b> proceeds to determine if the car is associated with a maintenance record, and since the car is associated with a maintenance record as indicated by the third node <b>725</b>, the data management platform <b>110</b> proceeds to determine from the attributes of the third node <b>725</b> a date of the recent most maintenance. If the date of the maintenance is outside of 3 months, the data management platform <b>110</b> can proceed with generating a recommendation for the user <b>135</b>, which can be displayed to the user <b>135</b> in the GUI <b>115</b>.</p><p id="p-0088" num="0087">In another example, the data management platform <b>110</b> can similarly navigate a second path <b>805</b> from first node <b>705</b> to the fourth node <b>815</b> to determine if the person's driver license is due to expire in a specified period, e.g., 3 months, and if so, generate an appropriate recommendation.</p><p id="p-0089" num="0088">In some embodiments, each such scenario can be expressed as a query, and the result of the query is what triggers the data management platform <b>110</b> to make a recommendation or extend an offer.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of zero-knowledge encryption <b>900</b> of digital content, consistent with various embodiments. In some embodiments, the zero-knowledge encryption <b>900</b> can be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The data management platform <b>110</b> encrypts the digital content associated with the user <b>135</b> prior to backing them up to the server <b>120</b> so that the digital content stored at the server <b>120</b> is secure. In some embodiments, the data management platform <b>110</b> performs the encryption using zero-knowledge encryption <b>900</b>, which means that the digital content is stored at the server <b>120</b> in an encrypted bundle and the server <b>120</b> has no knowledge of the encrypted contents of the encrypted bundle since the server <b>120</b> does not have access to an encryption key used for encrypting the digital content at the user device <b>105</b>.</p><p id="p-0091" num="0090">In the zero-knowledge encryption <b>900</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, digital contents of two users, such as user A <b>905</b> and user B <b>910</b> are encrypted. The user A <b>905</b> uploads a first digital content <b>925</b> from a user device <b>914</b>, and user B <b>910</b> uploads a second digital content <b>920</b> from a user device <b>915</b>. In some embodiments, the users <b>905</b> and <b>910</b> are similar to user <b>135</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the user devices <b>914</b> and <b>915</b> are similar to user device <b>105</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Further, each of the user devices <b>914</b> and <b>915</b> can have a copy of the data management platform <b>110</b> installed and executing at the corresponding user device. The first digital content <b>925</b> and the second digital content <b>920</b> are both of content type &#x201c;car&#x201d; and therefore, associated with a car universal data scaffold, such as the car universal data scaffold <b>305</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0092" num="0091">The data management platform <b>110</b> stores the digital contents as a graph database in which the digital contents are represented as nodes of the graph. A node can be implemented as a data structure that contains the digital content, attribute values of the digital content, and an edge that connects the node to another node. An edge can be implemented as a data structure that contains the two nodes, which the edge connects, as the attributes of the edge data structure.</p><p id="p-0093" num="0092">In backing up the first digital content <b>925</b> to the server <b>120</b>, the data management platform <b>110</b> at the user device <b>914</b> encrypts a first node corresponding to the first digital content <b>925</b>, e.g., using an encryption key, to generate a first encrypted bundle <b>930</b>. The first encrypted bundle <b>930</b>, which is typically a blob, includes the car universal data scaffold <b>305</b> associated with the first digital content <b>925</b>, and user data <b>940</b> associated with the first digital content <b>925</b>. The user data <b>940</b> includes an encrypted version of the first digital content <b>925</b> (e.g., if the first digital content <b>925</b> is an image file having a picture of a car, then encrypted version of the image file), including encrypted version of the attribute values of the first digital content <b>925</b>, e.g., &#x201c;Acura,&#x201d; &#x201c;MDX,&#x201d; &#x201c;2017,&#x201d; and &#x201c;2342342.&#x201d; The first encrypted bundle <b>930</b> is then transmitted to the server <b>120</b> for storage at the data storage system <b>125</b>, e.g., in a storage block <b>950</b> allocated to user A <b>905</b>. The encryption is done at the user device <b>914</b>, e.g., using an encryption key that only the user device <b>914</b> has access to. Since the server <b>120</b> would not have access to the encrypted key used the by the user device <b>914</b> in encrypting the first digital content <b>925</b>, the first encrypted bundle <b>930</b> cannot be decrypted at the server <b>120</b>, therefore making the digital content secure at the server <b>120</b>.</p><p id="p-0094" num="0093">Similarly, the data management platform <b>110</b> at the user device <b>915</b> encrypts a second node corresponding to the second digital content <b>920</b>, using an encryption key whose access is restricted to the user device <b>915</b>, to generate a second encrypted bundle <b>935</b>. The second encrypted bundle <b>935</b> includes the car universal data scaffold <b>305</b> associated with the second digital content <b>920</b>, and user data <b>945</b> associated with the second digital content <b>920</b>, such as an encrypted version of the second digital content <b>920</b> and attribute values of the second digital content <b>920</b>, e.g., &#x201c;Jeep,&#x201d; &#x201c;Cherokee,&#x201d; &#x201c;2016,&#x201d; and &#x201c;3H3FJS.&#x201d; The second encrypted bundle <b>935</b> is transmitted to the server <b>120</b> for storage at the data storage system <b>125</b>, e.g., in a storage block <b>955</b> allocated to user B <b>910</b>.</p><p id="p-0095" num="0094">Note that while the user data can be different for different users for digital contents of the same type, the car universal data scaffold included in the two encrypted bundles are the same as the car universal data scaffold is common across all users of the data management platform <b>110</b>.</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram of an example <b>1000</b> of storing encrypted bundles in the data management platform <b>110</b> and the server <b>120</b>, consistent with various embodiments. In some embodiments, the example <b>1000</b> can be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and using the zero-knowledge encryption <b>900</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref>. As described above, the data management platform <b>110</b> can store the digital content in a graph database as nodes and edges. For example, the five digital contents depicted in the decrypted representation <b>1010</b>, which can be similar to the graph <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, are stored as five nodes with node identifiers n1-n5 and the four relationships between the nodes are stored as four edges with edge identifiers e1-e4 in a cache memory of the user device <b>105</b>.</p><p id="p-0097" num="0096">When the user device <b>105</b> is synchronized with the server <b>120</b>, the nodes and edges are encrypted to generate encrypted bundles, and then transmitted to the server <b>120</b> for storage as encrypted bundles. In the example <b>1000</b>, the storage block <b>950</b> at the server <b>120</b>, e.g., more specifically at the data storage system <b>125</b> associated with the server <b>120</b>, stores the encrypted bundles of all the digital content associated with the user <b>135</b>.</p><p id="p-0098" num="0097">Although the data management platform <b>110</b> backs up the encrypted bundles from the user device <b>105</b> to the server <b>120</b>, the data management platform <b>110</b> can store encrypted bundles of a subset of the digital content of the user <b>135</b> on the user device <b>105</b>. The example <b>1000</b> illustrates a node store <b>1005</b> on the user device <b>105</b> which stores the encrypted bundles having identifiers en1-en5 corresponding to the nodes n1-n5, respectively, and encrypted bundles having identifiers ee1-ee5 corresponding to the edges e1-e4, respectively (not all encrypted bundles of the nodes n1-n5 and edges e1-e4 are illustrated in the figure). The user device <b>105</b> can also have a key store <b>1015</b>, which stores a mapping of the node identifiers to the encrypted bundle identifiers, and a mapping of the edge identifiers to the encrypted bundle identifiers.</p><p id="p-0099" num="0098">In some embodiments, the data management platform <b>110</b> determines the subset of the digital content to be stored at the user device <b>105</b>, e.g., based on the context associated with the user <b>135</b> as described at least with reference to <figref idref="DRAWINGS">FIGS. <b>7</b>A-E</figref> above, and stores the encrypted bundles of the selected subset.</p><p id="p-0100" num="0099">In some embodiments, the data management platform <b>110</b> generates a separate encrypted bundle for each node and edge. By generating separate encrypted bundles for each node and edge, the data management platform <b>110</b> facilitates efficient retrieval of the digital content from the server <b>120</b>, e.g., retrieving one or more digital contents that are requested as opposed to being restricted to retrieving the digital contents as a group regardless of whether or not all digital contents in the group are requested. Such an efficient retrieval minimizes (a) the storage space consumed at the user device <b>105</b>, (b) the network bandwidth consumed in the retrieval, and (c) the time consumed in retrieving the required digital content.</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is an example <b>1100</b> illustrating zero-knowledge data retrieval from the server <b>120</b>, consistent with various embodiments. In some embodiments, the example <b>1100</b> may be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Consider that the server <b>120</b> stores the encrypted bundles of digital content corresponding to the graph representation <b>1105</b>. That is, the server <b>120</b> is storing encrypted bundles en1-en5 of the digital content represented by the nodes n1-n5, respectively, and encrypted bundles ee1-ee4 of the relationships represented by the edges e1-e4, respectively.</p><p id="p-0102" num="0101">In a first phase <b>1110</b>, the data management platform <b>110</b> fetches a subset of the digital content as seed records, which are the digital content to be displayed by default in the GUI <b>115</b> or the digital content which the user may shortly request to access. In some embodiments, the seed records can be determined based on the context associated with the user <b>135</b>, e.g., as described at least with reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref> above. In some embodiments, the encrypted bundles of the seed records are retrieved from the server <b>120</b> and stored at the user device <b>105</b> regardless of whether the user <b>135</b> requests those seed records. In the example <b>1100</b>, consider that data management platform <b>110</b> determines digital content represented by nodes n1 and n3 as seed records, and therefore, retrieves the encrypted data <b>1120</b>, which includes encrypted bundles, en1 and en3, of the nodes n1 and n3, and encrypted bundle, ee2, of edge e2. The data management platform <b>110</b> decrypts <b>1125</b> the encrypted data <b>1120</b> to generate the nodes n1, n3 and edge e2. When the user <b>135</b> accesses the GUI <b>115</b> to view the digital contents, the data management platform <b>110</b> displays the nodes n1, n3 and the edge e2 connecting the nodes n1 and n2 in the GUI <b>115</b>. The first phase <b>1110</b> can be triggered at various instances, e.g., when the context associated with the user <b>135</b> changes.</p><p id="p-0103" num="0102">In the second phase <b>1115</b>, which can be triggered when the user <b>135</b> requests for accessing one or more digital contents, the user <b>135</b> requests for a digital content corresponding to node n2. The data management platform <b>110</b> determines if the node n2 is available at the user device <b>105</b>, e.g., in the cache memory or the on-device storage. If the node n2 is available at the user device <b>105</b>, the data management platform <b>110</b> presents the digital content corresponding to the node n2 in the GUI <b>115</b>. On the other hand, if the node n2 is not available, the data management platform <b>110</b> determines the encrypted bundle identifier of the node n2, e.g., using the mapping stored in the key store <b>1015</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>, requests the server <b>120</b> to retrieve the encrypted bundle en2. After receiving the second encrypted data <b>1130</b>, which includes the encrypted bundle en2, the data management platform <b>110</b> decrypts <b>1135</b> the second encrypted data <b>1130</b> to generate the node n2. After decrypting the node n2, the data management platform <b>110</b> also retrieves the edge IDs of the edges e.g., edge e1, associated with the node n2, determines if those edges are available at the user device <b>105</b> (e.g., downloaded as part of seed records), and in the event they are not available, requests the server <b>120</b> to retrieve those edges as well. After the encrypted bundles of the edges are received, the data management platform <b>110</b> decrypts the encrypted bundles of the edges to generate the edges, e.g., edge e1, and then based on the information in the edge e1, the data management platform <b>110</b> connects the nodes n1 and n2 with the edge e1 in the GUI <b>115</b>.</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram of an example <b>1200</b> for presenting offers to users of the data management platform, consistent with various embodiments. In some embodiments, the example <b>1200</b> may be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The data management platform <b>110</b> also facilitates zero-knowledge offers in which offers of goods and/or services are stored at user devices, e.g., as part of the universal data scaffolds <b>155</b>, but are displayed to those users who satisfy a specified criterion, and an eligible user, if interested, may then accept, reject, or ignore the offer. Neither the server <b>120</b> nor a vendor, e.g., one of the third-party entities <b>145</b>, who has provided the offer may know to which users a specified offer was displayed until a user accepts the specified offer. In some embodiments, a zero-knowledge offer is an offer that may only be known to the user to whom the offer was displayed until acceptance. An offer just resides on the user devices until the criterion for displaying the offer is satisfied, which is when the offer is presented to the user. No privacy or security of the users are compromised from the zero-knowledge offers. The server <b>120</b> stores users' data as encrypted bundles <b>1215</b>, which can be similar to the encrypted bundles <b>930</b> and <b>935</b>, the contents of which are not readable either by the server <b>120</b> or the vendors.</p><p id="p-0105" num="0104">The server <b>120</b> receives offers from vendors, e.g., the third-party entities <b>145</b>, such as an offer <b>1205</b> for an extended warranty for a car, to be presented to multiple users of the data management platform <b>110</b>. The offer <b>1205</b> can also include a vendor-defined criterion <b>1210</b>, which defines the criterion for displaying the offer <b>1205</b> to a user. For example, the vendor-defined criterion <b>1210</b> can indicate that the offer <b>1205</b> is to be presented to users having a car that is older than a specified year, e.g., <b>2018</b>. In some embodiments, the server <b>120</b> redefines or reformulates the vendor-defined criterion <b>1210</b> to be compliant with the definition of universal data scaffolds <b>155</b>. For example, the server <b>120</b> can incorporate the appropriate attribute of the car universal data scaffold <b>305</b>, such as &#x201c;carUDS.YEAR&#x3c;2018,&#x201d; in which &#x201c;carUDS&#x201d; is the identifier of the car universal data scaffold and &#x201c;YEAR&#x201d; is the attribute of the car universal data scaffold <b>305</b> in the criterion <b>1210</b> to generate a server-defined criterion <b>1220</b>. Note that the above syntax is just for illustration and various other forms of representation may be used for generating the server-defined criterion <b>1220</b>. Further, note that the criterion for displaying the offer can be based on attributes of multiple digital contents, and is not restricted to attributes of just one digital content. The server <b>120</b> then generates a program code <b>1235</b> having the offer <b>1205</b> and the server-defined criterion <b>1220</b>, and includes the program code <b>1235</b> as part of the car universal data scaffold <b>305</b>.</p><p id="p-0106" num="0105">When the users install the data management platform <b>110</b> on their user devices, e.g., by downloading the data management platform app to the user device, the universal data scaffolds <b>155</b> are downloaded to and stored at the user devices. So, the program code having the offers would also be stored on the user devices as part of the universal data scaffolds <b>155</b>. For example, the program code <b>1235</b> having the offer <b>1205</b> will be stored as part of the car universal data scaffold <b>305</b> at the user devices. The program code <b>1235</b> is executed in the data management platform <b>110</b> at the corresponding user devices. For example, the user device <b>105</b> executes the program code <b>1235</b> in the data management platform <b>110</b>. Upon execution, the program code <b>1235</b> monitors the attribute values of the first digital content <b>925</b> to determine if the first digital content <b>925</b> satisfies the server-defined criterion <b>1220</b>, and in an event the attribute values satisfy the server-defined criterion <b>1220</b>, the program code <b>1235</b> presents the offer <b>1205</b> to the user <b>135</b> in the GUI <b>115</b>. For example, the program code <b>1235</b> determines that the attribute value of the attribute YEAR in the first digital content <b>925</b>, which is &#x201c;2017&#x201d; is less than &#x201c;2018,&#x201d; and therefore, satisfies the server-defined criterion <b>1220</b>.</p><p id="p-0107" num="0106">The user <b>135</b> can choose to accept, reject, or ignore the offer <b>1205</b>. If the user <b>135</b> chooses to accept the offer <b>1205</b>, a response <b>1225</b> indicating the acceptance is sent from the user device <b>105</b> to the server <b>120</b>. The server <b>120</b> can forward the response <b>1225</b> as an acceptance <b>1230</b> of the offer <b>1205</b> to the vendor of the offer <b>1205</b>. The server <b>120</b> or the vendor may not know until the user <b>135</b> has accepted the offer if the offer <b>1205</b> was displayed to the user <b>135</b>, or to which the users the offer <b>1205</b> was displayed. In some embodiments, even after the user <b>135</b> accepts the offer <b>1205</b>, the data management platform <b>110</b> may anonymize the response <b>1225</b>, e.g. by removing some or all user identification information of the user <b>135</b>, before transmitting the response <b>1225</b> to the server <b>120</b>, which may be forwarded as an acceptance <b>1230</b> to the vendor. However, in some embodiments, some user identification may be necessary by the server <b>120</b> to have the offer <b>1205</b> serviced by the vendor. In such cases, the response <b>1225</b> may not be anonymized but the acceptance <b>1230</b> which is forwarded to the vendor may be anonymized. In some embodiments, some user identification may be necessary either by the server <b>120</b> or the vendor to honor the offer <b>1205</b>, and in such cases, user identification information may be transmitted with the acceptance <b>1230</b> to the vendor, but after obtaining permission from the user <b>135</b> to share the user identification information with the vendor.</p><p id="p-0108" num="0107">In some embodiments, the data management platform <b>110</b> or the server <b>120</b> may anonymize the offer <b>1205</b>, e.g., by removing identification information of the vendor, before presenting the offer <b>1205</b> to the user.</p><p id="p-0109" num="0108">In some embodiments, the server <b>120</b> can receive multiple offers for the same service or a product from multiple vendors. The server <b>120</b> can define an offer-selection criterion to select an offer from the multiple competing offers, determine the offer that satisfies the offer-selection criterion, and include the selected offer, e.g., as program code, in the corresponding universal data scaffold. In some embodiments, the server <b>120</b> can select more than offer to be included in the universal data scaffold. For example, the server <b>120</b> can include a first competing offer and a second competing offer in which the first competing offer is presented if a first criterion is satisfied and the second competing offer is presented if a second criterion is satisfied.</p><p id="p-0110" num="0109">The offers, which are part of the universal data scaffolds <b>155</b>, are typically stored at the user devices when the users install the data management platform <b>110</b> on their corresponding user devices. However, in some embodiments, the offers can also be transmitted to the users at other times. For example, when the offers are updated, such as new offers are received by the server <b>120</b>, criterion of an existing offer changes, or some existing offers are not valid anymore, the server <b>120</b> updates the universal data scaffolds of which the updated offers are a part, and transmits the updates to the universal data scaffolds to the users, e.g., as part of an app update. The transmission of the app update to the user devices are triggered based on one or more conditions, e.g., based on a specified time interval such as daily basis or weekly basis; or when the user <b>135</b> opens the data management platform <b>110</b> app on the user device <b>105</b>.</p><p id="p-0111" num="0110">As described at least with reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, because the digital content is stored as structured data using the universal data scaffolds, various types of intelligence can be derived by performing various analyses of the digital content, and such intelligence can be used to make relevant offers to the users. For example, if the server <b>120</b> determines that a particular user, e.g., a parent stores digital content associated with a child and various profiles of a nanny, the server <b>120</b> may send offers for background check services to the parent. When the parent opens a profile associated with the child's nanny, the data management platform <b>110</b> may present an offer to order a background check if no background check has been performed for the nanny yet.</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram of the data management platform <b>110</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, consistent with various embodiments. The data management platform <b>110</b> includes components such as a data transceiver component <b>1305</b>, a data scaffold component <b>1310</b>, an attribute value determination component <b>1315</b>, a data storage component <b>1320</b>, a GUI component <b>1325</b>, an encryption component <b>1330</b>, and offer management component <b>1335</b>. The functionalities of the above components are described at least with reference to <figref idref="DRAWINGS">FIGS. <b>15</b>-<b>19</b></figref> below.</p><p id="p-0113" num="0112">Note that the data management platform <b>110</b> may include some or all of these components, as well as other components not shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>. For example, the data management platform <b>110</b> can include lesser number of components, e.g., functionalities of two components can be combined into one component, or can include more number of components, e.g., components that perform other functionalities. In some embodiments, the functionalities of one or more of the above components can be split into two or more components. In some embodiments, the data management platform <b>110</b> resides on the user device <b>105</b>. In some embodiments, the data management platform <b>110</b> resides on the server <b>120</b>. In some embodiments, the data management platform <b>110</b> can be distributed across the server <b>120</b> and the user device <b>105</b>. Those skilled in the art will recognize that the components of the data management platform <b>110</b> can be distributed between the server <b>120</b> and the user device <b>105</b> in various manners.</p><p id="p-0114" num="0113"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram of the server <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, consistent with various embodiments. The server <b>120</b> includes components such as a data transceiver component <b>1405</b>, an offer management component <b>1410</b>, and a data storage component <b>1415</b>. The functionalities of the above components are described at least with reference to <figref idref="DRAWINGS">FIGS. <b>15</b>-<b>19</b></figref> below.</p><p id="p-0115" num="0114">Note that the server <b>120</b> may include some or all of these components, as well as other components not shown in <figref idref="DRAWINGS">FIG. <b>14</b></figref>. For example, the server <b>120</b> can include lesser number of components, e.g., functionalities of two components can be combined into one component, or can include higher number of components, e.g., components that perform other functionalities. In some embodiments, the functionalities of one or more of the above components can be split into two or more components. Further, the components can be implemented at a single server device or distributed across server devices.</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flow diagram of a process <b>1500</b> for performing data management operations on the digital contents associated with a user in a data management platform. In some embodiments, the process <b>1500</b> can be implemented in the environment <b>100</b> of FIG. <b>1</b>. At block <b>1501</b>, the data management platform <b>110</b> is launched on the user device <b>105</b>. For example, the data management platform <b>110</b> is an app running on the user device <b>105</b>. The data management platform <b>110</b> can a communication link to be established with a server <b>120</b> via network <b>130</b>.</p><p id="p-0117" num="0116">At block <b>1502</b>, the data transceiver component <b>1305</b> receives a digital content, such as a picture of a car or a bill of sale of the car, uploaded by the user <b>135</b> using the GUI <b>115</b>. For example, the user <b>135</b> may select the digital content from a local storage on the user device <b>105</b> or from another digital content source <b>140</b> such as a file hosting service (e.g., Dropbox&#xae;, Google Drive&#xae;, or Microsoft OneDrive&#xae;) that interfaces with the data management platform <b>110</b> (e.g., via an API).</p><p id="p-0118" num="0117">At block <b>1503</b>, the data scaffold component <b>1310</b> maps the digital content to one of the content types defined in the data management platform <b>110</b>. The data scaffold component can determine the content type using any of the multiple methods described at least with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref> above. For example, the data scaffold component <b>1310</b> can identify the content type based on the input fields used in the GUI <b>115</b> to enter the digital content. In another example, the data scaffold component <b>1310</b> can automatically analyze the digital content, e.g., using OCR, and determine the content type based on machine learning techniques and/or deductive inference rules. In still another example, the data scaffold component <b>1310</b> can prompt the user <b>135</b> to identify the content type from a list of content types.</p><p id="p-0119" num="0118">At block <b>1504</b>, after determining the content type, the data scaffold component <b>1310</b> retrieves a universal data scaffold corresponding to the identified content type, which defines the content type using a set of attributes and metadata (such as rules). For example, if the content type is identified as a &#x201c;car,&#x201d; then the data scaffold component <b>1310</b> retrieves the car universal data scaffold <b>305</b> from the data management platform <b>110</b>.</p><p id="p-0120" num="0119">At block <b>1505</b>, the attribute value determination component <b>1315</b> identifies the set of attributes defined in the universal data scaffold and analyzes the digital content to obtain values for the set of attributes. For example, the attribute value determination component <b>1315</b> can identify the set of attributes defined in the car universal data scaffold as make, model, year, and VIN. The attribute value determination component <b>1315</b> can analyze the digital content, e.g., using OCR, to obtain the attribute values for the above attributes, and/or prompt the user <b>135</b> to input all or some of the attribute values.</p><p id="p-0121" num="0120">At block <b>1506</b>, the data storage component <b>1320</b> stores the digital content in a structured format, e.g., along with the attribute values and the universal data scaffold of the digital content, in the user device <b>105</b>. In some embodiments, the data storage component <b>1320</b> stores the digital content as a graph database in which the digital contents are represented as nodes of the graph and a relationship between the digital contents as an edge between the corresponding nodes.</p><p id="p-0122" num="0121">At block <b>1507</b>, the GUI component <b>1325</b> generates a GUI to present the digital contents to the user <b>135</b> on the user device <b>105</b>. For example, the GUI component <b>1325</b> generates a graphical representation <b>750</b> that displays the digital contents. In some embodiments, the information regarding the digital content presented in the graphical representation <b>750</b> may be obtained from the graph <b>700</b>. The GUI component <b>1325</b> retrieves the digital contents to be displayed in the graphical representation <b>750</b> from the node store <b>1005</b> of the user device <b>105</b>, or from the server <b>120</b> in an event they are not available in the node store <b>1005</b>.</p><p id="p-0123" num="0122">The digital contents stored at the user device <b>105</b> are typically backed up to the server <b>120</b> for archiving. At block <b>1508</b>, the data storage component <b>1320</b> can synchronize the user device <b>105</b> with the server <b>120</b> to back up the digital contents from the user device <b>105</b> to the server <b>120</b>. The data storage component <b>1415</b> of the server <b>120</b> can store the backed up digital contents at the data storage system <b>125</b>. In some embodiments, in the synchronization process, the data transceiver component <b>1305</b> transmits only those digital contents that are not yet backed up to the server and/or the digital contents that have been modified at the user device <b>105</b>.</p><p id="p-0124" num="0123"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a flow diagram of a process <b>1600</b> for displaying the digital contents on the user device, consistent with various embodiments. In some embodiments, the process <b>1600</b> may be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. At block <b>1605</b>, the data transceiver component <b>1305</b> receives a request from the user <b>135</b> for downloading digital contents associated with the user <b>135</b> from the server <b>120</b>. The user <b>135</b> can issue such a request using the GUI <b>115</b>.</p><p id="p-0125" num="0124">At block <b>1610</b>, the data transceiver component <b>1305</b> downloads at least some of the digital contents from the server <b>120</b> to the user device <b>105</b>. In some embodiments, the number of digital contents downloaded can be determined based on a total number of digital contents stored at server <b>120</b> that are associated with the user <b>135</b> and a memory space available for storing the digital contents at the user device <b>105</b>. In some embodiments, the digital contents that are downloaded can be selected by the data transceiver component <b>1305</b> based on a context associated with the user <b>135</b>. The downloaded digital contents can be stored in the node store <b>1005</b>. When the downloaded contents are stored in the node store <b>1005</b>, some of the digital contents that are already stored in the node store <b>1005</b> may be removed from the node store <b>1005</b> to accommodate the downloaded digital contents.</p><p id="p-0126" num="0125">At block <b>1615</b>, the data storage component <b>1320</b> retrieves a first digital content from the downloaded digital contents, e.g., based on the context associated with the user <b>135</b>.</p><p id="p-0127" num="0126">At block <b>1620</b>, the data storage component <b>1320</b> retrieves a set of digital contents that are related to the first digital content. For example, the data storage component <b>1320</b> can inspect the node corresponding to the first digital content to obtain the edges of the node, and then inspect each of the edges to determine the other node to which the node is connected, thereby determining the set of digital contents that is related to the first digital content.</p><p id="p-0128" num="0127">At block <b>1625</b>, the GUI component <b>1325</b> generates a graphical representation of the first digital content and the set of digital contents based on the nodes and edges determined in block <b>1620</b>. For example, the graphical representation can be similar to the graphical representation <b>750</b> of <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>.</p><p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flow diagram of a process <b>1700</b> for performing zero-knowledge encryption of the digital contents in the data management platform, consistent with various embodiments. In some embodiments, the process <b>1700</b> may be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. At block <b>1705</b>, the data transceiver component <b>1305</b> receives multiple digital contents from the user <b>135</b>. For example, the user <b>135</b> may upload the digital contents using the GUI <b>115</b>.</p><p id="p-0130" num="0129">At block <b>1710</b>, the data storage component <b>1320</b> stores the digital components at the user device <b>105</b>, e.g., in the node store, as a graph database in which the digital contents are represented as nodes of the graph and a relationship between the digital contents as an edge between the corresponding nodes.</p><p id="p-0131" num="0130">At block <b>1715</b>, the encryption component <b>1330</b> encrypts a first node corresponding to a first digital content to generate a first encrypted bundle of the first node. The encryption component <b>1330</b> also packages a first universal data scaffold with which the first digital content is associated in the first encrypted bundle. That is, the first encrypted bundle can include the first universal data scaffold and an encrypted version of the first digital content, including the attribute values of the attributes of the first digital content. The attributes are defined by the first universal data scaffold. The data storage component <b>1320</b> can store the first encrypted bundle in the node store <b>1005</b>. The encryption component <b>1330</b> encrypts the first node using an encryption key that is typically accessible or available only at the user device <b>105</b>. The encryption key can also be used for decrypting the first encrypted bundle to extract the first digital content. The encryption component <b>1330</b> can use any of multiple encryption techniques for performing the encryption.</p><p id="p-0132" num="0131">At block <b>1720</b>, the data transceiver component <b>1305</b> transmits the first encrypted bundle to the server <b>120</b> for storage at the data storage system <b>125</b>. The data storage component <b>1415</b> of the server <b>120</b> receives the first encrypted bundle and stores it at the data storage system <b>125</b>. In some embodiments, the data transceiver component <b>1305</b> transmits the first encrypted bundle to the server <b>120</b> when the user device is synchronized with the server <b>120</b>.</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flow diagram of a process <b>1800</b> for decrypting the digital contents in the data management platform, consistent with various embodiments. In some embodiments, the process <b>1800</b> can be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. At block <b>1805</b>, the data transceiver component <b>1305</b> receives a request for a specified digital content from the user <b>135</b>.</p><p id="p-0134" num="0133">At determination block <b>1810</b>, the data storage component <b>1320</b> determines whether the specified digital content is available at the user device <b>105</b>. For example, the data storage component <b>1320</b> can determine if a specified node corresponding to the specified digital content, or if a specified encrypted bundle corresponding to the specified node, is available in the node store <b>1005</b>.</p><p id="p-0135" num="0134">In an event either the specified node or the specified encrypted bundle is available at the user device <b>105</b>, the process proceeds to block <b>1820</b>. On the other hand, if the data storage component determines that neither the specified node nor the specified encrypted bundle is available at the user device <b>105</b>, at block <b>1815</b>, the data transceiver component <b>1305</b> retrieves the specified encrypted bundle from the server <b>120</b>. For example, the data storage component <b>1415</b> of the server <b>120</b> can retrieve the specified encrypted bundle from the data storage system <b>125</b> and the data transceiver component <b>1405</b> at the server <b>120</b> can transmit it to the data transceiver component <b>1305</b>.</p><p id="p-0136" num="0135">At block <b>1820</b>, the encryption component <b>1330</b> decrypts the specified encrypted bundle to extract (a) the specified node, which includes the specified digital content and its attribute values, and (b) a specified universal data scaffold corresponding to the specified digital content.</p><p id="p-0137" num="0136">At block <b>1825</b>, the GUI component <b>1325</b> generates a graphical representation of the specified node in the GUI <b>115</b>, which corresponds to the specified digital content. The graphical representation can be similar to the graphical representation <b>750</b> of <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>. The graphical representation <b>750</b> can display the attributes and attribute values associated with the specified digital content. The attributes of the specified node are determined based on the specified universal data scaffold associated with the specified digital content.</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flow diagram of a process <b>1900</b> for sending zero-knowledge offers to the users of the data management platform <b>110</b>, consistent with various embodiments. In some embodiments, the process <b>1900</b> can be implemented in the environment <b>100</b> of FIG. <b>1</b>. At block <b>1905</b>, the data transceiver component <b>1405</b> at the server <b>120</b> receives a specified offer from a vendor for presenting to users of the data management platform <b>110</b>. The specified offer can also include information such as a criterion for presenting the specified offer to the users. Typically, an offer is associated with or relevant to a specified content type. For example, an offer for extended warranty for a car is associated with the content type &#x201c;car.&#x201d;</p><p id="p-0139" num="0138">At block <b>1910</b>, the offer management component <b>1410</b> determines a universal scaffold, that is, the content type, with which the specified offer is to be presented. In some embodiments, the offer management component <b>1410</b> can analyze the data associated with the specified offer to determine the content type to which the offer is relevant. The offer management component <b>1410</b> can automatically analyze the specified offer, e.g., using OCR, and determine the content type based on machine learning techniques and/or deductive inference rules, or obtain the content type from the vendor.</p><p id="p-0140" num="0139">At block <b>1915</b>, the offer management component <b>1410</b> generates a program code for presenting the specified offer to the users. The program code includes the specified offer and a server-defined criterion for presenting the specified offer to the users. The server-defined criterion is generated by redefining or reformulating the vendor-provided criterion of the specified offer using the attributes of the universal data scaffold. For example, the offer management component <b>1410</b> can reformulate a vendor-defined criterion, which states that the specified offer is to be presented to users with cars that are of year &#x201c;2017&#x201d; or older, by incorporating the appropriate attribute of the car universal data scaffold to generate the server-defined criterion, such as &#x201c;carUDS.YEAR&#x3c;=2017,&#x201d; in which &#x201c;carUDS&#x201d; is the identifier of the car universal data scaffold and &#x201c;YEAR&#x201d; is the attribute of the car universal data scaffold.</p><p id="p-0141" num="0140">The program code can be an executable code that can be executed at the user devices. The program code is also configured to monitor the attribute values of the digital content for which the specified offer is to be presented.</p><p id="p-0142" num="0141">At block <b>1920</b>, the offer management component <b>1410</b> stores the program code as part of the universal data scaffold. When the users install the data management platform <b>110</b> at their corresponding user devices, the universal data scaffold is stored at the user devices. Because the universal data scaffold is same for all users of the data management platform <b>110</b>, all the users will have the same specified offer stored in their corresponding user devices.</p><p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a flow diagram of a process <b>2000</b> for displaying the zero-knowledge offers to the users of the data management platform <b>110</b>, consistent with various embodiments. In some embodiments, the process <b>2000</b> can be implemented in the environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. At block <b>2005</b>, the offer management component <b>1335</b> executes a program code stored as part of a universal data scaffold at the user device <b>105</b>. The program code includes a specified offer that is to be presented to the user <b>135</b> in association with a digital content at the user device <b>105</b>.</p><p id="p-0144" num="0143">At block <b>2010</b>, the offer management component <b>1335</b> executes the program code to monitor attribute values of the digital content for which the specified offer is to be presented.</p><p id="p-0145" num="0144">At determination block <b>2015</b>, the offer management component <b>1335</b> determines whether the attribute values satisfy the server-defined criterion in the program code.</p><p id="p-0146" num="0145">If the attribute values do not satisfy the server-defined criterion, the process continues to monitor the attribute values (block <b>2010</b>). In an event the attribute values satisfy the server-defined criterion, at block <b>2020</b>, the offer management component <b>1335</b> presents or displays the specified offer to the user <b>135</b>.</p><p id="p-0147" num="0146">At determination block <b>2025</b>, the offer management component <b>1335</b> determines whether the user <b>135</b> accepted the specified offer. In an event the user accepted the specified offer, at block <b>2030</b>, the data transceiver component <b>1305</b> transmits a response to the server <b>120</b> indicating an acceptance of the specified offer. In some embodiments, the response may be anonymized, e.g., by removing some or all of user identification information, prior to transmitting the response to the server <b>120</b> to preserve the privacy of the user <b>135</b>.</p><p id="p-0148" num="0147">In an event the user <b>135</b> has not accepted the specified offer, e.g., rejected or ignored, the process <b>2000</b> returns.</p><p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows a system capable of presenting a suggestion to the user. The suggestion can be an offer and can be algorithmic, meaning, that the suggestion can be expressed as part of an executable computer code. Data <b>2100</b> formatted according to the data structure can reside on a user device <b>105</b> and can come from a private or a public database. A private database can include information such as make and model of user's car, user's address, number of children, etc. A public database can include information such as size of the house, size of the yard, phone number, etc. The private database can exist unencrypted on the user device <b>105</b> and can contain the user's information such as <b>2100</b>. An encrypted version <b>2110</b> of the private database can exist on the server <b>210</b>. Because the private database is encrypted on the server <b>210</b>, the server does not have the knowledge of the user's private data, and consequently the user's privacy is protected.</p><p id="p-0150" num="0149">A provider <b>2120</b>, such as a babysitting service, a landscaping company, an insurance company, etc., can provide pricing criteria <b>2130</b> to the server <b>210</b> describing how the provider prices the provider's goods and/or services. For example, if the provider is a babysitting service, the pricing criteria <b>2130</b> can be a function of the number of children. If the user has one child, the pricing is $15 an hour, and for each additional child the price per hour goes up by $5. In another example, if the provider is a landscaping company, the pricing criteria <b>2130</b> can be a function of the size of the lawn, the number of trees and bushes, and/or whether the trees are fruit trees. The pricing criteria <b>2130</b> can specify that the landscaping services are $0.25 per square foot of lawn and $1 per bush. The pricing criteria <b>2130</b> can be transmitted to the user device <b>105</b>.</p><p id="p-0151" num="0150">The server <b>210</b> can also transmit to the user device <b>105</b> a suggestion detection module <b>2140</b>. The user device <b>105</b> can store the suggestion detection module <b>2140</b>, thus avoiding consuming bandwidth by repeatedly downloading the suggestion detection module <b>2140</b>. The suggestion detection module <b>2140</b> can receive the pricing criteria <b>2130</b> from various providers and can analyze the data structure <b>2100</b> to determine whether a relevant suggestion can be made to the user. For example, if the user has no children, the suggestion detection module <b>2140</b>, upon receiving pricing criteria for babysitting services, would not make a babysitting suggestion to the user. In another example, if the suggestion detection module <b>2140</b> detects that the user's house has a yard, the suggestion detection module <b>2140</b> can present a suggestion <b>2150</b> to the user for landscaping services. The suggestion <b>2150</b> can include a suggestion to schedule an appointment for the provider services, such as landscaping, babysitting, haircutting, dog grooming, car detailing.</p><p id="p-0152" num="0151">The user's data <b>2100</b> remains private because the decrypted data <b>2100</b> exists only on the user device <b>105</b>, while the server <b>210</b> only has access to encrypted data <b>2110</b>. Consequently, the server <b>210</b> does not know what suggestions are being made to each user, since they are made based on a universal scaffolding algorithm running on the user device <b>105</b> that sees the private data <b>2100</b> that the server <b>210</b> does not have access to. In fact, the server <b>210</b> does not even know that a suggestion was made. The fact that a user saw a suggestion is completely private (visible to only to the user) until the user acts on the suggestion. Once the user accepts the suggestion, the identity of the user can be known to the server <b>210</b> but can be masked from the provider <b>2120</b>. For example, if the user requests a background check for a babysitter, the background check and service provider may not be aware of the identity of the requester.</p><p id="p-0153" num="0152">The suggestion <b>2150</b> can be tailored to the individual user based on the suggestion detection module's <b>2140</b> analysis of the user's data <b>2100</b>. The suggestion detection module <b>2140</b> can operate on the user device <b>105</b> without disclosing the user's private data <b>2100</b> to the server <b>210</b>. The suggestion <b>2150</b> can be based on the user's data <b>2100</b> and specific criteria <b>2130</b> that are known only by traversing the user's cryptographically private data graph.</p><p id="p-0154" num="0153">The suggestion detection module <b>2140</b> can consider a variety of relevant data when determining whether a suggestion should be made, and which suggestion should be made. The suggestion detection module <b>2140</b> can be provided to all users within the universal scaffolding and/or can be provided to a subset of users who are interested in receiving suggestions <b>2150</b>. The suggestion detection module <b>2140</b> can provide a customized/unique output for each user.</p><p id="p-0155" num="0154">The suggestion detection module <b>2140</b> can perform statistical analysis of the user's data <b>2100</b> on the user device <b>105</b> to determine which suggestion(s) should be generated. The suggestion detection module <b>2140</b> can also utilize artificial intelligence modules analyzing the user's data <b>2100</b> to generate the suggestion <b>2150</b>. In addition, the suggestion detection module <b>2140</b> can use current and past location history to determine which suggestions should be shown to a user. For example, if the user's location is in proximity to a local restaurant hosting a happy hour, the suggestion detection module <b>2140</b> can present the suggestion <b>2150</b> to the user.</p><p id="p-0156" num="0155">To accept the suggestion, the user can press a single button. The process presented here facilitates quick, seamless transactions and consequently saves network bandwidth because there is no need for the user to find and transcribe all the data relevant to the vendor. Further, the data does not need to be transmitted to multiple vendors, which is a common practice when looking for a quote. Instead, the vendors' criteria <b>2130</b>, which are considerably smaller than the user's data <b>2100</b> by one or two orders of magnitude, are transmitted to the user device <b>105</b>. In addition, large image files of scanned forms do not need to be transmitted to the provider because they have already been compressed into the data structure <b>2100</b>.</p><p id="p-0157" num="0156">In addition to the bandwidth savings, the benefit of the current approach is privacy. The data <b>2100</b> remains securely on the user's device, without having to be transmitted through a network of Internet nodes, each of which can eavesdrop on the data.</p><p id="p-0158" num="0157">Once a suggestion <b>2150</b> has been made, the user may see which portions of their data <b>2100</b> has been utilized to generate the suggestion <b>2150</b>.</p><p id="p-0159" num="0158">The server <b>210</b> can be an insulating or a protective layer between the user device <b>105</b> and the provider <b>2120</b> because the server <b>210</b> can make sure that the information requested by the suggestion detection module <b>2140</b> is appropriate and relevant to determine whether to present the user with the suggestion <b>2115</b>.</p><p id="p-0160" num="0159">For example, the provider <b>2120</b> can be a pet insurance, and the pricing criteria <b>2130</b> can provide a quote regarding pet insurance. The pricing criteria <b>2130</b> can request information about the user's ZIP Code, the breed and age of the pet, and ask for a number of kids the user has. The server <b>210</b> can determine a likelihood that the request is a necessary component of the pricing criteria <b>2130</b>. In the above example, the user ZIP Code, and the breed and age of the pet are likely relevant to the quote, and the server <b>210</b> can assign a high value to the likelihood. The number of kids the user has is irrelevant to the quote, and the server <b>210</b> can assign a low value to the likelihood. Consequently, the server <b>210</b> can include the ZIP Code and the breed and age of the pet in the suggestion detection module <b>2440</b>, and exclude the number of kids from the suggestion detection module <b>2140</b>.</p><p id="p-0161" num="0160"><figref idref="DRAWINGS">FIG. <b>22</b></figref> shows a data structure <b>2200</b> associated with the universal data scaffold with a passive suggestion and an active suggestion. The data structure <b>2200</b> can be a hierarchical graph. A node <b>2205</b>, <b>2210</b>, <b>2226</b> can be an entity, such as a person, a car, a driver's license, etc. In addition to being an entity, or instead of being an entity, a node <b>2225</b>, <b>2220</b> can also be an attribute of the parent node. For example, driver's license node <b>2226</b> is an entity and an attribute of the person node <b>2205</b>.</p><p id="p-0162" num="0161">The data structure <b>2200</b> can also contain a passive and a push suggestion <b>2230</b>, <b>2240</b>, respectively. The push suggestion <b>2240</b> can be shown to the user whenever the suggestion detection module <b>2140</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref> determines that the criteria <b>2130</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref> specified by the provider <b>2120</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref> have been satisfied. For example, the provider <b>2120</b> can pay to have the suggestion <b>2240</b> be pushed to the user.</p><p id="p-0163" num="0162">By contrast, a passive suggestion <b>2230</b> can be stored in the data structure <b>2200</b>. The passive suggestion <b>2230</b> can be associated with a node <b>2250</b>, so that when a user visits the node <b>2250</b>, or any of the node's <b>2250</b> children, the passive suggestion <b>2230</b> can execute and the result of the execution can be presented to the user. The user can be considered to have visited the node <b>2250</b> when the user is editing data associated with the node <b>2250</b> or performing an action associated with the node <b>2250</b> such as performing an online search or visiting a website associated with the node <b>2250</b>.</p><p id="p-0164" num="0163">For example, if the user requests a background check for a babysitter, the passive suggestion <b>2230</b> can be presented to the user. The passive suggestion <b>2230</b> can contain information about other babysitting services.</p><p id="p-0165" num="0164">In an example of a push suggestion <b>2240</b>, a local car wash can be offering a deal on car detailing. The push suggestion <b>2240</b> can be shown to the user even if the user is not performing an activity associated with the node <b>2210</b>. The push suggestion <b>2240</b> can be pushed to the user based on the location of the user. For example, if the user is in proximity to the local car wash, the push suggestion <b>2240</b> can be presented to the user even if the local car wash did not pay additionally to present the push suggestion <b>2240</b>.</p><p id="p-0166" num="0165">The user can customize how both the passive suggestions <b>2230</b> and the push suggestions <b>2240</b> are seen. For example, the user can specify to never show push suggestions <b>2240</b> or can request to change the timing of the passive suggestion, such as by moving the passive suggestion <b>2230</b> further up or down in the graph, for example, to node <b>2220</b>, or node <b>2260</b>. The user can also modify the radius for location-based suggestions or set a preference to never see the location-based suggestions.</p><p id="p-0167" num="0166">The design of the suggestions <b>2230</b>, <b>2240</b> can be modified to match the design of the display that the user is currently viewing to make the suggestion <b>2230</b>, <b>2240</b> less distracting and more personalized. For example, a suggestion for a dog grooming service can state &#x201c;Spot must be stinky . . . hasn't had a bath in 3 weeks&#x201d; and show a photo of the user's dog, Spot. Further, the dog's name can be inserted into the text of the suggestion to create the personalized feel.</p><p id="p-0168" num="0167">The suggestions to be presented to the user as push suggestions or passive suggestions can be selected through an auction process. For example, top 5 lowest price suggestions that have been determined to be relevant to the user can be presented as a push suggestion <b>2240</b> or a passive suggestion <b>2230</b>.</p><p id="p-0169" num="0168">The server can provide the push suggestion <b>2240</b> to the user whenever the user device requests an update of the universal data scaffold. The server can provide the passive suggestion <b>2260</b> whenever the user device downloads the node <b>2250</b> associated with the passive suggestion <b>2260</b>, or whenever the user device downloads any of the node's <b>2250</b> children. The suggestions <b>2240</b>, <b>2260</b> can be grouped along with other unrelated suggestions and/or portions of the data scaffold, so that the server does not have information about which particular suggestions <b>2240</b>, <b>2260</b> are relevant to the user.</p><p id="p-0170" num="0169"><figref idref="DRAWINGS">FIG. <b>23</b></figref> shows the use of an artificial intelligence (AI) model to determine suggestions to present at a user device. The artificial intelligence model <b>2300</b> can take as input a data structure <b>2310</b> associated with the universal data scaffold. Optionally, the artificial intelligence model <b>2300</b> can take as input additional user data, such as user's current location. Based on the data structure <b>2310</b> and optional input <b>2320</b>, the artificial intelligence model <b>2300</b> can categorize the user into one or more of predetermined categories <b>2330</b> such as a dog owner, a parent, a homeowner, an asthma sufferer, etc. In one embodiment, based on the category <b>2330</b>, a hardware or software processor executing instructions described herein can provide one or more suggestions <b>2340</b> to a user device.</p><p id="p-0171" num="0170">In another embodiment, to provide a suggestion, the processor can obtain one or more suggestions <b>2340</b> associated with each category <b>2330</b> and present the suggestion <b>2340</b> to the user. Based on the suggestion <b>2340</b> associated with the category <b>2330</b> in which the user is categorized, a hardware or software processor executing instructions described herein can provide one or more suggestions <b>2340</b> to a user device.</p><p id="p-0172" num="0171">For example, the AI model <b>2300</b> can categorize the user as a homeowner because the AI model <b>2300</b> determines that the data structure <b>2310</b> contains information about homeownership. The processor can receive suggestions for landscaping services and can present the landscaping suggestions to the user.</p><p id="p-0173" num="0172">The AI model <b>2300</b> can obtain information stored in the data structure <b>2310</b> by, for example, analyzing images and/or text in the data structure <b>2310</b>. For example, the AI model <b>2300</b> can obtain an expiration date from a passport image contained in the data structure <b>2310</b>. The AI model <b>2300</b> can obtain additional information e.g., optional input <b>2320</b>, such as the user's current location, which can indicate that the user is traveling abroad. If the AI model <b>2300</b> determines that the passport expiration date is within a predetermined time period, such as a week or a month, the AI model <b>2300</b> can suggest to the user to do a fast passport replacement at a nearest consulate. Similarly, the AI model <b>2300</b> can determine the user is a frequent international traveler and can alert the user to an impending passport expiration date.</p><p id="p-0174" num="0173"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a flowchart of a method to securely present a suggestion to a user without disclosing the user's information. In step <b>2400</b>, a processor associated with a user device can obtain a user's information.</p><p id="p-0175" num="0174">In step <b>2410</b>, the processor can create a data structure including the user's information. The data structure can be associated with a universal data scaffold and can define a set of attributes configured to include attribute values. For example, the data structure can include the set of attributes such as type. The type can determine the subsequent attributes available within the data structure. For example, if the type is &#x201c;car,&#x201d; the subsequent attributes can include make, model, year, vehicle identification number (VIN), driven by, owner, photo. If the type is &#x201c;person,&#x201d; the subsequent attributes can include first name, middle name, last name, date of birth, address, phone, email.</p><p id="p-0176" num="0175">The values of an attribute in the set of attributes can be extracted from the user information. For example, the value of the attribute &#x201c;first name&#x201d; can be &#x201c;Joe,&#x201d; &#x201c;last name&#x201d; can be &#x201c;Smith,&#x201d; &#x201c;date of birth&#x201d; can be &#x201c;Oct. 13, 1993,&#x201d; etc. The values of the attributes can be extracted from Joe's personal information, such as birth certificate and/or driver's license.</p><p id="p-0177" num="0176">To create a data structure, the processor can receive, from a server, a universal data scaffold or a program to generate the universal data scaffold. The universal data scaffold can define a data structure configured to represent the user's information, such as the universal data scaffold <b>305</b>, <b>310</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The values of the attributes within the universal data scaffold <b>305</b>, <b>310</b> may not be populated, and can be set to a default value. The processor can populate the data structure based on the user's information by assigning an attribute value to an attribute in the set of attributes.</p><p id="p-0178" num="0177">In step <b>2420</b>, the processor can receive a suggestion detection module including a criterion and an executable computer code. The criterion can include one or more pricing criteria <b>2130</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref>. For example, the criteria can include one or more attributes such as a make, a model, and a manufacturing year of a car, and one or more values of the attributes such as Toyota, Camry, 2017.</p><p id="p-0179" num="0178">The executable computer code can include software module and/or an AI model. The executable computer code can obtain the attribute and the attribute value from the universal data scaffold, and it can determine whether the attribute and the attribute value satisfy the criterion, such as whether the user's car is Toyota Camry made after the year 2017. Upon determining that the attribute and the attribute value satisfy the criterion, the executable computer code can present the suggestion at the user device.</p><p id="p-0180" num="0179">The processor of the user device can reduce bandwidth consumption by storing the executable computer code on the user device, and receiving, from the server, a change to the criterion, without downloading the executable computer code. That way, a smaller amount of data is communicated between the server and the processor of the user device, namely, only the criterion. The processor can cause the executable computer code to execute using the changed criterion, and to determine whether a suggestion needs to be presented at the user device.</p><p id="p-0181" num="0180">The executable computer code can include an artificial intelligence (AI) model configured to determine whether to present the suggestion. For example, the AI model can obtain multiple attributes associated with the user and multiple attribute values associated with the user. The AI model can categorize the user associated with the multiple attributes and the multiple attribute values. The categories can include predefined categories such as a homeowner, parent, driver, and asthma suffer, etc. The processor can also define categories based on the received suggestions. For example, if the suggestions are for car insurance, babysitting services, high blood pressure treatments, and job offers, the processor can determine that the categories are car owner, parent, high blood pressure patient, and job seeker.</p><p id="p-0182" num="0181">Based on the categorization, the processor can provide the suggestion to the user device. For example, if the categories are based on received suggestions, and the user has been categorized into a category having a suggestion, the suggestion can be presented to the user. In another example, the AI model can scan the universal data scaffold associated with the user, determine that the user is currently traveling or planning to travel in the near future, determine that the user's passport expires in the near future, and suggest to the user to update the passport.</p><p id="p-0183" num="0182">To obtain the passport expiration date, the AI model can determine the passport expiration date from an image of a passport contained in the universal data scaffold on the user device. For example, the AI model can obtain an image containing the user's information and extract from the image the user's information. The AI model can infer the suggestion based on the extracted user's information and the universal data scaffold, and it can present the suggestion to the user.</p><p id="p-0184" num="0183">The suggestion detection module <b>2140</b> can use current and past location history to determine which suggestions should be shown to the user. For example, if the user's location is in proximity to a local restaurant that the user has visited before, and the local restaurant is hosting a happy hour, the processor can present the suggestion to visit the happy hour to the user. More specifically, the processor can obtain a location of the user device. Based on the universal data scaffold, the processor can determine a relevant location. The universal data scaffold can hold information about user's prior location, about user's preferences such as favorite restaurants. The relevant location can be currently proximate to the user device, and the executable computer code can be associated with the relevant location. For example, the executable computer code can present a suggestion associated with the location, for example, a suggestion for a happy hour. The processor can present the suggestion associated with the executable computer code at the user device.</p><p id="p-0185" num="0184">The processor can present passive suggestions to the user. The passive suggestion <b>2230</b> in <figref idref="DRAWINGS">FIG. <b>22</b></figref> can be associated with a node <b>2250</b> in <figref idref="DRAWINGS">FIG. <b>22</b></figref>, so that when a user visits the node <b>2250</b>, or any of the node's <b>2250</b> children, the passive suggestion <b>2230</b> can be presented to the user. To present the passive suggestion, the processor can associate the suggestion with the node <b>2250</b> within the larger graph data structure <b>2200</b> in <figref idref="DRAWINGS">FIG. <b>22</b></figref>. The processor executing the executable computer code can determine whether to present the suggestion at the user device by determining whether the user is visiting a second data structure associated with the node <b>2250</b>. The second data structure can be a child of the node <b>2250</b> such as &#x201c;Susie Queue,&#x201d; &#x201c;Emily Crane,&#x201d; or &#x201c;background check&#x201d; <b>2260</b> in <figref idref="DRAWINGS">FIG. <b>22</b></figref>. Upon determining that the user is visiting the second data structure associated with the node data structure <b>2250</b>, the processor can provide the suggestion at the user device. By contrast, as explained in <figref idref="DRAWINGS">FIG. <b>22</b></figref>, the processor can present per suggestions to the user, even if the user is not performing an activity associated with the node <b>2250</b>.</p><p id="p-0186" num="0185">The processor can customize a suggestion. For example, a suggestion for a dog grooming service can state &#x201c;Spot must be stinky . . . hasn't had a bath in 3 weeks&#x201d; and show a photo of the user's dog, Spot. Further, the dog's name can be inserted into the text of the suggestion to create the personalized feel. More specifically, the processor can customize the suggestion by obtaining from the data structure <b>2200</b> the user's information, and modifying the suggestion based on the user's information. The processor can present the modified suggestion at the user device.</p><p id="p-0187" num="0186">The processor can enable the user to opt in and out of suggestions. For example, the universal data scaffold can include rules storing user preferences that apply to the user specifically. The user can indicate that the user is not interested in a life insurance policy. Even though the life insurance policy can exist as a passive suggestion <b>2230</b> or a push suggestion <b>2240</b> in <figref idref="DRAWINGS">FIG. <b>22</b></figref>, and even though criterion of the suggestion <b>2230</b>, <b>2240</b> can be satisfied, the rules storing the user preferences can prevent the processor from presenting the suggestion to the user. Similarly, the user can indicate that the user would like to see more of similar suggestions, and such similar suggestions can be presented to the user. If the user opts in, all the similar passive suggestions can be converted to push suggestions. The processor can obtain a user preference regarding the presenting of the suggestion. Based on the user preference, the processor can determine whether to present the suggestion at the user device.</p><p id="p-0188" num="0187">The processor can indicate to the user when the user's actions can reveal information about the user to the server and/or a third-party such as a provider <b>2120</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref>. The processor can provide a notification at the user device that an acceptance of the suggestion provides an indication that the user device includes the attribute and the attribute value satisfying the criterion. For example, if the user accepts a suggestion for landscaping services, the acceptance can be communicated to the server and to the provider <b>2120</b>. The user's acceptance indicates to the server and to the provider that the user is a homeowner. Further, if the suggestion included a criterion such as price per square feet, the acceptance can include the total price, which can indicate the number of square feet in the user's yard. Therefore, the user's acceptance can disclose the size of the user's yard.</p><p id="p-0189" num="0188">The processor can act as a protective layer to make sure that the criterion includes only a request for information that is necessary to provide the suggestion. The processor can determine whether the criterion includes a request for unnecessary user information and can remove the request for unnecessary information from the criterion, before presenting the suggestion at the user device. For example, if a suggestion for the happy hour at the local restaurant requests the user's health insurance and the user's location, the processor can remove the request for the user's health insurance before evaluating the user's location, before presenting the suggestion to the user.</p><p id="p-0190" num="0189"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a flowchart of a method to create an insulating layer between a provider and a user device by generating a secure computer code to execute at a user device. In step <b>2500</b>, a processor associated with a server can create a universal data scaffold defining a data structure, such as data structure <b>2200</b> in <figref idref="DRAWINGS">FIG. <b>22</b></figref>, configured to represent the user's information. The data structure can define a set of attributes configured to include attribute values.</p><p id="p-0191" num="0190">In step <b>2510</b>, the processor can receive from a computing device associated with a third party, a suggestion to present to a user associated with the server. The third party can be the provider <b>2120</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref>. The suggestion can include a request for the user's information.</p><p id="p-0192" num="0191">In step <b>2520</b>, the processor can determine a likelihood that the request is a necessary component of the suggestion. The likelihood can be binary, such as 0 or 1, with 0 indicating that the request is not necessary and 1 indicating that the request is necessary. The likelihood can also be defined over range such as 0-1, and can indicate the probability that the request is necessary.</p><p id="p-0193" num="0192">To determine the likelihood that the request is the necessary component of the suggestion, the processor can determine a suggestion type associated with the suggestion. For example, the suggestion can offer a quote for pet insurance, and the processor can determine the type of the suggestion to be pet insurance. The processor can obtain a list of necessary attributes representing all attributes in the set of attributes corresponding to the suggestion type. For example, if the type is pet insurance, the list of necessary attributes can include type and breed of the pet, age of the pet, the user's ZIP code, and the pet's medical record.</p><p id="p-0194" num="0193">The processor can determine whether the request for user's information is associated with the one or more attributes corresponding to the suggestion type. For example, if the suggestion is asking for any of the above identified attributes such as type and breed of the pet, age of the pet, the user's ZIP code, and the pet's medical record, the processor can determine that the request is necessary. However, if the suggestion is asking for the number of kids the user has, the processor can determine that the request is not in the list of necessary attributes and can determine that the likelihood that the request is necessary is low.</p><p id="p-0195" num="0194">In step <b>2530</b>, the processor can selectively perform a removal of the request when the likelihood is low, or a creation of an executable computer code configured to interface with the universal data scaffold and including the request when the likelihood is high. For example, when the likelihood is binary, low likelihood is 0, and high likelihood is 1. In another example, when the likelihood indicates a probability, a low likelihood can be less than or equal to 0.5, and a high likelihood can be greater than 0.5.</p><p id="p-0196" num="0195">A suggestion can contain multiple requests for information. The processor can iteratively eliminate the requests that the processor determines are unnecessary and can create the executable computer code including the requests that the processor has determined to be necessary.</p><p id="p-0197" num="0196">The executable computer code can represent the algorithmic suggestion and can include one or more criteria based on the one or more requests for information. To create the executable computer code, the processor can redefine the request for information into a criterion compliant with the universal data scaffold including an attribute identifying a type of the criterion, and an attribute value associated with the attribute. For example, the request can state &#x201c;goldendoodle grooming for less than $70.&#x201d; The processor can redefine the request into the criterion compliant with the universal data scaffold, e.g., &#x201c;if (dog.type==&#x2018;goldendoodle&#x2019;) then,&#x201d; and can include the criterion into the executable computer code.</p><p id="p-0198" num="0197">Upon creating the executable computer code, the processor can send the executable computer code to a user device associated with the user. To send the executable computer code to the user device, the processor can dynamically update the universal data scaffold to include the executable computer code in the universal data scaffold. The processor can push the updated universal data scaffold to the user device, or the processor can wait until the user device requests an update from the server to provide the executable computer code.</p><p id="p-0199" num="0198">The processor can configure the executable computer code to obtain the attribute and the attribute value from the universal data scaffold. The processor can determine whether the attribute and the attribute value satisfy the criterion. Upon determining that the attribute and the attribute value satisfy the criterion, the processor can present the suggestion at the user device.</p><p id="p-0200" num="0199">The executable computer code can be an AI model. The processor can provide the AI model to the user device. The AI model can obtain multiple attributes associated with universal data scaffold and multiple attribute values associated with universal data scaffold. The AI model can categorize the user associated with the multiple attributes and the multiple attribute values. Based on the categorization, the AI model can provide the suggestion to the user device.</p><p id="p-0201" num="0200">The processor can also provide notification to the user that an acceptance of the suggestion provides an indication that the user device includes the attribute and the attribute value satisfying the criterion. For example, if the user accepts a pet insurance suggestion, the user's acceptance indicates that the user is a pet owner.</p><heading id="h-0005" level="1">Computer</heading><p id="p-0202" num="0201"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a block diagram of a computer system as may be used to implement features of some embodiments of the disclosed technology. The computing system <b>2600</b> may be used to implement any of the entities, components or services depicted in the foregoing figures (and any other components described in this specification). The computing system <b>2600</b> may include one or more central processing units (&#x201c;processors&#x201d;) <b>2605</b>, memory <b>2610</b>, input/output devices <b>2625</b> (e.g., keyboard and pointing devices, display devices), storage devices <b>2620</b> (e.g., disk drives), and network adapters <b>2630</b> (e.g., network interfaces) that are connected to an interconnect <b>2615</b>. The interconnect <b>2615</b> is illustrated as an abstraction that represents any one or more separate physical buses, point to point connections, or both connected by appropriate bridges, adapters, or controllers. The interconnect <b>2615</b>, therefore, may include, for example, a system bus, a Peripheral Component Interconnect (PCI) bus or PCI-Express bus, a HyperTransport or industry standard architecture (ISA) bus, a small computer system interface (SCSI) bus, a universal serial bus (USB), IIC (I2C) bus, or an Institute of Electrical and Electronics Engineers (IEEE) standard 1394 bus, also called &#x201c;Firewire&#x201d;.</p><p id="p-0203" num="0202">The computing system <b>2600</b> can be associated with the user device <b>105</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref> and/or associated with the server <b>210</b> in <figref idref="DRAWINGS">FIG. <b>21</b></figref>. The computing system <b>2600</b> can execute instructions as described in this application, for example, <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref>. The network adapter <b>2630</b> can facilitate communication between the user device <b>105</b> and the server <b>210</b>.</p><p id="p-0204" num="0203">The memory <b>2610</b> and storage devices <b>2620</b> are computer-readable storage media that may store instructions that implement at least portions of the described technology. In addition, the data structures and message structures may be stored or transmitted via a data transmission medium, such as a signal on a communications link. Various communications links may be used, such as the Internet, a local area network, a wide area network, or a point-to-point dial-up connection. Thus, computer-readable media can include computer-readable storage media (e.g., &#x201c;non-transitory&#x201d; media) and computer-readable transmission media.</p><p id="p-0205" num="0204">The instructions stored in memory <b>2610</b> can be implemented as software and/or firmware to program the processor(s) <b>2605</b> to carry out actions described above. In some embodiments, such software or firmware may be initially provided to the processing system <b>2600</b> by downloading it from a remote system through the computing system <b>2600</b> (e.g., via network adapter <b>2630</b>).</p><p id="p-0206" num="0205">The technology introduced herein can be implemented by, for example, programmable circuitry (e.g., one or more microprocessors) programmed with software and/or firmware, or entirely in special-purpose hardwired (non-programmable) circuitry, or in a combination of such forms. Special-purpose hardwired circuitry may be in the form of, for example, one or more ASICs, PLDs, FPGAs, etc.</p><p id="p-0207" num="0206">Although the invention is described herein with reference to the preferred embodiment, one skilled in the art will readily appreciate that other applications may be substituted for those set forth herein without departing from the spirit and scope of the present invention. Accordingly, the invention should only be limited by the Claims included below.</p><heading id="h-0006" level="1">Remarks</heading><p id="p-0208" num="0207">The above description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding of the disclosure. However, in some instances, well-known details are not described in order to avoid obscuring the description. Further, various modifications may be made without deviating from the scope of the embodiments. Accordingly, the embodiments are not limited except as by the appended claims.</p><p id="p-0209" num="0208">Reference in this specification to &#x201c;one embodiment&#x201d; or &#x201c;an embodiment&#x201d; means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase &#x201c;in one embodiment&#x201d; in various places in the specification are not necessarily all referring to the same embodiment, nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover, various features are described which may be exhibited by some embodiments and not by others. Similarly, various requirements are described which may be requirements for some embodiments but not for other embodiments.</p><p id="p-0210" num="0209">The terms used in this specification generally have their ordinary meanings in the art, within the context of the disclosure, and in the specific context where each term is used. Terms that are used to describe the disclosure are discussed below, or elsewhere in the specification, to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience, some terms may be highlighted, for example using italics and/or quotation marks. The use of highlighting has no influence on the scope and meaning of a term; the scope and meaning of a term is the same, in the same context, whether or not it is highlighted. It will be appreciated that the same thing can be said in more than one way. One will recognize that &#x201c;memory&#x201d; is one form of a &#x201c;storage&#x201d; and that the terms may on occasion be used interchangeably.</p><p id="p-0211" num="0210">Consequently, alternative language and synonyms may be used for any one or more of the terms discussed herein, nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for some terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any term discussed herein is illustrative only, and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise, the disclosure is not limited to various embodiments given in this specification.</p><p id="p-0212" num="0211">Those skilled in the art will appreciate that the logic illustrated in each of the flow diagrams discussed above, may be altered in various ways. For example, the order of the logic may be rearranged, substeps may be performed in parallel, illustrated logic may be omitted; other logic may be included, etc.</p><p id="p-0213" num="0212">Without intent to further limit the scope of the disclosure, examples of instruments, apparatus, methods, and their related results according to the embodiments of the present disclosure are given below. Note that titles or subtitles may be used in the examples for convenience of a reader, which in no way should limit the scope of the disclosure. Unless otherwise defined, all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict, the present document, including definitions will control.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>creating, by a server, a universal data scaffold defining a data structure configured to represent a user's information,<claim-text>wherein the data structure defines a plurality of attributes configured to include a plurality of attribute values;</claim-text></claim-text><claim-text>receiving, by the server from a computing device associated with a third party, a suggestion to present to a user associated with the server, wherein the suggestion includes a request for the user's information;</claim-text><claim-text>determining, by the server, a likelihood that the request is a necessary component of the suggestion; and</claim-text><claim-text>selectively performing a removal of the request when the likelihood is low, or performing a creation of an executable computer code configured to interface with the universal data scaffold and including the request when the likelihood is high.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising:<claim-text>upon creating the executable computer code, sending the executable computer code to a user device associated with the user.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the creation of the executable computer code comprising:<claim-text>redefining, by the server, the suggestion into a criterion compliant with the universal data scaffold including an attribute, in the plurality of attributes, identifying a type of the criterion and an attribute value associated with the attribute.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising:<claim-text>dynamically updating, by the server, the universal data scaffold to include the executable computer code in the universal data scaffold.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, configuring the executable computer code to:<claim-text>obtain an attribute in the plurality of attributes and an attribute value from the universal data scaffold;</claim-text><claim-text>determine whether the attribute and the attribute value satisfy the request for the user's information; and</claim-text><claim-text>upon determining that the attribute and the attribute value satisfy the request, present the suggestion at a user device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the executable computer code includes an AI model.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the determining the likelihood that the request is the necessary component of the suggestion comprising:<claim-text>determining a suggestion type associated with the suggestion;</claim-text><claim-text>determining one or more attributes in the plurality of attributes corresponding to the suggestion type;</claim-text><claim-text>determining whether the request for the user's information is associated with the one or more attributes corresponding to the suggestion type; and</claim-text><claim-text>upon determining that the request for the user's information is not associated with the one or more attributes corresponding to the suggestion type, determining that the likelihood is low.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising:<claim-text>providing a notification at a user device that an acceptance of the suggestion provides an indication that the user device includes an attribute in the plurality of attributes and an attribute value satisfying the request for the user's information.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the executable computer code includes an artificial intelligence (AI) model, the method comprising:<claim-text>providing the AI model to a user device, wherein the AI model is configured to:<claim-text>obtain the plurality of attributes associated with the universal data scaffold and the plurality of attribute values associated with the universal data scaffold;</claim-text><claim-text>categorize the user associated with the plurality of attributes and the plurality of attribute values; and</claim-text><claim-text>based on the categorization, provide the suggestion to the user device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data structure includes a hierarchical graph including a plurality of nodes, the plurality of nodes representing the plurality of attributes.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system comprising:<claim-text>one or more processors; and</claim-text><claim-text>memory coupled to the one or more processors, wherein the memory includes instructions executable by the one or more processors to:<claim-text>create, by a server, a data structure configured to represent a user's information,<claim-text>wherein the data structure defines a plurality of attributes configured to include a plurality of attribute values;</claim-text></claim-text><claim-text>receive, by the server from a computing device associated with a third party, a suggestion to present to a user associated with the server,<claim-text>wherein the suggestion includes a request for the user's information;</claim-text></claim-text><claim-text>determine, by the server, a likelihood that the request is a necessary component of the suggestion; and</claim-text><claim-text>selectively perform a removal of the request when the likelihood is low, or perform a creation of an executable computer code configured to interface with the data structure and including the request when the likelihood is high.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the instructions further comprising the instructions to:<claim-text>upon creating the executable computer code, send the executable computer code to a user device associated with the user.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the instructions to create the executable computer code further comprising the instructions to:<claim-text>redefine, by the server, the suggestion into a criterion compliant with the data structure including an attribute identifying a type of the criterion, and an attribute value associated with the attribute.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the instructions further comprising the instructions to:<claim-text>dynamically update, by the server, the data structure to include the executable computer code in the data structure.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the instructions further comprising the instructions to configure the executable computer code to:<claim-text>obtain an attribute in the plurality of attributes and an attribute value from the data structure;</claim-text><claim-text>determine whether the attribute and the attribute value satisfy the request for the user's information; and</claim-text><claim-text>upon determining that the attribute and the attribute value satisfy the request, present the suggestion at a user device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the executable computer code includes an AI model.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the instructions to determine the likelihood that the request is the necessary component of the suggestion, comprising the instructions to:<claim-text>determine a suggestion type associated with the suggestion;</claim-text><claim-text>obtain one or more attributes in the plurality of attributes corresponding to the suggestion type;</claim-text><claim-text>determine whether the request for the user's information is associated with the one or more attributes corresponding to the suggestion type; and</claim-text><claim-text>upon determining that the request for the user's information is not associated with the one or more attributes corresponding to the suggestion type, determine that the likelihood is low.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the instructions further comprising the instructions to:<claim-text>provide a notification at a user device that an acceptance of the suggestion provides an indication that the user device includes an attribute in the plurality of attributes and an attribute value satisfying the request for the user's information.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the executable computer code includes an artificial intelligence (AI) model, the instructions further comprising the instructions to:<claim-text>provide the AI model to a user device, wherein the AI model is configured to:<claim-text>obtain the plurality of attributes associated with the data structure and the plurality of attribute values associated with the data structure;</claim-text><claim-text>categorize the user associated with the plurality of attributes and the plurality of attribute values; and</claim-text><claim-text>based on the categorization, provide the suggestion to the user device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the data structure includes a hierarchical graph including a plurality of nodes, the plurality of nodes representing the plurality of attributes</claim-text></claim></claims></us-patent-application>