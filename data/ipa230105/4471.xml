<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004472A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004472</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941573</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>34</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>7</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>445</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>3409</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>7</main-group><subgroup>005</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>44505</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Predictive Performance Indicator for Storage Devices</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17182574</doc-number><date>20210223</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11467942</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17941573</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>63126234</doc-number><date>20201216</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Western Digital Technologies, Inc.</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Lavrentiev</last-name><first-name>Michael</first-name><address><city>Milpitas</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Ravimohan</last-name><first-name>Narendhiran Chinnaanangur</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>C</last-name><first-name>Meenakshi</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods for predictive performance indicators for storage devices are described. The data storage device may process host storage operations and maintenance operations that impact real-time performance. A performance value and corresponding threshold may be determined. Increases in maintenance operations and resulting changes in the performance value may be predicted. When the predicted change in performance value crosses the performance threshold, the host device may be notified.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="119.38mm" wi="158.75mm" file="US20230004472A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="142.24mm" wi="169.84mm" orientation="landscape" file="US20230004472A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="228.18mm" wi="172.13mm" orientation="landscape" file="US20230004472A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="240.45mm" wi="163.66mm" file="US20230004472A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="233.34mm" wi="165.69mm" file="US20230004472A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="244.18mm" wi="132.76mm" file="US20230004472A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="244.18mm" wi="132.76mm" file="US20230004472A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="242.57mm" wi="168.91mm" file="US20230004472A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present disclosure generally relates to storage device performance indicators and, more particularly, to host interfaces for predictive input/output performance indicators.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Data storage devices, such as disk drives (solid-state drives, hard disk drives, hybrid drives, tape drives, etc.), universal serial bus (USB) flash drives, secure digital (SD) cards and SD extended capacity (SDXC) cards, and other form factors, may be used for storing data on behalf of a host, host system, or host device. These storage devices may include integrated storage devices built into the enclosure of the host device, removable storage devices mating with the host device through a physical interface connector (directly or through an interface cable), and network storage devices communicating with the host device using network protocols over a wired or wireless network connection. Some removable storage devices and/or network storage devices may use short range wireless communication, such as Bluetooth, ultra-wideband (UWB), Wi-Fi, Zigbee, etc., for communication with a host device or network. Storage devices may be integrated into storage systems that vary from single storage devices directly supporting a host device through a peripheral storage interface to multi-device storage systems (often supporting multiple host systems) that include multiple storage devices arranged in an array of drives interconnected by a common communication fabric and, in many cases, controlled by a storage controller, redundant array of independent disks (RAID) controller, or general controller, for coordinating storage and system activities across the array of drives.</p><p id="p-0004" num="0003">Data storage devices generally include a storage capacity rating that tells users and/or host devices the expected storage capacity of the storage device and may further communicate actual, used, and available capacity parameters to the host. For some systems and applications, storage devices may support defined performance ratings, generally measured by input/output (I/O) operations per second (IOPS) and/or megabytes per second (MB/s), and may provide quality of service (QoS) ratings for specific workload types, such as sequential writes, random writes, sequential reads, and random reads. Some host devices may be designed and/or configured to utilize storage devices that include performance and/or QoS ratings and expect storage devices to deliver the performance and/or QoS parameters during operation. For example, a storage device that cannot maintain the performance requirements to offload host data may cause buffer overflows or other errors.</p><p id="p-0005" num="0004">Some data storage devices may require background maintenance operations, such as garbage collection, to maintain storage capacity and performance over time. While some storage devices may be able to use idle time to complete maintenance operations, removable storage devices, such as SD cards, may be powered down or removed when not in active use for storage operations and may not be provided with adequate idle time to complete maintenance operations in the background. As a result, background maintenance operations may compete with foreground storage operations during runtime for storage controller processors, memory channels, encoders, and other processing resources. Early in the life of a storage device and/or under relatively low loads, low-level maintenance operations can be performed in parallel with storage operations. However, if a storage device is used at or close to its performance limits for extended periods and as free capacity decreases, the volume of maintenance operations necessary to recover deleted and/or redundant data, enforce wear leveling, and/or perform other maintenance operations may become a noticeable burden on the processing resources of the storage device and reduce its capability to meet the performance requirements of the host. If this occurs suddenly, it may cause undesirable host errors, such as buffer overflows and application crashes, and/or unacceptably decreased performance for the user of the host device.</p><p id="p-0006" num="0005">A predictive performance indicator for data storage devices that warns the host device of an impending change in performance may be advantageous. An effective interface for configuring the performance prediction parameters and providing the notification to the host device may be needed.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">Various aspects for data storage device performance prediction, particularly a host interface for host configuration and predicted performance change indicators based on maintenance operations, are described.</p><p id="p-0008" num="0007">One general aspect includes a system that includes a data storage device including a storage medium configured to store host data and a storage device controller, including processing resources, configured to: process, using the storage medium and the processing resources, storage operations from a host device; process, using the storage medium and the processing resources, maintenance operations for increasing storage availability in the storage medium; determine a performance value for the storage operations; predict an increase in maintenance operations; predict, based on the predicted increase in maintenance operations, a change in the performance value; and notify, through a host interface, the host device of the predicted change in the performance value.</p><p id="p-0009" num="0008">Implementations may include one or more of the following features. The performance value may be selected from: an input/output operations per unit time value, a data volume per unit time value, and a nominal performance value for the data storage device. The storage device controller may be further configured to: determine a performance threshold for the performance value, and determine that the change in the performance value crosses the performance threshold, where notifying the host device of the predicted change in the performance value is responsive to determining that the change in the performance value crosses the performance threshold. The storage device controller may be further configured to: receive, through the host interface, a host performance window value; determine, based on the host performance window value, a performance window; and predict the increase in the maintenance operations over the performance window. The storage device controller may be further configured to: receive, through the host interface, a host prediction horizon value; determine, based on the host prediction horizon value, a prediction horizon; and predict the increase in maintenance operations at a future time corresponding to the prediction horizon. The storage device controller may be further configured to: determine a plurality of severity thresholds; determine, based on the predicted change in the performance value and the plurality of severity thresholds, a severity value for the predicted change; and report, through the host interface, the severity value for the predicted change. The storage device controller may be further configured to: determine a prediction probability value for the predicted change in the performance value; and report, through the host interface, the prediction probability value for the predicted change. The host interface may include a notification register and the host device may be configured to: periodically check the notification register; and receive, from the data storage device and responsive to checking the notification register, notification of the predicted change in the performance value. The host interface may include an interface function register may include a plurality of memory locations and the storage device controller may be further configured to store, responsive to the predicted change in the performance value, at least one performance change indicator value in an indicator memory location of the plurality of memory locations in the interface function register. The system may include the host device including: a host processor; a host memory: a storage interface configured to communicate with the host interface of the data storage device; and a storage manager. The storage manager may be configured to: send storage operations to the storage device according to a defined host access pattern and a storage performance requirement; receive, from the storage device, notification of the predicted change in the performance value; and display, to a user of the host device, a warning notification indicating the predicted change in the performance value. The data storage device may include a removable storage device configured to be removably attached to the host device and the host device may be configured to initialize the data storage device. The storage manager may be further configured to: establish, responsive to initializing the data storage device, a performance interface with the data storage device; and set, through the performance interface, at least one performance monitoring parameter selected from a performance value type, a host performance threshold value, a host performance window value, a host prediction horizon value, a notification type, and a reporting interval. The storage device controller may be further configured to: determine, responsive to the data storage device being initialized and based on a plurality of storage operations from the host, the defined host access pattern; and predict the increase in maintenance operations based on the defined host access pattern continuing through a performance window. The maintenance operations for increasing storage availability may include garbage collection of flash memory data blocks.</p><p id="p-0010" num="0009">Another general aspect includes a computer-implemented method including: processing, by a data storage device, storage operations from a host device; processing, by the data storage device, maintenance operations for increasing storage availability in a storage medium in the storage device; determining, by the data storage device, a performance value for the storage operations; predicting, by the data storage device, an increase in maintenance operations; predicting, by the data storage device and based on the predicted increase in maintenance operations, a change in the performance value; and notifying, by the data storage device and through a host interface, the host device of the predicted change in the performance value.</p><p id="p-0011" num="0010">Implementations may include one or more of the following features. The computer-implemented method may further include: determining, by the data storage device, a performance threshold for the performance value; and determining, by the data storage device, that the change in the performance value crosses the performance threshold, where notifying the host device of the predicted change in the performance value is responsive to determining that the change in the performance value crosses the performance threshold. The computer-implemented method may include: receiving, by the data storage device and through the host interface, a host performance window value; determining, by the data storage device and based on the host performance window value, a performance window; and predicting, by the data storage device, the increase in maintenance operations over the performance window. The computer-implemented method may include: receiving, by the data storage device and through the host interface, a host prediction horizon value; determining, by the data storage device and based on the host prediction horizon value, a prediction horizon; and predicting, by the data storage device, the increase in maintenance operations at a future time corresponding to the prediction horizon. The computer-implemented method may include: determining, by the data storage device, a plurality of severity thresholds; determining, by the data storage device and based on the predicted change in the performance value and the plurality of severity thresholds, a severity value for the predicted change; and reporting, by the data storage device and through the host interface, the severity value for the predicted change. The computer-implemented method may include: determining, by the data storage device, a prediction probability value for the predicted change in the performance value; and reporting, by the data storage device and through the host interface, the prediction probability value for the predicted change. The computer-implemented method may include: storing, by the data storage device, a notification value in a notification register of the host interface; periodically checking, by the host device, the notification register; and receiving, by the host device and responsive to checking the notification register, notification of the predicted change in the performance value. The computer-implemented method may include storing, by the data storage device and responsive to the predicted change in the performance value, at least one performance change indicator value in an indicator memory location, wherein the indicator memory location is in an interface function register in the host interface. The computer-implemented method may include: sending, by the host device, storage operations to the data storage device according to a defined host access pattern and a storage performance requirement; receiving, by the host device and from the data storage device, notification of the predicted change in the performance value; and displaying, by the host device and to a user of the host device, a warning notification indicating the predicted change in the performance value.</p><p id="p-0012" num="0011">Still another general aspect includes a data storage device that includes: a storage medium configured to store host data; a storage device controller, including: a processor, an operating memory, and a host interface configured for communication with a host device; means for processing storage operations from the host device; means for processing maintenance operations for increasing storage availability in a storage medium in the storage device; means for determining a performance value for the storage operations; means for determining a performance threshold for the performance value; means for predicting an increase in maintenance operations; means for predicting, based on the predicted increase in maintenance operations, a change in the performance value that crosses the performance threshold; and means for notifying, through the host interface, the host device of the predicted change in the performance value.</p><p id="p-0013" num="0012">The various embodiments advantageously apply the teachings of data storage devices and/or storage systems to improve the functionality of such computer systems. The various embodiments include operations to overcome or at least reduce the issues previously encountered in storage systems and, accordingly, are more configurable and/or reliable than other computing systems. That is, the various embodiments disclosed herein include hardware and/or software with functionality to improve the data storage device performance prediction, such as by the data storage device using a host interface for predicted performance changes indicators based on maintenance operations. Accordingly, the embodiments disclosed herein provide various improvements to storage networks and/or storage systems.</p><p id="p-0014" num="0013">It should be understood that language used in the present disclosure has been principally selected for readability and instructional purposes, and not to limit the scope of the subject matter disclosed herein.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically illustrates a storage system with host device and a data storage device.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically illustrates an interface for predictive performance change indicators that may be used by the storage system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically illustrates a performance interface registry that may be used by the storage system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>4</b></figref> schematically illustrates a host device of the storage system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically illustrates some elements of the storage system of <figref idref="DRAWINGS">FIG. <b>1</b>-<b>4</b></figref> in more detail.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of an example method of providing predictive performance change indicators to a host device.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart of an example method of configuring predictive performance change indicators by a host device.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart of an example method of generating configurable predictive performance change indicators.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an embodiment of an example data storage system <b>100</b> with a data storage device <b>120</b> interconnected by a storage interface <b>110</b> to host device <b>102</b>. While some example features are illustrated, various other features have not been illustrated for the sake of brevity and so as not to obscure pertinent aspects of the example embodiments disclosed herein. To that end, as a non-limiting example, data storage system <b>100</b> includes one or more data storage devices <b>120</b> (also sometimes called information storage devices, disk drives, or drives) in communication with one or more host devices <b>102</b>. In some embodiments, host device <b>102</b> may be a user device with an embedded computing system, such as video camera, mobile phone, tablet computer, smart television, smart appliance, portable game device, printer, or other consumer electronic device. In some embodiments, storage device <b>120</b> may be a removable storage device, such as a universal serial bus (USB) flash drive, secure digital (SD) card, extended capacity (SDXC) SD card, or other removable storage device.</p><p id="p-0024" num="0023">In some embodiments, storage device <b>120</b> may be configured in a server or storage array blade or similar storage unit for use in data center storage racks or chassis. Storage device <b>120</b> may interface with one or more host devices <b>102</b> and provide data storage and retrieval capabilities for or through those host systems. In some embodiments, host device <b>102</b> may support one or more client systems or devices configured to access data in or about storage device <b>120</b>. For example, clients may include one or more applications that access data from storage device <b>120</b> through host device <b>102</b> and/or through a network or network fabric. In some embodiments, storage device <b>120</b> may be configured in a storage hierarchy that includes storage nodes, storage controllers, and/or other intermediate components between storage device <b>120</b> and host device <b>102</b>. For example, each storage controller may be responsible for a corresponding set of storage nodes and their respective storage devices connected through a corresponding backplane network and/or network fabric, though only storage device <b>120</b> and host device <b>102</b> are shown.</p><p id="p-0025" num="0024">In the embodiment shown, storage device <b>120</b> is attached to storage interface <b>110</b> for host communication with host device <b>102</b>. For example, host device <b>102</b> may include a host connector <b>110</b>.<b>1</b>, such as a peripheral component interface express (PCIe) connector, USB slot, memory card slot/reader (for Memory Stick, MultiMedia Card, SD, SDXC, etc. memory cards), etc., that provides a physical connector configured to mate with a corresponding storage device connector <b>110</b>.<b>2</b>. In some embodiments, host connector <b>110</b>.<b>1</b> may define a slot or port providing a wired internal connection to a host bus or storage interface controller. In some embodiments, device connector <b>110</b>.<b>2</b> may include a portion of a storage device housing or projection therefrom that removably inserts into the slot or port in host connector <b>110</b>.<b>1</b> to provide a physical attachment and electrical connection for host-device communication. In some embodiments, an intervening wire, extender, switch, or similar device compatible with host connector <b>110</b>.<b>1</b> and device connector <b>110</b>.<b>2</b> may be inserted between host connector <b>110</b>.<b>1</b> and device connector <b>110</b>.<b>2</b> without materially changing the host-device interface or operation of storage interface <b>110</b>.</p><p id="p-0026" num="0025">In some embodiments, storage interface <b>110</b> may be configured to use network communication protocols. Host connector <b>110</b>.<b>1</b> and device connector <b>110</b>.<b>2</b> may include any type of physical connector compatible with one or more network and/or internet protocols. For example, host connector <b>110</b>.<b>1</b> and device connector <b>110</b>.<b>2</b> may include ethernet, PCIe, Fibre Channel, small computer serial interface (SCSI), serial attached SCSI (SAS), or another network-capable interface. In some embodiments, storage device <b>120</b> may communicate through a backplane network, network switch(es), and/or other hardware and software components accessed through storage interface <b>110</b> for reaching host device <b>102</b>. For example, storage interface <b>110</b> may include or interconnect with a plurality of physical port connections and intermediate components that define physical, transport, and other logical channels for establishing communication with the different components and subcomponents for establishing a communication channel between host device <b>102</b> and storage device <b>120</b>. In some embodiments, storage interface <b>110</b> may provide a primary host interface for storage device management and host data transfer, as well as a control interface that includes limited connectivity to the host for low-level control functions, such as through a baseboard management controller (BMC).</p><p id="p-0027" num="0026">In some embodiments, data storage device <b>120</b> is, or includes, a solid-state memory device. Data storage device may include a non-volatile memory (NVM) or storage device controller <b>130</b> based on compute resources (processor and memory) and a plurality of NVM or media devices <b>140</b> for data storage (e.g., one or more NVM device(s), such as one or more flash memory devices). In some embodiments, storage device controller <b>130</b> may include a host interface controller <b>132</b>, a host storage manager <b>134</b>, and one or more memory interface controllers <b>136</b>. For example, host interface controller <b>132</b> may include a physical subsystem, such as an application specific integrated circuit (ASIC) or system on a chip (SOC), and/or logic or firmware running on the general compute resources of storage device controller <b>130</b> for configuring and controlling communication with host device <b>102</b> over storage interface <b>110</b>. Host storage manager <b>134</b> may include configuration, background, and storage processing operations running on the general compute resources of storage device controller <b>130</b> to coordinate operation of storage device <b>120</b>, host interface <b>132</b>, and memory interface <b>136</b>. Memory interface <b>136</b> may include a physical memory bus and related resources for connecting to media devices <b>140</b>.<b>1</b>-<b>140</b>.<i>n</i>, such as flash controllers or channel controllers (e.g., for storage devices having NVM devices in multiple memory channels). In some embodiments, data storage devices <b>120</b> may each be packaged in a housing, such as a multi-part sealed housing with a defined form factor and ports and/or connectors, such as device connector <b>110</b>.<b>2</b>, for interconnecting with storage interface <b>110</b>.</p><p id="p-0028" num="0027">In some embodiments, data storage device <b>120</b> may include a single medium device while in other embodiments data storage device <b>120</b> includes a plurality of media devices. In some embodiments, media devices <b>140</b> may include NAND-type flash memory or NOR-type flash memory. In some embodiments, data storage device <b>120</b> may include one or more hard disk drives (HDDs). In some embodiments, data storage device <b>120</b> may include a flash memory device, which in turn includes one or more flash memory die, one or more flash memory packages, one or more flash memory channels, or the like. However, in some embodiments, data storage device <b>120</b> may have other types of non-volatile data storage media (e.g., phase-change random access memory (PCRAM), resistive random access memory (ReRAM), spin-transfer torque random access memory (STT-RAM), magneto-resistive random access memory (MRAM), etc.).</p><p id="p-0029" num="0028">In some embodiments, storage device <b>120</b> includes storage device controller <b>130</b>, which includes one or more processing units (also sometimes called central processing units (CPUs), processors, microprocessors, or microcontrollers) configured to execute instructions in one or more programs. In some embodiments, the one or more processors are shared by one or more components within, and in some cases, beyond the function of the device controller. Media devices <b>140</b> may be coupled to device controller <b>130</b> through connections that typically convey commands in addition to data, and optionally convey metadata, error correction information and/or other information in addition to data values to be stored in media devices and data values read from media devices <b>140</b>. Media devices <b>140</b> may include any number (i.e., one or more) of memory devices including, without limitation, non-volatile semiconductor memory devices, such as flash memory device(s).</p><p id="p-0030" num="0029">In some embodiments, media devices <b>140</b> in storage device <b>120</b> are divided into a number of addressable and individually selectable blocks, sometimes called erase blocks. In some embodiments, individually selectable blocks are the minimum size erasable units in a flash memory device. In other words, each block contains the minimum number of memory cells that can be erased simultaneously (i.e., in a single erase operation). Each block is usually further divided into a plurality of pages and/or word lines, where each page or word line is typically an instance of the smallest individually accessible (readable) portion in a block. In some embodiments (e.g., using some types of flash memory), the smallest individually accessible unit of a data set, however, is a sector or codeword, which is a subunit of a page. That is, a block includes a plurality of pages, each page contains a plurality of sectors or codewords, and each sector or codeword is the minimum unit of data for reading data from the flash memory device.</p><p id="p-0031" num="0030">A data unit may describe any size allocation of data, such as host block, data object, sector, page, multi-plane page, erase/programming block, media device/package, etc. Storage locations may include physical and/or logical locations on storage devices <b>120</b> and may be described and/or allocated at different levels of granularity depending on the storage medium, storage device/system configuration, and/or context. For example, storage locations may be allocated at a host logical block address (LBA) data unit size and addressability for host read/write purposes but managed as pages with storage device addressing managed in the media flash translation layer (FTL) in other contexts. Media segments may include physical storage locations in storage device <b>120</b>, which may also correspond to one or more logical storage locations. In some embodiments, media segments may include a continuous series of physical storage location, such as adjacent data units on a storage medium, and, for flash memory devices, may correspond to one or more media erase or programming blocks. A logical data group may include a plurality of logical data units that may be grouped on a logical basis, regardless of storage location, such as data objects, files, or other logical data constructs composed of multiple host blocks. In some configurations, logical and/or physical zones may be assigned within storage device <b>120</b> as groups of data blocks allocated for specified host data management purposes.</p><p id="p-0032" num="0031">In some embodiments, host, host system, or host device <b>102</b> may be coupled to data storage system <b>100</b> through a network interface that is part of host fabric network that includes storage interface <b>110</b> as a host fabric interface. In some embodiments, multiple host devices <b>102</b> (only one of which is shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and/or clients are coupled to data storage system <b>100</b> through the fabric network, which may include a storage network interface or other interface capable of supporting communications with multiple host systems. In some embodiments, the fabric network may operate over a wired and/or wireless network (e.g., public and/or private computer networks in any number and/or configuration) which may be coupled in a suitable way for transferring data. For example, the network may include any means of a conventional data communication network such as a local area network (LAN), a wide area network (WAN), a telephone network, such as the public switched telephone network (PSTN), an intranet, the internet, or any other suitable communication network or combination of communication networks.</p><p id="p-0033" num="0032">Host device <b>102</b> may be any suitable computer device, such as a computer, a computer server, a laptop computer, a tablet device, a netbook, an internet kiosk, a personal digital assistant, a mobile phone, a smart phone, a gaming device, a smart appliance, a camera or video camera, consumer electronics device, or any other computing device. Host device <b>102</b> is sometimes called a host, client, or client system, depending on respective roles, configurations, and contexts. In some embodiments, host device <b>102</b> is distinct from a storage controller, storage node, or storage interface component housing or receiving storage device <b>120</b>. In some embodiments, host device <b>102</b> may be any computing device configured to store and access data in storage device <b>120</b>.</p><p id="p-0034" num="0033">Host device <b>102</b> may include one or more central processing units (CPUs) or processors <b>104</b> for executing compute operations or instructions for accessing storage devices <b>120</b> through storage interface <b>110</b>. In some embodiments, processor <b>104</b> may be associated with operating memory <b>106</b> for executing both storage operations and a storage interface protocol compatible with storage interface <b>110</b> and storage device <b>120</b>. In some embodiments, a separate storage interface unit (not shown) may provide the storage interface protocol and related processor and memory resources. From the perspective of storage device <b>120</b>, storage interface <b>110</b> may be referred to as a host interface and provides a host data path between storage device <b>120</b> and host device <b>102</b>.</p><p id="p-0035" num="0034">Host device <b>102</b> may include memory <b>106</b> configured to support various data access and management functions, generally in support of one or more applications <b>112</b>. Memory <b>106</b> may include a random access memory (RAM) or another type of dynamic storage device that stores information and instructions for execution by processor <b>104</b> and/or a read only memory (ROM) or another type of static storage device that stores static information and instructions for use by processor <b>104</b> and/or any suitable storage element such as a hard disk or a solid state storage element. For example, memory <b>106</b> may include one or more dynamic random access memory (DRAM) devices for use by host device <b>102</b> for command, management parameter, and/or host data storage and transfer to and from storage device <b>120</b>. In some embodiments, storage devices <b>120</b> may be configured for direct memory access (DMA), such as using remote direct memory access (RDMA) protocols, over storage interface <b>110</b> to interact with host device <b>102</b>.</p><p id="p-0036" num="0035">In some embodiments, host device <b>102</b> may include one or more applications <b>112</b> instantiated in host memory <b>106</b> for execution by host processor <b>104</b>. Applications <b>112</b> may include and/or be configured to access one or more storage management functions of storage manager <b>114</b>. Storage manager <b>114</b> may include applications, services, libraries, and/or corresponding interfaces for managing the contents and operation of storage device <b>120</b> on behalf of host device <b>102</b>. For example, storage manager <b>114</b> may include services for monitoring storage device parameters, such as total capacity, capacity used, and capacity available, tracking storage device I/O history, performance, and workload, and initiating host storage maintenance functions, such as media scans, defragmentation, host data transfer or reorganization, etc. In some embodiments, storage manager <b>114</b> may configure and monitor storage device alerts and notifications for performance monitoring. For example, storage manager <b>114</b> may include a function for monitoring for predictive performance change notifications or indicators from storage device <b>120</b> and logic for responding to such notifications or indicators. Storage manager <b>114</b> may include and/or be configured to access a storage driver <b>116</b> configured to manage communications with storage device <b>120</b> in accordance with a defined storage protocol supported by storage interface <b>110</b> and host and storage device configuration parameters. In some embodiments, storage driver <b>116</b> may be an operating system and/or firmware service or set of services configured to initialize, control, and manage communication through storage interface <b>110</b> to storage device <b>120</b>.</p><p id="p-0037" num="0036">In some embodiments, data storage system <b>100</b> includes one or more processors, one or more types of memory, a display and/or other user interface components such as a keyboard, a touch screen display, a mouse, a track-pad, and/or any number of supplemental devices to add functionality. In some embodiments, data storage system <b>100</b> does not have a display and other user interface components.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a schematic representation of a host/storage interface for predictive performance change indicators that may be used by a storage system <b>200</b> configured similarly to storage system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Host device <b>102</b> may be configured for communication with storage device <b>120</b>, such as through a storage interface similar to storage interface <b>110</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some embodiments, communications <b>202</b> may include messages passed between host device <b>102</b> and storage device <b>120</b>. For example, host device <b>102</b> and storage device <b>120</b> may support bi-directional packetized communication using a master-slave or multi-master configuration over a communication bus or network connection between them. In some embodiments, communications <b>202</b> between host <b>102</b> and storage device <b>120</b> may include register-based communication controlled solely by host device <b>102</b>. For example, the interface between storage device <b>120</b> and host device <b>102</b> may define a set of memory locations in storage device <b>120</b> that are accessible to host device <b>102</b>, such as a function register of an SD card interface or a command buffer configured for RDMA access. Host device <b>102</b> may read storage device memory locations to receive feature support information and performance indicators and write to storage device memory locations to set configuration parameters.</p><p id="p-0039" num="0038">Host device <b>102</b> and storage device <b>120</b> may include performance interface protocols <b>210</b>, <b>214</b> that support a compatible set of functions and parameters within the larger storage interface protocol used for communication between the devices. In some embodiments, performance interface protocols <b>210</b>, <b>214</b> may include a function or extension defined for an existing storage interface protocol. For example, performance interface protocols <b>210</b>, <b>214</b> may include mutual support for an extended performance monitoring function for SD cards that uses an extension register for function definition, configuration parameters, and performance indicators, as well as using an existing event notification mechanism, such as a function status bit that indicates to host device <b>102</b> that the register should be read. Host device <b>102</b> and storage device <b>120</b> may establish a default performance interface <b>212</b>. For example, host device <b>102</b> may establish the default performance interface by interrogating storage device <b>120</b> for a set of function features or parameters supported by storage device <b>120</b>. Responsive to host device <b>102</b> determining that a compatible performance monitoring function is supported by storage device <b>120</b>, host device <b>102</b> may read the default parameters provided by storage device <b>120</b> and determine whether one or more configuration parameters should be changed. In some embodiments, storage device <b>120</b> may include a set of default configuration parameters in performance interface protocol <b>214</b> and/or accept a set of host configuration parameters <b>216</b> that override some or all of the default configuration parameters.</p><p id="p-0040" num="0039">Performance window control <b>220</b> may include host control of at least one performance window value to be used by storage device <b>120</b> in predicting performance changes. For example, host device <b>102</b> may change a default performance window to increase or decrease the data collection time window used to determine the host access pattern, processing resource usage, and maintenance parameter values for predicting future changes. In some embodiments, performance window control <b>220</b> may include one or more defined performance window values corresponding to one or more host commands or access patterns. Performance window control <b>220</b> may be configured to set a host performance window <b>222</b> in host configuration parameters <b>216</b>. For example, performance window control <b>220</b> may write host performance window value <b>224</b> into one or more host configuration registers or memory locations and/or send a host configuration message that is parsed by storage device <b>120</b> to determine and store host performance window value <b>224</b> in host configuration parameters <b>216</b>.</p><p id="p-0041" num="0040">Performance threshold control <b>230</b> may include host control of at least one performance threshold value to be used by storage device <b>120</b> in predicting performance changes and determining notification or alert conditions. For example, host device <b>102</b> may change a default performance threshold to increase or decrease the required performance limit or limits used to determine whether and/or when a projected performance value for the host access pattern crosses the host threshold value(s) and a performance change indicator is provided by storage device <b>120</b>. In some embodiments, performance threshold control <b>230</b> may include one or more defined performance threshold values corresponding to storage device processing requirements to prevent host application errors or degradation of host application performance. In some embodiments, performance thresholds may be based on specific performance threshold values or a percentage or other function based on a nominal performance value for storage device <b>120</b>. Performance threshold control <b>230</b> may be configured to set a host performance threshold <b>232</b> in host configuration parameters <b>216</b>. For example, performance threshold control <b>230</b> may write host performance threshold value <b>234</b> into one or more host configuration registers or memory locations and/or send a host configuration message that is parsed to by storage device <b>120</b> determine and store host performance threshold value <b>234</b> in host configuration parameters <b>216</b>.</p><p id="p-0042" num="0041">Performance prediction horizon control <b>240</b> may include host control of at least one performance prediction horizon value to be used by storage device <b>120</b> in predicting performance changes and determining notification or alert conditions. For example, host device <b>102</b> may change a default performance prediction horizon to increase or decrease how far in the future the current operating parameters should be extrapolated into the future for evaluating whether or not one or more performance thresholds are crossed and a performance change indicator should be provided by storage device <b>120</b>. In some embodiments, performance prediction horizon control <b>240</b> may include one or more defined performance horizon control values corresponding to host command duration, use case durations, and/or prediction limits of the performance model being used. Performance prediction horizon control <b>240</b> may be configured to set a host performance prediction horizon <b>242</b> in host configuration parameters <b>216</b>. For example, performance prediction horizon control <b>240</b> may write host performance prediction horizon value <b>244</b> into one or more host configuration registers or memory locations and/or send a host configuration message that is parsed by storage device <b>120</b> to determine and store host performance prediction horizon value <b>244</b> in host configuration parameters <b>216</b>. In some embodiments, host device <b>102</b> may set any combination of host configuration parameters and performance window value <b>224</b>, performance threshold value <b>234</b>, and performance prediction horizon value <b>244</b> may be provided in <figref idref="DRAWINGS">FIG. <b>2</b></figref> as a non-limiting example.</p><p id="p-0043" num="0042">Performance tracking control <b>250</b> may enable host device <b>102</b> to initiate and/or restart predictive performance monitoring by storage device <b>120</b>. For example, performance tracking control <b>250</b> may be configured to initiate performance tracking responsive to providing a set of host configuration parameters to storage device <b>120</b> and/or changes in host device storage operations, such as specific commands, modes, or use cases with distinct host access patterns and/or related host configuration parameters. In some embodiments, performance tracking control <b>250</b> may initialize performance tracking <b>252</b> to notify performance predictor <b>260</b> to start and/or restart performance monitoring based on the current configuration of host configuration parameters <b>216</b>. For example, performance tracking control <b>250</b> may write an initialization or enablement flag or other value in a function initialization register or memory location and/or send a host initialization message that is parsed by storage device <b>120</b> as a performance monitor initialization command.</p><p id="p-0044" num="0043">Performance predictor <b>260</b> may include interfaces, functions, parameters, and/or data structures that enable storage device <b>120</b> to monitor relevant parameters, calculate predicted performance values, and generate performance change indicators based on performance interface protocol <b>214</b>, host configuration parameters <b>216</b>, and operating parameters of storage device <b>120</b>. For example, performance predictor <b>260</b> may be configured to access and aggregate operating parameters over a performance window and extrapolate continued operation to one or more prediction horizons to determine whether one or more performance thresholds are met or crossed. In some embodiments, performance predictor <b>260</b> may be configured to determine a host access pattern <b>262</b> over the performance window. For example, performance predictor <b>260</b> may compare host I/O patterns to one or more access pattern baseline values, such as sequential write, random write, sequential read, random read, and/or more complex patterns including combinations, sequences, and/or percentages of two or more base patterns. In some embodiments, performance predictor <b>260</b> may use current I/O performance and/or one or more I/O performance parameters monitored by the storage device as input values calculating predicted performance values. For example, performance predictor <b>260</b> may aggregate I/O parameters over the performance window to determine corresponding storage operation usage of processing resources. In some embodiments, performance predictor <b>260</b> may use maintenance parameters as input values for calculating predicted performance values. For example, performance predictor <b>260</b> may use garbage collection parameters, such as a valid fragment count of processed data blocks, percentage or total of invalid data stored (and needing garbage collection), write amplification factors, etc., to project increases in maintenance operations based on continuing the host access pattern to one or more prediction horizons. In some embodiments, performance predictor <b>260</b> may include a performance model <b>268</b> that correlates the current host access pattern <b>262</b>, current I/O performance parameters <b>264</b>, and maintenance parameters <b>266</b> to projected or predicted maintenance requirements, attendant changes in available processing resources, and resulting changes in host I/O performance. Performance predictor <b>260</b> may generate one or more performance change indicators <b>272</b> responsive to performance threshold values and notify host device <b>102</b> of the predicted performance change. For example, predicted performance values from performance model <b>268</b> may be compared to performance threshold values at intervals up to the prediction horizon to determine whether and what performance change indicator <b>272</b> is provided by storage device <b>120</b> to host device <b>102</b>.</p><p id="p-0045" num="0044">In some embodiments, host device <b>102</b> may include a performance data handler <b>270</b> configured to receive and/or access performance change indicator <b>272</b>. For example, performance data handler <b>270</b> may monitor a notification register or memory location in storage device <b>120</b> on a periodic basis to determine the availability of new performance change indicators and/or receive and parse a notification message from storage device <b>120</b>. In some embodiments, host device <b>102</b> may include a performance response handler configured to determine one or more host responses to performance change indicators determined by performance data handler <b>270</b>. For example, performance response handler <b>280</b> may include one or more logical rules evaluated with regard to each performance change indicator received to determine further action by host devices <b>102</b>. In some embodiments, performance response handler <b>280</b> may map selected performance change indicators meeting specified binary thresholds, severity thresholds, prediction probabilities, and/or prediction times to predetermined response actions, such as providing user notifications or warning indicators to a user interface, throttling I/O commands, adjusting buffer management, enabling a graceful exit from a threatened application, etc.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a schematic representation of a performance interface register <b>300</b> that may be used by the storage system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, storage devices <b>120</b> may include a set of memory locations configured as a registry allocated for a predictive performance monitoring function and accessible to host device <b>102</b>. In some embodiments, performance interface register <b>300</b> may include a plurality of fields or parameters for communicating performance related support parameters <b>310</b>, performance change indicators <b>330</b>, and/or configuration parameters. Various fields may include different access privileges for one or both devices. For example, support parameters <b>310</b> may be read-only fields for describing the performance monitoring function, parameters, arguments, and extensions supported by storage device <b>120</b>. Performance change indicators <b>330</b> may be read/write fields for storage device <b>120</b>, but read-only for host device <b>102</b> to enable storage device <b>120</b> to selectively provide performance change indicators to host device <b>102</b> in indicator memory locations. Configuration parameters <b>340</b> may be read/write for host device <b>102</b> to enable host device <b>102</b> to check current configuration parameter settings and/or set new host configuration parameters, for example, as described above with regard to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0047" num="0046">In some embodiments, support parameters <b>310</b> may include a plurality of support parameter fields, such as: a function header <b>312</b> configured to include values identifying the performance function and/or the scope and layout of the register; event support <b>314</b> configured to include values identifying an event notification mechanism, such as setting an event bit elsewhere in the storage interface or leveraging another storage event notification process; indicator support <b>316</b> configured to include values identifying the types of performance change indicators supported by the function; parameter support <b>318</b> configured to include values identifying the performance parameters and/or units of those performance parameters supported by the function; severity support <b>320</b> configured to include values identifying a number of severity levels or incremental thresholds for determining and/or classifying performance changes supported by the function; probability support <b>322</b> configured to include values identifying whether reporting prediction probability or reliability parameters is supported by the function; interval support <b>324</b> configured to include values identifying whether multiple time intervals and/or prediction horizons are supported by the function; supported ranges <b>326</b> configured to include values identifying the acceptable range of one or more host-configurable configuration parameters, such as configuration parameters <b>340</b>, supported by the function; and default parameters <b>328</b> configured to include default values for one or more configuration parameters, such as configuration parameters <b>340</b>, used by the function (absent host device <b>102</b> setting host configuration values). For example, each field may be identified by a memory location, such as start position to end position or start position and length, a field or parameter tag, and/or another mechanism for identifying the specific field and its contents. In an alternate embodiment, the plurality of support parameter field values may be provided in a messaging or command/response configuration where host device <b>102</b> sends a function definition command and storage device <b>120</b> responds with one or more of the fields/values from support parameters <b>310</b>.</p><p id="p-0048" num="0047">In some embodiments, performance change indicators <b>330</b> may include a plurality of performance change indicator fields, such as: performance change indicator <b>332</b> configured to include a performance change flag or similar binary performance change indicator for communicating when a change condition exists; severity indicator <b>334</b> configured to include severity values quantifying the amount and/or timing of a predicted change condition; and probability indicator <b>336</b> configured to include probability and/or reliability values to quantify the likelihood of a predicted change occurring. In some embodiments, performance change indicators <b>330</b> may support prediction reporting over multiple time intervals out to the prediction horizon. For example, performance change indicators <b>330</b> may be provided for additional time intervals <b>338</b>, such as every minute, 5 minute interval, 10 minute interval, etc. from the current time to the prediction horizon. Each field in performance change indicators <b>330</b> may be identified by a memory location, such as start position to end position or start position and length, a field or parameter tag, and/or another mechanism for identifying the specific field and its contents. In an alternate embodiment, the plurality of performance change indicator field values may be provided in a messaging or notification configuration where storage device <b>120</b> generates event-based or periodic notification messages to host device <b>102</b> containing one or more of the fields/values from performance change indicators <b>330</b>.</p><p id="p-0049" num="0048">In some embodiments, configuration parameters <b>340</b> may include a plurality of host configuration parameter fields, such as: host configuration <b>342</b> configured to include values identifying a particular host configuration, such as a host device identifier and/or a configuration identifier corresponding to specific host access patters, commands, and/or use cases; performance window <b>344</b> configured to include one or more host performance window values; performance threshold <b>346</b> configured to include one or more host performance threshold values, such as performance threshold values defining different severity levels; prediction horizon <b>348</b> configured to include one or more performance prediction horizon values; and reporting intervals <b>350</b> configured to include one or more reporting interval values for setting interval-based prediction of performance change values from a current time to the reporting horizon. Each field in configuration parameters <b>340</b> may be identified by a memory location, such as start position to end position or start position and length, a field or parameter tag, and/or another mechanism for identifying the specific field and its contents. In an alternate embodiment, the plurality of host configuration field values may be provided in a messaging or command/response configuration where host device <b>102</b> sends a configuration set command and storage device <b>120</b> responds with a confirmation message.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a schematic representation of an example host device <b>102</b>. Host device <b>102</b> may comprise a bus <b>410</b>, a host processor <b>420</b>, a host memory <b>430</b>, one or more optional input units <b>440</b>, one or more optional output units <b>450</b>, and a communication interface <b>460</b>. Bus <b>410</b> may include one or more conductors that permit communication among the components of host <b>102</b>. Processor <b>420</b> may include any type of conventional processor or microprocessor that interprets and executes instructions. Host memory <b>430</b> may include a random access memory (RAM) or another type of dynamic storage device that stores information and instructions for execution by processor <b>420</b> and/or a read only memory (ROM) or another type of static storage device that stores static information and instructions for use by processor <b>420</b> and/or any suitable storage element such as a hard disc or a solid state storage element. For example, performance interface protocol <b>210</b>, performance window control <b>220</b>, performance threshold control <b>230</b>, performance prediction horizon control <b>240</b>, performance tracking control <b>250</b>, performance data handler <b>270</b>, and/or performance response handler <b>280</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be instantiated in instructions, operations, or firmware stored in host memory <b>430</b> for execution by host processor <b>420</b>. An optional input unit <b>440</b> may include one or more conventional mechanisms that permit an operator to input information to host <b>102</b> such as a keyboard, a mouse, a pen, voice recognition and/or biometric mechanisms, etc. In some embodiments, optional input unit <b>440</b> may include image, audio, infrared, and/or other sensors for video camera or other consumer electronics functions. Optional output unit <b>450</b> may include one or more conventional mechanisms that output information to the operator, such as a display, a printer, a speaker, etc. Communication interface <b>460</b> may include any transceiver-like mechanism that enables host <b>102</b> to communicate with other devices and/or systems. In some embodiments, communication interface <b>460</b> may include one or more peripheral interfaces, such as a PCIe, USB, SD, SDXC, or other interface for connecting to storage device <b>120</b> and/or a network interface for communicating with storage device <b>120</b> over a fabric network.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically shows selected modules of a storage device <b>500</b> configured for reporting predicted changes in performance based on maintenance operations to other system nodes, such as host or client systems. Storage device <b>500</b> may incorporate elements and configurations similar to those shown in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>. For example, storage device <b>500</b> may be a storage device configured as storage device <b>120</b> in storage system <b>100</b>, where the storage device includes: bus <b>510</b>, processor <b>512</b>, memory <b>514</b> (instantiating host interface <b>530</b> and storage manager <b>536</b>), and storage interface <b>516</b> in storage device controller <b>130</b>; and non-volatile memory <b>520</b> in NVM devices <b>140</b>.</p><p id="p-0052" num="0051">Storage device <b>500</b> may include a bus <b>510</b> interconnecting at least one processor <b>512</b>, at least one memory <b>514</b>, and at least one interface, such as storage interface <b>516</b>. Bus <b>510</b> may include one or more conductors that permit communication among the components of storage device <b>500</b>. Processor <b>512</b> may include any type of processor or microprocessor that interprets and executes instructions or operations. Memory <b>514</b> may include a random access memory (RAM) or another type of dynamic storage device that stores information and instructions for execution by processor <b>512</b> and/or a read only memory (ROM) or another type of static storage device that stores static information and instructions for use by processor <b>512</b> and/or any suitable storage element such as a hard disk or a solid state storage element.</p><p id="p-0053" num="0052">Storage interface <b>516</b> may include a physical interface for communication between a storage device and a host or client using an interface protocol that supports storage device access. For example, storage interface <b>516</b> may include a USB, SD, SDXC, PCIe, serial advanced technology attachment (SATA), serial attached small computer system interface (SCSI) (SAS), or similar storage interface connector supporting access to solid state media comprising non-volatile memory devices <b>520</b>. In some embodiments, storage interface <b>516</b> may connect to or incorporate a network interface for connecting to a fabric network and/or other network. For example, storage interface <b>516</b> may connect to a network fabric interface through a backplane network and/or storage network interface controller supporting an NVMe-over-fabric (NVMeoF) protocol. In some embodiments, storage device <b>500</b>, hosts, clients, and/or other components of the storage system may be configured as nodes in the NVMeoF topology and communicate using supported NVMe commands, such as NVMe telemetry commands.</p><p id="p-0054" num="0053">Storage device <b>500</b> may include one or more non-volatile memory devices <b>520</b> configured to store host data <b>520</b>.<b>1</b>. For example, non-volatile memory devices <b>520</b> may include a plurality of flash memory packages organized as an addressable memory array. In some embodiments, non-volatile memory devices <b>520</b> may include NAND or NOR flash memory devices comprised of single level cells (SLC), multiple level cell (MLC), triple-level cells (TLC), quad-level cells (QLC), penta-level cells (PLC), etc. In some embodiments, non-volatile memory devices <b>520</b> may include the storage medium of a storage device, such as NVM devices <b>140</b> in storage devices <b>120</b>.</p><p id="p-0055" num="0054">Storage device <b>500</b> may include a plurality of modules or subsystems that are stored and/or instantiated in memory <b>514</b> for execution by processor <b>512</b> as instructions or operations. For example, memory <b>514</b> may include a host interface <b>530</b> configured to receive, process, and respond to host data requests and/or management commands from client or host systems. Memory <b>514</b> may include storage manager <b>540</b> configured to manage storage and management operations to the media devices comprising non-volatile memory <b>520</b>.</p><p id="p-0056" num="0055">Host interface <b>530</b> may include an interface protocol and/or set of functions, parameters, and/or data structures for receiving, parsing, responding to, and otherwise managing host data requests from a host. For example, host interface <b>530</b> may include functions for receiving and processing host requests for reading, writing, modifying, or otherwise manipulating data blocks and their respective client or host data and/or metadata in accordance with host communication and storage protocols. Host interface <b>530</b> may also support administrative commands and/or management operations initiated by the host or the storage device, such as configuration changes, garbage collection, log access, firmware management, reporting of operational parameters, notification of predicted performance change indicators, etc. For example, host interface <b>530</b> may support administrative command sets for configuring namespaces, queue control, log access, feature identification and configuration, security settings, and/or performance monitoring. In some embodiments, host interface <b>530</b> may enable direct memory access and/or access over NVMe protocols through storage interface <b>516</b>. For example, host interface <b>530</b> may include host communication protocols compatible with USB, SD, SDXC, PCIe, SATA, SAS, and/or another bus interface. Host interface <b>530</b> may further include performance interface protocols compatible with configuring and enabling predicting and reporting performance changes based on maintenance operations. For example, host interface <b>530</b> may collect relevant operating parameters, calculate predicted performance parameters, compare the predicted parameters against one or more performance thresholds, and report predicted performance change indicators from storage device <b>500</b> on a periodic, event-based, or host-response basis.</p><p id="p-0057" num="0056">In some embodiments, host interface <b>530</b> may include a plurality of hardware and/or software modules configured to use processor <b>512</b> and memory <b>514</b> to handle or manage defined operations of host interface <b>530</b>. For example, host interface <b>530</b> may include a storage interface protocol <b>532</b> configured to comply with the physical, transport, and storage application protocols supported by the host for communication over storage interface <b>516</b>. For example, storage interface protocol <b>532</b> may include USB, SD, SDXC, PCIe, NVMe, and/or other protocol compliant communication, command, and syntax functions, procedures, and data structures. In some embodiments, host interface <b>530</b> may include a performance predictor <b>534</b> configured to provide functions processing and interfaces for predictive performance monitoring and reporting. In some embodiments, host interface <b>530</b> may include additional modules (not shown) for input/output (I/O) commands, buffer management, storage device configuration and management, and other host-side functions.</p><p id="p-0058" num="0057">In some embodiments, performance predictor <b>534</b> may be configured to handle predicting performance monitoring in order to notify a host device of a predicted change in storage processing performance before the predicted change actually occurs. Performance predictor <b>534</b> may be comprised of a plurality of interfaces, functions, parameters, data structures, and related logic for executing or supporting one or more functional aspects of performance predictor <b>534</b>. For example, performance predictor <b>534</b> may include performance interface <b>534</b>.<b>1</b>, host configuration <b>534</b>.<b>2</b>, I/O monitor <b>534</b>.<b>3</b>, maintenance monitor <b>534</b>.<b>4</b>, performance window <b>534</b>.<b>5</b>, host pattern analyzer <b>534</b>.<b>6</b>, maintenance model <b>534</b>.<b>7</b>, performance model <b>534</b>.<b>8</b>, prediction horizon <b>534</b>.<b>9</b>, predicted values <b>534</b>.<b>10</b>, performance threshold <b>534</b>.<b>11</b>, prediction comparator <b>534</b>.<b>12</b>, binary indicator <b>534</b>.<b>13</b>, severity indicator <b>534</b>.<b>14</b>, probability indicator <b>534</b>.<b>15</b>, reporting intervals <b>534</b>.<b>16</b>, and host notifier <b>534</b>.<b>17</b>. Not all embodiments will include all performance monitoring features or functions.</p><p id="p-0059" num="0058">Performance interface <b>534</b>.<b>1</b> may include one or more interfaces configured for communication with a host device regarding performance predictor capabilities, configuration, and access to the predicted performance indicators generated by performance predictor <b>534</b>. For example, performance interface <b>534</b>.<b>1</b> may be configured using a performance interface protocol, registry, and/or message structure similar to those described above with regard to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>. In some embodiments, performance interface <b>534</b>.<b>1</b> may enable host configuration <b>534</b>.<b>2</b>. Host configuration <b>534</b>.<b>2</b> may include one or more host-configurable parameters that may include default values and/or be set by host interactions through performance interface <b>534</b>.<b>1</b>. For example, host configuration <b>534</b>.<b>2</b> may include a plurality of host configuration values set by the host device as described above with regarding to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>.</p><p id="p-0060" num="0059">I/O monitor <b>534</b>.<b>3</b> may include one or more interfaces or functions for collecting or accessing operating parameters regarding the processing of host storage operations, such as read, write, and delete commands. For example, I/O monitor <b>534</b>.<b>3</b> may access registers or data structures within or maintained by storage manager <b>540</b> to aggregate storage operations data, such as number, type, size, timing, processing resources, etc. of executed storage operations. In some embodiments, I/O monitor <b>534</b>.<b>3</b> may be configured to collect IOPS, MB/s, and similar aggregate operations data. Maintenance monitor <b>534</b>.<b>4</b> may include one or more interfaces or functions for collecting or accessing operating parameters regarding the processing of maintenance operations, such as garbage collection. For example, maintenance monitor <b>534</b>.<b>4</b> may access registers or data structures within or maintained by storage manager <b>540</b> to aggregate maintenance operations data, such as valid/invalid fragment counts, garbage collection operation counts, timing, processing resources, available blocks, etc.</p><p id="p-0061" num="0060">In some embodiments, performance window <b>534</b>.<b>4</b> may include one or more performance window parameters for determining an operating period during which operating data from I/O monitor <b>534</b>.<b>3</b> and/or maintenance monitor <b>534</b>.<b>4</b> may be aggregated for a performance prediction calculation. For example, a default or host-configured performance window value may determine that operating data be collected for 30 seconds before initiating a performance prediction calculation. In some embodiments, the performance window may determine how often the performance prediction is calculate, such as at intervals equal to the performance window. Host pattern analyzer <b>534</b>.<b>6</b> may include functions or logic for analyzing host storage operations to identify host access patterns. For example, host pattern analyzer <b>534</b>.<b>6</b> may compare host I/O patterns to one or more access pattern baseline values, such as sequential write, random write, sequential read, random read, and/or more complex patterns including combinations, sequences, and/or percentages of two or more base patterns.</p><p id="p-0062" num="0061">In some embodiments, performance predictor <b>534</b> may include maintenance model <b>534</b>.<b>7</b> and/or performance model <b>534</b>.<b>8</b> to generate predicted performance values <b>534</b>.<b>10</b> at one or more prediction horizons <b>534</b>.<b>9</b> based on the storage and maintenance parameters collected by <b>110</b> monitor <b>534</b>.<b>3</b> and maintenance monitor <b>534</b>.<b>4</b>. For example, maintenance model <b>534</b>.<b>7</b> may include one or more algorithms correlating a collected maintenance parameter, such as the valid fragment count of erase blocks, to determine changing need for garbage collection. In some embodiments, maintenance model <b>534</b>.<b>7</b> may be used to determine a predicted increase in processing resource usage by garbage collection or other maintenance operations. Performance model <b>534</b>.<b>8</b> may include one or more algorithms correlating changes in available processing resources (due to priority allocation to maintenance operations) to future processing performance parameters for storage operations. In some embodiments, maintenance model <b>534</b>.<b>7</b> and/or performance model <b>534</b>.<b>8</b> may use operating parameters collected over performance window <b>534</b>.<b>5</b> and/or the host pattern identified by host pattern analyzer <b>534</b>.<b>6</b> as input parameters to their respective models and predicted performance values. In some embodiments, one or more predicted maintenance performance values from maintenance model <b>534</b>.<b>7</b> may be used as an input parameter to performance model <b>534</b>.<b>8</b>. Prediction horizon <b>534</b>.<b>9</b> may be an input parameter to one or both models that determines a maximum time value to be used for the prediction. In some embodiments, prediction horizon <b>534</b>.<b>9</b> may include a plurality of time values that include both the maximum value and one or more interval values between the time of the prediction calculation and the maximum value to generate predicted performance values <b>534</b>.<b>10</b> at a plurality of time points within the prediction horizon. Predicted performance values <b>534</b>.<b>10</b> may include one or more storage operation performance values, such as IOPS or MB/s that may be used to determine whether predicted performance will be within the performance expectations or needs of the host device.</p><p id="p-0063" num="0062">Predicted performance values <b>534</b>.<b>10</b> may be compared against one or more performance thresholds <b>534</b>.<b>11</b> by prediction comparator <b>534</b>.<b>12</b>. Predicted performance values <b>534</b>.<b>10</b> may include parameter values corresponding to the prediction output of performance model <b>534</b>.<b>8</b>. For example, predicted performance values <b>534</b>.<b>10</b> may include an array of performance values corresponding to future time points. Performance thresholds <b>534</b>.<b>11</b> may include parameter values corresponding to default and/or host-configured storage operation processing requirements. For example, performance thresholds <b>534</b>.<b>11</b> may include one or more notification or severity thresholds based on storage operation volumes or throughput requirements of one or more host applications. Prediction comparator <b>534</b>.<b>12</b> may include functions or logic for comparing one or more predicted performance values <b>534</b>.<b>10</b> to one or more performance thresholds <b>534</b>.<b>11</b> to determine when the performance value for a future timepoint crosses a performance threshold for generation of a performance change indicator, such as binary indicator <b>534</b>.<b>13</b>, severity indicator <b>534</b>.<b>14</b>, and/or probability indicator <b>534</b>.<b>15</b>.</p><p id="p-0064" num="0063">Performance change indicators may include parameters exposed to or send to the host device to indicate that at least one predicted performance change meeting performance threshold <b>534</b>.<b>11</b> has been determined by performance model <b>534</b>.<b>8</b> within prediction horizon <b>534</b>.<b>9</b>. For example, performance predictor <b>534</b> may write a performance change indicator to a performance interface register and/or include it in a notification message to the host device. Binary indicator <b>534</b>.<b>13</b> may include a flag or similar indicator value that indicates whether a predicted performance change condition exists or does not exist. In some embodiments, binary indicator <b>534</b>.<b>13</b> may be associated with the predicted performance condition at prediction horizon <b>534</b>.<b>9</b> and/or one or more intermediate time intervals and/or include predicted value <b>534</b>.<b>10</b> that triggered the performance change indicator. Severity indicator <b>534</b>.<b>14</b> may include a plurality of indicator values corresponding to different severity conditions. For example, different severity conditions may be defined based on a series of threshold values, such as 80% IOPS, 60% IOPS, and 40% IOPS (from the nominal maximum IOPS value of the storage device) or based on a series of time values, such as 30 seconds, 1 minute, 5 minutes, and 10 minutes until predicted change. Probability indicator <b>534</b>.<b>15</b> may include one or more indicator values associated with binary indicator <b>534</b>.<b>13</b> and/or severity indicator <b>534</b>.<b>14</b> to quantify the probability or likelihood of predicted values <b>534</b>.<b>10</b>. For example, maintenance model <b>534</b>.<b>7</b> and/or performance model <b>534</b>.<b>8</b> may include statistical and/or probabilistic algorithms that have associated reliability or probability factors. Such reliability or probability values may be stored or sent with the corresponding predicted values <b>534</b>.<b>10</b> and/or other performance change indicators.</p><p id="p-0065" num="0064">In some embodiments, performance predictor <b>534</b> may include reporting intervals <b>534</b>.<b>16</b> configured to determine the frequency with which predicted values <b>534</b>.<b>10</b> are calculated and selectively reported through performance interface <b>534</b>.<b>1</b>. Reporting intervals <b>534</b>.<b>16</b> may include parameters and logic for determining the interval between calculations, threshold evaluations, and reporting of predicted performance changes. For example, reporting intervals <b>534</b>.<b>16</b> may equal performance window <b>534</b>.<b>5</b> and/or another periodic value, generally greater than performance window <b>534</b>.<b>5</b> and less than prediction horizon <b>534</b>.<b>9</b>. In some embodiments, performance predictor <b>534</b> may be configured to report performance change indicators based on reporting intervals <b>534</b>.<b>16</b> without determining that predicted changes will cross performance threshold <b>534</b>.<b>11</b>. Host notifier <b>534</b>.<b>17</b> may include interfaces, functions, parameters and logic for notifying the host device of a predicted performance change. For example, host notifier <b>534</b>.<b>17</b> may trigger an event notification, such as an event notification register or event notification message supported by storage interface protocol <b>532</b>.</p><p id="p-0066" num="0065">Storage manager <b>540</b> may include an interface protocol and/or set of functions, parameters, and data structures for reading, writing, and deleting data units in non-volatile memory devices <b>520</b>. For example, storage manager <b>540</b> may include a read/write processor for executing host data operations related to host storage commands received through host interface <b>530</b>. For example, PUT or write commands may be configured to write host data units to non-volatile memory devices <b>520</b> through a write processor. GET or read commands may be configured to read data from non-volatile memory devices <b>520</b> through a read processor. DELETE commands may be configured to delete data from non-volatile memory devices <b>520</b>, or at least mark a data location for deletion until a future garbage collection or similar operation actually deletes the data or reallocates the physical storage location to another purpose. In some embodiments, storage manager <b>540</b> may include flash translation layer (FTL) management <b>544</b>, data state machine, read/write buffer management, NVM device interface protocols, NVM device configuration/management/maintenance, and other device-side functions. Storage manager <b>540</b> may include a garbage collector <b>546</b> configured to consolidate valid data units into new programming blocks to enable invalid data units to be erased and allow their programming blocks to be reused. For example, garbage collector <b>546</b> may include logic for selecting programming blocks to be collected based on various data parameters, such as data age, valid fragment count, available capacity, etc., and may determine or access data and operating parameters related to such logic. In some embodiments, garbage collector <b>546</b> may include progressive logic that becomes more aggressive in reclaiming programming blocks as the number of available programming blocks decreases. Storage manager <b>540</b> may include various functions that generate operational parameters, such as workload data, error rates, configuration parameters, physical parameters, storage parameters (e.g., aggregate storage space used/available/marked for garbage collection, wear leveling statistics, etc.), error logs, event logs, and other operational parameters that may be aggregated and reported through various interfaces, functions, or services.</p><p id="p-0067" num="0066">As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, storage device <b>500</b> may be operated according to an example method for providing predictive performance change indicators to a host device, i.e., according to method <b>600</b> illustrated by blocks <b>610</b>-<b>630</b> in <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0068" num="0067">At block <b>610</b>, storage operations may be received from a host device. For example, a host interface may receive read, write, and delete commands from the host device to manipulate host data stored by the storage device.</p><p id="p-0069" num="0068">At block <b>612</b>, storage operations from the host device may be processed. For example, the host interface may parse storage commands and generate storage processing tasks executed by a storage manager against the non-volatile media of the storage device.</p><p id="p-0070" num="0069">At block <b>614</b>, a performance window may be determined for storage operations. For example, a performance predictor may be configured to use a default or host-configured performance window value to set a time window in which performance operations may be analyzed for performance prediction.</p><p id="p-0071" num="0070">At block <b>616</b>, a performance value may be determined for the storage operations during the performance window. For example, the performance predictor may aggregate data from the storage manager regarding the storage operations processed during the performance window and express them as a number of operations per unit time or a storage volume per unit time.</p><p id="p-0072" num="0071">At block <b>618</b>, a host access pattern may be determined. For example, the performance predictor and/or storage manager may recognize, classify, and/or quantify the pattern of storage operations received and processed during the performance window.</p><p id="p-0073" num="0072">At block <b>620</b>, a performance threshold may be determined. For example, the performance predictor may be configured to determine a default or host-configured performance threshold value for use in predicting performance changes sufficient to trigger a notification event.</p><p id="p-0074" num="0073">At block <b>622</b>, a prediction horizon may be determined. For example, the performance predictor may be configured to determine a default or host-configured performance prediction horizon value for use in determining how far into the future performance values and changes should be predicted.</p><p id="p-0075" num="0074">At block <b>624</b>, maintenance operations may be processed. For example, the storage manager may be configured to process maintenance operations, such as garbage collection, in parallel with storage operations as the need for maintenance operations increases, such as after available capacity drops below a capacity threshold value.</p><p id="p-0076" num="0075">At block <b>626</b>, an increase in maintenance operations may be predicted. For example, the performance predictor may use a maintenance model and maintenance and storage parameters aggregated during the performance window to predict increased maintenance operations at a future timepoint.</p><p id="p-0077" num="0076">At block <b>628</b>, a change in performance value that crosses a performance threshold may be predicted. For example, the performance predictor may use a performance model, host access pattern, increased maintenance operation parameters, and/or other operating parameters aggregated during the performance window to calculate a performance value and compare the performance value to one or more performance threshold values to determine whether the predicted performance value crosses a performance threshold.</p><p id="p-0078" num="0077">At block <b>630</b>, the host device may be notified of the predicted change. For example, the performance predictor may use a performance interface protocol to notify the host device of the predicted performance change.</p><p id="p-0079" num="0078">As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, storage system <b>200</b> may be operated according to an example method for configuring predictive performance change indicators by host device <b>102</b>, i.e., according to method <b>700</b> illustrated by blocks <b>710</b>-<b>718</b> in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0080" num="0079">At block <b>710</b>, a storage device may be initialized. For example, the host device may initialize a removable storage device through a storage interface to initiate communication with the storage device.</p><p id="p-0081" num="0080">At block <b>712</b>, a performance interface may be established with the storage device. For example, the storage interface may support an embedded performance interface as a set of interface registers, functions, and/or commands for configuring performance prediction operations and notifications.</p><p id="p-0082" num="0081">At block <b>714</b>, a performance value type may be set. For example, the performance interface may support a plurality of performance value types or units for measuring storage device I/O performance and the host device may determine the performance value type or types to be used by the storage device.</p><p id="p-0083" num="0082">At block <b>716</b>, a host performance threshold value may be set. For example, the performance interface may include a default value for the performance threshold and the host device may change the default value to a host-configured threshold value through the performance interface.</p><p id="p-0084" num="0083">At block <b>718</b>, a host performance window value may be set. For example, the performance interface may include a default value for the performance window and the host device may change the default value to a host-configured threshold value through the performance interface.</p><p id="p-0085" num="0084">At block <b>720</b>, a host prediction horizon value may be set. For example, the performance interface may include a default value for the prediction horizon and the host device may change the default value to a host-configured prediction horizon value through the performance interface.</p><p id="p-0086" num="0085">At block <b>722</b>, a notification type may be set. For example, the performance interface may support a plurality of notification types, such as event notification flags, event logs, notification messages, etc., and the host device may select a preferred notification type to receive.</p><p id="p-0087" num="0086">At block <b>724</b>, a reporting interval may be set. For example, the performance interface may support configuration of a reporting interval to determine how often performance predictions are updated and the host device may set a preferred reporting interval value, such as the performance window or a multiple thereof.</p><p id="p-0088" num="0087">At block <b>726</b>, storage operations may be sent to the storage device. For example, the host device may send read, write, and delete commands to the storage device for processing in accordance with the storage protocols used between the devices.</p><p id="p-0089" num="0088">At block <b>728</b>, notification events may be periodically checked. For example, the storage device may be configured for passive notification and the host device may initiate a read operation against an event flag, event log, or similar interface structure to determine that a performance change has been predicted.</p><p id="p-0090" num="0089">At block <b>730</b>, notification of the predicted change may be received. For example, the event flag may indicate that the performance interface register should be read to receive the performance change indicators associated with the notification event or the host device may request and receive a notification message containing the performance change indicators.</p><p id="p-0091" num="0090">At block <b>732</b>, a warning notification may be displayed to a user. For example, the host device may include logic for responding to the performance change indicators and generating a visual, audible, tactile, and/or other warning notification to a user of the host device of the predicted change in performance. In alternate embodiments, the host device may respond by adjusting its access pattern to the device, re-allocating resources for device communication channels, or other host actions to compensate for the predicted performance change.</p><p id="p-0092" num="0091">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, storage device <b>500</b> may be operated according to an example method for generating configurable predictive performance change indicators, i.e., according to method <b>800</b> illustrated by blocks <b>810</b>-<b>824</b> in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. In some embodiments, one or more blocks of method <b>800</b> may be used in conjunction with method <b>600</b> in <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0093" num="0092">At block <b>810</b>, a host performance threshold value may be received. For example, the storage device may receive host-configured performance threshold values through a host interface.</p><p id="p-0094" num="0093">At block <b>812</b>, the performance threshold to be used for the performance prediction may be determined. For example, the host-configured performance threshold values may be set as the performance thresholds for the next performance prediction calculated.</p><p id="p-0095" num="0094">At block <b>814</b>, a host performance window value may be received. For example, the storage device may receive host-configured performance window values through the host interface.</p><p id="p-0096" num="0095">At block <b>816</b>, the performance window to be used for the performance prediction may be determined. For example, the host-configured performance window values may be set as the performance window for the next performance prediction calculated.</p><p id="p-0097" num="0096">At block <b>818</b>, a host prediction horizon value may be received. For example, the storage device may receive host-configured prediction horizon values through the host interface.</p><p id="p-0098" num="0097">At block <b>820</b>, the prediction horizon to be used for the performance prediction may be determined. For example, the host-configured prediction horizon values may be set as the prediction horizon for the next performance prediction calculated.</p><p id="p-0099" num="0098">At block <b>822</b>, a predicted maintenance increase may be determined. For example, the performance predictor may calculate a predicted maintenance increase based on the performance window and prediction horizon.</p><p id="p-0100" num="0099">At block <b>824</b>, a predicted performance change may be determined. For example, the performance predictor may use the performance window, the prediction horizon, and the predicted maintenance increase to calculate performance values at future times and/or corresponding performance value changes.</p><p id="p-0101" num="0100">At block <b>826</b>, the predicted performance values may be compared to performance thresholds. For example, the performance predictor may compare one or more predicted performance values to one or more performance thresholds.</p><p id="p-0102" num="0101">At block <b>828</b>, a notification event may be determined. For example, the performance predictor may determine, based on the comparison of the predicted performance values and the performance thresholds that one or more threshold have been crossed, generating a notification event.</p><p id="p-0103" num="0102">At block <b>830</b>, a notification value may be stored. For example, the performance predictor may store a notification value to a notification register or log accessible to the host device.</p><p id="p-0104" num="0103">At block <b>832</b>, one or more performance change indicator values may be determined. For example, the performance predictor may determine binary, severity, and/or probability performance change indicators that communicate the predicted performance change event and related parameters.</p><p id="p-0105" num="0104">At block <b>834</b>, the performance change indicator values may be stored or sent to the host device. For example, the performance predictor may store the performance change indicator values in a host-accessible performance interface location and/or send a message including the performance change indicator values to the host device through the storage interface.</p><p id="p-0106" num="0105">At block <b>840</b>, host severity thresholds may be received from the host device. For example, the storage device may receive host-configured severity threshold values through the host interface.</p><p id="p-0107" num="0106">At block <b>842</b>, the severity thresholds to be used for the performance prediction may be determined. For example, the host-configured severity threshold values may be set as the severity thresholds for the next performance prediction calculated and used at block <b>828</b>.</p><p id="p-0108" num="0107">At block <b>844</b>, severity values may be determined. For example, the performance predictor may determine severity values based on the severity threshold or thresholds crossed.</p><p id="p-0109" num="0108">At block <b>846</b>, the severity thresholds may be reported to the host device. For example, the severity values may be reported with predicted performance change indicators at blocks <b>832</b> and <b>834</b>.</p><p id="p-0110" num="0109">At block <b>850</b>, prediction probability values may be determined. For example, the performance predictor may calculate prediction probability values alongside the predicted performance values in the performance model.</p><p id="p-0111" num="0110">At block <b>852</b>, the prediction probability values may be reported to the host device. For example, the prediction probability values may be reported with predicted performance change indicators at blocks <b>832</b> and <b>834</b>.</p><p id="p-0112" num="0111">At block <b>860</b>, host monitoring interval values may be received from the host device. For example, the storage device may receive host-configured monitoring interval values through the host interface.</p><p id="p-0113" num="0112">At block <b>862</b>, monitoring intervals to be used for determining how frequently indicator values are reported may be determined. For example, the host-configured monitoring intervals may be set as the monitoring intervals for the next performance prediction calculated and used to determine when other calculations are initiated and/or when values are stored or sent at block <b>834</b>.</p><p id="p-0114" num="0113">While at least one exemplary embodiment has been presented in the foregoing detailed description of the technology, it should be appreciated that a vast number of variations may exist. It should also be appreciated that an exemplary embodiment or exemplary embodiments are examples, and are not intended to limit the scope, applicability, or configuration of the technology in any way. Rather, the foregoing detailed description will provide those skilled in the art with a convenient road map for implementing an exemplary embodiment of the technology, it being understood that various modifications may be made in a function and/or arrangement of elements described in an exemplary embodiment without departing from the scope of the technology, as set forth in the appended claims and their legal equivalents.</p><p id="p-0115" num="0114">As will be appreciated by one of ordinary skill in the art, various aspects of the present technology may be embodied as a system, method, or computer program product. Accordingly, some aspects of the present technology may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.), or a combination of hardware and software aspects that may all generally be referred to herein as a circuit, module, system, and/or network. Furthermore, various aspects of the present technology may take the form of a computer program product embodied in one or more computer-readable mediums including computer-readable program code embodied thereon.</p><p id="p-0116" num="0115">Any combination of one or more computer-readable mediums may be utilized. A computer-readable medium may be a computer-readable signal medium or a physical computer-readable storage medium. A physical computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, crystal, polymer, electromagnetic, infrared, or semiconductor system, apparatus, or device, etc., or any suitable combination of the foregoing. Non-limiting examples of a physical computer-readable storage medium may include, but are not limited to, an electrical connection including one or more wires, a portable computer diskette, a hard disk, random access memory (RAM), read-only memory (ROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), a Flash memory, an optical fiber, a compact disk read-only memory (CD-ROM), an optical processor, a magnetic processor, etc., or any suitable combination of the foregoing. In the context of this document, a computer-readable storage medium may be any tangible medium that can contain or store a program or data for use by or in connection with an instruction execution system, apparatus, and/or device.</p><p id="p-0117" num="0116">Computer code embodied on a computer-readable medium may be transmitted using any appropriate medium, including but not limited to, wireless, wired, optical fiber cable, radio frequency (RF), etc., or any suitable combination of the foregoing. Computer code for carrying out operations for aspects of the present technology may be written in any static language, such as the C programming language or other similar programming language. The computer code may execute entirely on a user's computing device, partly on a user's computing device, as a stand-alone software package, partly on a user's computing device and partly on a remote computing device, or entirely on the remote computing device or a server. In the latter scenario, a remote computing device may be connected to a user's computing device through any type of network, or communication system, including, but not limited to, a local area network (LAN) or a wide area network (WAN), Converged Network, or the connection may be made to an external computer (e.g., through the Internet using an Internet Service Provider).</p><p id="p-0118" num="0117">Various aspects of the present technology may be described above with reference to flowchart illustrations and/or block diagrams of methods, apparatus, systems, and computer program products. It will be understood that each block of a flowchart illustration and/or a block diagram, and combinations of blocks in a flowchart illustration and/or block diagram, can be implemented by computer program instructions. These computer program instructions may be provided to a processing device (processor) of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which can execute via the processing device or other programmable data processing apparatus, create means for implementing the operations/acts specified in a flowchart and/or block(s) of a block diagram.</p><p id="p-0119" num="0118">Some computer program instructions may also be stored in a computer-readable medium that can direct a computer, other programmable data processing apparatus, or other device(s) to operate in a particular manner, such that the instructions stored in a computer-readable medium to produce an article of manufacture including instructions that implement the operation/act specified in a flowchart and/or block(s) of a block diagram. Some computer program instructions may also be loaded onto a computing device, other programmable data processing apparatus, or other device(s) to cause a series of operational steps to be performed on the computing device, other programmable apparatus or other device(s) to produce a computer-implemented process such that the instructions executed by the computer or other programmable apparatus provide one or more processes for implementing the operation(s)/act(s) specified in a flowchart and/or block(s) of a block diagram.</p><p id="p-0120" num="0119">A flowchart and/or block diagram in the above figures may illustrate an architecture, functionality, and/or operation of possible implementations of apparatus, systems, methods, and/or computer program products according to various aspects of the present technology. In this regard, a block in a flowchart or block diagram may represent a module, segment, or portion of code, which may comprise one or more executable instructions for implementing one or more specified logical functions. It should also be noted that, in some alternative aspects, some functions noted in a block may occur out of an order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or blocks may at times be executed in a reverse order, depending upon the operations involved. It will also be noted that a block of a block diagram and/or flowchart illustration or a combination of blocks in a block diagram and/or flowchart illustration, can be implemented by special purpose hardware-based systems that may perform one or more specified operations or acts, or combinations of special purpose hardware and computer instructions.</p><p id="p-0121" num="0120">While one or more aspects of the present technology have been illustrated and discussed in detail, one of ordinary skill in the art will appreciate that modifications and/or adaptations to the various aspects may be made without departing from the scope of the present technology, as set forth in the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system comprising:<claim-text>a host device comprising:<claim-text>a host processor;</claim-text><claim-text>a host memory:</claim-text><claim-text>a storage interface configured to communicate with a host interface of a data storage device;</claim-text><claim-text>a user interface display; and</claim-text><claim-text>a storage manager configured to:<claim-text>send storage operations to the data storage device according to a defined host access pattern and a storage performance requirement;</claim-text><claim-text>receive, from the data storage device, notification of a predicted change in a performance value; and</claim-text><claim-text>display, to a user of the host device and through the user interface display, a warning notification indicating the predicted change in the performance value.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the performance value is selected from:<claim-text>an input/output operations per unit time value;</claim-text><claim-text>a data volume per unit time value; and</claim-text><claim-text>a nominal performance value for the data storage device;</claim-text></claim-text><claim-text>the storage manager is further configured to:<claim-text>determine a performance threshold for the performance value; and</claim-text><claim-text>send the performance threshold to the data storage device; and</claim-text></claim-text><claim-text>receiving notification of the predicted change in the performance value is responsive to the data storage device determining that the predicted change in the performance value crosses the performance threshold.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the storage manager is further configured to:<claim-text>determine a host performance window value; and</claim-text><claim-text>send, to the data storage device, the host performance window value; and</claim-text></claim-text><claim-text>receiving notification of the predicted change in the performance value is responsive to the data storage device determining an increase in maintenance operations over the host performance window.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the storage manager is further configured to:<claim-text>determine a host prediction horizon value; and</claim-text><claim-text>send, to the data storage device, a host prediction horizon value; and</claim-text></claim-text><claim-text>receiving notification of the predicted change in the performance value is responsive to the data storage device determining an increase in maintenance operations at a future time corresponding to the host prediction horizon value.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the storage manager is further configured to determine a plurality of severity thresholds;</claim-text><claim-text>receiving notification of the predicted change in the performance value includes receiving a severity value for the predicted change; and</claim-text><claim-text>the severity value for the predicted change corresponds to at least one severity threshold of the plurality of severity thresholds.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>receiving notification of the predicted change in the performance value includes receiving a prediction probability value for the predicted change in the performance value; and</claim-text><claim-text>displaying the warning notification indicating the predicted change in the performance value includes displaying the prediction probability value.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the host interface of the data storage device includes a notification register; and</claim-text><claim-text>the storage manager is further configured to:<claim-text>periodically check the notification register; and</claim-text><claim-text>receive, from the data storage device and responsive to checking the notification register, notification of the predicted change in the performance value.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the host interface of the data storage device includes an interface function register comprising a plurality of memory locations; and</claim-text><claim-text>receiving notification of the predicted change in the performance value includes reading at least one performance change indicator value in an indicator memory location of the plurality of memory locations in the interface function register.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a data storage device comprising:<claim-text>the host interface;</claim-text><claim-text>a storage medium configured to store host data; and</claim-text><claim-text>a storage device controller comprising processing resources and configured to:<claim-text>process, using the storage medium and the processing resources, storage operations from the host device;</claim-text><claim-text>process, using the storage medium and the processing resources, maintenance operations for increasing storage availability in the storage medium;</claim-text><claim-text>determine the performance value for the storage operations;</claim-text><claim-text>predict an increase in maintenance operations;</claim-text><claim-text>predict, based on the predicted increase in maintenance operations, the predicted change in the performance value; and</claim-text><claim-text>notify, through the host interface, the host device of the predicted change in the performance value.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:<claim-text>the data storage device comprises a removable storage device configured to be removably attached to the host device;</claim-text><claim-text>the host device is configured to initialize the data storage device;</claim-text><claim-text>the storage manager is further configured to:<claim-text>establish, responsive to initializing the data storage device, a performance interface with the data storage device; and</claim-text><claim-text>set, through the performance interface, at least one performance monitoring parameter selected from:<claim-text>a performance value type;</claim-text><claim-text>a host performance threshold value;</claim-text><claim-text>a host performance window value;</claim-text><claim-text>a host prediction horizon value;</claim-text><claim-text>a notification type; and</claim-text><claim-text>a reporting interval;</claim-text></claim-text></claim-text><claim-text>the storage device controller is further configured to:<claim-text>determine, responsive to the data storage device being initialized and based on a plurality of storage operations from the host, the defined host access pattern; and</claim-text><claim-text>predict the increase in maintenance operations based on the defined host access pattern continuing through a performance window; and</claim-text></claim-text><claim-text>the maintenance operations for increasing storage availability include garbage collection of flash memory data blocks.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A computer-implemented method, comprising:<claim-text>sending, from a host device, storage operations to a host interface of a data storage device according to a defined host access pattern and a storage performance requirement;</claim-text><claim-text>receiving, by the host device and from the data storage device, notification of a predicted change in a performance value; and</claim-text><claim-text>displaying, to a user of the host device and through a user interface display of the host device, a warning notification indicating the predicted change in the performance value.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>determining, by the host device, a performance threshold for the performance value;</claim-text><claim-text>sending, by the host device, the performance threshold to the data storage device; and</claim-text><claim-text>determining, by the data storage device, that the predicted change in the performance value crosses the performance threshold, wherein receiving notification of the predicted change in the performance value is responsive to the data storage device determining that the predicted change in the performance value crosses the performance threshold.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>sending, by the host device, a host performance window value;</claim-text><claim-text>determining, by the data storage device and based on the host performance window value, a performance window; and</claim-text><claim-text>predicting, by the data storage device, an increase in maintenance operations over the performance window, wherein the predicted change in the performance value is based on the increase in maintenance operations.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>sending, by the host device, a host prediction horizon value;</claim-text><claim-text>determining, by the data storage device and based on the host prediction horizon value, a prediction horizon; and</claim-text><claim-text>predicting, by the data storage device, an increase in maintenance operations at a future time corresponding to the prediction horizon, wherein the predicted change in the performance value is based on the increase in maintenance operations.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>determining, by the host device, a plurality of severity thresholds; and</claim-text><claim-text>determining, by the data storage device and based on the predicted change in the performance value, a severity value for the predicted change, wherein:<claim-text>receiving the notification of the predicted change in the performance value includes the severity value for the predicted change; and</claim-text></claim-text><claim-text>the severity value for the predicted change corresponds to at least one severity threshold of the plurality of severity thresholds.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>determining, by the data storage device, a prediction probability value for the predicted change in the performance value, wherein receiving the notification of the predicted change in performance value includes the prediction probability value; and</claim-text><claim-text>displaying, by the host device and through the user interface display of the host device, the prediction probability value for the predicted change.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>storing, by the data storage device, a notification value in a notification register of the host interface; and</claim-text><claim-text>periodically checking, by the host device, the notification register, wherein receiving notification of the predicted change in the performance value is responsive to checking the notification register.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>storing, by the data storage device and responsive to the predicted change in the performance value, at least one performance change indicator value in an indicator memory location, wherein:<claim-text>the indicator memory location is in an interface function register in the host interface; and</claim-text><claim-text>receiving notification of the predicted change in the performance value includes reading, by the host device, the at least one performance change indicator value from the indicator memory location.</claim-text></claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>processing, by the data storage device, the storage operations from the host device;</claim-text><claim-text>processing, by the data storage device, maintenance operations for increasing storage availability in a storage medium of the data storage device;</claim-text><claim-text>determining, by the data storage device, the performance value for the storage operations;</claim-text><claim-text>predicting, by the data storage device, an increase in maintenance operations;</claim-text><claim-text>predicting, by the data storage device and based on the predicted increase in maintenance operations, the predicted change in the performance value; and</claim-text><claim-text>notifying, by the data storage device and through the host interface, the host device of the predicted change in the performance value.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A host device, comprising:<claim-text>a host processor;</claim-text><claim-text>a host memory:</claim-text><claim-text>a storage interface configured to communicate with a host interface of a data storage device;</claim-text><claim-text>a user interface display;</claim-text><claim-text>means for sending storage operations to the host interface of the data storage device according to a defined host access pattern and a storage performance requirement;</claim-text><claim-text>means for receiving, from the data storage device, notification of a predicted change in a performance value; and</claim-text><claim-text>means for displaying, to a user of the host device and through the user interface display of the host device, a warning notification indicating the predicted change in the performance value.</claim-text></claim-text></claim></claims></us-patent-application>