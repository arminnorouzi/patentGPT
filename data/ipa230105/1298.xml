<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230001299A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230001299</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17902527</doc-number><date>20220902</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2020-038453</doc-number><date>20200306</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>5375</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>533</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>58</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>847</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>822</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>5375</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>533</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>58</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>847</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>822</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">PROGRAM, SERVER, METHOD, AND SYSTEM FOR INCREASING PREDICTABILITY OF ENEMY NEXT ACTION</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/JP2021/008737</doc-number><date>20210305</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17902527</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>CYGAMES, INC.</orgname><address><city>Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Ueda</last-name><first-name>Keita</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Hasegawa</last-name><first-name>Tatsuya</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Akashio</last-name><first-name>Makoto</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>CYGAMES, INC.</orgname><role>03</role><address><city>Tokyo</city><country>JP</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Provided is a program for a game where a plurality of players battle against a common enemy character, the program causing a computer to execute: storing an enemy common parameter in a storage device commonly to a plurality of items of player identification information; storing enemy next-action information so as to be individually associated with each of the items of the player identification information; executing an action of a player character based on an accepted command input; updating the enemy common parameter on the basis of the action of the player character; executing an action of the enemy character based on. the enemy next-action information that is stored in association with the player identification information; deciding as enemy next action on the basis of the enemy common parameter; and updating the enemy next-action information that is associated with the player identifier, based on the decided enemy next action.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="215.65mm" wi="158.75mm" file="US20230001299A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="203.45mm" wi="169.50mm" file="US20230001299A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="248.92mm" wi="162.73mm" file="US20230001299A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="228.43mm" wi="143.85mm" file="US20230001299A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="250.78mm" wi="161.37mm" file="US20230001299A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="236.05mm" wi="165.35mm" file="US20230001299A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="228.94mm" wi="165.35mm" file="US20230001299A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="228.94mm" wi="165.35mm" file="US20230001299A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="228.94mm" wi="165.35mm" file="US20230001299A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates to a program etc. and relates to a program etc. for improving the predictability of the next action of as enemy character.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">With the spread of online games etc. in recent years, games in which a plurality of players battle against a common enemy character have been released. In such games, there is a known system in which the frequency and the attacking power of an attack by an enemy character on a character of a user are increased in accordance with a period of time during which an operation input of the user is not performed (Patent Literature 1).</p><heading id="h-0003" level="1">CITATION LIST</heading><heading id="h-0004" level="1">Patent Literature</heading><heading id="h-0005" level="2">{PTL 1} Publication of Japanese Patent No. 6577528</heading><heading id="h-0006" level="1">SUMMARY OF INVENTION</heading><heading id="h-0007" level="1">Technical Problem</heading><p id="p-0004" num="0003">However, in the case where the attacking power and an action of the enemy character are not decided until an operation input of a plater is performed, even though an action of a player character is strategically considered prior to the operation input of the player, and an attack against the enemy character is performed, an unexpected attack by the enemy character is received in some cases. In such cases, the appeal of making a strategy for an action of the player character is reduced, whereby interest in the game might be lost.</p><p id="p-0005" num="0004">The present invention has been made in order to solve the above-described problem, and a main object thereof is to provide a program etc. capable of improving the predictability of the next action of an enemy character.</p><heading id="h-0008" level="1">Solution to Problem</heading><p id="p-0006" num="0005">In order to solve the above-described object, according to an embodiment, the present invention provides a program for a game in which a plurality of players battle against a common enemy character, the program causing a computer to execute: a step for storing an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information, in a storage device; a step for storing enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character, in the storage device so as to be individually associated with each of the items of the player identification information; a step for accepting a command input performed by each one of the players; a step for executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input; a step for updating the enemy common parameter, which is stored in the storage device, on the basis of the executed action of the player character; a step for executing an action of the enemy character on the basis of the enemy next-action information that is stored in the storage device in association with the player identification information; a step for deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and a step for updating the enemy next-action information that is associated with the player identification information in the storage device, on the basis of the decided enemy next action.</p><p id="p-0007" num="0006">Furthermore, it is also possible that a player terminal of each of the players is connected to the computer, and it is also possible to cause the computer to further execute, after executing the step for deciding the enemy next-action information, a step for sending notice information for the decided enemy next action to the player terminal.</p><p id="p-0008" num="0007">It is also possible that: the type of an action of the enemy character includes a first enemy-action type and a second enemy-action type; and the step for sending notice information is executed in the case where the type of an enemy next action is the second enemy-action type.</p><p id="p-0009" num="0008">Furthermore, it is also possible that the type of an action of a player character includes a first player-action type and a second player action type, and it is also possible to cause the computer to execute, in the case where the action executed in the step for executing an action of a player character is an action of the second player-action type, the step for deciding an enemy next action and the step for updating the enemy next-action information, without executing an action of the enemy character.</p><p id="p-0010" num="0009">Furthermore, it is also possible to cause the computer to further execute a step for storing enemy individual parameters that are parameters of the enemy character different for each of the items of the player identification information, in the storage device in association with each of the items of the player identification information, and it is also possible that the step for deciding an enemy next action includes a step for deciding an enemy next action with respect to each of the items of the player identification information, on the basis of the enemy common parameter and the enemy individual parameters that are stored in association with this player identification information.</p><p id="p-0011" num="0010">It is also possible that the enemy next-action information includes an action name and an action target.</p><p id="p-0012" num="0011">It is also possible that the enemy next-action information, which is associated with each of the items of the player identification information, includes a suspension condition for suspending the enemy next acton, and it is also possible to cause the computer to further execute: a step for judging whether the suspension condition, which is included in the enemy next-action information, has been satisfied; and a step for updating the enemy next-action information of which the suspension condition is judged to have been satisfied, to enemy next-action information indicating another enemy next action.</p><p id="p-0013" num="0012">It is also possible to cause the computer to further execute a step for sending suspension information for notifying the corresponding player that the enemy next action has been changed, to the corresponding player terminal.</p><p id="p-0014" num="0013">According to another embodiment, the present invention provides a server for a game in which a plurality of players battle against a common enemy character, the server storing an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information, in a storage device; storing enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character, in the storage device so as to be individually associated with each of the items of the player identification information; accepting a command input performed by each one of the players; executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input; updating the enemy common parameter, which is stored in the storage device, on the basis of the executed action of the player character; executing an action of the enemy character on the basis of the enemy next-action information that is stored in the storage device in association with the player identification information; deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and updating the enemy next-action information that is associated with the player identification information of the player in the storage device, on the basis of the decided enemy next action.</p><p id="p-0015" num="0014">According to still another embodiment, the present invention provides a method for a game in which a plurality of players battle against a common enemy character, the method in which a computer executes: a step for storing an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information, in a storage device; a step for storing enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character, in the storage device so as to be individually associated with each of the items of the player identification information; a step for accepting a command input performed by each one of the players; a step for executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input; a step for updating the enemy common parameter, which is stored in the storage device, on the basis of the executed action of the player character; a step for executing an action of the enemy character on the basis of the enemy next-action information that is stored in the storage device in association with the player identification information; a step for deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and a step for updating the enemy next action information that is associated with the player identification information in the storage device, on the basis of the decided enemy next action.</p><p id="p-0016" num="0015">According to still another embodiment, the present invention provides a system for a game in which a plurality of players battle against a common enemy character, the system comprising a server and a player terminal of each of the players that is connected to the server, the server storing an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information, in a storage device; storing enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character, in the storage device so as to be individually associated with each of the items of the player identification information; accepting a command input performed by each one of the players; executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input; updating the enemy common parameter, which is stored in the storage device, on the basis of the executed action of the player character; executing an action of the enemy character on the basis of the enemy next-action information that is stored in the storage device in association with the player identification information; deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and updating the enemy next-action information that is associated with the player identification information in the storage device, on the basis of the decided enemy next action, and the player terminal accepting a command input performed by the corresponding player and sending the command input to the server.</p><heading id="h-0009" level="1">Advantageous Effects of invention</heading><p id="p-0017" num="0016">According to the present invention, it is possible to improve the predictability of the next action of an enemy character.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0010" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a view showing the configuration of a system according to one embodiment of the present invention.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram showing the hardware configuration of the system according to the embodiment of the present invention.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a functional block diagram of the system according to the embodiment of the present invention.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart showing information processing according to the embodiment of the present invention.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an example of a game screen according to the embodiment of the present invention.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an example of the game screen according to the embodiment of the present invention.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows an example of the game screen according. to the embodiment of the present invention.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows an example of the game screen according to the embodiment of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0011" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0026" num="0025">A game system <b>1</b> according to an embodiment of the present invention will be described below with reference to the accompanying drawings. In this specification, for convenience of description, there are cases where descriptions that are more detailed than necessary are omitted. For example, there are cases where detailed descriptions of matters that are already well known and repeated descriptions of substantially the same configurations are omitted.</p><p id="p-0027" num="0026">It is assumed that the game system <b>1</b> is realized by a system in which a plurality of player terminals are connected to a server via a network. <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example of the overall configuration of the game system <b>1</b> according to the embodiment of the present invention. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the game system <b>1</b> includes a plurality of player terminals <b>10</b> and a server <b>20</b>, and the player terminals <b>10</b> and the server <b>20</b> are connected to a network <b>2</b> such as the Internet, thus being allowed to communicate with each other. Note that a description will be given of an example case in which the game system <b>1</b> of this embodiment is assumed to be a server/client system.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram showing the hardware configurations of each of the player terminals <b>10</b> and the server <b>20</b> of the embodiment of the present invention. The player terminal <b>10</b> includes a processor <b>11</b>, a display device <b>12</b>, an input device <b>13</b>, a storage device <b>14</b>, and a communication device <b>15</b>. These individual constituent devices are connected by a bus <b>16</b>. Note that it is assumed that interfaces are interposed as needed between the bus <b>16</b> and the individual constituent devices. In this embodiment, the player terminal <b>10</b> is a smartphone. Alternatively, the player terminal <b>10</b> can be an electronic device, such as a tablet computer, a personal computer, or a game device, as long as the electronic device includes the configuration described above.</p><p id="p-0029" num="0028">Similarly, the server <b>20</b> includes a processor <b>21</b>, a display device <b>22</b>, an input device <b>23</b>, a storage device <b>24</b>, and a communication device <b>25</b>. These individual constituent devices are connected by a bus <b>26</b>. Note that it is assumed that interfaces are interposed as needed between the bus <b>26</b> and the individual constituent devices. In this embodiment, the server <b>20</b> is realized by a computer.</p><p id="p-0030" num="0029">The processors <b>11</b> and <b>21</b> control the overall operations at the electronic device <b>10</b> and the server <b>20</b>, respectively, and are, for example, CPUs. Note that electronic circuits such as MPUs may also be used as the processors <b>11</b> and <b>21</b>. The processors <b>11</b> and <b>21</b> execute various kinds of processing by loading and executing programs and data stored in the storage devices <b>14</b> and <b>24</b>, respectively. In one example, the processors <b>11</b> and <b>21</b> are each configured of a plurality of processors.</p><p id="p-0031" num="0030">The display, devices (displays) <b>12</b> and <b>22</b> display application screens etc. to a user (player) of the electronic device <b>10</b> and a user (administrator) of the server <b>20</b>, under the control of the processors <b>11</b> and <b>21</b>, respectively. The display devices <b>12</b> and <b>22</b> are preferably liquid crystal displays or may be displays using organic EL, plasma displays, or the like.</p><p id="p-0032" num="0031">The input devices <b>13</b> and <b>23</b> are user interfaces for accepting inputs from the users to the electronic device <b>10</b> and the server <b>20</b>, respectively, and are, for example, touchscreens, touchpads, keyboards, or mouses. In this embodiment, since the electronic device <b>10</b> is a smartphone, the electronic device <b>10</b> includes a touchscreen as the input device <b>13</b>, and the touchscreen also functions as the display device <b>12</b>, whereby the display device <b>12</b> and the input device <b>13</b> have an integrated structure. The display device <b>12</b> and the input device <b>13</b> may have separate forms disposed at different positions. Since the server <b>20</b> is a computer, it is assumed that the server <b>20</b> includes a keyboard and a mouse as the input device and includes a liquid crystal display as the display device.</p><p id="p-0033" num="0032">The storage devices <b>14</b> and <b>24</b> are storage devices included in general smartphones and computers, such as magnetic storage devices and storage devices that use RAMs, which are volatile memories, and flash memories, which are non-volatile memories, such as eMMCs, UFSs, or SSDs. The storage devices <b>14</b> and <b>24</b> may also include external memories. For example, the storage device <b>14</b> stores a browser program and a game program, and the storage device <b>24</b> stores a game program for the server. The browser program and the game program are activated in response to operations by the user on the player terminal <b>10</b> and are executed on an operating system (OS) installed in the player terminal <b>10</b> in advance. The game program for the server includes various kinds of data and functions for performing information processing so as to appropriately proceed with a game on the browser program and the game program executed at each of the player terminals, which serve as clients.</p><p id="p-0034" num="0033">In one example, the storage devices <b>14</b> and <b>24</b> include main storage devices and auxiliary storage devices. The main storage devices are volatile storage media that allow high-speed reading and writing of information and are used as storage areas and work areas when the processors <b>11</b> and <b>21</b> process information. The auxiliary storage devices store various programs and data used by the processors <b>11</b> and <b>21</b> when the individual programs are executed. The auxiliary storage devices are, for example, hard disk devices; however, the auxiliary storage devices may each be any type of non-volatile storage or non-volatile memory that is capable of storing information, and may be detachable. For example, the auxiliary storage devices each store an operating system (OS), middleware, application programs, various kinds of data that may be referred to when these programs are executed, etc. Furthermore, as the storage devices, it is also possible to use databases that are physically separated from the player terminal <b>10</b> and the server <b>20</b>.</p><p id="p-0035" num="0034">The communication devices <b>15</b> and <b>25</b> send data to and receive data from other devices via the network <b>2</b> (not shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). For example, the communication devices <b>15</b> and <b>25</b> perform wireless communication, such as mobile communication or wireless LAN communication, to connect to the network <b>2</b>. The player terminal <b>10</b> performs communication with the server <b>20</b> via the network by using the communication device <b>15</b>. The communication devices <b>15</b> and <b>25</b> may also perform wired communication using an Ethernet (registered trademark) cable or the like.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows examples of functional block diagrams of the player terminal <b>10</b> and the server <b>20</b> according to the embodiment of the present invention. The player terminal <b>10</b> includes an input unit <b>31</b>, a display unit <b>32</b>, a communication unit <b>33</b>, a game control unit <b>34</b>, and a storage unit <b>35</b>. The server <b>20</b> includes an input unit <b>41</b>, a display unit <b>42</b>, a communication unit <b>43</b>, a game control unit <b>44</b>, and a storage unit <b>45</b>. In this embodiment, these functions are realized when the processors <b>11</b> and <b>21</b> execute programs. For example, the programs to be executed are the browser program and the game programs stored in the storage devices <b>14</b> and <b>24</b>. Since various kinds of functions are realized by loading the programs, as described above, a portion or the entirety of one part (function) may be provided in another part. Alternatively, these functions may be realized by means of hardware by configuring electronic circuits or the like for realizing the individual functions in part or in their entirety.</p><p id="p-0037" num="0036">The input units <b>31</b> and <b>41</b> are configured by using the input devices <b>13</b> and <b>23</b>, respectively, and accept inputs from the users to the player terminal <b>10</b> and the server <b>20</b>. The player terminal <b>10</b> and the server <b>20</b> accept user inputs by means of the input units <b>31</b> and <b>41</b>, respectively. The user inputs may include, for example, command inputs indicating commands from the player in the game. In this embodiment, a touch detection function that is generally provided in the smartphone, which has the touchscreen, can be used at the player terminal <b>10</b>.</p><p id="p-0038" num="0037">The display unit <b>32</b> of the player terminal <b>10</b> displays game screens by using the display device <b>12</b> and displays game screens in accordance with the proceeding of the game and user operations. The display unit <b>42</b> of the server <b>20</b> displays, on the display device <b>22</b>, management screens for the panic administrator as needed.</p><p id="p-0039" num="0038">The game control units <b>34</b> and <b>44</b> store, in the storage units <b>35</b> and <b>45</b>, various: kinds of data needed for control processing and processing that are performed when the game of this embodiment is executed. In this embodiment, the game control unit <b>34</b> of the player terminal <b>10</b> is realized by using the browser program, and performs processing on input/output information for the user, processing on sent/received signals for the server <b>20</b>, and the like. The game control unit <b>34</b> may also be realized by installing the game application in the player terminal <b>10</b>.</p><p id="p-0040" num="0039">The game control unit <b>44</b> of the server <b>20</b> is realized when the game program for the server is executed, and performs processing for the game executed at the player terminal <b>10</b>. In one example, when the browser is activated at the player terminal <b>10</b>, the game control unit <b>34</b> is realized, and the server <b>20</b> is accessed in order to proceed with the game, the game control unit <b>44</b> sends data thereto and receives data therefrom regularly or as needed, to proceed with the game. For example, the game control unit <b>44</b> stores, in the storage unit <b>45</b>, various kinds of data etc. needed for control processing when the game of this embodiment is executed, and appropriately provides the data etc. to the player terminal <b>10</b>. The various kinds of data include: an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information; enemy individual parameters that are stored in association with each player; and the like. The enemy individual parameters can include enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character. The enemy next-action information may include information about an action(s) planned to be executed after the next action by the enemy.</p><p id="p-0041" num="0040">The game control unit <b>44</b> executes an action of a player character on the basis of a command input received via the communication unit <b>43</b>, updates the enemy common parameter, which is stored in the storage unit <b>45</b>, on the basis of the executed action of the player character, executes, with respect to the player, an action of the enemy character on the basis of the enemy next-action information that is stored in the storage unit in association with the player identification information of the player, decides, after the execution of the action of the enemy character, an enemy next action with respect to the player on the basis of the enemy common parameter, which is stored in the storage unit <b>45</b>, and updates the enemy next-action information, in the storage unit <b>45</b>, associated with the player identifier of the player, on the basis of the decided enemy next action.</p><p id="p-0042" num="0041">The storage units <b>35</b> and <b>45</b> are configured by using the storage devices <b>14</b> and <b>24</b>, respectively. In the storage unit <b>45</b> of the server <b>20</b>, the enemy common parameter, which is an enemy-character parameter common to the plurality of items of player identification information, is stored commonly to the plurality of items of player identification information, the enemy next-action information indicating the enemy next action, which is an action planned to be executed next by the enemy character, is stored so as to be individually associated with the player identification information of each player, and the enemy individual parameters are stored in association with the player identification information of each player. The storage unit <b>35</b> of the player terminal <b>10</b> is used to store information, for the player terminal <b>10</b>, received from the server <b>20</b>.</p><p id="p-0043" num="0042">In this embodiment, a battle parameter table for a battle in which a plurality of players battle against a common enemy character is stored in the storage unit <b>45</b> of the server <b>20</b>. The battle parameter table can include identification information of the enemy character in the battle, items of player identification information of the players who participate in the battle, an enemy-character parameter that is common to all the items of player identification information, and enemy individual parameters that are individually associated with the items of player identification information and that are different for each of the players. The enemy individual parameters can include enemy next-action information indicating an enemy-character action planned to be executed next. Table 1 shows an example of the battle parameter table.</p><p id="p-0044" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>(Battle Parameter Table)</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="8"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="21pt" align="center"/><colspec colname="4" colwidth="28pt" align="center"/><colspec colname="5" colwidth="35pt" align="center"/><colspec colname="6" colwidth="21pt" align="center"/><colspec colname="7" colwidth="28pt" align="center"/><colspec colname="8" colwidth="28pt" align="center"/><tbody valign="top"><row><entry/><entry/><entry/><entry/><entry>Enemy</entry><entry/><entry/><entry>Enemy</entry></row><row><entry/><entry/><entry/><entry/><entry>next</entry><entry/><entry/><entry>next</entry></row><row><entry>Enemy</entry><entry>Enemy</entry><entry/><entry>Enemy</entry><entry>action</entry><entry/><entry/><entry>action</entry></row><row><entry>ID</entry><entry>HP</entry><entry>PID</entry><entry>CT</entry><entry>ID</entry><entry>PCID</entry><entry>PCHP</entry><entry>target</entry></row><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="8"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="21pt" align="center"/><colspec colname="4" colwidth="28pt" align="center"/><colspec colname="5" colwidth="35pt" align="center"/><colspec colname="6" colwidth="21pt" align="center"/><colspec colname="7" colwidth="28pt" align="char" char="."/><colspec colname="8" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>1</entry><entry>567</entry><entry>755</entry><entry>3</entry><entry>2</entry><entry>39</entry><entry>782</entry><entry>1</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>45</entry><entry>719</entry><entry>1</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>76</entry><entry>15</entry><entry>1</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>91</entry><entry>389</entry><entry>1</entry></row><row><entry/><entry/><entry>332</entry><entry>1</entry><entry>4</entry><entry>55</entry><entry>888</entry><entry>1</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>80</entry><entry>516</entry><entry>0</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>14</entry><entry>472</entry><entry>0</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>22</entry><entry>56</entry><entry>0</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="161pt" align="center"/><tbody valign="top"><row><entry/><entry/><entry>. . .</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0045" num="0043">An enemy ID indicates identification information of the enemy character, an enemy HP indicates the remaining hit points (HP) of the enemy character, and a PID indicates identification information of a player participating in the battle. Since the enemy HP is an enemy-character parameter common to the items of identification information of all players participating in the battle, the enemy HP is stored in association with all PIDs.</p><p id="p-0046" num="0044">The enemy individual parameters, which are individually associated with each of the PIDs, include enemy CT, an enemy next action, and enemy-next-action-target information. Furthermore, individual player parameters for each player include a PCID and a PCHP.</p><p id="p-0047" num="0045">The enemy CT is enemy charge-turn information that is changed in accordance with the proceeding of the game for each player. The enemy CT has an integer value from 0 to a maximum value, and the maximum value can be set in advance for each enemy character. The charge turn is incremented by one when an action of the enemy character is executed, and, when the charge turn is increased up to the maximum value, a special action is executed, whereby the charge turn is returned to 0. Alternatively, it is also possible that the charge turn is changed due to an action of the player character or varies due to the enemy HP. It is obvious to those skilled in the art that the present invention can be implemented even if the enemy CT is not included in a modification. An enemy next-action ID is action identification information indicating an enemy-character action planned to be executed next with respect to the associated PID.</p><p id="p-0048" num="0046">The PCID is identification information of a player character operated by the player and is stored in association with the PID. In this embodiment, although a plurality of PCIDs are associated with one PID such that one player can operate a plurality of player characters, it is also possible that only one PCID is associated with one PID such that one player operates only one player character. In that case, the PCID and the enemy-next-action-target information may also be omitted. The PCHP and the enemy-next-action-target information are associated with the PCID. The PCHP is the remaining HP of the associated player character, and the enemy-next-action target is information indicating whether the associated player character is a target of the enemy next action. It is assumed that the associated player character is a target of the enemy next action when the enemy-next-action-target information is set to &#x201c;1&#x201d;, and is not a target thereof when the enemy-next-action-target information is set to &#x201c;0&#x201d;.</p><p id="p-0049" num="0047">The storage unit <b>45</b> of the server <b>20</b> can further store an enemy parameter table. The enemy parameter table can include information indicating basic parameters, an action type, an action content, etc., of an enemy character. Table 2 shows an example of the enemy parameter table.</p><p id="p-0050" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="266pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>(Enemy Parameter Table)</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="8"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="28pt" align="center"/><colspec colname="4" colwidth="28pt" align="center"/><colspec colname="5" colwidth="28pt" align="center"/><colspec colname="6" colwidth="56pt" align="center"/><colspec colname="7" colwidth="35pt" align="center"/><colspec colname="8" colwidth="35pt" align="center"/><tbody valign="top"><row><entry>Enemy</entry><entry/><entry>Action</entry><entry>Action</entry><entry>Action</entry><entry>Occurrence</entry><entry>Suspension</entry><entry>Action</entry></row><row><entry>ID</entry><entry>Base</entry><entry>ID</entry><entry>type</entry><entry>name</entry><entry>condition</entry><entry>condition</entry><entry>content</entry></row><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row><row><entry>1</entry><entry>90/897/3</entry><entry>1</entry><entry>0</entry><entry>Normal</entry><entry>&#x2014;</entry><entry>&#x2014;</entry><entry>1 attack</entry></row><row><entry/><entry/><entry/><entry/><entry>attack</entry><entry/><entry/><entry/></row><row><entry/><entry/><entry>2</entry><entry>1</entry><entry>Special</entry><entry>50% &#x2265; HP &#x3e; 40%</entry><entry>Attacked</entry><entry>4 R-attacks</entry></row><row><entry/><entry/><entry/><entry/><entry>attack</entry><entry/><entry>&#x3e;4</entry><entry/></row><row><entry/><entry/><entry/><entry/><entry>A</entry><entry/><entry>times</entry><entry/></row><row><entry/><entry/><entry>3</entry><entry>1</entry><entry>Special</entry><entry>Enemy </entry><entry>Enemy </entry><entry>10 </entry></row><row><entry/><entry/><entry/><entry/><entry>attack</entry><entry>CT =</entry><entry>CT &#x2260;</entry><entry>R-attacks,</entry></row><row><entry/><entry/><entry/><entry/><entry>B</entry><entry>Maximum</entry><entry>Maximum</entry><entry>Increase</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry/><entry/><entry>in</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry/><entry/><entry>attacking</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry/><entry/><entry>power</entry></row><row><entry>2</entry><entry>22/678/2</entry><entry>1</entry><entry>0</entry><entry>Normal</entry><entry>90% &#x2265; HP &#x3e; 80%</entry><entry>&#x2014;</entry><entry>1 attack</entry></row><row><entry/><entry/><entry/><entry/><entry>attack</entry><entry/><entry/><entry/></row><row><entry/><entry/><entry>2</entry><entry>1</entry><entry>Special</entry><entry>20% &#x2265; HP &#x3e; 10%</entry><entry>Suspension</entry><entry>1 attack</entry></row><row><entry/><entry/><entry/><entry/><entry>attack</entry><entry/><entry>action</entry><entry>on all</entry></row><row><entry/><entry/><entry/><entry/><entry>G</entry><entry/><entry/><entry/></row><row><entry/><entry/><entry>3</entry><entry>1</entry><entry>Special</entry><entry>&#x2014;</entry><entry>&#x2014;</entry><entry>2 attacks</entry></row><row><entry/><entry/><entry/><entry/><entry>attack</entry><entry/><entry/><entry>on all</entry></row><row><entry/><entry/><entry/><entry/><entry>H</entry></row><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0051" num="0048">It is assumed that an enemy ID is identification information of an enemy character and is stored, here, is association with base parameters, an action ID, an action type, an action name, an occurrence condition, a suspension condition, and an action content. It is assumed that the base parameters indicate basic parameters of an enemy character and include the attacking power, the maximum HP, and the maximum enemy CT. For example, the enemy character of which the enemy ID is 1 has an attacking power of 90, a maximum HP of 897, and a maximum enemy CT of 3.</p><p id="p-0052" num="0049">The action ID is identification information indicating an action that can be executed by each enemy character. It is assumed that the action type indicates the type of an action and includes first and second action types (enemy action types). It is assumed that as action type &#x201c;0&#x201d; means a normal attack, and an action type &#x201c;1&#x201d; means a special attack. The action name, in which a plurality of special attacks may be defined as a special attack, indicates the name of an action.</p><p id="p-0053" num="0050">The occurrence condition means a condition under which the corresponding action occurs. For example, when the enemy ID is &#x201c;1&#x201d;, and the action ID is &#x201c;1&#x201d;, the action type is &#x201c;0&#x201d;, which means the normal attack, and an occurrence condition &#x201c;-&#x201d;indicates that the normal attack can be executed without satisfying a specific occurrence condition. On the other hand, when the action ID thereof is &#x201c;2&#x201d;, the action type is which means a special attack. Then, since the occurrence condition is &#x201c;50%&#x2265;HP&#x3e;40%&#x201d;, it is indicated that the special attack can be executed when the remaining HP of the enemy character satisfies 50%&#x2265;HP&#x3e;40%. The action for which the occurrence condition is set can be executed only once with respect to each player. For example, information indicating that the corresponding action has been executed with respect to each player can be recorded in the battle parameter table.</p><p id="p-0054" num="0051">The suspension condition indicates a condition under which, in the case where the corresponding action is planned as a next action, this action is suspended and is changed to another action. A suspension condition &#x201c;-&#x201d; indicates that the action cannot be suspended, and a suspension condition &#x201c;attacked&#x3e;4 times&#x201d; indicates that execution of the action serving as a next action is cancelled in the case where 4 or more attacks are received from a player character(s) before the next action is executed. In the case where the suspension condition is &#x201c;suspension action&#x201d;, it is indicated that the enemy next action is cancelled when a player character executes the suspension action. In the case where the occurrence condition is &#x201c;enemy CT=maximum&#x201d;, and the suspension condition is &#x201c;enemy CT&#x2260;maximum&#x201d;, this means that the special action is suspended when the enemy CT is changed to be no longer the maximum due to, for example, execution of the ability of a player character. When the enemy next action is cancelled, for example, the next action is changed to the normal action.</p><p id="p-0055" num="0052">The action content indicates the content of an action. For example, &#x201c;4 R-attacks&#x201d; means that a player character serving as an attack target is randomly selected 4 times, and attacks are made on the selected player(s), and &#x201c;2 attacks on all&#x201d; means that two attacks are made on all the player characters of the players.</p><p id="p-0056" num="0053">The storage unit <b>45</b> of the server <b>20</b> can further store a player parameter table. In the player parameter table, player-character identification information is associated with the player identification information. Table 3 shows an example of the player parameter table.</p><p id="p-0057" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 3</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>(Player Parameter Table)</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="42pt" align="left"/><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="147pt" align="center"/><tbody valign="top"><row><entry/><entry>PID</entry><entry>PCID</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="42pt" align="left"/><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="147pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>1</entry><entry>15</entry></row><row><entry/><entry/><entry>12</entry></row><row><entry/><entry/><entry>5</entry></row><row><entry/><entry/><entry>7</entry></row><row><entry/><entry>2</entry><entry>9</entry></row><row><entry/><entry/><entry>12</entry></row><row><entry/><entry/><entry>87</entry></row><row><entry/><entry/><entry>53</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="42pt" align="left"/><colspec colname="1" colwidth="175pt" align="center"/><tbody valign="top"><row><entry/><entry>. . .</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0058" num="0054">Table 3 shows that PCIDs are stored in association with a PID. Here, it is indicated that four PCIDs are stored in association with one PID, whereby one player can operate four player characters. Although each player performs an input, at the player terminal <b>10</b>, to select player characters that the player wishes to operate, thereby making it possible to change the player parameter table, it is also possible that PCIDs are fixedly assigned to a PID in advance.</p><p id="p-0059" num="0055">The storage unit <b>45</b> of the server <b>20</b> can further store a player-character parameter table. The player-character parameter table can include information indicating basic parameters, an action type, an action content, etc. of each player character. Table 4 shows an example of the player-character parameter table.</p><p id="p-0060" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 4</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>(Player-Character Parameter Table)</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="21pt" align="center"/><colspec colname="2" colwidth="42pt" align="center"/><colspec colname="3" colwidth="35pt" align="center"/><colspec colname="4" colwidth="49pt" align="center"/><colspec colname="5" colwidth="56pt" align="left"/><tbody valign="top"><row><entry/><entry/><entry/><entry/><entry>Action</entry><entry>Action</entry></row><row><entry/><entry>PC ID</entry><entry>Base</entry><entry>Action ID</entry><entry>type</entry><entry>content</entry></row><row><entry/><entry namest="offset" nameend="5" align="center" rowsep="1"/></row><row><entry/><entry>1</entry><entry>80/</entry><entry>1</entry><entry>0</entry><entry>1 attack</entry></row><row><entry/><entry/><entry>768</entry><entry>2</entry><entry>1</entry><entry>1 attack on all</entry></row><row><entry/><entry/><entry/><entry>3</entry><entry>1</entry><entry>Increase in</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>attacking power</entry></row><row><entry/><entry/><entry/><entry>4</entry><entry>1</entry><entry>4 R-attacks</entry></row><row><entry/><entry/><entry/><entry>5</entry><entry>1</entry><entry>Suspension</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>action</entry></row><row><entry/><entry>2</entry><entry>33/</entry><entry>1</entry><entry>0</entry><entry>1 attack</entry></row><row><entry/><entry/><entry>462</entry><entry>2</entry><entry>1</entry><entry>HP</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>restoration</entry></row><row><entry/><entry/><entry/><entry>3</entry><entry>1</entry><entry>1 attack on all</entry></row><row><entry/><entry/><entry/><entry>4</entry><entry>1</entry><entry>Increase in</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>attacking power</entry></row><row><entry/><entry/><entry/><entry>5</entry><entry>1</entry><entry>Decrease in</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>enemy</entry></row><row><entry/><entry/><entry/><entry/><entry/><entry>attacking power</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="203pt" align="center"/><tbody valign="top"><row><entry/><entry>. . .</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0061" num="0056">It is assumed that the PCID is identification information of a player character and is stored in association with base parameters, an action ID, an action type, and an action content. It is assumed that the base parameters indicate the basic parameters of a player character and include the attacking power and the maximum HP. For example, the player character of which the PCID is 1 has an attacking power of 80 and a maximum HP of 768. The action ID is identification information indicating an action that can be executed by the player character of each PCID. It is assumed that the action type indicates the type of an action and includes first and second action types (player action types). Here, it is assumed that a normal attack is defined as the first action type (player action type), and a plurality of abilities are defined as the second action type (player action type). It is assumed that an action type &#x201c;0&#x201d; means a normal attack, and an action type &#x201c;1&#x201d; means any of the abilities.</p><p id="p-0062" num="0057">As will be described later, when an action of the first action type is executed, an action of the enemy character is executed next, and, in the case where an action of the second action type is executed, an action of the enemy character will not be executed next, and an action of the player character is further decided and executed by the player. However, an action of the same second action type cannot be executed again until an enemy action is executed a predetermined number of times.</p><p id="p-0063" num="0058">As a normal attack, an attack by each player character is executed. As an ability, it is possible to execute an attack against the enemy character, strengthening of an ally character, weakening of the enemy character, a suspension action for an enemy special action, or the like. For example, when the PCID is &#x201c;1&#x201d;, and the action ID is &#x201c;1&#x201d;, the action type is &#x201c;0&#x201d;, and the action content is &#x201c;1 attack&#x201d;, whereby the action type is the normal attack, and one attack is performed. When the action ID is &#x201c;2&#x201d;, the action type is &#x201c;1&#x201d;, which means an ability, and the action content is &#x201c;one attack on all&#x201d;, which means that, in the case where there are a plurality of enemy characters, one attack is performed on all the enemy characters.</p><p id="p-0064" num="0059">Although a description will be given of a case in which the number of action types of an enemy character and the number of action types of a player character are each 2, the number of action types may also be 3 or more or 1.</p><p id="p-0065" num="0060">Next, information processing executed in the game system <b>1</b> according to the embodiment of the present invention will be described below by using a flowchart shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The game system of this embodiment is a system for a game in which a plurality of players battle against a common enemy character. The player terminals <b>10</b> of the individual players are connected to the server <b>20</b>, and the aim of the game is to defeat the enemy character in cooperation with each other. The plurality of players perform attacks against the common enemy, the side of the players wins when the HP of the common enemy character becomes zero, and the side of the enemy character wins when the HPs of player characters of all the players become zero.</p><p id="p-0066" num="0061">Whereas the HP of the common enemy character is common to all the players who participate in the battle, the enemy individual parameters, such as the enemy next action and the enemy CT, are decided and stored individually for each of the players. The flowchart shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> shows information processing executed between the server <b>20</b> and one of the player terminals <b>10</b>, and similar processing is separately executed in parallel with respect to the player terminals <b>10</b> of all the players who participate in the battle. The processing executed in parallel can be individually executed in association with, for example, the PIDs. Accordingly, each of the players is allowed to proceed with the battle by using the enemy individual parameters, which are different for each of the players, while using the enemy common parameter, which is the enemy HP common to all the players. A player mentioned in relation to the flowchart shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> means the player of the player terminal <b>10</b> that executes the information processing of the flowchart, a PID is the PID of this player, and a player character is a player character that is associated with this PID.</p><p id="p-0067" num="0062">First, any one of the players performs an operation input via the corresponding player terminal <b>10</b> and sends a battle start request to the server <b>20</b> (S<b>401</b>). When the battle start request is received, the server <b>20</b> generates the battle parameter table, which is illustrated in Table 1, on the basis of the player ID (PIP) included in the battle start request and stores the battle parameter table in the storage unit <b>45</b> (S<b>402</b>). It is also possible that a plurality of players make a battle start request in cooperation with each other.</p><p id="p-0068" num="0063">The battle parameter table can be generated with reference to the enemy parameter table (Table 2) and the player parameter table (Table 3) on the basis of the enemy ID, which indicates the battle target selected by the player(s), and the PID (s) of the player(s). For example, it is possible that the initial HPs of the enemy character and the player characters are obtained from Tables 2 and 3 and are set as initial values of the enemy HP and the PCHPs, and an enemy next action is decided on the basis of the initial HP of the enemy character. Here, although a description will be given of an example case where there is one enemy character, even in the case where there are a plurality of enemy characters, the present invention can be implemented by executing similar processing with respect to each of the enemy characters.</p><p id="p-0069" num="0064">A player who is going to participate in the battle that has already been started by another player can participate in the battle by selecting the battle to participate in and making a battle participation request (S<b>401</b>), instead of making a battle start request. In the case where a player has participated in the started battle, information related to the player who has newly participated is added to the battle parameters shown in Table 1. The enemy HP, which is the enemy common parameter, is associated in common with the PIDs of the other players.</p><p id="p-0070" num="0065">In this embodiment, it is assumed that the battle parameter table is common to the players who participate in the battle, and the same parameter table is accessed by the individual player terminals; however, regarding the individual parameters for the players, it is also possible to generate and manage separate tables for the individual players. Regarding the enemy common parameter, it is possible to generate and manage individual tables as long as the tables are designed such that the common value is referred to by the players.</p><p id="p-0071" num="0066">The server <b>20</b> generates battle screen information corresponding to the PID and sends the battle screen information to the player terminal <b>10</b> associated with this PID (S<b>404</b>). Here, it is assumed that screen information including images of the enemy character and the player characters that are associated with this PID is generated. The screen information may also include information about names, icons, etc. of the other players.</p><p id="p-0072" num="0067">When the battle screen information is received, the player terminal <b>10</b> displays a battle screen including a command input button, on the display unit <b>32</b> (S<b>406</b>). Then, the player terminal <b>10</b> awaits a command input from the player, and, when the input unit <b>31</b> accepts a command input from the player, sends the command input to the server <b>20</b> via the communication unit <b>33</b> (S<b>408</b>).</p><p id="p-0073" num="0068"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows as example of the battle screen. The battle screen includes an enemy-character image <b>501</b>, a remaining HP <b>502</b> and enemy CT information <b>503</b> of the enemy character, player-character images <b>511</b> to <b>514</b>, a first-action button <b>521</b>, second-action display command buttons <b>531</b> to <b>534</b>, and defense buttons <b>541</b> to <b>544</b>.</p><p id="p-0074" num="0069">The first action type corresponds to the normal attack, and the first-action button is displayed as the attack button <b>521</b>. When the input unit <b>31</b> of the player terminal <b>10</b> detects a touch on this button by the player, the input unit <b>31</b> accepts the touch as a command input indicating that the player character issues a command to execute the normal attack, and the command input is sent to the server <b>20</b> via the communication unit <b>33</b>.</p><p id="p-0075" num="0070">The second-action display buttons <b>531</b> to <b>534</b> are associated with the individual player characters, and, when the player touches any of the buttons, second-action buttons <b>602</b> to <b>605</b> that indicate act ons of the second action type for a player character <b>601</b> associated with the touched button are displayed as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. The second-action buttons are associated with the individual actions of the second action type, and, when the player touches any of the second-action buttons, a command input for executing the action associated with the touched second-action button is sent to the server <b>20</b>.</p><p id="p-0076" num="0071">Furthermore, it is assumed that, when the player touches the first-action button in a state in which the defense buttons <b>541</b> to <b>544</b>, shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, have been turned on through touches by the player, transition to action processing of the enemy character is made while the player characters corresponding to the individual defense buttons do not execute any actions of the first action type and the second action type, whereas it is possible to take a defensive action for reducing damage caused by an attack by the enemy character.</p><p id="p-0077" num="0072">The server <b>20</b> awaits to receive a command input from the player terminal <b>10</b>, executes action processing of the player character on the basis of the received command input (S<b>410</b>), and updates the enemy common parameter, which is stored in the storage unit <b>45</b>, on the basis of the executed action of the player character (S<b>412</b>).</p><p id="p-0078" num="0073">For example, in the case where the command input is a command for executing an action of the first action type of any of the player characters, the server obtains the attacking power of the player character from the player-character parameter table (Table 4) on the basis of the PCID associated with the PID in the battle parameter table, and obtains the action content of the action ID &#x201c;1&#x201d;, which indicates the first action type. Here, it is assumed that the first action type is&#x201c;one attack&#x201d;. It is also possible that the first action type is set to an action, for example, one attack, common to all the player characters, whereby the first action is decided without referring to the player-character parameter table.</p><p id="p-0079" num="0074">The server executes one attack against the enemy character on the basis of the attacking power of the player character, calculates damage to the enemy character on the basis of the obtained attacking power, and reduces the enemy HP in the battle parameter table. It is assumed that, in the case where the defense button is on, execution of any action is skipped. An animation for expressing the action of the player character, here, the attack against the enemy character, is generated as action executing processing of the player character.</p><p id="p-0080" num="0075">Next, it is judged whether the executed action of the player character was of the second action type (S<b>414</b>). In the case where it is judged that the executed action was not of the second action type, action processing of the enemy character is executed (S<b>416</b>), and the battle parameter is updated on the basis of the executed enemy-character action (S<b>418</b>). The action of the enemy character is executed on the basis of information about the enemy next action stored in the storage unit <b>45</b>.</p><p id="p-0081" num="0076">In this embodiment, it is assumed that an enemy next action that is decided prior to a command input of the player is executed at the time of the enemy next action. This is performed in order to increase the predictability of an action of the enemy character.</p><p id="p-0082" num="0077">In this embodiment, the battle parameter table, which is stored in the storage unit <b>45</b>, includes the enemy next-action ID and the enemy-next-action target, and the action of the enemy character is executed on the basis of these items of information. The server <b>20</b> can obtain the content of an action by referring to the enemy parameter table. For example, when an action of the enemy character, which has the enemy ID &#x201c;1&#x201d;, is executed against the PID &#x201c;755&#x201d;, the server <b>20</b> refers to the enemy parameter table (Table 2) for the action ID &#x201c;2&#x201d; associated with this and obtains the action content. &#x201c;four attacks, R-attacks&#x201d;. Then, on The basis of the enemy-next-action target shown in Table 1, the server <b>20</b> executes attack actions on the player characters (PCIDs &#x201c;39&#x201d;, &#x201c;45&#x201d;, &#x201c;76&#x201d;, and &#x201c;91&#x201d;) that are action targets.</p><p id="p-0083" num="0078">Since the PCIDs &#x201c;39&#x201d;, &#x201c;45&#x201d;, &#x201c;76&#x201d;, and &#x201c;91&#x201d; are attack targets here, the damage to each player character is calculated on the basis of the attacking power of the enemy character, to reduce the PCHPs of the individual player characters. In the case where any of the player characters performs a defensive action, the damage to this player character is reduced at a predetermined rate. It is assumed that, when the enemy-character action is executed, the enemy CT is incremented by one.</p><p id="p-0084" num="0079">An animation for expressing the actions of the enemy character, here, the attacks against the player characters, is generated as action executing processing of the enemy character. Furthermore, in the case where notice information for an enemy next action, to he described later, has been presented, the presentation of the notice information is finished.</p><p id="p-0085" num="0080">In one modification, it is also possible that, in the case where an enemy next action has a predetermined occurrence condition, whether the occurrence condition is satisfied is judged again after execution of a player-character action, and, is the case where the occurrence condition is not satisfied, the enemy next action is changed to another action. For example, it is assumed that a decided enemy next action is a special attack A, and the occurrence condition is &#x201c;50%&#x2265;HP&#x3e;40%&#x201d;. In the case where the occurrence condition was satisfied at the time of decision of the enemy next action, but the enemy HP is reduced to 40% or less after execution of a player-character action due to the attack by the player character and an attack by another player character, the enemy next-action information is changed to the normal attack.</p><p id="p-0086" num="0081">After a powerful special action is decided as an enemy next action, the player acts strategically so as not to satisfy the occurrence condition for the powerful special action, thereby making it possible to avoid that special action. Since the enemy next action is decided once before an action of the player, the player can make a rational prediction including a change of the enemy next action. In the case where notice information is presented, the player can know the planned enemy next action, whereby the player can make a strategy for dealing with the enemy next action. As one strategy, a variation for changing the enemy next action can be given.</p><p id="p-0087" num="0082">It is also possible that rejudgement about the occurrence condition is applied not to all actions of the enemy character but only to certain special actions thereof. For example, this can be realized by adding, to the enemy parameter table, information as to whether rejudgement about the occurrence condition is performed.</p><p id="p-0088" num="0083">Furthermore, is the player-character action executing processing (S<b>410</b>), it is also possible to judge whether the suspension condition, which is included is the enemy next-action information, has been satisfied. In the case where it is judged that the suspension condition has been satisfied, it is possible to update the enemy next-action information to other enemy next-action information so as to change the enemy next action, in the battle-parameter updating processing (S<b>412</b>).</p><p id="p-0089" num="0084">For example, in the case where the enemy next action is a &#x201c;special attack G&#x201d;, and the suspension condition therefor is that a &#x201c;suspension action&#x201d; is executed by the player character, when the &#x201c;suspension action&#x201d; is executed by the player character, the enemy next-action ID is updated to ID &#x201c;1&#x201d;, which indicates the normal action, in order to suspend the enemy next action &#x201c;special attack G&#x201d;. Furthermore, it is also possible to send, to the player terminal <b>10</b>, suspension information indicating that the enemy next action &#x201c;special attack G&#x201d; has been suspended. The player terminal <b>10</b> can present the information indicating that the enemy next action has been changed, by using the display unit <b>32</b>. It is also possible to present the information to the player by outputting audio from an audio output unit (not shown) using a speaker or the like. Furthermore, it is also possible that displaying of the action name that was displayed as information indicating the next action is suspended, thereby indicating that the next action is changed.</p><p id="p-0090" num="0085">The player performs an action so as to satisfy the suspension condition, thereby making it possible to change the enemy next action and to improve the strategy for the game. It is also possible for the player to predict suspension of the enemy next action, which has already been decided at the time of a command input of the player, using the suspension condition predetermined therefor.</p><p id="p-0091" num="0086">In the case where the action of the player character executed in S<b>410</b> was of the second action type, the action of the enemy character is not executed. Here, the enemy-character action executing processing (S<b>416</b>) and the battle-parameter updating processing (S<b>418</b>) are skipped.</p><p id="p-0092" num="0087">The server <b>20</b> generates action screen information that is based on the animations generated in the executed player-character action executing processing and the executed enemy-character player action executing processing and sends the action screen information to the player terminal <b>10</b> (S<b>420</b>). When the action screen information is received, the player terminal <b>10</b> displays, on the display unit <b>32</b>, the animations, which express the actions of the player character etc., on the basis of the action screen information (S<b>422</b>). It as also possible to output audio by using the audio output unit.</p><p id="p-0093" num="0088">The server <b>20</b> judges whether the battle has been terminated (S<b>424</b>). It is judged whether a predetermined battle termination condition has been satisfied, for example, whether the enemy HP has become 0, or whether the HPs of all the player characters have become 0. In the case where it is judged that the battle has been terminated, the server <b>20</b> sends a battle termination notification to the player terminal <b>10</b> (S<b>426</b>), and the server <b>20</b> terminates the battle processing with this player terminal <b>10</b> (S<b>450</b>). The player terminal <b>10</b> judges whether the battle termination notification has been received (S<b>430</b>). In the case where the battle termination notification has been received, the player terminal <b>10</b> displays termination of the battle on the display unit <b>32</b> and terminates the battle processing (S<b>450</b>).</p><p id="p-0094" num="0089">In the case where it is judged that the battle has not been terminated, the server <b>20</b> decides an enemy character action to be executed next, on the basis of the enemy common parameter (S<b>432</b>) and updates the enemy next-action information, which is stored in association with the PID of the player (S<b>434</b>). It is also possible to decide the enemy next action on the basis of the enemy individual parameters, which are parameters of the enemy character and are different for each of the players, in addition to the enemy common parameter. Here, it is assumed that the enemy next action is decided on the basis of the enemy CT, which is one of the individual parameters, in addition to the enemy HP, which is the enemy common parameter.</p><p id="p-0095" num="0090">Here, among actions for which the occurrence conditions are set, the action for which the occurrence condition is satisfied is decided as the enemy next action, and, in the case where there is no action for which the occurrence condition is satisfied, the normal action is executed. For example, in the case where the enemy ID is &#x201c;1&#x201d;, and the enemy HP is 45%, the occurrence condition &#x201c;50%&#x2265;HP&#x3e;40%&#x201d; for the action ID &#x201c;2&#x201d; is satisfied, whereby the corresponding action is decided as the enemy next action, and the enemy next-action information for the PID in the battle parameter table is updated. Furthermore, the PCID that becomes an action target of the enemy next action may also be decided. The flag of the enemy-next-action target for the PCID decided as the action target of the enemy next action is set (to 1), thereby making it possible to update the battle parameter table. The action target can be decided using, for example, a random number.</p><p id="p-0096" num="0091">Next, it is decided whether the decided enemy next action is of the second action type (S<b>436</b>). In the case where the decided enemy next action is of the second action type, information indicating the enemy next action is sent to the player terminal <b>10</b> as notice information (S<b>440</b>). The player terminal <b>10</b> presents the notice information indicating the enemy next action, on the display unit <b>32</b> (S<b>438</b>). It is also possible to present the information to the player by using audio output from the audio output unit. In the case where the decided enemy next action is not of the second action type, notice information is not sent. Then, the player terminal <b>10</b> awaits a next command input from the player, and the server <b>20</b> returns to a step for awaiting to receive a command input from the player terminal <b>10</b>.</p><p id="p-0097" num="0092">The notice information is presented only for the second action type, which is a special attack, thereby making it possible to make the player pay more attention.</p><p id="p-0098" num="0093">In a modification, it is also possible to send notice information for every enemy next action, regardless of the action type of an enemy next action. Furthermore, in another modification, it is also possible that notice information for every enemy next action is not sent to the player terminal <b>10</b>. Since an enemy next action is decided before decision of a player action, the player can predict the enemy next action with high accuracy even in the case where the notice information is not presented.</p><p id="p-0099" num="0094"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows an example of the game screen of the player terminal <b>10</b> displaying notice information. Here, an icon and a name (<b>701</b>) that indicate an enemy next action are displayed as information for noticing the enemy next action, and an additional production is displayed around the enemy character, thereby showing signs of execution of a special action. Furthermore, indicators (<b>711</b> to <b>714</b>) of arrows and squares are additionally displayed in regions showing the player characters, the indicators indicating that those player characters are attack targets. Here, it is indicated that all of the four player characters are attack targets of the special attack A.</p><p id="p-0100" num="0095"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows another example of the game screen. Here, it is indicated that only three player characters that are indicated by indicators (<b>811</b> to <b>813</b>) are attack targets of a special attack C (<b>801</b>). Here, in addition to an enemy next action name, information (<b>802</b>) indicating detailed contents of the enemy next action is displayed in response to a player input for commanding detail display for a special attack. For example, the detail display can be performed when the player touches the enemy next action name (<b>801</b>). Furthermore, in the case where the enemy next action is an action for which the suspension condition has been set, it is also possible to present information indicating that the enemy next action can be suspended or indicating the suspension condition.</p><p id="p-0101" num="0096">An example of the operation of this system using this embodiment will be described below. It is assumed that players A, B, and C battle against an enemy character D. It is assumed that the enemy character executes a special action A when 50%&#x2265;HP&#x3e;40 is satisfied and executes a normal action in the other cases. When the enemy HP is 60%, execution of actions of the enemy character against all the players A, B, and C is finished, and the normal attacks are set as enemy next actions against all the players A, B, and C. Then, the players B and C do not perform a command input, and the player A executes a normal attack, whereby the enemy HP becomes 45%; thus, after the normal attack by the enemy character against the player A, the special action A is set as an enemy next action against the player A, and notice display is performed at the player terminal <b>10</b> of the player A. However, the enemy next actions against the players B and C are still the normal attacks, whereby notice display is not performed at the player terminals <b>10</b> of the players B and C.</p><p id="p-0102" num="0097">After that, the player B executes the normal attack, and the normal attack by the enemy is executed, whereby the enemy HP becomes 44%; then, the special action A is decided as an enemy next action against the player B, and notice display is performed at the player terminal <b>10</b> of the player B. The enemy next action against the player C is still the normal attack, whereby notice display is not performed. Furthermore, the player A executes the next normal attack, whereby the enemy HP becomes 35%. Since the occurrence condition for the special action A is not satisfied, the normal attack is set as an enemy next action against the player A, whereas the special action A is maintained as the enemy next action against the player B. At the player terminal of the player A, the notice display is finished. Then, the player C executes the normal attack, whereby the enemy HP becomes 30%. Since the occurrence condition for the special action A is not satisfied, the normal attack is set as an enemy next action against the player C.</p><p id="p-0103" num="0098">In this way, an enemy next action against each player is decided for the player after an enemy action against the player is executed, and the decided enemy next action against the player is not affected even when an action is executed by another player thereafter. While taking measures against an enemy next action for which notice display is being performed at each player terminal, an action of the player character can be decided.</p><p id="p-0104" num="0099">By using this embodiment, after an action of the enemy character, a next action of the enemy character is decided before the start of standby for a command input with which the player decides a next action of the player character. The enemy action that has been decided with respect to the player is not changed due to the subsequent action(s) of the other player(s). Thus, it is possible to prevent an unexpected action of the enemy character from being executed due to an action etc., of another player, that cannot be known by the player. Therefore, it is possible to improve the predictability of the next action of the enemy character and to make full use of a player-character action that is strategically conceived by the player, whereby the fun of the game can be increased.</p><p id="p-0105" num="0100">In a game in which a plurality of players battle against a common enemy, it is difficult for the player to fully grasp an action of another player. In particular, in a battle in which a number of players participate, the remaining HP of the enemy character are significantly reduced in a short time due to attacks by the other players, in some cases. It is not easy to provide, completely and in real time, such parameter information of the enemy character that varies in a short time. Therefore, it is known that update information related to the parameter of the enemy character is provided to the player in a discrete manner, i.e., in the case where the player performs an operation input, or at fixed time intervals.</p><p id="p-0106" num="0101">For example, in the case where the parameter is updated and displayed every two seconds, even though an action of the player character is decided on the basis of the remaining enemy HP displayed two seconds before, and a command input is performed, the actual remaining HP of the enemy character at that time have already significantly varied, in some cases. If a next action of the enemy character is decided at the timing of a command input on the basis of the varied HP, an unexpected powerful attack by the enemy character is received, whereby the player characters are annihilated, in some cases. One of great attractions of this kind of game is to consider the abilities of player characters in order to avoid powerful attacks by the enemy, to select player characters for performing a battle, and to proceed with the battle while considering the ability execution timings for avoiding attacks. In spite of that, if a powerful attack is received at a timing unexpected from obtained information, the significance of making a strategy is lost, thereby resulting in a loss of appeal of the battle.</p><p id="p-0107" num="0102">As in this embodiment, if a next action of the enemy character is decided before the player decides a next action of the player character, even in the case where information is provided in a discrete manner, the decided enemy next action is not affected by the subsequent change in the enemy-character parameter, which cannot be known by the player, whereby it is possible to effectively use the strategy made by the player and to increase the appeal of the battle.</p><p id="p-0108" num="0103">Furthermore, it is also possible to suspend the enemy next action and to change the enemy next action to another action, by satisfying the suspension condition included in the enemy next-action information. With an action of the player, it is possible to change the enemy next action, thus making it possible to increase the strategy of the game. Furthermore, it is also possible for the player to predict suspension of the enemy next action, which has already been decided at the time of a command input of the player, using the suspension condition predetermined therefor. If the suspension condition is presented to the player as notice information for the enemy next action, the predictability can be further increased.</p><p id="p-0109" num="0104">After an enemy next action is decided, when the enemy next action is executed, it is also possible to judge again whether the occurrence condition is satisfied. After a powerful special action is decided as an enemy next action, the player acts strategically so as not to satisfy the occurrence condition for the powerful special action, thereby making it possible to avoid that special acton. Since the enemy next action is decided once before an action of the player, the player can make a rational prediction including a change of the enemy next action. Then, it is possible to make it fun to make a strategy for changing the planned powerful enemy next action.</p><p id="p-0110" num="0105">Furthermore, as in this embodiment, notice information for an enemy next action is presented to the player, thereby making it possible for the player to make a strategy on the basis of the accurate information. As an enemy character becomes more powerful, a powerful special action occurs frequently, and the action content thereof varies, in some cases. Before a battle is started, a player needs to search a strategy site etc. to collect information to find what kinds of special actions an enemy character executes on what occurrence conditions. The player feels that such effort is troublesome, and this becomes a reason to hesitate to participate in the battle.</p><p id="p-0111" num="0106">As in this embodiment, notice information for an enemy next action is presented during a battle, thereby eliminating such preliminary information gathering and making it possible to easily grasp the enemy next action during the battle. Information about a player character that becomes the action target is also presented, thereby making it possible to select a more appropriate action, such as a defensive action of this player character.</p><p id="p-0112" num="0107">The processing or operation described above can be modified freely as long as no inconsistency arises in the processing or operation, such as an inconsistency, that a certain step utilizes data that may not yet be available in that step. Furthermore, the examples described above are examples for explaining the present invention, and the present invention is not limited to those examples. The present invention can be embodied in various forms as long as there is no departure from the gist thereof.</p><heading id="h-0012" level="1">REFERENCE SIGNS LIST</heading><p id="p-0113" num="0000"><ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0108"><b>1</b> game system</li>    <li id="ul0001-0002" num="0109"><b>2</b> network</li>    <li id="ul0001-0003" num="0110"><b>10</b> player terminal</li>    <li id="ul0001-0004" num="0111"><b>11</b> processor</li>    <li id="ul0001-0005" num="0112"><b>12</b> display device</li>    <li id="ul0001-0006" num="0113"><b>13</b> input device</li>    <li id="ul0001-0007" num="0114"><b>14</b> storage device</li>    <li id="ul0001-0008" num="0115"><b>15</b> communication device</li>    <li id="ul0001-0009" num="0116"><b>16</b> bus</li>    <li id="ul0001-0010" num="0117"><b>20</b> server</li>    <li id="ul0001-0011" num="0118"><b>21</b> processor</li>    <li id="ul0001-0012" num="0119"><b>22</b> display device</li>    <li id="ul0001-0013" num="0120"><b>23</b> input device</li>    <li id="ul0001-0014" num="0121"><b>24</b> storage device</li>    <li id="ul0001-0015" num="0122"><b>25</b> communication device</li>    <li id="ul0001-0016" num="0123"><b>26</b> bus</li>    <li id="ul0001-0017" num="0124"><b>31</b> input unit</li>    <li id="ul0001-0018" num="0125"><b>32</b> display unit</li>    <li id="ul0001-0019" num="0126"><b>33</b> communication unit</li>    <li id="ul0001-0020" num="0127"><b>34</b> game control unit</li>    <li id="ul0001-0021" num="0128"><b>35</b> storage unit</li>    <li id="ul0001-0022" num="0129"><b>41</b> input unit</li>    <li id="ul0001-0023" num="0130"><b>42</b> display unit</li>    <li id="ul0001-0024" num="0131"><b>43</b> communication unit</li>    <li id="ul0001-0025" num="0132"><b>44</b> game control unit</li>    <li id="ul0001-0026" num="0133"><b>45</b> storage unit</li>    <li id="ul0001-0027" num="0134"><b>501</b> enemy-character image</li>    <li id="ul0001-0028" num="0135"><b>503</b> enemy CT information</li>    <li id="ul0001-0029" num="0136"><b>511</b>, <b>512</b>, <b>513</b>, <b>514</b> player-character image</li>    <li id="ul0001-0030" num="0137"><b>521</b> first-action button</li>    <li id="ul0001-0031" num="0138"><b>531</b>, <b>532</b>, <b>533</b>, <b>534</b> second-action display command button</li>    <li id="ul0001-0032" num="0139"><b>541</b>, <b>542</b>, <b>543</b>, <b>544</b> defense button</li>    <li id="ul0001-0033" num="0140"><b>601</b> player character</li>    <li id="ul0001-0034" num="0141"><b>602</b>, <b>603</b>, <b>604</b>, <b>605</b> second-action button</li></ul></p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A non-transitory computer readable medium storing a program for a game in which a plurality of players battle against a common enemy character, the program characterized by causing a computer to execute:<claim-text>a step for storing an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information, in a storage device;</claim-text><claim-text>a step for storing enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character, in the storage device so as to be individually associated with each of the items of the player identification -information;</claim-text><claim-text>a step for accepting a command input performed by each one of the players;</claim-text><claim-text>a step for executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input;</claim-text><claim-text>a step for updating the enemy common parameter, which is stored in the storage device, on the basis of the executed action of the player character;</claim-text><claim-text>a step for executing an action of the enemy character on the basis of the enemy next-action information that is stored is the storage device in association with the player identification information;</claim-text><claim-text>a step for deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and</claim-text><claim-text>a step for updating the enemy next-action information that is associated with the player identification information in the storage device, on the basis of the decided enemy next action.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The non-transitory computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>characterized is that a player terminal of each of the players is connected to the computer, and</claim-text><claim-text>characterized by causing the computer to further execute, after executing the step for deciding the enemy next-action information, a step for sending notice information for the decided enemy next action to the player terminal.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The non-transitory computer readable medium according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, characterized in that:<claim-text>the type of an action of the enemy character includes a first enemy-action type and a second enemy-action type; and</claim-text><claim-text>the step for sending notice information is executed in the case where the type of an enemy next action is the second enemy-action type.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The non-transitory computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>characterized in that the type of an action of a player character includes a first player-action type and a second player-action type, and</claim-text><claim-text>characterized by causing the computer to execute, in the case where the action executed in the step for executing an action of a player character is an action of the second player-action type, the step for deciding an enemy next action and the step for updating the enemy next-action information, without executing an action of the enemy character.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The non-transitory computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>characterized by causing the computer to further execute a step for storing enemy individual parameters that are parameters of the enemy character different for each of the items of the player identification information, in the storage device in association with each of the items of the player identification information, and</claim-text><claim-text>characterized is that the step for deciding an enemy next action includes a step for deciding an enemy next action with respect to each of the items of the player identification information, on the basis of the enemy common parameter and the enemy individual parameters that are stored in association with this player identification information.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The non-transitory computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, characterized in that the enemy next-action information includes an action name and an action target.</claim-text></claim><claim id="CLM-00071" num="00071"><claim-text><b>71</b>. The non-transitory computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>characterized in that the enemy next-action information, which is associated with each of the items of the player identification information, includes a suspension condition for suspending the enemy next action, and</claim-text><claim-text>characterized by causing the computer to further execute:</claim-text><claim-text>a step for judging whether the suspension condition, which is included in the enemy next-action information, has been satisfied; and</claim-text><claim-text>a step for updating the enemy next-action information of which the suspension condition is judged to have been satisfied, to enemy next-action information indicating another enemy next action.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The non-transitory computer readable medium according to claim <b>7</b>, characterized by causing the computer to further execute a step for sending suspension information for notifying the corresponding player that the enemy next action has been changed, to the corresponding player terminal.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A server for a game in which a plurality of players battle against a common enemy character, the server characterized by<claim-text>storing an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information, in a storage device;</claim-text><claim-text>storing enemy next-action information indicating an enemy next action that is as action planned to be executed next by the enemy character, is the storage device so as to be individually associated with each of the items of the player identification information;</claim-text><claim-text>accepting a command input performed by each one of the players;</claim-text><claim-text>executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input;</claim-text><claim-text>updating the enemy common parameter, which is stored is the storage device, on the basis of the executed action of the player character;</claim-text><claim-text>executing an action of the enemy character on the basis of the enemy next-action information that is stored in the storage device in association with the player identification information;</claim-text><claim-text>deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and</claim-text><claim-text>updating the enemy next-action information that is associated with the player identification information of the player in the storage device, on the basis of the decided enemy next action.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A method for a game in which a plurality of players battle against a common enemy character, the method characterized in that a computer executes:<claim-text>a step for storing an enemy common parameter that is an enemy-character parameter common to a plurality of items of player identification information, in a storage device;</claim-text><claim-text>a step for storing enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character, in the storage device so as to be individually associated with each of the items of the player identification information;</claim-text><claim-text>a step for accepting a command input performed by each one of the players;</claim-text><claim-text>a step for executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input;</claim-text><claim-text>a step for updating the enemy common parameter, which is stored in the storage device, on the basis of the executed action of the player character;</claim-text><claim-text>a step for executing an action of the enemy character on the basis of the enemy next-action information that is stored in the storage device in association with the player identification information;</claim-text><claim-text>a step for deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and</claim-text><claim-text>a step for updating the enemy next-action information that is associated with the player identification information is the storage device, on the basis of the decided enemy next action.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system for a game in which a plurality of players battle against a common enemy character,<claim-text>the system characterized by comprising a server and a player terminal of each of the players that is connected to the server,</claim-text><claim-text>the server</claim-text><claim-text>storing an enemy common parameter that is an enemy character parameter common to a plurality of items of player identification information, in a storage device;</claim-text><claim-text>storing enemy next-action information indicating an enemy next action that is an action planned to be executed next by the enemy character, in the storage device so as to be individually associated with each of the items of the player identification information;</claim-text><claim-text>accepting a command input performed by each one of the players;</claim-text><claim-text>executing an action of a player character associated with the player identification information of the player, on the basis of the accepted command input;</claim-text><claim-text>updating the enemy common parameter, which is stored in the storage device, on the basis of the executed action of the player character;</claim-text><claim-text>executing an action of the enemy character on the basis of the enemy next-action information that is stored in the storage device in association with the player identification information;</claim-text><claim-text>deciding an enemy next action on the basis of the enemy common parameter, which is stored in the storage device; and</claim-text><claim-text>updating the enemy next-action information that is associated with the player identification information in the storage device, on the basis of the decided enemy next action, and</claim-text><claim-text>the player terminal accepting a command input performed by the corresponding player and sending the command input to the server.</claim-text></claim-text></claim></claims></us-patent-application>