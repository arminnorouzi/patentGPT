<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007258A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007258</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17944068</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>124</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>186</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>124</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>186</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">IMAGE CODING APPARATUS AND METHOD THEREOF BASED ON A QUANTIZATION PARAMETER DERIVATION</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16859105</doc-number><date>20200427</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11477453</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17944068</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/KR2019/002520</doc-number><date>20190305</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>16859105</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62651243</doc-number><date>20180401</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>LG ELECTRONICS INC.</orgname><address><city>Seoul</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Seunghwan</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>LIM</last-name><first-name>Jaehyun</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">According to an embodiment of the present invention, a picture decoding method performed by a decoding apparatus is provided. The method comprises: decoding image information comprising information on a quantization parameter (QP), deriving an expected average luma value of a current block from neighboring available samples, deriving a quantization parameter offset (QP offset) for deriving a luma quantization parameter (luma QP) based on the expected average luma value and the information on the QP, deriving the luma QP based on the QP offset, performing an inverse quantization for a quantization group comprising the current block based on the derived luma QP, generating residual samples for the current block based on the inverse quantization, generating prediction samples for the current block based on the image information and generating reconstructed samples for the current block based on the residual samples for the current block and the prediction samples for the current block.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="84.92mm" wi="158.75mm" file="US20230007258A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="205.82mm" wi="141.82mm" orientation="landscape" file="US20230007258A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="186.52mm" wi="147.91mm" orientation="landscape" file="US20230007258A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="174.41mm" wi="103.12mm" file="US20230007258A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="220.64mm" wi="132.16mm" orientation="landscape" file="US20230007258A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="185.50mm" wi="127.93mm" file="US20230007258A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="173.57mm" wi="152.40mm" orientation="landscape" file="US20230007258A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="170.35mm" wi="110.66mm" file="US20230007258A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="118.45mm" wi="127.68mm" file="US20230007258A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="224.71mm" wi="110.66mm" file="US20230007258A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="103.89mm" wi="124.54mm" file="US20230007258A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">Pursuant to 35 U.S.C. &#xa7; 119(e), this application is a continuation of International Application PCT/KR2019/002520, with an international filing date of Mar. 5, 2019, which claims the benefit of U.S. Provisional Application No. 62/651,243 filed on Apr. 1, 2018, the contents of which are all hereby incorporated by reference herein in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present invention relates to an image coding technique. More specifically, the present invention relates to an image coding apparatus and method thereof based on a quantization parameter derivation in an image coding system.</p><heading id="h-0003" level="1">BACKGROUND ART</heading><p id="p-0004" num="0003">Demand for high-resolution, high-quality images such as high definition (HD) images and ultra high definition (UHD) images has recently increased in various fields. As the image data has high resolution and high quality, the amount of information or bits to be transmitted increases relative to the existing image data. Therefore, when the image data is transmitted using a medium such as a wired/wireless broadband line, or when stored, the transmission cost and the storage cost may be increased.</p><p id="p-0005" num="0004">Accordingly, there is a need for a highly efficient image compression technique for efficiently transmitting, storing, and reproducing information of high resolution and high quality images.</p><heading id="h-0004" level="1">DISCLOSURE</heading><heading id="h-0005" level="1">Technical Problem</heading><p id="p-0006" num="0005">The present invention provides a method and apparatus for enhancing video coding efficiency.</p><p id="p-0007" num="0006">The present invention also provides a method and an apparatus for increasing the quantization efficiency.</p><p id="p-0008" num="0007">The present invention also provides a method and apparatus for efficiently deriving a quantization parameter.</p><heading id="h-0006" level="1">Technical Solution</heading><p id="p-0009" num="0008">According to an embodiment of the present invention, a picture decoding method performed by a decoding apparatus is provided. The method comprises: decoding image information comprising information on a quantization parameter (QP), deriving an expected average luma value of a current block from neighboring available samples, deriving a quantization parameter offset (QP offset) for deriving a luma quantization parameter (luma QP) based on the expected average luma value and the information on the QP, deriving the luma QP based on the QP offset, performing an inverse quantization for a quantization group comprising the current block based on the derived luma QP, generating residual samples for the current block based on the inverse quantization, generating prediction samples for the current block based on the image information and generating reconstructed samples for the current block based on the residual samples for the current block and the prediction samples for the current block.</p><p id="p-0010" num="0009">According to an embodiment of the present invention, a decoding apparatus decoding a picture is provided. The decoding apparatus comprises: an entropy decoding module configured to decode image information comprising information on a quantization parameter (QP), an inverse quantization module configured to derive an expected average luma value of a current block from neighboring available samples, derive a quantization parameter offset (QP offset) for deriving a luma quantization parameter (luma QP) based on the expected average luma value and the information on the QP, derive the luma QP based on the QP offset, and perform an inverse quantization for a quantization group comprising the current block based on the derived luma QP, an inverse transform module configured to generate residual samples for the current block based on the inverse quantization, a prediction module configured to generate prediction samples for the current block based on the image information and a reconstruction module configured to generate reconstructed samples for the current block based on the residual samples for the current block and the prediction samples for the current block.</p><p id="p-0011" num="0010">According to an embodiment of the present invention, a picture encoding method performed by an encoding apparatus is provided. The method comprises: deriving an expected average luma value of a current block from neighboring available samples, deriving a quantization parameter offset (QP offset) for deriving a luma quantization parameter (luma QP) based on the expected average luma value and information on the QP, deriving the luma QP based on the QP offset, performing a quantization for a quantization group comprising the current block based on the derived luma QP and encoding image information comprising the information on the QP.</p><p id="p-0012" num="0011">According to an embodiment of the present invention, an encoding apparatus encoding a picture is provided. The encoding apparatus comprises: a quantization module configured to derive an expected average luma value of a current block from neighboring available samples, derive a quantization parameter offset (QP offset) for deriving a luma quantization parameter (luma QP) based on the expected average luma value and information on the QP, derive the luma QP based on the QP offset, and perform a quantization for a quantization group comprising the current block based on the derived luma QP, and entropy encoding module configured to encode image information comprising the information on the QP.</p><heading id="h-0007" level="1">Advantageous Effects</heading><p id="p-0013" num="0012">According to the present invention, the overall image/video compression efficiency can be increased.</p><p id="p-0014" num="0013">According to the present invention, the quantization efficiency may be increased.</p><p id="p-0015" num="0014">According to the present invention, the quantization parameter may be derived efficiently.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0008" level="1">DESCRIPTION OF DRAWINGS</heading><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram illustrating a configuration of an encoding apparatus according to an embodiment.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram illustrating a configuration of a decoding apparatus according to an embodiment.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a chromaticity diagram.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of mapping of linear light values for SDR and HDR representations.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flow chart illustrating a process of reconstructing a picture according to an embodiment.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow chart illustrating a process of reconstructing a picture according to another embodiment.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart illustrating an operation of an encoding apparatus according to an embodiment.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating a configuration of an encoding apparatus according to an embodiment.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow chart illustrating an operation of a decoding apparatus according to an embodiment.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram illustrating a configuration of a decoding apparatus according to an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0009" level="1">BEST MODE</heading><p id="p-0026" num="0025">According to an embodiment of the present invention, a picture decoding method performed by a decoding apparatus is provided. The method comprises: decoding image information comprising information on a quantization parameter (QP), deriving an expected average luma value of a current block from neighboring available samples, deriving a quantization parameter offset (QP offset) for deriving a luma quantization parameter (luma QP) based on the expected average luma value and the information on the QP, deriving the luma QP based on the QP offset, performing an inverse quantization for a quantization group comprising the current block based on the derived luma QP, generating residual samples for the current block based on the inverse quantization, generating prediction samples for the current block based on the image information and generating reconstructed samples for the current block based on the residual samples for the current block and the prediction samples for the current block.</p><heading id="h-0010" level="1">MODE FOR INVENTION</heading><p id="p-0027" num="0026">The present invention may be modified in various forms, and specific embodiments thereof will be described and shown in the drawings. However, the embodiments are not intended for limiting the invention. The terms used in the following description are used to merely describe specific embodiments, but are not intended to limit the invention. An expression of a singular number includes an expression of the plural number, so long as it is clearly read differently. The terms such as &#x201c;include&#x201d; and &#x201c;have&#x201d; are intended to indicate that features, numbers, steps, operations, elements, components, or combinations thereof used in the following description exist and it should be thus understood that the possibility of existence or addition of one or more different features, numbers, steps, operations, elements, components, or combinations thereof is not excluded.</p><p id="p-0028" num="0027">On the other hand, elements in the drawings described in the invention are independently drawn for the purpose of convenience for explanation of different specific functions in an image encoding/decoding device and does not mean that the elements are embodied by independent hardware or independent software. For example, two or more elements of the elements may be combined to form a single element, or one element may be divided into plural elements. The embodiments in which the elements are combined and/or divided belong to the invention without departing from the concept of the invention.</p><p id="p-0029" num="0028">Hereinafter, exemplary embodiments of the invention will be described in detail with reference to the accompanying drawings. In addition, same reference numerals are used to indicate same elements throughout the drawings, and the same descriptions on the like elements will be omitted.</p><p id="p-0030" num="0029">The following description can be applied in the technical field dealing with video or image. For example, the method or embodiment disclosed in the following description may be applied to various video coding standards such as Versatile Video Coding (VVC) standard (ITU-T Rec. H.266), the next generation video/image coding standard after VVC, or the previous generation video/image coding standard before VVC such as High Efficiency Video Coding (HEVC) standard (ITU-T Rec. H.265) and so on.</p><p id="p-0031" num="0030">In the present specification, video may mean a set of images according to time. A picture generally refers to a unit that represents one image in a specific time period, and a slice is a unit that constitutes a part of a picture in coding. One picture may be composed of a plurality of slices, and pictures and slices may be used in combination if necessary. Also, in some cases, the term &#x201c;image&#x201d; may mean a concept including a still image and a video which is a set of still images according to the flow of time. Also, &#x201c;video&#x201d; does not necessarily mean only a set of still images according to time, but may be interpreted as a concept that comprises meaning of a still image in some embodiments.</p><p id="p-0032" num="0031">A pixel or a pel may mean a minimum unit of a picture (or image). Also, a &#x2018;sample&#x2019; may be used as a term corresponding to a pixel. A sample may generally represent a pixel or pixel value and may only represent a pixel/pixel value of a luma component or only a pixel/pixel value of a chroma component.</p><p id="p-0033" num="0032">A unit represents a basic unit of image processing. A unit may include at least one of a specific area of a picture and information related to the area. The unit may be used in combination with terms such as a block or an area. In general, an M&#xd7;N block may represent a set of samples or transform coefficients consisting of M columns and N rows.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically explains a configuration of an encoding apparatus according to an embodiment.</p><p id="p-0035" num="0034">Hereinafter, the encoding/decoding apparatus may include a video encoding/decoding apparatus and/or an image encoding/decoding apparatus. A video encoding/decoding apparatus may be used as a concept including an image encoding/decoding apparatus, and an image encoding/decoding apparatus may be used as a concept including a video encoding/decoding apparatus.</p><p id="p-0036" num="0035">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an encoding apparatus <b>100</b> may include a picture partitioning module <b>105</b>, a prediction module <b>110</b>, a residual processing module <b>120</b>, an entropy encoding module <b>130</b>, an adder <b>140</b>, a filtering module <b>150</b>, and a memory <b>160</b>. The residual processing unit <b>120</b> may include a subtractor <b>121</b>, a transform module <b>122</b>, a quantization module <b>123</b>, a rearrangement module <b>124</b>, a inverse quantization module <b>125</b>, and an inverse transform module <b>126</b>.</p><p id="p-0037" num="0036">The picture partitioning module <b>105</b> may divide the inputted picture into at least one processing unit.</p><p id="p-0038" num="0037">In one example, the processing unit may be referred to as a coding unit (CU). In this case, the coding unit may be recursively partitioned according to a quad-tree binary-tree (QTBT) structure from the largest coding unit (LCU). For example, one coding unit may be divided into a plurality of coding units of deeper depth based on a quadtree structure, a binary tree structure, and/or a ternary tree structure.</p><p id="p-0039" num="0038">In this case, for example, the quadtree structure is applied first, and the binary tree structure and the ternary tree structure can be applied later. Or a binary tree structure/ternary tree structure may be applied first. The coding procedure according to the present invention can be performed based on the final coding unit which is not further divided. In this case, the maximum coding unit may be directly used as the final coding unit based on the coding efficiency or the like depending on the image characteristics, or the coding unit may be recursively divided into lower-depth coding units and may be used as the final coding unit. Here, the coding procedure may include a procedure such as prediction, conversion, and restoration, which will be described later.</p><p id="p-0040" num="0039">As another example, the processing unit may include a coding unit (CU) prediction module (PU) or a transform unit (TU). The coding unit may be split from the largest coding unit (LCU) into coding units of deeper depth along the quad tree structure. In this case, the maximum coding unit may be directly used as the final coding unit based on the coding efficiency or the like depending on the image characteristics, or the coding unit may be recursively divided into lower-depth coding units and may be used as the final coding unit. When a smallest coding unit (SCU) is set, the coding unit can not be divided into smaller coding units than the minimum coding unit.</p><p id="p-0041" num="0040">Herein, the term &#x201c;final coding unit&#x201d; means a coding unit on which the prediction module or the conversion unit is partitioned or divided. A prediction module is a unit that is partitioned from a coding unit, and may be a unit of sample prediction. At this time, the prediction module may be divided into sub-blocks. The conversion unit may be divided along the quad-tree structure from the coding unit, and may be a unit for deriving a conversion coefficient and/or a unit for deriving a residual signal from the conversion factor.</p><p id="p-0042" num="0041">Hereinafter, the coding unit may be referred to as a coding block (CB), the prediction module may be referred to as a prediction block (PB), and the conversion unit may be referred to as a transform block (TB). The prediction block or prediction module may refer to a specific area in the form of a block in a picture and may include an array of prediction samples. Also, a transform block or transform unit may refer to a specific region in the form of a block within a picture, and may include an array of transform coefficients or residual samples.</p><p id="p-0043" num="0042">The prediction module <b>110</b> predicts a current block or a residual block and generates a predicted block including prediction samples of the current block can do. The unit of prediction performed in the prediction module <b>110</b> may be a coding block, a transform block, or a prediction block.</p><p id="p-0044" num="0043">The prediction module <b>110</b> predicts a current block or a residual block and generates a predicted block including prediction samples of the current block. The unit of prediction performed in the prediction module <b>110</b> may be a coding block, a transform block, or a prediction block.</p><p id="p-0045" num="0044">The prediction module <b>110</b> can determine whether intra prediction or inter prediction is applied to the current block. For example, the prediction module <b>110</b> may determine whether intra prediction or inter prediction is applied in units of CU.</p><p id="p-0046" num="0045">In the case of intra prediction, the prediction module <b>110</b> may derive a prediction sample for a current block based on a reference sample outside the current block in a picture to which the current block belongs (hereinafter referred to as a current picture).</p><p id="p-0047" num="0046">In this case, the prediction module <b>110</b> may derive a prediction sample based on (case (i)) an average or interpolation of neighboring reference samples of the current block, (case (ii)) the prediction sample may be derived based on a reference sample existing in a specific (prediction) direction with respect to the prediction sample among the samples.</p><p id="p-0048" num="0047">The case (i) may be referred to as a non-directional mode or a non-angle mode, and the case (ii) may be referred to as a directional mode or an angular mode. In the intra prediction, the prediction mode may have, for example, 65 directional prediction modes and at least two non-directional modes. The non-directional mode may include a DC prediction mode and a planar mode (Planar mode). The prediction module <b>110</b> may determine a prediction mode applied to a current block using a prediction mode applied to a neighboring block.</p><p id="p-0049" num="0048">In the case of inter prediction, the prediction module <b>110</b> may derive a prediction sample for a current block based on a sample specified by a motion vector on a reference picture. The prediction module <b>110</b> may derive a prediction sample for a current block by applying one of a skip mode, a merge mode, and a motion vector prediction (MVP) mode. In the skip mode and the merge mode, the prediction module <b>110</b> can use motion information of a neighboring block as motion information of a current block.</p><p id="p-0050" num="0049">In the skip mode, difference (residual) between the predicted sample and the original sample is not transmitted unlike the merge mode. In the MVP mode, a motion vector of a current block can be derived by using a motion vector of a neighboring block as a motion vector predictor to use as a motion vector predictor of a current block.</p><p id="p-0051" num="0050">In the case of inter prediction, a neighboring block may include a spatial neighboring block existing in a current picture and a temporal neighboring block existing in a reference picture. The reference picture including the temporal neighboring block may be referred to as a collocated picture (colPic). The motion information may include a motion vector and a reference picture index. Information such as prediction mode information and motion information may be (entropy) encoded and output in the form of a bit stream.</p><p id="p-0052" num="0051">When the motion information of the temporal neighboring blocks is used in the skip mode and the merge mode, the highest picture on the reference picture list may be used as a reference picture. The reference pictures included in the picture order count can be sorted on the basis of the picture order count (POC) difference between the current picture and the corresponding reference picture. The POC corresponds to the display order of the pictures and can be distinguished from the coding order.</p><p id="p-0053" num="0052">The subtractor <b>121</b> generates residual samples that are the difference between the original sample and the predicted sample. When the skip mode is applied, a residual sample may not be generated as described above.</p><p id="p-0054" num="0053">The transform module <b>122</b> transforms the residual samples on a transform block basis to generate a transform coefficient. The transform unit <b>122</b> may perform the transform according to the size of the transform block and a prediction mode applied to the coding block or the prediction block spatially overlapping the transform block.</p><p id="p-0055" num="0054">For example, if intra prediction is applied to the coding block or the prediction block that overlaps the transform block and the transform block is a 4&#xd7;4 residue array, the residual sample is transformed into a discrete sine transform (DST) In other cases, the residual samples can be converted using a DCT (Discrete Cosine Transform) conversion kernel.</p><p id="p-0056" num="0055">The quantization unit <b>123</b> may quantize the transform coefficients to generate quantized transform coefficients.</p><p id="p-0057" num="0056">The rearrangement module <b>124</b> rearranges the quantized transform coefficients. The rearrangement module <b>124</b> may rearrange the block-shaped quantized transform coefficients into a one-dimensional vector form through a scanning method of coefficients. The rearrangement module <b>124</b> may be a part of the quantization module <b>123</b>, although the rearrangement module <b>124</b> is described as an alternative configuration.</p><p id="p-0058" num="0057">The entropy encoding module <b>130</b> may perform entropy encoding on the quantized transform coefficients. Entropy encoding may include, for example, an encoding method such as exponential Golomb, context-adaptive variable length coding (CAVLC), context-adaptive binary arithmetic coding (CABAC). The entropy encoding module <b>130</b> may encode information necessary for video restoration (e.g., values of a syntax element, etc.) and the quantized transform coefficients together or separately in accordance with an entropy encoding or a predetermined method.</p><p id="p-0059" num="0058">The encoded information may be transmitted or stored in units of NAL (network abstraction layer) units in the form of a bit stream. The bitstream may be transmitted over a network or stored in a digital storage medium. The network may include a broadcasting network and/or a communication network, and the digital storage medium may include various storage media such as USB, SD, CD, DVD, Blu-ray, HDD, and SSD.</p><p id="p-0060" num="0059">The inverse quantization module <b>125</b> inversely quantizes the quantized values (quantized transform coefficients) obtained from the quantization module <b>123</b> and the inverse transformation module <b>126</b> inversely quantizes the inversely quantized values obtained from the inverse quantization module <b>125</b> to generate residual samples.</p><p id="p-0061" num="0060">The adder <b>140</b> combines the residual sample and the predicted sample to reconstruct the picture. The residual samples and the prediction samples are added in units of blocks so that a reconstruction block can be generated. Here, the adder <b>140</b> may be a part of the prediction module <b>110</b>, meanwhile, the adder <b>140</b> may be referred to as a reconstruction module or a reconstruction block generation unit.</p><p id="p-0062" num="0061">For the reconstructed picture, the filtering module <b>150</b> may apply a deblocking filter and/or a sample adaptive offset. Through deblocking filtering and/or sample adaptive offsets, artifacts in the block boundary in the reconstructed picture or distortion in the quantization process can be corrected. The sample adaptive offset can be applied on a sample-by-sample basis and can be applied after the process of deblocking filtering is complete. The filtering module <b>150</b> may apply an ALF (Adaptive Loop Filter) to the restored picture. The ALF may be applied to the reconstructed picture after the deblocking filter and/or sample adaptive offset is applied.</p><p id="p-0063" num="0062">The memory <b>160</b> may store restored pictures (decoded pictures) or information necessary for encoding/decoding. Here, the reconstructed picture may be a reconstructed picture whose filtering procedure has been completed by the filtering module <b>150</b>. The stored restored picture may be used as a reference picture for (inter) prediction of another picture. For example, the memory <b>160</b> may store (reference) pictures used for inter prediction. At this time, the pictures used for inter prediction can be designated by a reference picture set or a reference picture list.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically explains a configuration of a decoding apparatus according to an embodiment.</p><p id="p-0065" num="0064">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, decoding apparatus <b>200</b> may include an entropy decoding module <b>210</b>, a residual processing module <b>220</b>, a prediction module <b>230</b>, an adder <b>240</b>, a filtering module <b>250</b>, and a memory <b>260</b>. Here, the residual processing module <b>220</b> may include a rearrangement module <b>221</b>, an inverse quantization module <b>222</b>, and an inverse transform module <b>223</b>. Also, although not shown, the video decoding apparatus <b>200</b> may include a receiver for receiving a bitstream including video information. The receiving unit may be a separate module or may be included in the entropy decoding module <b>210</b>.</p><p id="p-0066" num="0065">When a bitstream including video/image information is input, the (video) decoding apparatus <b>200</b> can restore the video/image/picture in response to the process in which the video/image information is processed in the (video) encoding apparatus <b>100</b>.</p><p id="p-0067" num="0066">For example, the video decoding apparatus <b>200</b> can perform video decoding using a processing unit applied in the video encoding apparatus. Thus, the processing unit block of video decoding may be, for example, a coding unit and, in another example, a coding unit, a prediction module or a conversion unit. The coding unit may be divided from the maximum coding unit along a quadtree structure, a binary tree structure, and/or a ternary tree structure.</p><p id="p-0068" num="0067">A prediction module and a conversion unit may be further used as the case may be. The prediction block may be a block derived or partitioned from the coding unit. The conversion unit may be divided along the quad tree structure from the coding unit and may be a unit that derives the conversion factor or a unit that derives the residual signal from the conversion factor.</p><p id="p-0069" num="0068">The entropy decoding module <b>210</b> may parse the bitstream and output information necessary for video restoration or picture restoration. For example, the entropy decoding module <b>210</b> decodes information in a bitstream based on a coding method such as exponential Golomb coding, CAVLC, or CABAC, and calculates a value of a syntax element necessary for video restoration and a quantized coefficient value regarding residuals.</p><p id="p-0070" num="0069">More specifically, the CABAC entropy decoding method comprises receiving a bin corresponding to each syntax element in a bitstream, determining a context model based on decoding target syntax element and decoding information of decoding target, predicting the occurrence probability of a bin according to the determined context model, and performing arithmetic decoding of the bin to generate a symbol corresponding to the value of each syntax element. At this time, the CABAC entropy decoding method can update the context model using the information of the decoded symbol/bin for the context model of the next symbol/bin after determining the context model.</p><p id="p-0071" num="0070">The information on the prediction of the decoded information in the entropy decoding module <b>210</b> is provided to the prediction module <b>230</b> and the residual value in which the entropy decoding is performed in the entropy decoding module <b>210</b> can be input to the rearrangement module <b>221</b>.</p><p id="p-0072" num="0071">The rearrangement module <b>221</b> may rearrange the quantized transform coefficients into a two-dimensional block form. The rearrangement module <b>221</b> may perform reordering in response to the coefficient scanning performed in the encoding apparatus. The rearrangement module <b>221</b> may be a part of the inverse quantization module <b>222</b>, although the rearrangement module <b>221</b> has been described as an alternative configuration.</p><p id="p-0073" num="0072">The inverse quantization module <b>222</b> may dequantize the quantized transform coefficients based on the (inverse) quantization parameters, and output the transform coefficients. At this time, the information for deriving the quantization parameter may be signaled from the encoding device.</p><p id="p-0074" num="0073">The inverse transform module <b>223</b> may invert the transform coefficients to derive the residual samples.</p><p id="p-0075" num="0074">The prediction module <b>230</b> may predict a current block and may generate a predicted block including prediction samples of the current block. The unit of prediction performed by the prediction module <b>230</b> may be a coding block, a transform block, or a prediction block.</p><p id="p-0076" num="0075">The prediction module <b>230</b> may determine whether intra prediction or inter prediction is to be applied based on the prediction information. In this case, a unit for determining whether to apply intra prediction or inter prediction may differ from a unit for generating a prediction sample. In addition, units for generating prediction samples in inter prediction and intra prediction may also be different. For example, whether inter prediction or intra prediction is to be applied can be determined in units of CU. Also, for example, in the inter prediction, the prediction mode may be determined in units of PU to generate prediction samples. In intra prediction, a prediction mode may be determined in units of PU, and prediction samples may be generated in units of TU.</p><p id="p-0077" num="0076">In the case of intra prediction, the prediction module <b>230</b> may derive a prediction sample for the current block based on the neighboring reference samples in the current picture. The prediction module <b>230</b> may apply a directional mode or a non-directional mode based on the neighbor reference samples of the current block to derive a prediction sample for the current block. In this case, a prediction mode to be applied to the current block may be determined using the intra prediction mode of the neighboring block.</p><p id="p-0078" num="0077">In the case of inter prediction, the prediction module <b>230</b> may derive a prediction sample for a current block based on a sample specified on a reference picture by a motion vector on a reference picture. The prediction module <b>230</b> may derive a prediction sample for a current block by applying a skip mode, a merge mode, or an MVP mode. At this time, motion information necessary for inter prediction of a current block provided in the encoding apparatus, for example, information on a motion vector, a reference picture index, and the like, may be acquired or derived based on the prediction information.</p><p id="p-0079" num="0078">In the skip mode and the merge mode, motion information of a neighboring block can be used as motion information of the current block. In this case, the neighboring block may include a spatial neighboring block and a temporal neighboring block.</p><p id="p-0080" num="0079">The prediction module <b>230</b> may construct a merge candidate list using the motion information of the available neighboring blocks and use the information indicated by the merge index on the merge candidate list as the motion vector of the current block. The merge index may be signaled from the encoding device. The motion information may include a motion vector and a reference picture. When the motion information of temporal neighboring blocks is used in the skip mode and the merge mode, the highest picture on the reference picture list can be used as a reference picture.</p><p id="p-0081" num="0080">In the skip mode, unlike the merge mode, the difference between the predicted sample and the original sample (residual) is not transmitted.</p><p id="p-0082" num="0081">In the MVP mode, a motion vector of a current block can be derived using a motion vector of a neighboring block as a motion vector predictor. In this case, the neighboring block may include a spatial neighboring block and a temporal neighboring block.</p><p id="p-0083" num="0082">For example, when the merge mode is applied, a merge candidate list may be generated using a motion vector of the reconstructed spatial neighboring block and/or a motion vector corresponding to a Col block that is a temporally neighboring block. In the merge mode, the motion vector of the candidate block selected in the merge candidate list is used as the motion vector of the current block. The prediction information may include a merge index indicating a candidate block having an optimal motion vector selected from the candidate blocks included in the merge candidate list. At this time, the prediction module <b>230</b> can derive the motion vector of the current block using the merge index.</p><p id="p-0084" num="0083">As another example, when a motion vector prediction mode (MVP) is applied, a motion vector predictor candidate list is generated by using a motion vector of the reconstructed spatial neighboring block and/or a motion vector corresponding to a Col block which is a temporally neighboring block. That is, the motion vector of the reconstructed spatial neighboring block and/or the motion vector corresponding to the neighboring block Col may be used as a motion vector candidate. The information on the prediction may include a predicted motion vector index indicating an optimal motion vector selected from the motion vector candidates included in the list.</p><p id="p-0085" num="0084">At this time, the predicting module <b>230</b> can use the motion vector index to select a predictive motion vector of the current block from the motion vector candidates included in the motion vector candidate list. The predicting unit of the encoding apparatus can obtain the motion vector difference (MVD) between the motion vector of the current block and the motion vector predictor, and can output it as a bit stream. That is, MVD can be obtained by subtracting the motion vector predictor from the motion vector of the current block. In this case, the prediction module <b>230</b> may obtain the motion vector difference included in the information on the prediction, and derive the motion vector of the current block through addition of the motion vector difference and the motion vector predictor. The prediction module may also acquire or derive a reference picture index or the like indicating the reference picture from the information on the prediction.</p><p id="p-0086" num="0085">The adder <b>240</b> may add a residual sample and a prediction sample to reconstruct a current block or a current picture. The adder <b>240</b> may add the residual samples and the prediction samples on a block-by-block basis to reconstruct the current picture. When the skip mode is applied, since the residual is not transmitted, the predicted sample can be the restored sample. Here, the adder <b>240</b> has been described as an alternative configuration, but the adder <b>240</b> may be a part of the prediction module <b>230</b>. Meanwhile, the adder <b>240</b> may be referred to as a reconstruction module or a reconstruction block generation unit.</p><p id="p-0087" num="0086">The filtering module <b>250</b> may apply deblocking filtered sample adaptive offsets, and/or ALFs, to the reconstructed pictures. At this time, the sample adaptive offset may be applied on a sample-by-sample basis and may be applied after deblocking filtering. The ALF may be applied after deblocking filtering and/or sample adaptive offsets.</p><p id="p-0088" num="0087">The memory <b>260</b> may store reconstructed pictures (decoded pictures) or information necessary for decoding. Here, the reconstructed picture may be a reconstructed picture whose filtering procedure has been completed by the filtering module <b>250</b>. For example, the memory <b>260</b> may store pictures used for inter prediction. At this time, the pictures used for inter prediction may be designated by a reference picture set or a reference picture list. The reconstructed picture can be used as a reference picture for another picture. In addition, the memory <b>260</b> may output the reconstructed picture according to the output order.</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a chromaticity diagram.</p><p id="p-0090" num="0089">This embodiment relates to video coding and more particularly to techniques for optimizing video coding according to given conditions, such as defined or expected luminance transfer function, dynamic range of video, and luminance value of a coding block.</p><p id="p-0091" num="0090">As used herein the term luminance transfer function may refer to an optical-electro transfer function (OETF) or an electro-optical transfer function (EOTF). It should be noted that an optical-electro transfer function may be referred to as an inverse electro-optical transfer function and an electro-optical transfer function may be referred to as an inverse optical-electro transfer function even though the two transfer functions are not exact inverses of each other.</p><p id="p-0092" num="0091">The techniques described herein may be used to compensate for non-optimal video coding performance that occurs when the mapping of luminance values to digital code words is not being considered in equal importance. For example, in practice an OETF may allow more bits to dark area compared to bright area (or vice versa). In this case, a video encoder/decoder designed based on an assumption that all of the digital code words to be coded with equal importance would typically not perform video coding in an optimal manner.</p><p id="p-0093" num="0092">It should be noted that although techniques of this disclosure are described with respect to the ITU-T H.264 standard and the ITU-T H.265 standard, the techniques of this disclosure are generally applicable to any video coding standard.</p><p id="p-0094" num="0093">Video compression technologies have been deployed into a wide range of devices, including digital televisions, desktop computers or laptop, tablet computers, digital recording devices, digital media players, video gaming devices, smart telephones, and so on. Digital video may be coded according to a video coding standard, such as ITU-T H.264 known as ISO/IEC MPEG-4 AVC and High-Efficiency Video Coding (HEVC). Video coding standards may allow specific format (i.e. YUV420) to be coded.</p><p id="p-0095" num="0094">A conventional digital video camera initially generates raw data corresponding to signals generated by each of its image sensors. For example, digital image capturing devices record an image as a set of linearly related luminance values. However, human vision does not recognize changes in luminance values in a linear manner That is, for example, an area of an image associated with a luminance value of 100 cd/m2 is not necessarily perceived as twice as bright an area of an image associated with a luminance value of 200 cd/m2. As such, a luminance transfer function (e.g., an optical-electro transfer function (OETF) or an electro-optical transfer function (EOTF)) may be used to convert linear luminance data into data that can be perceived in a meaningful way. An optical-electro transfer function (OETF) may map absolute linear luminance values to digital code words in a non-linear manner. The resulting digital code words may be converted into video format supported by a video coding standard.</p><p id="p-0096" num="0095">Traditional video coding/displaying system such as conventional television video distribution environments has provided Standard Dynamic Range (SDR), typically supporting a range of brightness of around 0.1 to 100 cd/m2 (often referred to as &#x201c;nits&#x201d;). This range is significantly smaller than the range encountered in real life. For example, a light bulb can have more than 10,000 cd/m2, surfaces lit in the sunlight can have brightness upwards of hundreds of thousands of cd/m2, while the night sky can be 0.005 cd/m2 or lower.</p><p id="p-0097" num="0096">In recent years, LCD and OLED displays have become widely used, and the technologies of these devices enable higher luminance and wide color space reproduction. The achievable and desired brightness and dynamic ranges of various displays may be significantly different from those of the conventional (SDR) capturing and creating devices. For example, a content creation system may be able to create or capture content with a contrast of 1,000,000:1. Television and other video distribution environments are expected to give a viewing experience that is closer to a real life experience, to provide the user with a stronger sense of &#x201c;being there&#x201d;. Instead of the existing SDR brightness range (which may be from 0.1 to 100 cd/m2) higher brightness range (from 0.005 to 10,000 cd/m2) may be considered. For example, when HDR content is displayed on a display, which supports minimum and maximum brightness of 0.01 and 2,000 cd/m2 respectively, it may have a dynamic range of 200,000:1. Note that the dynamic range of a scene can be described as the ratio of the maximum light intensity to the minimum light intensity</p><p id="p-0098" num="0097">In addition Ultra High Definition Television (UHDTV) is targeting to provide a user a sense of &#x201c;reality&#x201d;. Increasing resolution alone may not be sufficient to fully attain this goal, without also creating, capturing and displaying content that has much higher peak brightness and much larger contrast values than today's TV. In addition, a greater sense of reality requires rendering colours that are richer than those provided by the colour gamuts commonly used today, e.g. BT.709. Thus, new content will not only have orders of magnitude greater brightness and contrast, but also significantly wider colour gamut (e.g. BT.2020 or possibly even wider in the future). The various ranges of color gamut are depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0099" num="0098">Extending beyond this most recent technological evolutions, HDR (High Dynamic Range) image/video reproduction can now be achieved using appropriate transfer functions (OETF/EOTF) for both the production side and the consumer side.</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of mapping of linear light values for SDR and HDR representations.</p><p id="p-0101" num="0100">A transfer function may be described as a mapping between input and output in the real-valued (floating point) range [0.0, 1.0]. One example of luminance transform functions corresponding to HDR data include the so-called SMPTE (Society of Motion Picture and Television) High Dynamic Range (HDR) Transfer Functions, which may be referred to as SMPTE ST 2084. Another example of luminance transform functions corresponding to HDR data includes Hybrid Log Gamma Transfer Function for HDR signal (also known as ITU-R BT.2100). Specifically, the SMPTE HDR Transfer Functions include an EOTF and an inverse-EOTF. The SMPTE ST 2084 inverse-EOTF is described according to the following set of Math Figures.</p><p id="p-0102" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>L</i><sub>c</sub><i>=R/</i>10,000&#x2003;&#x2003;[Math Figure 1]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0103" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>V</i>=((<i>c</i><sub>1</sub><i>+c</i><sub>2*</sub><i>L</i><sub>c</sub><sup>n</sup>)/(1+<i>c</i><sub>3</sub><i>*L</i><sub>c</sub><sup>n</sup>))<sup>n</sup>&#x2003;&#x2003;[Math Figure 2]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0104" num="0101">In Math Figure 1 and Math Figure 2, c1=c3&#x2212;c2+1=3424/4096=0.8359375, c2=32*2413/4096=18.8515625, c3=32*2392/4096=18.6875, m=128*2523/4096=78.84375, and n=0.25*2610/4096=0.1593017578125.</p><p id="p-0105" num="0102">The SMPTE ST 2084 EOTF may be described according to the following set of Math Figures.</p><p id="p-0106" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>L</i><sub>c</sub>=((max[(<i>V</i><sup>1/m</sup><i>&#x2212;c</i><sub>1</sub>),0])/(<i>c</i><sub>2</sub><i>&#x2212;c</i><sub>3</sub><i>*V</i><sup>1/m</sup>))1<sup>/n</sup>&#x2003;&#x2003;[Math Figure 3]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0107" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>R=</i>10,000*<i>Lc</i>&#x2003;&#x2003;[Math Figure 4]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0108" num="0103">In the equations above, R is a luminance value with an expected range of 0 to 10,000 cd/m<sup>2</sup>. For example, L<sub>c </sub>equal to 1 is intended to correspond to a luminance level of 10,000 cd/m<sup>2</sup>. R may indicate absolute linear luminance value. Further, in the equations above, V may be referred to as luminance value (or perceptual curve value). Since an OETF may map perceptual curve values to digital code words. Hence, V may be mapped to 2<sup>N </sup>bit code words. An example of a function that may be used to map V to N-bit code words may be defined as:</p><p id="p-0109" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Digital Value=INT((2<sup>N</sup>&#x2212;1)*<i>V</i>)&#x2003;&#x2003;[Math Figure 5]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0110" num="0104">In Math Figure 5, INT(x) generates an integer value by rounding down for fractional values less than 0.5 and rounding up for fractional values greater than or equal to 0.5.</p><p id="p-0111" num="0105">As an illustrative example, <figref idref="DRAWINGS">FIG. <b>2</b></figref> compares an 8-bit SDR system capable of representing 0.1 to 100 cd/m<sup>2 </sup>with a BT.709 style transfer function (green curve) to a 10-bit HDR system capable of representing 0.005 to 10,000 cd/m<sup>2 </sup>with another transfer function (SMPTE ST 2084). The plots in this figure are approximate plots. They do not capture the exact form of the curve and are shown for illustration purposes only. In the figure, the integer code levels are along the horizontal axis and linear light values (scaled to log 10) are along the vertical axis. This illustrative mapping includes traditional code level range proportions to accommodate both foot-room (&#x201c;negative&#x201d; samples below the [0.0, 1.0] real-valued range) and head-room (samples above real-value 1.0). Due to design properties, the 10-bit HDR transfer function shown here assigns approximately twice as many code levels [119 to 509] as the traditional 8-bit SDR transfer function assigns [16 to 235] in the SDR range, while providing a similar number of new code levels [510 to 940] to extend brightness. New code levels [64 to 118] are assigned for darker intensities below 0.01 cd/m<sup>2</sup>.</p><p id="p-0112" num="0106">In a sense, the 10-bit HDR system illustrated here distributes the extra 2-bits over traditional consumer 8-bit &#x201c;SDR&#x201d; video by assigning approximately 1 extra bit of precision within the traditional SDR intensity range, while applying the other extra bit to extend the curve to intensities greater than 100 cd/m<sup>2</sup>. For comparison, the 10-bit SDR transfer function is also plotted (red dash curve).</p><p id="p-0113" num="0107">Although current video coding standards may code video data without considering luminance transfer functions, the performance of a video coding standard may be affected by luminance transfer functions because the distribution of code words may be dependent on luminance transfer functions. For example, a video coding standard may be based on an assumption that each code word is generally mapped to equal importance in the aspect of human visual sensitivity (HVS). However, it may not always be true in reality. There are many transfer functions available and each transfer function has its own mapping rule which is not universal. Therefore, this may result in non-optimal performance of a video coder, such as HEVC. For example, and as described in greater detail below, techniques in HEVC and existing video compression system that are based on quantization parameter values may not perform optimally since it quantizes the entire range of code words in equal importance regardless of luminance value.</p><p id="p-0114" num="0108">Meanwhile, some examples regarding standards to support HDR video processing/coding are described below in Table 1.</p><p id="p-0115" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="273pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>ITU-R BT.709 (known as Rec709): defines standardard format of high-definition television,</entry></row><row><entry>having 16:9 (widescreen) aspect ratio</entry></row><row><entry>ITU-R BT.2020 (known as Rec2020): defines various aspects of ultra-high-definition</entry></row><row><entry>television (UHDTV) with standard dynamic range (SDR) and wide color gamut (WCG),</entry></row><row><entry>including picture resolutions, frame rates with progressive scan, bit depths, color primaries</entry></row><row><entry>ITU-R BT.2100: Defines various aspects of high dynamic range (HDR) video such as display</entry></row><row><entry>resolution (HDTV and UHDTV), bit depth, Bit Values (Files), frame rate, chroma</entry></row><row><entry>subsampling, color space</entry></row><row><entry>ST 2084 (SMPTE ST 2084): Specifies an EOTF characterizing high-dynamic-range</entry></row><row><entry>reference displays used primarily for mastering non-broadcast content. This standard also</entry></row><row><entry>specifies an Inverse-EOTF derived from the EOTF (the Barton PQ curve)</entry></row><row><entry>ARIB STD-B67 (known as Log-Gamma (HLG)): is a high dynamic range (HDR) standard</entry></row><row><entry>that was jointly developed by the BBC and NHK. HLG defines a nonlinear transfer function</entry></row><row><entry>in which the lower half of the signal values use a gamma curve and the upper half of the</entry></row><row><entry>signal values use a logarithmic curve.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0116" num="0109"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flow chart illustrating a process of reconstructing a picture according to an embodiment.</p><p id="p-0117" num="0110">Video content typically includes video sequences comprised of a group of pictures/frames (GOP). Each video frame or picture may include multiple slices, where a slice includes a plurality of video blocks. A video block may be defined as the largest array of pixel values (also referred to as samples) that may be predictively coded. A video encoder/decoder applies predictive coding on video blocks and sub-divisions thereof. ITU-T H.264 specifies a macroblock including 16&#xd7;16 luma samples. ITU-T H.265 (or commonly known as HEVC) specifies an analogous Coding Tree Unit (CTU) structure where a picture may be split into CTUs of equal size and each CTU may include Coding Blocks (CBs) having 16&#xd7;16, 32&#xd7;32, or 64&#xd7;64 luma samples. In JEM which is exploration model for beyond HEVC, CTU may include Coding Blocks having 128&#xd7;128, 128&#xd7;64, 128&#xd7;32, 64&#xd7;64, or 16&#xd7;16 and so on. Here, coding block, prediction block, and transform block may be the same each other. Specifically, Coding block (prediction block and transform block) may be square or non-square blocks.</p><p id="p-0118" num="0111">According to an embodiment, decoding apparatus may receive bitstream (S<b>500</b>), perform entropy decoding (S<b>510</b>), perform inverse quantization (S<b>520</b>), determine whether to perform inverse transform (S<b>530</b>), perform inverse transform (S<b>540</b>), perform prediction (S<b>550</b>) and generate reconstructed samples (S<b>560</b>). More specific descriptions regarding the embodiment are as shown below.</p><p id="p-0119" num="0112">As described above, prediction syntax elements may associate a coding block thereof with corresponding reference samples. For example, for intra-prediction coding an intra-prediction mode may specify the location of reference samples. In ITU-T H.265, possible intra-prediction modes for a luma component include a planar prediction mode (predMode: 0), a DC prediction (predMode: 1), and multiple angular prediction modes (predMode: 2&#x2212;N, here N may be 34 or 65 or more). One or more syntax elements may identify one of the preintra-prediction modes. For inter-prediction coding, a motion vector (MV) identifies reference samples in a picture other than the picture of a coding block to be coded and thereby exploits temporal redundancy in video. For example, a current coding block may be predicted from a reference block located in a previously coded frame and a motion vector may be used to indicate the location of the reference block. A motion vector and associated data may describe, for example, a horizontal component of the motion vector, a vertical component of the motion vector, a resolution for the motion vector (e.g., one-quarter pixel precision), a prediction direction and/or a reference picture index value. Further, a coding standard, such as, for example HEVC, may support motion vector prediction. Motion vector prediction enables a motion vector to be specified using motion vectors of neighboring blocks.</p><p id="p-0120" num="0113">Video encoder may generate residual data by subtracting a predictive video block from a source video block. The predictive video block may be intra predicted or inter (motion vector) predicted. The residual data is obtained in the pixel domain. Transform coefficients are obtained by applying a transform, such as a discrete cosine transform (DCT), a discrete sine transform (DST), or a conceptually similar transform, to the residual block to produce a set of residual transform coefficients. Transform coefficient generator may output residual transform coefficients to coefficient quantization unit.</p><p id="p-0121" num="0114">Quantization parameter (QP) derivation process is summarized as follows.</p><p id="p-0122" num="0115">The first step is derivation of luma QP. a) Finding predicted luma quantization parameter (qP<sub>Y_PRED</sub>) based on previously coded (available) quantization parameters, b) obtaining cu_delta_QP offset which indicates the difference between predicted QP (obtained in a) and actual QP, and c) Determination of luma QP value based on bit-depth, predicted QP, and cu_delta_QP.</p><p id="p-0123" num="0116">The second step is derivation of chroma QP. a) Chroma QP is derived from luma QP, b) Chroma QP offset is found from PPS level offset (i.e. pps_cb_qp_offset, pps_cr_qp_offset) and slice level chroma QP offset (i.e. slice_cb_qp_offset, slice_cr_qp_offset).</p><p id="p-0124" num="0117">The followings are details of the above mentioned processes.</p><p id="p-0125" num="0118">The predicted luma quantization parameter qP<sub>Y_PRED </sub>is derived as follows.</p><p id="p-0126" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>qP</i><sub>Y_PRED</sub>=(<i>qP</i><sub>Y_A</sub><i>+qP</i><sub>Y_B</sub>+1)&#x3e;&#x3e;1&#x2003;&#x2003;[Math Figure 6]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0127" num="0119">Where, the variable qP<sub>Y_A </sub>and qP<sub>Y_B </sub>indicates quantization parameters from previous quantization group. Here qP<sub>Y_A </sub>is set equal to the luma quantization parameter of the coding unit containing the luma coding block covering (xQg&#x2212;1, yQg). Here, the luma location (xQg, yQg), specifies the top-left luma sample of the current quantization group relative to the top-left luma sample of the current picture. Where, the variable qP<sub>Y_A </sub>and qP<sub>Y_B </sub>indicate quantization parameters from previous quantization groups. Specifically qP<sub>Y_A </sub>is set equal to the luma quantization parameter of the coding unit containing the luma coding block covering (xQg&#x2212;1, yQg). Here, the luma location (xQg, yQg), specifies the top-left luma sample of the current quantization group relative to the top-left luma sample of the current picture. The variable qP<sub>Y_B </sub>is set equal to the luma quantization parameter Qp<sub>Y </sub>of the coding unit containing the luma coding block covering (xQg, yQg&#x2212;1). When qP<sub>Y_A </sub>or qP<sub>Y_B </sub>is not available it is set equal to qP<sub>Y_PREV</sub>. Here, qP<sub>Y_PREV </sub>is set equal to the luma quantization parameter Qp<sub>Y </sub>of the last coding unit in the previous quantization group in decoding order.</p><p id="p-0128" num="0120">Once qP<sub>Y_PRED </sub>is determined then luma quantization parameter is updated by adding CuQpDeltaVal as follow;</p><p id="p-0129" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>Qp</i><sub>Y</sub>=((<i>qP</i><sub>Y_PRED</sub><i>+CuQp</i>DeltaVal+52+2<i>*QpBd</i>Offset<sub>Y</sub>)%(52<i>+QpBd</i>Offset<sub>Y</sub>))&#x2212;<i>QpBd</i>Offset<sub>Y</sub>&#x2003;&#x2003;[Math Figure 7]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0130" num="0121">Where CuQpDeltaVal value is transmitted over bitstram through two syntax elements, such as cu_qp_delta_abs and cu_qp_delta_sign_flag. QpBdOffset<sub>Y </sub>specifies the value of the luma quantization parameter range offset and it depends on the bit_depth_luma_minus8 (i.e. bit depth of luma&#x2212;8) as follows.</p><p id="p-0131" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>QpBd</i>Offset<sub>Y</sub>=6*bit_depth_luma_minus8&#x2003;&#x2003;[Math Figure 8]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0132" num="0122">Finally the luma quantization parameter Qp&#x2032;<sub>Y </sub>is derived as follows.</p><p id="p-0133" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>The luma quantization parameter <i>Qp&#x2032;</i><sub>Y</sub><i>=Qp</i><sub>Y</sub><i>+QpBd</i>Offset<sub>Y</sub>&#x2003;&#x2003;[Math Figure 9]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0134" num="0123">Chroma QP is derived from the luma QP considering PPS level offsets (pps_cb_qp_offset, pps_cr_qp_offset) and slice level offsets (slice_cb_qp_offset, slice_cr_qp_offset) as follows.</p><p id="p-0135" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>qPi</i><sub>Cb</sub>=Clip3(&#x2212;<i>QpBd</i>Offset<sub>C</sub>,57,<i>Qp</i><sub>Y</sub><i>+pps</i>_<i>cb</i>_<i>qp</i>_offset+slice_<i>cb</i>_<i>qp</i>_offset)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0136" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>qPi</i><sub>Cr</sub>=Clip3(&#x2014;<i>QpBd</i>Offset<sub>C</sub>,57,<i>Qp</i><sub>Y</sub><i>+pps</i>_<i>cr</i>_<i>qp</i>_offset+slice_<i>cr</i>_<i>qp</i>_offset)&#x2003;&#x2003;[Math Figure 10]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0137" num="0124">The above qPi<sub>Cb </sub>and qPi<sub>Cr </sub>are further updated based on below Table 2 and Table 3 to qP<sub>Cb </sub>and qP<sub>Cr</sub>, respectively.</p><p id="p-0138" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="17"><colspec colname="1" colwidth="21pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="14pt" align="center"/><colspec colname="4" colwidth="14pt" align="center"/><colspec colname="5" colwidth="14pt" align="center"/><colspec colname="6" colwidth="14pt" align="center"/><colspec colname="7" colwidth="14pt" align="center"/><colspec colname="8" colwidth="14pt" align="center"/><colspec colname="9" colwidth="14pt" align="center"/><colspec colname="10" colwidth="14pt" align="center"/><colspec colname="11" colwidth="14pt" align="center"/><colspec colname="12" colwidth="14pt" align="center"/><colspec colname="13" colwidth="14pt" align="center"/><colspec colname="14" colwidth="14pt" align="center"/><colspec colname="15" colwidth="14pt" align="center"/><colspec colname="16" colwidth="14pt" align="center"/><colspec colname="17" colwidth="42pt" align="center"/><thead><row><entry namest="1" nameend="17" rowsep="1">TABLE 2</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row><row><entry>qPi<sub>Cb</sub></entry><entry>&#x3c;30</entry><entry>30</entry><entry>31</entry><entry>32</entry><entry>33</entry><entry>34</entry><entry>35</entry><entry>36</entry><entry>37</entry><entry>38</entry><entry>39</entry><entry>40</entry><entry>41</entry><entry>42</entry><entry>43</entry><entry>&#x3e;43</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>qP<sub>Cb</sub></entry><entry>=qPi<sub>Cb</sub></entry><entry>29</entry><entry>30</entry><entry>31</entry><entry>32</entry><entry>33</entry><entry>33</entry><entry>34</entry><entry>34</entry><entry>35</entry><entry>35</entry><entry>36</entry><entry>36</entry><entry>37</entry><entry>37</entry><entry>=qPi<sub>Cb </sub>&#x2212; 6</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0139" num="0125">Table 2 represents mapping from qPi<sub>Cb </sub>to qP<sub>Cb</sub>.</p><p id="p-0140" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="17"><colspec colname="1" colwidth="21pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="14pt" align="center"/><colspec colname="4" colwidth="14pt" align="center"/><colspec colname="5" colwidth="14pt" align="center"/><colspec colname="6" colwidth="14pt" align="center"/><colspec colname="7" colwidth="14pt" align="center"/><colspec colname="8" colwidth="14pt" align="center"/><colspec colname="9" colwidth="14pt" align="center"/><colspec colname="10" colwidth="14pt" align="center"/><colspec colname="11" colwidth="14pt" align="center"/><colspec colname="12" colwidth="14pt" align="center"/><colspec colname="13" colwidth="14pt" align="center"/><colspec colname="14" colwidth="14pt" align="center"/><colspec colname="15" colwidth="14pt" align="center"/><colspec colname="16" colwidth="14pt" align="center"/><colspec colname="17" colwidth="35pt" align="center"/><thead><row><entry namest="1" nameend="17" rowsep="1">TABLE 3</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row><row><entry>qPi<sub>Cr</sub></entry><entry>&#x3c;30</entry><entry>30</entry><entry>31</entry><entry>32</entry><entry>33</entry><entry>34</entry><entry>35</entry><entry>36</entry><entry>37</entry><entry>38</entry><entry>39</entry><entry>40</entry><entry>41</entry><entry>42</entry><entry>43</entry><entry>&#x3e;43</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>qP<sub>Cr</sub></entry><entry>=qPi<sub>Cr</sub></entry><entry>29</entry><entry>30</entry><entry>31</entry><entry>32</entry><entry>33</entry><entry>33</entry><entry>34</entry><entry>34</entry><entry>35</entry><entry>35</entry><entry>36</entry><entry>36</entry><entry>37</entry><entry>37</entry><entry>=qPi<sub>Cr </sub>&#x2212; 6</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0141" num="0126">Table 3 represents Mapping from qPi<sub>Cr </sub>to qP<sub>Cr</sub>.</p><p id="p-0142" num="0127">Finally, the chroma quantization parameters for the Cb and Cr components, Qp&#x2032;<sub>Cb </sub>and Qp&#x2032;<sub>Cr</sub>, are derived as follows.</p><p id="p-0143" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>Qp&#x2032;</i><sub>Cb</sub><i>=qP</i><sub>Cb</sub><i>+QpBd</i>Offset<sub>C </sub><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0144" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>Qp&#x2032;</i><sub>Cr</sub><i>=qP</i><sub>Cr</sub><i>+QpBd</i>Offset<sub>C</sub>&#x2003;&#x2003;[Math Figure 11]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0145" num="0128">QpBdOffset<sub>C </sub>specifies the value of the chroma quantization parameter range offset and it depends on the bit_depth_chroma_minus8 (i.e. bit depth of chroma&#x2212;8) as follows.</p><p id="p-0146" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>QpBd</i>Offset<sub>C</sub>=6*bit_depth_chroma_minus8&#x2003;&#x2003;[Math Figure 12]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0147" num="0129">Meanwhile, Table 4 represents the definitions of the syntax elements which are used in the present descriptions.</p><p id="p-0148" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="287pt" align="left"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 4</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>init_qp_minus26 specifies the initial value minus 26 of SliceQp<sub>Y </sub>for each slice. The initial</entry></row><row><entry>value is modified at the slice segment layer when a non-zero value of slice_qp_delta is</entry></row><row><entry>decoded, and is modified further when a non-zero value of cu_qp_delta_abs is decoded at</entry></row><row><entry>the coding unit layer. The value of init_qp_minus26 shall be in the range of</entry></row><row><entry>&#x2212;( 26 + QpBdOffset<sub>Y </sub>) to +25, inclusive.</entry></row><row><entry>slice_qp_delta specifies the initial value of Qp<sub>Y </sub>to be used for the coding blocks in the</entry></row><row><entry>slice until modified by the value of CuQpDeltaVal in the coding unit layer. The initial value</entry></row><row><entry>of the Qp<sub>Y </sub>quantization parameter for the slice, SliceQp<sub>Y</sub>, is derived as follows:</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="259pt" align="left"/><tbody valign="top"><row><entry/><entry>&#x2003;SliceQp<sub>Y </sub>= 26 + init_qp_minus26 + slice_qp_delta</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="287pt" align="left"/><tbody valign="top"><row><entry>The value of SliceQp<sub>Y </sub>shall be in the range of &#x2212;QpBdOffset<sub>Y </sub>to +51, inclusive.</entry></row><row><entry>slice_cb_qp_offset specifies a difference to be added to the value of pps_cb_qp_offset</entry></row><row><entry>when determining the value of the Qp&#x2032;<sub>Cb </sub>quantization parameter. The value of</entry></row><row><entry>slice_cb_qp_offset shall be in the range of &#x2212;12 to +12, inclusive. When slice_cb_qp_offset</entry></row><row><entry>is not present, it is inferred to be equal to 0. The value of</entry></row><row><entry>pps_cb_qp_offset + slice_cb_qp_offset shall be in the range of &#x2212;12 to +12, inclusive.</entry></row><row><entry>slice_cr_qp_offset specifies a difference to be added to the value of pps_cr_qp_offset</entry></row><row><entry>when determining the value of the Qp&#x2032;<sub>Cr </sub>quantization parameter. The value of</entry></row><row><entry>slice_cr_qp_offset shall be in the range of &#x2212;12 to +12, inclusive. When slice_cr_qp_offset</entry></row><row><entry>is not present, it is inferred to be equal to 0. The value of</entry></row><row><entry>pps_cr_qp_offset + slice_cr_qp_offset shall be in the range of &#x2212;12 to +12, inclusive.</entry></row><row><entry>cu_qp_delta_abs specifies the absolute value of the difference CuQpDeltaVal between the</entry></row><row><entry>luma quantization parameter of the current coding unit and its prediction.</entry></row><row><entry>cu_qp_delta_sign_flag specifies the sign of CuQpDeltaVal as follows:</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="28pt" align="left"/><colspec colname="2" colwidth="259pt" align="left"/><tbody valign="top"><row><entry>-</entry><entry>If cu_qp_delta_sign_flag is equal to 0, the corresponding CuQpDeltaVal has a positive</entry></row><row><entry/><entry>value.</entry></row><row><entry>-</entry><entry>Otherwise (cu_qp_delta_sign_flag is equal to 1), the corresponding CuQpDeltaVal has</entry></row><row><entry/><entry>a negative value.</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="287pt" align="left"/><tbody valign="top"><row><entry>When cu_qp_delta_sign_flag is not present, it is inferred to be equal to 0.</entry></row><row><entry>When cu_qp_delta_abs is present, the variables IsCuQpDeltaCoded and CuQpDeltaVal are</entry></row><row><entry>derived as follows:</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="245pt" align="left"/><colspec colname="2" colwidth="14pt" align="left"/><tbody valign="top"><row><entry/><entry>&#x2003;IsCuQpDeltaCoded = 1</entry><entry>)</entry></row><row><entry/><entry>&#x2003;CuQpDeltaVal = cu_qp_delta_abs * ( 1 &#x2212; 2 * cu_qp_delta_sign_flag )</entry><entry>)</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="287pt" align="left"/><tbody valign="top"><row><entry>The value of CuQpDeltaVal shall be in the range of &#x2212;( 26 + QpBdOffset<sub>Y </sub>/ 2 ) to</entry></row><row><entry>+( 25 + QpBdOffset<sub>Y </sub>/ 2 ), inclusive.</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0149" num="0130"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow chart illustrating a process of reconstructing a picture according to another embodiment.</p><p id="p-0150" num="0131">As S<b>600</b>, S<b>610</b> and S<b>630</b> through S<b>670</b> are correspond to S<b>500</b> through S<b>560</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, detailed description overlapping with the above description will be omitted or simplified.</p><p id="p-0151" num="0132">According to an embodiment, decoding apparatus may receive bitstream (S<b>600</b>), perform entropy decoding (S<b>610</b>), perform inverse quantization (S<b>60</b>), determine whether to perform inverse transform (S<b>640</b>), perform inverse transform (S<b>650</b>), perform prediction (S<b>660</b>) and generate reconstructed samples (S<b>670</b>). And, in addition, decoding apparatus may derive QP offset (S<b>620</b>) based on the entropy decoding and perform inverse quantization based on the derivation of the QP offset.</p><p id="p-0152" num="0133">S<b>620</b> may be specified as shown below. At the following, the QP offset may be represented by &#x201c;Luma_avg_qp&#x201d;.</p><p id="p-0153" num="0134">Once qP<sub>Y_PRED </sub>is determined then luma quantization parameter may be updated by adding Luma_avg_qp as follow.</p><p id="p-0154" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>QpY</i>=((<i>qPY</i>_PRED+<i>CuQp</i>DeltaVal+Luma_avg_<i>qp+</i>52+2<i>*QpBd</i>Offset<i>Y</i>)%(52<i>+QpBd</i>Offset<i>Y</i>))&#x2212;<i>QpBd</i>Offset<i>Y</i>&#x2003;&#x2003;[Math Figure 13]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0155" num="0135">In one example Luma_avg_qp may be derived (or inferred) from luma values of neighboring pixels (or blocks) which are already decoded and available. Luma_avg_qp may be determined from the neighboring pixel values based on predefined derivation rule. For example Luma_avg_qp may be derived as follows.</p><p id="p-0156" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Luma_avg_<i>qp=A</i>*(avg_luma&#x2212;<i>M</i>)+<i>B.</i>&#x2003;&#x2003;[Math Figure 14]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0157" num="0136">In Math Figure 14, avg_luma: the expected average luma value obtained from available (decoded) neighboring pixels (or blocks),</p><p id="p-0158" num="0137">M: a predefined value which may depend on the bit-depth,</p><p id="p-0159" num="0138">A: scaling factor to map pixel value difference to qp difference (may be pre-defined or be transmitted in bitstream). It indicates the slope of qp mapping, and</p><p id="p-0160" num="0139">B: offset value which may be pre-defined or be transmitted in bitstream.</p><p id="p-0161" num="0140">Luma_avg_qp derivation from avg_luma value may not be restricted by the above expressed formula which is one of its plurality. In another example, Luma_avg_qp may be obtained from table mapping as follows.</p><p id="p-0162" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Luma_avg_<i>qp</i>=Mapping_Table_from_luma_to_<i>QP</i>[avg_luma]&#x2003;&#x2003;[Math Figure 15]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0163" num="0141">where avg_luma is input to the table and output of the table is Luma_avg_qp. In order to reduce the table size, the input value (avg_luma) range may be further reduced as follows.</p><p id="p-0164" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Luma_avg_<i>qp</i>=Mapping_Table_from_luma_to_<i>QP</i>[avg_luma/<i>D</i>]&#x2003;&#x2003;[Math Figure 16]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0165" num="0142">where D is a predefined constant value to reduce the range of input values.</p><p id="p-0166" num="0143">In an embodiment, Luma_avg_qp may be derived based on information on the QP. Decoding apparatus may obtain the information on the QP from the bitstream. In one example, the information on the QP may comprises init_qp_minus26, slice_qp_delta, slice_cb_qp_offset, slice_cr_qp_offset, cu_qp_delta_abs and cu_qp_delta_sign_flag. Further, the information on the QP is not limited by the above listed examples.</p><p id="p-0167" num="0144"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart illustrating an operation of an encoding apparatus according to an embodiment, and <figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating a configuration of an encoding apparatus according to an embodiment.</p><p id="p-0168" num="0145">Each step disclosed in <figref idref="DRAWINGS">FIG. <b>7</b></figref> can be performed by the encoding apparatus <b>100</b> disclosed in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. More specifically, S<b>700</b> to S<b>730</b> may be performed by the quantization module <b>123</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and S<b>740</b> may be performed by the entropy encoding module <b>130</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In addition, operations according to S<b>700</b> to S<b>740</b> are based on some of the descriptions described above in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. Therefore, detailed description overlapping with the above-described contents in <figref idref="DRAWINGS">FIG. <b>1</b></figref> and <figref idref="DRAWINGS">FIG. <b>6</b></figref> will be omitted or simplified.</p><p id="p-0169" num="0146">As illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, encoding apparatus according to an embodiment may comprise quantization module <b>123</b> and entropy encoding module <b>130</b>. However, in some cases, all of the components shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref> may not be essential components of the encoding apparatus may be implemented by more or fewer components than those shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0170" num="0147">The quantization module <b>123</b> and the entropy encoding module <b>130</b> in the decoding apparatus according to an embodiment may be implemented as separate chips, or at least two or more components may be implemented through one chip.</p><p id="p-0171" num="0148">The encoding apparatus according to an embodiment may derive an expected average luma value of a current block from neighboring available samples (S<b>700</b>). More specifically, the quantization module <b>123</b> of the encoding apparatus may derive an expected average luma value of a current block from neighboring available samples.</p><p id="p-0172" num="0149">The encoding apparatus according to an embodiment may derive a QP offset for deriving a luma QP based on the expected average luma value and information on a QP (S<b>710</b>). More specifically, the quantization module <b>123</b> of the encoding apparatus may derive a QP offset for deriving a luma QP based on the expected average luma value and information on a QP.</p><p id="p-0173" num="0150">The encoding apparatus according to an embodiment may derive the luma QP based on the QP offset (S<b>720</b>). More specifically, the quantization module <b>123</b> of the encoding apparatus may derive the luma QP based on the QP offset.</p><p id="p-0174" num="0151">The encoding apparatus according to an embodiment may perform a quantization for a quantization group comprising the current block based on the derived luma QP (S<b>730</b>). More specifically, the quantization module <b>123</b> of the encoding apparatus may perform a quantization for a quantization group comprising the current block based on the derived luma QP.</p><p id="p-0175" num="0152">The encoding apparatus according to an embodiment may encode image information comprising the information on the QP (S<b>740</b>). More specifically, the entropy encoding module <b>130</b> may encode image information comprising the information on the QP.</p><p id="p-0176" num="0153">According to <figref idref="DRAWINGS">FIG. <b>7</b></figref> and <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the encoding apparatus according to an embodiment may derive an expected average luma value of a current block from neighboring available samples (S<b>700</b>), derive a QP offset for deriving a luma QP based on the expected average luma value and information on a QP (S<b>710</b>), perform a quantization for a quantization group comprising the current block based on the derived luma QP (S<b>730</b>), and encode image information comprising the information on the QP (S<b>740</b>). Consequently, the quantization parameter may be derived efficiently and overall coding efficiency may be enhanced.</p><p id="p-0177" num="0154"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow chart illustrating an operation of a decoding apparatus according to an embodiment, and <figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram illustrating a configuration of a decoding apparatus according to an embodiment.</p><p id="p-0178" num="0155">Each step disclosed in <figref idref="DRAWINGS">FIG. <b>9</b></figref> can be performed by the decoding apparatus <b>200</b> disclosed in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. More specifically, S<b>900</b> may be performed by the entropy decoding module <b>210</b> shown in <figref idref="DRAWINGS">FIGS. <b>2</b></figref>, S<b>910</b> to S<b>940</b> may be performed by the inverse quantization module <b>222</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, S<b>950</b> may be performed by the inverse transform module <b>223</b> as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, S<b>960</b> may be performed by the prediction module <b>230</b> as shown in <figref idref="DRAWINGS">FIGS. <b>2</b></figref> and S<b>970</b> may be performed by the adder <b>240</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In addition, operations according to S<b>900</b> to S<b>970</b> are based on some of the descriptions described above in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. Therefore, detailed description overlapping with the above-described contents in <figref idref="DRAWINGS">FIG. <b>2</b></figref> and <figref idref="DRAWINGS">FIG. <b>6</b></figref> will be omitted or simplified.</p><p id="p-0179" num="0156">As illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, decoding apparatus according to an embodiment may comprise entropy decoding module <b>210</b>, inverse quantization module <b>222</b>, inverse transform module <b>223</b>, prediction module <b>230</b>, and adder <b>240</b>. However, in some cases, all of the components shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> may not be essential components of the encoding apparatus may be implemented by more or fewer components than those shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0180" num="0157">The entropy decoding module <b>210</b>, inverse quantization module <b>222</b>, inverse transform module <b>223</b>, prediction module <b>230</b>, and adder <b>240</b> in the decoding apparatus according to an embodiment may be implemented as separate chips, or at least two or more components may be implemented through one chip.</p><p id="p-0181" num="0158">The decoding apparatus according to an embodiment may decode image information comprising information on a QP (S<b>900</b>). More specifically, entropy decoding module <b>210</b> in the decoding apparatus may decode image information comprising information on a QP.</p><p id="p-0182" num="0159">In one embodiment, the information on the QP is signaled in Sequence Parameter Set (SPS) level.</p><p id="p-0183" num="0160">In one embodiment, the image information comprises information on Effective Data Range Parameters (EDRP), and the information on the EDRP comprises at least one of a minimum input value, a maximum input value, dynamic range of input value, mapping information for relating the minimum input value with brightness, mapping information for relating the maximum input value with brightness and identification information of transfer function. This method may be indicated as range matching.</p><p id="p-0184" num="0161">More specifically, this invention may be utilized to efficiently code image/video contents where the range of code words (input value) is restricted. It may occur often in HDR content because of using transfer function supports high luminance. It may also occur when transforming SDR data using a luminance transform functions corresponding to HDR data. In these cases, a video encoder may be configured to signal effective data range parameters (EDRP). And decoder may be configured to receive EDRP associated with the video data, and utilize EDRP data in decoding process. EDRP data may include, for example, minimum input value, maximum input value, dynamic range of the input value (indicates the difference between maximum input value and minimum input value), mapping information between minimum input value and its corresponding brightness, mapping information between maximum input value and its corresponding brightness, transfer function identification (known transfer functions may be identified by their assigned ID number and the detailed mapping information for each transfer function may be available), and so on.</p><p id="p-0185" num="0162">For example, EDRP data may be signaled in a slice header, a picture parameter set (PPS), or sequence parameter set (SPS). In this manner, EDRP data may be used to further modify coded values during decoding process.</p><p id="p-0186" num="0163">This invention introduces quality control parameter (QCP) to specify further adjustment of quantization parameter. And decoder may be configured to receive QCP associated with the video data, and utilize QCP data in decoding process.</p><p id="p-0187" num="0164">The decoding apparatus according to an embodiment may derive an expected average luma value of a current block from neighboring available samples (S<b>910</b>). More specifically, inverse quantization module <b>222</b> in the decoding apparatus may derive an expected average luma value of a current block from neighboring available samples.</p><p id="p-0188" num="0165">The decoding apparatus according to an embodiment may derive a QP offset for deriving a luma QP based on the expected average luma value and the information on the QP (S<b>920</b>). More specifically, inverse quantization module <b>222</b> in the decoding apparatus may derive a QP offset for deriving a luma QP based on the expected average luma value and the information on the QP.</p><p id="p-0189" num="0166">In one embodiment, the QP offset is derived based on a below equation.</p><p id="p-0190" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>Luma_avg_<i>qp=A</i>*(avg_luma&#x2212;<i>M</i>)+<i>B</i>&#x2003;&#x2003;[Math Figure 17]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0191" num="0167">wherein the Luma_avg_qp in the equation represents the QP offset, the avg_luma in the equation represents the expected average luma value, the A in the equation represents a scaling factor for mapping a pixel value difference to a QP difference, the M in the equation represents a predefined value related to a bit-depth, and the B in the equation represents a offset value, and wherein the A and the B are predetermined values or values included in the image information.</p><p id="p-0192" num="0168">In one embodiment, the QP offset is derived from a mapping table which is based on the expected average luma value, and the mapping table is determined by using the expected average luma value as an input.</p><p id="p-0193" num="0169">In one embodiment, the QP offset is derived from a mapping table which is based on the expected average luma value, and the mapping table is determined by using a value obtained by dividing the expected average luma value with a predefined constant value.</p><p id="p-0194" num="0170">In one embodiment, the neighboring available samples comprise at least one of at least one luma sample adjacent to left boundary of the quantization group and at least one luma sample adjacent to upper boundary of the quantization group.</p><p id="p-0195" num="0171">In one embodiment, the at least one luma sample adjacent to the left boundary of the quantization group is included in a luma sample column directly adjacent to the left boundary of the quantization group, and the at least one luma sample adjacent to the upper boundary of the quantization group is included in a luma sample row directly adjacent to the upper boundary of the quantization group.</p><p id="p-0196" num="0172">In one embodiment, the neighboring available samples comprise a luma sample adjacent to left side of top-left sample of the quantization group, and the neighboring available samples comprise a luma sample adjacent to upper side of top-left sample of the quantization group.</p><p id="p-0197" num="0173">In one embodiment, the neighboring available samples comprise at least one of reconstructed neighboring samples, samples included in at least one of reconstructed neighboring block, predicted neighboring samples and samples included in at least one of predicted neighboring block.</p><p id="p-0198" num="0174">In one embodiment, avg_luma may be derived from neighboring pixel values (blocks). avg_luma indicates the expected average luma value obtained from available (already decoded) neighboring pixels (or blocks).</p><p id="p-0199" num="0175">i) Available neighbring pixels may include:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0176">Pixels located in (xQg&#x2212;1, yQg+K) Here, the luma location (xQg, yQg), specifies the top-left luma sample of the current quantization group relative to the top left luma sample of the current picture. (the very left line to the current block)</li>        <li id="ul0002-0002" num="0177">Pixels located in (xQg+K, yQg&#x2212;1) Here, the luma location (xQg, yQg), specifies the top-left luma sample of the current quantization group relative to the top left luma sample of the current picture. (the very above line to the current block)</li>        <li id="ul0002-0003" num="0178">Instead of one line, multiple lines may be used.</li>    </ul>    </li></ul></p><p id="p-0200" num="0179">ii) Available neighbring block may be used to calculate avg_luma:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0180">A block including a pixel located at (xQg&#x2212;1, yQg) may be used</li>        <li id="ul0004-0002" num="0181">A block including a pixel located at (xQg, yQg&#x2212;1) may be used</li>    </ul>    </li></ul></p><p id="p-0201" num="0182">iii) Avg_luma value may be calculated based on reconstructed neiboring pixels/blocks.</p><p id="p-0202" num="0183">iv) Avg_luma value may be calculated based on predicted neiboring pixels/blocks.</p><p id="p-0203" num="0184">In one embodiment, the information on the QP comprises at least one syntax element related to the QP offset, and the deriving the QP offset based on the at least one of the expected average luma value and the information on the QP comprises deriving the QP offset based on at least one syntax element related to the QP offset.</p><p id="p-0204" num="0185">A new syntax element may be introduced to consider Luma_avg_qp. For example, Luma_avg_qp value may be transmitted over bitstram. It may further be specified through two syntax elements, such as Luma_avg_qp_abs and Luma_avg_qp_flag.</p><p id="p-0205" num="0186">Luma_avg_qp may be indicated by two syntax elements (luma_avg_qp_delta_abs and luma_avg_qp_delta_sign_flag).</p><p id="p-0206" num="0187">luma_avg_qp_delta_abs specifies the absolute value of the difference CuQpDeltaLumaVal between the luma quantization parameter of the current coding unit and its luma quantization parameter derived without considering luminance.</p><p id="p-0207" num="0188">luma_avg_qp_delta_sign_flag specifies the sign of CuQpDeltaLumaVal as follows:</p><p id="p-0208" num="0189">If luma_avg_qp_delta_sign_flag is equal to 0, the corresponding CuQpDeltaLumaVal has a positive value.</p><p id="p-0209" num="0190">Otherwise (luma_avg_qp_delta_sign_flag is equal to 1), the corresponding CuQpDeltaLumaVal has a negative value.</p><p id="p-0210" num="0191">When luma_avg_qp_delta_sign_flag is not present, it is inferred to be equal to 0.</p><p id="p-0211" num="0192">When luma_avg_qp_delta_sign_flag is present, the variables IsCuQpDeltaLumaCoded and CuQpDeltaLumaVal are derived as follows:</p><p id="p-0212" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>IsCuQp</i>DeltaLumaCoded=1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0213" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>CuQp</i>DeltaLumaVal=<i>cu</i>_<i>qp</i>_delta_abs*(1&#x2212;2*luma_avg_<i>qp</i>_delta_sign_flag)&#x2003;&#x2003;[Math Figure 18]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0214" num="0193">CuQpDeltaLumaVal specifies the difference between a luma quantization parameter for the coding unit containing Luma_avg_qp and a luma quantization parameter for the coding unit without Luma_avg_qp.</p><p id="p-0215" num="0194">In one embodiment, syntax elements described above may be transmitted in a quantization group level (or quantization unit level)(for example, CU, CTU or predefined block unit).</p><p id="p-0216" num="0195">The decoding apparatus according to an embodiment may derive the luma QP based on the QP offset (S<b>930</b>). More specifically, inverse quantization module <b>222</b> in the decoding apparatus may derive the luma QP based on the QP offset.</p><p id="p-0217" num="0196">The decoding apparatus according to an embodiment may perform an inverse quantization for a quantization group comprising the current block based on the derived luma QP (S<b>940</b>). More specifically, inverse quantization module <b>222</b> in the decoding apparatus may perform an inverse quantization for a quantization group comprising the current block based on the derived luma QP.</p><p id="p-0218" num="0197">In one embodiment, the decoding apparatus may derive a chroma QP from the derived luma QP based on at least one chroma QP mapping table and perform the inverse quantization for the quantization group based on the derived luma QP and the derived chroma QP, wherein the at least one chroma QP mapping table is based on dynamic range of chroma and the QP offset.</p><p id="p-0219" num="0198">In one embodiment, instead of one chroma QP mapping table, multiple chroma QP derivation table may exist. Additional information may be required to specify what QP mapping table to be used. The following is an example of another chroma QP derivation table.</p><p id="p-0220" num="0000"><tables id="TABLE-US-00005" num="00005"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="17"><colspec colname="1" colwidth="21pt" align="left"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="14pt" align="center"/><colspec colname="4" colwidth="14pt" align="center"/><colspec colname="5" colwidth="14pt" align="center"/><colspec colname="6" colwidth="14pt" align="center"/><colspec colname="7" colwidth="14pt" align="center"/><colspec colname="8" colwidth="14pt" align="center"/><colspec colname="9" colwidth="14pt" align="center"/><colspec colname="10" colwidth="14pt" align="center"/><colspec colname="11" colwidth="14pt" align="center"/><colspec colname="12" colwidth="14pt" align="center"/><colspec colname="13" colwidth="14pt" align="center"/><colspec colname="14" colwidth="14pt" align="center"/><colspec colname="15" colwidth="14pt" align="center"/><colspec colname="16" colwidth="14pt" align="center"/><colspec colname="17" colwidth="42pt" align="center"/><thead><row><entry namest="1" nameend="17" rowsep="1">TABLE 5</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row><row><entry>qPi<sub>Cb</sub></entry><entry>&#x3c;26</entry><entry>26</entry><entry>27</entry><entry>28</entry><entry>29</entry><entry>30</entry><entry>31</entry><entry>32</entry><entry>33</entry><entry>34</entry><entry>35</entry><entry>36</entry><entry>37</entry><entry>38</entry><entry>39</entry><entry>&#x3e;39</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>qP<sub>Cb</sub></entry><entry>=qPi<sub>Cb</sub></entry><entry>26</entry><entry>27</entry><entry>27</entry><entry>28</entry><entry>29</entry><entry>29</entry><entry>30</entry><entry>30</entry><entry>31</entry><entry>31</entry><entry>32</entry><entry>32</entry><entry>33</entry><entry>33</entry><entry>=qPi<sub>Cb </sub>&#x2212; 6</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0221" num="0199">In one embodiment, the at least one chroma QP mapping table comprises at least one Cb QP mapping table and at least one Cr QP mapping table.</p><p id="p-0222" num="0200">The decoding apparatus according to an embodiment may generate residual samples for the current block based on the inverse quantization (S<b>950</b>). More specifically, inverse transform module <b>223</b> in the decoding apparatus may generate residual samples for the current block based on the inverse quantization.</p><p id="p-0223" num="0201">The decoding apparatus according to an embodiment may generate prediction samples for the current block based on the image information (S<b>960</b>). More specifically, prediction module <b>230</b> in the decoding apparatus may generate prediction samples for the current block based on the image information.</p><p id="p-0224" num="0202">The decoding apparatus according to an embodiment may generate reconstructed samples for the current block based on the residual samples for the current block and the prediction samples for the current block (S<b>970</b>). More specifically, adder in the decoding apparatus may generate reconstructed samples for the current block based on the residual samples for the current block and the prediction samples for the current block.</p><p id="p-0225" num="0203">According to <figref idref="DRAWINGS">FIG. <b>9</b></figref> and <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the decoding apparatus according to an embodiment may decode image information comprising information on a QP (S<b>900</b>), derive an expected average luma value of a current block from neighboring available samples (S<b>910</b>), derive a QP offset for deriving a luma QP based on the expected average luma value and the information on the QP (S<b>920</b>), derive the luma QP based on the QP offset (S<b>930</b>), perform an inverse quantization for a quantization group comprising the current block based on the derived luma QP (S<b>940</b>), generate residual samples for the current block based on the inverse quantization (S<b>950</b>), generate prediction samples for the current block based on the image information (S<b>960</b>), and generate reconstructed samples for the current block based on the residual samples for the current block and the prediction samples for the current block (S<b>970</b>). Consequently, the quantization parameter may be derived efficiently and overall coding efficiency may be enhanced.</p><p id="p-0226" num="0204">The above-described method according to the present invention can be implemented in software, and the encoding apparatus and/or decoding apparatus according to the present invention may be included in image processing apparatus such as a TV, a computer, a smart phone, display device, etc.</p><p id="p-0227" num="0205">When the embodiments of the present invention are implemented in software, the above-described method may be implemented by a module (a process, a function, and the like) that performs the functions described above. The module is stored in memory and can be executed by the processor. The memory may be internal or external to the processor and may be coupled to the processor by any of a variety of well known means. The processor may include an application specific integrated circuit (ASIC), other chipset, logic circuitry and/or a data processing device. The memory may include read-only memory (ROM), random access memory (RAM), flash memory, memory cards, storage media, and/or other storage devices.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-15" num="01-15"><claim-text><b>1</b>-<b>15</b>. (canceled)</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A picture decoding method performed by a decoding apparatus, the method comprising:<claim-text>obtaining image information including information related to a quantization parameter (QP) from a bitstream, wherein the information related to the QP includes information related to a luma QP and information related to chroma QPs;</claim-text><claim-text>deriving the luma QP based on the information related to the luma QP;</claim-text><claim-text>deriving the chroma QPs based on the information related to the chroma QPs, wherein the chroma QPs include a first chroma QP for a Cb component and a second chroma QP for a Cr component;</claim-text><claim-text>generating a reconstructed picture including reconstructed samples based on the luma QP, the first chroma QP for the Cb component and the second chroma QP for the Cr component,</claim-text><claim-text>wherein deriving the luma QP based on the information related to the luma QP comprises:</claim-text><claim-text>driving a predicted luma QP based on a first luma QP a first luma QP of a coding unit containing a luma coding block covering (xQg&#x2212;1, yQg) and a second luma QP of a coding unit containing a luma coding block covering (xQg, yQg&#x2212;1), wherein (xQg, yQg) represents a top-left sample position of a current quantization group;</claim-text><claim-text>deriving a QP delta value based on information on an absolute value of the QP delta value and information on a sign of the QP delta value, wherein the information on the absolute value of the QP delta value and information on the sign of the QP delta value is included in the information related to the luma QP; and</claim-text><claim-text>deriving the luma QP based on the predicted luma QP and the QP delta value,</claim-text><claim-text>wherein deriving the chroma QPs comprises:</claim-text><claim-text>deriving the first chroma QP for the Cb component based on the luma QP and a first chroma QP mapping table for the Cb component; and</claim-text><claim-text>deriving the second chroma QP for the Cr component based on the luma QP and a second chroma QP mapping table for the Cr component,</claim-text><claim-text>wherein both an input of the first chroma QP mapping table and an input of the second chroma mapping table are based on the luma QP,</claim-text><claim-text>wherein the first chroma QP mapping table for the Cb component is a separate mapping table from the second chroma QP mapping table for the Cr component, and</claim-text><claim-text>wherein the first chroma QP for the Cb component derived based on the first chroma QP mapping table for the Cb component is different from the second chroma QP for the Cr component derived based on the second chroma QP mapping table for the Cr component.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The picture decoding method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the information related to the QP is signaled in Sequence Parameter Set (SPS) level.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The picture decoding method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the image information comprises information on Effective Data Range Parameters (EDRP), and<claim-text>wherein the information on the EDRP comprises at least one of a minimum input value, a maximum input value, dynamic range of input value, mapping information for relating the minimum input value with brightness, mapping information for relating the maximum input value with brightness and identification information of transfer function.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A picture encoding method performed by an encoding apparatus, the method comprising:<claim-text>deriving a luma quantization parameter (QP) for a current block;</claim-text><claim-text>deriving chroma QPs, wherein the chroma QPs include a first chroma QP for a Cb component and a second chroma QP for a Cr component for the current block;</claim-text><claim-text>generating information related to QP; and</claim-text><claim-text>encoding image information comprising the information related to the QP,</claim-text><claim-text>wherein the information related to the QP includes information related to the luma QP and information related to the chroma QPs,</claim-text><claim-text>wherein the luma QP is represented based on a predicted luma QP and a QP delta value,</claim-text><claim-text>wherein the predicted luma QP is derived based on a first luma QP a first luma QP of a coding unit containing a luma coding block covering (xQg&#x2212;1, yQg) and a second luma QP of a coding unit containing a luma coding block covering (xQg, yQg&#x2212;1), wherein (xQg, yQg) represents a top-left sample position of a current quantization group,</claim-text><claim-text>wherein the information related to the luma QP includes information on an absolute value of a QP delta value and information on a sign of the QP delta value,</claim-text><claim-text>wherein deriving the chroma QPs comprises:</claim-text><claim-text>deriving the first chroma QP for the Cb component based on the luma QP and a first chroma QP mapping table for the Cb component; and</claim-text><claim-text>deriving the second chroma QP for the Cr component based on the luma QP and a second chroma QP mapping table for the Cr component,</claim-text><claim-text>wherein both an input of the first chroma QP mapping table and an input of the second chroma mapping table are based on the luma QP,</claim-text><claim-text>wherein the first chroma QP mapping table for the Cb component is a separate mapping table from the second chroma QP mapping table for the Cr component, and</claim-text><claim-text>wherein the first chroma QP for the Cb component derived based on the first chroma QP mapping table for the Cb component is different from the second chroma QP for the Cr component derived based on the second chroma QP mapping table for the Cr component.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The picture encoding method of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the information related to the QP is signaled in Sequence Parameter Set (SPS) level.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The picture encoding method of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the image information comprises information on Effective Data Range Parameters (EDRP) and<claim-text>wherein the information on the EDRP comprises at least one of a minimum input value, a maximum input value, dynamic range of input value, mapping information for relating the minimum input value with brightness, mapping information for relating the maximum input value with brightness and identification information of transfer function.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. A non-transitory computer-readable storage medium storing encoded image information generated by a method, the method comprising:<claim-text>deriving a luma quantization parameter (QP) for a current block;</claim-text><claim-text>deriving chroma QPs, wherein the chroma QPs include a first chroma QP for a Cb component and a second chroma QP for a Cr component for the current block;</claim-text><claim-text>generating information related to QP; and</claim-text><claim-text>encoding image information comprising the information related to the QP,</claim-text><claim-text>wherein the information related to the QP includes information related to the luma QP and information related to the chroma QPs,</claim-text><claim-text>wherein the luma QP is represented based on a predicted luma QP and a QP delta value,</claim-text><claim-text>wherein the predicted luma QP is derived based on a first luma QP a first luma QP of a coding unit containing a luma coding block covering (xQg&#x2212;1, yQg) and a second luma QP of a coding unit containing a luma coding block covering (xQg, yQg&#x2212;1), wherein (xQg, yQg) represents a top-left sample position of a current quantization group,</claim-text><claim-text>wherein the information related to the luma QP includes information on an absolute value of a QP delta value and information on a sign of the QP delta value,</claim-text><claim-text>wherein deriving the chroma QPs comprises:</claim-text><claim-text>deriving the first chroma QP for the Cb component based on the luma QP and a first chroma QP mapping table for the Cb component; and</claim-text><claim-text>deriving the second chroma QP for the Cr component based on the luma QP and a second chroma QP mapping table for the Cr component,</claim-text><claim-text>wherein both an input of the first chroma QP mapping table and an input of the second chroma mapping table are based on the luma QP,</claim-text><claim-text>wherein the first chroma QP mapping table for the Cb component is a separate mapping table from the second chroma QP mapping table for the Cr component, and</claim-text><claim-text>wherein the first chroma QP for the Cb component derived based on the first chroma QP mapping table for the Cb component is different from the second chroma QP for the Cr component derived based on the second chroma QP mapping table for the Cr component.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the information related to the QP is signaled in Sequence Parameter Set (SPS) level.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the image information comprises information on Effective Data Range Parameters (EDRP) and<claim-text>wherein the information on the EDRP comprises at least one of a minimum input value, a maximum input value, dynamic range of input value, mapping information for relating the minimum input value with brightness, mapping information for relating the maximum input value with brightness and identification information of transfer function.</claim-text></claim-text></claim></claims></us-patent-application>