<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004885A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004885</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17854700</doc-number><date>20220630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>01</class><subclass>N</subclass><main-group>35</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>0633</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>N</subclass><main-group>35</main-group><subgroup>00871</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>N</subclass><main-group>2035</main-group><subgroup>0091</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR PROCESSING EXPERIMENTAL WORKFLOWS AT  REMOTE LABORATORIES</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63218265</doc-number><date>20210702</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>STRATEOS, INC.</orgname><address><city>Menlo Park</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Biggers</last-name><first-name>Vanessa</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Lopez</last-name><first-name>Eriberto</first-name><address><city>Costa Mesa</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Nowak</last-name><first-name>Joshua David</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">System and method for processing one or more experimental workflows. For example, the method includes receiving an indication of an experimental workflow selected by a user, generating workflow configuration requirements for the experimental workflow, presenting a user interface to enable input of parameters to configure the experimental workflow in accordance with the workflow configuration requirements, performing a validation of the parameters, configuring the experimental workflow based upon the validated parameters, and transforming the configured experimental workflow into machine executable codes for execution by devices at remote laboratories.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="74.51mm" wi="158.75mm" file="US20230004885A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="213.53mm" wi="119.80mm" orientation="landscape" file="US20230004885A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="199.81mm" wi="112.69mm" orientation="landscape" file="US20230004885A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="212.01mm" wi="151.38mm" orientation="landscape" file="US20230004885A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority to U.S. Provisional Patent Application No. 63/218,265, filed Jul. 2, 2021, which is incorporated by reference herein for all purposes.</p><p id="p-0003" num="0002">The following four applications, including this one, are being filed concurrently and the other applications are hereby incorporated by reference in their entirety for all purposes:</p><p id="p-0004" num="0003">1. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Processing Experimental Workflows at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000014); and</p><p id="p-0005" num="0004">2. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Managing Experimental Requests at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000015).</p><p id="p-0006" num="0005">3. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Processing Experimental Requests at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000016).</p><p id="p-0007" num="0006">4. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Performing Experiments at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000017).</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE DISCLOSURE</heading><p id="p-0008" num="0007">Some embodiments of the present disclosure are directed to processing experimental workflows. More particularly, certain embodiments of the present disclosure provide systems and methods for selecting and configuring an experimental workflow. Merely by way of example, the present disclosure has been applied to executing the configured experimental workflow at a remote laboratory. But it would be recognized that the present disclosure has much broader range of applicability.</p><heading id="h-0003" level="1">BACKGROUND OF THE DISCLOSURE</heading><p id="p-0009" num="0008">Experiments performed at designated laboratories are limited by existing infrastructure. Remote laboratories, on the other hand, provide the opportunity to carry out different experiments with different scope at the same time. Accordingly, there exists a need to develop techniques that can enable users to scale to remote laboratory infrastructures when needing capability and/or capacity.</p><heading id="h-0004" level="1">BRIEF SUMMARY OF THE DISCLOSURE</heading><p id="p-0010" num="0009">Some embodiments of the present disclosure are directed to processing experimental workflows. More particularly, certain embodiments of the present disclosure provide systems and methods for selecting and configuring an experimental workflow. Merely by way of example, the present disclosure has been applied to executing the configured experimental workflow at a remote laboratory. But it would be recognized that the present disclosure has much broader range of applicability.</p><p id="p-0011" num="0010">According to certain embodiments, a method for processing one or more experimental workflows includes receiving an indication of an experimental workflow selected by a user. Also, the method includes generating workflow configuration requirements for the experimental workflow. Further, the method includes presenting a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the method includes performing a validation of the one or more parameters to configure the experimental workflow and configuring the experimental workflow based at least in part upon the validated one or more parameters. In addition, the method includes transforming the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories.</p><p id="p-0012" num="0011">According to some embodiments, a system for processing one or more experimental workflows includes one or more processors and a memory storing instructions for execution by the one or more processors. The instructions, when executed by the one or more processors, cause the system to receive an indication of an experimental workflow selected by a user. Also, the instructions, when executed by the one or more processors, cause the system to generate workflow configuration requirements for the experimental workflow. Further, the instructions, when executed by the one or more processors, cause the system to present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the instructions, when executed by the one or more processors, cause the system to perform a validation of the one or more parameters to configure the experimental workflow and configure the experimental workflow based at least in part upon the validated one or more parameters. In addition, the instructions, when executed by the one or more processors, cause the system to transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories.</p><p id="p-0013" num="0012">According to certain embodiments, a non-transitory computer-readable medium stores instructions for processing one or more experimental workflows. The instructions are executed by one or more processors of a computing device. The non-transitory computer-readable medium includes instructions to receive an indication of an experimental workflow selected by a user. Also, the non-transitory computer-readable medium includes instructions to generate workflow configuration requirements for the experimental workflow. Further, the non-transitory computer-readable medium includes instructions to present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the non-transitory computer-readable medium includes instructions to perform a validation of the one or more parameters to configure the experimental workflow and configure the experimental workflow based at least in part upon the validated one or more parameters. In addition, the non-transitory computer-readable medium includes instructions to transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories.</p><p id="p-0014" num="0013">Depending upon the embodiment, one or more benefits may be achieved. These benefits and various additional objects, features and advantages of the present disclosure can be fully appreciated with reference to the detailed description and accompanying drawings that follow.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a simplified method for processing experimental workflows according to certain embodiments of the present disclosure.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a simplified system for processing experimental workflows according to certain embodiments of the present disclosure.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a simplified diagram illustrating various modules for processing experimental workflows according to certain embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE DISCLOSURE</heading><p id="p-0018" num="0017">Some embodiments of the present disclosure are directed to processing experimental workflows. More particularly, certain embodiments of the present disclosure provide systems and methods for selecting and configuring an experimental workflow. Merely by way of example, the present disclosure has been applied to executing the configured experimental workflow at a remote laboratory. But it would be recognized that the present disclosure has much broader range of applicability.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a simplified method for processing experimental workflows according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The method <b>100</b> includes process <b>110</b> for receiving an experimental workflow, process <b>120</b> for generating experimental workflow requirements, process <b>130</b> for presenting a user interface, process <b>140</b> for validating parameters, process <b>150</b> for configuring the experimental workflow, and process <b>160</b> for executing the experimental workflow. Although the above has been shown using a selected group of processes for the method, there can be many alternatives, modifications, and variations. For example, some of the processes may be expanded and/or combined. Other processes may be inserted to those noted above. Depending upon the embodiment, the sequence of processes may be interchanged with others replaced.</p><p id="p-0020" num="0019">For example, some or all processes of the method are performed by a computing device or a processor directed by instructions stored in memory. As an example, some or all processes of the method are performed according to instructions stored in a non-transitory computer-readable medium.</p><p id="p-0021" num="0020">At the process <b>110</b>, an indication of the experimental workflow selected by a user is received according to certain embodiments. In some embodiments, a list of available experimental workflows is published for the user to select. In certain embodiments, the published list is generated based upon user data (e.g., user's access level, user group assignment, etc.) and/or experimental application data (e.g., experiment purpose, intended use, error tolerance, etc.).</p><p id="p-0022" num="0021">At the process <b>120</b>, workflow configuration requirements for the experimental workflow are generated according to certain embodiments. In some embodiments, the workflow configuration requirements include input type entities, data generated, workflow version, and/or published date.</p><p id="p-0023" num="0022">At the process <b>130</b>, the user interface is presented to enable input of one or more parameters to configure the experimental workflow according to certain embodiments. In various embodiments, the user interface is a configurable interface that allows the user to enter the one or more parameters to modify or customize the experimental workflow. For example, the one or more parameters include entities such as volume, comma separated value (CSV) configurations, and/or plate maps. In some embodiments, the user interface provides one or more fields which allow the user to select components from various sources such as laboratory inventory, commercial vendors (e.g., chemical compounds, synthesized materials, reagents, assay kits, etc.), and/or datasets.</p><p id="p-0024" num="0023">At the process <b>140</b>, a validation of the one or more parameters to configure the experimental workflow is performed according to certain embodiments. In some embodiments, performing the validation entails validating the one or more parameters based upon device constraints, experimental constraints, instruction dependencies, and/or experimental design boundaries. In certain embodiments, results from the validation are generated to show detailed steps of the experimental workflow (e.g., cost to execute, estimated time to complete, summary of components, summary of consumables, etc.). In some embodiments, the results may indicate which ones of the one or more parameters were valid and which ones were invalid.</p><p id="p-0025" num="0024">At the process <b>150</b>, the experimental workflow is configured based upon the validated one or more parameters according to certain embodiments. At the process <b>160</b>, the configured experimental workflow is transformed into one or more machine executable codes for execution by one or more devices at one or more remote laboratories according to certain embodiments. In various embodiments, the experimental workflow is executed by the one or more devices in accordance with the one or more machine executable codes. For example, the one or more machine executable codes are standardized and reproducible machine executable codes.</p><p id="p-0026" num="0025">In some embodiments, data (e.g., raw data, labeled data, analyzed data, etc.) generated in or near real-time from the execution of the experimental workflow are collected and stored. The data can be accessed via the user interface and/or through any suitable format (e.g., CSV, JavaScript object notation (JSON), etc.).</p><p id="p-0027" num="0026">In certain embodiments, the user interface enables the user to submit the configured experimental workflow to a queue for execution. In some embodiments, the user interface enables the user to request dates for executing the configured experimental workflow. In certain embodiments, the user interface enables the user to assign a funding source for the configured experimental workflow.</p><p id="p-0028" num="0027">In certain embodiments, the user interface enables the user to manage the experimental workflow by allowing access to experimental intent packages. For example, the user interface publishes the experimental intent packages to user groups. As an example, the user interface allows experimental intent scripts available to specified users to be collected. For example, the user interface displays user groups and defined roles for the users.</p><p id="p-0029" num="0028">In some embodiments, the user interface enables the user to manage the experimental workflow by allowing access to modify user roles, add users, and/or delete users associated with the experimental workflow. In certain embodiments, the user interface enables the user to manage the experimental workflow by allowing the selection or addition of a remote laboratory for executing the experimental workflow. In some embodiments, the user interface enables the user to manage the experimental workflow by allowing access to internal/external users, and/or other cloud-based laboratories.</p><p id="p-0030" num="0029">In certain embodiments, the user interface updates the status of the experimental workflow in or near real-time. In some embodiments, the user interface allows the user to view all information associated with the experimental workflows (e.g., status, entered parameters, generated data, data provenance, etc.).</p><p id="p-0031" num="0030">In some embodiments, user inputs received at the user interface and any underlying scripts are used to output human and machine-readable instructions that specify the execution of the experimental workflow.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a simplified system for processing experimental workflows according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The system <b>200</b> includes a client device <b>202</b>, a server <b>204</b> and a remote laboratory <b>206</b>. Although the above has been shown using a selected group of components for the system, there can be many alternatives, modifications, and variations. For example, some of the components may be expanded and/or combined. Other components may be inserted to those noted above. Depending upon the embodiment, the arrangement of components may be interchanged with others replaced.</p><p id="p-0033" num="0032">In various embodiments, the client device <b>202</b>, the server <b>204</b>, and the remote laboratory <b>206</b> are communicatively coupled to one another via a suitable network <b>208</b> (e.g., Internet, mobile communication network, virtual private network, local area network, etc.). In some embodiments, the server <b>204</b> is part of or located at the remote laboratory <b>206</b>. In certain embodiments, multiple remote laboratories <b>206</b> exist in the system <b>200</b>.</p><p id="p-0034" num="0033">In certain embodiments, a user (e.g., a scientist, a researcher, etc.) may use the client device <b>202</b> to communicate with the server <b>204</b> for processing experimental workflows executed at the remote laboratory <b>206</b>. For example, the server <b>204</b> executes one or more operations to implement the method <b>100</b>. In some embodiments, the server <b>204</b> includes a processor <b>210</b> and a memory <b>212</b>. For example, the processor <b>210</b> is configured to execute instructions and/or one or more modules <b>214</b> to perform the various operations associated with the method <b>100</b>. As an example, the instructions and the one or more modules <b>214</b> are stored in the memory <b>212</b>.</p><p id="p-0035" num="0034">In some embodiments, the remote laboratory <b>206</b> employs one or more devices <b>216</b> to execute the experimental workflow. For example, the one or more devices <b>216</b> may include acoustic liquid handlers (e.g., Beckman Echo 650/525, EDC Biosystems ATS), polymerase chain reaction (PCR) machines (e.g., Bio-Rad CFX96, Bio-Rad CFX384, Thermo Fisher 7500 RT), centrifuges (e.g., Bionex HiG 4), reagent dispensers (e.g., Thermo Scientific Multidrop, Formulatrix Tempest), magnetic purification processors (e.g., Thermo Scientific KingFisher Flex Magnetic Particle Processor Magnetic Plate Separation), liquid handling devices (e.g., Agilent Bravo <b>96</b>w/<b>384</b>w, Tecan ADP, Hamilton Star), flow cytometers (e.g., Attune NxT Acoustic Focusing Cytometer), live cell formats (e.g., cell imaging), Next-generation sequencing (NGS) sequencers (e.g., Pacific Biosciences RS II sequencer, Illumina HiSeq 4000 sequencer), analytical chemistry devices (e.g., Agilent LC/MS Infinity II), and/or synthetic chemistry robotics. In various embodiments, the one or more devices <b>216</b> can be combined in any number of ways. In some embodiments, a mix of human and/or robotic laboratory services are provided to manage and process experimental workflows at the remote laboratory <b>206</b>.</p><p id="p-0036" num="0035">In certain embodiments, the system <b>200</b> is employed for various scientific applications and/or research areas (e.g., drug discovery, cancer research, protein engineering, synthetic biology, high throughput screening, bio-chemical assays, medicinal chemistry, personalized medicine, and/or closed-loop machine learning applications).</p><p id="p-0037" num="0036">In various embodiments, any variety of machine learning approaches may be performed on data generated in the system <b>200</b> to further inform and guide next steps in experimentation, improve performance, create new experiments, and/or analyze data across previously disparate scientific applications.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a simplified diagram of various modules for processing experimental workflows according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The system <b>300</b> includes a protocol browser module <b>302</b>, an experimental configuration module <b>304</b>, a protocol validation module <b>306</b>, an experimental workflow module <b>308</b>, and an inventory management module <b>310</b>. Although the above has been shown using a selected group of components for the system, there can be many alternatives, modifications, and variations. For example, some of the components may be expanded and/or combined. Other components may be inserted to those noted above. Depending upon the embodiment, the arrangement of components may be interchanged with others replaced.</p><p id="p-0039" num="0038">In various embodiments, one or more processes are executed by the modules <b>302</b>-<b>310</b> for selecting, configuring, submitting, and/or tracking experimental workflows at one or more remote laboratories.</p><p id="p-0040" num="0039">In certain embodiments, the protocol browser module <b>302</b>, the experimental configuration module <b>304</b>, the protocol validation module <b>306</b>, the experimental workflow module <b>308</b>, and/or the inventory management module <b>310</b> are web-based modules. For example, the modules <b>302</b>-<b>310</b> are accessible via the Internet. In some embodiments, the modules <b>302</b>-<b>310</b> are part of the one or more modules <b>214</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0041" num="0040">In some embodiments, the protocol browser module <b>302</b> includes functionalities that enable a user to view information regarding experimental workflows. For example, the user can view available experimental workflows, version controlled experimental workflows, and/or linked execution history of experimental workflows. In various embodiments, the protocol browser module <b>302</b> includes functionalities that allow the user to customize inputs, parameters, and/or validations.</p><p id="p-0042" num="0041">In certain embodiments, the experimental configuration module <b>304</b> includes functionalities that enable the user to manage experimental workflows. For example, the user can view and manage existing experimental workflows as well as request run submissions for new experimental workflows. In some embodiments, the experimental configuration module <b>304</b> includes functionalities that allow the user to define protocol design parameters. As an example, the user can configure parameters in an experimental workflow. In certain embodiments, the experimental configuration module <b>304</b> includes functionalities that allow the user to access an inventory for sample selection.</p><p id="p-0043" num="0042">In some embodiments, the protocol validation module <b>306</b> includes functionalities that enable the user to perform validation of experimental workflows. For example, the user can validate protocol design parameters and/or other parameters used to configure an experimental workflow.</p><p id="p-0044" num="0043">In certain embodiments, the experimental workflow module <b>308</b> includes functionalities that allow the user to monitor the execution status of instructions for experimental workflows. In some embodiments, the experimental workflow module <b>308</b> includes functionalities that allow the user to view and download data, such as diagnostic data, execution data, and/or other generated data in or near real-time. In various embodiments, the experimental configuration module <b>304</b> and/or the experimental workflow module <b>308</b> provide application programming interface (API) endpoints.</p><p id="p-0045" num="0044">In some embodiments, the inventory management module <b>310</b> includes functionalities that enable the user to perform multi-site management, material management, and/or sample tracking and provenance.</p><p id="p-0046" num="0045">According to certain embodiments, a method for processing one or more experimental workflows includes receiving an indication of an experimental workflow selected by a user. Also, the method includes generating workflow configuration requirements for the experimental workflow. Further, the method includes presenting a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the method includes performing a validation of the one or more parameters to configure the experimental workflow and configuring the experimental workflow based at least in part upon the validated one or more parameters. In addition, the method includes transforming the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories. For example, the method is implemented according to at least <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0047" num="0046">According to some embodiments, a system for processing one or more experimental workflows includes one or more processors and a memory storing instructions for execution by the one or more processors. The instructions, when executed by the one or more processors, cause the system to receive an indication of an experimental workflow selected by a user. Also, the instructions, when executed by the one or more processors, cause the system to generate workflow configuration requirements for the experimental workflow. Further, the instructions, when executed by the one or more processors, cause the system to present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the instructions, when executed by the one or more processors, cause the system to perform a validation of the one or more parameters to configure the experimental workflow and configure the experimental workflow based at least in part upon the validated one or more parameters. In addition, the instructions, when executed by the one or more processors, cause the system to transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories. For example, the system is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0048" num="0047">According to certain embodiments, a non-transitory computer-readable medium stores instructions for processing one or more experimental workflows. The instructions are executed by one or more processors of a computing device. The non-transitory computer-readable medium includes instructions to receive an indication of an experimental workflow selected by a user. Also, the non-transitory computer-readable medium includes instructions to generate workflow configuration requirements for the experimental workflow. Further, the non-transitory computer-readable medium includes instructions to present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the non-transitory computer-readable medium includes instructions to perform a validation of the one or more parameters to configure the experimental workflow and configure the experimental workflow based at least in part upon the validated one or more parameters. In addition, the non-transitory computer-readable medium includes instructions to transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories. For example, the non-transitory computer-readable medium is implemented according to at least <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and/or <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0049" num="0048">For example, some or all components of various embodiments of the present disclosure each are, individually and/or in combination with at least another component, implemented using one or more software components, one or more hardware components, and/or one or more combinations of software and hardware components. In another example, some or all components of various embodiments of the present disclosure each are, individually and/or in combination with at least another component, implemented in one or more circuits, such as one or more analog circuits and/or one or more digital circuits. In yet another example, while the embodiments described above refer to particular features, the scope of the present disclosure also includes embodiments having different combinations of features and embodiments that do not include all of the described features. In still another example, various embodiments and/or examples of the present disclosure can be combined.</p><p id="p-0050" num="0049">Additionally, the methods and systems described herein may be implemented on many different types of processing devices by program code comprising program instructions that are executable by the device processing subsystem. The software program instructions may include source code, object code, machine code, or any other stored data that is operable to cause a processing system to perform the methods and operations described herein. Certain implementations may also be used, however, such as firmware or even appropriately designed hardware configured to perform the methods and systems described herein.</p><p id="p-0051" num="0050">The systems' and methods' data (e.g., associations, mappings, data input, data output, intermediate data results, final data results) may be stored and implemented in one or more different types of computer-implemented data stores, such as different types of storage devices and programming constructs (e.g., RAM, ROM, EEPROM, Flash memory, flat files, databases, programming data structures, programming variables, IF-THEN (or similar type) statement constructs, application programming interface). It is noted that data structures describe formats for use in organizing and storing data in databases, programs, memory, or other computer-readable media for use by a computer program.</p><p id="p-0052" num="0051">The systems and methods may be provided on many different types of computer-readable media including computer storage mechanisms (e.g., CD-ROM, diskette, RAM, flash memory, computer's hard drive, DVD) that contain instructions (e.g., software) for use in execution by a processor to perform the methods' operations and implement the systems described herein. The computer components, software modules, functions, data stores and data structures described herein may be connected directly or indirectly to each other in order to allow the flow of data needed for their operations. It is also noted that a module or processor includes a unit of code that performs a software operation, and can be implemented for example as a subroutine unit of code, or as a software function unit of code, or as an object (as in an object-oriented paradigm), or as an applet, or in a computer script language, or as another type of computer code. The software components and/or functionality may be located on a single computer or distributed across multiple computers depending upon the situation at hand.</p><p id="p-0053" num="0052">The computing system can include client devices and servers. A client device and server are generally remote from each other and typically interact through a communication network. The relationship of client device and server arises by virtue of computer programs running on the respective computers and having a client device-server relationship to each other.</p><p id="p-0054" num="0053">This specification contains many specifics for particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations, one or more features from a combination can in some cases be removed from the combination, and a combination may, for example, be directed to a subcombination or variation of a subcombination.</p><p id="p-0055" num="0054">Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.</p><p id="p-0056" num="0055">Although specific embodiments of the present disclosure have been described, it will be understood by those of skill in the art that there are other embodiments that are equivalent to the described embodiments. Accordingly, it is to be understood that the present disclosure is not to be limited by the specific illustrated embodiments.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for processing one or more experimental workflows, the method comprising:<claim-text>receiving an indication of an experimental workflow selected by a user;</claim-text><claim-text>generating workflow configuration requirements for the experimental workflow;</claim-text><claim-text>presenting a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements;</claim-text><claim-text>performing a validation of the one or more parameters to configure the experimental workflow;</claim-text><claim-text>configuring the experimental workflow based at least in part upon the validated one or more parameters; and</claim-text><claim-text>transforming the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>executing the experimental workflow by the one or more devices based at least in part upon the one or more machine executable codes at the one or more remote laboratories.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>publishing, based at least in part upon user data and experimental application data, a list of available experimental workflows for the user to select.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein performing the validation of the one or more parameters includes validating the one or more parameters based at least in part upon at least one selected from a group consisting of a device constraint, an experimental constraint, an instruction dependency, and an experimental design boundary.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the workflow configuration requirements include at least one selected from a group consisting of an input type entity, a generated data, a workflow version, and a published date.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein presenting the user interface to enable input of the one or more parameters further includes:<claim-text>enabling the user, through the user interface, to submit the configured experimental workflow to a queue for execution.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein presenting the user interface to enable input of the one or more parameters further includes:<claim-text>enabling the user, through the user interface, to request dates for executing the configured experimental workflow.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein presenting the user interface to enable input of the one or more parameters further includes:<claim-text>enabling the user, through the user interface, to assign a funding source for the configured experimental workflow.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A system for processing one or more experimental workflows, the system comprising:<claim-text>one or more processors; and</claim-text><claim-text>a memory storing instructions that, when executed by the one or more processors, cause the system to:</claim-text><claim-text>receive an indication of an experimental workflow selected by a user;</claim-text><claim-text>generate workflow configuration requirements for the experimental workflow;</claim-text><claim-text>present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements;</claim-text><claim-text>perform a validation of the one or more parameters to configure the experimental workflow;</claim-text><claim-text>configure the experimental workflow based at least in part upon the validated one or more parameters; and</claim-text><claim-text>transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the instructions, when executed by the one or more processors, further cause the system to:<claim-text>execute the experimental workflow by the one or more devices based at least in part upon the one or more machine executable codes at the one or more remote laboratories.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the instructions, when executed by the one or more processors, further cause the system to:<claim-text>publish, based at least in part upon user data and experimental application data, a list of available experimental workflows for the user to select.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, the instructions that cause the system to perform the validation of the one or more parameters further comprise instructions that cause the system to validate the one or more parameters based at least in part upon at least one selected from a group consisting of a device constraint, an experimental constraint, an instruction dependency, and an experimental design boundary.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the workflow configuration requirements include at least one selected from a group consisting of an input type entity, a generated data, a workflow version, and a published date.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, the instructions that cause the system to present the user interface to enable input of the one or more parameters further comprise instructions that cause the system to enable the user, through the user interface, to submit the configured experimental workflow to a queue for execution.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, the instructions that cause the system to present the user interface to enable input of the one or more parameters further comprise instructions that cause the system to enable the user, through the user interface, to request dates for executing the configured experimental workflow.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, the instructions that cause the system to present the user interface to enable input of the one or more parameters further comprise instructions that cause the system to enable the user, through the user interface, to assign a funding source for the configured experimental workflow.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory computer-readable medium storing instructions for processing one or more experimental workflows, the instructions when executed by one or more processors of a computing device, cause the computing device to:<claim-text>receive an indication of an experimental workflow selected by a user;</claim-text><claim-text>generate workflow configuration requirements for the experimental workflow;</claim-text><claim-text>present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements;</claim-text><claim-text>perform a validation of the one or more parameters to configure the experimental workflow;</claim-text><claim-text>configure the experimental workflow based at least in part upon the validated one or more parameters; and</claim-text><claim-text>transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein, the instructions when executed by the one or more processors further cause the computing device to:<claim-text>execute the experimental workflow by the one or more devices based at least in part upon the one or more machine executable codes at the one or more remote laboratories.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein, the instructions when executed by the one or more processors further cause the computing device to:<claim-text>publish, based at least in part upon user data and experimental application data, a list of available experimental workflows for the user to select.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein, the instructions when executed by the one or more processors that cause the computing device to present the user interface to enable input of the one or more parameters further cause the computing device to:<claim-text>enable the user, through the user interface, to submit the configured experimental workflow to a queue for execution;</claim-text><claim-text>enable the user, through the user interface, to request dates for executing the configured experimental workflow; and</claim-text><claim-text>enable the user, through the user interface, to assign a funding source for the configured experimental workflow.</claim-text></claim-text></claim></claims></us-patent-application>