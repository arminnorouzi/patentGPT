<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007664A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007664</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17366677</doc-number><date>20210702</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>72</main-group><subgroup>12</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>72</main-group><subgroup>12</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR APPLICATION AWARE SLICING IN 5G LAYER 2 AND LAYER 1 USING FINE GRAIN SCHEDULING</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>EdgeQ, Inc.</orgname><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Ravuri</last-name><first-name>Vinay</first-name><address><city>Cupertino</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Rajagopal</last-name><first-name>Sriram</first-name><address><city>Karnataka</city><country>IN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>EdgeQ, Inc.</orgname><role>02</role><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Advances in wireless technologies have resulted in the ability of a 5G communication system to support multiple wireless communication applications. Each of these applications requires special handling in all layers and more so in scheduler and physical layer. The present disclosure presents embodiments of dynamical creating a computation instance with a slice of resources allocated for each scheduling input. Each computation instance may be independently managed, controlled, and customized according to the specific requirements of the corresponding scheduling input. Such a dynamic resource allocation allows large number of slices in PHY layer. Furthermore, when overloading happens, one scheduling inputs may be migrated from one distribution unit (DU) to another DU without interruption for end users during scheduling migration. Accordingly, efficiency and robustness of a 5G communication system may be improved to serve multiple wireless communication applications.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="193.21mm" wi="158.75mm" file="US20230007664A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="235.80mm" wi="172.55mm" file="US20230007664A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="235.80mm" wi="175.18mm" file="US20230007664A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="235.80mm" wi="119.30mm" file="US20230007664A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="235.80mm" wi="174.07mm" file="US20230007664A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="235.80mm" wi="137.33mm" file="US20230007664A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="235.80mm" wi="140.04mm" file="US20230007664A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="235.80mm" wi="125.39mm" file="US20230007664A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="235.80mm" wi="119.30mm" file="US20230007664A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present disclosure relates generally to a unified wireless architecture that manages multiple wireless communication applications and data processing associated therewith. More particularly, the present disclosure relates to a processing architecture that manages multiple wireless communication applications in 5G layer 2 and layer 1 using fine grain scheduling.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The importance of wireless communication in today's society is well understood by one of skill in the art. Advances in wireless technologies have resulted in the ability of a 5G communication system to support multiple types of wireless communication applications, e.g., drones, Ultra-Reliable Low-Latency Communication (URLLC), Internet of things (IoT) devices, enhanced Mobile Broadband (eMBB), etc. Each type of communication applications may have their own requirements or preferences in layer 2 (scheduler and Medium Access Control (MAC)) and layer 1 (physical layer or PHY).</p><p id="p-0004" num="0003">Having a same design for all these applications may be inefficient for overall system performance and operation. While on the other hand, different hardware solutions for at least PHY acceleration and separate/different layer 2 schedulers may be used for different types of applications. However, such an implementation with multiple specific designs means multiple variants of products or solutions, and thus increases cost and complexity. The deployment of such a solution is also difficult.</p><p id="p-0005" num="0004">Accordingly, what is needed are systems, devices and methods that address the above-described issues.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0006" num="0005">References will be made to embodiments of the disclosure, examples of which may be illustrated in the accompanying figures. These figures are intended to be illustrative, not limiting. Although the accompanying disclosure is generally described in the context of these embodiments, it should be understood that it is not intended to limit the scope of the disclosure to these particular embodiments. Items in the figures may not be to scale.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> (&#x201c;<figref idref="DRAWINGS">FIG. <b>1</b></figref>&#x201d;) depicts various open radio access network (RAN) deployments for a telecommunication service provider, according to embodiments of the present disclosure.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a central control unit for managing multiple wireless scheduling inputs across various applications, according to embodiments of the present disclosure.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts a process of allocating resources among multiple wireless scheduling inputs, according to embodiments of the present disclosure.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a schematic diagram for PHY policy implementation, according to embodiments of the present disclosure.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> depicts a diagram of tasks migration for one or more wireless scheduling inputs, according to embodiments of the present disclosure.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> depicts a diagram of full migration for wireless scheduling inputs, according to embodiments of the present disclosure.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a process of wireless scheduling migration, according to embodiments of the present disclosure.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a process of local control of resource allocation, according to embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0015" num="0014">In the following description, for purposes of explanation, specific details are set forth in order to provide an understanding of the disclosure. It will be apparent, however, to one skilled in the art that the disclosure can be practiced without these details. Furthermore, one skilled in the art will recognize that embodiments of the present disclosure, described below, may be implemented in a variety of ways, such as a process, an apparatus, a system/device, or a method on a tangible computer-readable medium.</p><p id="p-0016" num="0015">Components, or modules, shown in diagrams are illustrative of exemplary embodiments of the disclosure and are meant to avoid obscuring the disclosure. It shall also be understood that throughout this discussion that components may be described as separate functional units, which may comprise sub-units, but those skilled in the art will recognize that various components, or portions thereof, may be divided into separate components or may be integrated together, including, for example, being in a single system or component. It should be noted that functions or operations discussed herein may be implemented as components. Components may be implemented in software, hardware, or a combination thereof.</p><p id="p-0017" num="0016">Furthermore, connections between components or systems within the figures are not intended to be limited to direct connections. Rather, data between these components may be modified, re-formatted, or otherwise changed by intermediary components. Also, additional or fewer connections may be used. It shall also be noted that the terms &#x201c;coupled,&#x201d; &#x201c;connected,&#x201d; &#x201c;communicatively coupled,&#x201d; &#x201c;interfacing,&#x201d; &#x201c;interface,&#x201d; or any of their derivatives shall be understood to include direct connections, indirect connections through one or more intermediary devices, and wireless connections. It shall also be noted that any communication, such as a signal, response, reply, acknowledgement, message, query, etc., may comprise one or more exchanges of information.</p><p id="p-0018" num="0017">Reference in the specification to &#x201c;one or more embodiments,&#x201d; &#x201c;preferred embodiment,&#x201d; &#x201c;an embodiment,&#x201d; &#x201c;embodiments,&#x201d; or the like means that a particular feature, structure, characteristic, or function described in connection with the embodiment is included in at least one embodiment of the disclosure and may be in more than one embodiment. Also, the appearances of the above-noted phrases in various places in the specification are not necessarily all referring to the same embodiment or embodiments.</p><p id="p-0019" num="0018">The use of certain terms in various places in the specification is for illustration and should not be construed as limiting. The terms &#x201c;include,&#x201d; &#x201c;including,&#x201d; &#x201c;comprise,&#x201d; and &#x201c;comprising&#x201d; shall be understood to be open terms and any examples are provided by way of illustration and shall not be used to limit the scope of this disclosure.</p><p id="p-0020" num="0019">A service, function, or resource is not limited to a single service, function, or resource; usage of these terms may refer to a grouping of related services, functions, or resources, which may be distributed or aggregated. The use of memory, database, information base, data store, tables, hardware, cache, and the like may be used herein to refer to system component or components into which information may be entered or otherwise recorded. The terms &#x201c;data,&#x201d; &#x201c;information,&#x201d; along with similar terms, may be replaced by other terminologies referring to a group of one or more bits, and may be used interchangeably. The terms &#x201c;packet&#x201d; or &#x201c;frame&#x201d; shall be understood to mean a group of one or more bits. The term &#x201c;frame&#x201d; or &#x201c;packet&#x201d; shall not be interpreted as limiting embodiments of the present invention to 5G networks. The terms &#x201c;packet,&#x201d; &#x201c;frame,&#x201d; &#x201c;data,&#x201d; or &#x201c;data traffic&#x201d; may be replaced by other terminologies referring to a group of bits, such as &#x201c;datagram&#x201d; or &#x201c;cell.&#x201d; The words &#x201c;optimal,&#x201d; &#x201c;optimize,&#x201d; &#x201c;optimization,&#x201d; and the like refer to an improvement of an outcome or a process and do not require that the specified outcome or process has achieved an &#x201c;optimal&#x201d; or peak state.</p><p id="p-0021" num="0020">It shall be noted that: (1) certain steps may optionally be performed; (2) steps may not be limited to the specific order set forth herein; (3) certain steps may be performed in different orders; and (4) certain steps may be done concurrently.</p><p id="p-0022" num="0021">A. Open RAN Deployment Models</p><p id="p-0023" num="0022">A radio access network (RAN) is part of a telecommunication system. It implements a radio access technology (RAT) to provide connection between a device, e.g., a mobile phone, and a core network (CN). Open RAN is an approach based on interoperability and standardization of RAN elements including a unified interconnection standard for white-box hardware and open source software elements from different vendors.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts various open radio access network (RAN) deployments for a telecommunication service provider, according to embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a radio unit (RU) <b>102</b> may couple to a virtual distribution unit (vDU) <b>112</b> with a split, e.g., ORAN 7-2 split, which is a Low PHY/High PHY split for ultra-reliable low-latency communication (URLLC) and near-edge deployment. The vDU <b>112</b> then couples to a virtual central unit (vCU) <b>122</b> with a split, e.g., split 2, which is referred as radio resource control and packet data convergence control split from the Layer 2 radio link control (RLC). Alternatively, a vDU may be deployed on the side of an RU <b>104</b>, and then couples to a vCU <b>124</b> with a split, e.g., split 2. Alternatively, a distribution unit (DU) and an RU may be integrated as an appliance <b>106</b>, which then couples to a vCU <b>126</b> with a split, e.g., split 2. Alternatively, a RU may be a small cell RN (S-RU) <b>108</b> couples to a small cell DU or vDU (S-vDU) <b>118</b> using a split, e.g., a MAC/PHY layer split (split 6). The S-vDU <b>118</b> then couple to a vCU <b>128</b> with a split, e.g., split 2.</p><p id="p-0025" num="0024">A service provider (SP) may adopt more than one Open RAN deployment models based on band, fronthaul bandwidth requirements, or deployment type (macro/small cell), etc. Deployment models are influenced or decided based on multiple factors, including Fibre availability, real-estate/site/location constraints at pre-aggregation (Pre-Agg) and cell sites, total cost of ownership (TCO), Operational preference, etc. It is desirable for SPs to achieve maximum consistency around architecture, systems and operational model across all these deployment models.</p><p id="p-0026" num="0025">B. Resource Allocation across Multiple Wireless Scheduling Inputs</p><p id="p-0027" num="0026">In a dis-aggregated open and virtualized RAN architecture, multiple carriers may be converged in a DU which implements, among other operations, layer-2 scheduler and some higher operations on the physical layer.</p><p id="p-0028" num="0027">Operations of components on the physical layer may be critically different for various applications. For example, a scheduler may be implemented to optimize retransmissions for data traffic, or to optimize semi-persistent allocations for voice or low latency applications. In another example, some applications may involve higher density of pilots/reference signals for fast moving users, e.g., drones. There are many such optimizations being served within a coverage region. In one or more embodiments of the present patent document, the different types of applications are considered as scheduling inputs as each of them use a slice of the resource (or at least resources on the physical layer and the layer-2 scheduler) for a specific application type.</p><p id="p-0029" num="0028">In certain situations, various carriers may be aggregated at a DU, which results in multiple slices aggregating for the physical layer implementations. Resources required for each of the application is a slice of the overall resources, e.g., compute capability. Reserving excessive resources for a slice of the spectrum or resource is not only wasteful, but also lowers overall system operation efficiency and performance. The present patent document discloses embodiments of managing multiple slices actively and/or optimally across multiple applications in single hardware architecture.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a central control unit for managing multiple wireless scheduling inputs across various applications, according to embodiments of the present disclosure. The center processing unit <b>210</b> receives a plurality of wireless scheduling inputs for aggregated physical layer implementations. The center processing unit <b>210</b> comprises a plurality of configurable processing units, which are allocated to process the plurality of wireless scheduling inputs based at least on a resource control signal <b>232</b> output from a resource controller <b>230</b>. In one or more embodiments, the center processing unit <b>210</b> and the resource controller <b>230</b> are integrated within a DU for real time L1 and L2 scheduling functions.</p><p id="p-0031" num="0030">The plurality of wireless scheduling inputs may be scheduling requests on a physical layer in a virtualized setting, e.g., vPHY<b>0</b> <b>202</b>, vPHY<b>1</b> <b>204</b>, and vPHYN <b>205</b>. The wireless scheduling inputs may be from the same DU or different DUs. In one or more embodiments, each wireless scheduling input may be defined as a type or a group that comprises one or more scheduling requests that are of the same or similar application type. Each scheduling input may have its own specific requirements or preference for operation parameters, e.g., latency, throughput, etc. For example, the scheduling input vPHY<b>0</b> <b>202</b> may comprise one or more scheduling requests to support one or more autonomous driving vehicles, while scheduling input vPHY<b>1</b> <b>204</b> may comprise one or more scheduling requests to service one or more IoT devices.</p><p id="p-0032" num="0031">Upon receiving the plurality of wireless scheduling inputs, the center processing unit <b>210</b> adjustably allocates the plurality of configurable processing units to process the plurality of wireless scheduling inputs. The allocation may be based on at least one of: current status of the plurality of configurable processing units, one or more priority rules, and a resource control signal <b>232</b> output from a resource controller <b>230</b>. In one or more embodiments, the center processing unit <b>210</b> may create a plurality of computation instances with each computation instance handling a wireless scheduling input. Each computation instance consumes a slice of overall hardware, software, or hardware and software resource (or at least resources on the physical layer) of the center processing unit <b>210</b>. Each computation instance may be independently managed, controlled, and customized according to the specific requirement(s) of the corresponding wireless scheduling input. The one or more priority rules for resource allocation may comprise an instance priority rule to set priorities among different slices or computation instances, and/or a carrier priority rule for multiple carriers within a slice. Implementing one or more priority rules is important and valuable to allow scaling of very large number of scheduling inputs.</p><p id="p-0033" num="0032">In one or more embodiments, the center processing unit <b>210</b> is a multi-core processing unit with a plurality of cores serving as configurable processing units for designated tasks. The center processing unit <b>210</b> may designate one or more cores <b>212</b> for task scheduling and the core(s) for task scheduling may function as shared resources among the plurality of computation instances. The center processing unit <b>210</b> may also assign one or more cores <b>214</b> dedicated to a computation instance for task execution. Shared resources may be determined every slot or subframe based on dedicated resources in that slot or subframe for each computation instance. The creation of a computation instance may involve at least one of: core assignment, load appropriate binaries, local memory (LMEM) provisioning, etc. A computation instance may be designated to handle multiple carriers or one carrier with multiple bandwidth parts (BWPs). A computation instance may be also specifically designated by tasks, e.g., acceleration for forward error correction (FEC), enhanced common public radio interface (eCRPI), or machine learning (ML).</p><p id="p-0034" num="0033">The center processing unit <b>210</b> may comprise an LMEM <b>220</b> which stores one or more task tables <b>222</b> for core assignment. The task tables may be preloaded or dynamically established based at least on the plurality of wireless scheduling inputs received at the center processing unit <b>210</b>. In one or more embodiments, the LMEM <b>220</b> may comprise memory allocations storing codes for computation management, application programming interface (API) data structure, and computation instance log records, etc.</p><p id="p-0035" num="0034">During computation instance creation or execution, the center processing unit <b>210</b> may implement one or more operations comprising operations, administration and maintenance (OAM) adaptation, and/or MAC-PHY (or L2-L1) interface translation.</p><p id="p-0036" num="0035">In one or more embodiments, a configurable processing unit in the center processing unit <b>210</b> is a core based on various architecture, e.g., ARM, x86, RISC-V, etc. architecture. Cores in the center processing unit <b>210</b> may be highly configurable for various tasks. One skilled in the art will recognize that various types of processing cores may be implemented across different embodiments of the invention.</p><p id="p-0037" num="0036">Upon implementing the plurality of computation instances using respectively allocated resources, the center processing unit <b>210</b> generates one or more commands (CMDs), which are transmitted to one or more respectively hardware acceleration components for further processing. The one or more commands may comprise one or more commands to one or more medium access control accelerators (MXL) <b>240</b> for transport block (TB) processing, one or more enhanced common public radio interface (eCPRI) commands to control one or more eCPRIs <b>250</b>, one or more forward error correction (FEC) commands to an encoder/decoder unit <b>260</b>, one or more signal processing engine (SPE) commands to control a SPE <b>270</b>. The SPE <b>270</b> may comprise a plurality of SPE units to implement channel estimation, measurements, equalization, etc.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts a process of allocating resources among multiple wireless scheduling inputs, according to embodiments of the present disclosure. In step <b>305</b>, a central control unit, which resides within a DU, receives a plurality of wireless scheduling inputs across various applications, e.g., autonomous driving, IoT, etc. The central control unit comprises a plurality of configurable processing units which may be dynamically allocated for processing various tasks. In step <b>310</b>, the central control unit creates multiple computation instances with each computation instance corresponding to one scheduling input. Each computation instance is allocated with a slice of resources in the central control unit. The slice assigned to an instance may comprise dedicated resources specific to the slice and shared resources among the multiple slices. Resource slicing at the central control unit may be based on at least one of current status of the plurality of configurable processing units, one or more priority rules, and a resource control signal output from a resource controller. In step <b>315</b>, multiple computation instances are implemented to generate one or more commands at a desired level of granularity to control one or more hardware acceleration components. In step <b>320</b>, the one or more hardware acceleration components respectively implement the one or more commands for desired operations.</p><p id="p-0039" num="0038">C. Embodiments of PHY Policy Implementation</p><p id="p-0040" num="0039">Upon receiving a plurality of scheduling inputs, the central control unit creates multiple computation instances by slicing resources into multiple slices to process the scheduling inputs. Resources to be sliced may comprise hardware, software, memory, or a combination thereof, and may be driven from core down to RAN. Resource slicing may be dynamically configured based on one or more priorities and policies. In one or more embodiments, resource slicing may involve resource allocation among different scheduling inputs, and also among various carries within the same scheduling input. For example, one of the multiple scheduling inputs may be related to automatous driving service for multiple automatous vehicles. The central control unit needs to be implement resource allocation not only between automatous driving services and other types of scheduling inputs, but also among the multiple automatous vehicles.</p><p id="p-0041" num="0040">In certain situations, a central control unit, such as a single large-core host, may receive excessive scheduling inputs which are challenging to be served for PHY implementation in a constrained time bound. Accordingly, an efficient and dynamic PHY policy implementation may be necessary. <figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a schematic diagram for PHY policy implementation, according to embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the central control unit <b>410</b> is a single large-core host comprising multiple configurable processing units <b>414</b>, <b>416</b>, and <b>418</b>, etc., which may be single cores configurable for implementing various scheduling tasks. The central control unit <b>410</b> may also comprise a decision module <b>412</b> coupled to control the multiple configurable processing units for desired slice or computation instance allocation. The decision module <b>412</b> may be a core (e.g., the core <b>212</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) specifically designated for task scheduling among other cores within the central control unit <b>410</b>. The decision module <b>412</b> receives decision management data <b>426</b> resulting from a AC PHY interface translation operation <b>422</b>, which may at least involve codes or firmware loaded within a memory <b>423</b> allocated for computation management, API data structure information within a memory <b>424</b> allocated for API data structure storage, and a resource scheduling control signal output from a resource scheduler <b>425</b>. The slot message <b>411</b> to be processed in the MAC-PHY interface translation operation may comprise slot/PHY tasks messages related to multiple scheduling inputs (e.g., vPHY<b>0</b>, vPHY<b>1</b>, vPHYN shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) and may also comprise extensions for priority among the PHY tasks.</p><p id="p-0042" num="0041">In one or more embodiments, the memory <b>423</b> allocated for computation management is loaded with management information of the physical layer <b>430</b>, such that situation of the physical layer <b>430</b> may be taken into consideration during the MAC-PHY interface translation operation <b>422</b>. The management information may comprise resource management data, and channel management data, etc.</p><p id="p-0043" num="0042">D. Embodiments of PHY Tasks Migration</p><p id="p-0044" num="0043">In certain situations, a host may receive excessive scheduling inputs. As a result, the configurable processing units in the host may be over-provisioned. When this happens, the host or the resource scheduler may implement dynamic resource allocation such that the configurable processing units are not synchronized for increased PHY scheduling capacity to meet the needs. If such an asynchronous operation is not adequate or a specific criteria is met, e.g., one or more quality of service (QoS) parameters (latency, throughput, error rate, etc.) reaching a threshold, the host or the resource scheduler may need to migrate one or more currently served scheduling inputs to another distribution unit (DU), preferably without causing service interruption to end-users.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> depicts a diagram of tasks migration for one or more wireless scheduling inputs, according to embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, a first host (or a first central control unit) <b>516</b> and a first resource scheduler and PHY <b>518</b> both reside within a first DU <b>512</b>, which coupes to a first control unit (CU) <b>510</b>. The first DU <b>512</b> couples to a first radio unit (RU) <b>514</b> via a first fronthaul link <b>515</b>. A second host (or a second central control unit) <b>526</b> and a second resource scheduler and PHY <b>528</b> both reside within a second DU <b>522</b>, which coupes to a second CU <b>520</b>. The second DU <b>522</b> couples to a second RU <b>524</b> via a second fronthaul link <b>525</b>.</p><p id="p-0046" num="0045">PHY scheduling migration may be initiated by the first host <b>516</b>, the first resource scheduler <b>518</b>, or the first CU <b>510</b>. When scheduling inputs from the first RU <b>514</b> are excessive (e.g., at least one QoS parameter reaching a threshold, or one of the slices of resources reaching a minimum resource threshold), the first host <b>516</b> sends a slot message <b>517</b> comprising extensions of one or more PHY tasks for migration to the first resource scheduler and PHY <b>518</b>. The selection of the PHY tasks for migration may be based on one or more instance priority rules to set priorities among different slices or computation instances, and/or one or more carrier priority rules for multiple carriers within a slice. The first resource scheduler and PHY <b>518</b> communicates to the first RU <b>515</b> such that the first RU <b>515</b> transmits scheduling inputs associated with the one or more PHY tasks for migration to the second resource scheduler and PHY <b>528</b> via a third fronthaul link <b>535</b>, besides to the first resource scheduler and PHY <b>518</b> via a first fronthaul link <b>515</b>. The second host <b>526</b> sends a carrier message <b>527</b> comprising extensions to add the one or more PHY tasks for resource allocation to the second resource scheduler and PHY <b>528</b>. Once the second resource scheduler and PHY <b>528</b> allocates resources for the one or more PHY tasks, the first RU <b>514</b> stops transmitting scheduling request for the one or more PHY tasks to the first DU <b>512</b>. Such a make-before-break approach ensures no service interruption to end users. In certain situations, the first DU <b>512</b> may even have power down and migrate all PHY tasks to the second DU <b>522</b>, as shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a process of wireless scheduling migration, according to embodiments of the present disclosure. In step <b>605</b>, responsive to specific criteria being met when multiple compute instances are implemented in a first central control unit at a first DU corresponding to one or more scheduling inputs from a first RU, the first central control unit selects at least one scheduling input for migration according to one or more rules. The one or more rules may comprise on one or more instance priority rules to set priorities among different slices or computation instances, and/or one or more carrier priority rules for multiple carriers within a slice. In step <b>610</b>, a fronthaul link between a first radio unit and a second DU is established for the first RU to transmit the at least one scheduling input to the second DU besides the first DU. In step <b>615</b>, a second resource scheduler within the second DU implements resource allocation in a second host for the at least one scheduling input. In step <b>625</b>, the first resource scheduler updates resource allocation for other scheduling inputs transmitted from the first RU.</p><p id="p-0048" num="0047">Embodiments of PHY tasks migration may enable seamlessly adding or removing a computation instance or a slice of resources. Additionally, prioritization may be implemented for existing slices when overloading happens, such that slices with higher priority may be allocated with more resources for more aggressive implementation. The make-before-break migration approach as shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> allows non interruption for end users during scheduling migration, thus increases robustness for the communication service.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a process of local control of resource allocation, according to embodiments of the present disclosure. In step <b>705</b>, an acceleration component receives one or more commands transmitted from the central control unit. The acceleration component may be a hardware acceleration component, a software acceleration component, or a combination thereof. For example, the acceleration component may be an encoder/decoder unit, a signal processing engine, an eCPRI, etc. In step <b>710</b>, a local control firmware schedules the hardware acceleration component for desired operation according to information in the one or more commands for desired or improved throughput.</p><p id="p-0050" num="0049">Aspects of the present disclosure may be encoded upon one or more non-transitory computer-readable media with instructions for one or more processors or processing units to cause steps to be performed. It shall be noted that the one or more non-transitory computer-readable media shall include volatile and/or non-volatile memory. It shall be noted that alternative implementations are possible, including a hardware implementation or a software/hardware implementation. Hardware-implemented functions may be realized using ASIC(s), programmable arrays, digital signal processing circuitry, or the like. Accordingly, the &#x201c;means&#x201d; terms in any claims are intended to cover both software and hardware implementations. Similarly, the term &#x201c;computer-readable medium or media&#x201d; as used herein includes software and/or hardware having a program of instructions embodied thereon, or a combination thereof. With these implementation alternatives in mind, it is to be understood that the figures and accompanying description provide the functional information one skilled in the art would require to write program code (i.e., software) and/or to fabricate circuits (i.e., hardware) to perform the processing required.</p><p id="p-0051" num="0050">It shall be noted that embodiments of the present disclosure may further relate to computer products with a non-transitory, tangible computer-readable medium that have computer code thereon for performing various computer-implemented operations. The media and computer code may be those specially designed and constructed for the purposes of the present disclosure, or they may be of the kind known or available to those having skill in the relevant arts. Examples of tangible computer-readable media include, for example: magnetic media such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store or to store and execute program code, such as application specific integrated circuits (ASICs), programmable logic devices (PLDs), flash memory devices, other non-volatile memory (NVM) devices (such as 3D XPoint-based devices), and ROM and RAM devices. Examples of computer code include machine code, such as produced by a compiler, and files containing higher level code that are executed by a computer using an interpreter. Embodiments of the present disclosure may be implemented in whole or in part as machine-executable instructions that may be in program modules that are executed by a processing device. Examples of program modules include libraries, programs, routines, objects, components, and data structures. In distributed computing environments, program modules may be physically located in settings that are local, remote, or both.</p><p id="p-0052" num="0051">One skilled in the art will recognize no computing system or programming language is critical to the practice of the present disclosure. One skilled in the art will also recognize that a number of the elements described above may be physically and/or functionally separated into modules and/or sub-modules or combined together.</p><p id="p-0053" num="0052">It will be appreciated to those skilled in the art that the preceding examples and embodiments are exemplary and not limiting to the scope of the present disclosure. It is intended that all permutations, enhancements, equivalents, combinations, and improvements thereto that are apparent to those skilled in the art upon a reading of the specification and a study of the drawings are included within the true spirit and scope of the present disclosure. It shall also be noted that elements of any claims may be arranged differently including having multiple dependencies, configurations, and combinations.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for resource allocation across wireless communication applications comprising:<claim-text>receiving, at a central control unit within a distribution unit (DU), a plurality of wireless scheduling inputs across multiple wireless communication applications, the central control unit comprises multiple configurable processing units;</claim-text><claim-text>creating, at the central control unit, multiple computation instances with each compute instance corresponding to one scheduling input, each computation instance is allocated with a slice of resources in the central control unit;</claim-text><claim-text>implementing, at the central control unit, the multiple computation instances to generate one or more commands at a desired level of granularity; and</claim-text><claim-text>implementing, at one or more acceleration components, the one or more commands for desired operations.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the multiple wireless communication applications comprise at least two of 5G applications, each wireless scheduling input associates to one or more scheduling requests of the same or similar application type.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein allocation of resources for each of the multiple computation instances involves at least one of core assignment, load appropriate binaries, and local memory (LMEM) provisioning.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the multiple computation instances are specifically designated by tasks for acceleration for forward error correction (FEC), common public radio interface (CRPI), MAC acceleration, signal processing engines, or machine learning (ML).</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:<claim-text>selecting at least one scheduling input for migration according to one or more rules responsive to a specific criteria being met when one or more compute instances are implemented; and</claim-text><claim-text>migrating the at least one scheduling input to another DU without service interruption.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein the one or more rules comprise on one or more instance priority rules to set priorities among different computation instances, one or more carrier priority rules for multiple carriers within one computation instances, or a combination thereof.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein each slice of resources comprises dedicated resources specific to the each slice and shared resources among multiple slices, the shared resources are determined every slot or subframe based on dedicated resources in that slot or subframe for each computation instance.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the central control unit is a multi-core host comprising multiple cores configurable for implementing various scheduling tasks, and a decision module specifically designated for task scheduling for the multiple cores, the decision module receives decision management data resulting from a MAC-PHY interface translation for task scheduling.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein the MAC-PHY interface translation involves codes or firmware loaded within a memory allocated for computation management, application programming interface (API) data structure information within a memory allocated for API data structure storage, and a resource scheduling control signal output from a resource scheduler.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A system for resource allocation across wireless communication applications comprising:<claim-text>a resource controller generating a resource control signal for resource allocation for a plurality of wireless scheduling inputs across wireless communication applications;</claim-text><claim-text>a host comprising multiple configurable processing units, the host creates multiple computation instances base at least on the resource control signal with each compute instance corresponding to one scheduling input, each computation instance is allocated with a slice of resources in the host, the multiple computation instances are implemented to generate one or more commands at a desired level of granularity.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the resource scheduler and the host are integrated within a distribution unit (DU).</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein each slice of resources comprises dedicated resources specific to the each slice and shared resources among multiple slices, the shared resources are determined every slot or subframe based on dedicated resources in that slot or subframe for each computation instance.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the host comprises a decision module specifically designated for task scheduling for the multiple configurable processing units, the decision module receives decision management data resulting from a MAC-PHY interface translation for task scheduling.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein the MAC-PHY interface translation involves codes or firmware loaded within a memory allocated for computation management, application programming interface (API) data structure information within a memory allocated for API data structure storage, and a resource scheduling control signal output from a resource scheduler.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the host selects at least one scheduling input for migration to another DU according to one or more rules responsive to a specific criteria being met when one or more compute instances are implemented, the at least one scheduling input is migrated to another DU without service interruption.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A method for resource allocation across wireless communication applications comprising:<claim-text>implementing, at a first host within a first distribution unit (DU), multiple computation instances to process a plurality of wireless scheduling inputs across multiple wireless communication applications from a first radio unit (RU), the first host comprises multiple configurable processing units, the multiple computation instances are created based at least on a resource control signal from a first resource controller within the first DU, each compute instance corresponds to one scheduling input, each computation instance is allocated with a slice of resources in the first host;</claim-text><claim-text>responsive to a specific criteria being met when the multiple computation instances are implemented, selecting at least one scheduling input for migration according to one or more rules;</claim-text><claim-text>establishing a fronthaul link between a first RU and a second DU for the first RU to transmit the at least one scheduling input to the second DU besides to the first DU;</claim-text><claim-text>implementing, by a second resource scheduler within the second DU, resource allocation for the at least one scheduling input; and</claim-text><claim-text>stopping the first RU from sending the at least one scheduling input to the first DU.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> further comprising:<claim-text>updating, by the first resource scheduler, resource allocation for other scheduling inputs transmitted from the first RU.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein the one or more rules for selecting the at least one scheduling input comprises on one or more instance priority rules to set priorities among the multiple computation instances, or one or more carrier priority rules for multiple carriers within a computation instance.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein upon selecting at least one scheduling input, the first host sends a slot message comprising extensions of one or more PHY tasks for migration to the first resource scheduler.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein upon the second resource scheduler implementing resource allocation for the at least one scheduling input, a second host within the second DU sends a carrier message comprising extensions to add the one or more PHY tasks for resource allocation to the second resource scheduler.</claim-text></claim></claims></us-patent-application>