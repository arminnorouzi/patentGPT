<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006374A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006374</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17899379</doc-number><date>20220830</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>R</subclass><main-group>12</main-group><subgroup>71</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>23</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>23</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>23</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>25</main-group><subgroup>065</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>R</subclass><main-group>13</main-group><subgroup>24</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>R</subclass><main-group>12</main-group><subgroup>714</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>24</main-group><subgroup>72</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>23</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>23</main-group><subgroup>4006</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>25</main-group><subgroup>0652</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>R</subclass><main-group>13</main-group><subgroup>2435</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>2224</main-group><subgroup>72</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>2924</main-group><subgroup>1436</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>2023</main-group><subgroup>4087</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>R</subclass><main-group>13</main-group><subgroup>621</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">MEMORY ON PACKAGE WITH INTERPOSER WITH COMPRESSION-BASED CONNECTORS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Intel Corporation</orgname><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>LIM</last-name><first-name>Min Suet</first-name><address><city>Gelugor</city><country>MY</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>ALVAREZ MATA</last-name><first-name>Luis Carlos</first-name><address><city>Cartago</city><country>CR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>TIWARI</last-name><first-name>Ankita</first-name><address><city>Sunnyvale</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Xiang</first-name><address><city>Portland</city><state>OR</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>LIAO</last-name><first-name>Jun</first-name><address><city>Portland</city><state>OR</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system connects a board to a substrate through an interposer board having compressible connectors through the interposer board. The connectors through the interposer board are compression-based connector pins that extends above and below the interposer board to make electrical contact between the board and the substrate. The system can include a plate to secure the board to the substrate and compress the compression-based connectors of the interposer board.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="217.42mm" wi="158.75mm" file="US20230006374A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="228.35mm" wi="168.74mm" file="US20230006374A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="228.35mm" wi="168.74mm" file="US20230006374A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="228.35mm" wi="168.74mm" file="US20230006374A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="230.55mm" wi="168.83mm" file="US20230006374A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="232.16mm" wi="168.74mm" file="US20230006374A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="232.16mm" wi="168.74mm" file="US20230006374A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="229.11mm" wi="168.91mm" file="US20230006374A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="222.76mm" wi="168.83mm" file="US20230006374A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="232.49mm" wi="168.83mm" orientation="landscape" file="US20230006374A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="184.57mm" wi="168.83mm" file="US20230006374A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="223.94mm" wi="162.64mm" file="US20230006374A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="203.28mm" wi="143.59mm" file="US20230006374A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="232.49mm" wi="158.92mm" orientation="landscape" file="US20230006374A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="227.58mm" wi="168.99mm" file="US20230006374A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="183.13mm" wi="162.64mm" file="US20230006374A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">Descriptions are generally related to interconnects, and more particular descriptions are related to compressive connectors.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">System memory plays an important role in a computer system. When more system memory can be placed closer to the compute die with a faster interconnect, the compute die can experience lower memory access latency, while decreasing system layout. Memory on package (MOP) is an architecture that provides memory on a substrate with the compute die. MOP architecture can solder a memory die directly onto the package.</p><p id="p-0004" num="0003">When the memory is directly soldered onto the compute substrate, the memory is not removable, and thus cannot be replaced in the event of failure or for purposes of upgrade. Whatever memory is shipped with a system is fixed, and a failure will result in the need to replace the entire compute substrate.</p><p id="p-0005" num="0004">Additionally, when used in high-performance scenarios involving significant numbers of memory access, the memory devices run much hotter than the compute tiles. The high temperature of the memory on the substrate can result in thermal crosstalk between the memory die and the compute die. Thermal interference from the memory can negatively impact the performance of the compute die.</p><p id="p-0006" num="0005">Connector alternatives to direct-attach of the memory can result in large pin pitch or increased system Z-height, which limits how much system size can be reduced. The connector alternatives also have exposed edge contacts, which can oxidize the connections, degrading signal performance. Additionally, connector pins can cause electromagnetic interference (EMI), creating signal degradation as memory systems use increasingly higher signaling frequencies.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWING</heading><p id="p-0007" num="0006">The following description includes discussion of figures having illustrations given by way of example of an implementation. The drawings should be understood by way of example, and not by way of limitation. As used herein, references to one or more examples are to be understood as describing a particular feature, structure, or characteristic included in at least one implementation of the invention. Phrases such as &#x201c;in one example&#x201d; or &#x201c;in an alternative example&#x201d; appearing herein provide examples of implementations of the invention, and do not necessarily all refer to the same implementation. However, they are also not necessarily mutually exclusive.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>C</figref> illustrates diagrams of an example of a circuit having compressible interconnects to connect a memory module.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b>D</figref> illustrates diagrams of an example the circuit with a plate to compress the interconnects to connect a memory module.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIGS. <b>1</b>E-<b>1</b>F</figref> illustrates diagrams of an example of a circuit having compressible interconnects to connect a memory module with a CAMM.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b>G</figref> illustrates diagrams of an example the circuit with a plate to compress the interconnects to connect a memory module with the CAMM.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates diagrams of an example of a system with memory connected to a compute substrate with compressible interconnects.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of an example of a system in which an interposer has C-shaped compression connectors.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>B</figref> are cutaway view diagrams of an example of a memory module to connect to a substrate with an interposer having compression-based connectors.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>B</figref> illustrate an example of a closed loop connector pin that is open when uncompressed and closed when compressed.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>B</figref> illustrate an example of a closed loop connector pin that is closed when uncompressed and closed when compressed.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>C</figref> illustrate an example of a connector enclosed in a cylinder.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of an example of a computer system with a connector having an interposer with compression-based connectors.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of an example of a memory subsystem in which a connector having an interposer with compression-based connectors can be implemented.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram of an example of a computing system in which a connector having an interposer with compression-based connectors can be implemented.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an example of a mobile device in which a connector having an interposer with compression-based connectors can be implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0022" num="0021">Descriptions of certain details and implementations follow, including non-limiting descriptions of the figures, which may depict some or all examples, and well as other potential implementations.</p><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022">As described herein, a system connects a printed circuit board (PCB) with one or more components on it to a substrate through an interposer board. The interposer board has compressible connectors through it. The connectors through the interposer board are compression-based connector pins that extends above and below the interposer board to make electrical contact between the PCB and the substrate. The system can include a plate to secure the PCB to the substrate and compress the compression-based connectors of the interposer board.</p><p id="p-0024" num="0023">The interposer with the through-board compression connectors can be applied to a memory on package (MOP) architecture to provide high memory speed and low power. Instead of needing to directly solder the memory to the package topside, the system can removably connect the memory to the package substrate, allowing memory replacement. In one example, the implementation can include an interposer directly disposed between the memory module and the substrate. In one example, the implementation can include a compression-attached memory module (CAMM) between the memory module and the interposer.</p><p id="p-0025" num="0024">It will be understood that the interposer directly disposed between the memory module and the substrate would have the same pinout or the same contact layout as the memory module. Thus, the connectors in the interposer can be straight through, without signal routing in the interposer board. Rather than lateral signal routing, the signals on the top of the substrate have the same layout as the signals on the bottom of the substrate, as the connectors extend through the board from one signal layout location to a corresponding signal layout location on the other side.</p><p id="p-0026" num="0025">With the CAMM, the system can include routing, such as lateral signal routing, connecting signals from contacts on one side of the CAMM board to corresponding contacts on the other side of the CAMM board, where at least some of the contacts are located at a different relative location instead of being in a location directly opposite the contact on the other side of the board. Some contacts with corresponding signals can be directly opposite each other on different sides of the CAMM board. Other contacts may be directly opposite each other on different sides of the CAMM board and have different signals instead of corresponding signals.</p><p id="p-0027" num="0026">With a CAMM board or without a CAMM board, in one example, the memory module can be attached on a package substrate on a same side as a processor device is mounted. Instead of needing to solder the CAMM board (if one is used) or the memory module (if a CAMM board is not used), the interposer enables removably connecting the memory to the package substrate. In one example, when the system includes a CAMM board, the memory module can be soldered to the CAMM board.</p><p id="p-0028" num="0027">The system can include a plate to secure the memory and the interposer (and optionally the CAMM board) to the package substrate. The plate can be referred to as a bolster plate or a shield. In one example, the This invention is to create a package architecture with CAMM module attach on package top side, side by side with CPU die replacing Memory direct soldered down on package. A bolster plate is placed on top of CAMM module and stretch towards the board side to direct heat from memory down to platform.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates diagrams of an example of a circuit substrate for a system. View <b>102</b> is a cutaway view of the circuit including system board <b>132</b> with substrate <b>140</b> mounted on the system board. Substrate <b>140</b> includes a compute unit mounted on the substrate. View <b>104</b> is a plan view of the circuit. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale. View <b>102</b> and view <b>104</b> are merely representative of the components of the system.</p><p id="p-0030" num="0029">System board <b>132</b> represents a printed circuit board (PCB) or other circuit board. In one example, system board <b>132</b> represents a primary system board for a computing device. In one example, system board <b>132</b> represents a computer system motherboard.</p><p id="p-0031" num="0030">In one example, substrate <b>140</b> represents a PCB or other circuit board. In one example, substrate <b>140</b> represents a system on a chip (SOC) package. The SOC package can be a compute SOC, having a compute unit and memory. The package can be a semiconductor substrate to mount multiple dies, tiles, modules, or a combination of these. Substrate <b>140</b> is illustrated with solder balls to interconnect to system board <b>132</b>.</p><p id="p-0032" num="0031">CPU (central processing unit) <b>144</b> represents a compute unit mounted on substrate <b>140</b>. While the compute unit is specifically shown as a CPU, other compute units can be used. In one example, the compute unit on substrate <b>140</b> is a graphics processing unit (GPU). In one example, the compute unit on substrate <b>140</b> is a field programmable gate array (FPGA). In one example, the compute unit on substrate <b>140</b> is an accelerator compute unit or special-purpose compute unit.</p><p id="p-0033" num="0032">Contacts <b>142</b> represent the pads or contacts on substrate to receive a module board. The layout illustrated in view <b>104</b> represents a layout for an example of a memory module board.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates diagrams of an example of a circuit substrate for a system in accordance with <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. View <b>106</b> is a cutaway view of the circuit of view <b>102</b> including interposer <b>150</b>. View <b>108</b> is a plan view of the circuit in accordance with view <b>104</b>. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale.</p><p id="p-0035" num="0034">Interposer includes connectors <b>152</b>, which can be referred to as connectors, connector pins, through-board connectors, through-board contacts, or other designation. Connectors <b>152</b> are compression-based connectors that extend past at least one surface of the interposer board. In one example, connectors <b>152</b> include a portion that extends past the top surface of interposer <b>150</b>, which would be toward a module board when assembled in the system. In one example, connectors <b>152</b> include a portion extend past the bottom surface of interposer <b>150</b>, which would be toward substrate <b>140</b> when assembled in the system. In one example, connectors <b>152</b> include a first portion that extends past the top surface of interposer <b>150</b> and a second portion that extends past the bottom surface of interposer <b>150</b>.</p><p id="p-0036" num="0035">When compressed, connectors <b>152</b> compress towards the middle of interposer <b>150</b>. If one portion of the connector extends past a surface of interposer <b>150</b>, that portion will compress toward the surface. If connectors <b>152</b> include portions extending past both surfaces, the portions will compress toward the respective surface past which they extend. In one example, connectors <b>152</b> compress to have a vertical height approximately equal to the vertical height of the board of interposer <b>150</b>.</p><p id="p-0037" num="0036">As illustrated in view <b>106</b>, connectors <b>152</b> have a &#x201c;C-shape&#x201d;. The C-shape refers to the fact that connectors <b>152</b> generally have a loop shape, with the loop open on one side to make shape like the capital letter C. Other shapes are possible. Certain alternative shapes are described in more detail below. It will be understood that the C-shape can look like a C at one cross-section, and can have a width from a different perspective of the connector. In one example, connectors <b>152</b> are wires or ribbon wires having a loop shape. View <b>108</b> illustrates an example of a top perspective of connectors <b>152</b>. In one example, the top view of the connectors is a nominally rectangular shape as illustrated in view <b>108</b>.</p><p id="p-0038" num="0037">The C-shaped connector pin of connectors <b>152</b> can reduce the pin length in the connector relative to connectors that connect through inserting a module board edge into a connector slot. The reduction in pin length reduces crosstalk between neighboring signals, improving EMI performance for high speed communication. In one example, as described in more detail below with respect to <figref idref="DRAWINGS">FIGS. <b>5</b>A, <b>5</b>B, <b>6</b>A, and <b>6</b>B</figref>, connectors <b>152</b> can have self-contact of the connector pin. Self-contact of the connector pin forms a loop within the pin itself. The closed loop connector pin can then allow the signal to flow at the path closer to ground to form a shorter return path. When the signal pin electrical path is closer to the ground pin, the shorter return path improves crosstalk reduction.</p><p id="p-0039" num="0038">Interposer <b>150</b> can be referred to as a compression mounted technology (CMT) connector. CMT can refer to an assembly that has connectors/connector pins that compress in response to pressure applied to the assembly. The pressure holds the assembly together and the compression of the connector pins can provide electrical connection between the two terminals to be interconnected, such as between solder bumps/balls and pads/contacts, or between two sets of pads/contacts, or between two sets of solder bumps/balls.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>1</b>C</figref> illustrates diagrams of an example of a circuit for a system in accordance with <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. View <b>110</b> is a cutaway view of the circuit of view <b>106</b> including a memory module, showing the assembly mounted on substrate <b>140</b>. View <b>112</b> is a plan view of the circuit in accordance with view <b>108</b>. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale.</p><p id="p-0041" num="0040">View <b>110</b> illustrates a memory module with dynamic random access memory (DRAM) <b>160</b> interconnected to substrate <b>140</b> through interposer <b>150</b>. The DRAM device can be one of multiple DRAM devices. View <b>112</b> illustrates the memory module with four DRAMs <b>160</b>. Solder <b>162</b> represents solder balls or solder bumps on the bottom of the memory module. The solder represents a ballout/pinout of DRAM <b>160</b>. In one example, solder <b>162</b> represents solder bumps on the memory module. In one example, solder <b>162</b> represents simply the contacts/pads to which solder could be applied to surface mount the memory module. Interposer <b>150</b> can connect with the contacts on the memory module to electrically interconnect it to substrate <b>140</b>.</p><p id="p-0042" num="0041">The ballout/pinout of DRAM <b>160</b> can be in accordance with a standard. In one example, DRAM <b>160</b> is a memory device compatible with a double data rate version 5 (DDR5) standard. In one example, DRAM <b>160</b> is a memory device compatible with a low power double data rate (LPDDR) standard. DRAMs <b>160</b> are mounted on a memory module board. In one example, the memory module board is a PCB. In one example, the memory module board can be a substrate, such as a semiconductor substrate on which memory tiles are disposed.</p><p id="p-0043" num="0042">View <b>110</b> illustrates connectors <b>152</b>&#x2032; being compressed versions of connectors <b>152</b>. Even though the drawings are not necessarily to scale, the drawings illustrate that connectors <b>152</b>&#x2032; have less z-height than connectors <b>152</b> because they are compressed. View <b>112</b> illustrates an example of how solder <b>162</b> and connectors <b>152</b>&#x2032; can overlap. The dashed lines represent the fact that the DRAMs <b>160</b> would be visible in the plan view of view <b>112</b>, and solder <b>162</b> in contact with connectors <b>152</b>&#x2032; is between the module board and substrate <b>140</b>. Connector <b>152</b>&#x2032; enable interposer <b>150</b> to connect DRAMs <b>160</b> to contacts <b>142</b>. In view <b>110</b> and view <b>112</b>, solder <b>162</b> provides a pinout or a pin map for DRAMs <b>160</b>, and contacts <b>142</b> have corresponding pinout/pin map. Contacts <b>142</b> provide open pads on the package topside for interposer <b>150</b>, which represents an example of a CMT connector.</p><p id="p-0044" num="0043">While not specifically illustrated, in one example, connectors <b>152</b> are enclosed within a cylinder. An example of a connector enclosed in a cylinder is discussed below in more detail with respect to <figref idref="DRAWINGS">FIGS. <b>7</b>A, <b>7</b>B, and <b>7</b>C</figref>. The cylinder can be any material to surround the connector. Enclosing the connector in a conductor can further improve the EMI performance of the device.</p><p id="p-0045" num="0044">With the CMT connection of the memory module to substrate <b>140</b>, a system with memory on package can allow upgradability of the memory by the user, modularity of the system by the manufacturer and supplier, and serviceability of the system in the event of memory failure. The system can provide the upgradability, modularity, and serviceability in a form factor compatible with mobile and compact systems. Additionally, the connections do not have exposed edges that could be subject to oxidization, and the connectors do not have long leads that could otherwise create electromagnetic interference at high frequency communication.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>1</b>D</figref> illustrates diagrams of an example of a circuit for a system in accordance with <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>. View <b>114</b> is a cutaway view of the circuit of view <b>110</b> including a memory module, showing the assembly mounted on substrate <b>140</b>. View <b>116</b> is a plan view of the circuit in accordance with view <b>112</b>. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale.</p><p id="p-0047" num="0046">The circuit can include a plate, such as a bolster plate, to secure DRAMs <b>160</b> and the memory module, as well as interposer <b>150</b> to contacts <b>142</b> of substrate <b>140</b>. When secured, connectors <b>152</b>&#x2032; of interposer <b>150</b> are compressed, providing electrical interconnection between the memory module and substrate <b>140</b>.</p><p id="p-0048" num="0047">In view <b>114</b>, plate <b>170</b> is shown in a cutaway fashion, where the top of the plate is above DRAMs <b>160</b>. In one example, plate <b>170</b> includes side walls that extend from the top of the plate down to system board <b>132</b>. In one example, instead of side walls, plate <b>170</b> can be secured through posts that extend from the plate to system board <b>132</b>.</p><p id="p-0049" num="0048">Screws <b>172</b> secure plate <b>170</b> to system board <b>132</b>, or secure plate <b>170</b> through system board <b>132</b> to fasteners on the back side (bottom side) of system board <b>132</b>. View <b>114</b> does not specifically illustrate such fasteners. Screws <b>172</b> can be referred to as retention screws that hold plate <b>170</b> to a system PCB upon system assembly.</p><p id="p-0050" num="0049">In one example, in addition to provide the mechanical/structural function of securing the memory module to substrate, plate <b>170</b> can have a composition that enables good heat transfer. Plate <b>170</b> can act as a heat spreader for DRAMs <b>160</b>. In one example, both the composition of plate <b>170</b> and screws <b>172</b> allows heat transfer from DRAMs <b>160</b> to system board <b>132</b>, or to a thermal solution above plate <b>170</b>, or to both the system board and to a thermal solution. In one example, screws <b>172</b> make electrical and thermal contact with a ground plane of system board <b>132</b>, improving the spread of heat to the system board. Spreading the heat from the memory module down to the system board can reduce thermal crosstalk between CPU <b>144</b> and the memory module.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>1</b>E</figref> illustrates diagrams of an example of a circuit for a system in accordance with <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. View <b>118</b> is a cutaway view of the circuit of view <b>106</b> including a compression attached memory module (CAMM) board. View <b>120</b> is a plan view of the circuit in accordance with view <b>108</b>. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale.</p><p id="p-0052" num="0051">Directly attaching the memory module with interposer <b>150</b> to substrate <b>140</b> assumes that the layout of contacts <b>142</b> corresponds to the layout of contacts on the bottom of the memory module. CAMM <b>180</b> allows routing between the bottom of the memory module to different locations, to align signals with corresponding contacts that have a different location in the contact layout. Thus, CAMM <b>180</b> can allow horizontal routing of the signals to different locations of the layout.</p><p id="p-0053" num="0052">CAMM <b>180</b> includes contacts <b>182</b> on one surface and contacts <b>184</b> on the opposite surface. In one example, contacts <b>182</b> are on a surface of CAMM <b>180</b> that faces the memory module and contacts <b>184</b> are on a surface of CAMM <b>180</b> that faces interposer <b>150</b>. Thus, connectors <b>152</b> make electrical contact with contacts <b>184</b>, which provides an electrical connection from contacts <b>182</b> to contacts <b>142</b> of substrate <b>140</b>. Contacts <b>142</b> can be a land grid array memory (LGAM) connection on substrate <b>140</b>, which can receive a memory module direct-attached by soldering it down on the LGAM. An LGAM connection assumes vertical connections, without lateral routing. Use of CAMM <b>180</b> can provide lateral routing to align signal to the pinout of contacts <b>142</b>.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>1</b>F</figref> illustrates diagrams of an example of a circuit for a system in accordance with <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. View <b>122</b> is a cutaway view of the circuit of view <b>118</b> including a memory module, showing the assembly mounted on substrate <b>140</b>. View <b>124</b> is a plan view of the circuit in accordance with view <b>120</b>. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale.</p><p id="p-0055" num="0054">View <b>122</b> illustrates a memory module with dynamic random access memory (DRAM) <b>160</b> interconnected to substrate <b>140</b> through CAMM <b>180</b> and interposer <b>150</b>. The DRAM device can be one of multiple DRAM devices. View <b>124</b> illustrates the memory module with four DRAMs <b>160</b>. Solder <b>162</b> represents solder balls or solder bumps on the bottom of the memory module. CAMM <b>180</b> connects contacts <b>182</b> to the memory module, and can route the pinout of the memory module to align signals with a different pinout of contacts <b>142</b>. Interposer <b>150</b> can connect with contacts <b>184</b> on CAMM <b>180</b> to electrically interconnect it to substrate <b>140</b>.</p><p id="p-0056" num="0055">View <b>122</b> illustrates connectors <b>152</b>&#x2033; being compressed versions of connectors <b>152</b>. Even though the drawings are not necessarily to scale, the drawings illustrate that connectors <b>152</b>&#x2033; have less z-height than connectors <b>152</b> because they are compressed. View <b>124</b> illustrates an example of how solder <b>162</b> and connectors <b>152</b>&#x2033; can overlap. The dashed lines represent the fact that the DRAMs <b>160</b> would be visible in the plan view of view <b>124</b>, and solder <b>162</b> in contact with connectors <b>152</b>&#x2033; is between the module board and substrate <b>140</b>, through CAMM <b>180</b> and interposer <b>150</b>.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>1</b>G</figref> illustrates diagrams of an example of a circuit for a system in accordance with <figref idref="DRAWINGS">FIG. <b>1</b>F</figref>. View <b>126</b> is a cutaway view of the circuit of view <b>122</b> including a memory module, showing the assembly mounted on substrate <b>140</b>. View <b>128</b> is a plan view of the circuit in accordance with view <b>124</b>. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale.</p><p id="p-0058" num="0057">The circuit can include a plate, such as a bolster plate, to secure DRAMs <b>160</b>, the memory module, CAMM <b>180</b>, and interposer <b>150</b> to contacts <b>142</b> of substrate <b>140</b>. When secured, connectors <b>152</b>&#x2033; of interposer <b>150</b> are compressed, providing electrical interconnection between the memory module and substrate <b>140</b>.</p><p id="p-0059" num="0058">In view <b>126</b>, plate <b>190</b> is shown in a cutaway fashion, where the top of the plate is above DRAMs <b>160</b>. Plate <b>190</b> can be a plate in accordance with any example of plate <b>170</b>. Plate <b>190</b> could have different dimensions than plate <b>170</b> to accommodate the increased height due to the inclusion of CAMM <b>180</b>. Screws <b>192</b> can be in accordance with any example of screws <b>172</b>, where screws <b>192</b> can have different dimensions than screws <b>172</b> to accommodate the increased height due to the inclusion of CAMM <b>180</b>.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates diagrams of an example of a circuit for a system in accordance with an example of <figref idref="DRAWINGS">FIG. <b>1</b>F</figref>. View <b>202</b> is a cutaway view of the circuit including a memory module, a CAMM module, and an interposer, showing the assembly mounted on substrate <b>220</b>. View <b>204</b> is a cutaway view of the circuit of view <b>202</b>, as looking at CPU <b>230</b> from what is the left side of view <b>202</b>. It will be understood that the components, their layouts, and their interconnects are not necessarily to scale.</p><p id="p-0061" num="0060">System board <b>210</b> represents an example of a system PCB or motherboard. Substrate <b>220</b> is mounted on system board <b>210</b>. Substrate <b>220</b> represents a package substrate, which could be an SOC substrate, and includes contacts <b>222</b> as open contacts to receive a memory module. CPU <b>230</b> represents a processing unit mounted directly on substrate <b>220</b>.</p><p id="p-0062" num="0061">The system includes a memory module with DRAMs <b>260</b> to mount on substrate <b>220</b>. Instead of directly soldering the memory module onto contacts <b>222</b>, the system includes interposer <b>240</b> and optionally includes CAMM <b>250</b> between the memory module and substrate <b>220</b>.</p><p id="p-0063" num="0062">The circuit can include a plate (alternatively can be a shield or a cover) to secure DRAMs <b>260</b> and the memory module, as well as interposer <b>240</b> (and CAMM <b>250</b> if the CAMM is included) to contacts <b>222</b> of substrate <b>220</b>. Interposer <b>240</b> can be an interposer in accordance with any example provided, which includes compression based connectors (interconnects <b>242</b>) to provide straight through signaling from the top side of the interposer board to the bottom side of the interposer board. CAMM <b>250</b> can be a CAMM in accordance with any example provided, which provides routing to align signals for different contact layouts.</p><p id="p-0064" num="0063">As illustrated, interconnects <b>242</b> are compressed. Interconnects <b>242</b> provide electrical interconnection between contacts <b>222</b> of substrate <b>220</b> and contacts <b>254</b> of CAMM <b>250</b>, if the CAMM is included, or between contacts <b>222</b> and contacts of module board <b>262</b> when the CAMM is not included. The memory module includes module board <b>262</b> and DRAMs <b>260</b> mounted on module board <b>262</b>. When CAMM <b>250</b> is included, module board <b>262</b> can be soldered to contacts <b>252</b> of CAMM <b>250</b>, making a CAMM memory module.</p><p id="p-0065" num="0064">In view <b>202</b>, plate <b>270</b> is shown in a cutaway fashion, where the top of the plate is above DRAMs <b>260</b>. In one example, plate <b>170</b> includes side walls, including sidewall <b>272</b>, that extend from the top of the plate down to system board <b>210</b>. In one example, instead of side walls, plate <b>270</b> can be secured through posts that extend from the top part of the plate to system board <b>210</b>.</p><p id="p-0066" num="0065">Screw <b>274</b> secures plate <b>270</b> to system board <b>210</b>, or secures plate <b>270</b> through system board <b>210</b> to fasteners on the back side (bottom side) of system board <b>210</b>. View <b>202</b> does not specifically illustrate such fasteners. Multiple screws can be included per sidewall to secure plate <b>270</b> to system board <b>210</b>. In one example, the system includes one screw per sidewall to secure plate <b>270</b>. View <b>202</b> illustrates screw <b>274</b> in dashed lines to represent the fact that it is positioned behind the components in that view, extending through plate sidewall <b>272</b>.</p><p id="p-0067" num="0066">In view <b>202</b>, thermal layer <b>280</b> is over CPU <b>230</b>, and will extend vertically to a heat spreader or other thermal solution. Thermal layer <b>280</b> has high thermal conductivity to fill the gap between CPU <b>230</b> and the heat spreader for the system. In one example, the system can include thermal layer <b>282</b> over plate <b>270</b> to help spread heat from the memory module. In one example, thermal layer <b>282</b> is not included, and the system spreads the heat from the memory module to system board <b>210</b> through plate sidewall <b>272</b>.</p><p id="p-0068" num="0067">View <b>204</b> illustrates that the system can include multiple DRAMs <b>260</b> on the memory module, connected through interposer <b>240</b> and CAMM <b>250</b>. Thus, module board <b>262</b> has multiple DRAMs <b>260</b>. For simplicity in showing the circuit, there is a break, which means all DRAMs <b>260</b> are not fully shown.</p><p id="p-0069" num="0068">View <b>204</b> illustrates optional thermal layer <b>282</b> over plate <b>270</b>. View also illustrates thermal layer <b>280</b> over CPU <b>230</b>. View <b>204</b> illustrates screw <b>274</b> in plate sidewall <b>272</b> and screw <b>278</b> in plate sidewall <b>276</b>. Plate sidewall <b>272</b> and plate sidewall <b>276</b> extend from a top of plate <b>270</b> to system board <b>210</b>.</p><p id="p-0070" num="0069">In one example, as an alternative to sidewalls on plate <b>270</b>, the system can include structures (e.g., posts, standoffs) that extend from the top of plate <b>270</b> to system board <b>210</b>. In one example, the structures can be physically connected to plate <b>270</b>, such as through welding or soldering. In one example, the structures can be physically coupled to plate <b>270</b> through an adhesive. Whether physically integrated or in physical contact, in one example, the structures have high thermal conductivity to aid in transferring heat from the memory devices through plate <b>270</b> to system board <b>210</b>. In one example, heat transfer occurs through plate <b>270</b> and screw <b>274</b>.</p><p id="p-0071" num="0070">A DRAM device soldered directly onto substrate <b>220</b> would create thermal crosstalk with CPU <b>230</b>, which would degrade the performance of the CPU. The operating temperature of DRAMs can be approximately 85-100 C, which is higher than the operating temperature of CPU <b>230</b>. In one example, plate <b>270</b> has a composition to provide high thermal conductivity, as well as screw <b>274</b> and screw <b>278</b> having high thermal conductivity to transfer heat from the memory module to system board <b>210</b>. In one example, the system also includes the optional thermal layer <b>282</b> to further enhance the ability of the system to remove heat from the memory.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of an example of a system in which an interposer has C-shaped compression connectors. The features of system <b>300</b> are to be understood as representative, and do not necessarily reflect the scale of a real system. In some instances, certain features are exaggerated for purposes of labeling or identification of the features. The layouts are also not necessarily reflective of an actual implementation (e.g., in terms of number of contacts), but are representative of the correspondence of contacts between different boards/substrates.</p><p id="p-0073" num="0072">System <b>300</b> includes module <b>340</b> to interconnect with substrate <b>310</b>. Module <b>340</b> includes one or more components to interconnect with substrate <b>310</b>, and can thus be referred to as a component board. In one example, module <b>340</b> includes memory devices, represented by DRAMs <b>342</b>, which can represent any of a wide variety of volatile system memory or graphics memory. Substrate <b>310</b> is mounted on system board <b>302</b>.</p><p id="p-0074" num="0073">In one example, substrate <b>310</b> represents an SOC. Substrate <b>310</b> includes processor <b>320</b> to execute system functions in system <b>300</b>. Processor <b>320</b> can execute an operating system (OS) that controls the operation of system <b>300</b> or one or more applications that control the flow of operations and data in system <b>300</b>. In one example, processor <b>320</b> represents a central processing unit (CPU). In one example, processor <b>320</b> represents a graphics processing unit (GPU). In one example, processor <b>320</b> represents a visual processing unit (VPU) or other artificial intelligence (AI) processing unit. Processor <b>320</b> can include one core or multiple cores.</p><p id="p-0075" num="0074">In an implementation where module <b>340</b> represents a memory module, system <b>300</b> can provide high memory density and high memory speed for each compute unit of substrate <b>310</b>. The ability to provide high memory density and high memory speed enables system <b>300</b> to improve maximum multithreaded performance.</p><p id="p-0076" num="0075">In one example, the PCB of module <b>340</b> is a carrier of memory devices of system <b>300</b>, represented by DRAM devices <b>342</b>. System <b>300</b> illustrates contact layout <b>344</b> of module <b>340</b> to represent the ball out or pin out of DRAMs <b>342</b>. As illustrated, contact layout <b>344</b> can represent a ball out of the PCB of module <b>340</b>. While not specifically illustrated in system <b>300</b>, if there is a difference in signal layout between contact layout <b>344</b> of module <b>340</b> and contact layout <b>312</b> of substrate <b>310</b>, system <b>300</b> can include a CAMM module.</p><p id="p-0077" num="0076">In one example, system <b>300</b> includes interposer <b>330</b>, which represents an interposer connector board to enable a high speed connection of module <b>340</b> to substrate <b>310</b>, while also being removable. The removable nature of module <b>340</b> enables system <b>300</b> to be upgraded. For example, module <b>340</b> can be replaced with a new module in the case of failure or in the case of increasing to a higher-performance component or replacing a failed component.</p><p id="p-0078" num="0077">In one example, interposer <b>330</b> represents a PCB with contacts on one side (the top side or top surface, which faces module <b>340</b>) and contacts on the opposite side (the bottom side or bottom surface, which faces substrate <b>310</b>). Interposer <b>330</b> can also include direct through-hole correspondence between the contacts on the top side and the contacts on the bottom side, without routing of signals to different locations on the board or without changing the contact layout with respect to what is presented by module <b>340</b>. Such routing can be referred to as passthrough routing.</p><p id="p-0079" num="0078">Interposer <b>330</b> includes compression-based connectors through the interposer board, represented by interconnects <b>332</b>. In one example, interconnects <b>332</b> are C-shaped connector pins. Interconnects <b>332</b> can be in accordance with any example of compression-based connectors provided herein.</p><p id="p-0080" num="0079">Substrate <b>310</b> includes contact layout <b>312</b> which is a contact array to provide connection points for module <b>340</b>. In one example, there will be no change in design for substrate <b>310</b> between a memory-down configuration and a memory module configuration. Thus, contact layout <b>312</b> can match with the pin configuration of contact layout <b>344</b> of DRAM devices <b>342</b>, allowing devices to be soldered directly to the system board, or to have module <b>340</b> mounted on the board.</p><p id="p-0081" num="0080">Reference to a layout matching or corresponding to another layout of connectors refers to the signal layout for the contacts. Thus, for a signal in one physical location of a layout on one board, the connector in the corresponding or matching physical location will carry the same signal.</p><p id="p-0082" num="0081">System <b>300</b> includes plate <b>350</b> to press module <b>340</b> and interposer <b>330</b> to substrate <b>310</b>. System <b>300</b> can include screws <b>354</b> to secure plate <b>350</b> to system board <b>302</b>. Plate <b>350</b> can include holes <b>352</b> through which screws <b>354</b> can pass to secure to a fastener through mount <b>356</b>. In one example, mount <b>356</b> is threaded and can be the fastener. In one example, mount <b>356</b> allows screws <b>354</b> to pass through to secure with fasteners on the back side of system board <b>302</b>. System board <b>302</b> includes mounts <b>356</b> to receive screws <b>354</b> for securing plate <b>350</b> to the system board.</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a cutaway view of an example of a memory module to connect to a substrate with an interposer having compression-based connectors. The memory module provides one example, and other modules can implement the features related to the cover and the grounding as described.</p><p id="p-0084" num="0083">System <b>402</b> illustrates a system in accordance with an example of the systems with compression-based connector pins. Substrate <b>410</b> represents a system board or a motherboard. In one example, substrate <b>410</b> includes pad array <b>412</b> on the surface of the board. Pad array <b>412</b> represents pads or connection points on substrate <b>410</b>. In one example, pad array <b>412</b> has a layout that matches the layout of ball array <b>432</b> of board <b>430</b>. In one example, pad array <b>412</b> has a different layout than ball array <b>432</b>, and system <b>402</b> can include a CAMM board (not shown).</p><p id="p-0085" num="0084">System <b>402</b> includes memory board <b>430</b> on which memory dies <b>440</b> are mounted. Memory dies <b>440</b> represent an example of an integrated circuit component mounted on a module board. Memory dies <b>440</b> include ball array <b>442</b>, which has a pinout or connector configuration that can be defined by specification. Memory dies <b>440</b> mount to memory board <b>430</b> through contact array <b>434</b>, which has a connector layout that matches the connector layout of the individual memory dies. Ball array <b>432</b> refers to the fact that a module board can have a ball grid array (BGA). The contacts are shown with solder balls in system <b>402</b>. In one example, the BGA of the module board is left open to connection to interconnects <b>422</b>.</p><p id="p-0086" num="0085">In one example, system <b>402</b> includes board <b>420</b>, which represents an interposer or interface board. Board <b>420</b> includes interconnects <b>422</b> on the surface that faces substrate <b>410</b>. Interconnects <b>422</b> represent compression-based connectors in accordance with any example provided herein. In the initial configuration of system <b>402</b>, interconnects extend above and below board <b>420</b> as they are in an uncompressed state.</p><p id="p-0087" num="0086">System <b>402</b> includes plate <b>450</b> as a cover, plate, or shield for the module that includes memory dies <b>440</b>, board <b>430</b>, and board <b>420</b>. In one example, plate <b>450</b> is secured to a system board with screws (not specifically illustrated). Plate <b>450</b> can be a plate in accordance with any description herein. Plate <b>450</b> when secured can press down on the other modules and board illustrated, which can compress interconnects <b>422</b>.</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a cutaway view of an example of a memory module as assembled. System <b>404</b> illustrates an example of system <b>402</b>. System <b>402</b> can be referred to as a pre-assembly and system <b>404</b> can be referred to as post-assembly.</p><p id="p-0089" num="0088">In system <b>404</b>, plate <b>450</b> is mounted to the system board, covering memory dies <b>440</b> mounted to board <b>430</b>, which is electrically connected to substrate <b>410</b> through board <b>420</b> (the interposer). The interconnects are compressed, which are identified as interconnects <b>422</b>&#x2032;, and they electrically connect pad array <b>412</b> to ball array <b>432</b>.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> illustrates an example of a connector pin that has one side that is physically open when uncompressed. Pin state <b>502</b> has connector <b>510</b> with gap <b>522</b> in path <b>542</b>. Gap <b>522</b> is an opening in the electrical path of path <b>542</b> in connector <b>510</b> in the uncompressed state of the pin. Connector <b>510</b> can be an example of an electrical conductor in a C-shaped connector. Connector <b>510</b> includes path <b>544</b>, which is electrically and physically closed even in the uncompressed state. Connector <b>510</b> includes portion <b>532</b>, which can be one end (e.g., a top end) of the loop or C shape, and portion <b>534</b>, which can be the other end (e.g., a bottom end) of the loop or C shape.</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates an example of the closed loop connector pin of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, which changes from open to closed when compressed. The arrow in pin state <b>504</b> indicates compression <b>512</b>, indicating the application of compression to the pin. In response to compression <b>512</b>, the connector closes together, making contact <b>524</b> where gap <b>522</b> was. The closed connector is indicated as connector <b>510</b>&#x2032;. Thus, in response to compression <b>512</b>, the physical opening of path <b>542</b> becomes a closed loop, and the path becomes path <b>542</b>&#x2032;. Connector <b>510</b> has a starting shape of pin state <b>502</b>, where connector <b>510</b> is in pin state <b>502</b> at rest. Under compression the pin will be in pin state <b>504</b>, closing the gap and causing connector <b>510</b>&#x2032; to contact itself in a loop with two electrical paths. With the compression, one or both ends can compress toward the middle of connector <b>510</b>&#x2032;. Portion <b>532</b>&#x2032; represents the potential different position of the one end, and portion <b>534</b>&#x2032; represent the potential different position of the other end.</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> illustrates an example of a connector pin that has both side of the loop physically closed when uncompressed. Pin state <b>602</b> has connector <b>610</b> with closed portion <b>622</b> in path <b>642</b>. Thus, in pin state <b>602</b>, path <b>642</b> is physically and electrically closed. Closed portion <b>622</b> is a connection of connector <b>610</b> with itself, but has a movable part that can move in response to compression of the pin. Pin state <b>602</b> represents the pin at rest, where connector <b>610</b> is closed, with some overlap of the connector at one portion of the loop of connector <b>610</b>. Connector <b>610</b> can be an example of an electrical conductor in a C-shaped conductor, although it is already a complete physical loop. Connector <b>610</b> includes path <b>644</b>, which is electrically and physically closed in the uncompressed state. Connector <b>610</b> includes portion <b>632</b>, which can be one end (e.g., a top end) of the loop or C shape, and portion <b>634</b>, which can be the other end (e.g., a bottom end) of the loop or C shape.</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> illustrates an example of the closed loop connector pin of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, which remains closed as it compresses. The arrow in pin state <b>604</b> indicates compression <b>612</b>, indicating the application of compression to the pin. In response to compression <b>612</b>, the overlapped part of the connector closes farther together. The compression connector is indicated as connector <b>610</b>&#x2032;. The connector can be made to slide along itself at the portion of connector <b>610</b>&#x2032; labeled contact <b>624</b>. In response to compression <b>612</b>, the space enclosed by the loop of the pin can be made smaller, thus going from a closed loop to a smaller loop in response to compression of the connector. Connector <b>610</b>&#x2032; has two electrical paths, path <b>642</b> and path <b>644</b>. With the compression, one or both ends can compress toward the middle of connector <b>610</b>&#x2032;. Portion <b>632</b>&#x2032; represents the potential different position of the one end, and portion <b>634</b>&#x2032; represent the potential different position of the other end.</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> illustrates an example of an uncompressed connector enclosed in a cylinder. Pin state <b>702</b> has connector <b>710</b> with an electrical conductor in a C-shape. A C-shaped connector can have an electrical and physical path through one side of the connector, with the other side open. Thus, a C-shape can make an electrical connection and have an open shape to allow the connector to compress. Connector <b>710</b> is enclosed within cylinder <b>720</b>. Pin state <b>702</b> is an uncompressed state of connector <b>710</b>. In one example, connector <b>710</b> has end <b>712</b> that extends past one end of cylinder <b>720</b> and end <b>714</b> that extends past the other end of cylinder <b>720</b>.</p><p id="p-0095" num="0094">In one example, connector <b>710</b> only extends away from cylinder at one end. Thus, end <b>712</b> could protrude only enough from cylinder <b>720</b> to make contact with the pad/contact to which is should electrically connect, and end <b>714</b> can extend past the end of cylinder <b>720</b> in the uncompressed state. In the compressed state, the extended end could compress toward the end of the cylinder, protruding from the end of cylinder <b>720</b> enough to make an electrical connection, but otherwise being compressed into cylinder <b>720</b>.</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> illustrates an example of a compressed connector enclosed in a cylinder. Pin state <b>704</b> represents a compressed state of the connector of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>. In response to compression, one or both ends of the connector compress. Connector <b>710</b>&#x2032; represents the connector when compressed. End <b>712</b>&#x2032; represents a compressed end of connector <b>710</b>. In one example, end <b>712</b>&#x2032; can represent a state of end <b>712</b> for an end that does not compress. End <b>714</b>&#x2032; represents a compressed end of connector <b>710</b>. In one example, end <b>714</b>&#x2032; can represent a state of end <b>714</b> for an end that does not compress. It will be understood that in response to compression the gap/opening on the one side of the connector gets smaller even if it does not close all the way.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>7</b>C</figref> illustrates an example of a compressible connector enclosed in a cylinder. View <b>706</b> represents a top view of the connector of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>. In one example, cylinder <b>720</b> is an open tube having a generally circular or oval cross section. Connector <b>710</b> can be enclosed within cylinder <b>720</b>. It will be understood that connector <b>710</b> can be connected to a wall of cylinder <b>720</b> when a cylinder is used. In an example where cylinder <b>720</b> is not used, the connector can be connected to the board or to a structure of the board of the interposer.</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of an example of a computer system with a connector having an interposer with compression-based connectors. System <b>800</b> represents a computing system or a computing device. For example, system <b>800</b> can be a laptop computer, a tablet computer, a smart phone or other handheld electronic device, or a two-in-one device. The display for the device is not explicitly shown in system <b>800</b>, but can be a screen that covers device, or can be a display that connects via hinge, built on top of the chassis of system <b>800</b>, or connect with some other connector (not shown).</p><p id="p-0099" num="0098">In one example, system <b>800</b> has a clamshell design, where the processing elements and keyboard are fixed to the display element. In one example, system <b>800</b> is a detachable computer, where the processor and display are part of a common unit has a detachable keyboard.</p><p id="p-0100" num="0099">System <b>800</b> includes system board <b>810</b>, which represents a primary PCB to control the operation in system <b>800</b>. System board <b>810</b> can be referred to as a motherboard in certain computer configurations. System board <b>810</b> represents a rectangular system board, which is a traditional system board configuration, with a length and a width (x and y axis, not specifically labeled for orientation in system <b>800</b>).</p><p id="p-0101" num="0100">System board <b>810</b> includes processor <b>812</b>, which represents a host processor or main processing unit for system <b>800</b>. In one example, processor <b>812</b> is a multicore processor. Processor <b>812</b> can be a central processing unit (CPU) or system on a chip (SOC) that includes a CPU or other processor. In one example, processor <b>812</b> can include a graphics processing unit (GPU), which can be the same as the primary processor, or separate from the primary processor.</p><p id="p-0102" num="0101">System board <b>810</b> includes operational memory or system memory for the computing device. The operational memory generally is, or includes, volatile memory, which has indeterminate state if power is interrupted to the memory. In one example, system <b>800</b> includes memory provided by module <b>820</b>. Module <b>820</b> illustrates a module that includes multiple memory devices or memory chips, represented by memory (MEM) <b>822</b>. Module <b>820</b> can be a memory module in accordance with any example herein.</p><p id="p-0103" num="0102">Module <b>820</b> interconnects with system board <b>810</b> via a connector array of an interposer board that has C-shaped connector pins, in accordance with any example provided. In one example, module <b>820</b> connects to system board <b>810</b> through a substrate shared with processor <b>812</b>, and module <b>820</b> is connected to the substrate through an interposer board. In one example, module <b>820</b> is connected to system board <b>810</b> through the interposer, without a separate substrate. Either connected directly to system board <b>810</b> or connected through a substrate to system board <b>810</b>, in one example, the system further includes a CAMM board to provide routing from module <b>820</b> to system board <b>810</b> (or to the substrate, if the module is mounted to system board <b>810</b> through a separate substrate). Connector (CONN) <b>814</b> represents the connector assembly with the interposer and plate <b>816</b> and optionally with the CAMM board. Connector <b>814</b> connects module <b>820</b> to system board <b>810</b> through compression, in accordance with any example provided, such as securing plate <b>816</b> to system board <b>810</b>.</p><p id="p-0104" num="0103">System <b>800</b> includes one or more peripherals connected to system board <b>810</b>. Peripheral <b>830</b> ad peripheral <b>840</b> represent different peripherals that could be included in system <b>800</b>. The size and number of the peripherals can be different in different system configurations. In one example, system <b>800</b> includes a solid state drive (SSD) as a peripheral device. In one example, system <b>800</b> includes a computation accelerator as a peripheral device. In one example, system <b>800</b> includes a wireless communication module or other network interface. A wireless communication module can be or include WiFi, Bluetooth (BT), WWAN (wireless wide area network) such as cellular, or other wireless communication.</p><p id="p-0105" num="0104">System <b>800</b> includes connectors <b>850</b>, which represent I/O (input/output) connectors to devices external to system <b>800</b>. For example, connectors <b>850</b> can be or include USB (universal serial bus) connectors, video connectors such as HDMI (high definition media interface), company-proprietary connectors, or other I/O connectors.</p><p id="p-0106" num="0105">System <b>800</b> includes battery <b>860</b> to power the system. In one example, system board <b>810</b> at least partially overlaps battery <b>860</b>. It will be understood that the relative size, spacing, and location of components will be different depending on what type of system is implemented for system <b>800</b>. The size and layout of system <b>800</b> is not necessarily intended to be typical or representative of each possible implementation, but illustrates possible components for such an implementation.</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of an example of a memory subsystem in which a connector having an interposer with compression-based connectors can be implemented. System <b>900</b> includes a processor and elements of a memory subsystem in a computing device. System <b>900</b> is an example of a system in which memory can be connected to a substrate or a system board in accordance with any example provided.</p><p id="p-0108" num="0107">In one example, system <b>900</b> includes connector (CONN) <b>990</b> to interconnect memory module <b>970</b> and memory devices <b>940</b> of the memory module with memory controller <b>920</b>. Memory controller <b>920</b> is disposed on a system board that includes pins, pads, or contacts to connect with memory device <b>940</b>. Connector (CONN) <b>990</b> represents the connector assembly with the interposer and plate and optionally with a CAMM board. Connector <b>990</b> connects memory module <b>970</b> to the system board through compression in accordance with any example provided.</p><p id="p-0109" num="0108">Processor <b>910</b> represents a processing unit of a computing platform that may execute an operating system (OS) and applications, which can collectively be referred to as the host or the user of the memory. The OS and applications execute operations that result in memory accesses. Processor <b>910</b> can include one or more separate processors. Each separate processor can include a single processing unit, a multicore processing unit, or a combination. The processing unit can be a primary processor such as a CPU (central processing unit), a peripheral processor such as a GPU (graphics processing unit), or a combination. Memory accesses may also be initiated by devices such as a network controller or hard disk controller. Such devices can be integrated with the processor in some systems or attached to the processer via a bus (e.g., PCI express), or a combination. System <b>900</b> can be implemented as an SOC (system on a chip), or be implemented with standalone components.</p><p id="p-0110" num="0109">Reference to memory devices can apply to different memory types. Memory devices often refers to volatile memory technologies. Volatile memory is memory whose state (and therefore the data stored on it) is indeterminate if power is interrupted to the device. Nonvolatile memory refers to memory whose state is determinate even if power is interrupted to the device. Dynamic volatile memory requires refreshing the data stored in the device to maintain state. One example of dynamic volatile memory includes DRAM (dynamic random-access memory), or some variant such as synchronous DRAM (SDRAM). A memory subsystem as described herein may be compatible with a number of memory technologies, such as DDR4 (double data rate version 4, JESD79-4, originally published in September 2012 by JEDEC (Joint Electron Device Engineering Council, now the JEDEC Solid State Technology Association), LPDDR4 (low power DDR version 4, JESD209-4, originally published by JEDEC in August 2014), WIO2 (Wide I/O 2 (WideIO2), JESD229-2, originally published by JEDEC in August 2014), HBM (high bandwidth memory DRAM, JESD235A, originally published by JEDEC in November 2015), DDR5 (DDR version 5, originally published by JEDEC in July 2020), LPDDR5 (LPDDR version 5, JESD209-5, originally published by JEDEC in February 2019), HBM2 ((HBM version 2), currently in discussion by JEDEC), or others or combinations of memory technologies, and technologies based on derivatives or extensions of such specifications.</p><p id="p-0111" num="0110">Memory controller <b>920</b> represents one or more memory controller circuits or devices for system <b>900</b>. Memory controller <b>920</b> represents control logic that generates memory access commands in response to the execution of operations by processor <b>910</b>. Memory controller <b>920</b> accesses one or more memory devices <b>940</b>. Memory devices <b>940</b> can be DRAM devices in accordance with any referred to above. In one example, memory devices <b>940</b> are organized and managed as different channels, where each channel couples to buses and signal lines that couple to multiple memory devices in parallel. Each channel is independently operable. Thus, each channel is independently accessed and controlled, and the timing, data transfer, command and address exchanges, and other operations are separate for each channel. Coupling can refer to an electrical coupling, communicative coupling, physical coupling, or a combination of these. Physical coupling can include direct contact. Electrical coupling includes an interface or interconnection that allows electrical flow between components, or allows signaling between components, or both. Communicative coupling includes connections, including wired or wireless, that enable components to exchange data.</p><p id="p-0112" num="0111">In one example, settings for each channel are controlled by separate mode registers or other register settings. In one example, each memory controller <b>920</b> manages a separate memory channel, although system <b>900</b> can be configured to have multiple channels managed by a single controller, or to have multiple controllers on a single channel. In one example, memory controller <b>920</b> is part of host processor <b>910</b>, such as logic implemented on the same die or implemented in the same package space as the processor.</p><p id="p-0113" num="0112">Memory controller <b>920</b> includes I/O interface logic <b>922</b> to couple to a memory bus, such as a memory channel as referred to above. I/O interface logic <b>922</b> (as well as I/O interface logic <b>942</b> of memory device <b>940</b>) can include pins, pads, connectors, signal lines, traces, or wires, or other hardware to connect the devices, or a combination of these. I/O interface logic <b>922</b> can include a hardware interface. As illustrated, I/O interface logic <b>922</b> includes at least drivers/transceivers for signal lines. Commonly, wires within an integrated circuit interface couple with a pad, pin, or connector to interface signal lines or traces or other wires between devices. I/O interface logic <b>922</b> can include drivers, receivers, transceivers, or termination, or other circuitry or combinations of circuitry to exchange signals on the signal lines between the devices. The exchange of signals includes at least one of transmit or receive. While shown as coupling I/O <b>922</b> from memory controller <b>920</b> to I/O <b>942</b> of memory device <b>940</b>, it will be understood that in an implementation of system <b>900</b> where groups of memory devices <b>940</b> are accessed in parallel, multiple memory devices can include I/O interfaces to the same interface of memory controller <b>920</b>. In an implementation of system <b>900</b> including one or more memory modules <b>970</b>, I/O <b>942</b> can include interface hardware of the memory module in addition to interface hardware on the memory device itself. Other memory controllers <b>920</b> will include separate interfaces to other memory devices <b>940</b>.</p><p id="p-0114" num="0113">The bus between memory controller <b>920</b> and memory devices <b>940</b> can be implemented as multiple signal lines coupling memory controller <b>920</b> to memory devices <b>940</b>. The bus may typically include at least clock (CLK) <b>932</b>, command/address (CMD) <b>934</b>, and write data (DQ) and read data (DQ) <b>936</b>, and zero or more other signal lines <b>938</b>. In one example, a bus or connection between memory controller <b>920</b> and memory can be referred to as a memory bus. In one example, the memory bus is a multi-drop bus. The signal lines for CMD can be referred to as a &#x201c;C/A bus&#x201d; (or ADD/CMD bus, or some other designation indicating the transfer of commands (C or CMD) and address (A or ADD) information) and the signal lines for write and read DQ can be referred to as a &#x201c;data bus.&#x201d; In one example, independent channels have different clock signals, C/A buses, data buses, and other signal lines. Thus, system <b>900</b> can be considered to have multiple &#x201c;buses,&#x201d; in the sense that an independent interface path can be considered a separate bus. It will be understood that in addition to the lines explicitly shown, a bus can include at least one of strobe signaling lines, alert lines, auxiliary lines, or other signal lines, or a combination. It will also be understood that serial bus technologies can be used for the connection between memory controller <b>920</b> and memory devices <b>940</b>. An example of a serial bus technology is 86106 encoding and transmission of high-speed data with embedded clock over a single differential pair of signals in each direction. In one example, CMD <b>934</b> represents signal lines shared in parallel with multiple memory devices. In one example, multiple memory devices share encoding command signal lines of CMD <b>934</b>, and each has a separate chip select (CS_n) signal line to select individual memory devices.</p><p id="p-0115" num="0114">It will be understood that in the example of system <b>900</b>, the bus between memory controller <b>920</b> and memory devices <b>940</b> includes a subsidiary command bus CMD <b>934</b> and a subsidiary bus to carry the write and read data, DQ <b>936</b>. In one example, the data bus can include bidirectional lines for read data and for write/command data. In another example, the subsidiary bus DQ <b>936</b> can include unidirectional write signal lines for write and data from the host to memory, and can include unidirectional lines for read data from the memory to the host. In accordance with the chosen memory technology and system design, other signals <b>938</b> may accompany a bus or sub bus, such as strobe lines DQS. Based on design of system <b>900</b>, or implementation if a design supports multiple implementations, the data bus can have more or less bandwidth per memory device <b>940</b>. For example, the data bus can support memory devices that have either a x4 interface, a x8 interface, a x16 interface, or other interface. The convention &#x201c;xW,&#x201d; where W is an integer that refers to an interface size or width of the interface of memory device <b>940</b>, which represents a number of signal lines to exchange data with memory controller <b>920</b>. The interface size of the memory devices is a controlling factor on how many memory devices can be used concurrently per channel in system <b>900</b> or coupled in parallel to the same signal lines. In one example, high bandwidth memory devices, wide interface devices, or stacked memory configurations, or combinations, can enable wider interfaces, such as a x128 interface, a x256 interface, a x512 interface, a x1024 interface, or other data bus interface width.</p><p id="p-0116" num="0115">In one example, memory devices <b>940</b> and memory controller <b>920</b> exchange data over the data bus in a burst, or a sequence of consecutive data transfers. The burst corresponds to a number of transfer cycles, which is related to a bus frequency. In one example, the transfer cycle can be a whole clock cycle for transfers occurring on a same clock or strobe signal edge (e.g., on the rising edge). In one example, every clock cycle, referring to a cycle of the system clock, is separated into multiple unit intervals (UIs), where each UI is a transfer cycle. For example, double data rate transfers trigger on both edges of the clock signal (e.g., rising and falling). A burst can last for a configured number of UIs, which can be a configuration stored in a register, or triggered on the fly. For example, a sequence of eight consecutive transfer periods can be considered a burst length eight (BL8), and each memory device <b>940</b> can transfer data on each UI. Thus, a x8 memory device operating on BL8 can transfer 64 bits of data (8 data signal lines times 8 data bits transferred per line over the burst). It will be understood that this simple example is merely an illustration and is not limiting.</p><p id="p-0117" num="0116">Memory devices <b>940</b> represent memory resources for system <b>900</b>. In one example, each memory device <b>940</b> is a separate memory die. In one example, each memory device <b>940</b> can interface with multiple (e.g., 2) channels per device or die. Each memory device <b>940</b> includes I/O interface logic <b>942</b>, which has a bandwidth determined by the implementation of the device (e.g., x16 or x8 or some other interface bandwidth). I/O interface logic <b>942</b> enables the memory devices to interface with memory controller <b>920</b>. I/O interface logic <b>942</b> can include a hardware interface, and can be in accordance with I/O <b>922</b> of memory controller, but at the memory device end. In one example, multiple memory devices <b>940</b> are connected in parallel to the same command and data buses. In another example, multiple memory devices <b>940</b> are connected in parallel to the same command bus, and are connected to different data buses. For example, system <b>900</b> can be configured with multiple memory devices <b>940</b> coupled in parallel, with each memory device responding to a command, and accessing memory resources <b>960</b> internal to each. For a Write operation, an individual memory device <b>940</b> can write a portion of the overall data word, and for a Read operation, an individual memory device <b>940</b> can fetch a portion of the overall data word. The remaining bits of the word will be provided or received by other memory devices in parallel.</p><p id="p-0118" num="0117">In one example, memory devices <b>940</b> are disposed directly on a motherboard or host system platform (e.g., a PCB (printed circuit board) on which processor <b>910</b> is disposed) of a computing device. In one example, memory devices <b>940</b> can be organized into memory modules <b>970</b>. In one example, memory modules <b>970</b> represent dual inline memory modules (DIMMs). In one example, memory modules <b>970</b> represent other organization of multiple memory devices to share at least a portion of access or control circuitry, which can be a separate circuit, a separate device, or a separate board from the host system platform. Memory modules <b>970</b> can include multiple memory devices <b>940</b>, and the memory modules can include support for multiple separate channels to the included memory devices disposed on them. In another example, memory devices <b>940</b> may be incorporated into the same package as memory controller <b>920</b>, such as by techniques such as multi-chip-module (MCM), package-on-package, through-silicon via (TSV), or other techniques or combinations. Similarly, in one example, multiple memory devices <b>940</b> may be incorporated into memory modules <b>970</b>, which themselves may be incorporated into the same package as memory controller <b>920</b>. It will be appreciated that for these and other implementations, memory controller <b>920</b> may be part of host processor <b>910</b>.</p><p id="p-0119" num="0118">Memory devices <b>940</b> each include one or more memory arrays <b>960</b>. Memory array <b>960</b> represents addressable memory locations or storage locations for data. Typically, memory array <b>960</b> is managed as rows of data, accessed via wordline (rows) and bitline (individual bits within a row) control. Memory array <b>960</b> can be organized as separate channels, ranks, and banks of memory. Channels may refer to independent control paths to storage locations within memory devices <b>940</b>. Ranks may refer to common locations across multiple memory devices (e.g., same row addresses within different devices) in parallel. Banks may refer to sub-arrays of memory locations within a memory device <b>940</b>. In one example, banks of memory are divided into sub-banks with at least a portion of shared circuitry (e.g., drivers, signal lines, control logic) for the sub-banks, allowing separate addressing and access. It will be understood that channels, ranks, banks, sub-banks, bank groups, or other organizations of the memory locations, and combinations of the organizations, can overlap in their application to physical resources. For example, the same physical memory locations can be accessed over a specific channel as a specific bank, which can also belong to a rank. Thus, the organization of memory resources will be understood in an inclusive, rather than exclusive, manner.</p><p id="p-0120" num="0119">In one example, memory devices <b>940</b> include one or more registers <b>944</b>. Register <b>944</b> represents one or more storage devices or storage locations that provide configuration or settings for the operation of the memory device. In one example, register <b>944</b> can provide a storage location for memory device <b>940</b> to store data for access by memory controller <b>920</b> as part of a control or management operation. In one example, register <b>944</b> includes one or more Mode Registers. In one example, register <b>944</b> includes one or more multipurpose registers. The configuration of locations within register <b>944</b> can configure memory device <b>940</b> to operate in different &#x201c;modes,&#x201d; where command information can trigger different operations within memory device <b>940</b> based on the mode. Additionally or in the alternative, different modes can also trigger different operation from address information or other signal lines depending on the mode. Settings of register <b>944</b> can indicate configuration for I/O settings (e.g., timing, termination or ODT (on-die termination) <b>946</b>, driver configuration, or other I/O settings).</p><p id="p-0121" num="0120">In one example, memory device <b>940</b> includes ODT <b>946</b> as part of the interface hardware associated with I/O <b>942</b>. ODT <b>946</b> can be configured as mentioned above, and provide settings for impedance to be applied to the interface to specified signal lines. In one example, ODT <b>946</b> is applied to DQ signal lines. In one example, ODT <b>946</b> is applied to command signal lines. In one example, ODT <b>946</b> is applied to address signal lines. In one example, ODT <b>946</b> can be applied to any combination of the preceding. The ODT settings can be changed based on whether a memory device is a selected target of an access operation or a non-target device. ODT <b>946</b> settings can affect the timing and reflections of signaling on the terminated lines. Careful control over ODT <b>946</b> can enable higher-speed operation with improved matching of applied impedance and loading. ODT <b>946</b> can be applied to specific signal lines of I/O interface <b>942</b>, <b>922</b> (for example, ODT for DQ lines or ODT for CA lines), and is not necessarily applied to all signal lines.</p><p id="p-0122" num="0121">Memory device <b>940</b> includes controller <b>950</b>, which represents control logic within the memory device to control internal operations within the memory device. For example, controller <b>950</b> decodes commands sent by memory controller <b>920</b> and generates internal operations to execute or satisfy the commands. Controller <b>950</b> can be referred to as an internal controller, and is separate from memory controller <b>920</b> of the host. Controller <b>950</b> can determine what mode is selected based on register <b>944</b>, and configure the internal execution of operations for access to memory resources <b>960</b> or other operations based on the selected mode. Controller <b>950</b> generates control signals to control the routing of bits within memory device <b>940</b> to provide a proper interface for the selected mode and direct a command to the proper memory locations or addresses. Controller <b>950</b> includes command logic <b>952</b>, which can decode command encoding received on command and address signal lines. Thus, command logic <b>952</b> can be or include a command decoder. With command logic <b>952</b>, memory device can identify commands and generate internal operations to execute requested commands.</p><p id="p-0123" num="0122">Referring again to memory controller <b>920</b>, memory controller <b>920</b> includes command (CMD) logic <b>924</b>, which represents logic or circuitry to generate commands to send to memory devices <b>940</b>. The generation of the commands can refer to the command prior to scheduling, or the preparation of queued commands ready to be sent. Generally, the signaling in memory subsystems includes address information within or accompanying the command to indicate or select one or more memory locations where the memory devices should execute the command. In response to scheduling of transactions for memory device <b>940</b>, memory controller <b>920</b> can issue commands via I/O <b>922</b> to cause memory device <b>940</b> to execute the commands. In one example, controller <b>950</b> of memory device <b>940</b> receives and decodes command and address information received via I/O <b>942</b> from memory controller <b>920</b>. Based on the received command and address information, controller <b>950</b> can control the timing of operations of the logic and circuitry within memory device <b>940</b> to execute the commands. Controller <b>950</b> is responsible for compliance with standards or specifications within memory device <b>940</b>, such as timing and signaling requirements. Memory controller <b>920</b> can implement compliance with standards or specifications by access scheduling and control.</p><p id="p-0124" num="0123">Memory controller <b>920</b> includes scheduler <b>930</b>, which represents logic or circuitry to generate and order transactions to send to memory device <b>940</b>. From one perspective, the primary function of memory controller <b>920</b> could be said to schedule memory access and other transactions to memory device <b>940</b>. Such scheduling can include generating the transactions themselves to implement the requests for data by processor <b>910</b> and to maintain integrity of the data (e.g., such as with commands related to refresh). Transactions can include one or more commands, and result in the transfer of commands or data or both over one or multiple timing cycles such as clock cycles or unit intervals. Transactions can be for access such as read or write or related commands or a combination, and other transactions can include memory management commands for configuration, settings, data integrity, or other commands or a combination.</p><p id="p-0125" num="0124">Memory controller <b>920</b> typically includes logic such as scheduler <b>930</b> to allow selection and ordering of transactions to improve performance of system <b>900</b>. Thus, memory controller <b>920</b> can select which of the outstanding transactions should be sent to memory device <b>940</b> in which order, which is typically achieved with logic much more complex that a simple first-in first-out algorithm. Memory controller <b>920</b> manages the transmission of the transactions to memory device <b>940</b>, and manages the timing associated with the transaction. In one example, transactions have deterministic timing, which can be managed by memory controller <b>920</b> and used in determining how to schedule the transactions with scheduler <b>930</b>.</p><p id="p-0126" num="0125">In one example, memory controller <b>920</b> includes refresh (REF) logic <b>926</b>. Refresh logic <b>926</b> can be used for memory resources that are volatile and need to be refreshed to retain a deterministic state. In one example, refresh logic <b>926</b> indicates a location for refresh, and a type of refresh to perform. Refresh logic <b>926</b> can trigger self-refresh within memory device <b>940</b>, or execute external refreshes which can be referred to as auto refresh commands) by sending refresh commands, or a combination. In one example, controller <b>950</b> within memory device <b>940</b> includes refresh logic <b>954</b> to apply refresh within memory device <b>940</b>. In one example, refresh logic <b>954</b> generates internal operations to perform refresh in accordance with an external refresh received from memory controller <b>920</b>. Refresh logic <b>954</b> can determine if a refresh is directed to memory device <b>940</b>, and what memory resources <b>960</b> to refresh in response to the command.</p><p id="p-0127" num="0126"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram of an example of a computing system in which a connector having an interposer with compression-based connectors can be implemented. System <b>1000</b> represents a computing device in accordance with any example herein, and can be a laptop computer, a desktop computer, a tablet computer, a server, a gaming or entertainment control system, embedded computing device, or other electronic device. System <b>1000</b> is an example of a system in which memory can be connected to a substrate or a system board in accordance with any example provided.</p><p id="p-0128" num="0127">In one example, system <b>1000</b> includes connector <b>1090</b> to interconnect memory <b>1030</b> and memory controller <b>1022</b>. Memory controller <b>1022</b> is disposed on a system board that includes pins, pads, or contacts to connect with memory <b>1030</b>. Connector <b>1090</b> represents a connector with closed loop pins in accordance with any example herein. In one example, system <b>1000</b> includes connector <b>1090</b> to interconnect memory <b>1030</b> with memory controller <b>1022</b>. Memory <b>1030</b> can represent memory disposed on a memory module board. Memory controller <b>1022</b> is disposed on a system board that includes pins, pads, or contacts to connect with memory <b>1030</b>. Connector <b>1090</b> represents the connector assembly with the interposer and plate and optionally with a CAMM board. Connector <b>1090</b> connects memory <b>1030</b> to the system board through compression in accordance with any example provided.</p><p id="p-0129" num="0128">System <b>1000</b> includes processor <b>1010</b> can include any type of microprocessor, central processing unit (CPU), graphics processing unit (GPU), processing core, or other processing hardware, or a combination, to provide processing or execution of instructions for system <b>1000</b>. Processor <b>1010</b> can be a host processor device. Processor <b>1010</b> controls the overall operation of system <b>1000</b>, and can be or include, one or more programmable general-purpose or special-purpose microprocessors, digital signal processors (DSPs), programmable controllers, application specific integrated circuits (ASICs), programmable logic devices (PLDs), or a combination of such devices.</p><p id="p-0130" num="0129">System <b>1000</b> includes boot/config <b>1016</b>, which represents storage to store boot code (e.g., basic input/output system (BIOS)), configuration settings, security hardware (e.g., trusted platform module (TPM)), or other system level hardware that operates outside of a host OS. Boot/config <b>1016</b> can include a nonvolatile storage device, such as read-only memory (ROM), flash memory, or other memory devices.</p><p id="p-0131" num="0130">In one example, system <b>1000</b> includes interface <b>1012</b> coupled to processor <b>1010</b>, which can represent a higher speed interface or a high throughput interface for system components that need higher bandwidth connections, such as memory subsystem <b>1020</b> or graphics interface components <b>1040</b>. Interface <b>1012</b> represents an interface circuit, which can be a standalone component or integrated onto a processor die. Interface <b>1012</b> can be integrated as a circuit onto the processor die or integrated as a component on a system on a chip. Where present, graphics interface <b>1040</b> interfaces to graphics components for providing a visual display to a user of system <b>1000</b>. Graphics interface <b>1040</b> can be a standalone component or integrated onto the processor die or system on a chip. In one example, graphics interface <b>1040</b> can drive a high definition (HD) display or ultra high definition (UHD) display that provides an output to a user. In one example, the display can include a touchscreen display. In one example, graphics interface <b>1040</b> generates a display based on data stored in memory <b>1030</b> or based on operations executed by processor <b>1010</b> or both.</p><p id="p-0132" num="0131">Memory subsystem <b>1020</b> represents the main memory of system <b>1000</b>, and provides storage for code to be executed by processor <b>1010</b>, or data values to be used in executing a routine. Memory subsystem <b>1020</b> can include one or more varieties of random-access memory (RAM) such as DRAM, 3DXP (three-dimensional crosspoint), or other memory devices, or a combination of such devices. Memory <b>1030</b> stores and hosts, among other things, operating system (OS) <b>1032</b> to provide a software platform for execution of instructions in system <b>1000</b>. Additionally, applications <b>1034</b> can execute on the software platform of OS <b>1032</b> from memory <b>1030</b>. Applications <b>1034</b> represent programs that have their own operational logic to perform execution of one or more functions. Processes <b>1036</b> represent agents or routines that provide auxiliary functions to OS <b>1032</b> or one or more applications <b>1034</b> or a combination. OS <b>1032</b>, applications <b>1034</b>, and processes <b>1036</b> provide software logic to provide functions for system <b>1000</b>. In one example, memory subsystem <b>1020</b> includes memory controller <b>1022</b>, which is a memory controller to generate and issue commands to memory <b>1030</b>. It will be understood that memory controller <b>1022</b> could be a physical part of processor <b>1010</b> or a physical part of interface <b>1012</b>. For example, memory controller <b>1022</b> can be an integrated memory controller, integrated onto a circuit with processor <b>1010</b>, such as integrated onto the processor die or a system on a chip.</p><p id="p-0133" num="0132">While not specifically illustrated, it will be understood that system <b>1000</b> can include one or more buses or bus systems between devices, such as a memory bus, a graphics bus, interface buses, or others. Buses or other signal lines can communicatively or electrically couple components together, or both communicatively and electrically couple the components. Buses can include physical communication lines, point-to-point connections, bridges, adapters, controllers, or other circuitry or a combination. Buses can include, for example, one or more of a system bus, a Peripheral Component Interconnect (PCI) bus, a HyperTransport or industry standard architecture (ISA) bus, a small computer system interface (SCSI) bus, a universal serial bus (USB), or other bus, or a combination.</p><p id="p-0134" num="0133">In one example, system <b>1000</b> includes interface <b>1014</b>, which can be coupled to interface <b>1012</b>. Interface <b>1014</b> can be a lower speed interface than interface <b>1012</b>. In one example, interface <b>1014</b> represents an interface circuit, which can include standalone components and integrated circuitry. In one example, multiple user interface components or peripheral components, or both, couple to interface <b>1014</b>. Network interface <b>1050</b> provides system <b>1000</b> the ability to communicate with remote devices (e.g., servers or other computing devices) over one or more networks. Network interface <b>1050</b> can include an Ethernet adapter, wireless interconnection components, cellular network interconnection components, USB (universal serial bus), or other wired or wireless standards-based or proprietary interfaces. Network interface <b>1050</b> can exchange data with a remote device, which can include sending data stored in memory or receiving data to be stored in memory.</p><p id="p-0135" num="0134">In one example, system <b>1000</b> includes one or more input/output (I/O) interface(s) <b>1060</b>. I/O interface <b>1060</b> can include one or more interface components through which a user interacts with system <b>1000</b> (e.g., audio, alphanumeric, tactile/touch, or other interfacing). Peripheral interface <b>1070</b> can include any hardware interface not specifically mentioned above. Peripherals refer generally to devices that connect dependently to system <b>1000</b>. A dependent connection is one where system <b>1000</b> provides the software platform or hardware platform or both on which operation executes, and with which a user interacts.</p><p id="p-0136" num="0135">In one example, system <b>1000</b> includes storage subsystem <b>1080</b> to store data in a nonvolatile manner. In one example, in certain system implementations, at least certain components of storage <b>1080</b> can overlap with components of memory subsystem <b>1020</b>. Storage subsystem <b>1080</b> includes storage device(s) <b>1084</b>, which can be or include any conventional medium for storing large amounts of data in a nonvolatile manner, such as one or more magnetic, solid state, NAND, 3DXP, or optical based disks, or a combination. Storage <b>1084</b> holds code or instructions and data <b>1086</b> in a persistent state (i.e., the value is retained despite interruption of power to system <b>1000</b>). Storage <b>1084</b> can be generically considered to be a &#x201c;memory,&#x201d; although memory <b>1030</b> is typically the executing or operating memory to provide instructions to processor <b>1010</b>. Whereas storage <b>1084</b> is nonvolatile, memory <b>1030</b> can include volatile memory (i.e., the value or state of the data is indeterminate if power is interrupted to system <b>1000</b>). In one example, storage subsystem <b>1080</b> includes controller <b>1082</b> to interface with storage <b>1084</b>. In one example controller <b>1082</b> is a physical part of interface <b>1014</b> or processor <b>1010</b>, or can include circuits or logic in both processor <b>1010</b> and interface <b>1014</b>.</p><p id="p-0137" num="0136">Power source <b>1002</b> provides power to the components of system <b>1000</b>. More specifically, power source <b>1002</b> typically interfaces to one or multiple power supplies <b>1004</b> in system <b>1000</b> to provide power to the components of system <b>1000</b>. In one example, power supply <b>1004</b> includes an AC to DC (alternating current to direct current) adapter to plug into a wall outlet. Such AC power can be renewable energy (e.g., solar power) power source <b>1002</b>. In one example, power source <b>1002</b> includes a DC power source, such as an external AC to DC converter. In one example, power source <b>1002</b> or power supply <b>1004</b> includes wireless charging hardware to charge via proximity to a charging field. In one example, power source <b>1002</b> can include an internal battery or fuel cell source.</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an example of a mobile device in which a connector having an interposer with compression-based connectors can be implemented. System <b>1100</b> represents a mobile computing device, such as a computing tablet, a mobile phone or smartphone, wearable computing device, or other mobile device, or an embedded computing device. It will be understood that certain of the components are shown generally, and not all components of such a device are shown in system <b>1100</b>. System <b>1100</b> is an example of a system in which memory can be connected to a substrate or a system board in accordance with any example provided.</p><p id="p-0139" num="0138">In one example, system <b>1100</b> includes connector <b>1190</b> to interconnect memory <b>1164</b> and memory controller <b>1162</b>. Memory controller <b>1162</b> is disposed on a system board that includes pins, pads, or contacts to connect with memory <b>1164</b>. Connector <b>1190</b> represents a connector with closed loop pins in accordance with any example herein. In one example, system <b>1100</b> includes connector <b>1190</b> to interconnect memory <b>1164</b> with memory controller <b>1162</b>. Memory <b>1164</b> can represent memory disposed on a memory module board. Memory controller <b>1162</b> is disposed on a system board that includes pins, pads, or contacts to connect with memory <b>1164</b>. Connector <b>1190</b> represents the connector assembly with the interposer and plate and optionally with a CAMM board. Connector <b>1190</b> connects memory <b>1164</b> to the system board through compression in accordance with any example provided.</p><p id="p-0140" num="0139">System <b>1100</b> includes processor <b>1110</b>, which performs the primary processing operations of system <b>1100</b>. Processor <b>1110</b> can be a host processor device. Processor <b>1110</b> can include one or more physical devices, such as microprocessors, application processors, microcontrollers, programmable logic devices, or other processing means. The processing operations performed by processor <b>1110</b> include the execution of an operating platform or operating system on which applications and device functions are executed. The processing operations include operations related to I/O (input/output) with a human user or with other devices, operations related to power management, operations related to connecting system <b>1100</b> to another device, or a combination. The processing operations can also include operations related to audio I/O, display I/O, or other interfacing, or a combination. Processor <b>1110</b> can execute data stored in memory. Processor <b>1110</b> can write or edit data stored in memory.</p><p id="p-0141" num="0140">In one example, system <b>1100</b> includes one or more sensors <b>1112</b>. Sensors <b>1112</b> represent embedded sensors or interfaces to external sensors, or a combination. Sensors <b>1112</b> enable system <b>1100</b> to monitor or detect one or more conditions of an environment or a device in which system <b>1100</b> is implemented. Sensors <b>1112</b> can include environmental sensors (such as temperature sensors, motion detectors, light detectors, cameras, chemical sensors (e.g., carbon monoxide, carbon dioxide, or other chemical sensors)), pressure sensors, accelerometers, gyroscopes, medical or physiology sensors (e.g., biosensors, heart rate monitors, or other sensors to detect physiological attributes), or other sensors, or a combination. Sensors <b>1112</b> can also include sensors for biometric systems such as fingerprint recognition systems, face detection or recognition systems, or other systems that detect or recognize user features. Sensors <b>1112</b> should be understood broadly, and not limiting on the many different types of sensors that could be implemented with system <b>1100</b>. In one example, one or more sensors <b>1112</b> couples to processor <b>1110</b> via a frontend circuit integrated with processor <b>1110</b>. In one example, one or more sensors <b>1112</b> couples to processor <b>1110</b> via another component of system <b>1100</b>.</p><p id="p-0142" num="0141">In one example, system <b>1100</b> includes audio subsystem <b>1120</b>, which represents hardware (e.g., audio hardware and audio circuits) and software (e.g., drivers, codecs) components associated with providing audio functions to the computing device. Audio functions can include speaker or headphone output, as well as microphone input. Devices for such functions can be integrated into system <b>1100</b>, or connected to system <b>1100</b>. In one example, a user interacts with system <b>1100</b> by providing audio commands that are received and processed by processor <b>1110</b>.</p><p id="p-0143" num="0142">Display subsystem <b>1130</b> represents hardware (e.g., display devices) and software components (e.g., drivers) that provide a visual display for presentation to a user. In one example, the display includes tactile components or touchscreen elements for a user to interact with the computing device. Display subsystem <b>1130</b> includes display interface <b>1132</b>, which includes the particular screen or hardware device used to provide a display to a user. In one example, display interface <b>1132</b> includes logic separate from processor <b>1110</b> (such as a graphics processor) to perform at least some processing related to the display. In one example, display subsystem <b>1130</b> includes a touchscreen device that provides both output and input to a user. In one example, display subsystem <b>1130</b> includes a high definition (HD) or ultra-high definition (UHD) display that provides an output to a user. In one example, display subsystem includes or drives a touchscreen display. In one example, display subsystem <b>1130</b> generates display information based on data stored in memory or based on operations executed by processor <b>1110</b> or both.</p><p id="p-0144" num="0143">I/O controller <b>1140</b> represents hardware devices and software components related to interaction with a user. I/O controller <b>1140</b> can operate to manage hardware that is part of audio subsystem <b>1120</b>, or display subsystem <b>1130</b>, or both. Additionally, I/O controller <b>1140</b> illustrates a connection point for additional devices that connect to system <b>1100</b> through which a user might interact with the system. For example, devices that can be attached to system <b>1100</b> might include microphone devices, speaker or stereo systems, video systems or other display device, keyboard or keypad devices, buttons/switches, or other I/O devices for use with specific applications such as card readers or other devices.</p><p id="p-0145" num="0144">As mentioned above, I/O controller <b>1140</b> can interact with audio subsystem <b>1120</b> or display subsystem <b>1130</b> or both. For example, input through a microphone or other audio device can provide input or commands for one or more applications or functions of system <b>1100</b>. Additionally, audio output can be provided instead of or in addition to display output. In another example, if display subsystem includes a touchscreen, the display device also acts as an input device, which can be at least partially managed by I/O controller <b>1140</b>. There can also be additional buttons or switches on system <b>1100</b> to provide I/O functions managed by I/O controller <b>1140</b>.</p><p id="p-0146" num="0145">In one example, I/O controller <b>1140</b> manages devices such as accelerometers, cameras, light sensors or other environmental sensors, gyroscopes, global positioning system (GPS), or other hardware that can be included in system <b>1100</b>, or sensors <b>1112</b>. The input can be part of direct user interaction, as well as providing environmental input to the system to influence its operations (such as filtering for noise, adjusting displays for brightness detection, applying a flash for a camera, or other features).</p><p id="p-0147" num="0146">In one example, system <b>1100</b> includes power management <b>1150</b> that manages battery power usage, charging of the battery, and features related to power saving operation. Power management <b>1150</b> manages power from power source <b>1152</b>, which provides power to the components of system <b>1100</b>. In one example, power source <b>1152</b> includes an AC to DC (alternating current to direct current) adapter to plug into a wall outlet. Such AC power can be renewable energy (e.g., solar power, motion based power). In one example, power source <b>1152</b> includes only DC power, which can be provided by a DC power source, such as an external AC to DC converter. In one example, power source <b>1152</b> includes wireless charging hardware to charge via proximity to a charging field. In one example, power source <b>1152</b> can include an internal battery or fuel cell source.</p><p id="p-0148" num="0147">Memory subsystem <b>1160</b> includes memory device(s) <b>1162</b> for storing information in system <b>1100</b>. Memory subsystem <b>1160</b> can include nonvolatile (state does not change if power to the memory device is interrupted) or volatile (state is indeterminate if power to the memory device is interrupted) memory devices, or a combination. Memory <b>1160</b> can store application data, user data, music, photos, documents, or other data, as well as system data (whether long-term or temporary) related to the execution of the applications and functions of system <b>1100</b>. In one example, memory subsystem <b>1160</b> includes memory controller <b>1164</b> (which could also be considered part of the control of system <b>1100</b>, and could potentially be considered part of processor <b>1110</b>). Memory controller <b>1164</b> includes a scheduler to generate and issue commands to control access to memory device <b>1162</b>.</p><p id="p-0149" num="0148">Connectivity <b>1170</b> includes hardware devices (e.g., wireless or wired connectors and communication hardware, or a combination of wired and wireless hardware) and software components (e.g., drivers, protocol stacks) to enable system <b>1100</b> to communicate with external devices. The external device could be separate devices, such as other computing devices, wireless access points or base stations, as well as peripherals such as headsets, printers, or other devices. In one example, system <b>1100</b> exchanges data with an external device for storage in memory or for display on a display device. The exchanged data can include data to be stored in memory, or data already stored in memory, to read, write, or edit data.</p><p id="p-0150" num="0149">Connectivity <b>1170</b> can include multiple different types of connectivity. To generalize, system <b>1100</b> is illustrated with cellular connectivity <b>1172</b> and wireless connectivity <b>1174</b>. Cellular connectivity <b>1172</b> refers generally to cellular network connectivity provided by wireless carriers, such as provided via GSM (global system for mobile communications) or variations or derivatives, CDMA (code division multiple access) or variations or derivatives, TDM (time division multiplexing) or variations or derivatives, LTE (long term evolution&#x2014;also referred to as &#x201c;4G&#x201d;), 5G, or other cellular service standards. Wireless connectivity <b>1174</b> refers to wireless connectivity that is not cellular, and can include personal area networks (such as Bluetooth), local area networks (such as WiFi), or wide area networks (such as WiMax), or other wireless communication, or a combination. Wireless communication refers to transfer of data through the use of modulated electromagnetic radiation through a non-solid medium. Wired communication occurs through a solid communication medium.</p><p id="p-0151" num="0150">Peripheral connections <b>1180</b> include hardware interfaces and connectors, as well as software components (e.g., drivers, protocol stacks) to make peripheral connections. It will be understood that system <b>1100</b> could both be a peripheral device (&#x201c;to&#x201d; <b>1182</b>) to other computing devices, as well as have peripheral devices (&#x201c;from&#x201d; <b>1184</b>) connected to it. System <b>1100</b> commonly has a &#x201c;docking&#x201d; connector to connect to other computing devices for purposes such as managing (e.g., downloading, uploading, changing, synchronizing) content on system <b>1100</b>. Additionally, a docking connector can allow system <b>1100</b> to connect to certain peripherals that allow system <b>1100</b> to control content output, for example, to audiovisual or other systems.</p><p id="p-0152" num="0151">In addition to a proprietary docking connector or other proprietary connection hardware, system <b>1100</b> can make peripheral connections <b>1180</b> via common or standards-based connectors. Common types can include a Universal Serial Bus (USB) connector (which can include any of a number of different hardware interfaces), DisplayPort including MiniDisplayPort (MDP), High Definition Multimedia Interface (HDMI), or other type.</p><p id="p-0153" num="0152">In general with respect to the descriptions herein, in one aspect, an apparatus includes: a first printed circuit board (PCB) including a component mounted on a first PCB first surface and contacts of a first PCB second surface; an interposer board having connector pins through the interposer board to connect the contacts of the first PCB second surface to a substrate, the connector pins being compression-based connector pins having a first portion extending past a first surface of the interposer board; and a plate to cover the first PCB and secure the first PCB and the interposer board to the substrate, the plate to compress the connector pins of the interposer board, including to compress the first portion toward the first surface of the interposer board.</p><p id="p-0154" num="0153">In accordance with an example of the apparatus, in one example, the substrate is to be mounted on a second PCB, wherein the plate is to be secured with screws to the second PCB, connecting to a ground plane of the second PCB. In accordance with any preceding example of the apparatus, in one example, the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to get smaller in response to compression of the connector pins. In accordance with any preceding example of the apparatus, in one example, the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to close in response to compression of the connector pins. In accordance with any preceding example of the apparatus, in one example, the connector pins have a conductor in a closed loop shape, wherein, when uncompressed, the closed loop has two closed electrical paths, wherein the conductor is to slide along itself on one side to make a smaller closed loop in response to compression of the connector pins. In accordance with any preceding example of the apparatus, in one example, the first PCB comprises a memory module and the substrate comprises a compute system on a chip (SOC). In accordance with any preceding example of the apparatus, in one example, the compute SOC is mounted on a second PCB, wherein the second PCB comprises a system board. In accordance with any preceding example of the apparatus, in one example, the apparatus includes: a compression attached memory module (CAMM) board to which the memory module is mounted to CAMM board first surface contacts, and wherein the interposer board is to connect between CAMM board second surface contacts and the compute SOC, wherein the CAMM board includes routing to electrically align a first pinout of the memory module to a second pinout of the compute SOC, where the first pinout is different from the second pinout. In accordance with any preceding example of the apparatus, in one example, the memory module includes multiple dynamic random access memory (DRAM) devices. In accordance with any preceding example of the apparatus, in one example, the DRAM devices comprise DRAM devices compatible with a double data rate version 5 (DDR5) standard. In accordance with any preceding example of the apparatus, in one example, the DRAM devices comprise DRAM devices compatible with a low power double data rate (LPDDR) standard.</p><p id="p-0155" num="0154">In general with respect to the descriptions herein, in one aspect, a computer system includes: a substrate having a processor mounted on the substrate; a system board, wherein the substrate is mounted on the system board; a memory module including multiple memory devices; an interposer board having connector pins through the interposer board to connect the memory module to the substrate, the connector pins being compression-based connector pins having a first portion of a loop extending past a first surface of the interposer board and a second portion of the loop extending past a second surface of the interposer board; and a plate on top of the memory module, to secure to the system board, the plate to secure the memory module and the interposer board to the substrate, the plate to compress the connector pins of the interposer board.</p><p id="p-0156" num="0155">In accordance with an example of the computer system, in one example, the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to get smaller in response to compression of the connector pins. In accordance with any preceding example of the computer system, in one example, the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to close in response to compression of the connector pins. In accordance with any preceding example of the computer system, in one example, the system board comprises a motherboard. In accordance with any preceding example of the computer system, in one example, the computer system includes: a compression attached memory module (CAMM) board to which the memory module is mounted to CAMM board first surface contacts, and wherein the interposer board is to connect between CAMM board second surface contacts and the substrate, wherein the CAMM board includes routing to electrically align a first pinout of the memory module to a second pinout of the substrate, where the first pinout is different from the second pinout. In accordance with any preceding example of the computer system, in one example, the computer system includes: screws to secure the plate to the system board, the screws electrically connecting to a ground plane of the system board. In accordance with any preceding example of the computer system, in one example, the computer system includes: standoffs that extend from a top of the plate on top of the memory module to the system board through which the screws connect to the system board. In accordance with any preceding example of the computer system, in one example, the plate comprises sidewalls to extend from a top of the plate on top of the memory module to the system board. In accordance with any preceding example of the computer system, in one example, the memory module includes multiple dynamic random access memory (DRAM) devices compatible with a double data rate version 5 (DDR5) standard or DRAM device compatible with a low power double data rate (LPDDR) standard. In accordance with any preceding example of the computer system, in one example, the processor comprises a multicore processor. In accordance with any preceding example of the computer system, in one example, the computer system further includes a display communicatively coupled to the processor of the substrate. In accordance with any preceding example of the computer system, in one example, the computer system further includes a network interface communicatively coupled to the processor of the substrate. In accordance with any preceding example of the computer system, in one example, the computer system further includes a battery to power the computer system.</p><p id="p-0157" num="0156">In general with respect to the descriptions herein, in one aspect, a method includes: mounting a component on a first printed circuit board (PCB) first surface, the first PCB having contacts on a first PCB second surface; and securing a plate to cover the first PCB and secure the first PCB and an interposer board to a substrate, wherein the interposer board includes connector pins through the interposer board to connect the contacts of the first PCB second surface to the substrate, the connector pins being compression-based connector pins having a first portion extending past a first surface of the interposer board, wherein securing the plate compresses the connector pins of the interposer board, including compressing the first portion toward the first surface of the interposer board.</p><p id="p-0158" num="0157">In accordance with an example of the method, in one example, the substrate is mounted on a second PCB, wherein the plate is secured with screws to the second PCB, connecting to a ground plane of the second PCB. In accordance with any preceding example of the method, in one example, the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap shrinks in response to compression of the connector pins. In accordance with any preceding example of the method, in one example, connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap closes in response to compression of the connector pins. In accordance with any preceding example of the method, in one example, the connector pins have a conductor in a closed loop shape, wherein, when uncompressed, the closed loop has two closed electrical paths, wherein the conductor slides along itself on one side to make a smaller closed loop in response to compression of the connector pins. In accordance with any preceding example of the method, in one example, the first PCB comprises a memory module and the substrate comprises a compute system on a chip (SOC). In accordance with any preceding example of the method, in one example, the compute SOC is mounted on a second PCB, wherein the second PCB comprises a system board. In accordance with any preceding example of the method, in one example, securing the plate includes securing a compression attached memory module (CAMM) board to which the memory module is mounted to CAMM board first surface contacts, to the interposer board with CAMM board second surface contacts, wherein the CAMM board includes routing to electrically align a first pinout of the memory module to a second pinout of the compute SOC, where the first pinout is different from the second pinout. In accordance with any preceding example of the method, in one example, the memory module includes multiple dynamic random access memory (DRAM) devices. In accordance with any preceding example of the method, in one example, the DRAM devices comprise DRAM devices compatible with a double data rate version 5 (DDR5) standard. In accordance with any preceding example of the method, in one example, the DRAM devices comprise DRAM devices compatible with a low power double data rate (LPDDR) standard.</p><p id="p-0159" num="0158">Flow diagrams as illustrated herein provide examples of sequences of various process actions. The flow diagrams can indicate operations to be executed by a software or firmware routine, as well as physical operations. A flow diagram can illustrate an example of the implementation of states of a finite state machine (FSM), which can be implemented in hardware and/or software. Although shown in a particular sequence or order, unless otherwise specified, the order of the actions can be modified. Thus, the illustrated diagrams should be understood only as examples, and the process can be performed in a different order, and some actions can be performed in parallel. Additionally, one or more actions can be omitted; thus, not all implementations will perform all actions.</p><p id="p-0160" num="0159">To the extent various operations or functions are described herein, they can be described or defined as software code, instructions, configuration, and/or data. The content can be directly executable (&#x201c;object&#x201d; or &#x201c;executable&#x201d; form), source code, or difference code (&#x201c;delta&#x201d; or &#x201c;patch&#x201d; code). The software content of what is described herein can be provided via an article of manufacture with the content stored thereon, or via a method of operating a communication interface to send data via the communication interface. A machine readable storage medium can cause a machine to perform the functions or operations described, and includes any mechanism that stores information in a form accessible by a machine (e.g., computing device, electronic system, etc.), such as recordable/non-recordable media (e.g., read only memory (ROM), random access memory (RAM), magnetic disk storage media, optical storage media, flash memory devices, etc.). A communication interface includes any mechanism that interfaces to any of a hardwired, wireless, optical, etc., medium to communicate to another device, such as a memory bus interface, a processor bus interface, an Internet connection, a disk controller, etc. The communication interface can be configured by providing configuration parameters and/or sending signals to prepare the communication interface to provide a data signal describing the software content. The communication interface can be accessed via one or more commands or signals sent to the communication interface.</p><p id="p-0161" num="0160">Various components described herein can be a means for performing the operations or functions described. Each component described herein includes software, hardware, or a combination of these. The components can be implemented as software modules, hardware modules, special-purpose hardware (e.g., application specific hardware, application specific integrated circuits (ASICs), digital signal processors (DSPs), etc.), embedded controllers, hardwired circuitry, etc.</p><p id="p-0162" num="0161">Besides what is described herein, various modifications can be made to what is disclosed and implementations of the invention without departing from their scope. Therefore, the illustrations and examples herein should be construed in an illustrative, and not a restrictive sense. The scope of the invention should be measured solely by reference to the claims that follow.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus, comprising:<claim-text>a first printed circuit board (PCB) including a component mounted on a first PCB first surface and contacts of a first PCB second surface;</claim-text><claim-text>an interposer board having connector pins through the interposer board to connect the contacts of the first PCB second surface to a substrate, the connector pins being compression-based connector pins having a first portion extending past a first surface of the interposer board; and</claim-text><claim-text>a plate to cover the first PCB and secure the first PCB and the interposer board to the substrate, the plate to compress the connector pins of the interposer board, including to compress the first portion toward the first surface of the interposer board.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the substrate is to be mounted on a second PCB, wherein the plate is to be secured with screws to the second PCB, connecting to a ground plane of the second PCB.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to get smaller in response to compression of the connector pins.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to close in response to compression of the connector pins.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the connector pins have a conductor in a closed loop shape, wherein, when uncompressed, the closed loop has two closed electrical paths, wherein the conductor is to slide along itself on one side to make a smaller closed loop in response to compression of the connector pins.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first PCB comprises a memory module and the substrate comprises a compute system on a chip (SOC).</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the compute SOC is mounted on a second PCB, wherein the second PCB comprises a system board.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>a compression attached memory module (CAMM) board to which the memory module is mounted to CAMM board first surface contacts, and wherein the interposer board is to connect between CAMM board second surface contacts and the compute SOC, wherein the CAMM board includes routing to electrically align a first pinout of the memory module to a second pinout of the compute SOC, where the first pinout is different from the second pinout.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the memory module includes multiple dynamic random access memory (DRAM) devices.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the DRAM devices comprise DRAM devices compatible with a double data rate version 5 (DDR5) standard.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the DRAM devices comprise DRAM devices compatible with a low power double data rate (LPDDR) standard.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A computer system comprising:<claim-text>a substrate having a processor mounted on the substrate;</claim-text><claim-text>a system board, wherein the substrate is mounted on the system board;</claim-text><claim-text>a memory module including multiple memory devices;</claim-text><claim-text>an interposer board having connector pins through the interposer board to connect the memory module to the substrate, the connector pins being compression-based connector pins having a first portion of a loop extending past a first surface of the interposer board and a second portion of the loop extending past a second surface of the interposer board; and</claim-text><claim-text>a plate on top of the memory module, to secure to the system board, the plate to secure the memory module and the interposer board to the substrate, the plate to compress the connector pins of the interposer board.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to get smaller in response to compression of the connector pins.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the connector pins have a conductor in a C-shape, wherein, when uncompressed, the C-shape comprises a loop with a gap on one side, where the gap is to close in response to compression of the connector pins.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the system board comprises a motherboard.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>a compression attached memory module (CAMM) board to which the memory module is mounted to CAMM board first surface contacts, and wherein the interposer board is to connect between CAMM board second surface contacts and the substrate, wherein the CAMM board includes routing to electrically align a first pinout of the memory module to a second pinout of the substrate, where the first pinout is different from the second pinout.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>screws to secure the plate to the system board, the screws electrically connecting to a ground plane of the system board.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:<claim-text>standoffs that extend from a top of the plate on top of the memory module to the system board through which the screws connect to the system board.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the plate comprises sidewalls to extend from a top of the plate on top of the memory module to the system board.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the memory module includes multiple dynamic random access memory (DRAM) devices compatible with a double data rate version 5 (DDR5) standard or DRAM device compatible with a low power double data rate (LPDDR) standard.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein one or more of:<claim-text>the processor comprises a multicore processor;</claim-text><claim-text>the computer system further includes a display communicatively coupled to the processor of the substrate;</claim-text><claim-text>the computer system further includes a network interface communicatively coupled to the processor of the substrate; or</claim-text><claim-text>the computer system further includes a battery to power the computer system.</claim-text></claim-text></claim></claims></us-patent-application>