<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006994A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006994</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363677</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>29</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0846</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0894</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0869</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0838</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">REREGISTRATION OF CLIENT DEVICE WITH SERVER DEVICE USING USER DEVICE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>MICRO FOCUS LLC</orgname><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Krishna</last-name><first-name>Vamsi</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Blackett</last-name><first-name>Jason</first-name><address><city>Provo</city><state>UT</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Jarugula</last-name><first-name>Harinath</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Subsequent to registration of a client device with a server device such that credentials by which the client device is authenticated are securely stored at the client device, the client device provides a user device and a server device a recovery identifier and a recovery secret key associated with the client device. Upon the credentials no longer being stored at the client device such that the client device has to be reregistered with the server device to store new credentials by which the client device is authenticated, the user device generates and provides a recovery code to the client device, which provides the recovery code to the server device. Upon validating the recovery code based on the recovery identifier and the recovery secret key, the server device reregisters the client device with the server device such that the new credentials are securely stored at the client device.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="160.10mm" wi="142.41mm" file="US20230006994A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="188.89mm" wi="144.44mm" file="US20230006994A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="197.10mm" wi="145.63mm" file="US20230006994A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="197.10mm" wi="145.63mm" file="US20230006994A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="128.86mm" wi="128.27mm" file="US20230006994A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="167.05mm" wi="139.19mm" file="US20230006994A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="137.08mm" wi="127.85mm" file="US20230006994A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">In many computing environments, client devices are authenticated with server devices prior to functionality being performed. For example, in enterprise and other environments, a large number of client devices, which can also be referred to as endpoint devices, may be centrally managed via the exchange of information with a server device. Such client devices can include desktop, laptop, and notebook computers, as well as smartphones, tablet computing devices, and other types of computing devices. To protect the security of the information exchanged during endpoint management, the client devices are authenticated prior to information exchange.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0003" num="0002"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram of an example system in which reregistration of a client device with a server device can be performed using a user device.</p><p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram of an example process for generating and storing a recovery identifier and a recovery secret key for a client device, subsequent to registration of the client device with a server device.</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram of an example process for generating and validating a recovery code to permit reregistration of a client device with a server device.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram of an example non-transitory computer-readable data storage medium storing program code executable by a user device to facilitate reregistration of a client device with a server device.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram of an example client device that the reregistration of which with a server device can be facilitated by a user device.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of an example method performed by a server device to reregister a client device as facilitated by a user device.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0003" level="1">DETAILED DESCRIPTION</heading><p id="p-0009" num="0008">As noted in the background, client devices are authenticated with server devices prior to the performance of functionality in a wide variety of different scenarios, including centralized endpoint management. So that a client device can be centrally managed via the exchange of information with a server device, the client device is initially registered with the server device. As part of this registration process, credentials by which the client device can later be authenticated with the server device are securely stored at both the client device and the server device. For example, the credentials may include a device identifier and a device password or secret. The client device presents its credentials to the server device in order for the client device to be authenticated with the server device.</p><p id="p-0010" num="0009">The credentials therefore have to be securely stored at the client device (as well as at the server device). As one example, the client device may securely store its credentials in the first sector of a hard disk drive of the client device. Even if the hard disk drive is reformatted, reimaged, or is subject to operating system reinstallation, the credentials will not be overwritten, and therefore can continue to be used by the client device for authentication purposes with the server device. The client device may instead securely store its credentials in a different location, such as at a trusted platform module (TPM), a trusted memory, and so on.</p><p id="p-0011" num="0010">However, hard disk drives occasionally fail, necessitating their replacement. If a client device's hard disk drive is replaced, the previously stored credentials become lost. In this case, the client device has to be reregistered with the server device, with new credentials by which the client device can be authenticated with the server device being securely stored at both the client device and the server device. Even if the client device's credentials are stored in a different location, such as at a TPM, which is less likely to fail, client device reregistration may still be periodically necessary. For example, existing credentials may become compromised, erroneously erased or overwritten, and so on.</p><p id="p-0012" num="0011">Client device reregistration can be a supervised process necessitating the involvement of an administrator overseeing centralized endpoint management. For instance, the administrator may preapprove reregistration of a client device with the server device for a limited period of time by a unique identifier of the client device such as serial number, media access controller (MAC) address, and so on. Once the administrator has preapproved a client device in this manner, reregistration of the client device can be initiated. The client device sends a reregistration request to the server device that includes the unique identifier in question. So long as the request is received within the specified limited period of time, the server device reregisters the client device, resulting in new credentials by which authentication of the client device can occur being stored.</p><p id="p-0013" num="0012">However, the supervised nature of this process can become burdensome for administrators overseeing the centralized endpoint management of thousands if not tens of thousands or more of client devices. It is not unreasonable for hundreds of client devices having to be reregistered on a weekly basis, for instance. The administrator may thus have to log into the server device and indicate the unique identifier of each client device that is permitted to be reregistered during a specified limited period of time. Supervised client device reregistration can therefore quickly overwhelm administrators.</p><p id="p-0014" num="0013">Techniques described herein provide for client device reregistration with a server device in ways in which avoid these and other issues. The described client device reregistration process is unsupervised from the perspective of an administrator that may be overseeing the centralized endpoint management of large numbers of client devices. The administrator specifically is not involved in the reregistration process of a client device with a server device. The described reregistration process instead involves the user of the client device to be reregistered, via a different, user device of the user.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example system <b>100</b>. The system <b>100</b> includes a client device <b>102</b>, a server device <b>104</b>, and a user device <b>106</b>. The client device <b>102</b> may be a desktop, laptop, or notebook computer, as well as a smartphone, tablet computing device, or other type of computing device. The server device <b>104</b> is similarly a computing device. The user device <b>102</b> is also a computing device, and may be a mobile device such as a smartphone or tablet computing device, or another type of a computing device, such as a desktop, laptop, or notebook computer, for instance.</p><p id="p-0016" num="0015">The client device <b>102</b> and the server device <b>104</b> are communicatively connected over a network <b>108</b>, which may be or include the Internet, an intranet, an extranet, a wide-area network, a local-area network, a mobile communications network, a wired network, and/or a wireless network, among other types of networks. The client device <b>106</b> is also in communicative connection <b>110</b> with the user device <b>106</b>. The communicative connection <b>110</b> may be a point-to-point wired, wireless (e.g., Bluetooth or near-field communication (NFC)), or optical connection, and can even be a user connection, in that a user enters information displayed at the client device <b>102</b> into the user device <b>106</b> and vice-versa.</p><p id="p-0017" num="0016">The user of the user device <b>106</b> can be the same user as the user of the client device <b>102</b>. This can be a different user than the administrator of the server device <b>104</b>. For example, the user of the client device <b>102</b> and the user device <b>106</b> may be the end user of an enterprise or other organization in which the client device <b>102</b> is centrally endpoint-managed by the server device <b>104</b>. The administrator may be responsible for or oversee such centralized endpoint management at the server device <b>104</b>. Whereas the client device <b>102</b> is centrally managed by the server device <b>104</b>, the user device <b>106</b> may not be, and indeed may be a personal device of the end user.</p><p id="p-0018" num="0017">At initial registration <b>112</b> of the client device <b>102</b> with the server device <b>104</b>, credentials <b>114</b> by which the client device <b>102</b> can be subsequently authenticated with the server device <b>104</b> are stored on the client device <b>102</b>. The same or corresponding credentials <b>114</b> are also stored at this time on the server device <b>104</b>. For example, in the case of authentication via a device identifier and a device password or secret, the identifier and the password or secret are stored at both the client device <b>102</b> and the server device <b>104</b>. In the case of authentication via an asymmetric cryptographic key pair, the private key may be stored at the client device <b>102</b>, and the public key at the server device <b>104</b>.</p><p id="p-0019" num="0018">Once registration <b>112</b> of the client device <b>102</b> with the server device <b>104</b> has occurred, a recovery identifier <b>116</b> and a recovery secret key <b>118</b> associated with the client device <b>104</b> are instantiated and stored at both the server device <b>104</b> and the user device <b>106</b>. As one example, the identifier <b>116</b> and the secret key <b>118</b> may be generated by the client device <b>102</b>. The client device <b>102</b> does not itself store the recovery identifier <b>116</b> and the recovery secret key <b>118</b>, but communicates them over the network <b>108</b> to the server device <b>104</b> for storage, and communicates them over the connection <b>110</b> to the user device <b>106</b> for storage. As an example of the latter, the client device <b>102</b> may encode the recovery identifier <b>116</b> and the recovery secret key <b>118</b> within a quick response (QR) or other graphical code that the client device <b>102</b> then displays for image capture or other optical scanning by the user device <b>106</b>, which subsequently decodes and stores the identifier <b>116</b> and the secret key <b>118</b>.</p><p id="p-0020" num="0019">Upon the credentials <b>114</b> no longer being stored at the client device <b>102</b>, the client device <b>102</b> has to be reregistered with the server device <b>104</b> to store new credentials <b>124</b> by which the client device <b>102</b> can be authenticated with the server device <b>104</b>. The server device <b>104</b> permits such reregistration <b>122</b> of the client device <b>102</b> after successfully validating a recovery code <b>120</b> generated by the user device <b>106</b>. The user device <b>106</b> specifically generates the recovery code <b>120</b> based on the recovery identifier <b>116</b> and the recovery secret key <b>118</b> that the user device <b>106</b> previously stored. The user device <b>106</b> provides the recovery code <b>120</b> to the client device <b>102</b> over the connection <b>110</b>. For example, the user device <b>106</b> may display the recovery code <b>120</b> for a user to manually input at the client device <b>102</b>.</p><p id="p-0021" num="0020">The client device <b>102</b> in turns provides the received recovery code <b>120</b> to the server device <b>104</b> over the network <b>108</b>, and the server device <b>104</b> validates the recovery code <b>120</b> using the recovery identifier <b>116</b> and the recovery secret key <b>118</b> that the server device <b>104</b> previously stored. Upon successful validation of the recovery code <b>120</b>, reregistration <b>122</b> of the client device <b>102</b> with the server device <b>104</b> occurs. Specifically, new credentials <b>124</b> by which the client device <b>102</b> can be authenticated with the server device <b>104</b> are stored on the client device <b>102</b>, and the same or corresponding new credentials <b>124</b> are likewise stored on the server device <b>104</b>.</p><p id="p-0022" num="0021">The reregistration process thus does not involve the administrator responsible for or overseeing centralized management of endpoints like the client device <b>102</b>, but rather involves the user of the user device <b>106</b> interacting with the client device <b>102</b>. At initial registration <b>112</b>, this user initiates instantiation of the recovery identifier <b>116</b> and the recovery secret key <b>118</b> for storage at the user device <b>106</b> and the server device <b>104</b>. For reregistration <b>122</b> to occur, this user initiates generation of the recovery code <b>120</b> at the user device <b>106</b> for validation at the server device <b>104</b>.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an example process <b>200</b> for generating and storing the recovery identifier <b>116</b> and the recovery secret key <b>118</b> subsequent to registration <b>112</b> of the client device <b>102</b> with the server device <b>104</b>. The parts of the process <b>200</b> in the left column are performed by the user device <b>106</b>; the parts in the middle column are performed by the client device <b>102</b>; and the parts in the right column are performed by the server device <b>104</b>. The left, middle, and right parts of the process <b>200</b> can be implemented as program code stored on a non-transitory computer-readable data storage medium and executed by a processor of a respective device. For example, the middle parts of the process <b>200</b> can be implemented as program code executed by a processor of the client device <b>102</b>.</p><p id="p-0024" num="0023">The client device <b>102</b> and the server device <b>104</b> instantiate the recovery identifier <b>116</b> and the recovery secret key <b>118</b> associated with the client device <b>102</b> (<b>202</b>). The recovery identifier <b>116</b> can be a unique randomly generated six-byte alphanumeric identifier. The recovery secret key <b>118</b> can be large randomly generated number or alphanumeric string that is sufficiently large to prevent it from being easily guessed, such as between 256 and 4,096 bits in length. In one implementation, a difference between the recovery identifier <b>116</b> and the recovery secret key <b>118</b> is that the former is encoded within and decodable from the recovery code <b>120</b> generated for reregistration <b>122</b> of the client device <b>102</b> to occur, whereas the latter is not. Rather, the recovery secret key <b>118</b> is used as a basis upon which a time-limited password of the recovery code <b>120</b> is generated, as described later in the detailed description. As such, the recovery secret key <b>118</b> does not have to be transmitted due to the usage of the time-limited password.</p><p id="p-0025" num="0024">As noted, instantiation of the recovery identifier <b>116</b> and the recovery secret key <b>118</b> occur once (i.e., subsequent to) the client device <b>102</b> has been registered with the server device <b>104</b>, such that the credentials <b>114</b> by which the client device <b>102</b> can be authenticated with the server device <b>104</b> have already been generated and stored. Instantiation of the recovery identifier <b>116</b> and the recovery secret key <b>118</b> can occur at behest of the user of the client device <b>102</b>. For example, the user may log into the client device <b>102</b>, and run a computer program that causes the recovery identifier <b>116</b> and the recovery secret key <b>118</b> to be instantiated.</p><p id="p-0026" num="0025">In one implementation, instantiation of the recovery identifier <b>116</b> and the recovery secret key <b>118</b> can occur by the client device <b>102</b> itself generating the identifier <b>116</b> and the secret key <b>118</b> (<b>204</b>). The client device <b>102</b> thus transmits the generated recovery identifier <b>116</b> and generated recovery secret key <b>118</b> over the network <b>108</b> to the server device <b>104</b> (<b>206</b>), which receives (<b>208</b>) and then stores (<b>210</b>) the identifier <b>116</b> and the secret key <b>118</b>. In another implementation, the server device <b>102</b>, instead of the client device <b>102</b>, may generate the recovery identifier <b>116</b> and the recovery secret key <b>118</b>.</p><p id="p-0027" num="0026">In this case, once instantiation of the recovery identifier <b>116</b> and the recovery secret key <b>118</b> has been initiated, the client device <b>102</b> sends a request over the network <b>108</b> to the server device <b>104</b> to generate the identifier <b>116</b> and the secret key <b>118</b> (<b>212</b>). The server device <b>104</b> receives the request (<b>214</b>), and responsively generates and stores the recovery identifier <b>116</b> and the recovery secret key <b>118</b> (<b>216</b>). The server device <b>104</b> then transmits the recovery identifier <b>116</b> and the recovery secret key <b>118</b> over the network <b>108</b> to the client device <b>102</b> (<b>218</b>), which receives the identifier <b>116</b> and the secret key <b>118</b> (<b>220</b>).</p><p id="p-0028" num="0027">In either implementation, once the recovery identifier <b>116</b> and the recovery secret key <b>118</b> have been instantiated, the client device <b>102</b> provides the identifier <b>116</b> and the secret key <b>118</b> to the user device <b>106</b> (<b>222</b>), which receives them over the connection <b>110</b> (<b>224</b>). As noted above, for example, the client device <b>102</b> may encode the recovery identifier <b>116</b> and the recovery secret key <b>118</b> within a QR code that is displayed. The user causes the user device <b>106</b> to run a computer program, such as an app, that captures an image of or otherwise optically scans the QR code, and decodes the identifier <b>116</b> and the secret key <b>118</b> from the QR code. The user device <b>106</b> may receive the recovery identifier <b>116</b> and the recovery secret key <b>118</b> in another manner as well, such as via an NFC connection, a Bluetooth connection, and so on. The user device <b>106</b> then stores the recovery identifier <b>116</b> and the recovery secret key <b>118</b> (<b>226</b>).</p><p id="p-0029" num="0028">The process <b>200</b> is performed after the client device <b>102</b> has been registered with the server device <b>104</b>, so that the client device <b>102</b> can be reregistered with the server device <b>104</b> if necessary. For example, if the credentials <b>114</b> that were stored at the client device <b>102</b> during registration <b>112</b> are no longer stored on the client device <b>102</b>, then the client device <b>102</b> has to be reregistered with the server device <b>104</b> so that new credentials <b>124</b> for authentication of the client device <b>102</b> can be stored. The process <b>200</b> is thus performed to generate and store the recovery identifier <b>116</b> and the recovery secret key <b>118</b> on which basis the user device <b>106</b> can generate a recovery code <b>120</b> that is validated by the server device <b>104</b> to permit subsequent reregistration <b>122</b> of the client device <b>102</b>.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example process <b>300</b> for generating and validating the recovery code <b>120</b> to permit reregistration <b>122</b> of the client device <b>102</b> with the server device <b>104</b>. The parts of the process <b>300</b> in the left column are performed by the user device <b>106</b>; the parts in the middle column are performed by the client device <b>102</b>; and the parts in the right column are performed by the server device <b>104</b>. As with the process <b>200</b>, the left, middle, and right parts of the process <b>300</b> can be implemented as program code and stored on a non-transitory computer-readable data storage medium and executed by a processor of a respective device.</p><p id="p-0031" num="0030">The user of the user device <b>106</b> initiates the recovery code <b>120</b> generation and validation process at the user device <b>106</b>, such as by running the same program on the user device <b>106</b> that stored the recovery identifier <b>116</b> and the recovery secret key <b>118</b>. The user device <b>106</b> therefore generates the recovery code <b>120</b> from the previously stored recovery identifier <b>116</b> and the previously stored recovery secret key <b>118</b> (<b>302</b>). Specifically, the user device <b>106</b> generates a first part of the recovery code <b>120</b> as a random seed (<b>304</b>). The random seed may be a six-byte random alphanumeric string, for instance.</p><p id="p-0032" num="0031">The user device <b>106</b> generates a second part of the recovery code <b>120</b> as a value from the random seed and the recovery identifier <b>116</b> (<b>306</b>), in such a way that the recovery identifier <b>116</b> is able to be generated from the value and the random seed. That is, the value encodes the recovery identifier <b>116</b> using the random seed in a way that permits the recovery identifier <b>116</b> to be decoded from the value and the random seed. For example, an exclusive-or (XOR) operation may be performed on the recovery identifier <b>116</b> and the random seed to generate the value, such that performing an XOR operation on the value and the random seed returns the recovery identifier <b>116</b>.</p><p id="p-0033" num="0032">The user device <b>106</b> generates a third part of the recovery code <b>120</b> as a time-limited password from the recovery secret key <b>118</b> (<b>308</b>). For instance, a one-time password algorithm may be performed that uses as input the recovery secret key <b>118</b> and a time-based counter, such as an epoch counter, truncated to a current time period, such as the current hour. The one-time password algorithm may be a hash-based message authentication code (HMAC)-based one-time password (HOTP) algorithm in one implementation.</p><p id="p-0034" num="0033">The user device <b>106</b> provides the recovery code <b>310</b> over the connection <b>110</b> to the client device <b>102</b> (<b>310</b>), which receives the recovery code <b>310</b> (<b>312</b>). For example, in one implementation, the user device <b>106</b> may display the recovery code <b>310</b> for the user to manually enter into the client device <b>102</b>. In another implementation, the user device <b>106</b> may transmit the recovery code <b>310</b> to the client device <b>102</b> over a Bluetooth connection, an NFC connection, or in another manner. The client device <b>102</b> in turn provides the recovery code <b>120</b> over the network <b>108</b> to the server device <b>104</b> (<b>314</b>), which receives the recovery code <b>310</b> (<b>316</b>).</p><p id="p-0035" num="0034">The server device <b>104</b> validates the received recovery code <b>310</b> using the recovery identifier <b>116</b> and the recovery secret key <b>118</b> that the server device <b>104</b> previously stored (<b>317</b>). First, the server device <b>104</b> generates the recovery identifier <b>116</b> from the random seed of the first part of the recovery code <b>120</b> and the value of the second part of the recovery code <b>120</b> (<b>318</b>). For example, an XOR operation can be performed on the random seed and the value to generate the recovery identifier <b>116</b>, if the value was previously generated by performing an XOR operation on the recovery identifier <b>116</b> and the random seed, as noted above.</p><p id="p-0036" num="0035">The server device <b>104</b> then retrieves the recovery secret key <b>118</b> that the server device <b>104</b> previously stored for this generated recovery identifier <b>116</b> (<b>320</b>). For each of a number of client devices <b>102</b>, the server device <b>104</b> will have stored a different pair of a recovery identifier <b>116</b> and a recovery secret key <b>118</b>. Therefore, the server device <b>104</b> retrieves the recovery secret key <b>118</b> that the device <b>104</b> previously stored for the secret key <b>118</b> that has been generated from the recovery code <b>120</b>.</p><p id="p-0037" num="0036">Next, the server device <b>104</b> generates a time-limited password from the retrieved recovery secret key <b>118</b> (<b>322</b>). The time-limited password is generated by the server device <b>104</b> in the same way that the user device <b>106</b> did. For instance, the server device <b>104</b> may perform a one-time password algorithm, using as input the recovery secret key <b>118</b> that was retrieved for the recovery identifier <b>116</b> generated from the recovery code <b>120</b>, along with a time-based counter truncated to a current time period. The current time period is sufficiently long that the same time period, such as the current hour, will be used by both the user device <b>106</b> and the server device <b>104</b> when performing the one-time password algorithm. However, the current time period is sufficiently short to ensure that the user device <b>106</b> and the server device <b>106</b> will generate different one-time passwords should too much time pass. In one implementation, the server device <b>104</b> may be able to accept a time-limited password that is based on a counter truncated to a previous time period (or the next time period) to be tolerant of time sync and network latency issues between the client device <b>102</b> and server device <b>104</b>.</p><p id="p-0038" num="0037">The server device <b>104</b> finally verifies that the time-limited password that the server device <b>104</b> generated matches the time-limited password of the third part of the recovery code <b>120</b> (<b>324</b>). The former time-limited password is generated by the server device <b>104</b> on the basis of the recovery secret key <b>118</b> that the server device <b>104</b> retrieved for the recovery identifier <b>116</b> that the server device <b>104</b> generated (i.e., decoded) from the recovery code <b>120</b>. The latter time-limited password was generated by the user device <b>106</b> on the basis of the recovery secret key <b>118</b>, and provided as the third part of the recovery code <b>120</b> to the server device <b>104</b>. Therefore, so long as the user device <b>106</b> and the server device <b>104</b> store the same recovery identifier <b>116</b> and the same recovery secret key <b>118</b> for the client device <b>102</b>, the two time-limited passwords will match if they have been generated within the same current time period.</p><p id="p-0039" num="0038">Upon the server device <b>104</b> successfully validating the recovery code <b>120</b>, the client device <b>102</b> can then be reregistered with the server device <b>104</b> as has been described. As such, new credentials <b>124</b> by which the client device <b>102</b> can be authenticated with the server device <b>104</b> can be stored during reregistration <b>122</b>. Client device <b>102</b> reregistration <b>122</b> therefore does not require involvement of any administrator. Rather, the user of the user device <b>106</b> (and of the client device <b>102</b>) can successfully complete client device <b>102</b> reregistration <b>122</b> him or herself.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example non-transitory computer-readable data storage medium <b>400</b> storing program code <b>402</b> executable by the user device <b>106</b> to facilitate reregistration <b>122</b> of the client device <b>102</b> with the server device <b>104</b>. The program code <b>402</b> is executable to perform processing. The processing includes, subsequent to registration <b>112</b> of the client device <b>102</b> with the server device <b>104</b> such that credentials <b>114</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b> are securely stored at the client device <b>102</b>, receiving from the client device <b>102</b> and storing the recovery identifier <b>116</b> and the recovery secret key <b>118</b> associated with the client device <b>102</b> (<b>404</b>).</p><p id="p-0041" num="0040">The processing includes, upon the credentials <b>114</b> no longer being stored at the client device <b>102</b> such that the client device <b>102</b> has be reregistered with the server device <b>104</b> to store new credentials <b>124</b> by which the client device is authenticated with the server device <b>104</b>, generating a recovery code <b>120</b> (<b>406</b>). The recovery code <b>120</b> has a first part that includes a random seed, and a second part that includes a value generated from the random seed and the recovery identifier <b>116</b>. The recovery identifier <b>116</b> is able to be generated from the random seed and the value of the second part. The recovery code <b>120</b> has a third part including a time-limited one-time password generated from the recovery secret key <b>118</b>.</p><p id="p-0042" num="0041">The processing includes providing the recovery code <b>120</b> to the client device <b>102</b> (<b>408</b>). The client device <b>102</b> responsively provides the recovery code <b>120</b> to the server device <b>104</b>. Validation of the recovery code <b>120</b> by the server device <b>104</b> therefore permits reregistration <b>122</b> of the client device <b>102</b> with the server device <b>104</b> such that the new credentials <b>124</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b> are securely stored at the client device <b>102</b>.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an example client device <b>102</b> that the reregistration <b>122</b> of which with the server device <b>104</b> can be facilitated by the user device <b>106</b>. The client device <b>102</b> includes a storage device <b>502</b>, such as a hard disk drive, at which credentials <b>114</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b> are securely stored upon registration <b>112</b> of the client device <b>102</b> with the server device <b>104</b>. The client device <b>102</b> includes a processor <b>504</b>, and a memory <b>506</b> storing instructions <b>507</b> executable by the processor <b>504</b>.</p><p id="p-0044" num="0043">The instructions <b>507</b> are executable to, subsequent to the registration <b>112</b> of the client device <b>102</b> with the server device <b>104</b>, instantiate the recovery identifier <b>116</b> and the recovery secret key <b>118</b> associated with the client device <b>102</b>, and provide them to the user device <b>106</b> for storage (<b>508</b>). The instructions are executable to, upon the credentials <b>114</b> no longer being stored at the storage device <b>502</b> such that the client device <b>102</b> has to be reregistered with the server device <b>104</b> to store new credentials <b>124</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b>, receive a recovery code <b>120</b> from the user device <b>102</b>, and provide the recovery code <b>120</b> to the server device <b>104</b> for validation (<b>510</b>). The recovery code <b>120</b> has first, second, and third parts, as noted above.</p><p id="p-0045" num="0044">The server device <b>104</b> thus validates the recovery code <b>120</b> to permit reregistration <b>122</b> of the client device <b>102</b> with the server device <b>104</b> such that the new credentials <b>124</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b> are securely stored at the storage device <b>502</b>. Therefore, the instructions are executable to, upon validation of the recovery code <b>120</b> by the server device <b>104</b>, reregister the client device <b>102</b> with the server device <b>104</b> and securely store the new credentials <b>124</b> at the storage device <b>502</b> (<b>512</b>). The client device <b>102</b> can then once again be authenticated with the server device <b>104</b>.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an example method <b>600</b> performed by the server device <b>104</b> to reregister the client device <b>102</b> as facilitated by the user device <b>106</b>. The method <b>600</b> can be implemented as program code stored on a non-transitory computer-readable data storage medium and executed by a processor of the server device <b>104</b>. The method <b>600</b> includes, subsequent to registration <b>112</b> of the client device <b>102</b> with the server device <b>104</b> such that the credentials <b>114</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b> are securely stored, instantiating and storing the recovery identifier <b>116</b> and the recovery secret key <b>118</b> associated with the client device <b>102</b> (<b>602</b>).</p><p id="p-0047" num="0046">The method <b>600</b> includes, upon the credentials <b>114</b> no longer being stored at the client device <b>102</b> such that the client device <b>102</b> has to be reregistered with the server device <b>104</b> to store new credentials <b>124</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b>, receiving from the client device <b>102</b> a recovery code <b>120</b> generated by the user device <b>106</b> and provided to the client device <b>102</b> (<b>604</b>). The recovery code <b>120</b> has first, second, and third parts, as noted above. The method <b>600</b> includes validating the recovery code <b>120</b> (<b>606</b>), and upon such validation, reregistering the client device <b>102</b> with the server device <b>104</b> such that the new credentials <b>124</b> by which the client device <b>102</b> is authenticated with the server device <b>104</b> are securely stored (<b>608</b>).</p><p id="p-0048" num="0047">Techniques have been described herein for reregistering a client device <b>102</b> with a server device <b>104</b> by using a user device <b>106</b>. The techniques do not require administrator supervision, and therefore can scale to environments in which an administrator is responsible for hundreds, thousands, tens of thousands, or even more client devices <b>102</b> that each have to have credentials <b>114</b> or <b>124</b> for authentication with the server device <b>104</b>. Rather, a user of a client device <b>102</b> initiates reregistration of the client device <b>102</b> via his or her user device <b>106</b>.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>We claim:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A non-transitory computer-readable data storage medium storing program code executable by a user device to perform processing comprising:<claim-text>subsequent to registration of a client device with a server device such that credentials by which the client device is authenticated with the server device are securely stored at the client device, receiving from the client device and storing a recovery identifier and a recovery secret key that are associated with the client device;</claim-text><claim-text>upon the credentials no longer being stored at the client device such that the client device has be reregistered with the server device to store new credentials by which the client device is authenticated with the server device, generating a recovery code having a first part comprising a random seed, a second part comprising a value generated from the random seed and the recovery identifier, where the recovery identifier is able to be generated from the random seed and the value, and a third part comprising a time-limited one-time password generated from the recovery secret key; and</claim-text><claim-text>providing the recovery code to the client device, the client device responsively providing the recovery code to the server device, the server device validating the recovery code to permit reregistration of the client device with the server device such that the new credentials by which the client device is authenticated with the server device are securely stored at the client device.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The non-transitory computer-readable data storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client device is reregistered with the server device, and the new credentials by which the client device is authenticated with the server device are securely stored at the client device, upon validation of the recovery code by the server device.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The non-transitory computer-readable data storage medium of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the recovery identifier and the recovery secret key are further stored at the server device,<claim-text>and wherein the server device validates the recovery code by generating the recovery identifier from the random seed of the first part of the recovery code and from the value of the second part of the recovery code, retrieving the recovery secret key for the generated recovery identifier, generating the time-limited one-time password from the retrieved recovery secret key, and verifying that the generated time-limited one-time password matches the time-limited one-time password of the third part of the recovery code.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The non-transitory computer-readable data storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating the recovery code comprises generating the value of the second part of the recovery code by performing an exclusive-or operation on the random seed and the recovery identifier.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The non-transitory computer-readable data storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating the recovery code comprises generating the time-limited one-time password of the third part of the recovery code by performing a one-time password algorithm using as input the recovery secret key and a time-based counter truncated to a current time period.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The non-transitory computer-readable data storage medium of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the time-based counter comprises an epoch counter and the current time period comprises a current hour.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The non-transitory computer-readable data storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein receiving from the client device and storing the recovery identifier and the recovery secret key comprises optically scanning a graphical code in which the recovery identifier and the recovery secret key are encoded and decoding the recovery identifier and the recovery secret key from the optically scanned graphical code.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The non-transitory computer-readable data storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein providing the recovery code to the client device comprises displaying the recovery code to a user for the user to manually input at the client device.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A client device comprising:<claim-text>a storage device at which credentials by which the client device is authenticated with a server device are securely stored upon registration of the client device with the server device;</claim-text><claim-text>a processor; and</claim-text><claim-text>a memory storing instructions executable by the processor to:<claim-text>subsequent to the registration of the client device with the server device such that the credentials are securely stored at the storage device, instantiate a recovery identifier and a recovery secret key that are associated with the client device and providing the recovery identifier and the recovery secret key to a user device for storage;</claim-text><claim-text>upon the credentials no longer being stored at the storage device such that the client device has to be reregistered with the server device to store new credentials by which the client device is authenticated with the server device, receive from the user device a recovery code having a first part comprising a random seed, a second part comprising a value generated from the random seed and the recovery identifier, where the recovery identifier is able to be generated from the random seed and the value, and a third part comprising a time-limited one-time password generated from the recovery secret key;</claim-text><claim-text>provide the received recovery code to the server device, the server device validating the recovery code to permit reregistration of the client device with the server device such that the new credentials by which the client device is authenticated with the server device are securely stored at the storage device; and</claim-text><claim-text>upon validation of the recovery code by the server device, reregister the client device with the server device and securely store at the storage device the new credentials by which the client device is authenticated with the server device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The client device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the recovery identifier and the recovery secret key are further stored at the server device,<claim-text>and wherein the server device validates the recovery code by generating the recovery identifier from the random seed of the first part of the recovery code and from the value of the second part of the recovery code, retrieving the recovery secret key for the generated recovery identifier, generating the time-limited one-time password from the retrieved recovery secret key, and verifying that the generated time-limited one-time password matches the time-limited one-time password of the third part of the recovery code.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The client device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein instantiating the recovery identifier and the recovery secret key comprises generating the recovery identifier and the recovery secret key at the client device,<claim-text>and wherein the instructions are executable by the processor to further transmit the generated recovery identifier and the generated recovery secret key to the server device for storage.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The client device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein instantiating the recovery identifier and the recovery secret key comprises transmitting a request for the recovery identifier and the recovery secret key to the server device and responsively receiving from the server device the recovery identifier and the recovery secret key as generated at the server device.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The client device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein providing the recovery identifier and the recovery secret key to the user device comprises generating a graphical code in which the recovery identifier and the recovery secret key are encoded and displaying the graphical code for optical scanning by the user device.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The client device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein receiving from the user device the recovery code comprises receiving manual input of the recovery code by a user of the user device at the client device.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A method comprising:<claim-text>subsequent to registration of a client device with a server device such that credentials by which the client device is authenticated with the server device are securely stored at the client device, instantiating and storing, by the server device, a recovery identifier and a recovery secret key that are associated with the client device;</claim-text><claim-text>upon the credentials no longer being stored at the client device such that the client device has to be reregistered with the server device to store new credentials by which the client device is authenticated with the server device, receiving by the server device from the client device a recovery code generated by a user device and provided to the client device, the recovery code having a first part comprising a random seed, a second part comprising a value generated from the random seed and the recovery identifier, where the recovery identifier is able to be generated from the random seed and the value, and a third part comprising a time-limited one-time password generated from the recovery secret key;</claim-text><claim-text>validating, by the server device, the recovery code; and</claim-text><claim-text>upon validation of the recovery code, reregistering, by the server device, the client device with the server device such that the new credentials by which the client device is authenticated with the server device are securely stored at the client device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein validating the recovery code comprises:<claim-text>generating the recovery identifier from the random seed of the first part of the recovery code and the value of the second part of the recovery code;</claim-text><claim-text>retrieving the recovery secret key for the generated recovery identifier;</claim-text><claim-text>generating the time-limited one-time password from the retrieved secret key; and</claim-text><claim-text>verifying that the generated time-limited one-time password matches the time-limited one-time password of the third part of the recovery code.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein generating the recovery identifier from the random seed of the first part of the recovery code and the value of the second part of the recovery code comprises performing an exclusive-or operation on the random seed and the value.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein generating the time-limited one-time password from the retrieved recovery secret key comprises performing a one-time password algorithm using as input the retrieved recovery secret key and a time-based counter truncated to a current time period.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein instantiating the recovery identifier and the recovery secret key comprises receiving from the client device the recovery identifier and the recovery secret key as generated at the client device and provided to the user device.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein instantiating the recovery identifier and the recovery secret key comprises generating the recovery identifier and the recovery secret key at the server device,<claim-text>and wherein the method further comprises transmitting, by the server device, the generated recovery identifier and the generated recovery secret key to the client device for providing to the user device.</claim-text></claim-text></claim></claims></us-patent-application>