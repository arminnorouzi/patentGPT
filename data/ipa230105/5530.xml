<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005531A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005531</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17863307</doc-number><date>20220712</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>56</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>5642</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0674</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0616</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0653</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>1668</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DATA STORAGE BASED ON DATA POLARITY</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17071742</doc-number><date>20201015</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11404116</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17863307</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16459462</doc-number><date>20190701</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10832768</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17071742</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62693786</doc-number><date>20180703</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Micron Technology, Inc.</orgname><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Schreck</last-name><first-name>John F.</first-name><address><city>Lucas</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Raad</last-name><first-name>George B.</first-name><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Methods, systems, and devices for storing and reading data at a memory device are described. A memory device may utilize one or more storage states to store data within a data word. The memory device may exhibit higher data leakage or more power consumption when storing or reading a first storage state compared to storing or reading one or more other storage states. In some cases, the memory device may generate a second data word corresponding to a first data word by modifying each symbol type of the first data word to generate a different symbol type for the second data word. A memory device may reduce the occurrence of a storage state associated with large data leakage, or high-power consumption, or both. Further, the memory device may generate and store an indicator indicating the transformation of a corresponding data word.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="106.51mm" wi="158.75mm" file="US20230005531A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="247.82mm" wi="158.07mm" orientation="landscape" file="US20230005531A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="250.70mm" wi="156.63mm" file="US20230005531A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="247.31mm" wi="140.55mm" file="US20230005531A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="229.53mm" wi="161.12mm" orientation="landscape" file="US20230005531A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="253.66mm" wi="164.59mm" file="US20230005531A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="176.53mm" wi="140.89mm" file="US20230005531A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="198.04mm" wi="161.46mm" file="US20230005531A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="188.98mm" wi="148.76mm" file="US20230005531A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="232.66mm" wi="145.63mm" file="US20230005531A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="187.28mm" wi="143.43mm" file="US20230005531A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="166.29mm" wi="151.05mm" file="US20230005531A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE</heading><p id="p-0002" num="0001">The present application for patent a continuation of U.S. patent application Ser. No. 17/071,742 by Schreck et al., entitled &#x201c;DATA STORAGE BASED ON DATA POLARITY&#x201d; filed Oct. 15, 2020, which is a continuation of U.S. patent application Ser. No. 16/459,462 by Schreck et al., entitled &#x201c;DATA STORAGE BASED ON DATA POLARITY&#x201d; filed Jul. 1, 2019, which claims priority to U.S. Provisional Patent Application No. 62/693,786 by Schreck et al., entitled &#x201c;DATA STORAGE BASED ON DATA POLARITY&#x201d; filed Jul. 3, 2018, each of which is assigned to the assignee hereof and each of which is expressly incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The following relates generally to a system that includes a memory device and, more specifically to data storage based on data polarity.</p><p id="p-0004" num="0003">Memory devices are widely used to store information in various electronic devices such as computers, wireless communication devices, cameras, digital displays, and the like. Information is stored by programing different states of a memory device. For example, binary devices most often store one of two states, often denoted by a logic 1 or a logic 0. In other devices (e.g., a multi-level cell (MLC) device), more than two states may be stored. To access the stored information, a component of the device may read, or sense, at least one stored state in the memory device. To store information, a component of the device may write, or program, the state in the memory device.</p><p id="p-0005" num="0004">Various types of memory devices exist, including magnetic hard disks, random access memory (RAM), read only memory (ROM), dynamic RAM (DRAM), synchronous dynamic RAM (SDRAM), ferroelectric RAM (FeRAM), magnetic RAM (MRAM), resistive RAM (RRAM), flash memory, phase change memory (PCM), and others. Memory devices may be volatile or non-volatile. Volatile memory devices, e.g., DRAM, may lose their stored state over time unless they are periodically refreshed by an external power source. Improving memory devices, generally, may include increasing memory cell density, increasing read/write speeds, increasing reliability, increasing data retention, reducing power consumption, or reducing manufacturing costs, among other metrics. Some memory devices may utilize data bus inversion (DBI) to decrease power consumption while communicating data. But DBI may not address increased performance for (e.g., data retention, power consumption) related to data storage.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a system that supports data storage based on data polarity in accordance with the present disclosure.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of a memory array that supports data storage based on data polarity in accordance with the present disclosure.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a process flow that supports data storage based on data polarity in accordance with the present disclosure.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates examples of data transformations that support data storage based on data polarity in accordance with the present disclosure.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example of a process flow that supports data storage based on data polarity in accordance with the present disclosure.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>6</b></figref> a block diagram of a device that supports data storage based on data polarity in accordance with the present disclosure.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a block diagram of a device that supports data storage based on data polarity in accordance with the present disclosure.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIGS. <b>8</b> through <b>11</b></figref> show flowcharts illustrating a method or methods that support data storage based on data polarity in accordance with the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0014" num="0013">In some memory devices (e.g., DRAM memory devices), a memory cell may experience current or charge leakage, which may affect the reliability of data stored in the memory cell and, in turn, the array of which the cell is a component. This may manifest as a decrease in data retention and data integrity such that the memory device may exhibit higher error rates as a result of stored charges leaking off over time. Throughout the disclosure, the term leakage may refer to charge or current leakage, or to the resulting impact on the information or data stored in a cell (e.g., &#x201c;data leakage&#x201d;). In some cases, certain storage states (e.g., charge levels) may exhibit higher rates of leakage than other storage states. In other examples, a memory device may utilize higher power consumption when storing one storage state when compared to storing one or more other storage states. That is, the memory device may exhibit poorer performance when storing or reading a first storage state when compared to storing or reading a second storage state. In some cases, reducing the occurrence of the storage stage with large data leakage or power consumption may increase the overall performance of the memory device (e.g., improved data retention, lower power consumption).</p><p id="p-0015" num="0014">In accordance with the disclosure herein, a memory device may transform data before storing the data in one or more memory cells to reduce leakage and thereby improve data retention and/or data integrity. The memory device may receive a first data word to be stored in the memory device. The memory device may determine whether the first data word meets a storage state criterion. For example, the memory device may determine symbol types that may be stored in the memory cells as part of the data word. The memory device may generate a second data word corresponding to the first data word by applying a transformation to the first data word. The transformation may include modifying each symbol type of the first data word to a corresponding symbol type for the second data word. With the transformation, the memory device may reduce the amount of data leakage for storing the first data word and thereby reduce data loss, errors, or other detrimental behavior.</p><p id="p-0016" num="0015">Further, the memory device may generate and store an indicator corresponding to the second data word stored in the memory device. The indicator may indicate that the second data word is a transformed version of the first data word. In this manner, the memory device may reduce the occurrence of symbol types associated with detrimental behavior which may, in turn, increase the performance of the memory device (e.g., increase data retention, power consumption). In some cases, the memory device may include one or more multi-level memory cells that are configured to store three or more states. These transformations can be used to transform multi-level data and reduce data leakage in multi-level memory devices.</p><p id="p-0017" num="0016">Features of the disclosure are initially described in the context of a memory system. Features of the disclosure are described in the context of process flows, an example of a multi-level cell transformation, and device block diagrams. These and other features of the disclosure are further illustrated by and described with reference to apparatus diagrams, system diagrams, and flowcharts that relate to data storage based on data polarity.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a system <b>100</b> that utilizes one or more memory devices in accordance with aspects disclosed herein. The system <b>100</b> may include an external memory controller <b>105</b>, a memory device <b>110</b>, and a plurality of channels <b>115</b> coupling the external memory controller <b>105</b> with the memory device <b>110</b>. The system <b>100</b> may include one or more memory devices, but for ease of description the one or more memory devices may be described as a single memory device <b>110</b>.</p><p id="p-0019" num="0018">The system <b>100</b> may include aspects of an electronic device, such as a computing device, a mobile computing device, a wireless device, or a graphics processing device. The system <b>100</b> may be an example of a portable electronic device. The system <b>100</b> may be an example of a computer, a laptop computer, a tablet computer, a smartphone, a cellular phone, a wearable device, an internet-connected device, or the like. The memory device <b>110</b> may be component of the system configured to store data for one or more other components of the system <b>100</b>. In some examples, the system <b>100</b> is configured for bi-directional wireless communication with other systems or devices using a base station or access point. In some examples, the system <b>100</b> is capable of machine-type communication (MTC), machine-to-machine (M2M) communication, or device-to-device (D2D) communication.</p><p id="p-0020" num="0019">At least portions of the system <b>100</b> may be examples of a host device. Such a host device may be an example of a device that uses memory to execute processes such as a computing device, a mobile computing device, a wireless device, a graphics processing device, a computer, a laptop computer, a tablet computer, a smartphone, a cellular phone, a wearable device, an internet-connected device, some other stationary or portable electronic device, or the like. In some cases, the host device may refer to the hardware, firmware, or software, or a combination thereof that implements the functions of the external memory controller <b>105</b>. In some cases, the external memory controller <b>105</b> may be referred to as a host or host device.</p><p id="p-0021" num="0020">In some cases, a memory device <b>110</b> may be an independent device or component that is configured to be in communication with other components of the system <b>100</b> and provide physical memory addresses/space to potentially be used or referenced by the system <b>100</b>. In some examples, a memory device <b>110</b> may be configurable to work with at least one or a plurality of different types of systems <b>100</b>. Signaling between the components of the system <b>100</b> and the memory device <b>110</b> may be operable to support modulation schemes to modulate the signals, different pin designs for communicating the signals, distinct packaging of the system <b>100</b> and the memory device <b>110</b>, clock signaling and synchronization between the system <b>100</b> and the memory device <b>110</b>, timing conventions, and/or other factors.</p><p id="p-0022" num="0021">The memory device <b>110</b> may be configured to store data for the components of the system <b>100</b>. In some cases, the memory device <b>110</b> may act as a slave-type device to the system <b>100</b> (e.g., responding to and executing commands provided by the system <b>100</b> through the external memory controller <b>105</b>). Such commands may include an access command for an access operation, such as a write command for a write operation, a read command for a read operation, a refresh command for a refresh operation, or other commands. The memory device <b>110</b> may include one or more memory dice <b>160</b> (e.g., memory chips) to support a desired or specified capacity for data storage. The memory device <b>110</b> including two or more memory dice <b>160</b> may be referred to as a multi-die memory or package (also referred to as multi-chip memory or package).</p><p id="p-0023" num="0022">The system <b>100</b> may further include a processor <b>120</b>, a basic input/output system (BIOS) component <b>125</b>, one or more peripheral components <b>130</b>, and an input/output (I/O) controller <b>135</b>. The components of system <b>100</b> may be in electronic communication with one another using a bus <b>140</b>.</p><p id="p-0024" num="0023">The processor <b>120</b> may be configured to control at least portions of the system <b>100</b>. The processor <b>120</b> may be a general-purpose processor, a digital signal processor (DSP), an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or it may be a combination of these types of components. In such cases, the processor <b>120</b> may be an example of a central processing unit (CPU), a graphics processing unit (GPU), or a system on a chip (SoC), among other examples.</p><p id="p-0025" num="0024">The BIOS component <b>125</b> may be a software component that includes a BIOS operated as firmware, which may initialize and run various hardware components of the system <b>100</b>. The BIOS component <b>125</b> may also manage data flow between the processor <b>120</b> and the various components of the system <b>100</b>, e.g., the peripheral components <b>130</b>, the I/O controller <b>135</b>, etc. The BIOS component <b>125</b> may include a program or software stored in read-only memory (ROM), flash memory, or any other non-volatile memory.</p><p id="p-0026" num="0025">The peripheral component(s) <b>125</b> may be any input device or output device, or an interface for such devices, that may be integrated into or with the system <b>100</b>. Examples may include disk controllers, sound controller, graphics controller, Ethernet controller, modem, universal serial bus (USB) controller, a serial or parallel port, or peripheral card slots, such as peripheral component interconnect (PCI) or accelerated graphics port (AGP) slots. The peripheral component(s) <b>125</b> may be other components understood by those skilled in the art as peripherals.</p><p id="p-0027" num="0026">The I/O controller <b>135</b> may manage data communication between the processor <b>120</b> and the peripheral component(s) <b>13</b>, input devices <b>145</b>, or output devices <b>150</b>. The I/O controller <b>135</b> may manage peripherals that are not integrated into or with the system <b>100</b>. In some cases, the I/O controller <b>135</b> may represent a physical connection or port to external peripheral components.</p><p id="p-0028" num="0027">The input <b>145</b> may represent a device or signal external to the system <b>100</b> that provides information, signals, or data to the system <b>100</b> or its components. This may include a user interface or interface with or between other devices. In some cases, the input <b>145</b> may be a peripheral that interfaces with system <b>100</b> via one or more peripheral components <b>130</b> or may be managed by the I/O controller <b>135</b>.</p><p id="p-0029" num="0028">The output <b>150</b> may represent a device or signal external to the system <b>100</b> configured to receive an output from the system <b>100</b> or any of its components. Examples of the output <b>150</b> may include a display, audio speakers, a printing device, or another processor on printed circuit board, etc. In some cases, the output <b>150</b> may be a peripheral that interfaces with the system <b>100</b> via one or more peripheral components <b>130</b> or may be managed by the I/O controller <b>135</b>.</p><p id="p-0030" num="0029">The components of system <b>100</b> may be made up of general-purpose or special purpose circuitry designed to carry out their functions. This may include various circuit elements, for example, conductive lines, transistors, capacitors, inductors, resistors, amplifiers, or other active or passive elements, configured to carry out the functions described herein.</p><p id="p-0031" num="0030">The memory device <b>110</b> may include a device memory controller <b>155</b> and one or more memory dice <b>160</b>. Each memory die <b>160</b> may include a local memory controller <b>165</b> (e.g., local memory controller <b>165</b>-<i>a</i>, local memory controller <b>165</b>-<i>b</i>, and/or local memory controller <b>165</b>-N) and a memory array <b>170</b> (e.g., memory array <b>170</b>-<i>a</i>, memory array <b>170</b>-<i>b</i>, and/or memory array <b>170</b>-N). A memory array <b>170</b> may be a collection (e.g., a grid) of memory cells, with each memory cell being configured to store at least one bit of digital data. In some cases, each memory cell may be configured to store more than one bit of digital data (i.e., each memory cell may have three or more types of storage states rather than two). In some cases, certain storage states may exhibit higher rates of leakage than other storage states. Additionally or alternatively, the memory device <b>110</b> may utilize more power when storing one type of storage state compared to other types of storage states. In some cases, the memory device <b>110</b> may reduce the occurrence of the storage state with large data leakage and/or the storage state associated with high power consumption. Features of memory arrays <b>170</b> and/or memory cells are described in more detail with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0032" num="0031">The memory device <b>110</b> may be an example of a two-dimensional (2D) array of memory cells or may be an example of a three-dimensional (3D) array of memory cells. For example, a 2D memory device may include a single memory die <b>160</b>. A 3D memory device may include two or more memory dice <b>160</b> (e.g., memory die <b>160</b>-<i>a</i>, memory die <b>160</b>-<i>b</i>, and/or any number of memory dice <b>160</b>-N). In a 3D memory device, a plurality of memory dice <b>160</b>-N may be stacked on top of one another. In some cases, memory dice <b>160</b>-N in a 3D memory device may be referred to as decks, levels, layers, or dies. A 3D memory device may include any quantity of stacked memory dice <b>160</b>-N (e.g., two high, three high, four high, five high, six high, seven high, eight high). This may increase the number of memory cells that may be positioned on a substrate as compared with a single 2D memory device, which in turn may reduce production costs or increase the performance of the memory array, or both.</p><p id="p-0033" num="0032">The device memory controller <b>155</b> may include circuits or components configured to control operation of the memory device <b>110</b>. As such, the device memory controller <b>155</b> may include the hardware, firmware, and software that enables the memory device <b>110</b> to perform commands and may be configured to receive, transmit, or execute commands, data, or control information related to the memory device <b>110</b>. The device memory controller <b>155</b> may be configured to communicate with the external memory controller <b>105</b>, the one or more memory dice <b>160</b>, or the processor <b>120</b>. In some cases, the memory device <b>110</b> may receive data and/or commands from the external memory controller <b>105</b>. For example, the memory device <b>110</b> may receive a write command indicating that the memory device <b>110</b> is to store certain data on behalf of a component of the system <b>100</b> (e.g., the processor <b>120</b>) or a read command indicating that the memory device <b>110</b> is to provide certain data stored in a memory die <b>160</b> to a component of the system <b>100</b> (e.g., the processor <b>120</b>).</p><p id="p-0034" num="0033">In some cases, the device memory controller <b>155</b> may control operation of the memory device <b>110</b> described herein in conjunction with the local memory controller <b>165</b> of the memory die <b>160</b>. Examples of the components included in the device memory controller <b>155</b> and/or the local memory controllers <b>165</b> may include receivers for demodulating signals received from the external memory controller <b>105</b>, decoders for modulating and transmitting signals to the external memory controller <b>105</b>, logic, decoders, amplifiers, filters, or the like.</p><p id="p-0035" num="0034">The local memory controller <b>165</b> (e.g., local to a memory die <b>160</b>) may be configured to control operations of the memory die <b>160</b>. Also, the local memory controller <b>165</b> may be configured to communicate (e.g., receive and transmit data and/or commands) with the device memory controller <b>155</b>. The local memory controller <b>165</b> may support the device memory controller <b>155</b> to control operation of the memory device <b>110</b> described herein. In some cases, the memory device <b>110</b> does not include the device memory controller <b>155</b>, and the local memory controller <b>165</b> or the external memory controller <b>105</b> may perform the various functions described herein. As such, the local memory controller <b>165</b> may be configured to communicate with the device memory controller <b>155</b>, with other local memory controllers <b>165</b>, or directly with the external memory controller <b>105</b> or the processor <b>120</b>.</p><p id="p-0036" num="0035">The external memory controller <b>105</b> may be configured to enable communication of information, data, and/or commands between components of the system <b>100</b> (e.g., the processor <b>120</b>) and the memory device <b>110</b>. The external memory controller <b>105</b> may act as a liaison between the components of the system <b>100</b> and the memory device <b>110</b> so that the components of the system <b>100</b> may not need to know the details of the memory device's operation. The components of the system <b>100</b> may present requests to the external memory controller <b>105</b> (e.g., read commands or write commands) that the external memory controller <b>105</b> satisfies. The external memory controller <b>105</b> may convert or translate communications exchanged between the components of the system <b>100</b> and the memory device <b>110</b>. In some cases, the external memory controller <b>105</b> may include a system clock that generates a common (source) system clock signal. In some cases, the external memory controller <b>105</b> may include a common data clock that generates a common (source) data clock signal.</p><p id="p-0037" num="0036">In some cases, the external memory controller <b>105</b> or other component of the system <b>100</b>, or its functions described herein, may be implemented by the processor <b>120</b>. For example, the external memory controller <b>105</b> may be hardware, firmware, or software, or some combination thereof implemented by the processor <b>120</b> or other component of the system <b>100</b>. While the external memory controller <b>105</b> is depicted as being external to the memory device <b>110</b>, in some cases, the external memory controller <b>105</b>, or its functions described herein, may be implemented by a memory device <b>110</b> or at a module (e.g., a dual inline memory module (DIMM)) that includes memory device <b>110</b>. For example, the external memory controller <b>105</b> may be hardware, firmware, or software, or some combination thereof implemented by the device memory controller <b>155</b> or one or more local memory controllers <b>165</b>. In some cases, the external memory controller <b>105</b> may be distributed across the processor <b>120</b> and the memory device <b>110</b> such that portions of the external memory controller <b>105</b> are implemented by the processor <b>120</b> and other portions are implemented by a device memory controller <b>155</b> or a local memory controller <b>165</b>. Likewise, in some cases, one or more functions ascribed herein to the device memory controller <b>155</b> or local memory controller <b>165</b> may in some cases be performed by the external memory controller <b>105</b> (either separate from or as included in the processor <b>120</b>).</p><p id="p-0038" num="0037">The components of the system <b>100</b> may exchange information with the memory device <b>110</b> using a plurality of channels <b>115</b>. In some examples, the channels <b>115</b> may enable communications between the external memory controller <b>105</b> and the memory device <b>110</b>. Each channel <b>115</b> may include one or more signal paths or transmission mediums (e.g., conductors) between terminals associated with the components of system <b>100</b>. For example, a channel <b>115</b> may include a first terminal including one or more pins or pads at external memory controller <b>105</b> and one or more pins or pads at the memory device <b>110</b>. A pin may be an example of a conductive input or output point of a device of the system <b>100</b>, and a pin may be configured to act as part of a channel. In some cases, a pin or pad of a terminal may be part of to a signal path of the channel <b>115</b>. Additional signal paths may be coupled with a terminal of a channel for routing signals within a component of the system <b>100</b>. For example, the memory device <b>110</b> may include signal paths (e.g., signal paths internal to the memory device <b>110</b> or its components, such as internal to a memory die <b>160</b>) that route a signal from a terminal of a channel <b>115</b> to the various components of the memory device <b>110</b> (e.g., a device memory controller <b>155</b>, memory dice <b>160</b>, local memory controllers <b>165</b>, memory arrays <b>170</b>).</p><p id="p-0039" num="0038">Channels <b>115</b> (and associated signal paths and terminals) may be dedicated to communicating specific types of information. In some cases, a channel <b>115</b> may be an aggregated channel and thus may include multiple individual channels. For example, a data channel <b>190</b> may be x4 (e.g., including four signal paths), x8 (e.g., including eight signal paths), x16 (including sixteen signal paths), etc.</p><p id="p-0040" num="0039">In some cases, the channels <b>115</b> may include one or more command and address (CA) channels <b>186</b>. The CA channels <b>186</b> may be configured to communicate commands between the external memory controller <b>105</b> and the memory device <b>110</b> including control information associated with the commands (e.g., address information). For example, the CA channel <b>186</b> may include a read command with an address of the desired data. In some cases, the CA channels <b>186</b> may be registered on a rising clock signal edge and/or a falling clock signal edge. In some cases, a CA channel <b>186</b> may include eight or nine signal paths.</p><p id="p-0041" num="0040">In some cases, the channels <b>115</b> may include one or more clock signal (CK) channels <b>188</b>. The CK channels <b>188</b> may be configured to communicate one or more common clock signals between the external memory controller <b>105</b> and the memory device <b>110</b>. Each clock signal may be configured oscillate between a high state and a low state and coordinate the actions of the external memory controller <b>105</b> and the memory device <b>110</b>. In some cases, the clock signal may be a differential output (e.g., a CK_t signal and a CK_c signal) and the signal paths of the CK channels <b>188</b> may be configured accordingly. In some cases, the clock signal may be single ended. In some cases, the clock signal may be a 1.5 GHz signal. A CK channel <b>188</b> may include any number of signal paths. In some cases, the clock signal CK (e.g., a CK_t signal and a CK_c signal) may provide a timing reference for command and addressing operations for the memory device <b>110</b>, or other system-wide operations for the memory device <b>110</b>. The clock signal CK therefore may be variously referred to as a control clock signal CK, a command clock signal CK, or a system clock signal CK. The system clock signal CK may be generated by a system clock, which may include one or more hardware components (e.g., oscillators, crystals, logic gates, transistors, or the like).</p><p id="p-0042" num="0041">In some cases, the channels <b>115</b> may include one or more data (DQ) channels <b>190</b>. The data channels <b>190</b> may be configured to communicate data and/or control information between the external memory controller <b>105</b> and the memory device <b>110</b>. For example, the data channels <b>190</b> may communicate information (e.g., bi-directional) to be written to the memory device <b>110</b> or information read from the memory device <b>110</b>. The data channels <b>190</b> may communicate signals that may be modulated using a variety of different modulation schemes (e.g., NRZ, PAM4).</p><p id="p-0043" num="0042">In some cases, the channels <b>115</b> may include one or more other channels <b>192</b> that may be dedicated to other purposes. These other channels <b>192</b> may include any number of signal paths.</p><p id="p-0044" num="0043">In some cases, the other channels <b>192</b> may include one or more write clock signal (WCK) channels. While the &#x2018;W&#x2019; in WCK may nominally stand for &#x201c;write,&#x201d; a write clock signal WCK (e.g., a WCK_t signal and a WCK_c signal) may provide a timing reference for access operations generally for the memory device <b>110</b> (e.g., a timing reference for both read and write operations). Accordingly, the write clock signal WCK may also be referred to as a data clock signal WCK. The WCK channels may be configured to communicate a common data clock signal between the external memory controller <b>105</b> and the memory device <b>110</b>. The data clock signal may be configured coordinate an access operation (e.g., a write operation or read operation) of the external memory controller <b>105</b> and the memory device <b>110</b>. In some cases, the write clock signal may be a differential output (e.g., a WCK_t signal and a WCK_c signal) and the signal paths of the WCK channels may be configured accordingly. A WCK channel may include any number of signal paths. The data clock signal WCK may be generated by a data clock, which may include one or more hardware components (e.g., oscillators, crystals, logic gates, transistors, or the like).</p><p id="p-0045" num="0044">In some cases, the other channels <b>192</b> may include one or more error detection code (EDC) channels. The EDC channels may be configured to communicate error detection signals, such as checksums, to improve system reliability. An EDC channel may include any number of signal paths. In some examples, error correction codes (ECCs) may further be utilized to improve system reliability.</p><p id="p-0046" num="0045">The channels <b>115</b> may couple the external memory controller <b>105</b> with the memory device <b>110</b> using a variety of different architectures. Examples of the various architectures may include a bus, a point-to-point connection, a crossbar, a high-density interposer such as a silicon interposer, or channels formed in an organic substrate or some combination thereof. For example, in some cases, the signal paths may at least partially include a high-density interposer, such as a silicon interposer or a glass interposer.</p><p id="p-0047" num="0046">Signals communicated over the channels <b>115</b> may be modulated using a variety of different modulation schemes. In some cases, a binary-symbol (or binary-level) modulation scheme may be used to modulate signals communicated between the external memory controller <b>105</b> and the memory device <b>110</b>. A binary-symbol modulation scheme may be an example of a M-ary modulation scheme where M is equal to two. Each symbol of a binary-symbol modulation scheme may be configured to represent one bit of digital data (e.g., a symbol may represent a logic 1 or a logic 0). Examples of binary-symbol modulation schemes include, but are not limited to, non-return-to-zero (NRZ), unipolar encoding, bipolar encoding, Manchester encoding, pulse amplitude modulation (PAM) having two symbols (e.g., PAM2), and/or others.</p><p id="p-0048" num="0047">In some cases, a multi-symbol (or multi-level) modulation scheme may be used to modulate signals communicated between the external memory controller <b>105</b> and the memory device <b>110</b>. A multi-symbol modulation scheme may be an example of a M-ary modulation scheme where M is greater than or equal to three. Each symbol of a multi-symbol modulation scheme may be configured to represent more than one bit of digital data (e.g., a symbol may represent a logic 00, a logic 01, a logic 10, or a logic 11). Examples of multi-symbol modulation schemes include, but are not limited to, PAM4, PAM8, etc., quadrature amplitude modulation (QAM), quadrature phase shift keying (QPSK), and/or others. A multi-symbol signal or a PAM4 signal may be a signal that is modulated using a modulation scheme that includes at least three levels to encode more than one bit of information. Multi-symbol modulation schemes and symbols may alternatively be referred to as non-binary, multi-bit, or higher-order modulation schemes and symbols.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of a memory die <b>200</b> in accordance with various examples of the present disclosure. The memory die <b>200</b> may be an example of the memory dice <b>160</b> described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some cases, the memory die <b>200</b> may be referred to as an electronic memory apparatus. The memory die <b>200</b> may include one or more memory cells <b>205</b> that are programmable to store different logic states. Each memory cell <b>205</b> may be programmable to store two or more states. For example, the memory cell <b>205</b> may be configured to store one bit of digital logic at a time (e.g., a logic 0 and a logic 1). In some cases, a single memory cell <b>205</b> (e.g., a multi-level memory cell) may be configured to store more than one bit of digit logic at a time (e.g., a logic 00, logic 01, logic 10, or a logic 11).</p><p id="p-0050" num="0049">A memory cell <b>205</b> may store a charge representative of the programmable states in a capacitor. DRAM architectures may include a capacitor that includes a dielectric material to store a charge representative of the programmable state. In some cases, the dielectric material may have various characteristics that enable it to store certain charges with less leakage than other charges.</p><p id="p-0051" num="0050">Operations such as reading and writing may be performed on memory cells <b>205</b> by activating or selecting access lines such as a word line <b>210</b> and/or a digit line <b>215</b>. In some cases, digit lines <b>215</b> may also be referred to as bit lines. References to access lines, word lines and digit lines, or their analogues, are interchangeable without loss of understanding or operation. Activating or selecting a word line <b>210</b> or a digit line <b>215</b> may include applying a voltage to the respective line.</p><p id="p-0052" num="0051">The memory die <b>200</b> may arrange the access lines (e.g., the word lines <b>210</b> and the digit lines <b>215</b>) in a grid-like pattern. Memory cells <b>205</b> may be positioned at intersections of the word lines <b>210</b> and the digit lines <b>215</b>. By biasing a word line <b>210</b> and a digit line <b>215</b> (e.g., applying a voltage to the word line <b>210</b> or the digit line <b>215</b>), a single memory cell <b>205</b> may be accessed at their intersection.</p><p id="p-0053" num="0052">Accessing the memory cells <b>205</b> may be controlled through a row decoder <b>220</b>, a column decoder <b>225</b>. For example, a row decoder <b>220</b> may receive a row address from the local memory controller <b>260</b> and activate a word line <b>210</b> based on the received row address. A column decoder <b>225</b> may receive a column address from the local memory controller <b>260</b> and may activate a digit line <b>215</b> based on the received column address. For example, memory die <b>200</b> may include multiple word lines <b>210</b>, labeled WL_<b>1</b> through WL_M, and multiple digit lines <b>215</b>, labeled DL_<b>1</b> through DL_N, where M and N depend on the size of the memory die <b>200</b>. Thus, by activating a word line <b>210</b> and a digit line <b>215</b>, e.g., WL_<b>1</b> and DL_<b>3</b>, the memory cell <b>205</b> at their intersection may be accessed. The intersection of a word line <b>210</b> and a digit line <b>215</b>, in either a two-dimensional or three-dimensional configuration, may be referred to as an address of a memory cell <b>205</b>.</p><p id="p-0054" num="0053">The memory cell <b>205</b> may include a logic storage component, such as capacitor <b>230</b> and a switching component <b>235</b>. The capacitor <b>230</b> may be an example of a dielectric capacitor or a ferroelectric capacitor. A first node of the capacitor <b>230</b> may be coupled with the switching component <b>235</b> and a second node of the capacitor <b>230</b> may be coupled with a voltage source <b>240</b>. In some cases, the voltage source <b>240</b> is a ground such as Vss. In some cases, the voltage source <b>240</b> may be an example of a plate line coupled with a plate line driver. The switching component <b>235</b> may be an example of a transistor or any other type of switch device that selectively establishes or de-establishes electronic communication between two components.</p><p id="p-0055" num="0054">Selecting or deselecting the memory cell <b>205</b> may be accomplished by activating or deactivating the switching component <b>235</b>. The capacitor <b>230</b> may be in electronic communication with the digit line <b>215</b> using the switching component <b>235</b>. For example, the capacitor <b>230</b> may be isolated from digit line <b>215</b> when the switching component <b>235</b> is deactivated, and the capacitor <b>230</b> may be coupled with digit line <b>215</b> when the switching component <b>235</b> is activated. In some cases, the switching component <b>235</b> is a transistor that is controlled by applying a voltage to a gate of the transistor. When the voltage differential between the transistor gate and transistor source is greater than the voltage threshold of the transistor, the switching component <b>235</b> may be activated or deactivate based on being a p-type transistor or an n-type transistor. The word line <b>210</b> may be in electronic communication with the gate of the switching component <b>235</b> and may activate/deactivate the switching component <b>235</b> based on a voltage being applied to word line <b>210</b></p><p id="p-0056" num="0055">A word line <b>210</b> may be a conductive line in electronic communication with a memory cell <b>205</b> that is used to perform access operations on the memory cell <b>205</b>. In some architectures, the word line <b>210</b> may be in electronic communication with a gate of a switching component <b>235</b> of a memory cell <b>205</b> and may be configured to control the switching component <b>235</b> of the memory cell. In some architectures, the word line <b>210</b> may be in electronic communication with a node of the capacitor of the memory cell <b>205</b> and the memory cell <b>205</b> may not include a switching component.</p><p id="p-0057" num="0056">A digit line <b>215</b> may be a conductive line that connects the memory cell <b>205</b> with a sense component <b>245</b>. In some architectures, the memory cell <b>205</b> may be selectively coupled with the digit line <b>215</b> during portions of an access operation. For example, the word line <b>210</b> and the switching component <b>235</b> of the memory cell <b>205</b> may be configured to couple and/or isolate the capacitor <b>230</b> of the memory cell <b>205</b> and the digit line <b>215</b>. In some architectures, the memory cell <b>205</b> may be in electronic communication (e.g., constant) with the digit line <b>215</b>.</p><p id="p-0058" num="0057">The sense component <b>245</b> may be configured to detect state (e.g., a charge) stored on the capacitor <b>230</b> of the memory cell <b>205</b> and determine a logic state of the memory cell <b>205</b> based on the stored state. A charge stored by a memory cell <b>205</b> may be extremely small, in some cases. As such, the sense component <b>245</b> may include one or more sense amplifiers to amplify the signal output by the memory cell <b>205</b> during a read operation. The sense amplifiers may detect small changes in the charge of a digit line <b>215</b> during a read operation and may amplify a signal to a logic state 0 or a logic state 1 based on the detected charge. Alternatively, the memory cell <b>205</b> may be a multi-level cell (MLC) capable of storing more than binary information (i.e., memory cell <b>205</b> may store three or more types of symbols rather than two). During a read operation, the capacitor <b>230</b> of memory cell <b>205</b> may output a signal (e.g., discharge a charge to its corresponding digit line <b>215</b>. The signal may cause a voltage of the digit line <b>215</b> to change. The sense component <b>245</b> may be configured to compare the signal received from the memory cell <b>205</b> across the digit line <b>215</b> to a reference signal <b>250</b> (e.g., reference voltage). The sense component <b>245</b> may determine the stored state of the memory cell <b>205</b> based on the comparison. For example, in binary-signaling, if digit line <b>215</b> has a higher voltage than the reference signal <b>250</b>, the sense component <b>245</b> may determine that the stored state of memory cell <b>205</b> is a logic 1 and, if the digit line <b>215</b> has a lower voltage than the reference signal <b>250</b>, the sense component <b>245</b> may determine that the stored state of the memory cell <b>205</b> is a logic 0. The sense component <b>245</b> may include various transistors or amplifiers to detect and amplify a difference in the signals. The detected logic state of memory cell <b>205</b> may be output through column decoder <b>225</b> as output <b>255</b>. In some cases, the sense component <b>245</b> may be part of another component (e.g., a column decoder <b>225</b>, row decoder <b>220</b>). In some cases, the sense component <b>245</b> may be in electronic communication with the row decoder <b>220</b> or the column decoder <b>225</b>.</p><p id="p-0059" num="0058">The local memory controller <b>260</b> may control the operation of memory cells <b>205</b> through the various components (e.g., row decoder <b>220</b>, column decoder <b>225</b>, and sense component <b>245</b>). The local memory controller <b>260</b> may be an example of the local memory controller <b>165</b> described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some cases, one or more of the row decoder <b>220</b>, column decoder <b>225</b>, and sense component <b>245</b> may be co-located with the local memory controller <b>260</b>. The local memory controller <b>260</b> may be configured to receive commands and/or data from a controller <b>105</b>, translate the commands and/or data into information that can be used by the memory die <b>200</b>, perform one or more operations on the memory die <b>200</b>, and communicate data from the memory die <b>200</b> to the controller <b>105</b> in response to performing the one or more commands. The local memory controller <b>260</b> may generate row and column address signals to activate the target word line <b>210</b> and the target digit line <b>215</b>. The local memory controller <b>260</b> may also generate and control various voltages or currents used during the operation of memory die <b>200</b>. In general, the amplitude, shape, or duration of an applied voltage or current discussed herein may be adjusted or varied and may be different for the various operations discussed in operating the memory die <b>200</b>.</p><p id="p-0060" num="0059">In some cases, the local memory controller <b>260</b> may be configured to perform a write operation (e.g., a programming operation) on one or more memory cells <b>205</b> of the memory die <b>200</b>. During a write operation, a memory cell <b>205</b> of the memory die <b>200</b> may be programmed to store a logic state. In some cases, certain logic states may exhibit higher rates of leakage than other logic states. In other examples, certain logic states may utilize higher power consumption when being stored than others logic states. In some cases, the local memory controller <b>260</b> may be configured to reduce the occurrence of logic states with large data leakage or high-power consumption which may increase the overall performance of memory die <b>200</b>. The local memory controller <b>260</b> may further be configured to generate and store an indicator that indicates whether the stored logic states may be transformed versions of different logic states.</p><p id="p-0061" num="0060">In some cases, a plurality of memory cells <b>205</b> may be programmed during a single write operation. The local memory controller <b>260</b> may identify a target memory cell <b>205</b> on which to perform the write operation. The local memory controller <b>260</b> may identify a target word line <b>210</b> and a target digit line <b>215</b> in electronic communication with the target memory cell <b>205</b> (e.g., the address of the target memory cell <b>205</b>). The local memory controller <b>260</b> may activate the target word line <b>210</b> and the target digit line <b>215</b> (e.g., applying a voltage to the word line <b>210</b> or digit line <b>215</b>), to access the target memory cell <b>205</b>. The local memory controller <b>260</b> may apply a specific signal (e.g., voltage) to the digit line <b>215</b> during the write operation to store a specific state in the capacitor <b>230</b> of the memory cell <b>205</b>, the specific state may be indicative of a desired logic state.</p><p id="p-0062" num="0061">In some cases, the local memory controller <b>260</b> may be configured to perform a read operation (e.g., a sense operation) on one or more memory cells <b>205</b> of the memory die <b>200</b>. During a read operation, the logic state stored on a memory cell <b>205</b> of the memory die <b>200</b> may be determined. In some cases, a plurality of memory cells <b>205</b> may be sensed during a single read operation. The local memory controller <b>260</b> may identify a target memory cell <b>205</b> on which to perform the read operation. The local memory controller <b>260</b> may identify a target word line <b>210</b> and a target digit line <b>215</b> in electronic communication with the target memory cell <b>205</b> (e.g., the address of the target memory cell <b>205</b>). The local memory controller <b>260</b> may activate the target word line <b>210</b> and the target digit line <b>215</b> (e.g., applying a voltage to the word line <b>210</b> or digit line <b>215</b>), to access the target memory cell <b>205</b>. The target memory cell <b>205</b> may transfer a signal to the sense component <b>245</b> in response to biasing the access lines. The sense component <b>245</b> may amplify the signal. The local memory controller <b>260</b> may fire the sense component <b>245</b> (e.g., latch the sense component) and thereby compare the signal received from the memory cell <b>205</b> to the reference signal <b>250</b>. Based on that comparison, the sense component <b>245</b> may determine a logic state that is stored on the memory cell <b>205</b>.</p><p id="p-0063" num="0062">In some cases, sense component <b>245</b> may further determine a logic state of an indicator associated with the logic state that may be stored on the memory cell <b>205</b>, where the indicator indicates whether the stored logic state may be a transformed version of a different logic state. If the stored logic state may be a transformed version of a different logic state, the local memory controller <b>260</b> may communicate the stored logic state to the controller <b>105</b> using the input/output <b>255</b> as part of the read operation. In this example, the local memory controller <b>260</b> may communicate that the logic state stored on the memory cell <b>205</b> may be a transformed version of a different logic state. Alternatively, the local memory controller <b>260</b> may transform the stored logic state into the different logic state and communicate the different logic state to the controller <b>105</b> using the input/output <b>255</b> as part of the read operation.</p><p id="p-0064" num="0063">In some memory architectures, accessing the memory cell <b>205</b> may degrade or destroy the logic state stored in a memory cell <b>205</b>. For example, a read operation performed in DRAM architectures may partially or completely discharge the capacitor of the target memory cell. The local memory controller <b>260</b> may perform a re-write operation or a refresh operation to return the memory cell to its original logic state. The local memory controller <b>260</b> may re-write the logic state to the target memory cell after a read operation. In some cases, the re-write operation may be considered part of the read operation. Additionally, activating a single access line, such as a word line <b>210</b>, may disturb the state stored in some memory cells in electronic communication with that access line. Thus, a re-write operation or refresh operation may be performed on one or more memory cells that may not have been accessed.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a process flow <b>300</b> that supports data storage based on data polarity in accordance with disclosed herein. In some examples, process flow <b>300</b> may implement aspects of the system <b>100</b> and the memory die <b>200</b>. For example, the host device <b>305</b> may be an example of the host device described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the memory device <b>310</b> may be an example of memory device <b>110</b>. The process flow <b>300</b> illustrates a write operation and a read operation, where the write and read operations may include transforming data based on data polarity at the memory device <b>310</b>.</p><p id="p-0066" num="0065">The host device <b>305</b> may initiate a write operation at the memory device <b>310</b>. The write operation may include the host device <b>305</b> transmitting write command <b>315</b> to the memory device <b>310</b>. Write command <b>315</b> may comprise a first data word that is to be stored in the memory device <b>310</b>. The host device <b>305</b> may identify information to be stored in the memory device <b>310</b> and may generate the first data word based on that identified information.</p><p id="p-0067" num="0066">At <b>320</b>, the memory device <b>310</b> may determine whether the first data word satisfies a storage state criterion. In some instances, the storage state criterion may indicate a characteristic of the memory cells associated with the memory device <b>310</b>. In turn, the characteristic may indicate a symbol type that is associated with poorer performance such as higher data leakage or increase power consumption compared to one or more other symbol types. That is, the storage state criterion may be associated with the memory device <b>310</b> and may be a criterion related to a symbol type that is associated with poorer performance.</p><p id="p-0068" num="0067">The storage state criterion determined at <b>320</b> may indicate a first data retention characteristic indicating a symbol type the memory device <b>310</b> that exhibits more leakage when stored in the memory device <b>310</b> compared to one or more other symbol types. In another example, the storage state criterion may indicate a first power consumption characteristic indicating a symbol type that is configured to be stored in the memory device <b>310</b> that exhibits more power consumption compared to one or more symbol types configured to be stored in the memory device that are not indicated by the first power consumption characteristic.</p><p id="p-0069" num="0068">Additionally or alternatively, the memory device <b>310</b> may also determine a second storage state criterion at <b>320</b>. The second storage state criterion may indicate a symbol type or types that are associated with increased overall performance compared to the symbol type corresponding to the first storage state criterion. In some cases, the memory device <b>310</b> may determine a quantity of symbols of the first data word that are a symbol type associated with the second data retention characteristic of the one or more memory cells of the memory device. If the memory device <b>310</b> may determine that the quantity of symbols of the first data word that are the symbol type associated with the second data retention characteristic satisfies the second data retention characteristic threshold, the memory device <b>310</b> may store the first data word at <b>325</b>. For example, the memory device <b>310</b> may determine that the quantity of symbols of the first data word that are associated with the second data retention characteristic may exceed a threshold number and/or satisfy a storage state threshold for the memory device <b>310</b>. Therefore, if the memory device <b>310</b> determines that the first data word satisfies the second storage state criterion, the memory device <b>310</b> may store the data word included in write command <b>315</b> without performing a transformation.</p><p id="p-0070" num="0069">The memory device <b>310</b>, however, may determine that the quantity of symbols of the first data word that are the symbol type associated with the second data retention characteristic fails to satisfy the second data retention characteristic threshold of the memory device. For example, the quantity of symbols of the first data word that are associated with the second data retention characteristic may be under a threshold number. That is, the first data word may fail to satisfy a storage state threshold of the memory device. In such instances, the memory device <b>310</b> may determine that the first data word satisfies the first storage state criterion as it relates to the symbol types that exhibit detrimental behavior. In this example, the memory device <b>310</b> may generate a second data word and a corresponding indicator at <b>330</b>. The second data word may satisfy the second storage state criterion, where the second data word may be generated by applying a transformation to the first data word based on determining that the first data word satisfies a first storage state criterion. In some cases, the memory device <b>310</b> may determine that the quantity of symbols of the second data word that are the symbol type associated with the second data retention characteristic satisfies the storage state threshold of the memory device <b>310</b>. The memory device <b>310</b> may then determine that the second data word satisfies the second storage state criterion based on determining that the quantity of symbols of the second data word that are the symbol type associated with the second data retention characteristic satisfies the storage state threshold of the memory device <b>310</b>.</p><p id="p-0071" num="0070">At <b>330</b>, the memory device <b>310</b> may optionally modify one or more symbols of the first data word to generate the second data word (in some cases each symbol of the first data word may be modified). The memory device <b>310</b> may determine a quantity of symbols of the second data word that are a symbol type associated with the second data retention characteristic and determine that the second data word satisfies the second storage state criterion based no determining the quantity of symbols of the second data word that are a symbol type associated with the second data retention characteristic. In some cases, the first data word may include two symbol types and the transformation may be an example of a data bit inversion. That is, each &#x2018;0&#x2019; or low value of the first data word may be transformed into a &#x2018;1&#x2019; or high value in the second data word. Similarly, each &#x2018;1&#x2019; or high value of the first data word may be transformed into a &#x2018;0&#x2019; or low&#x2032; value in the second data word. In other examples, the first data word and the second data word may include three or more symbol types. In these examples, each symbol type of the first data word may be mapped to a different symbol type for the second data word.</p><p id="p-0072" num="0071">In some examples, the memory device <b>310</b> also generates an indicator at <b>330</b>. The indicator may indicate that the second data word stored in the memory device <b>310</b> is a transformed version of the first data word. The indicator may be generated based on generating the second data word. In some cases, the indicator may indicate how each symbol type of the first data word is modified as part of the transformation used to generate the second data word stored in the memory device. For example, in the case of the first and second data word each including three or more symbol types, the indicator may indicate a mapping of symbol types used to generate the second data word. In some instances, the indicator may allow the memory device to properly read the data stored within the second data word (e.g., reverse the transformation as part of a read operation). In the case that the memory device <b>310</b> generates a second data word, at <b>335</b>, the memory device <b>310</b> may store the second data word and the corresponding indicator based on determining that the second data word satisfies the second storage state criterion. In some cases, the indicator may be stored in a first portion of the memory device that is different than a second portion of the memory device <b>310</b> that stores the second data word.</p><p id="p-0073" num="0072">The host device <b>305</b> may initiate a read operation at the memory device <b>310</b>. The read operation may occur independently of the write operation occurring at <b>315</b>, <b>320</b>, <b>325</b>, <b>330</b>, <b>335</b>, and <b>340</b>. The read operation may begin with the host device <b>305</b> transmitting a read command <b>340</b> to the memory device <b>310</b>. In some cases, read command <b>340</b> may be associated with a location of the memory device <b>310</b>. The memory device <b>310</b> may determine a data word associated with the location indicated by read command <b>340</b>.</p><p id="p-0074" num="0073">At <b>345</b>, the memory device <b>310</b> may identify that the data word stored at the location is associated with a second data word. That is, the memory device <b>310</b> may identify that the stored data word is a first data word that is a transformed version of a second data word. In some cases, the memory device <b>310</b> identifies that the first data word is associated with the second data word by identifying an indicator stored in the memory device <b>310</b>, which indicates that the first data word may be a transformed version of the second data word.</p><p id="p-0075" num="0074">At <b>350</b>, the memory device <b>310</b> may optionally transform the stored data word. In some cases, the memory device <b>310</b> may transform the symbols of the first data word to generate the second data word based on identifying that first data word is associated with the second data word. That is, the memory device <b>310</b> may modify each symbol of the first data word to generate the second data word. In some cases, the first and second data words may each include three or more symbol types. In these cases, each of the three or more symbol types of the first data word may be mapped to a different symbol type of the second data word. In some cases, the memory device <b>310</b> may apply the transformation based on the indicator. That is, the memory device <b>310</b> may apply the transformation according to a transformation indicated by the indicator. In this example, the indicator may inform the memory device <b>310</b> how each symbol of the second data word was modified as part of a transformation used to generate the first data word (and consequently an inverse transformation to generate the second data word from the first data word). However, in other cases, the memory device <b>310</b> may optionally not transform the stored data word. In these cases, the memory device <b>310</b> may identify that the first data word may not be a transformed version of a second data word. For example, the memory device <b>310</b> may identify that the indicator stored in the memory device <b>310</b> indicates that the first data word is not a transformed version of a second data word. Alternatively, the memory device <b>310</b> may identify whether or not the first data word may be a transformed version of the second data word.</p><p id="p-0076" num="0075">At <b>355</b>, the memory device <b>310</b> may transmit a data word to the host device <b>305</b>. In some cases, if the memory device <b>310</b> transformed the stored data word, the memory device <b>310</b> may transmit the second data word to the host device <b>305</b>. In some other cases, the memory device <b>310</b> may not have identified that the first data word may be a transformed version of a second data word. In this case, the memory device <b>310</b> may transmit the stored first data word. In this case, the host device <b>305</b> may determine that the first data word may be a transformed version of the second data word and transform the first data word to generate the second data word. In other cases, the memory device <b>310</b> may transmit the stored data word based on determining that the first data word may not be a transformed version of a second data word.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates examples of data transformations <b>400</b> that support data storage based on data polarity in accordance with disclosed herein. In some examples, the data transformations <b>400</b> may implement aspects of the system <b>100</b>, the memory die <b>200</b>, as well as process flow <b>300</b>. Data transformations <b>400</b> may depict a transformation <b>410</b> of first data word <b>405</b> into second data word <b>415</b>. Data transformations <b>400</b> may further depict a corresponding indicator <b>420</b>, which may be an example of an indicator as described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIG. <b>4</b></figref> also illustrates the five possible second data words <b>415</b> that may result from transformation <b>410</b> of first data word <b>405</b>. Additionally, data transformations <b>400</b> may include several possible configurations <b>425</b> of indicator <b>420</b>.</p><p id="p-0078" num="0077">In the examples illustrated by <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the first data word <b>405</b> may include eight bits, where each discrete unit of the first data word <b>405</b> may be represented by more than two unique symbol types. For example, a discrete unit of the first data word <b>405</b> may be a low (L) value, a medium (M) value, or a high (H) value. In other cases, however, the first data word <b>405</b> may include any number of bits (e.g., one, two, three, four, five, six, seven, eight, or more). In some cases, each discrete unit may be represented any number of unique symbol types (e.g., four symbol types, five symbol types, or more). As such, the present disclosure is not limited to data words that store a particular value set.</p><p id="p-0079" num="0078">A memory device may be instructed to store the information contained in first data word <b>405</b>. However, the memory device may have specific storage state criterion indicating a characteristic of the memory cells within the memory device. For example, a first storage state criterion may correspond to a first characteristic indicating a type of symbol(s) (e.g., the information stored within each bit) that exhibits poorer performance when stored and/or read by the memory device compared to other types of symbol(s). The performance of a symbol type may be related to data retention (i.e., certain symbol types may exhibit worse data retention characteristics than others due to, for example, leakage), power consumption (i.e., the memory device may consume more power storing and/or reading one or more types of symbol versus another type of symbol), etc. Additionally or alternatively, a second storage state criterion may correspond to a second characteristic of the memory device that indicates a type of symbol(s) that exhibits increased overall performance when stored and/or read by the memory device. For example, the second characteristic may indicate a symbol type that is associated with better data retention or less power consumption.</p><p id="p-0080" num="0079">The memory device may use the storage state criterion to determine whether the data word should be transformed before it is stored in the memory cells of the memory device. Such a determination may be based on the data word satisfying a storage state threshold that is associated with the first and/or second characteristic of the memory device. For example, a first storage state criterion may indicate a storage state threshold that if met, the memory device determines to transform first data word <b>405</b> prior to storing the information contained within first data word <b>405</b>. Additionally or alternatively, there may be a second storage state criterion.</p><p id="p-0081" num="0080">In some cases, the second storage state criterion may indicate a minimum number of symbols of a given symbol type within a data word to be stored that are indicated by the second characteristic as exhibiting increased overall performance compared to other symbol types. For example, a memory device may have a first characteristic indicating that &#x2018;M&#x2019; bits exhibit poorer overall performance and a second characteristic indicating that &#x2018;L&#x2019; bits exhibit increased overall performance. In this example, the first storage state criterion may indicate that a data word to be stored (e.g., first data word <b>405</b>) may be transformed if it contains five or more &#x2018;M&#x2019; bits while the second storage state criterion may indicate that the data word to be stored must contain three or more &#x2018;L&#x2019; bits. In other cases, the second storage state criterion may be the opposite of the first storage state criterion. In this case, the memory device may use a single storage state threshold. That is, if a data word to be stored satisfies the threshold, the data word may be transformed. Alternatively, if the data word to be stored does not satisfy the threshold, the data word may be stored by the memory device. For example, in a memory device where the first storage state criterion indicates that a data word to be stored may be transformed if it contains five or more &#x2018;M&#x2019; bits, the second storage state criterion may indicate that a data word may be stored if it contains less than five &#x2018;M&#x2019; bits.</p><p id="p-0082" num="0081">If first data word <b>405</b> satisfies the first storage state criterion of the memory device, the memory device may determine a transformation <b>410</b> to generate a second data word <b>415</b> that satisfies the second storage state criterion. Five possible transformations of first data word <b>405</b> may be illustrated by the second data words <b>415</b>-<i>a</i>, <b>415</b>-<i>b</i>, <b>415</b>-<i>c</i>, <b>415</b>-<i>d</i>, and <b>415</b>-<i>e</i>. Each of the second data words <b>415</b> may be generated by mapping each symbol type of first data word <b>405</b> to a different symbol type to generate second data word <b>415</b>. In the example above where the first and second storage state criterions indicate independent storage state thresholds, the memory device may determine that first data word <b>405</b> satisfies the first storage state criterion as first data word <b>405</b> contains 5 &#x2018;M&#x2019; bits, which aligns with the storage state threshold of containing five or more &#x2018;M&#x2019; bits. Therefore, the memory device may determine a transformation <b>410</b> which generates second data word <b>415</b>, where second data word <b>415</b> satisfies the second storage state criterion of containing three or more &#x2018;L&#x2019; bits. In this example, memory device may utilize a transformation <b>410</b> that generates second data word <b>415</b>-<i>b</i>. Therefore, second data word <b>415</b>-<i>b </i>may then have one &#x2018;M&#x2019; bit and have five &#x2018;L&#x2019; bits. The second data word <b>415</b>-<i>b </i>may be generated by mapping each &#x2018;L&#x2019; bit of first data word <b>405</b> to an &#x2018;M&#x2019; bit for second data word <b>415</b>-<i>b</i>, each &#x2018;M&#x2019; bit of first data word <b>405</b> to an &#x2018;L&#x2019; bit for second data word <b>415</b>-<i>b</i>, and each &#x2018;H&#x2019; bit of first data word <b>405</b> to an &#x2018;H&#x2019; bit for second data word <b>415</b>-<i>b. </i></p><p id="p-0083" num="0082">However, in the example above where the first and second storage state criterions each indicate the same storage state threshold, the memory device may determine that first data word <b>405</b> satisfies the first storage state criterion as first data word <b>405</b> contains 5 &#x2018;M&#x2019; bits, which aligns with the storage state threshold of containing five or more &#x2018;M&#x2019; bits. Therefore, the memory device may determine a transformation <b>410</b> which generates second data word <b>415</b>, where the second data word <b>415</b> satisfies the second storage state criterion of containing less than five &#x2018;M&#x2019; bits. In this example, memory device may utilize a transformation <b>410</b> that generates second data words <b>415</b>-<i>a</i>, <b>415</b>-<i>b</i>, <b>415</b>-<i>c</i>, or <b>415</b>-<i>d</i>. In each of second data words <b>415</b>-<i>a</i>, <b>415</b>-<i>b</i>, <b>415</b>-<i>c</i>, and <b>415</b>-<i>d</i>, there are one or two &#x2018;M&#x2019; bits, which satisfies the second storage state criterion of less than five &#x2018;M&#x2019; bits.</p><p id="p-0084" num="0083">During the transformation <b>410</b>, the memory device may generate an indicator <b>420</b> corresponding to the transformation <b>410</b> of first data word <b>405</b>. Indicator <b>420</b> may indicate which transformation or mapping scheme used to generate second data word <b>415</b>. For example, the memory device may generate indicator I<sub>2 </sub><b>420</b>-<i>b </i>in the case that the memory device used the transformation <b>410</b> the generate second data word <b>415</b>-<i>b</i>. The memory device may utilize one of configurations <b>425</b> for indicator <b>420</b>. In some examples, indicator <b>420</b> may be configured according to configuration <b>425</b>-<i>a </i>in which indicator <b>420</b> may be a single bit. In this example, indicator <b>420</b> may act to signal to the memory device that the second data word <b>415</b> may be a transformed version of the first data word <b>405</b>. In such cases, the memory device may apply a preconfigured transformation <b>410</b> to the first data word <b>405</b>. In some cases, the memory device may determine, based on knowing that the second data word <b>415</b> may be a transformed version of a first data word <b>405</b>, the transformation <b>410</b> that was used to generate the second data word <b>415</b>.</p><p id="p-0085" num="0084">In another example, indicator <b>420</b> may be configured according to configuration <b>425</b>-<i>b </i>in which indicator <b>420</b> may be two or more bits. In this example, the additional bits may allow the indicator <b>420</b> to indicate the transformation <b>410</b> utilized to generate second data word <b>415</b>. For example, when a discrete unit of a data word may be represented by three or more symbol types, bits B<b>1</b> and B<b>2</b> of the configuration <b>425</b>-<i>b </i>of the indicator <b>420</b> may indicate the mapping scheme of the transformation <b>410</b> used to generate second data word <b>415</b>-<i>b </i>from first data word <b>405</b>. For example, in a three symbol type data word, when the configuration <b>425</b>-<i>b </i>is &#x2018;00&#x2019; that may indicate no transformation, a &#x2018;01&#x2019; may indicate a first type of transformation, and a &#x2018;10&#x2019; or &#x2018;11&#x2019; may indicate a second type of transformation.</p><p id="p-0086" num="0085">In another example, indicator <b>420</b> may be configured according to configuration <b>425</b>-<i>c </i>in which indicator <b>420</b> may be a single symbol that may be one of three or more possible symbol types. The indicator <b>420</b> configured according to the configuration <b>425</b>-<i>c </i>may be a multi-level data unit (e.g., a discrete unit that may be include three or more different symbol types. In this example, the indicator <b>420</b> may indicate that second data word <b>415</b> may be a transformed version of first data word <b>405</b> and may indicate additional information relating to how each symbol of first data word <b>405</b> was modified to generate second data word <b>415</b>. For example, in a three symbol type data word, when the configuration <b>425</b>-<i>c </i>is an &#x2018;L&#x2019; level that may indicate no transformation, a &#x2018;M&#x2019; level may indicate a first type of transformation, and a &#x2018;H&#x2019; level may indicate a second type of transformation.</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example of a process flow <b>500</b> that supports data storage based on data polarity in accordance with disclosed herein. In some examples, process flow <b>500</b> may implement aspects of the system <b>100</b> and the memory die <b>200</b>. The process flow <b>500</b> may include operations performed by a host device <b>505</b> and a memory device <b>510</b>. The host device <b>505</b> may be an example of host device described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the memory device <b>510</b> may be an example of memory device <b>110</b> described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The process flow <b>500</b> illustrates write and read operations which may include transforming data based on data polarity as implemented by the host device <b>505</b>. The process flow <b>500</b> may incorporate portions of the functions of the process flow <b>300</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0088" num="0087">The host device <b>505</b> may initiate a write operation at the memory device <b>510</b>. The write operation may optionally include the host device <b>505</b> transmitting a storage state criterion request to the memory device <b>510</b> at <b>515</b>. The storage state criterion may indicate a characteristic of the memory cells of the memory device <b>510</b> pertaining to the performance of the memory device <b>510</b> when storing different symbol types (e.g., leakage rates associated with the storage states corresponding to different symbol types). In some cases, the memory device <b>510</b> may have a first storage state criterion indicating a symbol type that may be associated with poorer overall performance. In some examples, the symbol type indicated by the first storage state criterion may be associated with more leakage when stored in the memory device <b>510</b> compared to one or more other symbol types. In other examples, the symbol type indicated by the first storage state criterion may be associated with more power consumption when stored in the memory device <b>510</b> compared to one or more other symbol types. Additionally or alternatively, the memory device <b>510</b> may also have a second storage state criterion. The second storage state criterion may indicate a symbol type or types that are associated with increased overall performance when compared to the symbol type corresponding to the first storage state criterion.</p><p id="p-0089" num="0088">Each storage state criterion may indicate a storage state threshold relating to a quantity of the symbol type that may be indicated by the storage state criterion. For example, the first storage state criterion may indicate a first storage state threshold indicating a maximum number of symbols of the symbol type associated with the first storage state criterion. In some cases, the second storage state criterion may indicate a second storage state threshold indicating a minimum number of symbols of the symbol type associated with the second storage state criterion. In other cases, the second storage state criterion may depend on the first storage state threshold. For example, while the first storage state criterion may relate to a data word that exceeds the first storage state threshold, the second storage state criterion may relate to a data word that does not meet the first storage state threshold.</p><p id="p-0090" num="0089">At <b>520</b>, the memory device <b>510</b> may transmit the first storage state criterion and/or the second storage state criterion to the host device <b>505</b>. In some cases, the host device <b>505</b> may transmit the storage state criterion request based on receiving the storage state criterion request from the host device <b>505</b>. In other cases, the memory device <b>510</b> may transmit the storage state criterion to the host device <b>505</b> without receiving the storage state criterion request, such as during an initialization phase of the memory device <b>510</b>. The storage state criterion may indicate the storage state criterion associated with the memory cells of the memory device <b>510</b>. In some cases, the host device <b>505</b> may transmit a storage state criterion request and receive the criterion from the memory device <b>510</b> prior to every write operation. In other cases, the host device <b>505</b> may store information associated with the storage state criterion of the memory device <b>510</b>.</p><p id="p-0091" num="0090">The host device <b>505</b> may determine the first storage state criterion and/or the second storage state criterion of the memory device <b>510</b> without the handshake procedure at <b>515</b> and <b>520</b>. For example, the storage state criterion (and the corresponding characteristic) may be an intrinsic property of the memory device <b>510</b>. In this example, the host device <b>505</b> may determine the storage state criterion based on a model number, manufacturer, etc. In such examples, the host device <b>505</b> may use the identifying information of the memory device <b>510</b> to look-up the storage state criterion using information stored in other memory or cache associated with the host device <b>505</b>. In other examples, the storage state criteria may vary according to situation. For example, the performance of the memory device <b>510</b> when storing and/or reading a symbol type may differ according to process, previous data stored by the memory device <b>510</b>, temperature, etc. In this example, the host device <b>505</b> may adjust the storage state criterion according to some predicted performance of the memory device <b>510</b>.</p><p id="p-0092" num="0091">In some cases, the host device <b>505</b> may determine the first storage state criterion and/or the second storage state criterion of the memory device <b>510</b> through a training procedure. The training procedure may include the host device <b>505</b> sending known data words to the memory device <b>510</b> as part of a write operation. The memory device <b>510</b> may transmit error detection signals to the host device <b>505</b>. The host device <b>505</b> may analyze the power consumption associated with each of the write operations and/or error detection signals received from the memory device <b>510</b>. The host device <b>505</b> may then determine characteristics of the memory device <b>510</b> when storing different symbol types. For example, the host device may identify a symbol type that may be associated with higher data leakage when compared to one or more other symbol types. In another example, the host device <b>505</b> may identify a symbol type that may be associated with higher power consumption during a write operation when compared to one or more other symbol types. The host device <b>505</b> may determine the first storage state criterion based on determining a symbol type associated with characteristics such as higher data leakage and/or power consumption. For example, the host device <b>505</b> may transmit a first set of data words including &#x2018;H&#x2019; symbol types, a second set of data words including &#x2018;M&#x2019; symbol types, and a third set of data words including &#x2018;L&#x2019; symbol types. The host device <b>505</b> may determine which set of data words (and corresponding symbol type) may be associated with a higher error rate (i.e., based on receiving error detection signals from the memory device <b>510</b>) when compared to the other sets of data words. The host device <b>505</b> may determine a first and/or second storage state criterion based on the characteristics of the memory device <b>510</b> when storing each of the symbol types.</p><p id="p-0093" num="0092">At <b>525</b>, the host device <b>505</b> may identify information to be stored in the memory device <b>510</b> and may generate the first data word based on that identified information. The host device <b>505</b> may identify that the first data word satisfies the first storage state criterion. That is, the host device <b>505</b> may determine that the first data word satisfies the storage state threshold indicated by the first storage state criterion.</p><p id="p-0094" num="0093">At <b>530</b>, the host device <b>505</b> may generate a second data word that satisfies a second storage state criterion. The host device <b>505</b> may generate the second data word by applying a transformation to the first data word based on determining that the first data word satisfies the first storage state criterion. In some cases, the host device <b>505</b> may modify each symbol of the first data word to generate the second data word. In some cases, each data word may include two symbol types and the transformation may be an example of a data bit inversion (i.e., each &#x2018;0&#x2019; value becomes a &#x2018;1&#x2019; and vice versa). In other cases, the first data word may include three or more symbol types. In these examples, each symbol type of the first data word may be mapped to a different symbol type for the second data word.</p><p id="p-0095" num="0094">At <b>535</b>, the host device <b>505</b> may send the second data word to the memory device <b>510</b>. At <b>540</b>, the memory device <b>510</b> may store the second data word received at <b>535</b> from the host device <b>505</b>.</p><p id="p-0096" num="0095">In some cases, the host device <b>505</b> may initiate a read operation at the memory device <b>510</b>. The read operation may occur independently of the write operation occurring at <b>515</b>, <b>520</b>, <b>525</b>, <b>530</b>, <b>535</b>, and <b>540</b>. The read operation may begin with the host device <b>505</b> transmitting a read command <b>545</b> to the memory device <b>510</b>. In some cases, the read command <b>545</b> may be associated with a location of the memory device <b>510</b>. The memory device <b>510</b> may determine a stored data word associated with the location indicated by the read command <b>545</b>. In some cases, the stored data word may be a first data word that may be a transformed version of a second data word. In this example, the read command may optionally include a transformation indicator commanding the memory device <b>510</b> to transform the first data word into the second data word.</p><p id="p-0097" num="0096">At <b>550</b>, the memory device <b>510</b> may optionally transform the stored data word to generate the second data word. In some cases, the memory device <b>510</b> may transform the stored data word if the memory device <b>510</b> receives a transformation indicator from the host device <b>505</b> at <b>545</b> within the read command.</p><p id="p-0098" num="0097">At <b>555</b>, the memory device <b>510</b> may transmit a data word to the host device <b>505</b>. In the case that the read command <b>545</b> included a transformation indicator, the data word transmitted at <b>555</b> may be the second data word. In the case that the read command <b>545</b> did not include a transformation indicator, the data word transmitted at <b>555</b> may be the stored data word. In this case, at <b>560</b>, the host device <b>505</b> may transform the stored data word received at <b>555</b> to generate the second data word.</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example of a block diagram of memory array <b>600</b> that supports data storage based on data polarity in accordance with disclosed herein. In some examples, block diagram of memory array <b>600</b> may implement aspects of the system <b>100</b> and the memory die <b>200</b>. For example, memory array <b>600</b> may be an example of aspects of memory arrays <b>170</b>. Further, memory array <b>600</b> may be configured to perform the processes described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>5</b></figref> as well as the example data transformations described with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0100" num="0099">Memory array <b>600</b> may include partitions <b>605</b>, <b>610</b>, and <b>615</b> which may store data words, indicators, and error correction codes (ECCs) respectively. Each partition may include one or more memory cells of memory array <b>600</b>.</p><p id="p-0101" num="0100">Partition <b>605</b> may store one or more data words, which may be examples of the first and second data words as described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b>, <b>4</b>, and <b>5</b></figref>. In some cases, partition <b>605</b> may store data words that are not transformed versions of a different data word. However, in other cases, partition <b>605</b> may store data words that are transformed versions of different data words. In some instances, each data word stored in partition <b>605</b> may satisfy a second storage state criterion indicating a characteristic of memory array <b>600</b> which causes a certain symbol type or types to exhibit less detrimental behavior when read or stored than a different symbol type. That is, each data word stored within partition <b>605</b> may comprise at least a certain number of symbols (i.e., a quantity of symbols that is indicated by a storage state threshold) that are a symbol type that may exhibit less detrimental behavior than other symbols. Thus, partition <b>605</b> may store data words to reduce the occurrence of certain symbols associated with more detrimental behavior (e.g., poor data retention or higher power consumption).</p><p id="p-0102" num="0101">Partition <b>610</b> may store indicators as described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref>. Each stored indicator may correspond to a stored data word. The indicators may indicate that a data word associated with the indicator may be a transformed version of a different data word. The stored data word may have been transformed prior to being stored based on the storage state criterion indicating a data retention characteristic or power consumption characteristic of the memory cells of memory array <b>600</b>. The indicators may further indicate how each symbol type of each stored data word may have been modified as part of the transformation used to generate the first data word stored in partition <b>605</b> of memory array <b>600</b>. Memory array <b>600</b> may be configured to transform the stored data word into the different data word indicated by the indicators.</p><p id="p-0103" num="0102">Memory array <b>600</b> may further comprise a third partition <b>615</b> for storing ECC information associated with each data word stored in partition <b>605</b>. The ECC may allow memory array <b>600</b> to detect errors within a data word or words during a read operation. In this example, memory array <b>600</b> may store both an ECC and an indicator for each data word stored by memory array <b>600</b>. For example, a data word that is to be stored which does not contain any symbols of the type that are associated with more detrimental behavior may be stored without being transformed. In this example, memory array <b>600</b> may store the original data word in partition <b>605</b>, an indicator indicating that the stored data word may not be a transformed version of another data word in partition <b>610</b>, and an ECC relating to the data word in partition <b>615</b>. In another example, the data word that is to be stored may contain a quantity of symbols of the type that are more detrimental than other symbol types. In this example, memory array <b>600</b> may transform the original data word to generate a second data word. In this example, memory array <b>600</b> may store the second data word in partition <b>605</b>, an indicator indicating that the stored data word may be a transformed version of another data word in partition <b>610</b>, and an ECC relating to the second data word in partition <b>615</b>.</p><p id="p-0104" num="0103">In some cases, each of partitions <b>605</b>, <b>610</b>, and <b>615</b> may be non-overlapping portions of memory within memory array <b>600</b>. In other cases, partitions <b>605</b>, <b>610</b>, and <b>615</b> may overlap partially or completely. For example, partition <b>610</b> storing indicators may utilize overlapping memory cells of memory array <b>600</b> as partition <b>615</b> for storing ECCs.</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an example of a block diagram <b>700</b> of a memory device <b>705</b> that supports data storage based on data polarity in accordance with disclosed herein. The memory device may be an example of aspects of the memory device <b>110</b>, <b>310</b>, <b>510</b>, and memory die <b>200</b>. The memory device <b>705</b> may include receiving component <b>710</b>, storage state criterion manager <b>715</b>, data word transformer <b>720</b>, storing component <b>725</b>, indicator component <b>730</b>, data retention characteristic manager <b>735</b>, and transmitting component <b>740</b>. Each of these components may communicate, directly or indirectly, with one another (e.g., via one or more buses) and may be implemented by a device memory controller or a local memory controller.</p><p id="p-0106" num="0105">In some cases, such as during a write or program operation, receiving component <b>710</b> may receive, from a host device, a first data word to be stored in memory device <b>705</b>. In some cases, receiving component <b>710</b> may receive a third data word from the host device to be stored in memory device <b>705</b>. In some instances, such as during a read operation, receiving component <b>710</b> may receive, from a host device, a read command associated with a location of memory device <b>705</b>.</p><p id="p-0107" num="0106">Storage state criterion manager <b>715</b> may determine that the first data word satisfies a first storage state criterion of the memory device, the first storage state criterion indicating a first data retention characteristic of one or more memory cells of memory device <b>705</b>. In other cases, storage state criterion manager <b>715</b> may determine that a second data word satisfies a second storage state criterion based on determining that the quantity of symbols of the second data word that are the symbol type associated with the second data retention characteristic satisfies the storage state threshold of memory device <b>705</b>, where storing the second data word in memory device <b>705</b> may be based on determining that the second data word satisfies the second storage state criterion. In some instances, storage state criterion manager <b>715</b> may determine that the third data word satisfies the second storage state criterion of memory device <b>705</b>.</p><p id="p-0108" num="0107">Data word transformer <b>720</b> may generate a second data word that satisfies a second storage state criterion by applying a transformation to the first data word based on determining that the first data word satisfies the first storage state criterion, the second storage state criterion indicating a second data retention characteristic of the one or more memory cells of memory device <b>705</b>. In some cases, data word transformer <b>720</b> may generate the second data word by modifying each symbol of the first data word to generate the second data word, the first data word and the second data word each including three or more symbol types, where each symbol type of the first data word may be mapped to a different symbol type of the second data word.</p><p id="p-0109" num="0108">Data word transformer <b>720</b> may apply a transformation to symbols of the first data word stored in memory device <b>705</b> to generate the second data word based on identifying that the first data word stored in memory device <b>705</b> may be associated with the second data word. In some cases, data word transformer <b>720</b> may modify each symbol of the first data word to generate the second data word, the first data word and the second data word each including three or more symbol types, where each symbol type of the first data word may be mapped to a different symbol type of the second data word.</p><p id="p-0110" num="0109">Storing component <b>725</b> may store the second data word in memory device <b>705</b>. In some cases, storing component <b>725</b> may store an indicator in memory device <b>705</b>. In some examples, the indicator may be stored in a first portion of memory device <b>705</b> that may be different than a second portion of memory device <b>705</b> that stores the second data word. In some instances, storing component <b>725</b> may store the third data word in memory device <b>705</b>. In some cases, such as during a read operation, storing component <b>725</b> may identify that a first data word stored at the location indicated by a read command may be associated with a second data word.</p><p id="p-0111" num="0110">Indicator component <b>730</b> may generate an indicator that the second data word stored in memory device <b>705</b> may be a transformed version of the first data word based on generating the second data word. In some cases, the indicator may indicate how each symbol type of the first data word may be modified as part of the transformation used to generate the second data word stored in memory device <b>705</b>. In some cases, such as during a read operation, indicator component <b>730</b> may identify an indicator stored in memory device <b>705</b> that indicates that the first data word may be a transformed version of the second data word, where applying the transformation may be based on the indicator. In some instances, the indicator may indicate how each symbol type of the first data word may be modified as part of the transformation used to generate the first data word, where applying the transformation may be based on the transformation indicated in the indicator.</p><p id="p-0112" num="0111">Data retention characteristic manager <b>735</b> may determine a quantity of symbols of the first data word that are a symbol type associated with the second data retention characteristic of the one or more memory cells of memory device <b>705</b>. In some cases, data retention characteristic manager <b>735</b> may determine that the quantity of symbols of the first data word that are the symbol type associated with the second data retention characteristic fails to satisfy a storage state threshold of memory device <b>705</b>. In some examples, data retention characteristic manager <b>735</b> may determine a quantity of symbols of the second data word that are a symbol type associated with the second data retention characteristic of memory device <b>705</b> for storing in the one or more memory cells. In some instances, data retention characteristic manager <b>735</b> may determine that the quantity of symbols of the second data word that are the symbol type associated with the second data retention characteristic satisfies a storage state threshold of memory device <b>705</b>. In some examples, the second data retention characteristic may indicate a symbol type that may be configured to be stored in memory device <b>705</b> that exhibits less leakage compared to one or more symbol types configured to be stored in memory device <b>705</b> that are indicated by the first data retention characteristic.</p><p id="p-0113" num="0112">Transmitting component <b>740</b> may, during a read operation for example, transmit a second data word to the host device.</p><p id="p-0114" num="0113">An apparatus for data storage based on data polarity is described. The apparatus may include means for receiving, from a host device, a first data word to be stored in a memory device, determining, by the memory device, that the first data word may satisfy a first storage state criterion of the memory device. In some cases, the first storage state criterion may indicate a first data retention characteristic of one or more memory cells of the memory device. The apparatus may include means for generating a second data word that satisfies a second storage state criterion by applying a transformation to the first data word based on determining that the first data word satisfies the first storage state criterion. In some examples, the second storage state criterion may indicate a second data retention characteristic of the one or more memory cells of the memory device. In some cases, the apparatus may include means for storing the second data word in the memory device.</p><p id="p-0115" num="0114">Some examples of the method and apparatus described herein may further include operations or means for generating an indicator that the second data word stored in the memory device may be a transformed version of the first data word based on generating the second data word and storing the indicator in the memory device.</p><p id="p-0116" num="0115">In some examples of the method and apparatus described herein, the indicator may indicate how each symbol type of the first data word may be modified as part of the transformation used to generate the second data word stored in the memory device.</p><p id="p-0117" num="0116">In some examples of the method and apparatus described herein, the indicator may be stored in a first portion of the memory device that may be different than a second portion of the memory device that stores the second data word.</p><p id="p-0118" num="0117">Some examples of the method and apparatus described herein may further include operations or means for modifying each symbol of the first data word to generate the second data word. In some cases, the first data word and the second data word may each include three or more symbol types, where each symbol type of the first data word may be mapped to a different symbol type of the second data word.</p><p id="p-0119" num="0118">Some examples of the method and apparatus described herein may further include operations or means for determining a quantity of symbols of the first data word that may be a symbol type associated with the second data retention characteristic of the one or more memory cells of the memory device. Some examples of the method and apparatus described herein may further include operations or means for determining that the quantity of symbols of the first data word that may be the symbol type associated with the second data retention characteristic may fail to satisfy a storage state threshold of the memory device.</p><p id="p-0120" num="0119">Some examples of the method and apparatus described herein may further include operations or means for determining a quantity of symbols of the second data word that may be a symbol type associated with the second data retention characteristic of the memory device for storing in the one or more memory cells and determining that the quantity of symbols of the second data word that may be the symbol type associated with the second data retention characteristic may satisfy a storage state threshold of the memory device. In some cases, the method and apparatus described herein may further include operations or means for determining that the second data word may satisfy the second storage state criterion based on determining that the quantity of symbols of the second data word that may be the symbol type associated with the second data retention characteristic may satisfy the storage state threshold of the memory device. In some examples, storing the second data word in the memory device may be based on determining that the second data word satisfies the second storage state criterion.</p><p id="p-0121" num="0120">In some examples of the method and apparatus described herein, the second data retention characteristic indicates a symbol type that may be configured to be stored in the memory device that exhibits less leakage compared to one or more symbol types configured to be stored in the memory device that may be indicated by the first data retention characteristic.</p><p id="p-0122" num="0121">Some examples of the method and apparatus described herein may further include operations or means for receiving a third data word from the host device to be stored in the memory device, determining, by the memory device, that the third data word satisfies the second storage state criterion of the memory device, and storing the third data word in the memory device.</p><p id="p-0123" num="0122">An apparatus for data storage based on data polarity is described. The apparatus may include means for receiving, from a host device, a read command associated with a location of a memory device, and identifying, by the memory device, that a first data word stored at the location may be associated with a second data word. The apparatus may further include means for applying a transformation to symbols of the first data word stored in the memory device to generate the second data word based on identifying that the first data word stored in the memory device may be associated with the second data word and sending the second data word to the host device.</p><p id="p-0124" num="0123">Some examples of the method and apparatus described herein may further include operations or means for identifying an indicator stored in the memory device that indicates that the first data word may be a transformed version of the second data word, where applying the transformation may be based on the indicator.</p><p id="p-0125" num="0124">In some examples of the method and apparatus described herein, identifying that the first data word stored in the memory device may be associated with the second data word further may include operations, features, means, or instructions for identifying an indicator stored in the memory device that indicates how each symbol type of the first data word may be modified as part of the transformation used to generate the first data word, where applying the transformation may be based on the transformation indicated in the indicator.</p><p id="p-0126" num="0125">In some examples of the method and apparatus described herein, applying the transformation to the first data word stored in the memory device to generate the second data word further may include operations, features, means, or instructions for modifying each symbol of the first data word to generate the second data word, the first data word and the second data word each including three or more symbol types. In some cases, each symbol type of the first data word may be mapped to a different symbol type of the second data word.</p><p id="p-0127" num="0126">An apparatus for data storage based on data polarity is described. The apparatus may include means for identifying, by a host device, that a first data word to be stored in a memory device may satisfy a first storage state criterion of the memory device. In some examples, the first storage state criterion may indicate a first data retention characteristic of one or more memory cells of the memory device. The apparatus may include means for generating a second data word that may satisfy a second storage state criterion by applying a transformation to the first data word based on determining that the first data word may satisfy the first storage state criterion. In some cases, a second data retention characteristic may indicate a symbol type that may be configured to be stored in the one or more memory cells that exhibits less leakage compared to one or more symbol types configured to be stored in the one or more memory cells that are indicated by the first data retention characteristic. The apparatus may further include means for sending the second data word to the memory device.</p><p id="p-0128" num="0127">Some examples of the method and apparatus described herein may further include operations or means for receiving, from the memory device, a message indicating the first storage state criterion associated with the one or more memory cells.</p><p id="p-0129" num="0128">Some examples of the method and apparatus described herein may further include operations or means for sending, to the memory device, a request for the first storage state criterion of the one or more memory cells, where receiving the message may be based on sending the request.</p><p id="p-0130" num="0129">In some examples of the method and apparatus described herein, generating the second data word by applying the transformation to the first data word further may include operations, features, means, or instructions for modifying each symbol of the first data word to generate the second data word, the first data word and the second data word each including three or more symbol types, where each symbol type of the first data word may be mapped to a different symbol type of the second data word.</p><p id="p-0131" num="0130">Some examples of the method and apparatus described herein may further include operations or means for sending, to the memory device, a read command for a stored data word, the read command including a transformation indicator commanding the memory device to transform the stored data word and receiving, from the memory device, a transformed data word.</p><p id="p-0132" num="0131">Some examples of the method and apparatus described herein may further include operations or means for sending, to the memory device, a read command for the second data word, receiving, from the memory device, the second data word, and transforming the second data word to generate the first data word.</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a flowchart illustrating a method <b>800</b> that supports data storage based on data polarity in accordance with disclosed herein. The operations of method <b>800</b> may be implemented by a memory device or its components as described herein. For example, the operations of method <b>800</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>. In some examples, a memory device may execute a set of instructions to control the functional elements of the memory device to perform the functions described below. Additionally or alternatively, a memory device may perform aspects of the functions described below using special-purpose hardware.</p><p id="p-0134" num="0133">At <b>805</b>, the memory device may receive, from a host device, a first data word to be stored in a memory device. The operations of <b>805</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>805</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0135" num="0134">At <b>810</b>, the memory device may determine that the first data word satisfies a first storage state criterion of the memory device, the first storage state criterion indicating a first data retention characteristic of one or more memory cells of the memory device. The operations of <b>810</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>810</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0136" num="0135">At <b>815</b>, the memory device may generate a second data word that satisfies a second storage state criterion by applying a transformation to the first data word based on determining that the first data word satisfies the first storage state criterion, the second storage state criterion indicating a second data retention characteristic of the one or more memory cells of the memory device. The operations of <b>815</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>815</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0137" num="0136">At <b>820</b>, the memory device may store the second data word in the memory device. The operations of <b>820</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>820</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a flowchart illustrating a method <b>900</b> that supports data storage based on data polarity in accordance with disclosed herein. The operations of method <b>900</b> may be implemented by a memory device or its components as described herein. For example, the operations of method <b>900</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>. In some examples, a memory device may execute a set of instructions to control the functional elements of the memory device to perform the functions described below. Additionally or alternatively, a memory device may perform aspects of the functions described below using special-purpose hardware.</p><p id="p-0139" num="0138">At <b>905</b>, the memory device may receive, from a host device, a first data word to be stored in a memory device. The operations of <b>905</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>905</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0140" num="0139">At <b>910</b>, the memory device may determine, by the memory device, that the first data word satisfies a first storage state criterion of the memory device, the first storage state criterion indicating a first data retention characteristic of one or more memory cells of the memory device. The operations of <b>910</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>910</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0141" num="0140">At <b>915</b>, the memory device may modify each symbol of the first data word to generate the second data word, the first data word and the second data word each including three or more symbol types, where each symbol type of the first data word may be mapped to a different symbol type of the second data word. The operations of <b>915</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>915</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0142" num="0141">At <b>920</b>, the memory device may generate a second data word that satisfies a second storage state criterion by applying a transformation to the first data word based on determining that the first data word satisfies the first storage state criterion, the second storage state criterion indicating a second data retention characteristic of the one or more memory cells of the memory device. The operations of <b>920</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>920</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0143" num="0142">At <b>925</b>, the memory device may generate an indicator that the second data word stored in the memory device may be a transformed version of the first data word based on generating the second data word. The operations of <b>925</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>925</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0144" num="0143">At <b>930</b>, the memory device may store the second data word in the memory device. The operations of <b>930</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>930</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0145" num="0144">At <b>935</b>, the memory device may store the indicator in the memory device. The operations of <b>935</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>935</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a flowchart illustrating a method <b>1000</b> that supports data storage based on data polarity in accordance with disclosed herein. The operations of method <b>1000</b> may be implemented by a memory device or its components as described herein. For example, the operations of method <b>1000</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>. In some examples, a memory device may execute a set of instructions to control the functional elements of the memory device to perform the functions described below. Additionally or alternatively, a memory device may perform aspects of the functions described below using special-purpose hardware.</p><p id="p-0147" num="0146">At <b>1005</b>, the memory device may receive, from a host device, a read command associated with a location of a memory device. The operations of <b>1005</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>1005</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0148" num="0147">At <b>1010</b>, the memory device may identify, by the memory device, that a first data word stored at the location may be associated with a second data word. The operations of <b>1010</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>1010</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0149" num="0148">At <b>1015</b>, the memory device may apply a transformation to symbols of the first data word stored in the memory device to generate the second data word based on identifying that the first data word stored in the memory device may be associated with the second data word. The operations of <b>1015</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>1015</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0150" num="0149">At <b>1020</b>, the memory device may send the second data word to the host device. The operations of <b>1020</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>1020</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b>, <b>6</b>, and <b>7</b></figref>.</p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a flowchart illustrating a method <b>1100</b> that supports data storage based on data polarity in accordance with disclosed herein. The operations of method <b>1100</b> may be implemented by a host device or its components as described herein. For example, the operations of method <b>1100</b> may be performed by a host device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>5</b>-<b>7</b></figref>. In some examples, a host device may execute a set of instructions to control the functional elements of the host device to perform the functions described below. Additionally or alternatively, a host device may perform aspects of the functions described below using special-purpose hardware.</p><p id="p-0152" num="0151">At <b>1105</b>, the host device may identify, by a host device, that a first data word to be stored in a memory device satisfies a first storage state criterion of the memory device, the first storage state criterion indicating a first data retention characteristic of one or more memory cells of the memory device. The operations of <b>1105</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>1105</b> may be performed by a host device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>5</b>-<b>7</b></figref>.</p><p id="p-0153" num="0152">At <b>1110</b>, the host device may generate a second data word that satisfies a second storage state criterion by applying a transformation to the first data word based on determining that the first data word satisfies the first storage state criterion, a second data retention characteristic indicating a symbol type that may be configured to be stored in the one or more memory cells that exhibits less leakage compared to one or more symbol types configured to be stored in the one or more memory cells that are indicated by the first data retention characteristic. The operations of <b>1110</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>1110</b> may be performed by a host device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>5</b>-<b>7</b></figref>.</p><p id="p-0154" num="0153">At <b>1115</b>, the host device may send the second data word to the memory device. The operations of <b>1115</b> may be performed according to the methods described herein. In some examples, aspects of the operations of <b>1115</b> may be performed by a host device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>5</b>-<b>7</b></figref>.</p><p id="p-0155" num="0154">It should be noted that the methods described above describe possible implementations, and that the operations and the steps may be rearranged or otherwise modified and that other implementations are possible. Further, aspects from two or more of the methods may be combined.</p><p id="p-0156" num="0155">The terms &#x201c;electronic communication,&#x201d; &#x201c;conductive contact,&#x201d; &#x201c;connected,&#x201d; and &#x201c;coupled&#x201d; may refer to a relationship between components that supports the flow of signals between the components. Components are considered in electronic communication with (or in conductive contact with or connected with or coupled with) one another if there is any conductive path between the components that can, at any time, support the flow of signals between the components. At any given time, the conductive path between components that are in electronic communication with each other (or in conductive contact with or connected with or coupled with) may be an open circuit or a closed circuit based on the operation of the device that includes the connected components. The conductive path between connected components may be a direct conductive path between the components or the conductive path between connected components may be an indirect conductive path that may include intermediate components, such as switches, transistors, or other components. In some cases, the flow of signals between the connected components may be interrupted for a time, for example, using one or more intermediate components such as switches or transistors.</p><p id="p-0157" num="0156">The term &#x201c;coupling&#x201d; refers to condition of moving from an open-circuit relationship between components in which signals are not presently capable of being communicated between the components over a conductive path to a closed-circuit relationship between components in which signals are capable of being communicated between components over the conductive path. When a component, such as a controller, couples other components together, the component initiates a change that allows signals to flow between the other components over a conductive path that previously did not permit signals to flow.</p><p id="p-0158" num="0157">The term &#x201c;isolated&#x201d; refers to a relationship between components in which signals are not presently capable of flowing between the components. Components are isolated from each other if there is an open circuit between them. For example, two components separated by a switch that is positioned between the components are isolated from each other when the switch is open. When a controller isolates two components, the controller affects a change that prevents signals from flowing between the components using a conductive path that previously permitted signals to flow.</p><p id="p-0159" num="0158">A switching component or a transistor discussed herein may represent a field-effect transistor (FET) and comprise a three terminal device including a source, drain, and gate. The terminals may be connected to other electronic elements through conductive materials, e.g., metals. The source and drain may be conductive and may comprise a heavily-doped, e.g., degenerate, semiconductor region. The source and drain may be separated by a lightly-doped semiconductor region or channel. If the channel is n-type (i.e., majority carriers are signals), then the FET may be referred to as a n-type FET. If the channel is p-type (i.e., majority carriers are holes), then the FET may be referred to as a p-type FET. The channel may be capped by an insulating gate oxide. The channel conductivity may be controlled by applying a voltage to the gate. For example, applying a positive voltage or negative voltage to an n-type FET or a p-type FET, respectively, may result in the channel becoming conductive. A transistor may be &#x201c;on&#x201d; or &#x201c;activated&#x201d; when a voltage greater than or equal to the transistor's threshold voltage is applied to the transistor gate. The transistor may be &#x201c;off&#x201d; or &#x201c;deactivated&#x201d; when a voltage less than the transistor's threshold voltage is applied to the transistor gate.</p><p id="p-0160" num="0159">The description set forth herein, in connection with the appended drawings, describes example configurations and does not represent all the examples that may be implemented or that are within the scope of the claims. The term &#x201c;exemplary&#x201d; used herein means &#x201c;serving as an example, instance, or illustration,&#x201d; and not &#x201c;preferred&#x201d; or &#x201c;advantageous over other examples.&#x201d; The detailed description includes specific details to providing an understanding of the described techniques. These techniques, however, may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form to avoid obscuring the concepts of the described examples.</p><p id="p-0161" num="0160">In the appended figures, similar components or features may have the same reference label. Further, various components of the same type may be distinguished by following the reference label by a dash and a second label that distinguishes among the similar components. If just the first reference label is used in the specification, the description is applicable to any one of the similar components having the same first reference label irrespective of the second reference label.</p><p id="p-0162" num="0161">Information and signals described herein may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, or optical fields or particles, or any combination thereof.</p><p id="p-0163" num="0162">The various illustrative blocks and modules described in connection with the disclosure herein may be implemented or performed with a general-purpose processor, a DSP, an ASIC, an FPGA or other programmable logic device, discrete gate or transistor logic, or discrete hardware components, or any combination thereof designed to perform the functions described herein. A general-purpose processor may be a microprocessor, but in the alternative, the processor may be any processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices (e.g., a combination of a DSP and a microprocessor, multiple microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration).</p><p id="p-0164" num="0163">The functions described herein may be implemented in hardware, software executed by a processor, or firmware, or any combination thereof. If implemented in software executed by a processor, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. Other examples and implementations are within the scope of the disclosure and appended claims. For example, due to the nature of software, functions described above can be implemented using software executed by a processor, hardware, firmware, hardwiring, or combinations of any of these. Features implementing functions may also be physically located at various positions, including being distributed such that portions of functions are implemented at different physical locations. Also, as used herein, including in the claims, &#x201c;or&#x201d; as used in a list of items (for example, a list of items prefaced by a phrase such as &#x201c;at least one of&#x201d; or &#x201c;one or more of&#x201d;) indicates an inclusive list such that, for example, a list of at least one of A, B, or C means A or B or C or AB or AC or BC or ABC (i.e., A and B and C). Also, as used herein, the phrase &#x201c;based on&#x201d; shall not be construed as a reference to a closed set of conditions. For example, an exemplary step that is described as &#x201c;based on condition A&#x201d; may be based on both a condition A and a condition B without departing from the scope of the present disclosure. In other words, as used herein, the phrase &#x201c;based on&#x201d; shall be construed in the same manner as the phrase &#x201c;based at least in part on.&#x201d;</p><p id="p-0165" num="0164">The description herein is provided to enable a person skilled in the art to make or use the disclosure. Various modifications to the disclosure will be apparent to those skilled in the art, and the generic principles defined herein may be applied to other variations without departing from the scope of the disclosure. Thus, the disclosure is not limited to the examples and designs described herein, but is to be accorded the broadest scope consistent with the principles and novel features disclosed herein.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. (canceled)</claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. A method, comprising:<claim-text>identifying one or more storage state criteria associated with a memory device;</claim-text><claim-text>generating a transformed data word from a first data word that comprises information to be stored in the memory device, wherein the transformed data word is generated based at least in part on the first data word satisfying a first storage state criterion of the one or more storage state criteria; and</claim-text><claim-text>transmitting a first signal indicating the transformed data word to the memory device.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>receiving, from the memory device, a second signal indicating the one or more storage state criteria, wherein identifying the one or more storage state criteria is based at least in part on receiving the second signal.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:<claim-text>transmitting a third signal indicating a storage state criterion request to the memory device, wherein the second signal is received in response to the storage state criterion request.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>performing one or more training procedures with the memory device, the one or more training procedures being performed as part of respective write operations with the memory device; and</claim-text><claim-text>receiving, error detection signals from the memory device as part of the one or more training procedures, wherein the one or more storage state criteria are identified based at least in part on the respective write operations or the error detection signals, or both.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:<claim-text>identifying one or more symbol types that are associated with a threshold power consumption based at least in part on the respective write operations, wherein the one or more storage state criteria are identified based at least in part on the one or more symbol types.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:<claim-text>identifying one or more symbol types that are associated with a threshold quantity of data leakage based at least in part on the error detection signals, wherein the one or more storage state criteria are identified based at least in part on the one or more symbol types.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>identifying device information associated with the memory device, the device information comprising a model number, manufacturer information, or both, wherein the one or more storage state criteria are identified based at least in part on the device information.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>estimating a performance of the memory device based at least in part on one or more processes, data previously stored by the memory device, or both; and</claim-text><claim-text>modifying the first storage state criterion to a second storage state criterion different from the first storage state criterion based at least in part on the estimated performance of the memory device.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>applying a transformation to the first data word based at least in part on the first data word satisfying the first storage state criterion, wherein the transformation modifies one or more symbols of the first data word, and wherein generating the transformed data word is based at least in part on applying the transformation to the first data word.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein each storage state criterion of the one or more storage state criteria indicates a storage state threshold associated with a symbol type.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A method, comprising:<claim-text>receiving, at a memory device, a first signal indicating a read command;</claim-text><claim-text>transforming a data word that is stored in the memory device, the data word comprising a first data word that is a transformed version of a second data word, wherein transforming the data word is based at least in part on receiving the read command; and</claim-text><claim-text>transmitting, to a host device, a second signal indicating the transformed data word in response to the read command.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the read command comprises an indicator indicating that the data word is the transformed version of the second data word, and wherein transforming the data word is based at least in part on the indicator.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the indicator signals how each symbol of the transformed version of the second data word is modified to generate the first data word.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the indicator signals a type of transformation that has been applied to the second data word to generate the first data word.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the transformed data word comprises the second data word.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. An apparatus, comprising:<claim-text>a memory array; and</claim-text><claim-text>a controller coupled with the memory array and configured to:<claim-text>receive a signal indicating a read command for a first data word stored in the memory array;</claim-text><claim-text>apply a first transformation to one or more symbols of the first data word to generate a second data word based at least in part on an indicator indicating that the first data word is a transformed version of the second data word; and</claim-text><claim-text>transmit a second signal indicating the second data word in response to the read command.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the controller is further configured to:<claim-text>apply a second transformation to the second data word when the second data word is received at the memory array, the second transformation being based at least in part on the second data word satisfying a storage state criterion, wherein the second transformation generates the first data word;</claim-text><claim-text>generate the indicator based at least in part on applying the second transformation; and</claim-text><claim-text>storing the indicator and the first data word.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein:<claim-text>the indicator is stored in a first portion of the memory array; and</claim-text><claim-text>the first data word is stored in a second portion of the memory array different from the first portion.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the controller is further configured to:<claim-text>perform data bit inversion on respective bits of the first data word to generate the second data word, wherein the data bit inversion comprises the first transformation.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the controller is further configured to:<claim-text>read data stored within the first data word based at least in part on the indicator, wherein the indicator indicates a mapping of symbol types used to generate the first data word.</claim-text></claim-text></claim></claims></us-patent-application>