<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230001295A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230001295</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17812968</doc-number><date>20220715</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>44</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>795</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>48</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>44</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>795</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>48</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>73</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">System and Method for Providing Continuous Gameplay in a Multiplayer Video Game Through an Unbounded Gameplay Session</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16377673</doc-number><date>20190408</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11420119</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17812968</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>14712387</doc-number><date>20150514</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10286314</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16377673</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Activision Publishing, Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Marr</last-name><first-name>Michael D.</first-name><address><city>Monroe</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Kaplan</last-name><first-name>Keith S.</first-name><address><city>Bothell</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Lewis</last-name><first-name>Nathan T.</first-name><address><city>Woodinville</city><state>WA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system and method is provided for continuous gameplay in a multiplayer video game through an unbounded gameplay session. Players may join, exit, and later rejoin a given unbounded gameplay session at any time. A given unbounded gameplay session may therefore continue indefinitely so long as at least one player wishes to continue to gameplay. To facilitate an unbounded gameplay session, the system may score players using time-based or other parameters in a manner that is fair to players who have been playing in the unbounded gameplay session longer than other players.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="90.93mm" wi="158.75mm" file="US20230001295A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="204.05mm" wi="130.81mm" orientation="landscape" file="US20230001295A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="203.88mm" wi="128.19mm" orientation="landscape" file="US20230001295A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="154.60mm" wi="136.91mm" file="US20230001295A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="218.36mm" wi="157.99mm" file="US20230001295A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="211.33mm" wi="130.05mm" file="US20230001295A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="211.33mm" wi="116.92mm" file="US20230001295A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="205.49mm" wi="151.05mm" file="US20230001295A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present application is a continuation application of U.S. patent application Ser. No. 16/377,673, entitled &#x201c;Systems and Methods for Initiating Conversion Between Bounded Gameplay Sessions and Unbounded Gameplay Session&#x201d; and filed on Apr. 8, 2019, which is a continuation application of U.S. patent application Ser. No. 14/712,387, entitled &#x201c;System and Method for Providing Continuous Gameplay in a Multiplayer Video Game Through an Unbounded Gameplay Session&#x201d;, filed on May 14, 2015, and issued as U.S. Pat. No. 10,286,314 on May 14, 2019, both of which are herein incorporated herein by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The invention relates generally to video games, and more particularly to a system and method for providing continuous gameplay in a multiplayer video game through an unbounded gameplay session. The unbounded gameplay session may be initiated based on matched players, and may run continuously until all players have exited (or been removed from) the unbounded gameplay session.</p><heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading><p id="p-0004" num="0003">A multiplayer video game is a video game in which two or more players play in a gameplay session in a cooperative or adversarial relationship. Conventional gameplay sessions for multiplayer video games are typically bounded gameplay sessions that start and end within a given time period. Scoring for these sessions is generally based on achievement of some game objective during the bounded gameplay session (e.g., a number of &#x201c;kills&#x201d; in a First-Person-Shooter game).</p><p id="p-0005" num="0004">Unfortunately, some drawbacks associated with bounded gameplay sessions may compromise the player experience. For example, when not enough players are available for a multiplayer gameplay session, those players that have expressed a desire to play may be forced to wait idly until a requisite number of players are obtained. This can be frustrating for players that are eager to play, and may diminish overall enjoyment of the video game.</p><p id="p-0006" num="0005">One solution has been to match (or group) players quickly in an effort to commence a gameplay session without undue delay. Unfortunately, while such matching may allow a gameplay session to start sooner rather than later, it is possible that a group of players may be matched with one or more players that are not good a match, either because of a difference in skill, a poor network connection, or due to other factors, thereby resulting in a sub-optimal and perhaps unsatisfying gameplay session.</p><p id="p-0007" num="0006">Further, once a multiplayer gameplay session has commenced, it is considered socially taboo to quit during the gameplay session because it makes the gameplay session less enjoyable for the remaining players. In a team game, for example, a player that leaves (or quits) early forces one team to finish the game shorthanded, unbalancing the gameplay. The term &#x201c;rage quitting&#x201d; is sometimes used in this scenario because it is assumed that leaving a gameplay session prematurely is so rude that someone only does it because he or she is having a temper tantrum. Individual gameplay sessions suffer if there are not enough players to keep the game interesting.</p><p id="p-0008" num="0007">Additionally, because conventional multiplayer gameplay sessions typically end after a predefined time period has elapsed, or after a prescribed game event has occurred (or game objective has been reached), players who are enjoying a gameplay session (or who happen to be on a &#x201c;hot streak&#x201d;) are nevertheless forced to stop playing when the gameplay session ends. This can be frustrating for a player that may wish to continue playing rather than having his or her momentum stalled because some arbitrary time window has elapsed, or game objective has been reached.</p><p id="p-0009" num="0008">These and other drawbacks exist with discrete, bounded gameplay sessions in multiplayer video games.</p><heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0010" num="0009">The invention addressing these and other drawbacks relates to a system and method for providing continuous gameplay in a multiplayer video game through an unbounded gameplay session (&#x201c;UGS&#x201d;).</p><p id="p-0011" num="0010">A UGS may comprise a multiplayer gameplay session initiated based, in certain instances, on matched players that continues until all players have exited (or been removed from) the gameplay session. New players may join a UGS in progress, and existing players may leave a UGS that is still on-going. Players may join, exit, and later rejoin a given UGS at any time. As long as at least a minimum number of players remain in a UGS (whether an original player present when the UGS was initiated, or a new player that later joined the UGS in progress), the UGS may continue indefinitely. In other words, a UGS may terminate only when too few players (below a threshold number of players) remain in the gameplay session.</p><p id="p-0012" num="0011">A UGS differs from a conventional, bounded gameplay session (&#x201c;BGS&#x201d;) in that a BGS typically terminates after a predefined time period has elapsed, or after a prescribed game event has occurred (or game objective has been reached).</p><p id="p-0013" num="0012">A UGS further differs from a virtual world or Massively Multiplayer Online Game (&#x201c;MMOG&#x201d;) in that a UGS is not persistent, and will terminate when no (or too few) players remain in the gameplay session. Other differences between a UGS and MMOG include, for example, UGS sessions result from player matchmaking (e.g., players waiting in a game lobby to be matched), a UGS is scored based on a rate, the environment is not persisted beyond a UGS, the environment doesn't change in a material way during the UGS, in-game objects (typically) accumulated during the UGS and are typically not retained beyond the UGS (i.e., a given player may have a fixed load out that stays the same throughout the UGS).</p><p id="p-0014" num="0013">While aspects of the invention may be described herein with reference to various game levels or modes, characters, roles, game items, etc. associated with a &#x201c;shooter&#x201d; game, it should be appreciated that any such examples are for illustrative purposes only, and are not intended to be limiting. The system and method described in detail herein may be used in any genre of video game, without limitation.</p><p id="p-0015" num="0014">Further, as used herein, the terms &#x201c;match&#x201d; or &#x201c;matched players&#x201d; refers to a matching (or grouping) of two or more players, rather than a contest.</p><p id="p-0016" num="0015">According to one implementation of the invention, to initiate a UGS, one or more players that are waiting to be matched may be identified, such as players whose characters are waiting in a virtual game lobby to join a gameplay session. The gameplay session may comprise any type of gameplay session including, without limitation, a real gameplay session and/or a practice gameplay session (e.g., associated with a &#x201c;practice mode&#x201d; of a game).</p><p id="p-0017" num="0016">In one implementation, a matchmaking engine may generate one or more matches by grouping two or more of the identified players. The matchmaking engine may use known or hereafter-developed matchmaking techniques to generate a match (e.g., interchangeably referred to herein as &#x201c;matchmaking&#x201d;) by grouping players in an effort to produce the most satisfying player experiences. In an implementation, the matchmaking engine may alter a given match after the match has been made (e.g., during a given UGS). For instance, the matchmaking engine may alter one or more aspects of gameplay (e.g., number of players, in-game items, etc.) based on changes that occur during the UGS. Such changes can include, without limitation, changes in average skill levels (e.g., one team may be outperforming another team), changes in roles of players (e.g., too many players taking on a sniper role), and/or other changes.</p><p id="p-0018" num="0017">According to an aspect of the invention, once two or more players have been matched, a UGS may be initiated, during which players may be added or removed.</p><p id="p-0019" num="0018">In one implementation, the system may monitor player performance during a UGS. In order to facilitate a UGS in which players may join and exit at any time, and which can be continuous, player performance may be monitored based on various time-based (or other) parameters. For instance, in a conventional BGS that spans a fixed time period (e.g., ten minutes), each player's score (based on achievement of some game objective) may be recorded. The player with the highest score may be judged to be the best player during the BGS because each player has played exactly ten minutes. In a UGS, however, reliance on a &#x201c;highest score&#x201d; alone may not likely be accurate, as some players may have participated in the UGS longer than other players.</p><p id="p-0020" num="0019">Accordingly, in one implementation, a player's score may include a temporal aspect in the form of a time-based parameter. A time-based parameter may, for example, comprise a rate (e.g., a performance per unit of time), an interval (e.g., a performance within a given time period), or other time-based parameter.</p><p id="p-0021" num="0020">As an example, in a First-Person-Shooter game, a player's score may be based (in whole or in part) on a rate of number of &#x201c;kills&#x201d; per minute (e.g., averaged over a given time window such as five minutes of play), a number of kills during a given interval (e.g., in the last five minutes), or using some other time-based parameter. In this manner, a fair scoring system is provided for players who may have been playing longer than other players in the UGS. Further, even if a UGS has been going on for hours as various players have come and gone, this type of &#x201c;score trending&#x201d; allows a given player to see how well he or she is doing (or others), just a short time after commencing gameplay. This can also be beneficial even in discrete BGSs that might last for a long time (e.g., that may take 30 minutes or more to play), as players may want to know who is performing well in a recent time period (e.g., in the past 5 minutes).</p><p id="p-0022" num="0021">Alternatively or additionally, other types of parameters may be used to score players. For instance, player performance may be tracked when different types of in-game items (e.g., weapons, clothing, accessories, etc.) are used. Continuing with the First-Person-Shooter video game example above, a player may wish to know that he or she is averaging more kills per minute with a new weapon, suggesting that this weapon may be more effective for the player going forward.</p><p id="p-0023" num="0022">According to an aspect of the invention, the performance of one or more players or a team of players may be monitored to determine whether an uneven match is being played in a given UGS based on the monitored performance. For example, a performance gap may be determined between a first team of players matched against a second team of players. The performance gap may be determined by comparing a performance of the first team (e.g., number of kills by the first team) with the performance of the second team (e.g., number of kills by the second team). Based on the comparison, it may be determined that the first team is outperforming the second team to an extent that gameplay may no longer be enjoyable (by either or both teams). In these instances, an adjustment feature may be implemented for the first team and/or the second team. For example, the adjustment feature may include an advantage, such as an additional player, given to the second team and/or a disadvantage, such as removal of a number of kills, to the first team. Because a UGS allows players to be added even after the gameplay session has been initiated, the system may reduce instances of lopsided gameplay (which may be undesirable to either or both teams) by adding a new player to a losing team, giving the losing team an advantage, or facilitate uneven matches to discourage wars of attrition.</p><p id="p-0024" num="0023">By providing a UGS, the system facilitates various advantages. For instance, the system enables better matchmaking for gameplay sessions by allowing adjustments to matches between players to be made even after a given gameplay session has been initiated.</p><p id="p-0025" num="0024">Furthermore, by facilitating a UGS, the system allows players to freely join and quit gameplay sessions without social ramifications of quitting a gameplay session. For instance, it is often frowned upon to quit a gameplay session because it may leave a team disadvantaged with respect to an opposing team who has a full complement of players. Because the system allows players to join and exit a UGS, such a disadvantage on the team losing a player may be mitigated by replacing a quitting player with a new player.</p><p id="p-0026" num="0025">Because of the scoring mechanism of the UGS, scoring may remain fair and indicative of a player's performance while accounting for new players and players who quit a UGS. Moreover, the system facilitates better matchmaking by correcting mismatches during a UGS. For instance, by providing an adjustment feature during a UGS (e.g., adding a player to a losing team), the system may adjust gameplay according to particular needs after a given gameplay session has been initiated (e.g., to create more fair gameplay, achieve a certain level of lopsidedness, etc.). As would be appreciated, multiple corrections may be made during a given UGS. For example, a first team may be provided with an advantage over a competing second team and the second team may later be provided with an advantage over the first team.</p><p id="p-0027" num="0026">These and other objects, features, and characteristics of the system and/or method disclosed herein, as well as the methods of operation and functions of the related elements of structure and the combination of parts and economies of manufacture, will become more apparent upon consideration of the following description and the appended claims with reference to the accompanying drawings, all of which form a part of this specification, wherein like reference numerals designate corresponding parts in the various figures. It is to be expressly understood, however, that the drawings are for the purpose of illustration and description only and are not intended as a definition of the limits of the invention. As used in the specification and in the claims, the singular form of &#x201c;a&#x201d;, &#x201c;an&#x201d;, and &#x201c;the&#x201d; include plural referents unless the context clearly dictates otherwise.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates an exemplary system for providing continuous gameplay in a multiplayer video game through an UGS, according to an implementation of the invention.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates an exemplary system for providing continuous gameplay in a multiplayer video game through an UGS, according to an implementation of the invention.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates an exemplary system configuration in which a server hosts a plurality of computer devices to facilitate a multiplayer game, according to an implementation of the invention.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> illustrates an exemplary system configuration in which a plurality of networked servers communicate with one another to facilitate a multiplayer game, according to an implementation of the invention.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>2</b>C</figref> illustrates an exemplary system configuration in which a plurality of computer devices are networked together to facilitate a multiplayer game, according to an implementation of the invention.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an exemplary process for providing continuous gameplay in a multiplayer video game through an UGS, according to an implementation of the invention.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an exemplary process for providing an adjustment feature to players in a mismatched gameplay session, according to an implementation of the invention.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an exemplary process for initiating and extending a BGS, according to an implementation of the invention.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> illustrates a diagram that depicts an exemplary first scoring mechanism using a time-based parameter, according to an implementation of the invention.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> illustrates a diagram that depicts an exemplary second scoring mechanism using a time-based parameter, according to an implementation of the invention.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>6</b>C</figref> illustrates a diagram that depicts an exemplary third scoring mechanism using a time-based parameter, according to an implementation of the invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading><p id="p-0039" num="0038">The invention described herein relates to a system and method for providing continuous gameplay in a multiplayer video game through an UGS. The UGS may be initiated based on matched players, and may run continuously until all players have exited (or been removed from) the UGS.</p><p id="p-0040" num="0039">Exemplary System Architecture</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref> each depict an exemplary architecture of a system which may include one or more computer systems <b>110</b>, one or more servers <b>150</b>, one or more databases <b>160</b>, and/or other components. <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates an implementation in which server(s) <b>150</b> function as a host computer that hosts gameplay between other devices, such as computer system(s) <b>110</b>. <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates an implementation in which a given computer system <b>110</b> functions as a host computer that hosts gameplay between (or with) other devices, such as other computer system(s) <b>110</b>. Unless specifically stated otherwise, the description of various system components may refer to either or both of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref>.</p><p id="p-0042" num="0041">Computer System <b>110</b></p><p id="p-0043" num="0042">Computer system <b>110</b> may be configured as a gaming console, a handheld gaming device, a personal computer (e.g., a desktop computer, a laptop computer, etc.), a smartphone, a tablet computing device, and/or other device that can be used to interact with an instance of a video game.</p><p id="p-0044" num="0043">Referring to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, computer system <b>110</b> may include one or more processors <b>112</b> (also interchangeably referred to herein as processors <b>112</b>, processor(s) <b>112</b>, or processor <b>112</b> for convenience), one or more storage devices <b>114</b> (which may store an unbounded gameplay application <b>120</b>), one or more peripherals <b>140</b>, and/or other components. Processors <b>112</b> may be programmed by one or more computer program instructions. For example, processors <b>112</b> may be programmed by unbounded gameplay application <b>120</b> and/or other instructions (such as gaming instructions used to instantiate the game).</p><p id="p-0045" num="0044">Depending on the system configuration, unbounded gameplay application <b>120</b> (or portions thereof) may be part of a game application, which creates a game instance to facilitate gameplay. Alternatively or additionally, unbounded gameplay application <b>120</b> may run on a device such as a server <b>150</b>.</p><p id="p-0046" num="0045">Unbounded gameplay application <b>120</b> may include instructions that program computer system <b>110</b>. The instructions may include, without limitation, a matchmaking engine <b>122</b>, a gameplay session engine <b>124</b>, a scoring engine <b>126</b>, a game adjustment engine <b>128</b>, and/or other instructions <b>130</b> that program computer system <b>110</b> to perform various operations, each of which are described in greater detail herein. As used herein, for convenience, the various instructions will be described as performing an operation, when, in fact, the various instructions program the processors <b>112</b> (and therefore computer system <b>110</b>) to perform the operation.</p><p id="p-0047" num="0046">Peripherals <b>140</b></p><p id="p-0048" num="0047">Peripherals <b>140</b> may be used to obtain an input (e.g., direct input, measured input, etc.) from a player. Peripherals <b>140</b> may include, without limitation, a game controller, a gamepad, a keyboard, a mouse, an imaging device such as a camera, a motion sensing device, a light sensor, a biometric sensor, and/or other peripheral device that can obtain an input from a player. Peripherals <b>140</b> may be coupled to a corresponding computer system <b>110</b> via a wired and/or wireless connection.</p><p id="p-0049" num="0048">Server <b>150</b></p><p id="p-0050" num="0049">Server <b>150</b> may include one or more computing devices.</p><p id="p-0051" num="0050">Referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, Server <b>150</b> may include one or more physical processors <b>152</b> (also interchangeably referred to herein as processors <b>152</b>, processor(s) <b>152</b>, or processor <b>152</b> for convenience) programmed by computer program instructions, one or more storage devices <b>154</b> (which may store a customization application <b>120</b>), and/or other components. Processors <b>152</b> may be programmed by one or more computer program instructions. For example, processors <b>152</b> may be programmed by gaming instructions used to instantiate the game.</p><p id="p-0052" num="0051">Depending on the system configuration, customization application <b>120</b> (or portions thereof) may be part of a game application, which creates a game instance to facilitate gameplay. Alternatively or additionally, portions or all of customization application <b>120</b> may run on computer system <b>110</b> or server <b>150</b>.</p><p id="p-0053" num="0052">Customization application <b>120</b> may include instructions that program server <b>150</b>. The instructions may include, without limitation, a scoring engine <b>122</b>, an analytics and feedback engine <b>124</b>, a pipelining engine <b>126</b>, a microtransaction engine <b>128</b>, a User Interface (&#x201c;UP&#x201d;) engine <b>130</b>, and/or other instructions that program server <b>150</b> to perform various operations, each of which are described in greater detail herein.</p><p id="p-0054" num="0053">As used herein, for convenience, the various instructions will be described as performing an operation, when, in fact, the various instructions program the processors <b>152</b> (and therefore server <b>150</b>) to perform the operation.</p><p id="p-0055" num="0054">Although illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as a single component, computer system <b>110</b> and server <b>150</b> may each include a plurality of individual components (e.g., computer devices) each programmed with at least some of the functions described herein. In this manner, some components of computer system <b>110</b> and/or server <b>150</b> may perform some functions while other components may perform other functions, as would be appreciated. Thus, either or both server <b>150</b> and computer system <b>100</b> may function as a host computer programmed by customization application <b>120</b>. The one or more processors (<b>112</b>, <b>152</b>) may each include one or more physical processors that are programmed by computer program instructions. The various instructions described herein are exemplary only. Other configurations and numbers of instructions may be used, so long as the processor(s) (<b>112</b>, <b>152</b>) are programmed to perform the functions described herein.</p><p id="p-0056" num="0055">Furthermore, it should be appreciated that although the various instructions are illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as being co-located within a single processing unit, in implementations in which processor(s) (<b>112</b>, <b>152</b>) includes multiple processing units, one or more instructions may be executed remotely from the other instructions.</p><p id="p-0057" num="0056">The description of the functionality provided by the different instructions described herein is for illustrative purposes, and is not intended to be limiting, as any of instructions may provide more or less functionality than is described. For example, one or more of the instructions may be eliminated, and some or all of its functionality may be provided by other ones of the instructions. As another example, processor(s) (<b>112</b>, <b>152</b>) may be programmed by one or more additional instructions that may perform some or all of the functionality attributed herein to one of the instructions.</p><p id="p-0058" num="0057">Storage Devices <b>114</b></p><p id="p-0059" num="0058">The various instructions described herein may be stored in one or more storage devices, such as storage device (<b>114</b>, <b>154</b>). Storage device (<b>114</b>, <b>154</b>) may comprise random access memory (RAM), read only memory (ROM), and/or other memory. The storage device may store the computer program instructions (e.g., the aforementioned instructions) to be executed by processor (<b>112</b>, <b>152</b>) as well as data that may be manipulated by processor (<b>112</b>, <b>152</b>). The storage device may comprise floppy disks, hard disks, optical disks, tapes, or other storage media for storing computer-executable instructions and/or data.</p><p id="p-0060" num="0059">Network <b>102</b></p><p id="p-0061" num="0060">The various components illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be coupled to at least one other component via a network <b>102</b>, which may include any one or more of, for instance, the Internet, an intranet, a PAN (Personal Area Network), a LAN (Local Area Network), a WAN (Wide Area Network), a SAN (Storage Area Network), a MAN (Metropolitan Area Network), a wireless network, a cellular communications network, a Public Switched Telephone Network, and/or other network.</p><p id="p-0062" num="0061">In <figref idref="DRAWINGS">FIG. <b>1</b></figref>, as well as in other drawing Figures, different numbers of entities than those depicted may be used. Furthermore, according to various implementations, the components described herein may be implemented in hardware and/or software that configure hardware.</p><p id="p-0063" num="0062">Databases <b>160</b></p><p id="p-0064" num="0063">The various databases <b>160</b> described herein may be, include, or interface to, for example, an Oracle&#x2122; relational database sold commercially by Oracle Corporation. Other databases, such as Informix&#x2122;, DB<b>2</b> (Database <b>2</b>) or other data storage, including file-based, or query formats, platforms, or resources such as OLAP (On Line Analytical Processing), SQL (Structured Query Language), a SAN (storage area network), Microsoft Access&#x2122; or others may also be used, incorporated, or accessed. The database may comprise one or more such databases that reside in one or more physical devices and in one or more physical locations. The database may store a plurality of types of data and/or files and associated data or file descriptions, administrative information, or any other data.</p><p id="p-0065" num="0064">The foregoing system architecture is exemplary only and should not be viewed as limiting. Other system configurations may be used as well, as would be appreciated by those having skill in the art.</p><heading id="h-0007" level="2">Exemplary Multiplayer System Configurations</heading><p id="p-0066" num="0065">Multiplayer video games have exploded in popularity due, in part, to services such as Microsoft's Xbox LIVE&#xae; and Sony's PlayStation Network&#xae; which enable gamers all over the world to play with or against one another. Generally, as noted above, a multiplayer video game is a video game in which two or more players play in a gameplay session in a cooperative or adversarial relationship. Typically, when a player logs in to a game system or platform to play a multiplayer video game, the player may engage in a gameplay session in which he or she is matched with other players to play together (on the same team or as opponents).</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates an exemplary system configuration <b>200</b>A in which a server hosts a plurality of computer devices to facilitate a multiplayer game, according to an implementation of the invention. In one implementation, one or more servers <b>150</b> may host a number of computer systems <b>110</b> (illustrated as computer systems <b>110</b>A, <b>110</b>B, . . . , <b>110</b>N) via a network <b>102</b>. Each computer system <b>110</b> may include one or more peripherals (illustrated as peripherals <b>140</b>A, <b>140</b>B, . . . , <b>140</b>N). In this manner, one or more servers <b>150</b> may facilitate the gameplay of different players using different computer systems <b>110</b> and/or otherwise provide one or more operations of unbounded gameplay application <b>120</b> (illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0068" num="0067">In some instances, a given server <b>150</b> may be associated with a proprietary gameplay network system, such as, without limitation, Microsoft's Xbox LIVE&#xae; and Sony's PlayStation Network&#xae;, and/or another type of gameplay network system. In this implementation, a given computer system <b>110</b> may be associated with a particular type of gaming console. Other types of computer systems <b>110</b> using other types of gameplay networks may be used as well.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> illustrates an exemplary system configuration <b>200</b>B in which a plurality of computer systems <b>110</b> are networked together to facilitate a multiplayer game, according to an implementation of the invention. Any one or more of the computer devices <b>110</b> may serve as a host and/or otherwise provide one or more operations of unbounded gameplay application <b>120</b> (illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>2</b>C</figref> illustrates an exemplary system configuration <b>200</b>C in which a computer system <b>110</b> is used by a plurality of users to facilitate a multiplayer game, according to an implementation of the invention. In an implementation, computer system <b>110</b> may be considered to host the multiplayer game and/or otherwise provide one or more operations of unbounded gameplay application <b>120</b> (illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0071" num="0070">Referring to <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>C</figref>, in an implementation, a host may facilitate the multiplayer game and/or perform other operations described herein. In an implementation, at least some of these operations may also or instead be performed by an individual computer system <b>110</b>. Furthermore, the illustrated system configurations are exemplary only and should not be viewed as limiting in any way. Other system configurations may be used as well, as would be appreciated by those having skill in the art.</p><heading id="h-0008" level="2">Unbounded Gameplay Session (&#x201c;UGS&#x201d;)</heading><p id="p-0072" num="0071">According to an aspect of the invention, to initiate a UGS, one or more players that are waiting to be matched may be identified, such as players whose characters are waiting in a virtual game lobby to join a gameplay session. The gameplay session may comprise any type of gameplay session including, without limitation, a real gameplay session and/or a practice gameplay session (e.g., associated with a &#x201c;practice mode&#x201d; of a game).</p><p id="p-0073" num="0072">Matchmaking Engine <b>122</b></p><p id="p-0074" num="0073">In one implementation, matchmaking engine <b>122</b> may generate one or more matches by grouping two or more of the identified players (either in an adversarial or cooperative capacity). The two or more players or may have elected to play together, or may be matched by matchmaking engine <b>122</b>.</p><p id="p-0075" num="0074">In one example, players may be matched (based on one or more matchmaking factors) to play on a team against an opposing team. The opposing team may comprise a number of players who have likewise been similarly matched based on one or more matchmaking factors, a team of non-player characters, or a combination thereof. The matchmaking factors may indicate a compatibility of the matched players to provide for satisfying gameplay experience. For example, and without limitation, players may be matched based on a player skill level, a player style, a player preference to play with certain players, and/or other matchmaking factors. The matchmaking engine may use known or hereafter-developed matchmaking techniques to generate a match (e.g., interchangeably referred to herein as &#x201c;matchmaking&#x201d;) by grouping players in an effort to produce the most satisfying player experiences.</p><p id="p-0076" num="0075">Gameplay Session Engine <b>124</b></p><p id="p-0077" num="0076">According to an aspect of the invention, once two or more players have been matched, gameplay session engine <b>124</b> may initiate a UGS. Once the UGS has been initiated, gameplay session engine <b>124</b> may add and/or remove players from the UGS. For instance, players may choose to exit (and later rejoin) a given UGS. New players may join (then later exit and rejoin) a given UGS. In this manner, even though a given UGS is a gameplay session that may have been initiated with a selection of original players, the set of players participating in a UGS may change over time. A given UGS may therefore continue indefinitely as long as at least one player wishes to continue to gameplay. When all players have exited (or been removed from) a UGS or otherwise when a number of players remaining falls below a threshold number of players, gameplay session engine <b>124</b> may terminate the UGS. The threshold number of players may be two such that the UGS is terminated when the session is no longer a player-versus-player session. As would be appreciated, other threshold number of players (including zero) may be used as well.</p><p id="p-0078" num="0077">In some implementations of the invention, gameplay session engine <b>124</b> may determine whether to initiate a UGS or a BGS based on game logic, or a player selection (e.g., a player may elect to join either a UGS or a BGS). Alternatively or additionally, different game lobbies in which players wait to be matched may correspond to different types of gameplay sessions. For example, a first game lobby may serve as a waiting area to enter a UGS game, while a second game lobby may serve as a waiting area to enter a BGS game.</p><p id="p-0079" num="0078">In an implementation, gameplay session engine <b>124</b> may initiate a BGS and, upon occurrence of a terminating condition (e.g., passage of an elapsed time or achievement of a game objective) or at some time during the BGS, query the players participating in the BGS whether an extension of the BGS is desired. In other words, players involved in a BGS may elect to extend gameplay. Such extension may be for an additional amount of time (e.g., an additional five minutes of gameplay) and/or achievement of an additional game objective (e.g., additional fifty kills). Upon passage of the additional amount of time and/or achievement of the additional game objective, the extended BGS may be further extended by the same or different amount of time/additional game objective or may terminate if no further extensions are desired. Any player electing to extend gameplay may continue to play, while other players not electing to extend gameplay may exit the BGS (e.g., when the BGS would normally terminate).</p><p id="p-0080" num="0079">In some instances, gameplay session engine <b>124</b> may convert a BGS into a UGS. For example, gameplay session engine <b>124</b> may query the players involved in a BGS whether conversion to a UGS is desired. If all (or a predetermined number of) players agree, the BGS may be converted to a UGS immediately. If only a subset of the players agree, the BGS may be converted to a UGS when the BGS would have normally terminated. Upon normal termination of the BGS, the subset of players that have elected to convert to a UGS may continue gameplay in the UGS (and any scoring from the BGS may be carried over to the UGS), while those not electing to convert to a UGS may simply exit the BGS. The converted BGS-to-UGS may continue indefinitely until no more players remain in the gameplay session. If none of the players agree, gameplay session engine <b>124</b> may not convert the BGS to a UGS.</p><p id="p-0081" num="0080">In an implementation, gameplay session engine <b>124</b> may provide a UGS or extend a BGS by, for example and without limitation, extending a game map, such as disclosed in co-pending, and concurrently filed, U.S. patent application Ser. No. 14/712,417, entitled &#x201c;System and Method for Providing Dynamically Variable Maps in a Video Game&#x201d;, which is hereby incorporated by reference herein in its entirety.</p><p id="p-0082" num="0081">Scoring Engine <b>126</b></p><p id="p-0083" num="0082">According to an aspect of the invention, scoring engine <b>126</b> may monitor player performance during a UGS. In order to facilitate a UGS in which players may join and exit at any time, and which can be continuous, scoring engine <b>126</b> may monitor player performance based on various time-based (or other) parameters. Such time-based (or other) parameters may enable a player to be scored in a manner that is not dependent on a total length of time in which the player played during a UGS (e.g., whether the player was an original player, a new player, or a player that previously exited and rejoined a UGS).</p><p id="p-0084" num="0083">For instance, in a conventional BGS that spans a fixed time period (e.g., ten minutes), each player's score (based on achievement of some game objective) may be recorded. The player with the highest score may be judged to be the best player during the BGS because each player has played exactly ten minutes. In a UGS, however, reliance on a &#x201c;highest score&#x201d; alone may not likely be accurate, as some players may have participated in the UGS longer than other players.</p><p id="p-0085" num="0084">Accordingly, in one implementation, a player's score may include a temporal aspect in the form of a time-based parameter. A time-based parameter may, for example, comprise a rate (e.g., a performance per unit of time), an interval (e.g., a performance within the last five minutes), or other time-based parameter.</p><p id="p-0086" num="0085">As an example, in a First-Person-Shooter game, a player's score may be based (in whole or in part) on a rate of number of &#x201c;kills&#x201d; per minute (e.g., averaged over a given time window such as five minutes of play), a number of kills during a given interval (e.g., in the last five minutes), or using some other time-based parameter. In this manner, a fair scoring system is provided for players who may have been playing longer than other players in the UGS. Further, even if a UGS has been going on for hours as various players have come and gone, this type of &#x201c;score trending&#x201d; allows a given player to see how well he or she is doing (or others), just a short time after commencing gameplay. This can also be beneficial even in discrete, BGSs that might last for a long time (e.g., that may take 30 minutes or more to play), as players may want to know who is performing well in a recent time period (e.g., in the past 5 minutes).</p><p id="p-0087" num="0086">Alternatively or additionally, scoring engine <b>126</b> may use other types of parameters to score players. For instance, scoring engine <b>126</b> may track a player's performance when different types of in-game items (e.g., weapons, clothing, accessories, etc.) are used. Continuing with the First-Person-Shooter video game example above, a player may wish to know that he or she is averaging more per kills per minute with a new weapon, suggesting that this weapon may be more effective for the player going forward.</p><p id="p-0088" num="0087">In some instances, scoring engine <b>126</b> may track a player's performance based on the player's play style. For example, scoring engine <b>126</b> may determine a number of kills made by the player (whether through the entire UGS or portions thereof) while the player is playing in a &#x201c;run-and-gun,&#x201d; a &#x201c;camping and sniping,&#x201d; and/or other play styles. In this manner, scoring engine <b>126</b> allows a player or others to analyze which play styles are most effective for that player.</p><p id="p-0089" num="0088">In some instances, scoring engine <b>126</b> may track a player's performance based on the makeup of teammates and/or foes. For instance, scoring engine <b>126</b> may measure a player's performance based on a skill level, a played role, a play style, and/or other characteristic of a teammate (and/or foe) during a UGS. In this manner, scoring engine <b>126</b> allows a player or others to analyze which teammates should be sought when playing future games (and/or which foes should be avoided if possible).</p><p id="p-0090" num="0089">Whether using a time-based or other parameter, scoring engine <b>126</b> may keep track of all the scores for a given UGS. For example, after a UGS has terminated, scoring engine <b>126</b> may rank players according to their scores. For instance, scoring engine <b>126</b> may rank players according to their number of kills per minute, highest number of kills in a given playing time window (e.g., any five minutes of playing time), highest number of kills per given weapon, highest number of kills per type of play style, and/or other score generated by scoring engine <b>126</b>. During a UGS, scoring engine <b>126</b> may provide real-time scores to players. For instance, a newly added player may obtain (e.g., by depressing a user interface member on peripheral <b>140</b> to request scores) his number of kills since joining the UGS (e.g., his score within the past five minutes). In some instances, a comparison of player scores during a UGS may be provided. For instance, a given player may be provided with a comparison of that player's score during a UGS with one or more other players' scores during the UGS. Other players may be provided with similar comparisons. As would be appreciated, the score comparison may related to a team of players as well (e.g., a comparison of team scores may be provided to one or all members of either or both teams).</p><p id="p-0091" num="0090">Each of <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref> depict a gameplay session that begins at time T<sub>0 </sub>and terminates at time T<sub>n</sub>. Each of <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref> also depicts a player <b>602</b> that started participating in the depicted gameplay session at time T<sub>0</sub>, a player <b>604</b> that started participating in the depicted gameplay session at time T<sub>1 </sub>(i.e., after the gameplay session was initiated), and a player <b>606</b> that started participating in the depicted gameplay session at time T<sub>2 </sub>(collectively referred to as &#x201c;participating players&#x201d;). <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref> are used to illustrate various scoring mechanisms, which may be used by scoring engine <b>126</b> to monitor a player's performance and generate a score for the player based on the monitored performance.</p><p id="p-0092" num="0091">For instance, <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> illustrates a diagram <b>600</b>A that depicts an exemplary first scoring mechanism using a time-based parameter, according to an implementation of the invention. According to the first scoring mechanism depicted in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, each of the participating players may be scored based on an interval of time that begins at the same time for each player (illustrated as time T<sub>2</sub>) and ends at the same time for each player (illustrated as time T<sub>3</sub>) (e.g., within the last five minutes). In this manner each of the players may be scored using a common time-based parameter that allows an assessment of a player's performance with respect to other players and without respect to a total length of time that a given player has participated in a gameplay session. For instance, as illustrated, in the last n-minutes (or other time) of gameplay, player <b>602</b> has 10 kills, player <b>604</b> has 12 kills and player <b>606</b> has 3 kills. By this metric, player <b>604</b> has the &#x201c;best&#x201d; score within the last n-minutes.</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> illustrates a diagram <b>600</b>B that depicts an exemplary second scoring mechanism using a time-based parameter, according to an implementation of the invention. According to the second scoring mechanism depicted in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, each of the participating players may be scored based on a common time-based characteristic, but based on player performance beginning at different times and ending at different times during the gameplay session. For instance, each of the participating players may be scored based on their respective first n-minutes of gameplay. This may allow for a common (and fair) scoring mechanism in which each player is scored by a metric that is common to all participating players. In particular, if a player <b>606</b> has been participating in the gameplay session for only two minutes, a score based on a performance of each of the players' first two minutes of gameplay may be generated for each player. For instance, as illustrated, player <b>602</b> had 2 kills in his first two minutes of gameplay, player <b>604</b> had 1 kill in his first two minutes of gameplay, and player <b>606</b> had 3 kills during his first two minutes of gameplay. According to this metric, player <b>606</b> has the &#x201c;best&#x201d; score.</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>6</b>C</figref> illustrates a diagram <b>600</b>C that depicts an exemplary third scoring mechanism using a time-based parameter, according to an implementation of the invention. According to the third scoring mechanism depicted in <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>, each of the participating players may be scored based on a sliding time interval that is used to identify a &#x201c;best&#x201d; performance over a time interval for each player. For instance, a given time interval (e.g., 2 minutes, 5 minutes, etc.) may be selected (by the system and/or by players) to use to determine the best performance of each player over the selected time interval. In some instances, the given time interval may be no less than an amount of time that a given player has been participating in the gameplay session. In this manner, each player is guaranteed to have participated in the gameplay session for a duration that is equal to or greater than the selected time interval. When the time interval has been selected, the system may analyze the performance of each player over the sliding time interval to identify an interval in which the player achieved the highest performance. For instance, as illustrated, player <b>602</b>'s best performance of 15 kills occurred between time T<sub>1 </sub>and T<sub>3</sub>, player <b>604</b>'s best performance of 13 kills occurred between time T<sub>1 </sub>and T<sub>3</sub>, and player <b>606</b>'s best performance of 3 kills occurred between time T<sub>2 </sub>and T<sub>3</sub>. By this scoring metric, player <b>602</b> has the &#x201c;best&#x201d; score.</p><p id="p-0095" num="0094">In some implementations, the system may normalize a given score based on a number of players participating at a relevant time. For instance, if ten players were participating during the first two minutes of player <b>602</b>'s gameplay, but only five player were participating during the first two minutes of player <b>604</b>'s gameplay, player <b>602</b> may have an advantage because there are more players during his first two minutes of gameplay (and therefore potentially more targets for which to obtain kills) than for player <b>604</b>. To account for such an advantage, the system may normalize each player's score based on a number of participating players. For instance, the system may generate a ratio by dividing the player's score by the number of participating players to obtain a ratio of score-to-player. Other ways to normalize a score based on number of participating players may be used as well.</p><p id="p-0096" num="0095">The scoring mechanisms illustrated in <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref> may be used to create separate scores for each player. In other words, a player's performance may be assessed using two or more of the scores illustrated in <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref>. Furthermore, the various scores illustrated in <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref> may be used to generate a composite score, in which each individual score may be weighted. Furthermore, the types of scoring mechanisms used to generate one or more scores for a given gameplay session may be selectable by a user at the onset of gameplay, determined on-demand during gameplay, generated after a gameplay session has been terminated, and/or at other times.</p><p id="p-0097" num="0096">The scoring mechanisms illustrated in <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref> may facilitate a UGS in which players may join and exit at any time, and which can be continuous. This is because such scoring mechanisms may be based on factors other than a total length of time that a given player has participated in a gameplay session. Thus, players may join, leave, and rejoin a gameplay session, while being scored in a manner that allows comparison to other players (who may have been participating in the gameplay session for a longer or shorter duration than a given player).</p><p id="p-0098" num="0097">One or more of the scoring mechanisms illustrated in <figref idref="DRAWINGS">FIGS. <b>6</b>A, <b>6</b>B, and <b>6</b>C</figref> may also be used to monitor and gauge player performance for other types of gameplay sessions (e.g., a BGS or continuous gameplay session) as well.</p><p id="p-0099" num="0098">Game Adjustment Eengine <b>128</b></p><p id="p-0100" num="0099">In an implementation, game adjustment engine <b>128</b> may monitor gameplay of a UGS (e.g., the performance of players or team of players or other characteristic of the UGS) to determine whether an adjustment associated with the UGS should be made. Such determination may be made based on an objective of the UGS (which may be a default objective set by a game developer or others and/or configurable). The objective may be to create an even match (e.g., in some instances to prevent lopsided matches), create an uneven match (e.g., in some instances to prevent a war of attrition), or other objectives.</p><p id="p-0101" num="0100">To determine whether an objective is being achieved, game adjustment engine <b>128</b> may determine a performance gap between a first team of players matched against a second team of players. The performance gap may be determined by comparing a performance of the first team (e.g., number of kills by the first team) with the performance of the second team (e.g., number of kills by the second team). Based on the comparison, game adjustment engine <b>128</b> may determine whether the first team is outperforming the second team. For objectives associated with creating even gameplay, to an extent that gameplay may no longer be enjoyable (by either or both teams)game adjustment engine <b>128</b> may implement an adjustment feature for the first team and/or the second team. For example, the adjustment feature may include an advantage, such as an additional player, given to the second (losing team) and/or a disadvantage, such as reducing the effectiveness of equipment or providing fewer resources on parts of the map, to the first (winning) team. Because a UGS allows players to be added even after the gameplay session has been initiated, the system may reduce instances of lopsided gameplay (which may be undesirable to either or both teams) by adding a new player to a losing team, giving the losing team an advantage.</p><p id="p-0102" num="0101">In some instances, game adjustment engine <b>128</b> may implement the adjustment feature only when the performance gap exceeds a predetermined threshold, which may be set by a game designer and/or set by the players themselves before entering the UGS. The performance gap may be specified in terms of absolute metrics (e.g., when a first team's kill count is greater than a second team's kill count by 50 or more) and/or relative metrics (e.g., when a first team has 125% of the number of kills as the second team).</p><p id="p-0103" num="0102">For objectives associated with creating an uneven match, game adjustment engine <b>128</b> may implement an adjustment feature when the performance gap is too small (e.g., when the performance gap is at or below a second predetermined (and/or configurable) threshold. In this manner, uneven gameplay may be encouraged, which may lead to an increased performance gap. Game adjustment engine <b>128</b> may periodically iterate the adjustments until the performance gap is sufficiently large (e.g., meets or exceeds the second predetermined threshold).</p><p id="p-0104" num="0103">Game adjustment engine <b>128</b> may implement various types adjustment features, which may include advantages to a one team and/or disadvantages to another team. For example, and without limitation, an advantage may include adding a new player to a team, replacing a poor-performing player with a new player, providing a virtual item to a team, providing a power-up to a team, providing a positive handicap (e.g., adding a number of kills), and/or providing other benefits to a given team. A disadvantage may include, without limitation, removing a player from the other team, replacing a high-performing player with a new player, removing a virtual item from the other team, removing a power-up from the other team, providing a negative handicap (e.g., subtracting a number of kills), and/or providing other detriment to the other team. An advantage and/or disadvantage may be applied permanently throughout the entire UGS, may be applied temporarily for a predefined time, or may be applied temporarily until the performance gap no longer exists (for objectives associated with even gameplay) or until the performance gap is sufficiently large (for objectives associated with uneven gameplay).</p><p id="p-0105" num="0104">Game adjustment engine <b>128</b> may implement such advantages and/or disadvantages periodically throughout the UGS (e.g., each time the performance gap exceeds a predetermined threshold) or on a one-time basis. In an implementation, the adjustment feature provided by game adjustment engine <b>128</b> may be controlled by a default setting (e.g., either default on or default off), which may be adjusted by players so they can choose whether to activate (or de-activate) this feature.</p><heading id="h-0009" level="2">Exemplary Flowcharts</heading><p id="p-0106" num="0105">The various processing operations and/or data flows depicted in the exemplary flowcharts of <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>5</b></figref> are described in greater detail herein. The described operations may be accomplished using some or all of the system components described in detail above and, in some implementations, various operations may be performed in different sequences and various operations may be omitted. Additional operations may be performed along with some or all of the operations shown in the depicted flow diagrams. One or more operations may be performed simultaneously. Accordingly, the operations as illustrated (and described in greater detail below) are exemplary by nature and, as such, should not be viewed as limiting.</p><p id="p-0107" num="0106">Exemplary Process for Providing Continuous Gameplay through a UGS</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an exemplary process for providing continuous gameplay in a multiplayer video game through an UGS, according to an implementation of the invention.</p><p id="p-0109" num="0108">In an operation <b>302</b>, a UGS may be initiated. For example, a set of players may be matched to play with and/or against one another.</p><p id="p-0110" num="0109">In an operation <b>304</b>, players may be scored individually and/or as a team. For example, each player or team may be scored according to a time-based parameter that incorporates a temporal aspect. In a particular example, a player and/or team may be scored based on a performance per unit of time, an interval (e.g., a performance within the last five minutes), and/or temporal aspect. Other types of scores, such as based on a type of weapon used, a style of gameplay, and/or other aspects of gameplay may be assessed as well.</p><p id="p-0111" num="0110">In an operation <b>306</b>, a determination of whether to add a player to the UGS may be made. For instance, a player may wish to join a gameplay session already in progress. The player may be added to the UGS, which may require acceptance by existing players in the UGS or may be automatic based on game rules. In some instances, for example, players may choose to participate in a UGS even with only <b>11</b> players even though <b>12</b> may be required. In this example, the UGS may be initiated and a twelfth player may be added when available. If a player should be added, processing may proceed to operation <b>314</b>, in which a new player is selected and added to the UGS. The new player may be selected based on selections from matchmaking engine <b>122</b>.</p><p id="p-0112" num="0111">In an operation <b>308</b>, a determination of whether a player should be removed from the UGS may be made. A player should be removed from the UGS when, for example, the player voluntarily chooses to leave, when a disadvantage is to be imposed on a team (as described herein), when a network connection to the player has been lost, and/or when a player should otherwise no longer continue playing in the UGS. If a player should be removed, the player may be removed from the UGS in an operation <b>310</b>. If the player should not be removed, processing may return to operation <b>304</b>, in which players and/or teams are scored.</p><p id="p-0113" num="0112">In an operation <b>312</b> a determination of whether the removed player should be replaced is made. A player should be replaced when, for example, the removed player voluntarily left the UGS, a network connection to the removed player was lost, and/or when the team from which the removed player should have a replacement player. If the removed player should be replaced, in an operation <b>314</b>, a new player may be selected and added to the UGS.</p><p id="p-0114" num="0113">If a player should not be replaced, processing may proceed to an operation <b>316</b>, in which a determination of whether any players remain in the UGS may be made. If players remain in the UGS, processing may return to operation <b>304</b>. If no more players remain in the UGS (or no players have expressed interest in remaining in the UGS), the UGS may be terminated in an operation <b>318</b>. Terminating a UGS may include compiling scores for all players who participated in the UGS and communicating the scores to those players or otherwise making the scores available through one or more game interfaces.</p><p id="p-0115" num="0114">Exemplary Process for Providing an Adjustment Feature</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an exemplary process for providing an adjustment feature to players in a mismatched gameplay session, according to an implementation of the invention.</p><p id="p-0117" num="0116">In an operation <b>402</b>, a set of players may be matched for a UGS and the UGS may be initiated.</p><p id="p-0118" num="0117">In an operation <b>404</b>, scores for one or more players may be determined during a UGS. For example, scores of individual players and/or team of players may be tallied and compared to an opposing player or opposing team of players. The scores may be measured based on one or more performance metrics (e.g., number of kills in a shooter game, lap times in a racing game, etc.).</p><p id="p-0119" num="0118">In an operation <b>406</b>, a determination of whether a player and/or team are mismatched may be made. A mismatch may occur when a performance gap between the player and/or team and an opposing player and/or team exists. In some instances, a mismatch may be deemed to occur when the performance gap exceeds a threshold value. The performance gap may be determined based on a comparison of the scores for a player and/or team and an opposing player and/or team. If no mismatch exists, processing may return to operation <b>404</b>, where one or more players are scored.</p><p id="p-0120" num="0119">If a mismatch exists, in an operation <b>408</b>, an adjustment feature may be identified. An adjustment feature may include an advantage provided to a losing player and/or team (e.g., a player and/or team having a lower score) and/or a disadvantage provided to a winning player and/or team (e.g., a player and/or team having a higher score).</p><p id="p-0121" num="0120">In an operation <b>410</b>, the adjustment feature may be applied during a UGS. Processing may return to operation <b>404</b>, in which players are scored. In this manner, the leveling process may be iterative in that a performance gap and whether a mismatch occurs are periodically determined throughout the UGS. In other implementations, the adjustment feature may be applied only once during a given UGS.</p><p id="p-0122" num="0121">Exemplary Process for Initiating and Extending a BGS</p><p id="p-0123" num="0122"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an exemplary process for initiating and extending a BGS, according to an implementation of the invention.</p><p id="p-0124" num="0123">In an operation <b>502</b>, a BGS may be initiated. A bounded gameplay session may be terminated after a predefined condition has occurred, such as a passage of a predefined time (e.g., a ten minute game session) or achievement of a predefined objective (e.g., a certain number of kills).</p><p id="p-0125" num="0124">In an operation <b>504</b>, players may be scored individually and/or as a team. Such scoring may be cumulative for the BGS. For example, the score may include a cumulative number of kills made by a player during the entire BGS.</p><p id="p-0126" num="0125">In an operation <b>506</b>, a determination of whether a BGS terminating event has occurred may be made. A BGS terminating event may include the passage of a predefined time or achievement of a predefined objective.</p><p id="p-0127" num="0126">If a BGS terminating event has occurred, in an operation <b>508</b>, a determination of whether one or more players wish to continue the BGS may be made. For instance, each player playing in the BGS may be prompted to indicate whether they wish for the BGS to continue.</p><p id="p-0128" num="0127">If at least one player wishes to continue playing, the BGS may be extended by a predefined time (e.g., continue gameplay for five more minutes) or by a predefined objective (e.g., continue gameplay until fifty more kills occur) in an operation <b>510</b>. Only those players wishing to extend gameplay may continue to play in the extended BGS. Processing may then return to operation <b>504</b>.</p><p id="p-0129" num="0128">However, if not all players have elected to continue playing in the extended BGS, scoring may be switched to a UGS-style scoring mechanism, in which a time-based or other parameter is applied to player scores. When the extended BGS is terminated, separate scores may be reported for the standard (non-extended) BGS and for the extended BGS. In this manner, players in the standard BGS may be scored as usual, while players participating in the extended BGS may be separately scored according to a UGS-style scoring mechanism as well.</p><p id="p-0130" num="0129">If too few players wish to continue playing, the BGS may be terminated in an operation <b>512</b>.</p><p id="p-0131" num="0130">Other implementations, uses and advantages of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. The specification should be considered exemplary only, and the scope of the invention is accordingly intended to be limited only by the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method of providing continuous gameplay in a multiplayer video game through an unbounded gameplay session that runs continuously until all players have exited the unbounded gameplay session, the method being implemented in a host computer having one or more physical processors programmed with computer program instructions that, when executed by the one or more physical processors, cause the host computer system to perform the method, the method comprising:<claim-text>initiating, by the host computer, the unbounded gameplay session with a set of matched players;</claim-text><claim-text>adding, by the host computer, a new player to the unbounded gameplay session after the unbounded gameplay session has commenced;</claim-text><claim-text>generating, by the host computer, a first score for at least a first player of the set of matched players and a second score for the new player, wherein the first score and the second score are each based on a time-based parameter;</claim-text><claim-text>determining, by the host computer, whether a number player remaining in the unbounded gameplay session is below a threshold number of players; and</claim-text><claim-text>terminating, by the host computer, the unbounded gameplay session responsive to a determination that the number of players remaining in the unbounded gameplay session is below the threshold number of players.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method further comprising:<claim-text>removing, by the host computer, the first player from the unbounded gameplay session;</claim-text><claim-text>selecting, by the host computer, a replacement player to replace the first player based on one or more matchmaking parameters; and</claim-text><claim-text>adding, by the host computer, the replacement player to play in the unbounded gameplay session.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, the method further comprising:<claim-text>receiving, by the host computer, a request from the first player to rejoin the unbounded gameplay session; and</claim-text><claim-text>adding, by the host computer, the first player to play in the unbounded gameplay session responsive to the request.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating the first score comprises:<claim-text>determining, by the host computer, a performance of the first player, wherein the first score is based on the performance.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein generating the first score comprises:<claim-text>determining, by the host computer, a virtual item used by the first player; and</claim-text><claim-text>associating, by the host computer, the virtual item with the performance, wherein the first score is correlated with the virtual item.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein generating the first score comprises:<claim-text>determining, by the host computer, a second player playing with the first player; and</claim-text><claim-text>associating, by the host computer, the second player with the performance, wherein the first score is correlated with the second player.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method further comprising:<claim-text>determining, by the host computer, a first team score for a first team of players from among players participating in the unbounded gameplay session and a second team score for a second team of players from among the players participating in the unbounded gameplay session, wherein the second team score is lower than the first team score;</claim-text><claim-text>determining, by the host computer, a performance gap based on the first team score and the second team score;</claim-text><claim-text>determining, by the host computer, a mismatch based on the performance gap; and</claim-text><claim-text>identifying, by the host computer, an adjustment feature based on the mismatch.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the adjustment feature comprises an advantage for the second team.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the advantage comprises an additional player for the second team, the method further comprising:<claim-text>identifying, by the host computer, the additional player to be added to the second team; and</claim-text><claim-text>adding, by the host computer, the additional player to play with the second team in the unbounded gameplay session.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the adjustment feature comprises a disadvantage for the first team.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein determining the mismatch comprises:<claim-text>determining that the mismatch is not sufficiently large to encourage an uneven match, wherein the adjustment feature is identified to generate the uneven match.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein determining the mismatch comprises:<claim-text>determining that the mismatch is too large to encourage an even match, wherein the adjustment feature is identified to generate the even match.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the time-based parameter comprises a rate such that the first score and the second score each comprises a performance per unit of time.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the time-based parameter comprises a latest time interval such that the first score and the second score each comprises a performance within the latest time interval.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A system for providing continuous gameplay in a multiplayer video game through an unbounded gameplay session that runs continuously until all players have exited the unbounded gameplay session, the system comprising:<claim-text>a host computer comprising one or more physical processors programmed with one or more computer program instructions which, when executed, programs the computer system to:</claim-text><claim-text>initiate the unbounded gameplay session with a set of matched players;</claim-text><claim-text>add a new player to the unbounded gameplay session after the unbounded gameplay session has commenced;</claim-text><claim-text>generate a first score for at least a first player of the set of matched players and a second score for the new player, wherein the first score and the second score are each based on a time-based parameter;</claim-text><claim-text>determine whether a number of players remaining in the unbounded gameplay session falls below a threshold number of players; and</claim-text><claim-text>terminate the unbounded gameplay session responsive to a determination that the number of players remaining in the unbounded gameplay session falls below the threshold number of players.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the host computer system is further programmed to:<claim-text>remove the first player from the unbounded gameplay session;</claim-text><claim-text>select a replacement player to replace the first player based on one or more matchmaking parameters; and</claim-text><claim-text>add the replacement player to play in the unbounded gameplay session.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the host computer system is further programmed to:<claim-text>receive a request from the first player to rejoin the unbounded gameplay session; and</claim-text><claim-text>add the first player to play in the unbounded gameplay session responsive to the request.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein to generate the first score, the host computer system is further programmed to:<claim-text>determine a performance of the first player, wherein the first score is based on the performance.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein to generate the first score, the host computer system is further programmed to:<claim-text>determine a virtual item used by the first player; and</claim-text><claim-text>associate the virtual item with the performance, wherein the first score is correlated with the virtual item.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein to generate the first score, the host computer system is further programmed to:<claim-text>determine a second player playing with the first player; and</claim-text><claim-text>associate the second player with the performance, wherein the first score is correlated with the second player.</claim-text></claim-text></claim></claims></us-patent-application>