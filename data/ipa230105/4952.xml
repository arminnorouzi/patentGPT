<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004953A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004953</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941346</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>34</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>354</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>321</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>352</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>409</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS TO PERFORM CONTACTLESS CARD ACTIVATION</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17684864</doc-number><date>20220302</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17941346</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17132473</doc-number><date>20201223</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11461764</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17684864</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16731178</doc-number><date>20191231</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10909527</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17132473</doc-number></document-id></child-doc></relation></continuation><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>16205119</doc-number><date>20181129</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10581611</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16731178</doc-number></document-id></child-doc></relation></continuation-in-part><us-provisional-application><document-id><country>US</country><doc-number>62740352</doc-number><date>20181002</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Capital One Services, LLC</orgname><address><city>McLean</city><state>VA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>RULE</last-name><first-name>Jeffrey</first-name><address><city>Chevy Chase</city><state>MD</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>HERRINGTON</last-name><first-name>Daniel</first-name><address><city>New York</city><state>NY</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>ILINCIC</last-name><first-name>Rajko</first-name><address><city>Annandale</city><state>VA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Capital One Services, LLC</orgname><role>02</role><address><city>McLean</city><state>VA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Example embodiments relate to performing activation techniques for contactless cards. For example, embodiments may include performing a near-field communication (NFC) exchange with a contactless card, processing a message comprising data to activate the contactless card, communicating the data to a server to activate the contactless card; and receiving a response from the server, the response to indicate whether the contactless card is successfully activated or not successfully activated.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="234.95mm" wi="137.92mm" file="US20230004953A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="202.69mm" wi="168.06mm" file="US20230004953A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="89.24mm" wi="137.75mm" file="US20230004953A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="173.82mm" wi="133.18mm" file="US20230004953A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="231.73mm" wi="146.56mm" file="US20230004953A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="216.49mm" wi="169.76mm" file="US20230004953A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="195.83mm" wi="135.64mm" orientation="landscape" file="US20230004953A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="185.59mm" wi="166.88mm" file="US20230004953A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="141.22mm" wi="154.26mm" file="US20230004953A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="197.19mm" wi="140.63mm" orientation="landscape" file="US20230004953A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="191.52mm" wi="109.47mm" file="US20230004953A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="251.04mm" wi="170.77mm" file="US20230004953A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="210.48mm" wi="148.34mm" orientation="landscape" file="US20230004953A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="213.28mm" wi="97.28mm" file="US20230004953A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="225.47mm" wi="166.37mm" file="US20230004953A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="108.37mm" wi="144.44mm" file="US20230004953A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/684,864 filed on Mar. 2, 2022, which is a continuation of U.S. patent application Ser. No. 17/132,473, filed on Dec. 23, 2020, which is a continuation of U.S. patent application Ser. No. 16/731,178, filed Dec. 31, 2019, which is a continuation-in-part of U.S. patent application Ser. No. 16/205,119, filed on Nov. 29, 2018 (now U.S. Pat. No. 10,581,611), which claims priority from U.S. Provisional Application No. 62/740,352, filed on Oct. 2, 2018, the disclosures of which are incorporated herein by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The present disclosure relates to authentication and authorization, and more particularly, to system and methods for reissuing or otherwise altering information stored on contactless cards.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Data breaches that reveal customer payment information are increasingly common and becoming more extensive, with many millions of credit card numbers revealed in a given breach. These data breaches may be caused when an illicit actor breaks into computing systems associated with a major department store, bank, or credit card issuer, and steals a large amount of payment data (e.g., including credit card numbers, expiration dates, etc.)</p><p id="p-0005" num="0004">Conventionally, a credit card issuer might respond to such a breach by reissuing the affected cards. This involves assigning new credit card numbers to a user's account, generating a new physical card with the new number embossed on it, writing a new magnetic stripe, and placing the card in the mail. When the breach is widespread (involving a large number of cards), it can take several weeks or months for users to receive their new cards. In the interim, they may not be able to use their account to make payments, since it is likely that the card number was voided at the time the breach was discovered (in order to prevent unauthorized access to the account). Clearly, this can be problematic for a customer.</p><p id="p-0006" num="0005">The reissue process can also be expensive from the perspective of the card issuer, which often absorbs the cost of generating and mailing the new cards. Depending on the quality of the card stock, it may cost between $2 and $30 to create a new card. If the cards need to be reissued on an expedited basis, the additional processing costs may run to $10 per card. When several million card numbers have been compromised, the resulting reissue cost can run to tens of millions of dollars.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> depicts an environment suitable for use with exemplary embodiments.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> depicts an example of a contactless card having a physical token.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b>C</figref> depicts the structure of an exemplary physical token.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> depicts an exemplary interface for a mobile application associated with an owner of a contactless card.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> depicts an exemplary interface when the physical token is read by a reader on the owner's mobile device.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b>C</figref> depicts an example of data exchange between a contactless card and a client device.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b>D</figref> depicts an exemplary data structure suitable for use with exemplary embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart illustrating key operations according to an example embodiment.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram of a key system according to an example embodiment.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart of a method of generating a cryptogram according to an example embodiment.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is a flowchart illustrating a process of key diversification according to an example embodiment.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is a data flow diagram showing an exchange of communications in an exemplary embodiment.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>6</b>C</figref> is a flowchart depicting card-side logic for changing an identifier associated with a contactless card.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an exemplary computing system suitable for use with exemplary embodiments.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts an exemplary network environment suitable for use with exemplary embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION OF EXAMPLE EMBODIMENTS</heading><p id="p-0022" num="0021">Exemplary embodiments provide techniques for securely reissuing or otherwise altering the information stored on a contactless card based on a remote command. Accordingly, the number associated with the card can be quickly changed so that the card can continue to be used with the new number. If the card has the number printed or embossed on its face, then the printed number (and/or a number stored on a magnetic stripe) may not match the number stored on the contactless chip; nonetheless, the card can be used for contactless payments until a new card with a new number can be issued. In some embodiments, the card may include an electronic ink (e-ink) display that displays the number; in this case, the e-ink display may also be updated when the number stored on the card's contactless chip is updated.</p><p id="p-0023" num="0022">The card's chip may include one or more applets that are activated under certain circumstances. For example, when making a payment with the card, a payment applet may be activated and may supply the card's number to a requesting device. In order to use the card with a new number, this payment applet may need to be updated, but for security purposes the payment applet may be restricted from communicating directly with an external source. For this purpose, the chip may include a second encryption and authorization applet responsible for communicating card information to and from external sources. The second applet may perform authentication and may ensure that information transmitted from the payment applet is done so in a secure way (e.g., using encryption). The second applet may also be responsible for performing validation functions (e.g., validating the counter stored on the card), as described in more detail below. According to exemplary embodiments, this second applet may be made to serve as a bridge between the external source and the payment applet, causing the number on the payment applet to be rewritten based on secure, internal (to the chip) communications.</p><p id="p-0024" num="0023">In some cases, the second applet may be directly instructed to overwrite the card's number with a new number. For example, a mobile device running the Android operating system can issue a near field communications (NFC) write command to the second applet to trigger the second applet to issue a rewrite command to the payment applet. However, some devices may not support such communications (Apple's iOS is one such example). Accordingly, the second applet may also or alternatively be configured to recognize a predefined pattern that will cause the rewrite command to be issued. For example, a user may tap their contactless card to an NFC reader five times in less than a minute. Because tapping the card to the NFC reader triggers the authentication and encryption operations of the second applet, the second applet can be preconfigured to recognize this predefined pattern and issue the rewrite command in response.</p><p id="p-0025" num="0024">In various embodiments, the card may have capabilities for limiting the number of rewrites of the number that may be performed (e.g., over the life of the card, or during a particular period of time). To that end, the card may maintain a counter of the number of rewrites, and may further store a value representing a maximum number of allowable rewrites. If a request to rewrite the number is received and the number of total requests (previous and current) exceeds the stored maximum value, the rewrite may be canceled.</p><p id="p-0026" num="0025">The following description of embodiments provides non-limiting representative examples referencing numerals to particularly describe features and teachings of different aspects of the invention. The embodiments described should be recognized as capable of implementation separately, or in combination, with other embodiments from the description of the embodiments. The description of embodiments should facilitate understanding of the invention to such an extent that other implementations, not specifically covered but within the knowledge of a person of skill in the art having read the description of embodiments, would be understood to be consistent with an application of the invention.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates a data transmission environment <b>100</b> according to an example embodiment. As further discussed below, system <b>100</b> may include contactless card <b>130</b>, a client device <b>104</b>, a network <b>114</b>, and a server <b>116</b> maintained by the provider of the contactless card <b>130</b>. Although <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates a particular configuration of components, one of ordinary skill in the art will understand that other configurations including more or fewer components, or components in another configuration, may be used.</p><p id="p-0028" num="0027">The environment <b>100</b> may include one or more contactless cards <b>130</b>, which are further explained below with reference to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. In some examples, a contactless card <b>130</b> may be in wireless communication, for example NFC communication, with the client device <b>104</b>. The contactless card may include a contactless chip (see <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>). The contactless chip may maintain a copy of the primary account number (PAN) associated with the card <b>130</b>, which may be read by a reader (such as the NFC reader <b>110</b>).</p><p id="p-0029" num="0028">The environment <b>100</b> may include a client device <b>104</b>, which may be a network-enabled computer. As referred to herein, a network-enabled computer may include, but is not limited to: e.g., a computer device, or communications device including, e.g., a server, a network appliance, a personal computer (PC), a workstation, a mobile device, a phone, a handheld PC, a personal digital assistant (PDA), a thin client, a fat client, an Internet browser, or other device. The client device <b>104</b> also may be a mobile device; for example, a mobile device may include an iPhone, iPod, iPad from Apple&#xae; or any other mobile device running Apple's iOS operating system, any device running Microsoft's Windows&#xae; Mobile operating system, and/or any other smartphone or like wearable mobile device.</p><p id="p-0030" num="0029">The client device <b>104</b> and/or the contactless card <b>130</b> may be associated with a user <b>102</b>, which may be the owner of the contactless card. The user <b>102</b> may define credentials for accessing a mobile application on the client device <b>104</b>, which may be an application associated with a service provider of the contactless card.</p><p id="p-0031" num="0030">In various examples according to the present disclosure, the client device <b>104</b> of the environment <b>100</b> may execute one or more applications, such as software applications. The software applications may enable network communications with one or more components of the environment <b>100</b> and may transmit and/or receive data. Among other computer-executable logic, the client device <b>104</b> may include client-side reissue logic <b>112</b> (such as the logic depicted in more detail in connection with <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>).</p><p id="p-0032" num="0031">The client device <b>104</b> may be in communication with one or more servers <b>116</b> via one or more networks <b>114</b>. For example, the client device <b>104</b> and may operate as a front-end to a card provider server <b>116</b>, which is responsible for maintaining security for the contactless card <b>130</b>. In some embodiments, the card provider server <b>116</b> may also authorize transactions conducted via the card <b>130</b>. The client device <b>104</b> may transmit, for example from a mobile device application executing on client device <b>104</b>, one or more requests to the server <b>116</b>. Similarly, the server <b>116</b> can communicate with the client device <b>104</b> to cause the client device <b>104</b> to begin the card reissue process, such as when a data breach occurs.</p><p id="p-0033" num="0032">To that end, the server <b>116</b> may instruct the client device <b>104</b> to change the PAN associated with the user <b>102</b>'s card <b>130</b>. The client device <b>104</b> may receive the instruction and inform the user <b>102</b> (e.g., via a display such as the one depicted in <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>B</figref>) that the card's number is being reissued. The client device <b>104</b> may cause one or more applets stored on the card <b>130</b> to be activated, such as by an express command (e.g., an NFC write command) or by requesting that the user <b>102</b> tap the card <b>130</b> against the NFC reader <b>110</b> in a predetermined pattern (e.g., a predetermined number of times, a predetermined rate over a period of time, in a predetermined pattern, etc.).</p><p id="p-0034" num="0033">The instruction to change the PAN may be sent from the server <b>116</b> on an individualized basis (e.g., when a single user <b>102</b>'s card <b>130</b> is compromised), or a reissue instruction may be broadcast to a group of recipients (as might be done in the event of a large data breach).</p><p id="p-0035" num="0034">In some embodiments, the client <b>104</b> (or another device instructing the card <b>130</b> to change the PAN) may issue a change instruction to the card <b>130</b> in coordination with the server <b>116</b>. For example, the server <b>116</b> may furnish a new PAN to be used on the card <b>130</b>, which the client <b>104</b> may communicate to the communication logic/applet on the card <b>130</b>. In another example, the payment logic/applet on the card <b>130</b> may be pre-programmed with multiple PANs, and the server <b>116</b> may identify which PANs to use (or, if the PANs are arranged in a list in the memory of the card, the server <b>116</b> may instruct the payment logic/applet to skip over a certain number of options and select the n<sup>th </sup>PAN in the list). In another example, the payment logic/applet may be capable of deriving a new PAN from the old PAN (or another identifier stored on the card, such as an identifier associated with the user <b>102</b> or an account of the user at a financial institution), and the server <b>116</b> may provide instructions relating to how to derive the new PAN or may provide seed numbers to be used in the generation of the new PAN.</p><p id="p-0036" num="0035">If the client device <b>104</b> is capable of issuing a write request directly to the card <b>130</b>, the write request may include information received from the server (e.g., the new PAN, the number of PANs in the list to skip, the generation technique for deriving the new PAN, or the seed for the new PAN). If the client device <b>104</b> cannot issue such a write request, then the card <b>130</b> can still coordinate with the server <b>116</b>, albeit potentially in a more limited way. For example, if the communication logic/applet on the card <b>130</b> is configured to recognize a predetermined tapping pattern as an instruction to change the PAN, as noted above, then different patterns may be associated with different change instructions. For example, if the user taps the card <b>130</b> against the NFC reader <b>110</b> five times in less than a minute, then this may be interpreted as an instruction to advance to the next PAN stored in the list. On the other hand, if the user taps the card <b>130</b> only four times against the NFC reader <b>110</b> in less than a minute, then this may be interpreted as an instruction to jump ahead two PANs in the list. The instruction from the server <b>116</b> to the client device <b>104</b> may identify the particular pattern to be used, and the client device <b>104</b> may display an appropriate instruction on a user interface. If multiple different patterns are programmed into the communication logic/applet on the card <b>130</b>, the device <b>104</b> may request that the user confirm the pattern to ensure that the correct pattern is used (e.g., by asking the user to tap in the predefined pattern, waiting momentarily, and then asking that the user confirm the change by tapping in the same predefined pattern again).</p><p id="p-0037" num="0036">Once the PAN is changed, the communication logic/applet on the card <b>130</b> may report a success back to the server <b>116</b>. The success may identify the new PAN that has been selected (either directly, by reporting the PAN or an encrypted version of the PAN, or indirectly, such as by transmitting a hash of the PAN or subset of the PAN). If the updated PAN does not match the PAN expected by the server <b>116</b>, then the PAN may be voided and the process may be repeated. Alternatively, the server <b>116</b> can simply accept the PAN as reported by the card <b>130</b>.</p><p id="p-0038" num="0037">In some examples, the server <b>116</b> may include one or more processors, which are coupled to memory. The server <b>116</b> may be configured as a central system, server or platform to control and call various data at different times to execute a plurality of workflow actions.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates one or more contactless cards <b>130</b>, which may comprise a payment card, such as a credit card, debit card, or gift card, issued by a service provider <b>132</b> displayed on the front or back of the card <b>130</b>. In some examples, the contactless card <b>130</b> is not related to a payment card, and may comprise, without limitation, an identification card. In some examples, the payment card may comprise a dual interface contactless payment card. The contactless card <b>130</b> may comprise a substrate <b>134</b>, which may include a single layer or one or more laminated layers composed of plastics, metals, and other materials. Exemplary substrate materials include polyvinyl chloride, polyvinyl chloride acetate, acrylonitrile butadiene styrene, polycarbonate, polyesters, anodized titanium, palladium, gold, carbon, paper, and biodegradable materials. In some examples, the contactless card <b>130</b> may have physical characteristics compliant with the ID-1 format of the ISO/IEC 7810 standard, and the contactless card may otherwise be compliant with the ISO/IEC 14443 standard. However, it is understood that the contactless card <b>130</b> according to the present disclosure may have different characteristics, and the present disclosure does not require a contactless card to be implemented in a payment card.</p><p id="p-0040" num="0039">The contactless card <b>130</b> may also include identification information <b>136</b> displayed on the front and/or back of the card. In some embodiments, the identification information <b>136</b> may be printed or embossed directly on the card. Optionally, an e-ink display <b>149</b> (or another type of rewritable display, employing technology such as a liquid crystal diode) may be provided for displaying some or all of the identification information <b>136</b>. For example, the e-ink display <b>149</b> may display the card number associated with the card. The e-ink display <b>149</b> may be powered by a magnetic field, such as a magnetic field emanating from the client device <b>104</b>. The antennae of the card <b>130</b> (e.g., the antenna of the contact pad <b>138</b>, discussed below) may collect power from the magnetic field and power the e-ink display <b>149</b> when the card <b>130</b> is in close proximity to the client device <b>104</b>. This allows the e-ink display <b>149</b> to be changed to match the new number provisioned to the applet on the card <b>130</b> by the client device <b>104</b>, as discussed herein.</p><p id="p-0041" num="0040">The contactless card <b>130</b> may further include a contact pad <b>138</b>. The contact pad <b>138</b> may be configured to establish contact with another communication device, such as a user device, smart phone, laptop, desktop, or tablet computer. The contactless card <b>130</b> may also include processing circuitry, antenna and other components not shown in <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>. These components may be located behind the contact pad <b>138</b> or elsewhere on the substrate <b>134</b>. The contactless card <b>130</b> may also include a magnetic strip or tape, which may be located on the back of the card (not shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>).</p><p id="p-0042" num="0041">As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>, the contact pad <b>138</b> of <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> may include processing circuitry <b>140</b> for storing and processing information, including a microprocessor <b>142</b> and a memory <b>144</b>. It is understood that the processing circuitry <b>140</b> may contain additional components, including processors, memories, error and parity/CRC checkers, data encoders, anticollision algorithms, controllers, command decoders, security primitives and tamperproofing hardware, as necessary to perform the functions described herein.</p><p id="p-0043" num="0042">The memory <b>144</b> may be a read-only memory, write-once read-multiple memory or read/write memory, e.g., RAM, ROM, and EEPROM, and the contactless card <b>500</b> may include one or more of these memories. A read-only memory may be factory programmable as read-only or one-time programmable. One-time programmability provides the opportunity to write once then read many times. A write once/read-multiple memory may be programmed at a point in time after the memory chip has left the factory. Once the memory is programmed, it may not be rewritten, but it may be read many times. A read/write memory may be programmed and re-programed many times after leaving the factory. It may also be read many times.</p><p id="p-0044" num="0043">The memory <b>144</b> may be configured to store one or more applets <b>146</b>, one or more counters <b>108</b>, and a customer identifier <b>148</b>. The one or more applets <b>146</b> may comprise one or more software applications configured to execute on one or more contactless cards, such as Java Card applet. However, it is understood that applets <b>146</b> are not limited to Java Card applets, and instead may be any software application operable on contactless cards or other devices having limited memory. The one or more counters <b>108</b> may comprise a numeric counter sufficient to store an integer. The customer identifier <b>148</b> may comprise a unique alphanumeric identifier assigned to a user of the contactless card <b>130</b>, and the identifier may distinguish the user of the contactless card from other contactless card users. In some examples, the customer identifier <b>148</b> may identify both a customer and an account assigned to that customer and may further identify the contactless card associated with the customer's account.</p><p id="p-0045" num="0044">The applets <b>146</b> may include a payment applet configured to conduct payment transactions with the card <b>130</b>. The payment applet may be responsible for maintaining, or may make use of, the card's Primary Account Number (PAN), which may be communicated from the card as part of a transaction. The applets <b>146</b> may further include an authentication and/or encryption applet that is invoked when an outside source (such as the client device <b>104</b>, a point of sale terminal, an automatic teller machine, etc.) attempts to establish communication with the card <b>130</b> (such as when the contact pad <b>138</b> is placed against, or in proximity to, a reader such as the NFC reader <b>110</b>). The payment applet may not communicate directly with outside sources (i.e., sources external to the processing circuitry <b>140</b>), but may be capable of securely communicating with another applet on the processing circuitry <b>140</b>, such as the authentication and encryption applet. Information may be passed from the payment applet to the authentication and encryption applet for communication off-card.</p><p id="p-0046" num="0045">Optionally, the payment applet may come pre-loaded (e.g., at the time the card is issued) with predefined PANs, one of which is designated as the currently active PAN and the remainder of which are held in reserve. When the applet is called upon to issue a new PAN, the applet may select the next PAN in the list and designate it as the active PAN. Alternatively, the applet may randomly generate a new PAN in accordance with PAN generation rules, or may generate a new PAN based off of the previous PAN.</p><p id="p-0047" num="0046">The processor and memory elements of the foregoing exemplary embodiments are described with reference to the contact pad, but the present disclosure is not limited thereto. It is understood that these elements may be implemented outside of the pad <b>138</b> or entirely separate from it, or as further elements in addition to processor <b>142</b> and memory <b>144</b> elements located within the contact pad <b>138</b>.</p><p id="p-0048" num="0047">In some examples, the contactless card <b>130</b> may comprise one or more antennas <b>150</b>. The one or more antennas <b>150</b> may be placed within the contactless card <b>130</b> and around the processing circuitry <b>140</b> of the contact pad <b>138</b>. For example, the one or more antennas <b>150</b> may be integral with the processing circuitry <b>140</b> and the one or more antennas <b>150</b> may be used with an external booster coil. As another example, the one or more antennas <b>150</b> may be external to the contact pad <b>138</b> and the processing circuitry <b>142</b>.</p><p id="p-0049" num="0048">In an embodiment, the coil of contactless card <b>130</b> may act as the secondary of an air core transformer. The terminal may communicate with the contactless card <b>130</b> by cutting power or amplitude modulation. The contactless card <b>130</b> may infer the data transmitted from the terminal using the gaps in the contactless card's power connection, which may be functionally maintained through one or more capacitors. The contactless card <b>130</b> may communicate back by switching a load on the contactless card's coil or load modulation. Load modulation may be detected in the terminal's coil through interference.</p><p id="p-0050" num="0049">As explained above, the contactless cards <b>130</b> may be built on a software platform operable on smart cards or other devices having limited memory, such as JavaCard, and one or more or more applications or applets may be securely executed. Applets may be added to contactless cards to provide a one-time password (OTP) for multifactor authentication (MFA) in various mobile application-based use cases. Applets may be configured to respond to one or more requests, such as near field data exchange (NDEF) requests, from a reader, such as a mobile NFC reader, and produce an NDEF message that comprises a cryptographically secure OTP encoded as an NDEF text tag.</p><p id="p-0051" num="0050">As noted above, exemplary transactions may validate a transaction requested of an account associated with the contactless card via the logic <b>112</b> executing on the client device <b>104</b>. <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>B</figref> depict exemplary interfaces that may be presented on the client device <b>104</b> in response to the logic.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> depicts an initial interface <b>200</b> for an application associated with the card (e.g., an application provided by the card provider), which may be displayed on the client device <b>104</b> when the client device <b>104</b> receives an instruction from the server <b>116</b> to reissue the card or otherwise reprovision or alter the information stored on the card. The interface <b>200</b> includes a message area <b>202</b> that displays information about the reissuance of the card information. This message area <b>202</b> may explain, for example, that the user's card has been reissued, why the reissue has occurred, and the next steps required for the user to change the card's information.</p><p id="p-0053" num="0052">The interface <b>200</b> may further include an interactable element <b>204</b>. In order to change the information stored on the card, the user may optionally first be required to select the interactable element <b>204</b> in order to verify the user's desire to reissue the card number (so that the user does not accidentally overwrite the card information by placing the card in proximity with the NFC reader).</p><p id="p-0054" num="0053">Upon selecting the interactable element, the user can rewrite the PAN or other information stored on the card <b>130</b> by bringing the contact pad <b>138</b> of the card's chip in proximity to the device <b>104</b>'s NFC reader, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. When the card is brought into proximity with the NFC reader and the applets on the card confirm that the card's PAN has been successfully changed, a confirmation message <b>206</b> may be displayed indicating that the card's information has been successfully rewritten.</p><p id="p-0055" num="0054">As an alternative to the procedure shown in <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>B</figref>, the user may be prompted (in the interface <b>200</b>) to tap their card on the client device's NFC reader in a predetermined pattern. The authentication and encryption applet may register the predetermined pattern</p><p id="p-0056" num="0055">Although <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>B</figref> depict the card <b>130</b> being rewritten when brought into proximity with a mobile client device <b>104</b>, it is also contemplated that the card could be rewritten by an automated teller machine, point of sale terminal, or any other device having a suitable transmitter (e.g., an NFC transmitter) for communicating with the contact pad <b>138</b>.</p><p id="p-0057" num="0056">As shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, when a new PAN is written to the chip on the contactless card, the new card number may not match the number printed or embossed on the card, or the information stored on the card's magnetic stripe. In this case, it may still be desirable to have a new physical card created and sent to the user so that the card's several payment options can all be used. Nonetheless, the contactless payment functionality of the card can still be used with the information stored on the chip while the card is being sent to the user. If the card includes an e-ink display, as noted above, the e-ink display may be updated at the time the PAN is rewritten in order to reflect the new card number. In this case, it may not be necessary to reissue the physical card, especially if the card does not include a magnetic stripe or if the user primarily uses the card to make contactless payments.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>2</b>C</figref> is a timing diagram illustrating an example sequence for providing authenticated access according to one or more embodiments of the present disclosure. A system may include a contactless card <b>130</b> and a client device <b>104</b>, which may include an application (which may include the logic <b>112</b>) and a processor.</p><p id="p-0059" num="0058">At <b>202</b>, the application communicates with the contactless card <b>130</b> (e.g., after being brought near the contactless card <b>130</b>). Communication between the application and the contactless card <b>130</b> may involve the contactless card <b>130</b> being sufficiently close to a card reader (not shown) of the client device <b>104</b> to enable NFC data transfer between the application and the contactless card <b>130</b>.</p><p id="p-0060" num="0059">At step <b>204</b>, after communication has been established between client device <b>104</b> and contactless card <b>130</b>, the contactless card <b>130</b> generates a message authentication code (MAC) cryptogram. In some examples, this may occur when the contactless card <b>130</b> is read by an application hosting the logic <b>112</b>. In particular, this may occur upon a read, such as an NFC read, of a near field data exchange (NDEF) tag, which may be created in accordance with the NFC Data Exchange Format. For example, a reader, such as the logic <b>112</b>, may transmit a message, such as an applet select message, with the applet ID of an NDEF producing applet. Upon confirmation of the selection, a sequence of select file messages followed by read file messages may be transmitted. For example, the sequence may include &#x201c;Select Capabilities file&#x201d;, &#x201c;Read Capabilities file&#x201d;, and &#x201c;Select NDEF file&#x201d;. At this point, a counter value maintained by the contactless card <b>130</b> may be updated or incremented, which may be followed by &#x201c;Read NDEF file.&#x201d; At this point, the message may be generated which may include a header and a shared secret. Session keys may then be generated. The MAC cryptogram may be created from the message, which may include the header and the shared secret. The MAC cryptogram may then be concatenated with one or more blocks of random data, and the MAC cryptogram and a random number (RND) may be encrypted with the session key. Thereafter, the cryptogram and the header may be concatenated, and encoded as ASCII hex and returned in NDEF message format (responsive to the &#x201c;Read NDEF file&#x201d; message).</p><p id="p-0061" num="0060">In some examples, the MAC cryptogram may be transmitted as an NDEF tag, and in other examples the MAC cryptogram may be included with a uniform resource indicator (e.g., as a formatted string).</p><p id="p-0062" num="0061">In some examples, the logic <b>112</b> may be configured to transmit a request to the contactless card <b>130</b>, the request comprising an instruction to generate a MAC cryptogram.</p><p id="p-0063" num="0062">At step <b>206</b>, the contactless card <b>130</b> sends the MAC cryptogram to the logic <b>112</b>. In some examples, the transmission of the MAC cryptogram occurs via NFC, however, the present disclosure is not limited thereto. In other examples, this communication may occur via Bluetooth, Wi-Fi, or other means of wireless data communication.</p><p id="p-0064" num="0063">At step <b>208</b>, the logic <b>112</b> communicates the MAC cryptogram to the processor.</p><p id="p-0065" num="0064">At step <b>210</b>, the processor verifies the MAC cryptogram pursuant to an instruction from the logic <b>112</b>. For example, the MAC cryptogram may be verified, as explained below.</p><p id="p-0066" num="0065">In some examples, verifying the MAC cryptogram may be performed by a device other than client device <b>104</b>, such as a server <b>116</b> in data communication with the client device <b>104</b>. For example, the processor may output the MAC cryptogram for transmission to the server <b>116</b>, which may verify the MAC cryptogram.</p><p id="p-0067" num="0066">In some examples, the MAC cryptogram may function as a digital signature for purposes of verification. Other digital signature algorithms, such as public key asymmetric algorithms, e.g., the Digital Signature Algorithm and the RSA algorithm, or zero knowledge protocols, may be used to perform this verification.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>2</b>D</figref> depicts an exemplary technique for generating a protected message <b>230</b> in accordance with exemplary embodiments.</p><p id="p-0069" num="0068">The message <b>230</b> may be configured to deliver information or content from a sender to a recipient. This information or content may be represented by message plaintext <b>234</b> (although the content may optionally be encrypted).</p><p id="p-0070" num="0069">The message plaintext <b>234</b> may be combined with a shared secret <b>232</b>. The shared secret <b>232</b> may be a random number known to both the sender and the recipient. For instance, if the message plaintext <b>234</b> relates to an authentication action for a contactless card as described above, the process of setting up or initializing the card may involve sharing a random number between the chip on the card and the transaction validation server. In one embodiment, the random number may be a 32-bit random number. Alternatively or in addition, a communication session may be set up by the sender and recipient; the process of setting up the communication session may involve sharing a random number between the sender and recipient, and the random number may be used as the shared secret <b>232</b>.</p><p id="p-0071" num="0070">The message plaintext <b>234</b> and the shared secret <b>232</b> may be combined in various ways. In one embodiment, the message plaintext <b>234</b> may be encoded in a format so that it can be multiplied by the shared secret <b>232</b>. The resulting product may then be applied to the MAC algorithm.</p><p id="p-0072" num="0071">When the recipient (e.g. a receiving server) retrieves the combined MAC data, the recipient may consult its version of the shared secret <b>232</b> and may reverse the process used to combine the MAC data with the shared secret (e.g., dividing the combined MAC data and the shared secret <b>232</b> to retrieve the original MAC data).</p><p id="p-0073" num="0072">One of ordinary skill in the art will recognize that other techniques exist for combining two different instances of data, any of which may be suitable for use with exemplary embodiments.</p><p id="p-0074" num="0073">After the message plaintext <b>234</b> and the shared secret <b>232</b> are combined, they may be provided to a MAC algorithm <b>236</b>. The MAC algorithm <b>236</b> may be any suitable MAC algorithm, such as the data authentication algorithm (DAA), cipher block chaining message authentication codes (CBC-MAC), Galois message authentication code (GMAC), and hashed message authentication code (HMAC), among many others.</p><p id="p-0075" num="0074">The MAC algorithm <b>236</b> may operate using a key. In exemplary embodiments, this key may be a first diversified key <b>250</b> created using a diversification algorithm <b>248</b>. The diversification algorithm may operate on the counter <b>108</b> received from the contactless card and a first master key <b>244</b> stored on the contactless card (described in more detail below) to generate the first diversified key <b>250</b>. Using the first diversified key <b>250</b> and the combined shared secret/plaintext, the MAC algorithm <b>236</b> may generate MAC output <b>238</b>.</p><p id="p-0076" num="0075">The MAC output <b>238</b> may optionally be encrypted by an encryption algorithm <b>240</b> to generate an encrypted MAC <b>242</b>. The encryption algorithm <b>240</b> may be any suitable encryption algorithm, such as data encryption standard (DES), TripleDES (3DES), advanced encryption standard (AES), and RSA, among many others.</p><p id="p-0077" num="0076">In some embodiments, the MAC output <b>238</b> may be truncated and/or combined with random data <b>254</b>. For instance, in one embodiment, the beginning of the MAC output <b>238</b> may be discarded, so that (e.g.) only the last 8 bytes are preserved. The remaining portion of the MAC output <b>238</b> may be combined with 8 bytes of randomly generated data <b>254</b>. When the recipient receives the message <b>300</b>, the recipient may decrypt the encrypted MAC <b>242</b> and discard the random data. The recipient may calculate its own version of the MAC, as described below, and may compare the last 8 bytes of the recipient-generated MAC to the data remaining from the encrypted MAC <b>242</b> received as part of the message <b>230</b>.</p><p id="p-0078" num="0077">The encryption algorithm <b>240</b> may operate using a key. In exemplary embodiments, this key may be a second diversified key <b>252</b> created using the diversification algorithm <b>248</b>. The diversification algorithm may operate on the counter <b>108</b> received from the contactless card and a second master key <b>246</b> stored on the contactless card (described in more detail below) to generate the second diversified key <b>252</b>. Using the second diversified key <b>252</b> and the MAC output <b>238</b>, the encryption algorithm <b>240</b> may generate an encrypted MAC <b>232</b>, which may be included in a header of the message <b>230</b>.</p><p id="p-0079" num="0078">The encrypted MAC <b>232</b> may be transmitted along with the message plaintext <b>234</b>. The counter value <b>108</b> may optionally be transmitted as part of the message plaintext <b>234</b>, and may be consulted by the recipient (e.g., the server) in authenticating the message. The shared secret <b>232</b> is not directly sent as part of the message.</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart illustrating key operations <b>300</b> according to an example embodiment. As illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, at block <b>310</b>, two bank identifier number (BIN) level master keys may be used in conjunction with the account identifier and card sequence number to produce two unique derived keys (UDKs) per card. In some examples, a bank identifier number may comprise one number or a combination of one or more numbers, such as an account number or an unpredictable number provided by one or more servers, may be used for session key generation and/or diversification. The UDKs (AUTKEY and ENCKEY) may be stored on the card during the personalization process.</p><p id="p-0081" num="0080">At block <b>320</b>, the counter may be used as the diversification data, since it changes with each use and provides a different session key each time, as opposed to the master key derivation in which one unique set of keys per card is produced. In some examples, it is preferable to use the 4-byte method for both operations. Accordingly, at block <b>320</b>, two session keys may be created for each transaction from the UDKs, i.e., one session key from AUTKEY and one session key from ENCKEY. In the card, for the MAC key (i.e., the session key created from AUTKEY), the low order of two bytes of the OTP counter may be used for diversification. For the ENC key (i.e., the session key created from ENCKEY), the full length of the OTP counter may be used for the ENC key.</p><p id="p-0082" num="0081">At block <b>330</b>, the MAC key may be used for preparing the MAC cryptogram, and the ENC key may be used to encrypt the cryptogram. For example, the MAC session key may be used to prepare the cryptogram, and the result may be encrypted with the ENC key before it is transmitted to the one or more servers.</p><p id="p-0083" num="0082">At block <b>340</b>, verification and processing of the MAC is simplified because 2-byte diversification is directly supported in the MAC authentication functions of payment HSMs. Decryption of the cryptogram is performed prior to verification of the MAC. The session keys are independently derived at the one or more servers, resulting in a first session key (the ENC session key) and a second session key (the MAC session key). The second derived key (i.e., the ENC session key) may be used to decrypt the data, and the first derived key (i.e., the MAC session key) may be used to verify the decrypted data.</p><p id="p-0084" num="0083">For the contactless card, a different unique identifier is derived which may be related to the application primary account number (PAN) and PAN sequence number, which is encoded in the card. The key diversification may be configured to receive the identifier as input with the master key such that one or more keys may be created for each contactless card. In some examples, these diversified keys may comprise a first key and a second key. The first key may include an authentication master key (Card Cryptogram Generation/Authentication Key&#x2014;Card-Key-Auth), and may be further diversified to create a MAC session key used when generating and verifying a MAC cryptogram. The second key may comprise an encryption master key (Card Data Encryption Key&#x2014;Card-Key-DEK), and may be further diversified to create an ENC session key used when encrypting and decrypting enciphered data. In some examples, the first and the second keys may be created by diversifying the issuer master keys by combining them with the card's unique ID number (pUID) and the PAN sequence number (PSN) of a payment applet. The pUID may comprise a 16-digit numerical value. As explained above, pUID may comprise a 16 digit BCD encoded number. In some examples, pUID may comprise a 14-digit numerical value.</p><p id="p-0085" num="0084">In some examples, since the EMV session key derivation method may wrap at 2{circumflex over (&#x2003;)}16 uses, the counter such as the full 32-bit counter may be added to the initialization arrays of the diversification method.</p><p id="p-0086" num="0085">In other examples, such as credit cards, a number, such as an account number or an unpredictable number provided by one or more servers, may be used for session key generation and/or diversification.</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a diagram of a system <b>400</b> configured to implement one or more embodiments of the present disclosure. As explained below, during the contactless card creation process, two cryptographic keys may be assigned uniquely for each card. The cryptographic keys may comprise symmetric keys which may be used in both encryption and decryption of data. Triple DES (3DES) algorithm may be used by EMV and it is implemented by hardware in the contactless card. By using a key diversification process, one or more keys may be derived from a master key based upon uniquely identifiable information for each entity that requires a key.</p><p id="p-0088" num="0087">Regarding master key management, two issuer master keys <b>405</b>, <b>410</b> may be required for each part of the portfolio on which the one or more applets is issued. For example, the first master key <b>405</b> may comprise an Issuer Cryptogram Generation/Authentication Key (Iss-Key-Auth) and the second master key <b>410</b> may comprise an Issuer Data Encryption Key (Iss-Key-DEK). As further explained herein, two issuer master keys <b>405</b>, <b>410</b> are diversified into card master keys <b>425</b>, <b>430</b>, which are unique for each card. In some examples, a network profile record ID (pNPR) <b>415</b> and derivation key index (pDKI) <b>420</b>, as back office data, may be used to identify which Issuer Master Keys <b>405</b>, <b>410</b> to use in the cryptographic processes for authentication. The system performing the authentication may be configured to retrieve values of pNPR <b>415</b> and pDKI <b>420</b> for a contactless card at the time of authentication.</p><p id="p-0089" num="0088">In some examples, to increase the security of the solution, a session key may be derived (such as a unique key per session) but rather than using the master key, the unique card-derived keys and the counter may be used as diversification data, as explained above. For example, each time the card is used in operation, a different key may be used for creating the message authentication code (MAC) and for performing the encryption. Regarding session key generation, the keys used to generate the cryptogram and encipher the data in the one or more applets may comprise session keys based on the card unique keys (Card-Key-Auth <b>425</b> and Card-Key-Dek <b>430</b>). The session keys (Aut-Session-Key <b>435</b> and DEK-Session-Key <b>440</b>) may be generated by the one or more applets and derived by using the application transaction counter (pATC) <b>445</b> with one or more algorithms. To fit data into the one or more algorithms, only the 2 low order bytes of the 4-byte pATC <b>445</b> is used. In some examples, the four byte session key derivation method may comprise: F1:=PATC(lower 2 bytes)&#x2225;&#x2018;F0&#x2019;&#x2225;&#x2018;00&#x2019;&#x2225;PATC (four bytes) F1:=PATC(lower 2 bytes)&#x2225;&#x2018;0F&#x2019;&#x2225;&#x2018;00&#x2019;&#x2225;PATC (four bytes) SK:={(ALG (MK) [F1])&#x2225;ALG (MK) [F2]}, where ALG may include 3DES ECB and MK may include the card unique derived master key.</p><p id="p-0090" num="0089">As described herein, one or more MAC session keys may be derived using the lower two bytes of pATC <b>445</b> counter. At each tap of the contactless card, pATC <b>445</b> is configured to be updated, and the card master keys Card-Key-AUTH <b>425</b> and Card-Key-DEK <b>430</b> are further diversified into the session keys Aut-Session-Key <b>435</b> and DEK-Session-KEY <b>440</b>. pATC <b>445</b> may be initialized to zero at personalization or applet initialization time. In some examples, the pATC counter <b>445</b> may be initialized at or before personalization, and may be configured to increment by one at each NDEF read.</p><p id="p-0091" num="0090">Further, the update for each card may be unique, and assigned either by personalization, or algorithmically assigned by pUID or other identifying information. For example, odd numbered cards may increment or decrement by 2 and even numbered cards may increment or decrement by 5. In some examples, the update may also vary in sequential reads, such that one card may increment in sequence by 1, 3, 5, 2, 2, . . . repeating. The specific sequence or algorithmic sequence may be defined at personalization time, or from one or more processes derived from unique identifiers. This can make it harder for a replay attacker to generalize from a small number of card instances.</p><p id="p-0092" num="0091">The authentication message may be delivered as the content of a text NDEF record in hexadecimal ASCII format. In some examples, only the authentication data and an 8-byte random number followed by MAC of the authentication data may be included. In some examples, the random number may precede cryptogram A and may be one block long. In other examples, there may be no restriction on the length of the random number. In further examples, the total data (i.e., the random number plus the cryptogram) may be a multiple of the block size. In these examples, an additional 8-byte block may be added to match the block produced by the MAC algorithm. As another example, if the algorithms employed used 16-byte blocks, even multiples of that block size may be used, or the output may be automatically, or manually, padded to a multiple of that block size.</p><p id="p-0093" num="0092">The MAC may be performed by a function key (AUT-Session-Key) <b>435</b>. The data specified in cryptogram may be processed with javacard.signature method: ALG_DES_MAC8_ISO9797_1_M2_ALG3 to correlate to EMV ARQC verification methods. The key used for this computation may comprise a session key AUT-Session-Key <b>435</b>, as explained above. As explained above, the low order two bytes of the counter may be used to diversify for the one or more MAC session keys. As explained below, AUT-Session-Key <b>435</b> may be used to MAC data <b>450</b>, and the resulting data or cryptogram A <b>455</b> and random number RND may be encrypted using DEK-Session-Key <b>440</b> to create cryptogram B or output <b>460</b> sent in the message.</p><p id="p-0094" num="0093">In some examples, one or more HSM commands may be processed for decrypting such that the final 16 (binary, 32 hex) bytes may comprise a 3DES symmetric encrypting using CBC mode with a zero IV of the random number followed by MAC authentication data. The key used for this encryption may comprise a session key DEK-Session-Key <b>440</b> derived from the Card-Key-DEK <b>430</b>. In this case, the ATC value for the session key derivation is the least significant byte of the counter pATC <b>445</b>.</p><p id="p-0095" num="0094">The format below represents a binary version example embodiment. In some examples, the first byte may be set to ASCII &#x2018;A&#x2019;.</p><p id="p-0096" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="9"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="28pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="14pt" align="left"/><colspec colname="5" colwidth="14pt" align="left"/><colspec colname="6" colwidth="21pt" align="left"/><colspec colname="7" colwidth="14pt" align="left"/><colspec colname="8" colwidth="70pt" align="left"/><colspec colname="9" colwidth="14pt" align="left"/><thead><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Message Format</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="28pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><colspec colname="5" colwidth="84pt" align="left"/><tbody valign="top"><row><entry>1</entry><entry>2</entry><entry>4</entry><entry>8</entry><entry>8</entry></row><row><entry>0x43 (Message Type &#x2018;A&#x2019;)</entry><entry>Version</entry><entry>pATC</entry><entry>RND</entry><entry>Cryptogram A (MAC)</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="28pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="14pt" align="left"/><colspec colname="5" colwidth="35pt" align="left"/><colspec colname="6" colwidth="98pt" align="left"/><tbody valign="top"><row><entry>Cryptogram A (MAC)</entry><entry>8 bytes</entry><entry/><entry/><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="56pt" align="left"/><colspec colname="3" colwidth="14pt" align="left"/><colspec colname="4" colwidth="35pt" align="left"/><colspec colname="5" colwidth="98pt" align="left"/><tbody valign="top"><row><entry>Mac of</entry><entry/><entry/><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="28pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><colspec colname="5" colwidth="98pt" align="left"/><tbody valign="top"><row><entry>2</entry><entry>8</entry><entry>4</entry><entry>4</entry><entry>18 bytes input data</entry></row><row><entry>Version</entry><entry>pUID</entry><entry>pATC</entry><entry>Shared Secret</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="9"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="35pt" align="left"/><colspec colname="4" colwidth="21pt" align="left"/><colspec colname="5" colwidth="14pt" align="left"/><colspec colname="6" colwidth="21pt" align="left"/><colspec colname="7" colwidth="21pt" align="left"/><colspec colname="8" colwidth="21pt" align="left"/><colspec colname="9" colwidth="21pt" align="left"/><tbody valign="top"><row><entry>Message Format</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="70pt" align="left"/><colspec colname="4" colwidth="84pt" align="left"/><tbody valign="top"><row><entry>1</entry><entry>2</entry><entry>4</entry><entry>16</entry></row><row><entry>0x43 (Message Type &#x2018;A&#x2019;)</entry><entry>Version</entry><entry>pATC</entry><entry>Cryptogram B</entry></row><row><entry>Cryptogram A (MAC)</entry><entry>8 bytes</entry><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="119pt" align="left"/><colspec colname="3" colwidth="84pt" align="left"/><tbody valign="top"><row><entry>MAC of</entry><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="35pt" align="left"/><colspec colname="4" colwidth="56pt" align="left"/><colspec colname="5" colwidth="63pt" align="left"/><tbody valign="top"><row><entry>2</entry><entry>8</entry><entry>4</entry><entry>4</entry><entry>18 bytes input data</entry></row><row><entry>Version</entry><entry>pUID</entry><entry>pATC</entry><entry>Shared Secret</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="56pt" align="left"/><colspec colname="4" colwidth="56pt" align="left"/><colspec colname="5" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>Cryptogram B</entry><entry>16</entry><entry/><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="161pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>Sym Encryption of</entry><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="56pt" align="left"/><colspec colname="4" colwidth="56pt" align="left"/><colspec colname="5" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>8</entry><entry>8</entry><entry/><entry/><entry/></row><row><entry>RND</entry><entry>Cryptogram A</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0097" num="0095">Another exemplary format is shown below. In this example, the tag may be encoded in hexadecimal format.</p><p id="p-0098" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="8"><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="21pt" align="left"/><colspec colname="3" colwidth="35pt" align="left"/><colspec colname="4" colwidth="14pt" align="left"/><colspec colname="5" colwidth="21pt" align="left"/><colspec colname="6" colwidth="21pt" align="left"/><colspec colname="7" colwidth="14pt" align="left"/><colspec colname="8" colwidth="70pt" align="left"/><thead><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Message Format</entry></row><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="21pt" align="left"/><colspec colname="3" colwidth="49pt" align="left"/><colspec colname="4" colwidth="56pt" align="left"/><colspec colname="5" colwidth="70pt" align="left"/><tbody valign="top"><row><entry>2</entry><entry>8</entry><entry>4</entry><entry>8</entry><entry>8</entry></row><row><entry>Version</entry><entry>pUID</entry><entry>pATC</entry><entry>RND</entry><entry>Cryptogram A (MAC)</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="70pt" align="left"/><colspec colname="3" colwidth="126pt" align="left"/><tbody valign="top"><row><entry>8 bytes</entry><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="21pt" align="left"/><colspec colname="3" colwidth="35pt" align="left"/><colspec colname="4" colwidth="56pt" align="left"/><colspec colname="5" colwidth="84pt" align="left"/><tbody valign="top"><row><entry>8</entry><entry>8</entry><entry>4</entry><entry>4</entry><entry>18 bytes input data</entry></row><row><entry>pUID</entry><entry>pUID</entry><entry>pATC</entry><entry>Shared Secret</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="9"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="21pt" align="left"/><colspec colname="5" colwidth="7pt" align="left"/><colspec colname="6" colwidth="21pt" align="left"/><colspec colname="7" colwidth="21pt" align="left"/><colspec colname="8" colwidth="21pt" align="left"/><colspec colname="9" colwidth="21pt" align="left"/><tbody valign="top"><row><entry>Message Format</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="56pt" align="left"/><colspec colname="4" colwidth="84pt" align="left"/><tbody valign="top"><row><entry>2</entry><entry>8</entry><entry>4</entry><entry>16</entry></row><row><entry>Version</entry><entry>pUID</entry><entry>pATC</entry><entry>Cryptogram B</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="56pt" align="left"/><colspec colname="4" colwidth="42pt" align="left"/><colspec colname="5" colwidth="21pt" align="left"/><colspec colname="6" colwidth="21pt" align="left"/><tbody valign="top"><row><entry>8 bytes</entry><entry/><entry/><entry/><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><colspec colname="5" colwidth="63pt" align="left"/><tbody valign="top"><row><entry>8</entry><entry/><entry>4</entry><entry>4</entry><entry>18 bytes input data</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><colspec colname="5" colwidth="21pt" align="left"/><colspec colname="6" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>pUID</entry><entry>pUID</entry><entry>pATC</entry><entry>Shared Secret</entry><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="49pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><colspec colname="5" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>Cryptogram B</entry><entry>16</entry><entry/><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="147pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>Sym Encryption of</entry><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="49pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><colspec colname="5" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>8</entry><entry>8</entry><entry/><entry/><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="49pt" align="left"/><colspec colname="4" colwidth="28pt" align="left"/><colspec colname="5" colwidth="21pt" align="left"/><colspec colname="6" colwidth="21pt" align="left"/><colspec colname="7" colwidth="21pt" align="left"/><tbody valign="top"><row><entry>RND</entry><entry>Cryptogram A</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0099" num="0096">The UID field of the received message may be extracted to derive, from master keys Iss-Key-AUTH <b>405</b> and Iss-Key-DEK <b>410</b>, the card master keys (Card-Key-Auth <b>425</b> and Card-Key-DEK <b>430</b>) for that particular card. Using the card master keys (Card-Key-Auth <b>425</b> and Card-Key-DEK <b>430</b>), the counter (pATC) field of the received message may be used to derive the session keys (Aut-Session-Key <b>435</b> and DEK-Session-Key <b>440</b>) for that particular card. Cryptogram B <b>460</b> may be decrypted using the DEK-Session-KEY, which yields cryptogram A <b>455</b> and RND, and RND may be discarded. The UID field may be used to look up the shared secret of the contactless card which, along with the Ver, UID, and pATC fields of the message, may be processed through the cryptographic MAC using the re-created Aut-Session-Key to create a MAC output, such as MAC&#x2032;. If MAC&#x2032; is the same as cryptogram A <b>955</b>, then this indicates that the message decryption and MAC checking have all passed. Then the pATC may be read to determine if it is valid.</p><p id="p-0100" num="0097">During an authentication session, one or more cryptograms may be generated by the one or more applications. For example, the one or more cryptograms may be generated as a 3DES MAC using ISO 9797-1 Algorithm 3 with Method 2 padding via one or more session keys, such as Aut-Session-Key <b>435</b>. The input data <b>450</b> may take the following form: Version (2), pUID (8), pATC (4), Shared Secret (4). In some examples, the numbers in the brackets may comprise length in bytes. In some examples, the shared secret may be generated by one or more random number generators which may be configured to ensure, through one or more secure processes, that the random number is unpredictable. In some examples, the shared secret may comprise a random 4-byte binary number injected into the card at personalization time that is known by the authentication service. During an authentication session, the shared secret may not be provided from the one or more applets to the mobile application. Method 2 padding may include adding a mandatory 0x&#x2018;80&#x2019; byte to the end of input data and 0x&#x2018;00&#x2019; bytes that may be added to the end of the resulting data up to the 8-byte boundary. The resulting cryptogram may comprise 8 bytes in length.</p><p id="p-0101" num="0098">In some examples, one benefit of encrypting an unshared random number as the first block with the MAC cryptogram, is that it acts as an initialization vector while using CBC (Block chaining) mode of the symmetric encryption algorithm. This allows the &#x201c;scrambling&#x201d; from block to block without having to pre-establish either a fixed or dynamic IV.</p><p id="p-0102" num="0099">By including the application transaction counter (pATC) as part of the data included in the MAC cryptogram, the authentication service may be configured to determine if the value conveyed in the clear data has been tampered with. Moreover, by including the version in the one or more cryptograms, it is difficult for an attacker to purposefully misrepresent the application version in an attempt to downgrade the strength of the cryptographic solution. In some examples, the pATC may start at zero and be updated by 1 each time the one or more applications generates authentication data. The authentication service may be configured to track the pATCs used during authentication sessions. In some examples, when the authentication data uses a pATC equal to or lower than the previous value received by the authentication service, this may be interpreted as an attempt to replay an old message, and the authenticated may be rejected. In some examples, where the pATC is greater than the previous value received, this may be evaluated to determine if it is within an acceptable range or threshold, and if it exceeds or is outside the range or threshold, verification may be deemed to have failed or be unreliable. In the MAC operation <b>436</b>, data <b>450</b> is processed through the MAC using Aut-Session-Key <b>435</b> to produce MAC output (cryptogram A) <b>455</b>, which is encrypted.</p><p id="p-0103" num="0100">In order to provide additional protection against brute force attacks exposing the keys on the card, it is desirable that the MAC cryptogram <b>455</b> be enciphered. In some examples, data or cryptogram A <b>455</b> to be included in the ciphertext may comprise: Random number (8), cryptogram (8). In some examples, the numbers in the brackets may comprise length in bytes. In some examples, the random number may be generated by one or more random number generators which may be configured to ensure, through one or more secure processes, that the random number is unpredictable. The key used to encipher this data may comprise a session key. For example, the session key may comprise DEK-Session-Key <b>440</b>. In the encryption operation <b>441</b>, data or cryptogram A <b>455</b> and RND are processed using DEK-Session-Key <b>440</b> to produce encrypted data, cryptogram B <b>460</b>. The data <b>455</b> may be enciphered using 3DES in cipher block chaining mode to ensure that an attacker must run any attacks over all of the ciphertext. As a non-limiting example, other algorithms, such as Advanced Encryption Standard (AES), may be used. In some examples, an initialization vector of 0x&#x2018;0000000000000000&#x2019; may be used. Any attacker seeking to brute force the key used for enciphering this data will be unable to determine when the correct key has been used, as correctly decrypted data will be indistinguishable from incorrectly decrypted data due to its random appearance.</p><p id="p-0104" num="0101">In order for the authentication service to validate the one or more cryptograms provided by the one or more applets, the following data must be conveyed from the one or more applets to the mobile device in the clear during an authentication session: version number to determine the cryptographic approach used and message format for validation of the cryptogram, which enables the approach to change in the future; pUID to retrieve cryptographic assets, and derive the card keys; and pATC to derive the session key used for the cryptogram.</p><p id="p-0105" num="0102"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a method <b>500</b> for generating a cryptogram. For example, at block <b>510</b>, a network profile record ID (pNPR) and derivation key index (pDKI) may be used to identify which Issuer Master Keys to use in the cryptographic processes for authentication. In some examples, the method may include performing the authentication to retrieve values of pNPR and pDKI for a contactless card at the time of authentication.</p><p id="p-0106" num="0103">At block <b>520</b>, Issuer Master Keys may be diversified by combining them with the card's unique ID number (pUID) and the PAN sequence number (PSN) of one or more applets, for example, a payment applet.</p><p id="p-0107" num="0104">At block <b>530</b>, Card-Key-Auth and Card-Key-DEK (unique card keys) may be created by diversifying the Issuer Master Keys to generate session keys which may be used to generate a MAC cryptogram.</p><p id="p-0108" num="0105">At block <b>540</b>, the keys used to generate the cryptogram and encipher the data in the one or more applets may comprise the session keys of block <b>530</b> based on the card unique keys (Card-Key-Auth and Card-Key-DEK). In some examples, these session keys may be generated by the one or more applets and derived by using pATC, resulting in session keys Aut-Session-Key and DEK-Session-Key.</p><p id="p-0109" num="0106"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an exemplary process <b>600</b> illustrating key diversification according to one example. Initially, a sender and the recipient may be provisioned with two different master keys. For example, a first master key may comprise the data encryption master key, and a second master key may comprise the data integrity master key. The sender has a counter value, which may be updated at block <b>602</b>, and other data, such as data to be protected, which it may securely share with the recipient.</p><p id="p-0110" num="0107">At block <b>604</b>, the counter value may be encrypted by the sender using the data encryption master key to produce the data encryption derived session key, and the counter value may also be encrypted by the sender using the data integrity master key to produce the data integrity derived session key. In some examples, a whole counter value or a portion of the counter value may be used during both encryptions.</p><p id="p-0111" num="0108">In some examples, the counter value may not be encrypted. In these examples, the counter may be transmitted between the sender and the recipient in the clear, i.e., without encryption.</p><p id="p-0112" num="0109">At block <b>606</b>, the data to be protected is processed with a cryptographic MAC operation by the sender using the data integrity session key and a cryptographic MAC algorithm. The protected data, including plaintext and shared secret, may be used to produce a MAC using one of the session keys (AUT-Session-Key).</p><p id="p-0113" num="0110">At block <b>608</b> the data to be protected may be encrypted by the sender using the data encryption derived session key in conjunction with a symmetric encryption algorithm. In some examples, the MAC is combined with an equal amount of random data, for example each 8 bytes long, and then encrypted using the second session key (DEK-Session-Key).</p><p id="p-0114" num="0111">At block <b>610</b>, the encrypted MAC is transmitted, from the sender to the recipient, with sufficient information to identify additional secret information (such as shared secret, master keys, etc.), for verification of the cryptogram.</p><p id="p-0115" num="0112">At block <b>612</b>, the recipient uses the received counter value to independently derive the two derived session keys from the two master keys as explained above.</p><p id="p-0116" num="0113">At block <b>614</b>, the data encryption derived session key is used in conjunction with the symmetric decryption operation to decrypt the protected data. Additional processing on the exchanged data will then occur. In some examples, after the MAC is extracted, it is desirable to reproduce and match the MAC. For example, when verifying the cryptogram, it may be decrypted using appropriately generated session keys. The protected data may be reconstructed for verification. A MAC operation may be performed using an appropriately generated session key to determine if it matches the decrypted MAC. As the MAC operation is an irreversible process, the only way to verify is to attempt to recreate it from source data.</p><p id="p-0117" num="0114">At block <b>616</b>, the data integrity derived session key is used in conjunction with the cryptographic MAC operation to verify that the protected data has not been modified.</p><p id="p-0118" num="0115">Some examples of the methods described herein may advantageously confirm when a successful authentication is determined when the following conditions are met. First, the ability to verify the MAC shows that the derived session key was proper. The MAC may only be correct if the decryption was successful and yielded the proper MAC value. The successful decryption may show that the correctly derived encryption key was used to decrypt the encrypted MAC. Since the derived session keys are created using the master keys known only to the sender (e.g., the transmitting device) and recipient (e.g., the receiving device), it may be trusted that the contactless card which originally created the MAC and encrypted the MAC is indeed authentic. Moreover, the counter value used to derive the first and second session keys may be shown to be valid and may be used to perform authentication operations.</p><p id="p-0119" num="0116">Thereafter, the two derived session keys may be discarded, and the next iteration of data exchange will update the counter value (returning to block <b>602</b>) and a new set of session keys may be created (at block <b>604</b>). In some examples, the combined random data may be discarded.</p><p id="p-0120" num="0117"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> depicts a timing diagram showing an exemplary exchange of messages according to an embodiment. <figref idref="DRAWINGS">FIG. <b>6</b>C</figref> depicts an exemplary flow chart showing logic <b>650</b> performed by the applets, logic, or programs on the card <b>130</b>, and is discussed in parallel with <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>.</p><p id="p-0121" num="0118">Beginning at <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>, the payment/transaction applet may, at block <b>652</b>, store one or more PANs for the card. The PANs may be written to the card when the card is initially issued. In some embodiments, only one PAN is issued to the card, and the payment/transaction applet maintains the PAN or accesses it in a defined location in memory. The payment/transaction applet may be capable of writing or rewriting the PAN, and may do so when a new PAN is called for. In other embodiments, multiple PANs may be issued to the card, and may be stored in a list. One PAN (such as the first PAN in the list) may be designated as the active PAN to be used for payments and transactions. When a new PAN is needed, the old PAN may be deleted and the next PAN in the list may become the active PAN; alternatively or in addition, a different PAN in the list may be designated as the current PAN.</p><p id="p-0122" num="0119">Turning to <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, the reissue process may begin when the server <b>116</b> transmits a reissue message <b>620</b> to a client <b>104</b>. The reissue message may be a message indicating that a particular card belonging to an account holder associated with the client device <b>104</b> should have its identifier/PAN reissued, altered, or otherwise changed. The account holder may be associated to the client device <b>104</b> by virtue of installing an application on the client device <b>104</b> belonging to the card issuer (which may also maintain the server <b>116</b>).</p><p id="p-0123" num="0120">For example, the user may install an application that allows the user to review their outstanding balance, make payments, etc., and the user's particular cards may be associated with the application based on the account/card number(s) assigned to the user. The application may communicate with the server <b>116</b> and may register the device <b>104</b> with the server. The user may log into their account with the card provider through the application and thereby associate their account with the device <b>104</b>.</p><p id="p-0124" num="0121">The application may also communicate with the user's card <b>130</b>, and thereby establish a communication link from the server <b>116</b> to the card <b>130</b>. When the server <b>116</b> determines that the user's account number has been compromised (or that the card number needs to be reissued for another reason), the server <b>116</b> may contact the user's application on the device <b>104</b> to achieve this. The user's old number or identifier may be voided before, during, or after sending the reissue message <b>620</b>.</p><p id="p-0125" num="0122">Upon receiving the reissue message, the application on the client <b>104</b> may recognize that the PAN must be reissued. The application may be programmed with multiple techniques for communicating this information to the communication/authentication applet on the card in a reissue instruction or tap pattern <b>622</b>.</p><p id="p-0126" num="0123">One technique may involve issuing an NFC write command (or another suitable command using a different communication protocol) to the communication/authentication applet on the card <b>130</b>. The NFC write command may identify that the card number or identifier is to be changed. This technique may be suitable for devices, such as those running the Android operating system, that are capable of issuing an NFC write command directly to the applets on the card.</p><p id="p-0127" num="0124">Some operating systems, such as the iOS operating system, are not capable of issuing an NFC write command directly to these applets. Accordingly, the application may be programmed with logic configured to cause a display device to present instructions to the user requesting that the user tap their card <b>130</b> to the NFC reader on the device <b>104</b> in a predetermined pattern. This logic may have a counterpart on the communication/authentication applet, which is configured to recognize the predetermined pattern and interpret this pattern as an instruction to reissue the PAN or identification number.</p><p id="p-0128" num="0125">At <b>624</b>, the communication/authentication applet on the card recognizes the instruction or pattern <b>622</b> and initiates a card change process (block <b>654</b> of <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>).</p><p id="p-0129" num="0126">First, the communication/authentication applet sets up a secure communication channel or secure form of data transmission between the communication/authentication applet and payment/transaction applet at <b>626</b> (block <b>656</b> of <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>). This communication channel may be built into the chip on the card <b>130</b> such that an express setup procedure is not required, or may be an ad hoc communication channel or data transmission form that is set up on an as-needed basis.</p><p id="p-0130" num="0127">The communication/authentication applet may transmit a reissue command <b>628</b> to the payment/transaction applet over the secure communication channel (block <b>658</b> in <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>). In response, the payment/transaction applet may, at <b>630</b> (block <b>660</b> of <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>), select a new identifier or PAN (e.g., advancing to the next PAN in a list, generating an entirely new PAN from scratch, deriving a new PAN from the old PAN and/or other information stored on the card, etc.). In some cases, the process for selecting the new identifier or PAN may be coordinated with the server <b>116</b>, as previously discussed.</p><p id="p-0131" num="0128">The payment/transaction applet may determine if the change in the identifier or PAN was successful (e.g., a new PAN meeting certain predefined requirements has been generated). If there was a problem in the process, or if the new PAN could not be validated according to the requirements, the payment/transaction applet may report a failure to the communication/authentication applet (block <b>652</b> of <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>). The card's chip may optionally be de-authorized for performing transactions at this point.</p><p id="p-0132" num="0129">If the updating of the PAN or identifier was successful, then the payment/transaction applet may confirm <b>632</b> the success to the communication/authentication applet, which may relay that confirmation back towards the server <b>116</b> (block <b>652</b> of <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>).</p><p id="p-0133" num="0130">If the card includes a rewritable display such as an e-ink display, then at <b>634</b> the communication/authentication applet (or other suitable logic on the card) may cause the display to be rewritten with the new card identifier (see block <b>654</b> of <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>). Optionally, the card may remain in the magnetic field caused by the communication with the device <b>104</b> during this process, so that the energy from the communication can be used to update the display.</p><p id="p-0134" num="0131">Example embodiments of systems and methods described herein may be configured to provide security factor authentication. The security factor authentication may comprise a plurality of processes. As part of the security factor authentication, a first process may comprise logging in and validating a user via one or more applications executing on a device. As a second process, the user may, responsive to successful login and validation of the first process via the one or more applications, engage in one or more behaviors associated with one or more contactless cards. In effect, the security factor authentication may include both securely proving identity of the user and engaging in one or more types of behaviors, including but not limited to one or more tap gestures, associated with the contactless card. In some examples, the one or more tap gestures may comprise a tap of the contactless card by the user to a device. In some examples, the device may comprise a mobile device, a kiosk, a terminal, a tablet, or any other device configured to process a received tap gesture.</p><p id="p-0135" num="0132">In some examples, the contactless card may be tapped to a device, such as one or more computer kiosks or terminals, to verify identity so as to receive a transactional item responsive to a purchase, such as a coffee. By using the contactless card, a secure method of proving identity in a loyalty program may be established. Securely proving the identity, for example, to obtain a reward, coupon, offer, or the like or receipt of a benefit is established in a manner that is different than merely scanning a bar card. For example, an encrypted transaction may occur between the contactless card and the device, which may configured to process one or more tap gestures. As explained above, the one or more applications may be configured to validate identity of the user and then cause the user to act or respond to it, for example, via one or more tap gestures. In some examples, data for example, bonus points, loyalty points, reward points, healthcare information, etc., may be written back to the contactless card.</p><p id="p-0136" num="0133">In some examples, the contactless card may be tapped to a device, such as a mobile device. As explained above, identity of the user may be verified by the one or more applications which would then grant the user a desired benefit based on verification of the identity.</p><p id="p-0137" num="0134">In some examples, the contactless card may be activated by tapping to a device, such as a mobile device. For example, the contactless card may communicate with an application of the device via a card reader of the device through NFC communication. The communication, in which a tap of the card proximate the card reader of the device may allow the application of the device to read data associated with the contactless card and activate the card. In some examples, the activation may authorize the card to be used to perform other functions, e.g., purchases, access account or restricted information, or other functions. In some examples, the tap may activate or launch the application of the device and then initiate one or more actions or communications with one or more servers to activate the contactless card. If the application is not installed on the device, a tap of the contactless card proximate the card reader may initiate a download of the application, such as navigation to a download page of the application). Subsequent to installation, a tap of the contactless card may activate or launch the application, and then initiate, for example via the application or other back-end communication), activation of the contactless card. After activation, the contactless card may be used in various activities, including without limitation commercial transactions.</p><p id="p-0138" num="0135">In some embodiments, a dedicated application may be configured to execute on a client device to perform the activation of the contactless card. In other embodiments, a webportal, a web-based app, an applet, and/or the like may perform the activation. Activation may be performed on the client device, or the client device may merely act as a go between for the contactless card and an external device (e.g., account server). According to some embodiments, in providing activation, the application may indicate, to the account server, the type of device performing the activation (e.g., personal computer, smartphone, tablet, or point-of-sale (POS) device). Further, the application may output, for transmission, different and/or additional data to the account server depending on the type of device involved. For example, such data may comprise information associated with a merchant, such as merchant type, merchant ID, and information associated with the device type itself, such as POS data and POS ID.</p><p id="p-0139" num="0136">In some embodiments, the example authentication communication protocol may mimic an offline dynamic data authentication protocol of the EMV standard that is commonly performed between a transaction card and a point-of-sale device, with some modifications. For example, because the example authentication protocol is not used to complete a payment transaction with a card issuer/payment processor per se, some data values are not needed, and authentication may be performed without involving real-time online connectivity to the card issuer/payment processor. As is known in the art, point of sale (POS) systems submit transactions including a transaction value to a card issuer. Whether the issuer approves or denies the transaction may be based on if the card issuer recognizes the transaction value. Meanwhile, in certain embodiments of the present disclosure, transactions originating from a mobile device lack the transaction value associated with the POS systems. Therefore, in some embodiments, a dummy transaction value (i.e., a value recognizable to the card issuer and sufficient to allow activation to occur) may be passed as part of the example authentication communication protocol. POS based transactions may also decline transactions based on the number of transaction attempts (e.g., transaction counter). A number of attempts beyond a buffer value may result in a soft decline; the soft decline requiring further verification before accepting the transaction. In some implementations, a buffer value for the transaction counter may be modified to avoid declining legitimate transactions.</p><p id="p-0140" num="0137">In some examples, the contactless card can selectively communicate information depending upon the recipient device. Once tapped, the contactless card can recognize the device to which the tap is directed, and based on this recognition the contactless card can provide appropriate data for that device. This advantageously allows the contactless card to transmit only the information required to complete the instant action or transaction, such as a payment or card authentication. By limiting the transmission of data and avoiding the transmission of unnecessary data, both efficiency and data security can be improved. The recognition and selective communication of information can be applied to a various scenarios, including card activation, balance transfers, account access attempts, commercial transactions, and step-up fraud reduction.</p><p id="p-0141" num="0138">If the contactless card tap is directed to a device running Apple's iOS&#xae; operating system, e.g., an iPhone, iPod, or iPad, the contactless card can recognize the iOS&#xae; operating system and transmit data appropriate data to communicate with this device. For example, the contactless card can provide the encrypted identity information necessary to authenticate the card using NDEF tags via, e.g., NFC. Similarly, if the contactless card tap is directed to a device running the Android&#xae; operating system, e.g., an Android&#xae; smartphone or tablet, the contactless card can recognize the Android&#xae; operating system and transmit appropriate and data to communicate with this device (such as the encrypted identity information necessary for authentication by the methods described herein).</p><p id="p-0142" num="0139">As another example, the contactless card tap can be directed to a POS device, including without limitation a kiosk, a checkout register, a payment station, or other terminal. Upon performance of the tap, the contactless card can recognize the POS device and transmit only the information necessary for the action or transaction. For example, upon recognition of a POS device used to complete a commercial transaction, the contactless card can communicate payment information necessary to complete the transaction under the EMV standard.</p><p id="p-0143" num="0140">In some examples, the POS devices participating in the transaction can require or specify additional information, e.g., device-specific information, location-specific information, and transaction-specific information, that is to be provided by the contactless card. For example, once the POS device receives a data communication from the contactless card, the POS device can recognize the contactless card and request the additional information necessary to complete an action or transaction.</p><p id="p-0144" num="0141">In some examples the POS device can be affiliated with an authorized merchant or other entity familiar with certain contactless cards or accustomed to performing certain contactless card transactions. However, it is understood such an affiliation is not required for the performance of the described methods.</p><p id="p-0145" num="0142">In some examples, such as a shopping store, grocery store, convenience store, or the like, the contactless card may be tapped to a mobile device without having to open an application, to indicate a desire or intent to utilize one or more of reward points, loyalty points, coupons, offers, or the like to cover one or more purchases. Thus, an intention behind the purchase is provided.</p><p id="p-0146" num="0143">In some examples, the one or more applications may be configured to determine that it was launched via one or more tap gestures of the contactless card, such that a launch occurred at 3:51 pm, that a transaction was processed or took place at 3:56 pm, in order to verify identity of the user.</p><p id="p-0147" num="0144">In some examples, the one or more applications may be configured to control one or more actions responsive to the one or more tap gestures. For example, the one or more actions may comprise collecting rewards, collecting points, determine the most important purchase, determine the least costly purchase, and/or reconfigure, in real-time, to another action.</p><p id="p-0148" num="0145">In some examples, data may be collected on tap behaviors as biometric/gestural authentication. For example, a unique identifier that is cryptographically secure and not susceptible to interception may be transmitted to one or more backend services. The unique identifier may be configured to look up secondary information about individual. The secondary information may comprise personally identifiable information about the user. In some examples, the secondary information may be stored within the contactless card.</p><p id="p-0149" num="0146">In some examples, the device may comprise an application that splits bills or check for payment amongst a plurality of individuals. For example, each individual may possess a contactless card, and may be customers of the same issuing financial institution, but it is not necessary. Each of these individuals may receive a push notification on their device, via the application, to split the purchase. Rather than accepting only one card tap to indicate payment, other contactless cards may be used. In some examples, individuals who have different financial institutions may possess contactless cards to provide information to initiate one or more payment requests from the card-tapping individual.</p><p id="p-0150" num="0147">The following example use cases describe examples of particular implementations of the present disclosure. These are intended solely for explanatory purposes and not for purposes of limitation. In one case, a first friend (payor) owes a second friend (payee) a sum of money. Rather than going to an ATM or requiring exchange through a peer-to-peer application, payor wishes to pay via payee's smartphone (or other device) using a contactless card. Payee logs-on to the appropriate application on his smartphone and selects a payment request option. In response, the application requests authentication via payee's contactless card. For example, the application outputs a display requesting that payee tap his contactless card. Once payee taps his contactless card against the screen of his smartphone with the application enabled, the contactless card is read and verified. Next, the application displays a prompt for payor to tap his contactless card to send payment. After the payor taps his contactless card, the application reads the card information and transmits, via an associated processor, a request for payment to payor's card issuer. The card issuer processes the transaction and sends a status indicator of the transaction to the smartphone. The application then outputs for display the status indicator of the transaction.</p><p id="p-0151" num="0148">In another example case, a credit card customer may receive a new credit card (or debit card, other payment card, or any other card requiring activation) in the mail. Rather than activating the card by calling a provided telephone number associated with the card issuer or visiting a website, the customer may decide to activate the card via an application on his or her device (e.g., a mobile device such as a smartphone). The customer may select the card activation feature from the application's menu that is displayed on a display of the device. The application may prompt the customer to tap his or her credit card against the screen. Upon tapping the credit card against the screen of the device, the application may be configured to communicate with a server, such as a card issuer server which activates the customer's card. The application may then display a message indicating successful activation of the card. The card activation would then be complete.</p><p id="p-0152" num="0149">The above-described methods may be embodied as instructions on a computer readable medium or as part of a computing architecture. <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an embodiment of an exemplary computing architecture <b>700</b> suitable for implementing various embodiments as previously described. In one embodiment, the computing architecture <b>700</b> may comprise or be implemented as part of an electronic device, such as a computer <b>701</b>. The embodiments are not limited in this context.</p><p id="p-0153" num="0150">As used in this application, the terms &#x201c;system&#x201d; and &#x201c;component&#x201d; are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution, examples of which are provided by the exemplary computing architecture <b>700</b>. For example, a component can be, but is not limited to being, a process running on a processor, a processor, a hard disk drive, multiple storage drives (of optical and/or magnetic storage medium), an object, an executable, a thread of execution, a program, and/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and/or thread of execution, and a component can be localized on one computer and/or distributed between two or more computers. Further, components may be communicatively coupled to each other by various types of communications media to coordinate operations. The coordination may involve the uni-directional or bi-directional exchange of information. For instance, the components may communicate information in the form of signals communicated over the communications media. The information can be implemented as signals allocated to various signal lines. In such allocations, each message is a signal. Further embodiments, however, may alternatively employ data messages. Such data messages may be sent across various connections. Exemplary connections include parallel interfaces, serial interfaces, and bus interfaces.</p><p id="p-0154" num="0151">The computing architecture <b>700</b> includes various common computing elements, such as one or more processors, multi-core processors, co-processors, memory units, chipsets, controllers, peripherals, interfaces, oscillators, timing devices, video cards, audio cards, multimedia input/output (I/O) components, power supplies, and so forth. The embodiments, however, are not limited to implementation by the computing architecture <b>700</b>.</p><p id="p-0155" num="0152">As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the computing architecture <b>700</b> comprises a processing unit <b>702</b>, a system memory <b>704</b> and a system bus <b>706</b>. The processing unit <b>702</b> can be any of various commercially available processors, including without limitation an AMD&#xae; Athlon&#xae;, Duron&#xae; and Opteron&#xae; processors; ARM&#xae; application, embedded and secure processors; IBM&#xae; and Motorola&#xae; DragonBall&#xae; and PowerPC&#xae; processors; IBM and Sony&#xae; Cell processors; Intel&#xae; Celeron&#xae;, Core (2) Duo&#xae;, Itanium&#xae;, Pentium&#xae;, Xeon&#xae;, and XScale&#xae; processors; and similar processors. Dual microprocessors, multi-core processors, and other multi-processor architectures may also be employed as the processing unit <b>702</b>.</p><p id="p-0156" num="0153">The system bus <b>706</b> provides an interface for system components including, but not limited to, the system memory <b>704</b> to the processing unit <b>702</b>. The system bus <b>706</b> can be any of several types of bus structure that may further interconnect to a memory bus (with or without a memory controller), a peripheral bus, and a local bus using any of a variety of commercially available bus architectures. Interface adapters may connect to the system bus <b>706</b> via a slot architecture. Example slot architectures may include without limitation Accelerated Graphics Port (AGP), Card Bus, (Extended) Industry Standard Architecture ((E)ISA), Micro Channel Architecture (MCA), NuBus, Peripheral Component Interconnect (Extended) (PCI(X)), PCI Express, Personal Computer Memory Card International Association (PCMCIA), and the like.</p><p id="p-0157" num="0154">The computing architecture <b>700</b> may comprise or implement various articles of manufacture. An article of manufacture may comprise a computer-readable storage medium to store logic. Examples of a computer-readable storage medium may include any tangible media capable of storing electronic data, including volatile memory or non-volatile memory, removable or non-removable memory, erasable or non-erasable memory, writeable or re-writeable memory, and so forth. Examples of logic may include executable computer program instructions implemented using any suitable type of code, such as source code, compiled code, interpreted code, executable code, static code, dynamic code, object-oriented code, visual code, and the like. Embodiments may also be at least partly implemented as instructions contained in or on a non-transitory computer-readable medium, which may be read and executed by one or more processors to enable performance of the operations described herein.</p><p id="p-0158" num="0155">The system memory <b>704</b> may include various types of computer-readable storage media in the form of one or more higher speed memory units, such as read-only memory (ROM), random-access memory (RAM), dynamic RAM (DRAM), Double-Data-Rate DRAM (DDRAM), synchronous DRAM (SDRAM), static RAM (SRAM), programmable ROM (PROM), erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), flash memory, polymer memory such as ferroelectric polymer memory, ovonic memory, phase change or ferroelectric memory, silicon-oxide-nitride-oxide-silicon (SONOS) memory, magnetic or optical cards, an array of devices such as Redundant Array of Independent Disks (RAID) drives, solid state memory devices (e.g., USB memory, solid state drives (SSD) and any other type of storage media suitable for storing information. In the illustrated embodiment shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the system memory <b>704</b> can include non-volatile memory <b>708</b> and/or volatile memory <b>710</b>. A basic input/output system (BIOS) can be stored in the non-volatile memory <b>708</b>.</p><p id="p-0159" num="0156">The computing architecture <b>700</b> may include various types of computer-readable storage media in the form of one or more lower speed memory units, including an internal (or external) hard disk drive (HDD) <b>712</b>, a magnetic floppy disk drive (FDD) <b>714</b> to read from or write to a removable magnetic disk <b>716</b>, and an optical disk drive <b>718</b> to read from or write to a removable optical disk <b>720</b> (e.g., a CD-ROM or DVD). The HDD <b>712</b>, FDD <b>714</b> and optical disk drive <b>720</b> can be connected to the system bus <b>706</b> by an HDD interface <b>722</b>, an FDD interface <b>724</b> and an optical drive interface <b>726</b>, respectively. The HDD interface <b>722</b> for external drive implementations can include at least one or both of Universal Serial Bus (USB) and IEEE 694 interface technologies.</p><p id="p-0160" num="0157">The drives and associated computer-readable media provide volatile and/or nonvolatile storage of data, data structures, computer-executable instructions, and so forth. For example, a number of program modules can be stored in the drives and memory units <b>708</b>, <b>712</b>, including an operating system <b>728</b>, one or more application programs <b>730</b>, other program modules <b>732</b>, and program data <b>734</b>. In one embodiment, the one or more application programs <b>730</b>, other program modules <b>732</b>, and program data <b>734</b> can include, for example, the various applications and/or components of the messaging system <b>500</b>.</p><p id="p-0161" num="0158">A user can enter commands and information into the computer <b>701</b> through one or more wire/wireless input devices, for example, a keyboard <b>736</b> and a pointing device, such as a mouse <b>738</b>. Other input devices may include microphones, infra-red (IR) remote controls, radio-frequency (RF) remote controls, game pads, stylus pens, card readers, dongles, finger print readers, gloves, graphics tablets, joysticks, keyboards, retina readers, touch screens (e.g., capacitive, resistive, etc.), trackballs, trackpads, sensors, styluses, and the like. These and other input devices are often connected to the processing unit <b>702</b> through an input device interface <b>740</b> that is coupled to the system bus <b>706</b>, but can be connected by other interfaces such as a parallel port, IEEE 694 serial port, a game port, a USB port, an IR interface, and so forth.</p><p id="p-0162" num="0159">A monitor <b>742</b> or other type of display device is also connected to the system bus <b>706</b> via an interface, such as a video adaptor <b>744</b>. The monitor <b>742</b> may be internal or external to the computer <b>701</b>. In addition to the monitor <b>742</b>, a computer typically includes other peripheral output devices, such as speakers, printers, and so forth.</p><p id="p-0163" num="0160">The computer <b>701</b> may operate in a networked environment using logical connections via wire and/or wireless communications to one or more remote computers, such as a remote computer <b>744</b>. The remote computer <b>744</b> can be a workstation, a server computer, a router, a personal computer, portable computer, microprocessor-based entertainment appliance, a peer device or other common network node, and typically includes many or all of the elements described relative to the computer <b>701</b>, although, for purposes of brevity, only a memory/storage device <b>746</b> is illustrated. The logical connections depicted include wire/wireless connectivity to a local area network (LAN) <b>748</b> and/or larger networks, for example, a wide area network (WAN) <b>750</b>. Such LAN and WAN networking environments are commonplace in offices and companies, and facilitate enterprise-wide computer networks, such as intranets, all of which may connect to a global communications network, for example, the Internet.</p><p id="p-0164" num="0161">When used in a LAN networking environment, the computer <b>701</b> is connected to the LAN <b>748</b> through a wire and/or wireless communication network interface or adaptor <b>752</b>. The adaptor <b>752</b> can facilitate wire and/or wireless communications to the LAN <b>748</b>, which may also include a wireless access point disposed thereon for communicating with the wireless functionality of the adaptor <b>752</b>.</p><p id="p-0165" num="0162">When used in a WAN networking environment, the computer <b>701</b> can include a modem <b>754</b>, or is connected to a communications server on the WAN <b>750</b>, or has other means for establishing communications over the WAN <b>750</b>, such as by way of the Internet. The modem <b>754</b>, which can be internal or external and a wire and/or wireless device, connects to the system bus <b>706</b> via the input device interface <b>740</b>. In a networked environment, program modules depicted relative to the computer <b>701</b>, or portions thereof, can be stored in the remote memory/storage device <b>746</b>. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.</p><p id="p-0166" num="0163">The computer <b>701</b> is operable to communicate with wire and wireless devices or entities using the IEEE 802 family of standards, such as wireless devices operatively disposed in wireless communication (e.g., IEEE 802.13 over-the-air modulation techniques). This includes at least Wi-Fi (or Wireless Fidelity), WiMax, and Bluetooth&#x2122; wireless technologies, among others. Thus, the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices. Wi-Fi networks use radio technologies called IEEE 802.13x (a, b, g, n, etc.) to provide secure, reliable, fast wireless connectivity. A Wi-Fi network can be used to connect computers to each other, to the Internet, and to wire networks (which use IEEE 802.3-related media and functions).</p><p id="p-0167" num="0164"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram depicting an exemplary communications architecture <b>800</b> suitable for implementing various embodiments as previously described. The communications architecture <b>800</b> includes various common communications elements, such as a transmitter, receiver, transceiver, radio, network interface, baseband processor, antenna, amplifiers, filters, power supplies, and so forth. The embodiments, however, are not limited to implementation by the communications architecture <b>800</b>.</p><p id="p-0168" num="0165">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the communications architecture <b>800</b> includes one or more clients <b>802</b> and servers <b>804</b>. The clients <b>802</b> may implement the client device <b>510</b>. The servers <b>804</b> may implement the server device <b>526</b>. The clients <b>802</b> and the servers <b>804</b> are operatively connected to one or more respective client data stores <b>806</b> and server data stores <b>808</b> that can be employed to store information local to the respective clients <b>802</b> and servers <b>804</b>, such as cookies and/or associated contextual information.</p><p id="p-0169" num="0166">The clients <b>802</b> and the servers <b>804</b> may communicate information between each other using a communication framework <b>810</b>. The communications framework <b>810</b> may implement any well-known communications techniques and protocols. The communications framework <b>810</b> may be implemented as a packet-switched network (e.g., public networks such as the Internet, private networks such as an enterprise intranet, and so forth), a circuit-switched network (e.g., the public switched telephone network), or a combination of a packet-switched network and a circuit-switched network (with suitable gateways and translators).</p><p id="p-0170" num="0167">The communications framework <b>810</b> may implement various network interfaces arranged to accept, communicate, and connect to a communications network. A network interface may be regarded as a specialized form of an input output interface. Network interfaces may employ connection protocols including without limitation direct connect, Ethernet (e.g., thick, thin, twisted pair 10/100/1000 Base T, and the like), token ring, wireless network interfaces, cellular network interfaces, IEEE 802.8a-x network interfaces, IEEE 802.16 network interfaces, IEEE 802.20 network interfaces, and the like. Further, multiple network interfaces may be used to engage with various communications network types. For example, multiple network interfaces may be employed to allow for the communication over broadcast, multicast, and unicast networks. Should processing requirements dictate a greater amount speed and capacity, distributed network controller architectures may similarly be employed to pool, load balance, and otherwise increase the communicative bandwidth required by clients <b>802</b> and the servers <b>804</b>. A communications network may be any one and the combination of wired and/or wireless networks including without limitation a direct interconnection, a secured custom connection, a private network (e.g., an enterprise intranet), a public network (e.g., the Internet), a Personal Area Network (PAN), a Local Area Network (LAN), a Metropolitan Area Network (MAN), an Operating Missions as Nodes on the Internet (OMNI), a Wide Area Network (WAN), a wireless network, a cellular network, and other communications networks.</p><p id="p-0171" num="0168">The components and features of the devices described above may be implemented using any combination of discrete circuitry, application specific integrated circuits (ASICs), logic gates and/or single chip architectures. Further, the features of the devices may be implemented using microcontrollers, programmable logic arrays and/or microprocessors or any combination of the foregoing where suitably appropriate. It is noted that hardware, firmware and/or software elements may be collectively or individually referred to herein as &#x201c;logic&#x201d; or &#x201c;circuit.&#x201d;</p><p id="p-0172" num="0169">It will be appreciated that the exemplary devices shown in the block diagrams described above may represent one functionally descriptive example of many potential implementations. Accordingly, division, omission or inclusion of block functions depicted in the accompanying figures does not infer that the hardware components, circuits, software and/or elements for implementing these functions would be necessarily be divided, omitted, or included in embodiments.</p><p id="p-0173" num="0170">At least one computer-readable storage medium may include instructions that, when executed, cause a system to perform any of the computer-implemented methods described herein.</p><p id="p-0174" num="0171">Some embodiments may be described using the expression &#x201c;one embodiment&#x201d; or &#x201c;an embodiment&#x201d; along with their derivatives. These terms mean that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase &#x201c;in one embodiment&#x201d; in various places in the specification are not necessarily all referring to the same embodiment. Moreover, unless otherwise noted the features described above are recognized to be usable together in any combination. Thus, any features discussed separately may be employed in combination with each other unless it is noted that the features are incompatible with each other.</p><p id="p-0175" num="0172">With general reference to notations and nomenclature used herein, the detailed descriptions herein may be presented in terms of program procedures executed on a computer or network of computers. These procedural descriptions and representations are used by those skilled in the art to most effectively convey the substance of their work to others skilled in the art.</p><p id="p-0176" num="0173">A procedure is here, and generally, conceived to be a self-consistent sequence of operations leading to a desired result. These operations are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical, magnetic or optical signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It proves convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like. It should be noted, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to those quantities.</p><p id="p-0177" num="0174">Further, the manipulations performed are often referred to in terms, such as adding or comparing, which are commonly associated with mental operations performed by a human operator. No such capability of a human operator is necessary, or desirable in most cases, in any of the operations described herein, which form part of one or more embodiments. Rather, the operations are machine operations. Useful machines for performing operations of various embodiments include general purpose digital computers or similar devices.</p><p id="p-0178" num="0175">Some embodiments may be described using the expression &#x201c;coupled&#x201d; and &#x201c;connected&#x201d; along with their derivatives. These terms are not necessarily intended as synonyms for each other. For example, some embodiments may be described using the terms &#x201c;connected&#x201d; and/or &#x201c;coupled&#x201d; to indicate that two or more elements are in direct physical or electrical contact with each other. The term &#x201c;coupled,&#x201d; however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other.</p><p id="p-0179" num="0176">Various embodiments also relate to apparatus or systems for performing these operations. This apparatus may be specially constructed for the required purpose or it may comprise a general purpose computer as selectively activated or reconfigured by a computer program stored in the computer. The procedures presented herein are not inherently related to a particular computer or other apparatus. Various general purpose machines may be used with programs written in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these machines will appear from the description given.</p><p id="p-0180" num="0177">It is emphasized that the Abstract of the Disclosure is provided to allow a reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition, in the foregoing Detailed Description, it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separate embodiment. In the appended claims, the terms &#x201c;including&#x201d; and &#x201c;in which&#x201d; are used as the plain-English equivalents of the respective terms &#x201c;comprising&#x201d; and &#x201c;wherein,&#x201d; respectively. Moreover, the terms &#x201c;first,&#x201d; &#x201c;second,&#x201d; &#x201c;third,&#x201d; and so forth, are used merely as labels, and are not intended to impose numerical requirements on their objects.</p><p id="p-0181" num="0178">What has been described above includes examples of the disclosed architecture. It is, of course, not possible to describe every conceivable combination of components and/or methodologies, but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly, the novel architecture is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computing device comprising:<claim-text>a processor circuit;</claim-text><claim-text>a memory coupled with the processor circuit, the memory configured to store instructions, when executed by the processor circuit, to cause the processor circuit to:<claim-text>perform a near-field communication (NFC) exchange with a contactless card, the NFC exchange to occur with the contactless card when the contactless card is within an NFC communication range of the computing device,</claim-text><claim-text>process a message comprising data to activate the contactless card, the message received in the NFC exchange;</claim-text><claim-text>communicate the data to a server to activate the contactless card; and</claim-text><claim-text>receive a response from the server, the response to indicate whether the contactless card is successfully activated or not successfully activated.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the message is in an NFC Data Exchange Format (NDEF).</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the message is in a format in accordance with an International Organization for Standardization (ISO)/International Electrotechnical Commission (IEC) 14443 format.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions are further configured to cause the processor circuit to:<claim-text>determine to install an application to process the message, communicate the data, and receive the response;</claim-text><claim-text>initiate automatic download and installation of the application to process the message, communication the data, and receive the response.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions are further configured to cause the processor circuit to:<claim-text>determine to execute an application based on the NFC exchange to process the message, communicate the data, and receive the response; and</claim-text><claim-text>initiate execution of the application to process the message, communicate the data, and receive the response.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computing device of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein at least a portion of the instructions are implemented as an operating system, and are configured to install the application via a store application.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data comprises encrypted identity data to activate the contactless card.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computing device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the data is comprised in an NDEF tag.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising:<claim-text>a display device; and</claim-text><claim-text>wherein the instructions are further configured to cause the processor circuit to:<claim-text>present an indication on the display device to tap the contactless card on a surface of the computing device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the instructions are further configured to cause the processor circuit to:<claim-text>present a menu in a graphical user interface (GUI) on the display device, the menu comprising a user option to activate the contactless card; and</claim-text><claim-text>present the indication to tap the contactless card based on an input selection of the user option to activate the contactless card.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the instructions are further configured to cause the processor circuit to present a second indication as to whether the contactless card is activated or not activated based on the response received from the server.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least a portion of the instructions are implemented in an application configured for execution on the computing device.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions are implemented in a webpage for execution in a web browser on the computing device.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the server is associated with the contactless card.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer-implemented method, comprising:<claim-text>receiving, by an application executing on a computing device, a message from a contactless card via a near-filed communication, the message comprising data to activate the contactless card;</claim-text><claim-text>communicating, by the application, the data to a server to activate the contactless card;</claim-text><claim-text>receiving, by the application, a response from the server, the response to indicate whether the contactless card is successfully activated or not successfully activated; and</claim-text><claim-text>causing, by the application, presentation of a graphical element in a graphical user interface (GUI) display on the computing device to indicate whether the contactless card is activated or not activated based on the response received from the server.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-implemented method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the message is in an NFC Data Exchange Format (NDEF).</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-implemented method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the message is in a format in accordance with an International Organization for Standardization (ISO)/International Electrotechnical Commission (IEC) 14443 format.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-implemented method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, comprising:<claim-text>performing an NFC exchange with the contactless card, the NFC exchange to occur with the contactless card when the contactless card is within an NFC communication range of the computing device;</claim-text><claim-text>determining to install the application based on the NFC exchange to perform the receiving the message, the communicating the data, receiving the response, and causing presentation of the graphical element; and</claim-text><claim-text>initiating automatic download and installation of the application.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-implemented method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, comprising:<claim-text>performing an NFC exchange with the contactless card, the NFC exchange to occur with the contactless card when the contactless card is within an NFC communication range of the computing device;</claim-text><claim-text>determining to execute the application based on the NFC exchange to perform the receiving the message, the communicating the data, receiving the response, and causing presentation of the graphical element; and</claim-text><claim-text>initiate execution of the application.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-implemented method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the data comprises encrypted identity data to activate the contactless card.</claim-text></claim></claims></us-patent-application>