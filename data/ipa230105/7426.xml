<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007427A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007427</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17782398</doc-number><date>20201116</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>GB</country><doc-number>1917690.8</doc-number><date>20191204</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>S</subclass><main-group>7</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>S</subclass><main-group>7</main-group><subgroup>303</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>162</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>165</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>S</subclass><main-group>2420</main-group><subgroup>11</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">AUDIO SCENE CHANGE SIGNALING</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Nokia Technologies Oy</orgname><address><city>Espoo</city><country>FI</country></address></addressbook><residence><country>FI</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>MATE</last-name><first-name>Sujeet Shyamsundar</first-name><address><city>Tampere</city><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>J&#xc4;RVINEN</last-name><first-name>Kari</first-name><address><city>Tampere</city><country>FI</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LEPP&#xc4;NEN</last-name><first-name>Jussi</first-name><address><city>Tampere</city><country>FI</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>LAAKSONEN</last-name><first-name>Lasse</first-name><address><city>Tampere</city><country>FI</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/FI2020/050759</doc-number><date>20201116</date></document-id><us-371c12-date><date>20220603</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">There is disclosed inter alia a method for rendering a virtual reality audio scene comprising: receiving information defining a limited area audio scene within the virtual reality audio scene (<b>301</b>), wherein the limited area audio scene defines a sub space of the virtual reality audio scene (<b>304</b>), wherein the information defines the limited area audio scene by defining an extent a user can move within the virtual audio scene; determining if the movement of the user within the limited area audio scene meets a condition of an audio scene change (<b>302</b>); and processing the audio scene change when the movement of the user within the limited area audio scene meets the condition of an audio scene change (<b>306</b>).</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="114.05mm" wi="158.75mm" file="US20230007427A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="266.62mm" wi="105.83mm" orientation="landscape" file="US20230007427A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="214.04mm" wi="142.41mm" orientation="landscape" file="US20230007427A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="205.40mm" wi="148.42mm" orientation="landscape" file="US20230007427A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="251.04mm" wi="141.22mm" orientation="landscape" file="US20230007427A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="195.33mm" wi="156.46mm" orientation="landscape" file="US20230007427A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="115.49mm" wi="117.09mm" orientation="landscape" file="US20230007427A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="154.86mm" wi="148.51mm" orientation="landscape" file="US20230007427A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">The present application relates to apparatus and methods for signalling the audio scene changes with respect to audio objects within an audio scene.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Virtual reality (VR) generally refers to various capture and rendering technologies for generating realistic images and sounds that replicate a real or imaginary environment and simulate a user's physical presence in this environment. We may refer to this environment as a content consumption space.</p><p id="p-0004" num="0003">The way a user may move within a 3D space may be defined as motion in six degrees of freedom. This movement is divided into two categories: rotational and translational movement (with three degrees of freedom each). Rotational movement is sufficient for a simple VR experience where the user may turn their head (pitch, yaw, and roll) to experience the space from a static or automatically moving point. Translational movement means that the user may also change the position within in the space and thus their position with respect to the rendering of the audio, i.e., move along the x, y, and z axes according to her wishes.</p><p id="p-0005" num="0004">Augmented reality (AR) shares many similarities with VR. Typically, it refers to a direct or indirect view of a physical, real-world environment to which computer-generated sensory input such as sound and graphics is added. Mixed reality (MR) is a term that is used to cover various levels of virtuality of the reality-virtuality spectrum. For most purposes, in the context of the current invention, all these terms may be used interchangeably.</p><p id="p-0006" num="0005">Rendering of six-degrees-of-freedom (6DoF) audio, which is also known as free-viewpoint or free-listening point audio is a rapidly developing field. Specifically, the application of audio rendering controlled by the user (for example the user's head rotation and location in the audio content space) for AR/VR audio is complex and new field. This spatial audio may consist of, for example, a channel-based bed and audio objects, audio objects only, or any equivalent spatial audio representation. It is understood that the audio sources may themselves be dynamic as well as the user. Thus for example the audio source &#x2018;default&#x2019; location in the 3D space may be time-variant.</p><p id="p-0007" num="0006">Object-based audio has many meanings. For example, in the traditional broadcast domain, object-based audio is utilized to offer a broader range of personalization options for the consumer. In this context, a typical audio element delivered as an audio object is dialogue. This may allow, for example, selecting a specific language version or a sports commentary association with one of the competing teams.</p><p id="p-0008" num="0007">With respect to 6DoF free-viewpoint audio, audio objects may be understood as dynamic audio (sources) with various properties and, very importantly, a rendering location. Thus, it is the definition of the audio object locations, or an equivalent spatial audio representation, that allow for the user as a listener to move around a specific audio object, go close to it, distance themselves from it, and so on. The movement of the user therefore affects the way an audio is rendered. For instance, some audio scenes may be complex comprising a large number of audio elements represented as audio objects with each element needing to be individually rendered in space and time as the user moves around the audio scene.</p><p id="p-0009" num="0008">The application of 6DoF audio rendering in AR/VR systems however can be problematic by requiring a considerable processing overhead in order to render an audio scene comprising many audio elements.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0010" num="0009">There is according to a first aspect a method for rendering a virtual reality audio scene comprising: receiving information defining a limited area audio scene within the virtual reality audio scene, wherein the limited area audio scene defines a sub space of the virtual reality audio scene, wherein the information defines the limited area audio scene by defining an extent a user can move within the virtual audio scene; determining whether the movement of the user within the limited area audio scene meets a condition of at least one audio scene change; and processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change.</p><p id="p-0011" num="0010">The extent may be defined as a number of predetermined directional steps, wherein each of the predetermined directional steps may have at least one associated audio scene change condition and wherein the at least one audio scene change condition may be associated with a respective at least one audio scene change, wherein determining whether the movement of the user within the limited area audio scene meets a condition of the at least one audio scene change may comprise determining that the movement of the user meets the at least one audio scene change condition of one of the number of predetermined directional steps, and wherein processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change may comprise processing the respective at least one audio scene change associated with the at least one audio scene change condition.</p><p id="p-0012" num="0011">The extent may be defined as an area of the virtual reality audio scene within a physical room, wherein the area may have at least one associated audio scene change condition and wherein the at least one audio scene change condition may be associated with a respective at least one audio scene change, wherein determining whether the movement of the user within the limited area audio scene meets a condition of at least one audio scene change may comprises determining that the movement of the user meets the at least one audio scene change condition of the area, and wherein processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change may comprise processing the respective at least one audio scene change associated with the at least one audio scene change condition</p><p id="p-0013" num="0012">Each defined directional step or movement may be accompanied by an indication as to the processing burden required to process the respective at least one audio scene change.</p><p id="p-0014" num="0013">The information defining the limited area audio scene may be a data structure of a timed metadata track.</p><p id="p-0015" num="0014">The data structure may comprise for the at least one audio scene change at least one of the following data fields: an identifier indicating an audio scene associated with the condition of the at least one audio scene change; an identifier identifying a group of audio elements comprising an audio element associated with the condition of the at least one audio scene change condition; and an identifier identifying an audio element associated with the condition of the least one audio scene change.</p><p id="p-0016" num="0015">The information defining a limited area audio scene may be part of a sample entry within a timed metadata track according to the ISOBMFF.</p><p id="p-0017" num="0016">The at least one audio scene change may be defined by at least one audio element and the rendering parameters of the at least one audio element.</p><p id="p-0018" num="0017">The at least one audio element may comprise at least one of: an audio object; an audio channel; and higher order ambisonics.</p><p id="p-0019" num="0018">According to a second aspect there is an apparatus for rendering a virtual reality audio scene comprising: means for receiving information defining a limited area audio scene within the virtual reality audio scene, wherein the limited area audio scene defines a sub space of the virtual reality audio scene, wherein the information defines the limited area audio scene by defining an extent a user can move within the virtual audio scene; means for determining whether the movement of the user within the limited area audio scene meets a condition of at least one audio scene change; and means for processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change.</p><p id="p-0020" num="0019">The extent may be defined as a number of predetermined directional steps, wherein each of the predetermined directional steps has at least one associated audio scene change condition and wherein the at least one audio scene change condition may be associated with a respective at least one audio scene change, wherein the means for determining whether the movement of the user within the limited area audio scene meets a condition of the at least one audio scene change may comprise means for determining that the movement of the user meets the at least one audio scene change condition of one of the number of predetermined directional steps, and wherein means for processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change may comprise means for processing the respective at least one audio scene change associated with the at least one audio scene change condition.</p><p id="p-0021" num="0020">The extent may be defined as an area of the virtual reality audio scene within a physical room, wherein the area may have at least one associated audio scene change condition and wherein the at least one audio scene change condition may be associated with a respective at least one audio scene change, wherein the means for determining whether the movement of the user within the limited area audio scene meets a condition of at least one audio scene change may comprise means for determining that the movement of the user meets the at least one audio scene change condition of the area, and wherein the means for processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change may comprise means for processing the respective at least one audio scene change associated with the at least one audio scene change condition.</p><p id="p-0022" num="0021">Each defined directional step or movement may be accompanied by an indication as to the processing burden required to process the respective at least one audio scene change.</p><p id="p-0023" num="0022">The information defining the limited area audio scene may be a data structure of a timed metadata track.</p><p id="p-0024" num="0023">The data structure may comprise for the at least one audio scene change at least one of the following data fields: an identifier indicating an audio scene associated with the condition of the at least one audio scene change; an identifier identifying a group of audio elements comprising an audio element associated with the condition of the at least one audio scene change condition; and an identifier identifying an audio element associated with the condition of the least one audio scene change.</p><p id="p-0025" num="0024">The information defining a limited area audio scene may be part of a sample entry within a timed metadata track according to the ISOBMFF.</p><p id="p-0026" num="0025">The at least one audio scene change may be defined by at least one audio element and the rendering parameters of the at least one audio element.</p><p id="p-0027" num="0026">The at least one audio element may comprise at least one of: an audio object; an audio channel; and higher order ambisonics.</p><p id="p-0028" num="0027">According to a third aspect there is an apparatus for rendering a virtual reality audio scene comprising at least one processor and at least one memory including computer program code, the at least one memory and the computer program code configured to, with the at least one processor, cause the apparatus to: receive information defining a limited area audio scene within the virtual reality audio scene, wherein the limited area audio scene defines a sub space of the virtual reality audio scene, wherein the information defines the limited area audio scene by defining an extent a user can move within the virtual audio scene; determine whether the movement of the user within the limited area audio scene meets a condition of at least one audio scene change; and process the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change.</p><p id="p-0029" num="0028">A computer program product stored on a medium may cause an apparatus to perform the method as described herein.</p><p id="p-0030" num="0029">An electronic device may comprise apparatus as described herein.</p><p id="p-0031" num="0030">A chipset may comprise apparatus as described herein.</p><p id="p-0032" num="0031">Embodiments of the present application aim to address problems associated with the state of the art.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">SUMMARY OF THE FIGURES</heading><p id="p-0033" num="0032">For a better understanding of the present application, reference will now be made by way of example to the accompanying drawings in which:</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows the processing pipeline of a 6DoF audio renderer;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIGS. <b>2</b><i>a </i>and <b>2</b><i>b</i></figref>: shows an extent of the impact zone within a 6DoF audio scene according to embodiments;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>3</b></figref>: shows schematically an example system suitable for implementing decoding rendering and outputting six degree of freedom audio according to some embodiments;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>4</b></figref>: is a process flow diagram illustration a process according to embodiments of these teachings;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>5</b></figref>: shows an example of an extent in accordance with an area of a physical room; and</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>6</b></figref>: shows schematically an example device suitable for implementing the apparatus shown above according to some embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">EMBODIMENTS OF THE APPLICATION</heading><p id="p-0040" num="0039">The following describes in further detail suitable apparatus and possible mechanisms for improving the decoding, rendering and presentation or outputting of six-degree-of-freedom (6DoF) audio.</p><p id="p-0041" num="0040">As discussed previously the application of 6DoF audio rendering in AR/VR systems however can be problematic by requiring a considerable processing overhead in order to render an audio scene comprising many audio elements. A complex audio scene comprising many audio elements can result in a multitude of different combinations and permutations of rendering parameters that may need to be calculated and checked with respect to the movement of the user around the audio scene. This complexity can be a considerable burden on AR/AR systems rendering 6DoF audio. One way of reducing this computational complexity is to reduce the size of the audio scene in relation to the rendering parameters of each audio element such that audio elements within a smaller area (around the user) are favoured rather than audio elements in the whole audio scene. This invention therefore proceeds from the consideration that the complexity requirements of rendering an audio scene in relation to the movement in time and space of a user may be reduced by having an active audio scene of reduced scope.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a framework 6DoF AR/VR system according to the Moving Picture Expert Group standards group known as MPEG-I upon which embodiments may be implemented. Within <figref idref="DRAWINGS">FIG. <b>1</b></figref> there is depicted the Audio rendering data <b>101</b> which is typically streamed to or stored on a user device and an MPEG-I Audio Renderer <b>102</b> comprising a pipeline for retrieving the audio rendering data <b>1021</b> and performing auralization of the rendered audio data <b>1022</b>. Within the framework depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref> the audio rendering data <b>101</b> may be generally considered to contain information describing an 6DoF Audio scene, and more particularly a MPEG-I 6DoF audio scene. This can encompass all contents of the virtual audio scene, i.e. all of its sound sources in the form of audio elements, and resource data, such as audio waveforms, source radiation patterns and information on the acoustic environment. Additionally, the audio rendering data may cater for audio scene animation by describing how an audio scene may change over time with respect to moving objects.</p><p id="p-0043" num="0042">Within the context of 6DoF AR/VR systems and in particular the framework of the rendering pipeline of <figref idref="DRAWINGS">FIG. <b>1</b></figref> the following terms may be defined.</p><p id="p-0044" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="63pt" align="left"/><colspec colname="2" colwidth="196pt" align="left"/><thead><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Audio Object</entry><entry>Audio Signal and associated metadata</entry></row><row><entry>Audio Channel</entry><entry>Audio Signal and associated metadata</entry></row><row><entry>Higher Order</entry><entry>Audio Signal and associated metadata</entry></row><row><entry>Ambisonics (HOA)</entry><entry/></row><row><entry>Audio Element</entry><entry>One or more audio signals and associated metadata. Audio</entry></row><row><entry/><entry>Elements are audio objects, channels or HOA signals with</entry></row><row><entry/><entry>associated MPEG-I 6DoF metadata and MPEG-H 3D Audio</entry></row><row><entry/><entry>metadata if appropriate.</entry></row><row><entry>Acoustic</entry><entry>Metadata describing the acoustic properties of the virtual scene</entry></row><row><entry>Environment</entry><entry>to be rendered, e.g. room or locality. These might include</entry></row><row><entry/><entry>reverberation times (RT60), zones of occlusion, etc.</entry></row><row><entry>Acoustic Element</entry><entry>Object in VR space that reflects, diffracts and/or absorbs</entry></row><row><entry/><entry>sound.</entry></row><row><entry>Audio Scene</entry><entry>All audio elements, acoustic elements and acoustic environment</entry></row><row><entry/><entry>which are needed to render the sound in the scene.</entry></row><row><entry/><entry>Note: Audio scene is not the same as scene-based audio</entry></row><row><entry/><entry>(e.g., HOA).</entry></row><row><entry>User</entry><entry>The listener whose position and orientation are used for</entry></row><row><entry/><entry>rendering.</entry></row><row><entry>Audio Scene change</entry><entry>Changes in the audio scene which impact the audio rendering.</entry></row><row><entry/><entry>These changes might be triggered by the user.</entry></row><row><entry>Audio Renderer</entry><entry>Normative functionality that renders sound for the user. The</entry></row><row><entry/><entry>output of the Audio Renderer are the audio signals to be</entry></row><row><entry/><entry>reproduced over headphones or loudspeakers.</entry></row><row><entry>Audio Rendering</entry><entry>Parameters that control the audio renderer, such as</entry></row><row><entry>Parameters</entry><entry>enabling/disabling specific features (e.g., room acoustics,</entry></row><row><entry/><entry>Doppler shifts) or min/max values, gain values, default values,</entry></row><row><entry/><entry>etc.</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0045" num="0043">Returning to <figref idref="DRAWINGS">FIG. <b>1</b></figref> in can be seen that the input <b>101</b> to the Audio Renderer <b>102</b> may comprise a number of audio elements which may comprise any combination of audio objects, audio channels and HOAs. Additionally, the input <b>101</b> may also comprise audio scene information which provides a description of the audio scene in the form of a file. The audio scene information file may be viewed as list of instructions drawing together the various different entities such as sound sources, acoustic environment, geometric elements, audio elements into a coherent audio scene.</p><p id="p-0046" num="0044">In some embodiments the audio scene information may take the form of an xml file. Below is a simple example of an xml audio scene information file consisting of a single &#x3c;AudioScene&#x3e; node, in which all entities are declared (e.g. sound sources, acoustic environment, geometric elements, audio signals, etc.). The brief example defines a simple, time-invariant test scene with one MPEG-I Audio Object, that represents a trumpet with directivity</p><p id="p-0047" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="182pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>&#x3c;AudioScene&#x3e;</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="112pt" align="left"/><tbody valign="top"><row><entry/><entry>&#x2003;&#x3c;AudioStream</entry><entry>id=&#x201c;signal:trumpet&#x201d;</entry></row><row><entry/><entry/><entry>file=&#x201c;armstrong.wav&#x201d;</entry></row><row><entry/><entry/><entry>vstChannels=&#x201c;0, 1&#x201d; /&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x3c;SourceDirectivity</entry><entry>&#x2003;&#x2003;id=&#x201c;dir:trumpet&#x201d;</entry></row><row><entry/><entry/><entry>&#x2003;&#x2003;file=&#x201c;trumpet.sofa&#x201d; /&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x3c;objectSource</entry><entry>&#x2003;id=&#x201c;src:trumpet&#x201d;</entry></row><row><entry/><entry/><entry>&#x2003;position=&#x201c;2 1.7 &#x2212;1.25&#x201d;</entry></row><row><entry/><entry/><entry>&#x2003;orientation=&#x201c;30 &#x2212;12 0&#x201d;</entry></row><row><entry/><entry/><entry>&#x2003;signal=&#x201c;signal:trumpet&#x201d;</entry></row><row><entry/><entry/><entry>&#x2003;directivity=&#x201c;dir:trumpet&#x201d;</entry></row><row><entry/><entry/><entry>&#x2003;gainob=&#x201c;&#x2212;2&#x201d;</entry></row><row><entry/><entry/><entry>&#x2003;active=&#x201c;true&#x201d; /&#x3e;</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="182pt" align="left"/><tbody valign="top"><row><entry/><entry>&#x3c;/AudioScene&#x3e;</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0048" num="0045">It is to be understood that the above example merely serves as an example of audio scene description information. Other forms of audio scene description may contain many more nodes and audio elements. However, it can be seen that an audio scene information file declares the scene's entities and contains references to data that is in the other input files. These input files (or file pathnames) may be referenced in the declaration syntax of the entities. All pathnames are specified relative to the directory containing the scene.xml file. The audio description information file may also describe dynamic behaviour over time of any audio elements within the audio scene.</p><p id="p-0049" num="0046">As previously discussed the 6DoF MPEG-I Audio Renderer <b>102</b> can be considered to comprise a pipeline of retrieving the audio rendering data <b>1021</b> followed by the auralization of the rendered audio data <b>1022</b>. The retrieval of the audio rendering data can be in part governed by the changes in the audio scene as a result actions by the user. These changes may generally take the form of a list of instructions or directives which cater for various changeable scenarios in the audio scene initiated by the user. For example, if a user walks into a particular zone of the audio scene then a particular audio element or combinations of audio elements may need to be rendered with particular rendering parameters to provide for the change of the audio scene from the user perspective. In order to cater for this functionality, the pre-processing and audio data retrieval stage <b>1021</b> of the 6DoF Audio Renderer <b>102</b> may comprise a specific change in the audio scene, in other words an audio scene change (ASC) which can be triggered by a particular ASC condition being met. The triggering of the ASC condition may be in response to some action instigated by the user. Therefore, within a 6DoF Audio Renderer <b>102</b>, there may be a list of ASC conditions which trigger corresponding changes to the audio scene (ASCs). In other words, for each ASC condition there is a corresponding ASC.</p><p id="p-0050" num="0047">Following is an example of an ASC condition:</p><p id="p-0051" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="7pt" align="left"/><colspec colname="1" colwidth="210pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>&#x3c;!-- Listener proximity based trigger --&#x3e;</entry></row><row><entry/><entry>&#x3c;ListenerProximityCondition id=&#x201c;cond:user_near_poster&#x201d;</entry></row><row><entry/><entry>&#x2003;region=&#x201c;geo:user_position_trigger&#x201d; /&#x3e;</entry></row><row><entry/><entry>&#x3c;Cylinder id=&#x201c;geo:user_position_trigger&#x201d;</entry></row><row><entry/><entry>&#x2003;position=&#x201c;2 1 &#x2212;0.5&#x201d; orientation=&#x201c;0 0 0&#x201d; size=&#x201c;1.5 4.0 1.5&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x3c;!-- play additional instruments when user is near poster --&#x3e;</entry></row><row><entry/><entry>&#x3c;Update condition=&#x201c;cond:user_near_poster&#x201d;&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:vocals1&#x201d; active=&#x201c;true&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:ukulele1&#x201d; active=&#x201c;true&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:ukulele1&#x201d; active=&#x201c;true&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:shaker&#x201d; active=&#x201c;&#x201c;true&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;!-- Hysteresis --&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;geo:user_position_trigger&#x201d; size=&#x201c;1.7 4.0 1.7&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x3c;/Update&#x3e;</entry></row><row><entry/><entry>&#x3c;!-- mute additional instruments when user not near poster --&#x3e;</entry></row><row><entry/><entry>&#x3c;Update condition=&#x201c;cond:user_near_poster&#x201d; fireOn=&#x201c;false&#x201d;&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:vocals1&#x201d; active=&#x201c;false&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:ukulele1&#x201d; active=&#x201c;false&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:ukulele2&#x201d; active=&#x201c;false&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;src:shaker&#x201d; active=&#x201c;false&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;!-- Hysteresis --&#x3e;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x3c;Modify id=&#x201c;geo:user_position_trigger&#x201d; size=&#x201c;1.5 4.0 1.5&#x201d;/&#x3e;</entry></row><row><entry/><entry>&#x3c;/Update&#x3e;</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0052" num="0048">In the above example, there is a scene change condition defined based on proximity, four audio objects are enabled if the user crosses into a certain region in the virtual scene. It can be seen, therefore, that there are multiple such ASC conditions which may need to be checked in order to determine if the ASC is to be triggered. The process can occur for every frame which can result in the renderer being overloaded.</p><p id="p-0053" num="0049">The act of determining which ASC conditions have been met can have a direct influence on which particular audio elements and other audio scene related information such as acoustic elements (along with the Audio scene Information) are retrieved from the audio rendering data <b>101</b> in order to construct the audio scene for the user.</p><p id="p-0054" num="0050">The first pipeline stage <b>1021</b> of the 6DoF Audio renderer can therefore be envisaged as having a pre-processing stage whereby each ASC condition is checked in respect to the user's position within the audio scene. This pre-processing stage may then determine which particular audio elements and other audio scene paraphernalia are retrieved from the stored/streamed audio rendering data <b>101</b>.</p><p id="p-0055" num="0051">Finally, <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows the final stage of the pipeline as the auralization stage <b>1022</b> whereby the audio elements and other audio scene related paraphernalia from the previous pipeline stage <b>1021</b> are processed into the audio scene. The auralization stage may comprise various mathematical models and signal processing functions to create the sound fields of the various audio elements which make up the audio scene. The various auralization techniques which can be used to process the rendered audio components of the audio scene are well documented in the scientific literature covering this field, and the reader is referred to such literature.</p><p id="p-0056" num="0052">Returning to the above discussed problem, it can be seen that if the scope of influence or zone of impact of the user within the whole audio scene is limited then the subsequent processing of the audio scene around the user can be reduced to that scope or zone. In other words, there may be no need to process ASCs for the entire audio scene but instead only those ASCs which are within the impact zone of the user.</p><p id="p-0057" num="0053">Therefore, this invention proceeds from the desire to define an impact zone in relation to the user's space within the audio scene. This can have the effect of reducing the number of ASCs triggered as a result of the user's movements which in turn reduces the amount of processing and rendering required to reflect the changes to the audio scene.</p><p id="p-0058" num="0054">Audio elements in 6DoF systems are rendered based on the (listener) user's position and rotation within the virtual audio scene. Therefore, different audio elements become audible for the user depending on user movement in the content consumption space (or audio scene.)</p><p id="p-0059" num="0055">With this in mind we turn to <figref idref="DRAWINGS">FIGS. <b>2</b><i>a </i>and <b>2</b><i>b </i></figref>in which there is depicted 6DoF audio scene <b>201</b> and <b>207</b> each with a user <b>203</b> and <b>209</b> represented in their respective virtual audio scene. It can be seen that over a short period of time the user's movement may be limited to a relatively small area of the audio scene (<b>205</b> and <b>211</b>) when compared to the total scope of the audio scene. This reduced scope of virtual audio space may be termed an impact audio zone because at any time only those elements within the reduced scope are impacted by the movement of the user. Therefore, only those audio elements associated with the reduced scope of the audio space may be required to be processed in order to update the audio scene as a result of the user's movements. In other words, by limiting the extent of the impact zone to be less than the entire audio scene, this has the effect of limiting the number of possible ASCs which can be triggered compared to the total number of ASCs associated with whole audio scene. This leads to the advantage that the triggering conditions of a fewer number of ASCs are required to be monitored in order to cover the changes of the audio scene as a result of the user's movements.</p><p id="p-0060" num="0056">The size or dimensions of the &#x201c;impact zone&#x201d; may be determined in part by the range of allowable movements the user (listener) is able to perform whilst using the application. For instance, if the user <b>203</b> is in a sitting position the size of the &#x201c;impact zone&#x201d; may be determined by the possible range of movements of the head. However, with reference to <figref idref="DRAWINGS">FIG. <b>2</b><i>b</i></figref>, the user <b>209</b> is allowed to move freely within the audio scene <b>207</b>. Consequently, the impact zone <b>211</b> can be bigger in order to cater for the larger number of ASCs which can be triggered by the user's <b>203</b> movements within the audio scene <b>207</b>.</p><p id="p-0061" num="0057">In embodiments the impact zone may be modelled as a virtual space around the user and may take a set form such as cube or a sphere as shown by <b>205</b> and <b>207</b> in <figref idref="DRAWINGS">FIGS. <b>2</b><i>a </i>and <b>2</b><i>b </i></figref>respectively. Alternatively, the impact zone space may take an arbitrary shape defined by a mesh consisting of a list of vertices (3D coordinates) and a number of triangular faces (i.e. the indices of three vertices). The size of the possible impact zone extent can be embedded as an impact zone description timed metadata track based on the content creator's preference. The encoder may then analyse the audio elements present in the audio scene to determine the bitrate impact of the impact zone size.</p><p id="p-0062" num="0058">In some embodiments a discrete number of impact zones may be added based on a content creator preference in order to control which objects in the audio scene are accessible. This may lead to an advantageous result whereby a semantic coherence can be maintained. For instance, the case may arise when there is a need to have two audio objects in the audio scene, however restrictions to the impact zone result in only one audio object being accessible. In this case a smaller impact zone may be selected in order to maintain continuity of the audio scene.</p><p id="p-0063" num="0059">In embodiments the extent of the impact zone (or the boundary of the impact zone) or also known as a limited area audio scene may be signalled to the renderer using the following data struct.</p><p id="p-0064" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="42pt" align="left"/><colspec colname="1" colwidth="175pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>aligned(8) class ImpactZoneExtentStruct( ) {</entry></row><row><entry/><entry>&#x2003;unsigned int(16) distance_scale;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) maxX;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) maxY;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) maxZ;</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0065" num="0060">Where distance_scale is a positive scale value which indicate the units used for the following distance measurements in the structure. For instance, a particular value of distance_scale can signify that any distance measurements are in 1 cm units. However, the distance_scale could be defined to represent a unit of any suitable scale, such as a metre. The variables maxX, maxY and maxZ indicate the extent of the impact zone in terms of the distance scale units based around the user's head as the origin.</p><p id="p-0066" num="0061">In some embodiments the extent may define an area within a physical room for VR/AR audio playback, and that the audio scene change would facilitate the rendering of the necessary audio elements/audio objects or combinations thereof to provide the VR audio scene for the defined area. <figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an area <b>501</b> (defined by the extent) within a physical room <b>503</b>, in which the area may be given by the x and y physical dimensions.</p><p id="p-0067" num="0062">In some embodiments the above data structure defining the extent of the impact zone may be signalled as part of a timed metadata track. For instance, the data structure defining the extent of the impact zone may be part of a sample entry within a timed metadata track encapsulated as a moov box according to the ISO Base Media File Format (ISOBMFF). In these embodiments the sample entry of the metadata track can be used to provide continuous updates in time of the extent of the impact zone to the audio renderer, which in turn enables the triggering of ASC in different parts of the audio scene for animated video. The metadata track having the impact zone sample entry may accompany and apply to any number of omnidirectional video tracks within the moov box.</p><p id="p-0068" num="0063">In these embodiments the data structure sample of the metadata track may have the track sample entry type &#x2018;izod&#x2019; and can be specified as</p><p id="p-0069" num="0000"><tables id="TABLE-US-00005" num="00005"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="203pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>class IzdSampleEntry( ) extends MetadataSampleEntry(&#x2018;izod&#x2019;) {</entry></row><row><entry/><entry>&#x2003;unsigned int(16) distance_scale;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) maxX;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) maxY;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) maxZ;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) XaxisSteps;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) YaxisSteps;</entry></row><row><entry/><entry>&#x2003;unsigned int(16) ZaxisSteps;</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0070" num="0064">The sample syntax of the sample entry type &#x2018;izod&#x2019; may be specified as</p><p id="p-0071" num="0000"><tables id="TABLE-US-00006" num="00006"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="196pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>class IzdSample( ) {</entry></row><row><entry/><entry>&#x2003;for (i = 0; j &#x3c; ZaxisSteps; i++) {</entry></row><row><entry/><entry>&#x2003;&#x2003;for (j = 0; j &#x3c; XaxisSteps; j++) {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;for (k =0; k &#x3c; YaxisSteps; j++) {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;unsigned int(16) bitrate_impact;</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;for(m=0; i&#x3c;num_audio_impacted; m++) {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;unsigned int(16) mae_audioSceneInfoID[m];</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;unsigned int(16) mae_groupID[m];</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;unsigned int(16) mae_audioElementID[m];</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;}</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0072" num="0065">Where ZaxisSteps, XaxisSteps and YaxisSteps are variables that have values which indicate the number of steps which the user can virtually move within the audio scene. So as the AV/VR virtual system provides details on the user's movement within the audio scene the sample entry type &#x2018;izod&#x201d; provides information on the which audio elements are impacted by a step change of the user's position within the audio scene. The identification of the number audio elements num_audio_impacted impacted by a user's movement may be indicated according to the following members of the above sample data structure:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0066">mae_audioSceneInfoID is an array indicating for each step the audio scene to which the audio element impacted by a step change belongs;</li>        <li id="ul0002-0002" num="0067">mae_groupID is an array indicating for each step the element group ID to which the audio element impacted by a step change belongs; and</li>        <li id="ul0002-0003" num="0068">mae_audioElementID is an array indicating for each step the particular element within the group impacted by the step change.</li>    </ul>    </li></ul></p><p id="p-0073" num="0069">Consequently, each audio element can be categorised by audio scene, element group within the audio scene and the particular audio element within the element group.</p><p id="p-0074" num="0070">It may be seen from the above structure that the ZaxisSteps, XaxisSteps and YaxisSteps variables define a granularity of audio elements impacted by the user's movements. Such that each registered movement by the user in a sample period of time will converted to a number of steps along the three directions of movement X, Y and Z. The above &#x2018;izod&#x2019; sample data structure may then provide an indication of which audio elements are impacted or pulled into scope for each possible Zaxis, Yaxis and Zaxis step.</p><p id="p-0075" num="0071">Additionally, each step change, also may be accompanied with an indication of the bit rate requirement (or burden) of the respective step change of the user's position, given as bitrate_impact. In other words, bitrate_impact is the bitrate impact in terms of data size or kbps that can be provisioned for supporting a certain impact zone size, the larger step size then the greater the bitrate impact.</p><p id="p-0076" num="0072">Consequently, the above sample entry type &#x2018;izod&#x2019; allows for the impact zone data to become part of a timed metadata track according to the ISOBMFF standard thereby providing support of animated audio video scenes. The immersive content may have multiple different timed metadata tracks corresponding to different impact zone sizes. This allows the player to select the appropriate impact zone depending on the player preference or available bandwidth impact of the different impact zone description tracks. For example, an impact zone description track with a large impact zone extent is expected to have larger bitrate impact compared to one with a smaller impact zone extent.</p><p id="p-0077" num="0073"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example rendering apparatus <b>300</b> such as a 6DoF MPEG-I audio renderer configured to implement above impact audio zone processing of ASCs. It would be understood that the apparatus may be implemented on any suitable hardware and software (firmware) combination. In some embodiments the apparatus is implemented by a digital workstation (DAW) with a VR user interface.</p><p id="p-0078" num="0074">The rendering apparatus <b>300</b> may be arranged to receive from the channel or storage <b>301</b> the encoded audio elements and audio scene information in addition to the streamed or stored ASC impact data, in other words the Audio rendering data according to the parlance of the pipeline in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The Audio rendering data may be streamed or stored as a file format type (the file format type may conform to the ISOBMFF). In embodiments ASC impact data may comprise the impact zone extent information such as the ImpactZoneExtentStruct in the case of static audio scene or a timed metadata track having the above &#x2018;izod&#x2019; sample entry type in the case of an animated scene.</p><p id="p-0079" num="0075">In some embodiments there may be a specific communication channel signalling the impact zone extent information to the renderer <b>300</b>.</p><p id="p-0080" num="0076">Furthermore, in relation to the channel or storage <b>301</b> a timed metadata track may accompany a stored or streamed an impact zone timed metadata track.</p><p id="p-0081" num="0077">The renderer <b>300</b> is also arranged to receive user position and head tracker information <b>302</b> from a user <b>303</b> equipped with suitable 6DoF determination apparatus.</p><p id="p-0082" num="0078">Within the renderer <b>300</b> the received impact zone extent information may be used in conjunction with the user position and head tracker information by the impact zone determiner <b>304</b> in order to determine the positional information of the user in relation to the bounds of the impact zone extent. In embodiments deploying impact zone extent information in the form of &#x2018;izod&#x2019; sample entry this process may involve determining the nearest step index along the three directions of movement X, Y and Z. The output from the impact zone determiner <b>304</b> may then be the position within the extent of the impact zone of the user. This information can be used to determine the specific ASCs which are triggered by this position.</p><p id="p-0083" num="0079">Information regarding the user's position within the extent of the impact zone may then be passed to the ASC determiner <b>305</b>. The ASC determiner <b>305</b> may be configured to use this information to determine which ASCs are triggered within the extent of the impact zone by the user's position. In embodiments the determination process may take the form of determining which of the list of ASC conditions (associated with the extent of the impact zone) have been met by the user's position in the impact zone. As explained previously each ASC condition may be associated with a corresponding ASC, and the ASC may have associated with it rendering parameters of one or more audio elements within the audio scene in order to process the change to the audio scene from the user's perspective. It is to be understood that a particular ASC may also comprise changes to rendering parameters of other acoustic properties of the audio scene.</p><p id="p-0084" num="0080">In embodiments (which employ the impact zone approach to determining ASCs) a cache processing structure may be used in which all rendering parameters associated with the elements of each ASC are pre-calculated and held in a cache memory store. The cache processing approach may be particular useful in this circumstance because there are only a limited number of ASCs which can be triggered within the extent of the impact zone. Thereby making it feasible to pre-calculate the respective rendering parameters and hold them in a cache memory along with their ASC identification in order to improve processing efficiency.</p><p id="p-0085" num="0081">In one operating scenario of the renderer <b>300</b>, the renderer <b>300</b> may receive impact zone extent information via an application interface. The renderer <b>300</b> may then check the ASC conditions within the impact zone as determined by the user's position and orientation. The ASC conditions may be prestored in the cache. If any particular ASC condition is triggered by data resulting from the user's position and orientation the corresponding ASC and accompanying audio elements including respective rendering parameters may be retrieved for the auralization of the audio scene.</p><p id="p-0086" num="0082">In another operating scenario of the renderer <b>300</b>, as before the renderer <b>300</b> may receive impact zone extent information via an application interface. Additionally, the renderer <b>300</b> may receive a number of timed metadata tracks each carrying different audio elements relating to different impact zone extent regions (an impact zone description timed metadata track). The renderer may then select the appropriate the impact zone description timed metadata track for the particular impact zone. The renderer <b>300</b> may then determine which ASC conditions are triggered from the from the selected impact zone description timed metadata track. The impact zone description timed metadata track may have incorporated within the bitrate_impact data structure, thereby allowing the renderer to determine the processing requirements for the selected time metadata track.</p><p id="p-0087" num="0083">The output from the ASC determiner <b>305</b> may therefore comprise the audio rendering parameters associated with each triggered ASC within the impact zone extent. These parameters may be passed together with the Audio element and acoustic environment metadata from the channel and storage <b>301</b> to the auralizer <b>306</b>. The Auralizer <b>306</b> may then process the audio elements and acoustic properties associated with the triggered ASCs in order produce the virtual audio scene. As mentioned earlier the Auralizer <b>306</b> may deploy a number of techniques to achieve this such as decoding and signal processing technologies to process the audio elements and various mathematical models to process acoustical room characteristics in order to create the sound fields making up the audio scene. The output <b>307</b> from the auralizer <b>306</b>, the rendered audio signals, may be presented to the user <b>303</b>, for example by headphone.</p><p id="p-0088" num="0084"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a set of processing steps which may be processed by the 6DoF Audio renderer for the purposes of rendering ASC within the impact zone. With reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> the following processing steps may be performed within the confines of the impact zone determiner <b>304</b> and the ASC determiner <b>305</b>.</p><p id="p-0089" num="0085">The processing steps of the 6DoF audio renderer may be configured to receive the impact zone extent information along with the user position &#x26; orientation information these are shown as processing steps <b>401</b> and <b>403</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. As mentioned above these may be used to determine the position of the user with respect to the impact zone. In this respect processing step <b>405</b> is depicted as using the above two pieces of information in order to determine the position of the user in the impact zone. The result of this processing step is used to determine which ASCs conditions are triggered within the impact zone. This is shown as the processing step <b>407</b> where it can be seen that the ASC conditions associated with the impact zone are received as processing step <b>409</b>. The output of <b>407</b> is then passed to the decision processing step <b>411</b> which determines if the ASC id is present in the cache memory. The cache can comprise at least one of the following: ASC condition ID; ASC condition; and ASC condition and associated rendering parameters.</p><p id="p-0090" num="0086">If the ASC has not been added to the cache then the processed audio rendering parameters of the audio elements associated with the triggered ASC are added to the cache along with the ASC id. This is shown as the processing step <b>413</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Finally, the processed audio rendering parameters of the audio elements associated with the triggered ASC are shown as being an output from the cache as processing step <b>415</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0091" num="0087">With respect to <figref idref="DRAWINGS">FIG. <b>6</b></figref> an example electronic device which may be used as the capture device and/or audio signal analyser/processor and/or playback device is shown. The device may be any suitable electronics device or apparatus. For example, in some embodiments the device <b>1400</b> is a mobile device, user equipment, tablet computer, computer, audio playback apparatus, etc.</p><p id="p-0092" num="0088">The device <b>1400</b> may comprise a microphone or microphone array <b>1401</b>. The microphone or microphone array <b>1401</b> may comprise a plurality (for example a number N) of microphone elements. However, it is understood that there may be any suitable configuration of microphones and any suitable number of microphones.</p><p id="p-0093" num="0089">In some embodiments the microphone or microphone array <b>1401</b> is separate from the apparatus and the audio signal transmitted to the apparatus by a wired or wireless coupling. The microphone or microphone array <b>1401</b> may in some embodiments be the microphone array as shown in the previous figures.</p><p id="p-0094" num="0090">The microphone or microphone array may comprise transducers configured to convert acoustic waves into suitable electrical audio signals. In some embodiments the microphone or microphone array may comprise solid state microphones. In other words the microphones may be capable of capturing audio signals and outputting a suitable digital format signal. In some other embodiments the microphone or microphone array <b>1401</b> can comprise any suitable microphone type or audio capture means, for example condenser microphone, capacitor microphone, electrostatic microphone, Electret condenser microphone, dynamic microphone, ribbon microphone, carbon microphone, piezoelectric microphone, or microelectrical-mechanical system (MEMS) microphone. The microphone or microphone array can in some embodiments output the audio captured signals to an analogue-to-digital converter (ADC) <b>1403</b>.</p><p id="p-0095" num="0091">The device <b>1400</b> may further comprise an analogue-to-digital converter <b>1403</b>. The analogue-to-digital converter <b>1403</b> may be configured to receive the audio signals from each microphone <b>1401</b> and convert them into a format suitable for processing. In some embodiments where the microphone or microphone array comprises integrated microphone the analogue-to-digital converter is not required. The analogue-to-digital converter <b>1403</b> can be any suitable analogue-to-digital conversion or processing means. The analogue-to-digital converter <b>1403</b> may be configured to output the digital representations of the audio signals to a processor <b>1207</b> or to a memory <b>1411</b>.</p><p id="p-0096" num="0092">In some embodiments the device <b>1400</b> comprises at least one processor or central processing unit <b>1207</b>. The processor <b>1407</b> can be configured to execute various program codes such as the methods such as described herein.</p><p id="p-0097" num="0093">In some embodiments the device <b>1400</b> comprises a memory <b>1411</b>. In some embodiments the at least one processor <b>1407</b> is coupled to the memory <b>1411</b>. The memory <b>1411</b> can be any suitable storage means. In some embodiments the memory <b>1411</b> comprises a program code section for storing program codes implementable upon the processor <b>1407</b>. Furthermore, in some embodiments the memory <b>1411</b> can further comprise a stored data section for storing data, for example data that has been processed or to be processed in accordance with the embodiments as described herein. The implemented program code stored within the program code section and the data stored within the stored data section can be retrieved by the processor <b>1407</b> whenever needed via the memory-processor coupling.</p><p id="p-0098" num="0094">In some embodiments the device <b>1400</b> comprises a user interface <b>1405</b>. The user interface <b>1405</b> can be coupled in some embodiments to the processor <b>1407</b>. In some embodiments the processor <b>1407</b> can control the operation of the user interface <b>1405</b> and receive inputs from the user interface <b>1405</b>. In some embodiments the user interface <b>1405</b> can enable a user to input commands to the device <b>1400</b>, for example via a keypad. In some embodiments the user interface <b>1405</b> can enable the user to obtain information from the device <b>1400</b>. For example, the user interface <b>1405</b> may comprise a display configured to display information from the device <b>1400</b> to the user. The user interface <b>1405</b> can in some embodiments comprise a touch screen or touch interface capable of both enabling information to be entered to the device <b>1400</b> and further displaying information to the user of the device <b>1400</b>. In some embodiments the user interface <b>1405</b> may be the user interface for communicating with the position determiner as described herein.</p><p id="p-0099" num="0095">In some implements the device <b>1400</b> comprises a transceiver <b>1409</b>. The transceiver <b>1409</b> in such embodiments can be coupled to the processor <b>1407</b> and configured to enable a communication with other apparatus or electronic devices, for example via a wireless communications network. The transceiver <b>1409</b> or any suitable transceiver or transmitter and/or receiver means can in some embodiments be configured to communicate with other electronic devices or apparatus via a wire or wired coupling.</p><p id="p-0100" num="0096">For example, the transceiver <b>1409</b> may be configured to communicate with the renderer as described herein.</p><p id="p-0101" num="0097">The transceiver <b>1409</b> can communicate with further apparatus by any suitable known communications protocol. For example in some embodiments the transceiver <b>1409</b> or transceiver means can use a suitable universal mobile telecommunications system (UMTS) protocol, a wireless local area network (WLAN) protocol such as for example IEEE 802.X, a suitable short-range radio frequency communication protocol such as Bluetooth, or infrared data communication pathway (IRDA).</p><p id="p-0102" num="0098">In some embodiments the device <b>1400</b> may be employed as at least part of the audio processor. As such the transceiver <b>1409</b> may be configured to receive the audio signals and positional information from the capture device microphones or microphone array and in some embodiments determine the parameters as described herein by using the processor <b>1407</b> executing suitable code. Furthermore the device may generate a suitable audio signal and parameter output to be transmitted to the renderer or spatial processing device.</p><p id="p-0103" num="0099">In some embodiments the device <b>1400</b> may be employed as at least part of the renderer. As such the transceiver <b>1409</b> may be configured to receive the audio signals from the microphones or microphone array and in some embodiments the parameters determined at the capture device or processing device as described herein, and generate a suitable audio signal rendering by using the processor <b>1407</b> executing suitable code. The device <b>1400</b> may comprise a digital-to-analogue converter <b>1413</b>. The digital-to-analogue converter <b>1413</b> may be coupled to the processor <b>1407</b> and/or memory <b>1411</b> and be configured to convert digital representations of audio signals (such as from the processor <b>1407</b> following an audio rendering of the audio signals as described herein) to a suitable analogue format suitable for presentation via an audio subsystem output. The digital-to-analogue converter (DAC) <b>1413</b> or signal processing means can in some embodiments be any suitable DAC technology.</p><p id="p-0104" num="0100">Furthermore, the device <b>1400</b> can comprise in some embodiments an audio subsystem output <b>1415</b>. An example as shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref> shows the audio subsystem output <b>1415</b> as an output socket configured to enabling a coupling with headphones <b>1421</b>. However, the audio subsystem output <b>1415</b> may be any suitable audio output or a connection to an audio output. For example, the audio subsystem output <b>1415</b> may be a connection to a multichannel speaker system.</p><p id="p-0105" num="0101">In some embodiments the digital to analogue converter <b>1413</b> and audio subsystem <b>1415</b> may be implemented within a physically separate output device. For example, the DAC <b>1413</b> and audio subsystem <b>1415</b> may be implemented as cordless earphones communicating with the device <b>1400</b> via the transceiver <b>1409</b>.</p><p id="p-0106" num="0102">Although the device <b>1400</b> is shown having both audio capture, audio processing and audio rendering components, it would be understood that in some embodiments the device <b>1400</b> can comprise just some of the elements.</p><p id="p-0107" num="0103">In general, the various embodiments of the invention may be implemented in hardware or special purpose circuits, software, logic or any combination thereof. For example, some aspects may be implemented in hardware, while other aspects may be implemented in firmware or software which may be executed by a controller, microprocessor or other computing device, although the invention is not limited thereto. While various aspects of the invention may be illustrated and described as block diagrams, flow charts, or using some other pictorial representation, it is well understood that these blocks, apparatus, systems, techniques or methods described herein may be implemented in, as non-limiting examples, hardware, software, firmware, special purpose circuits or logic, general purpose hardware or controller or other computing devices, or some combination thereof.</p><p id="p-0108" num="0104">The embodiments of this invention may be implemented by computer software executable by a data processor of the mobile device, such as in the processor entity, or by hardware, or by a combination of software and hardware. Further in this regard it should be noted that any blocks of the logic flow as in the Figures may represent program steps, or interconnected logic circuits, blocks and functions, or a combination of program steps and logic circuits, blocks and functions. The software may be stored on such physical media as memory chips, or memory blocks implemented within the processor, magnetic media such as hard disk or floppy disks, and optical media such as for example DVD and the data variants thereof, CD.</p><p id="p-0109" num="0105">The memory may be of any type suitable to the local technical environment and may be implemented using any suitable data storage technology, such as semiconductor-based memory devices, magnetic memory devices and systems, optical memory devices and systems, fixed memory and removable memory. The data processors may be of any type suitable to the local technical environment, and may include one or more of general purpose computers, special purpose computers, microprocessors, digital signal processors (DSPs), application specific integrated circuits (ASIC), gate level circuits and processors based on multi-core processor architecture, as non-limiting examples.</p><p id="p-0110" num="0106">Embodiments of the inventions may be practiced in various components such as integrated circuit modules. The design of integrated circuits is by and large a highly automated process. Complex and powerful software tools are available for converting a logic level design into a semiconductor circuit design ready to be etched and formed on a semiconductor substrate.</p><p id="p-0111" num="0107">The foregoing description has provided by way of exemplary and non-limiting examples a full and informative description of the exemplary embodiment of this invention. However, various modifications and adaptations may become apparent to those skilled in the relevant arts in view of the foregoing description, when read in conjunction with the accompanying drawings and the appended claims. However, all such and similar modifications of the teachings of this invention will still fall within the scope of this invention as defined in the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-18" num="01-18"><claim-text><b>1</b>-<b>18</b>. (canceled)</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A method comprising:<claim-text>receiving information defining a limited area audio scene within a virtual reality audio scene, wherein the limited area audio scene defines a sub space of the virtual reality audio scene, and wherein the information defines the limited area audio scene by defining a movement capability of a user within the virtual audio scene;</claim-text><claim-text>determining whether a movement of the user within the limited area audio scene meets a condition of at least one audio scene change; and</claim-text><claim-text>processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method as claimed in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the movement capability is defined as a number of predetermined directional steps, wherein each of the predetermined directional steps has at least one associated audio scene change condition, and wherein the at least one audio scene change condition is associated with a respective at least one audio scene change, and wherein determining whether the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change comprises determining that the movement of the user meets the at least one audio scene change condition of one of the number of predetermined directional steps, and wherein processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change comprises processing the respective at least one audio scene change associated with the at least one audio scene change condition.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The method as Claimed in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the movement capability is defined as an area of the virtual reality audio scene within a physical space, wherein the area has at least one associated audio scene change condition and wherein the at least one audio scene change condition is associated with a respective at least one audio scene change, wherein determining whether the movement of the user within the limited area audio scene meets the condition of at least one audio scene change comprises determining that the movement of the user meets the at least one audio scene change condition of the area, and wherein processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change comprises processing the respective at least one audio scene change associated with the at least one audio scene change condition.</claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method as claimed in <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein each defined directional step or movement is accompanied by an indication as to a processing power required to process the respective at least one audio scene change.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The method as claimed in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the information defining the limited area audio scene is a data structure of a timed metadata track.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method as claimed in <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein the data structure comprises, for the at least one audio scene change, at least one of the following data fields:<claim-text>an identifier indicating an audio scene associated with the condition of the at least one audio scene change;</claim-text><claim-text>an identifier identifying a group of audio elements comprising an audio element associated with the condition of the at least one audio scene change condition; or</claim-text><claim-text>an identifier identifying an audio element associated with the condition of the least one audio scene change.</claim-text></claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The method as claimed in <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein the information defining a limited area audio scene comprises part of a sample entry within a timed metadata track according to the ISOBMFF.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The method as claimed in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the at least one audio scene change is defined by at least one audio element and the rendering parameters of the at least one audio element.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The method as claimed in <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the at least one audio element comprises at least one of:<claim-text>an audio object;</claim-text><claim-text>an audio channel; or</claim-text><claim-text>higher order ambisonics.</claim-text></claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. An apparatus comprising at least one processor and at least one memory including computer program code, the at least one memory and the computer program code configured to, with the at least one processor, cause the apparatus to:<claim-text>receive information defining a limited area audio scene within the virtual reality audio scene, wherein the limited area audio scene defines a sub space of the virtual reality audio scene, wherein the information defines the limited area audio scene by defining a movement capability of a user within the virtual audio scene;</claim-text><claim-text>determine whether a movement of the user within the limited area audio scene meets a condition of at least one audio scene change; and</claim-text><claim-text>process the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change.</claim-text></claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The apparatus as claimed in <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the movement capability is defined as a number of predetermined directional steps, wherein each of the predetermined directional steps has at least one associated audio scene change condition and wherein the at least one audio scene change condition is associated with a respective at least one audio scene change, wherein the apparatus caused to determine whether the movement of the user within the limited area audio scene meets a condition of the at least one audio scene change is caused to determine that the movement of the user meets the at least one audio scene change condition of one of the number of predetermined directional steps, and wherein the apparatus caused to process the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change is caused to process the respective at least one audio scene change associated with the at least one audio scene change condition.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The apparatus as claimed in <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the movement capability is defined as an area of the virtual reality audio scene within a physical space, wherein the area has at least one associated audio scene change condition and wherein the at least one audio scene change condition is associated with a respective at least one audio scene change, wherein the apparatus is further caused to determine whether the movement of the user within the limited area audio scene meets a condition of at least one audio scene change is caused to determine that the movement of the user meets the at least one audio scene change condition of the area, and wherein the apparatus is further caused to process the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change is caused to process the respective at least one audio scene change associated with the at least one audio scene change condition.</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. The apparatus as claimed in <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein each defined directional step or movement is accompanied by an indication as to the processing power required to process the respective at least one audio scene change.</claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The apparatus as claimed in <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the information defining the limited area audio scene is a data structure of a timed metadata track.</claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The apparatus as claimed in <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein the data structure comprises for the at least one audio scene change at least one of the following data fields:<claim-text>an identifier indicating an audio scene associated with the condition of the at least one audio scene change;</claim-text><claim-text>an identifier identifying a group of audio elements comprising an audio element associated with the condition of the at least one audio scene change condition; and</claim-text><claim-text>an identifier identifying an audio element associated with the condition of the least one audio scene change.</claim-text></claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The apparatus as claimed in <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein the information defining a limited area audio scene is part of a sample entry within a timed metadata track according to the ISOBMFF.</claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The apparatus as claimed in <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the at least one audio scene change is defined by at least one audio element and the rendering parameters of the at least one audio element.</claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. The apparatus as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref>, wherein the at least one audio element comprises at least one of:<claim-text>an audio object;</claim-text><claim-text>an audio channel; and</claim-text><claim-text>higher order ambisonics.</claim-text></claim-text></claim><claim id="CLM-00037" num="00037"><claim-text><b>37</b>. A computer program product embodied on a non-transitory computer readable medium, comprising computer program code configured to, when executed on at least one processor, cause an apparatus to:<claim-text>receive information defining a limited area audio scene within the virtual reality audio scene, wherein the limited area audio scene defines a sub space of the virtual reality audio scene, wherein the information defines the limited area audio scene by defining a movement capability of a within the virtual audio scene;</claim-text><claim-text>determine whether a movement of the user within the limited area audio scene meets a condition of at least one audio scene change; and</claim-text><claim-text>process the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change.</claim-text></claim-text></claim><claim id="CLM-00038" num="00038"><claim-text><b>38</b>. The computer program product as claimed in <claim-ref idref="CLM-00037">claim 37</claim-ref>, wherein the movement capability is defined as a number of predetermined directional steps, wherein each of the predetermined directional steps has at least one associated audio scene change condition, and wherein the at least one audio scene change condition is associated with a respective at least one audio scene change, and wherein determining whether the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change comprises determining that the movement of the user meets the at least one audio scene change condition of one of the number of predetermined directional steps, and wherein processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change comprises processing the respective at least one audio scene change associated with the at least one audio scene change condition.</claim-text></claim><claim id="CLM-00039" num="00039"><claim-text><b>39</b>. The computer program product as claimed in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the movement capability is defined as an area of the virtual reality audio scene within a physical space, wherein the area has at least one associated audio scene change condition and wherein the at least one audio scene change condition is associated with a respective at least one audio scene change, wherein determining whether the movement of the user within the limited area audio scene meets the condition of at least one audio scene change comprises determining that the movement of the user meets the at least one audio scene change condition of the area, and wherein processing the at least one audio scene change when the movement of the user within the limited area audio scene meets the condition of the at least one audio scene change comprises processing the respective at least one audio scene change associated with the at least one audio scene change condition.</claim-text></claim></claims></us-patent-application>