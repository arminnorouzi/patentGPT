<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE sequence-cwu SYSTEM "us-sequence-listing-v1_3-2020-10-08.dtd" [ ]><sequence-cwu id="SEQLST-1"><publication-reference><document-id><country>US</country><doc-number>20230002822</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><number>1</number><sequence-list-new-rules><s100><s160>2</s160></s100><s200><s210>1</s210><s211>20</s211><s212>DNA</s212><s213>Artificial Sequence</s213><s220><s223>primer</s223></s220></s200><s400> 1aatgatacgg cgaccaccga                                                 20</s400><s200><s210>2</s210><s211>21</s211><s212>DNA</s212><s213>Artificial Sequence</s213><s220><s223>primer</s223></s220></s200><s400> 2caagcagaag acggcatacg a                                               21</s400></sequence-list-new-rules></sequence-cwu><?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230002823A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230002823</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17867430</doc-number><date>20220718</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>C</section><class>12</class><subclass>Q</subclass><main-group>1</main-group><subgroup>6869</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>16</class><subclass>B</subclass><main-group>30</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>16</class><subclass>B</subclass><main-group>30</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>16</class><subclass>B</subclass><main-group>30</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>C</section><class>12</class><subclass>Q</subclass><main-group>1</main-group><subgroup>6869</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190201</date></cpc-version-indicator><section>G</section><class>16</class><subclass>B</subclass><main-group>30</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190201</date></cpc-version-indicator><section>G</section><class>16</class><subclass>B</subclass><main-group>30</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190201</date></cpc-version-indicator><section>G</section><class>16</class><subclass>B</subclass><main-group>30</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SEQUENCE ASSEMBLY</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16790519</doc-number><date>20200213</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17867430</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>14250891</doc-number><date>20140411</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10604799</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16790519</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>13494616</doc-number><date>20120612</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>8738300</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>14250891</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>13439508</doc-number><date>20120404</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>8209130</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>13494616</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Invitae Corporation</orgname><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>PORRECA</last-name><first-name>Gregory</first-name><address><city>Cambridge</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>KENNEDY</last-name><first-name>Caleb</first-name><address><city>Arlington</city><state>MA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Invitae Corporation</orgname><role>02</role><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The invention relates to assembly of sequence reads. The invention provides a method for identifying a mutation in a nucleic acid involving sequencing nucleic acid to generate a plurality of sequence reads. Reads are assembled to form a contig, which is aligned to a reference. Individual reads are aligned to the contig. Mutations are identified based on the alignments to the reference and to the contig.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="163.83mm" wi="151.05mm" file="US20230002823A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="237.32mm" wi="178.73mm" orientation="landscape" file="US20230002823A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="215.82mm" wi="181.19mm" orientation="landscape" file="US20230002823A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 16/790,519, filed Feb. 13, 2020, which is a continuation of U.S. patent application Ser. No. 14/250,891, filed Apr. 11, 2014, now U.S. Pat. No. 10,604,799, which is a continuation of U.S. patent application Ser. No. 13/494,616, filed Jun. 12, 2012, now U.S. Pat. No. 8,738,300, which is a continuation of U.S. patent application Ser. No. 13/439,508, filed Apr. 4, 2012, now U.S. Pat. No. 8,209,130, the contents of each of which are incorporated by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The invention relates to assembly of sequence reads.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Methods to sequence or identify significant fractions of the human genome and genetic variations within those segments are becoming commonplace. However, a major impediment to understanding health implications of variations found in every human being remains unraveling of the functional meaning of sequence differences in individuals. Sequencing is an important first step that allows geneticists and physicians to develop a full functional understanding of that data.</p><p id="p-0005" num="0004">Next-generation sequencing (NGS) technologies include instruments capable of sequencing more than 10<sup>14 </sup>kilobase-pairs (kbp) of DNA per instrument run. Sequencing typically produces a large number of independent reads, each representing anywhere between 10 to 1000 bases of the nucleic acid. Nucleic acids are generally sequenced redundantly for confidence, with replicates per unit area being referred to as the coverage (i.e., &#x201c;10&#xd7; coverage&#x201d; or &#x201c;100&#xd7; coverage&#x201d;). Thus, a multi-gene genetic screening can produce millions of reads.</p><p id="p-0006" num="0005">When a genetic screening is done for a person, the resulting reads can be compared to a reference, such as a published human genome. This comparison generally involves either assembling the reads into a contig and aligning the contig to the reference or aligning each individual read to the reference.</p><p id="p-0007" num="0006">Assembling reads into a contig and aligning the contig to a reference produces unsatisfactory results due to the algorithms used for contig assembly. Generally, algorithms for contig assembly assess a read using certain quality criteria. Those criteria set a threshold at which certain reads that satisfy the algorithm are determined to be legitimate reads that are used to assemble the contigs, while reads that do not satisfy the algorithm are excluded from the contig assembly process. Based on the threshold level of the algorithm, as many as 10% of legitimate sequence reads are excluded from further analysis.</p><p id="p-0008" num="0007">Additionally, aligning the resulting contig to a reference is error prone due to a tradeoff, inherent in doing an alignment, between whether mismatches or gaps (insertions/deletions, or &#x201c;indels&#x201d;) are favored. When one sequence is aligned to another, if one sequence does not match the other perfectly, either gaps must be introduced into the sequences until all the bases match or mismatched bases must appear in the alignment. Existing approaches to alignment involve algorithms with good mismatch sensitivity at the expense of indel sensitivity or good indel sensitivity at the expense of mismatch sensitivity. For example, if an alignment is to detect mismatches with sufficient fidelity, then it is likely that some indels will be missed.</p><p id="p-0009" num="0008">Even where assembly provides accurate detection of variants (e.g., substitutions or indels), these methods are often computationally intractable for high throughput data analysis because each read must be compared to every other read in a dataset to determine sequence overlap and build contigs.</p><p id="p-0010" num="0009">Another sequence assembly technique involves aligning each individual read to a reference. This assembly technique is problematic because very short reads (e.g., 50 bp or less) may align well in a number of places on a very long reference (e.g., 5 million bp). With a number of equally good positions to align to, aligning a read to a reference offers little positional accuracy. Also, particularly with very short reads, long indels can be difficult or impossible to detect. Due in part to the tradeoff between substitution sensitivity and indel sensitivity, certain mutation patterns are particularly difficult to detect. Indels near the ends of reads are sometimes incorrectly interpreted as short strings of mismatched bases. Substitutions near indels are often interpreted incorrectly, as well.</p><p id="p-0011" num="0010">Existing methods of read assembly do not offer the positional accuracy of a contig-based alignment while including detailed information from each read. Further, due to limitations in alignment algorithms, existing methods do a poor job of correctly interpreting certain mutations (e.g., indels near the ends of reads, substitutions near indels).</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0012" num="0011">The invention generally relates to genotyping nucleic acids through methods of assembling and aligning sequence reads. Methods of the invention combine a contig based sequence assembly approach with an individual alignment based sequence assembly approach in order to more accurately assemble sequence reads. Methods of the invention are accomplished by assembling contigs from sequence reads, aligning the contigs to a reference sequence, aligning the reads back to the contig, and identifying mutations via the assembled contig and the alignments. By assembling reads into contigs as well as aligning the individual reads to the contigs, the need to compare each of the reads to all of the others is avoided, providing computational tractability even for very high throughput analyses. Information about variants in the sample is identified through the alignment of the contigs to the reference. After aligning each raw read, the alignment of the read to the contig is used to map positional information and any identified differences (i.e., variant information) from the reference to the raw read. The raw read is then translated to include positional and variant information, allowing genotyping to be performed using the aligned translated reads.</p><p id="p-0013" num="0012">By these methods, positional accuracy of reads is obtained and the limitations of a tradeoff between substitution sensitivity and deletion sensitivity are overcome. By combining data in this way, an accurate and sensitive interpretation of the nucleic acid is obtained and an accurate description of a genotype including an identity and a location of a mutation on an organism's genome is reported.</p><p id="p-0014" num="0013">Generally, nucleic acid obtained from a subject is sequenced to produce a plurality of reads. Sequencing the nucleic acid may be by any method known in the art. For example, sequencing may involve pyrosequencing, sequencing-by-synthesis, reversible dye-terminators, or sequencing by hybridization.</p><p id="p-0015" num="0014">The reads produced by sequencing are assembled into one or more contigs. Assembly into contigs may be by any method including: collection into subsets based on, for example, barcodes, primers, or probe sets; a heuristic method; or any traditional assembly algorithm known in the art. For example, assembly de novo can include an assembly using a greedy algorithm. A computer processor can select the two reads from a plurality that exhibit the most overlap, join them to produce a new read, and repeat, thereby assembling the reads produce an contig. In certain embodiments, assembly includes positioning the reads relative to each other by making reference to a reference genome. This occurs where, for example, the subject nucleic acid is sequenced as captured by molecular inversion probes, because the start of each read derives from a genomic position that is known and specified by the probe set design.</p><p id="p-0016" num="0015">Where a number of different probe sets are used, the full set of raw reads can be organized into subsets according to an associated probe. The number of reads that must be cross-compared is reduced substantially, providing computational tractability for very high throughput data sets. In some embodiments, extrinsic knowledge of probe position (i.e., relative offset in reference genome) is used to aid in positioning the reads. By collecting each read per probe and/or positioning each read according to a known relative offset, reads can be assigned to contigs a priori, further improving specificity of positional information.</p><p id="p-0017" num="0016">In some embodiments, the reads may contain barcode information. Barcode, generally, refers to any sequence information used for identification, grouping, or processing. For example, barcode information may be inserted into template nucleic acid during sample prep or sequencing. Barcodes can be included to identify individual reads, groups of reads, subsets of reads associated with probes, subsets of reads associated with exons, subsets of reads associated with samples or any other group, or any combination thereof. For example, by sequencing sample and barcode information, reads can be sorted (e.g., using a computer processor) by sample, exon, probe set, etc., or combination thereof, through reference to the barcode information. The reads may be assembled into contigs by reference to the barcode information. A computer processor can identify the barcodes and assemble the reads by positioning the barcodes together.</p><p id="p-0018" num="0017">Reads are assembled into contigs. In the case of a single, homozygous target nucleic acid, a single contig per location is typically produced. In other cases such as, for example, multiple patient multiplexed analyses, heterozygous targets, a rare somatic mutation, or a mixed sample, two or more contigs can be produced. Each contig can be represented as a consensus sequence, i.e., a probable interpretation of the sequence of the nucleic acid represented by that contig.</p><p id="p-0019" num="0018">Each contig is aligned to a reference genome. Where, for example, two contigs were found for a given exon, both align to the same reference position, but one may contain variant information that the other does not. In certain embodiments, positioning a contig along a reference genome involves indexing the reference, for example, with a Burrows-Wheeler Transform (BWT). Indexing a reference can be done by computer programs known in the art, for example, Burrows-Wheeler Aligner (BWA) available from the SourceForge web site maintained by Geeknet (Fairfax, Va.) using the bwa-sw algorithm. Contigs may then be aligned to the indexed reference. For example, where the bwa-sw algorithm is implemented by BWA, parameters of the alignment are optimized to ensure correct placement of the contig on the overall reference genome. In some embodiments, protein-coding sequence data in a contig, consensus sequence, or reference genome, is represented by amino acid sequence and a contig is aligned to a reference genome with reference to the amino acid sequence.</p><p id="p-0020" num="0019">With each contig aligned to the reference genome, any differences between the contig and the reference genome can be identified. Since the entire contig with contiguous sequence from many overlapping reads is positioned against the reference genome, the added sequence context increases the likelihood that the correct position is identified whereby variant information (e.g., mismatches and gaps) can be transferred transiently and with high fidelity from reference to contig and from contig to reads. Thus, any indels introduced here likely represent differences between the nucleic acid and the reference. Each mutation identified here can be described with reference to the reference genome. In certain embodiments, a computer program creates a file or variable containing a description of the mutation (e.g., a compact idiosyncratic gapped alignment report (CIGAR) string).</p><p id="p-0021" num="0020">With the contigs aligned, each raw read is aligned to a contig in a local, contig-specific alignment. In certain embodiments, a pairwise alignment is performed between the read and the contig. In some embodiments, all reads align as a perfect match to at least one contig. For example, BWA with bwa-short can be used to align each read to a contig, and the output can be a Binary Alignment Map (BAM) including, for example, a CIGAR string. A file or variable can record the results of the local, contig-specific alignment (e.g., as a CIGAR string).</p><p id="p-0022" num="0021">Each raw read-to-contig alignment is mapped to the reference using the corresponding contig-to-reference alignment. By using the contig as a vehicle, positional and variant information relative to the reference is provided for each read, allowing each raw read alignment to be translated to include positional and variant information relative to the reference genome.</p><p id="p-0023" num="0022">Genotyping is performed using the translated, aligned reads. Raw quality scores (e.g., for substitutions) can be included. The output of the local alignment, describing the read compared to the contig, can be combined with the output of the reference alignment, describing the contig compared to the reference. This combination gives, for any mutation detected in the nucleic acid, a description of that mutation relative to the reference genome. Wild type and mutant alleles including specific mutations can be identified. Mutation patterns previously thought to pose particular difficulty (e.g., long indels, indel-proximal substitutions, and indels near the ends of reads) are identified with fidelity. Methods of the invention can perform, with high-throughput data using existing computer power, sequencing and genotyping analyses that were previously computationally intractable.</p><p id="p-0024" num="0023">By combining information in this way, the limitations of a tradeoff between substitution sensitivity and deletion sensitivity is overcome. The output includes an accurate and sensitive interpretation of the subject nucleic. This provides an accurate description of a genotype including an identity and a location of a mutation on an organism's genome.</p><p id="p-0025" num="0024">The output can be provided in the format of a computer file. In certain embodiments, the output is a VCF file, FASTA file, XML file, or similar containing sequence data such as a sequence of the nucleic acid aligned to a sequence of the reference genome. In certain embodiments, the output contains coordinates or a string describing one or more mutations in the subject nucleic acid relative to the reference genome. In some embodiments, the output is a sequence alignment map (SAM) or binary alignment map (BAM) file comprising a CIGAR string.</p><p id="p-0026" num="0025">The output describes a mutation in the nucleic acid. Mutations detectable by methods of the invention include substitutions, single nucleotide polymorphisms, insertions, deletions, translocations, epigenetic mutations, and copy number repeats. Methods of the invention detect and describe more than one mutation including, for example, two or more mutations. Mutations can be detected that are near each other, for example less than about 1,000 nucleotides apart along a strand of nucleic acid. In a preferred embodiment, methods of the invention can detect two mutations within about 100 bases of each other, such as, for example, within about 10 bases or about 5 bases of each other. Methods of the invention can detect two mutations of different types near each other including, for example, a substitution near an indel. Mutations near the ends of sequence reads can be detected including, for example, an indel at or near an end of a read.</p><p id="p-0027" num="0026">In certain embodiments, a sample is heterogeneous (e.g., includes heterogeneous tumor, circulating fetal, or other DNA) and at least some of the individual reads include variations relative to the contig. Mutations in individual reads can be detected when each raw read is aligned to a contig in a local, contig-specific alignment. Parameters of this alignment can be optimized to ensure very highly sensitive detection of mutations and combinations of mutations. For example, because the position relative to the reference genome is established with confidence, a gap penalty can be decreased relative to a substation probability. By these methods, the individual reads can be examined to detect any mutations including, for example, mutations specific to that read or only a few reads. That is, a difference between the reference and an individual read is determined using differences between the read and the contig plus differences between the contig and the reference. For example, a contig may map to the reference with a 1 bp substitution, and a read may map to the contig with a 8 bp deletion. Methods of the invention give the correct annotation for the read, relative to the reference, as a description including a 8 bp deletion as well as a 1 bp substitution.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram of methods of the invention.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an exemplary embodiment according to the invention.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a system for performing methods of the invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0031" num="0030">The invention generally relates to a method for identifying a mutation in a nucleic acid. The invention provides methods for genetic screening of one or multiple genes or other nucleic acid sequences. Genetic screening can include screening for a mutation, which can be a disease-associated mutation, where the nucleic acid comes from a sample obtained from a patient. Methods of the invention can also be used in a test for heterozygosity, or loss thereof, in a tumor.</p><p id="p-0032" num="0031">Nucleic acid in a sample can be any nucleic acid including, for example, genomic DNA in a tissue sample, cDNA amplified from a particular target in a laboratory sample, or mixed DNA from multiple organisms. In some embodiments, the sample includes homozygous DNA from a haploid or diploid organism. For example, a sample can include genomic DNA from a patient who is homozygous for a rare recessive allele. In other embodiments, the sample includes heterozygous genetic material from a diploid organism such that two alleles are present in substantially equal amounts. In certain embodiments, the sample includes genetic material from a diploid or polyploid organism with a somatic mutation such that two related nucleic acids are present in allele frequencies other than 50 or 100%, i.e., 20%, 5%, 1%, 0.1%, or any other allele frequency.</p><p id="p-0033" num="0032">In one embodiment, nucleic acid template molecules (e.g., DNA or RNA) are isolated from a biological sample containing a variety of other components, such as proteins, lipids and non-template nucleic acids. Nucleic acid template molecules can be obtained from any cellular material, obtained from an animal, plant, bacterium, fungus, or any other cellular organism. Biological samples for use in the present invention include viral particles or preparations. Nucleic acid template molecules can be obtained directly from an organism or from a biological sample obtained from an organism, e.g., from blood, urine, cerebrospinal fluid, seminal fluid, saliva, sputum, stool and tissue. Any tissue or body fluid specimen may be used as a source for nucleic acid for use in the invention. Nucleic acid template molecules can also be isolated from cultured cells, such as a primary cell culture or a cell line. The cells or tissues from which template nucleic acids are obtained can be infected with a virus or other intracellular pathogen. A sample can also be total RNA extracted from a biological specimen, a cDNA library, viral, or genomic DNA. A sample may also be isolated DNA from a non-cellular origin, e.g. amplified/isolated DNA from the freezer.</p><p id="p-0034" num="0033">Generally, nucleic acid can be extracted from a biological sample by a variety of techniques such as those described by Maniatis, et al., Molecular Cloning: A Laboratory Manual, 1982, Cold Spring Harbor, N.Y., pp. 280-281; Sambrook and Russell, Molecular Cloning: A Laboratory Manual 3Ed, Cold Spring Harbor Laboratory Press, 2001, Cold Spring Harbor, N.Y.; or as described in U.S. Pub. 2002/0190663.</p><p id="p-0035" num="0034">Nucleic acid obtained from biological samples may be fragmented to produce suitable fragments for analysis. Template nucleic acids may be fragmented or sheared to desired length, using a variety of mechanical, chemical and/or enzymatic methods. DNA may be randomly sheared via sonication, e.g. Covaris method, brief exposure to a DNase, or using a mixture of one or more restriction enzymes, or a transposase or nicking enzyme. RNA may be fragmented by brief exposure to an RNase, heat plus magnesium, or by shearing. The RNA may be converted to cDNA. If fragmentation is employed, the RNA may be converted to cDNA before or after fragmentation. In one embodiment, nucleic acid from a biological sample is fragmented by sonication. In another embodiment, nucleic acid is fragmented by a hydroshear instrument. Generally, individual nucleic acid template molecules can be from about 2 kb bases to about 40 kb. In a particular embodiment, nucleic acids are about 6 kb-10 kb fragments. Nucleic acid molecules may be single-stranded, double-stranded, or double-stranded with single-stranded regions (for example, stem- and loop-structures).</p><p id="p-0036" num="0035">A biological sample as described herein may be homogenized or fractionated in the presence of a detergent or surfactant. The concentration of the detergent in the buffer may be about 0.05% to about 10.0%. The concentration of the detergent can be up to an amount where the detergent remains soluble in the solution. In one embodiment, the concentration of the detergent is between 0.1% to about 2%. The detergent, particularly a mild one that is nondenaturing, can act to solubilize the sample. Detergents may be ionic or nonionic. Examples of nonionic detergents include triton, such as the Triton&#xae; X series (Triton&#xae; X-100 t-Oct-C<sub>6</sub>H<sub>4</sub>&#x2014;(OCH<sub>2</sub>&#x2014;CH<sub>2</sub>)<sub>x</sub>OH, x=9-10, Triton&#xae; X-100R, Triton&#xae; X-114 x=7-8), octyl glucoside, polyoxyethylene(9)dodecyl ether, digitonin, IGEPAL&#xae; CA630 octylphenyl polyethylene glycol, n-octyl-beta-D-glucopyranoside (betaOG), n-dodecyl-beta, Tween&#xae; 20 polyethylene glycol sorbitan monolaurate, Tween&#xae; 80 polyethylene glycol sorbitan monooleate, polidocanol, n-dodecyl beta-D-maltoside (DDM), NP-40 nonylphenyl polyethylene glycol. C12E8 (octaethylene glycol n-dodecyl monoether), hexaethyleneglycol mono-n-tetradecyl ether (C14EO6), octyl-beta-thioglucopyranoside (octyl thioglucoside, OTG), Emulgen, and polyoxyethylene 10 lauryl ether (C12E10). Examples of ionic detergents (anionic or cationic) include deoxycholate, sodium dodecyl sulfate (SDS), N-lauroylsarcosine, and cetyltrimethylammoniumbromide (CTAB). A zwitterionic reagent may also be used in the purification schemes of the present invention, such as Chaps, zwitterion 3-14, and 3-[(3-cholamidopropyl) dimethyl-ammonio]-1-propanesulfonate. It is contemplated also that urea may be added with or without another detergent or surfactant.</p><p id="p-0037" num="0036">Lysis or homogenization solutions may further contain other agents, such as reducing agents. Examples of such reducing agents include dithiothreitol (DTT), &#x3b2;-mercaptoethanol, DTE, GSH, cysteine, cysteamine, tricarboxyethyl phosphine (TCEP), or salts of sulfurous acid.</p><p id="p-0038" num="0037">In various embodiments, the nucleic acid is amplified, for example, from the sample or after isolation from the sample. Amplification refers to production of additional copies of a nucleic acid sequence and is generally carried out using polymerase chain reaction or other technologies well known in the art (e.g., Dieffenbach and Dveksler, PCR Primer, a Laboratory Manual, 1995, Cold Spring Harbor Press, Plainview, N.Y.). The amplification reaction may be any amplification reaction known in the art that amplifies nucleic acid molecules, such as polymerase chain reaction, nested polymerase chain reaction, polymerase chain reaction-single strand conformation polymorphism, ligase chain reaction (Barany, F., Genome Research, 1:5-16 (1991); Barany, F., PNAS, 88:189-193 (1991); U.S. Pat. Nos. 5,869,252; and 6,100,099), strand displacement amplification and restriction fragments length polymorphism, transcription based amplification system, rolling circle amplification, and hyper-branched rolling circle amplification. Further examples of amplification techniques that can be used include, but are not limited to, quantitative PCR, quantitative fluorescent PCR (QF-PCR), multiplex fluorescent PCR (MF-PCR), real time PCR (RTPCR), single cell PCR, restriction fragment length polymorphism PCR (PCR-RFLP), RT-PCR-RFLP, hot start PCR, in situ polonony PCR, in situ rolling circle amplification (RCA), bridge PCR, picotiter PCR and emulsion PCR. Other suitable amplification methods include transcription amplification, self-sustained sequence replication, selective amplification of target polynucleotide sequences, consensus sequence primed polymerase chain reaction (CP-PCR), arbitrarily primed polymerase chain reaction (AP-PCR), degenerate oligonucleotide-primed PCR (DOP-PCR) and nucleic acid based sequence amplification (NABSA). Other amplification methods that can be used herein include those described in U.S. Pat. Nos. 5,242,794; 5,494,810; 4,988,617; and 6,582,938.</p><p id="p-0039" num="0038">In certain embodiments, the amplification reaction is the polymerase chain reaction. Polymerase chain reaction (PCR) refers to methods by K. B. Mullis (U.S. Pat. Nos. 4,683,195 and 4,683,202, hereby incorporated by reference) for increasing concentration of a segment of a target sequence in a mixture of genomic DNA without cloning or purification.</p><p id="p-0040" num="0039">Primers can be prepared by a variety of methods including but not limited to cloning of appropriate sequences and direct chemical synthesis using methods well known in the art (Narang et al., Methods Enzymol., 68:90 (1979); Brown et al., Methods Enzymol., 68:109 (1979)). Primers can also be obtained from commercial sources such as Operon Technologies, Amersham Pharmacia Biotech, Sigma, and Life Technologies. The primers can have an identical melting temperature. The lengths of the primers can be extended or shortened at the 5&#x2032; end or the 3&#x2032; end to produce primers with desired melting temperatures. Also, the annealing position of each primer pair can be designed such that the sequence and length of the primer pairs yield the desired melting temperature. The simplest equation for determining the melting temperature of primers smaller than 25 base pairs is the Wallace Rule (Td=2(A+T)+4(G+C)). Computer programs can also be used to design primers, including but not limited to Array Designer Software from Arrayit Corporation (Sunnyvale, Calif.), Oligonucleotide Probe Sequence Design Software for Genetic Analysis from Olympus Optical Co., Ltd. (Tokyo, Japan), NetPrimer, and DNAsis Max v3.0 from Hitachi Solutions America, Ltd. (South San Francisco, Calif.). The TM (melting or annealing temperature) of each primer is calculated using software programs such as OligoAnalyzer 3.1, available on the web site of Integrated DNA Technologies, Inc. (Coralville, Iowa).</p><p id="p-0041" num="0040">With PCR, it is possible to amplify a single copy of a specific target sequence in genomic DNA to a level that can be detected by several different methodologies (e.g., staining; hybridization with a labeled probe; incorporation of biotinylated primers followed by avidin-enzyme conjugate detection; or incorporation of 32P-labeled deoxynucleotide triphosphates, such as dCTP or dATP, into the amplified segment). In addition to genomic DNA, any oligonucleotide sequence can be amplified with the appropriate set of primer molecules. In particular, the amplified segments created by the PCR process itself are, themselves, efficient templates for subsequent PCR amplifications.</p><p id="p-0042" num="0041">Amplification adapters may be attached to the fragmented nucleic acid. Adapters may be commercially obtained, such as from Integrated DNA Technologies (Coralville, Iowa). In certain embodiments, the adapter sequences are attached to the template nucleic acid molecule with an enzyme. The enzyme may be a ligase or a polymerase. The ligase may be any enzyme capable of ligating an oligonucleotide (RNA or DNA) to the template nucleic acid molecule. Suitable ligases include T4 DNA ligase and T4 RNA ligase, available commercially from New England Biolabs (Ipswich, MA). Methods for using ligases are well known in the art. The polymerase may be any enzyme capable of adding nucleotides to the 3&#x2032; and the 5&#x2032; terminus of template nucleic acid molecules.</p><p id="p-0043" num="0042">The ligation may be blunt ended or via use of complementary overhanging ends. In certain embodiments, following fragmentation, the ends of the fragments may be repaired, trimmed (e.g. using an exonuclease), or filled (e.g., using a polymerase and dNTPs) to form blunt ends. In some embodiments, end repair is performed to generate blunt end 5&#x2032; phosphorylated nucleic acid ends using commercial kits, such as those available from Epicentre Biotechnologies (Madison, Wis.). Upon generating blunt ends, the ends may be treated with a polymerase and dATP to form a template independent addition to the 3&#x2032;-end and the 5&#x2032;-end of the fragments, thus producing a single A overhanging. This single A is used to guide ligation of fragments with a single T overhanging from the 5&#x2032;-end in a method referred to as T-A cloning.</p><p id="p-0044" num="0043">Alternatively, because the possible combination of overhangs left by the restriction enzymes are known after a restriction digestion, the ends may be left as-is, i.e., ragged ends. In certain embodiments double stranded oligonucleotides with complementary overhanging ends are used.</p><p id="p-0045" num="0044">In certain embodiments, a single bar code is attached to each fragment. In other embodiments, a plurality of bar codes, e.g., two bar codes, are attached to each fragment.</p><p id="p-0046" num="0045">A bar code sequence generally includes certain features that make the sequence useful in sequencing reactions. For example the bar code sequences are designed to have minimal or no homopolymer regions, i.e., 2 or more of the same base in a row such as AA or CCC, within the bar code sequence. The bar code sequences are also designed so that they are at least one edit distance away from the base addition order when performing base-by-base sequencing, ensuring that the first and last base do not match the expected bases of the sequence.</p><p id="p-0047" num="0046">The bar code sequences are designed such that each sequence is correlated to a particular portion of nucleic acid, allowing sequence reads to be correlated back to the portion from which they came. Methods of designing sets of bar code sequences is shown for example in U.S. Pat. No. 6,235,475, the contents of which are incorporated by reference herein in their entirety. In certain embodiments, the bar code sequences range from about 5 nucleotides to about 15 nucleotides. In a particular embodiment, the bar code sequences range from about 4 nucleotides to about 7 nucleotides. Since the bar code sequence is sequenced along with the template nucleic acid, the oligonucleotide length should be of minimal length so as to permit the longest read from the template nucleic acid attached. Generally, the bar code sequences are spaced from the template nucleic acid molecule by at least one base (minimizes homopolymeric combinations).</p><p id="p-0048" num="0047">Methods of the invention involve attaching the bar code sequences to the template nucleic acids. In certain embodiments, the bar code sequences are attached to the template nucleic acid molecule with an enzyme. The enzyme may be a ligase or a polymerase, as discussed above. Attaching bar code sequences to nucleic acid templates is shown in U.S. Pub. 2008/0081330 and U.S. Pub. 2011/0301042, the content of each of which is incorporated by reference herein in its entirety. Methods for designing sets of bar code sequences and other methods for attaching bar code sequences are shown in U.S. Pat. Nos. 6,138,077; 6,352,828; 5,636,400; 6,172,214; 6235,475; 7,393,665; 7,544,473; 5,846,719; 5,695,934; 5,604,097; 6,150,516; RE39,793; 7,537,897; 6172,218; and 5,863,722, the content of each of which is incorporated by reference herein in its entirety.</p><p id="p-0049" num="0048">After any processing steps (e.g., obtaining, isolating, fragmenting, or amplification), nucleic acid can be sequenced according to certain embodiments of the invention.</p><p id="p-0050" num="0049">Sequencing may be by any method known in the art. DNA sequencing techniques include classic dideoxy sequencing reactions (Sanger method) using labeled terminators or primers and gel separation in slab or capillary, sequencing by synthesis using reversibly terminated labeled nucleotides, pyrosequencing, 454 sequencing, Illumina/Solexa sequencing, allele specific hybridization to a library of labeled oligonucleotide probes, sequencing by synthesis using allele specific hybridization to a library of labeled clones that is followed by ligation, real time monitoring of the incorporation of labeled nucleotides during a polymerization step, polony sequencing, and SOLiD sequencing. Sequencing of separated molecules has more recently been demonstrated by sequential or single extension reactions using polymerases or ligases as well as by single or sequential differential hybridizations with libraries of probes.</p><p id="p-0051" num="0050">A sequencing technique that can be used in the methods of the provided invention includes, for example, 454 sequencing (454 Life Sciences, a Roche company, Branford, Conn.) (Margulies, M et al., Nature, 437:376-380 (2005); U.S. Pat. Nos. 5,583,024; 5,674,713; and 5,700,673). 454 sequencing involves two steps. In the first step, DNA is sheared into fragments of approximately 300-800 base pairs, and the fragments are blunt ended. Oligonucleotide adaptors are then ligated to the ends of the fragments. The adaptors serve as primers for amplification and sequencing of the fragments. The fragments can be attached to DNA capture beads, e.g., streptavidin-coated beads using, e.g., Adaptor B, which contains 5&#x2032;-biotin tag. The fragments attached to the beads are PCR amplified within droplets of an oil-water emulsion. The result is multiple copies of clonally amplified DNA fragments on each bead. In the second step, the beads are captured in wells (pico-liter sized). Pyrosequencing is performed on each DNA fragment in parallel. Addition of one or more nucleotides generates a light signal that is recorded by a CCD camera in a sequencing instrument. The signal strength is proportional to the number of nucleotides incorporated. Pyrosequencing makes use of pyrophosphate (PPi) which is released upon nucleotide addition. PPi is converted to ATP by ATP sulfurylase in the presence of adenosine 5&#x2032; phosphosulfate. Luciferase uses ATP to convert luciferin to oxyluciferin, and this reaction generates light that is detected and analyzed.</p><p id="p-0052" num="0051">Another example of a DNA sequencing technique that can be used in the methods of the provided invention is SOLID technology by Applied Biosystems from Life Technologies Corporation (Carlsbad, Calif.). In SOLiD sequencing, genomic DNA is sheared into fragments, and adaptors are attached to the 5&#x2032; and 3&#x2032; ends of the fragments to generate a fragment library. Alternatively, internal adaptors can be introduced by ligating adaptors to the 5&#x2032; and 3&#x2032; ends of the fragments, circularizing the fragments, digesting the circularized fragment to generate an internal adaptor, and attaching adaptors to the 5&#x2032; and 3&#x2032; ends of the resulting fragments to generate a mate-paired library. Next, clonal bead populations are prepared in microreactors containing beads, primers, template, and PCR components. Following PCR, the templates are denatured and beads are enriched to separate the beads with extended templates. Templates on the selected beads are subjected to a 3&#x2032; modification that permits bonding to a glass slide. The sequence can be determined by sequential hybridization and ligation of partially random oligonucleotides with a central determined base (or pair of bases) that is identified by a specific fluorophore. After a color is recorded, the ligated oligonucleotide is cleaved and removed and the process is then repeated.</p><p id="p-0053" num="0052">Another example of a DNA sequencing technique that can be used in the methods of the provided invention is Ion Torrent sequencing, described, for example, in U.S. Pubs. 2009/0026082, 2009/0127589, 2010/0035252, 2010/0137143. 2010/0188073, 2010/0197507, 2010/0282617, 2010/0300559, 2010/0300895, 2010/0301398, and 2010/0304982, the content of each of which is incorporated by reference herein in its entirety. In Ion Torrent sequencing, DNA is sheared into fragments of approximately 300-800 base pairs, and the fragments are blunt ended. Oligonucleotide adaptors are then ligated to the ends of the fragments. The adaptors serve as primers for amplification and sequencing of the fragments. The fragments can be attached to a surface and are attached at a resolution such that the fragments are individually resolvable. Addition of one or more nucleotides releases a proton (Fr), which signal is detected and recorded in a sequencing instrument. The signal strength is proportional to the number of nucleotides incorporated.</p><p id="p-0054" num="0053">Another example of a sequencing technology that can be used in the methods of the provided invention is Illumina sequencing. Illumina sequencing is based on the amplification of DNA on a solid surface using fold-back PCR and anchored primers. Genomic DNA is fragmented, and adapters are added to the 5&#x2032; and 3&#x2032; ends of the fragments. DNA fragments that are attached to the surfa<b>12</b>ce of flow cell channels are extended and bridge amplified. The fragments become double stranded, and the double stranded molecules are denatured. Multiple cycles of the solid-phase amplification followed by denaturation can create several million clusters of approximately 1,000 copies of single-stranded DNA molecules of the same template in each channel of the flow cell. Primers, DNA polymerase and four fluorophore-labeled, reversibly terminating nucleotides are used to perform sequential sequencing. After nucleotide incorporation, a laser is used to excite the fluorophores, and an image is captured and the identity of the first base is recorded. The 3&#x2032; terminators and fluorophores from each incorporated base are removed and the incorporation, detection and identification steps are repeated. Sequencing according to this technology is described in U.S. Pub. 2011/0009278, U.S. Pub. 2007/0114362, U.S. Pub. 2006/0024681, U.S. Pub. 2006/0292611, U.S. Pat. Nos. 7,960,120, 7,835,871, 7,232,656, 7,598,035, 6,306,597, 6,210,891, 6,828,100, 6,833,246, and 6,911,345, each of which are herein incorporated by reference in their entirety.</p><p id="p-0055" num="0054">Another example of a sequencing technology that can be used in the methods of the provided invention includes the single molecule, real-time (SMRT) technology of Pacific Biosciences (Menlo Park, Calif.). In SMRT, each of the four DNA bases is attached to one of four different fluorescent dyes. These dyes are phospholinked. A single DNA polymerase is immobilized with a single molecule of template single stranded DNA at the bottom of a zero-mode waveguide (ZMW). A ZMW is a confinement structure which enables observation of incorporation of a single nucleotide by DNA polymerase against the background of fluorescent nucleotides that rapidly diffuse in and out of the ZMW (in microseconds). It takes several milliseconds to incorporate a nucleotide into a growing strand. During this time, the fluorescent label is excited and produces a fluorescent signal, and the fluorescent tag is cleaved off. Detection of the corresponding fluorescence of the dye indicates which base was incorporated. The process is repeated.</p><p id="p-0056" num="0055">Another example of a sequencing technique that can be used in the methods of the provided invention is nanopore sequencing (Soni, G. V., and Meller, A., Clin Chem 53: 1996-2001 (2007)). A nanopore is a small hole, of the order of 1 nanometer in diameter. Immersion of a nanopore in a conducting fluid and application of a potential across it results in a slight electrical current due to conduction of ions through the nanopore. The amount of current which flows is sensitive to the size of the nanopore. As a DNA molecule passes through a nanopore, each nucleotide on the DNA molecule obstructs the nanopore to a different degree. Thus, the change in the current passing through the nanopore as the DNA molecule passes through the nanopore represents a reading of the DNA sequence.</p><p id="p-0057" num="0056">Another example of a sequencing technique that can be used in the methods of the provided invention involves using a chemical-sensitive field effect transistor (chemFET) array to sequence DNA (for example, as described in U.S. Pub. 2009/0026082). In one example of the technique, DNA molecules can be placed into reaction chambers, and the template molecules can be hybridized to a sequencing primer bound to a polymerase. Incorporation of one or more triphosphates into a new nucleic acid strand at the 3&#x2032; end of the sequencing primer can be detected by a change in current by a chemFET. An array can have multiple chemFET sensors. In another example, single nucleic acids can be attached to beads, and the nucleic acids can be amplified on the bead, and the individual beads can be transferred to individual reaction chambers on a chemFET array, with each chamber having a chemFET sensor, and the nucleic acids can be sequenced.</p><p id="p-0058" num="0057">Another example of a sequencing technique that can be used in the methods of the provided invention involves using a electron microscope (Moudrianakis E. N. and Beer M., PNAS, 53:564-71 (1965)). In one example of the technique, individual DNA molecules are labeled using metallic labels that are distinguishable using an electron microscope. These molecules are then stretched on a flat surface and imaged using an electron microscope to measure sequences.</p><p id="p-0059" num="0058">Sequencing according to embodiments of the invention generates a plurality of reads. Reads according to the invention generally include sequences of nucleotide data less than about 150 bases in length, or less than about 90 bases in length. In certain embodiments, reads are between about 80 and about 90 bases, e.g., about 85 bases in length. In some embodiments, methods of the invention are applied to very short reads, i.e., less than about 50 or about 30 bases in length. After obtaining sequence reads, they are further processed as diagrammed in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram of methods of the invention. Methods include obtaining <b>101</b> sequence reads and assembling <b>105</b> them into a contig, which is then aligned <b>109</b> to a reference. Differences are identified by comparison <b>113</b>. The raw reads are aligned <b>117</b> to the contigs and positional and variant information is mapped to the reads from the reference via the contig, allowing genotyping <b>121</b> to be performed.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an exemplary embodiment according to methods of the invention. In step 1, reads are assembled into contigs. In the case of a single, homozygous target nucleic acid, a single contig per location is typically produced. Assembly can include any method including those discussed herein.</p><p id="p-0062" num="0061">In step 2 shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, each contig is aligned to a reference genome. Alignment can be by any method such as those discussed below, including, e.g., the bwa-sw algorithm implemented by BWA. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, both align to the same reference position. Differences between the contig and the reference genome are identified and, as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, described by a CIGAR string.</p><p id="p-0063" num="0062">In step 3, raw reads are aligned to contigs (using any method such as, for example, BWA with bwa-short and writing, for example, a CIGAR string).</p><p id="p-0064" num="0063">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, step 4, raw read alignments are mapped from contig space to original reference space (e.g., via position and CIGAR information).</p><p id="p-0065" num="0064">In step 5, genotyping is performed using the translated, aligned reads from step 4 (e.g., including raw quality scores for substitutions).</p><p id="p-0066" num="0065">A contig, generally, refers to the relationship between or among a plurality of segments of nucleic acid sequences, e.g., reads. Where sequence reads overlap, a contig can be represented as a layered image of overlapping reads. A contig is not defined by, nor limited to, any particular visual arrangement nor any particular arrangement within, for example, a text file or a database. A contig generally includes sequence data from a number of reads organized to correspond to a portion of a sequenced nucleic acid. A contig can include assembly results&#x2014;such as a set of reads or information about their positions relative to each other or to a reference&#x2014;displayed or stored. A contig can be structured as a grid, in which rows are individual sequence reads and columns include the base of each read that is presumed to align to that site. A consensus sequence can be made by identifying the predominant base in each column of the assembly. A contig according to the invention can include the visual display of reads showing them overlap (or not, e.g., simply abutting) one another. A contig can include a set of coordinates associated with a plurality of reads and giving the position of the reads relative to each other. A contig can include data obtained by transforming the sequence data of reads. For example, a Burrows-Wheeler transformation can be performed on the reads, and a contig can include the transformed data without necessarily including the untransformed sequences of the reads. A Burrows-Wheeler transform of nucleotide sequence data is described in U.S. Pub. 2005/0032095, herein incorporated by reference in its entirety.</p><p id="p-0067" num="0066">Reads can be assembled into contigs by any method known in the art. Algorithms for the de novo assembly of a plurality of sequence reads are known in the art. One algorithm for assembling sequence reads is known as overlap consensus assembly. Overlap consensus assembly uses the overlap between sequence reads to create a link between them. The reads are generally linked by regions that overlap enough that non-random overlap is assumed. Linking together reads in this way produces a contig or an overlap graph in which each node corresponds to a read and an edge represents an overlap between two reads. Assembly with overlap graphs is described, for example, in U.S. Pat. 6,714,874.</p><p id="p-0068" num="0067">In some embodiments, de novo assembly proceeds according to so-called greedy algorithms. For assembly according to greedy algorithms, one of the reads of a group of reads is selected, and it is paired with another read with which it exhibits a substantial amount of overlap&#x2014;generally it is paired with the read with which it exhibits the most overlap of all of the other reads. Those two reads are merged to form a new read sequence, which is then put back in the group of reads and the process is repeated. Assembly according to a greedy algorithm is described, for example, in Schatz, et al., Genome Res., 20:1165-1173 (2010) and U.S. Pub. 2011/0257889, each of which is hereby incorporated by reference in its entirety.</p><p id="p-0069" num="0068">In other embodiments, assembly proceeds by pairwise alignment, for example, exhaustive or heuristic (e.g., not exhaustive) pairwise alignment. Alignment, generally, is discussed in more detail below. Exhaustive pairwise alignment, sometimes called a &#x201c;brute force&#x201d; approach, calculates an alignment score for every possible alignment between every possible pair of sequences among a set. Assembly by heuristic multiple sequence alignment ignores certain mathematically unlikely combinations and can be computationally faster. One heuristic method of assembly by multiple sequence alignment is the so-called &#x201c;divide-and-conquer&#x201d; heuristic, which is described, for example, in U.S. Pub. 2003/0224384. Another heuristic method of assembly by multiple sequence alignment is progressive alignment, as implemented by the program ClustalW (see, e.g., Thompson, et al., Nucl. Acids. Res., 22:4673-80 (1994)). Assembly by multiple sequence alignment in general is discussed in Lecompte, O., et al., Gene 270:17-30 (2001); Mullan, L. J., Brief Bioinform., 3:303-5 (2002); Nicholas, H. B. Jr., et al., Biotechniques 32:572-91 (2002); and Xiong, G., Essential Bioinformatics, 2006, Cambridge University Press, New York, N.Y.</p><p id="p-0070" num="0069">Assembly by alignment can proceed by aligning reads to each other or by aligning reads to a reference. For example, by aligning each read, in turn, to a reference genome, all of the reads are positioned in relationship to each other to create the assembly.</p><p id="p-0071" num="0070">One method of assembling reads into contigs involves making a de Bruijn graph. De Bruijn graphs reduce the computation effort by breaking reads into smaller sequences of DNA, called k-mers, where the parameter k denotes the length in bases of these sequences. In a de Bruijn graph, all reads are broken into k-mers (all subsequences of length k within the reads) and a path between the k-mers is calculated. In assembly according to this method, the reads are represented as a path through the k-mers. The de Bruijn graph captures overlaps of length k-1 between these k-mers and not between the actual reads. Thus, for example, the sequencing CATGGA could be represented as a path through the following 2-mers: CA, AT, TG, GG, and GA. The de Bruijn graph approach handles redundancy well and makes the computation of complex paths tractable. By reducing the entire data set down to k-mer overlaps, the de Bruijn graph reduces the high redundancy in short-read data sets. The maximum efficient k-mer size for a particular assembly is determined by the read length as well as the error rate. The value of the parameter k has significant influence on the quality of the assembly. Estimates of good values can be made before the assembly, or the optimal value can be found by testing a small range of values. Assembly of reads using de Bruijn graphs is described in U.S. Pub. 2011/0004413, U.S. Pub. 2011/0015863, and U.S. Pub. 2010/0063742, each of which are herein incorporated by reference in their entirety.</p><p id="p-0072" num="0071">Other methods of assembling reads into contigs according to the invention are possible. For example, the reads may contain barcode information inserted into template nucleic acid during sequencing. In certain embodiments, reads are assembled into contigs by reference to the barcode information. For example, the barcodes can be identified and the reads can be assembled by positioning the barcodes together.</p><p id="p-0073" num="0072">In certain embodiments, assembly proceeds by making reference to supplied information about the expected position of the various reads relative to each other. This can be obtained, for example, if the subject nucleic acid being sequenced has been captured by molecular inversion probes, because the start of each read derives from a genomic position that is known and specified by the probe set design. Each read can be collected according to the probe from which it was designed and positioned according to its known relative offset. In some embodiments, information about the expected position of reads relative to each other is supplied by knowledge of the positions (e.g., within a gene) of an area of nucleic acid amplified by primers. For example, sequencing can be done on amplification product after a number of regions of the target nucleic acid are amplified using primer pairs designed or known to cover those regions. Reads can then be positioned during assembly at least based on which primer pair was used in an amplification that lead to those reads. Assembly of reads into contigs can proceed by any combination or hybrid of methods including, but not limited to, the above-referenced methods.</p><p id="p-0074" num="0073">Assembly of reads into contigs is further discussed in Husemann, P. and Stoye, J, Phylogenetic Comparative Assembly, 2009, Algorithms in Bioinformatics: 9th International Workshop, pp. 145-156, Salzberg, S., and Warnow, T., Eds. Springer-Verlag, Berlin Heidelberg. Some exemplary methods for assembling reads into contigs are described, for example, in U.S. Pat. No. 6,223,128, U.S. Pub. 2009/0298064, U.S. Pub. 2010/0069263, and U.S. Pub. 2011/0257889, each of which is incorporated by reference herein in its entirety.</p><p id="p-0075" num="0074">Computer programs for assembling reads are known in the art. Such assembly programs can run on a single general-purpose computer, on a cluster or network of computers, or on a specialized computing devices dedicated to sequence analysis.</p><p id="p-0076" num="0075">Assembly can be implemented, for example, by the program &#x2018;The Short Sequence Assembly by k-mer search and 3&#x2032; read Extension&#x2019; (SSAKE), from Canada's Michael Smith Genome Sciences Centre (Vancouver, B.C., CA) (see, e.g., Warren, R., et al., Bioinformatics, 23:500-501 (2007)). SSAKE cycles through a table of reads and searches a prefix tree for the longest possible overlap between any two sequences. SSAKE clusters reads into contigs.</p><p id="p-0077" num="0076">Another read assembly program is Forge Genome Assembler, written by Darren Platt and Dirk Evers and available through the SourceForge web site maintained by Geeknet (Fairfax, Va.) (see, e.g., DiGuistini, S., et al., Genome Biology, 10:R94 (2009)). Forge distributes its computational and memory consumption to multiple nodes, if available, and has therefore the potential to assemble large sets of reads. Forge was written in C++ using the parallel MPI library. Forge can handle mixtures of reads, e.g., Sanger, 454, and Illumina reads.</p><p id="p-0078" num="0077">Assembly through multiple sequence alignment can be performed, for example, by the program Clustal Omega, (Sievers F., et al., Mol Syst Biol 7 (2011)), ClustalW, or ClustalX (Larkin M. A., et al., Bioinformatics, 23, 2947-2948 (2007)) available from University College Dublin (Dublin, Ireland).</p><p id="p-0079" num="0078">Another exemplary read assembly program known in the art is Velvet, available through the web site of the European Bioinformatics Institute (Hinxton, UK) (Zerbino D. R. et al., Genome Research 18(5):821-829 (2008)). Velvet implements an approach based on de Bruijn graphs, uses information from read pairs, and implements various error correction steps.</p><p id="p-0080" num="0079">Read assembly can be performed with the programs from the package SOAP, available through the website of Beijing Genomics Institute (Beijing, CN) or BGI Americas Corporation (Cambridge, Mass.). For example, the SOAPdenovo program implements a de Bruijn graph approach. SOAP3/GPU aligns short reads to a reference sequence.</p><p id="p-0081" num="0080">Another read assembly program is ABySS, from Canada's Michael Smith Genome Sciences Centre (Vancouver, B.C., CA) (Simpson, J. T., et al., Genome Res., 19(6):1117-23 (2009)). ABySS uses the de Bruijn graph approach and runs in a parallel environment.</p><p id="p-0082" num="0081">Read assembly can also be done by Roche's GS De Novo Assembler, known as gsAssembler or Newbler (NEW assemBLER), which is designed to assemble reads from the Roche 454 sequencer (described, e.g., in Kumar, S. et al., Genomics 11:571 (2010) and Margulies, et al., Nature 437:376-380 (2005)). Newbler accepts 454 Flx Standard reads and 454 Titanium reads as well as single and paired-end reads and optionally Sanger reads. Newbler is run on Linux, in either 32 bit or 64 bit versions. Newbler can be accessed via a command-line or a Java-based GUI interface.</p><p id="p-0083" num="0082">Cortex, created by Mario Caccamo and Zamin Iqbal at the University of Oxford, is a software framework for genome analysis, including read assembly. Cortex includes cortex_con for consensus genome assembly, used as described in Spanu, P. D., et al., Science 330(6010):1543-46 (2010). Cortex includes cortex_var for variation and population assembly, described in Iqbal, et al., De novo assembly and genotyping of variants using colored de Bruijn graphs, Nature Genetics (in press), and used as described in Mills, R. E., et al., Nature 470:59-65 (2010). Cortex is available through the creators' web site and from the SourceForge web site maintained by Geeknet (Fairfax, Va.).</p><p id="p-0084" num="0083">Other read assembly programs include RTG Investigator from Real Time Genomics, Inc. (San Francisco, Calif.); iAssembler (Zheng, et al., BMC Bioinformatics 12:453 (2011)); TgiCL Assembler (Pertea, et al., Bioinformatics 19(5):651-52 (2003)); Maq (Mapping and Assembly with Qualities) by Heng Li, available for download through the SourceForge website maintained by Geeknet (Fairfax, Va.); MIRA3 (Mimicking Intelligent Read Assembly), described in Chevreux, B., et al., Genome Sequence Assembly Using Trace Signals and Additional Sequence Information, 1999, Computer Science and Biology: Proceedings of the German Conference on Bioinformatics (GCB) 99:45-56; PGA4genomics (described in Zhao F., et al., Genomics. 94(4):284-6 (2009)); and Phrap (described, e.g., in de la Bastide, M. and McCombie, W. R., Current Protocols in Bioinformatics, 17:11.4.1-11.4.15 (2007)). CLC cell is a de Bruijn graph-based computer program for read mapping and de novo assembly of NGS reads available from CLC bio Germany (Muehltal, Germany).</p><p id="p-0085" num="0084">Assembly of reads produces one or more contigs. In the case of a homozygous or single target sequencing, a single contig will be produced. In the case of a heterozygous diploid target, a rare somatic mutation, or a mixed sample, for example, two or more contigs can be produced. Each contig includes information from the reads that make up that contig.</p><p id="p-0086" num="0085">Assembling the reads into contigs is conducive to producing a consensus sequence corresponding to each contig. In certain embodiments, a consensus sequence refers to the most common, or predominant, nucleotide at each position from among the assembled reads. A consensus sequence can represent an interpretation of the sequence of the nucleic acid represented by that contig.</p><p id="p-0087" num="0086">The invention provides methods for positioning a consensus sequence or a contig along a reference genome. In certain embodiments, a consensus sequence or a contig is positioned on a reference through information from known molecular markers or probes. In some embodiments, protein-coding sequence data in a contig, consensus sequence, or reference genome is represented by amino acid sequence and a contig is positioned along a reference genome. In some embodiments, a consensus sequence or a contig is positioned by an alignment of the contig to a reference genome.</p><p id="p-0088" num="0087">Alignment, as used herein, generally involves placing one sequence along another sequence, iteratively introducing gaps along each sequence, scoring how well the two sequences match, and preferably repeating for various position along the reference. The best-scoring match is deemed to be the alignment and represents an inference about the historical relationship between the sequences. In an alignment, a base in the read alongside a non-matching base in the reference indicates that a substitution mutation has occurred at that point. Similarly, where one sequence includes a gap alongside a base in the other sequence, an insertion or deletion mutation (an &#x201c;indel&#x201d;) is inferred to have occurred. When it is desired to specify that one sequence is being aligned to one other, the alignment is sometimes called a pairwise alignment. Multiple sequence alignment generally refers to the alignment of two or more sequences, including, for example, by a series of pairwise alignments.</p><p id="p-0089" num="0088">In some embodiments, scoring an alignment involves setting values for the probabilities of substitutions and indels. When individual bases are aligned, a match or mismatch contributes to the alignment score by a substitution probability, which could be, for example, 1 for a match and 0.33 for a mismatch. An indel deducts from an alignment score by a gap penalty, which could be, for example, -1. Gap penalties and substitution probabilities can be based on empirical knowledge or a priori assumptions about how sequences mutate. Their values affects the resulting alignment. Particularly, the relationship between the gap penalties and substitution probabilities influences whether substitutions or indels will be favored in the resulting alignment.</p><p id="p-0090" num="0089">Stated formally, an alignment represents an inferred relationship between two sequences, x and y. For example, in some embodiments, an alignment A of sequences x and y maps x and y respectively to another two strings x&#x2032; and y&#x2032; that may contain spaces such that: (i) |x&#x2032;|=|y&#x2032;|; (ii) removing spaces from x&#x2032; and y&#x2032; should get back x and y, respectively; and (iii) for any i, x&#x2032;[i] and y&#x2032;[i] cannot be both spaces.</p><p id="p-0091" num="0090">A gap is a maximal substring of contiguous spaces in either x&#x2032; or y&#x2032;. An alignment A can include the following three kinds of regions: (i) matched pair (e.g., x&#x2032;[i]=y&#x2032;[i]; (ii) mismatched pair, (e.g., x&#x2032;[i]&#x2260;y&#x2032;[i] and both are not spaces); or (iii) gap (e.g., either x&#x2032;[i . . . j] or y&#x2032;[i . . . j] is a gap). In certain embodiments, only a matched pair has a high positive score a. In some embodiments, a mismatched pair generally has a negative score b and a gap of length r also has a negative score g+rs where g, s&#x3c;0. For DNA, one common scoring scheme (e.g. used by BLAST) makes score a=1, score b=&#x2212;3, g=&#x2212;5 and s=&#x2212;2. The score of the alignment A is the sum of the scores for all matched pairs, mismatched pairs and gaps. The alignment score of x and y can be defined as the maximum score among all possible alignments of x and y.</p><p id="p-0092" num="0091">In some embodiments, any pair has a score a defined by a 4&#xd7;4 matrix B of substitution probabilities. For example, B(i,i)=1 and 0&#x3c;B(i,j)<sub>i&#x3c;&#x3e;j</sub>&#x3c;1 is one possible scoring system. For instance, where a transition is thought to be more biologically probable than a transversion, matrix B could include B(C,T)=0.7 and B(A,T)=0.3, or any other set of values desired or determined by methods known in the art.</p><p id="p-0093" num="0092">Alignment according to some embodiments of the invention includes pairwise alignment. A pairwise alignment, generally, involves&#x2014;for sequence Q (query) having m characters and a reference genome T (target) of n characters&#x2014;finding and evaluating possible local alignments between Q and T. For any 1&#x2264;i&#x2264;n and 1&#x2264;j&#x2264;m, the largest possible alignment score of T[h . . . i] and Q[k . . . j], where h&#x2264;i and k&#x2264;j, is computed (i.e. the best alignment score of any substring of T ending at position i and any substring of Q ending at position j). This can include examining all substrings with cm characters, where c is a constant depending on a similarity model, and aligning each substring separately with Q. Each alignment is scored, and the alignment with the preferred score is accepted as the alignment. In some embodiments an exhaustive pairwise alignment is performed, which generally includes a pairwise alignment as described above, in which all possible local alignments (optionally subject to some limiting criteria) between Q and T are scored.</p><p id="p-0094" num="0093">In some embodiments, pairwise alignment proceeds according to dot-matrix methods, dynamic programming methods, or word methods. Dynamic programming methods generally implement the Smith-Waterman (SW) algorithm or the Needleman-Wunsch (NW) algorithm. Alignment according to the NW algorithm generally scores aligned characters according to a similarity matrix S(a,b) (e.g., such as the aforementioned matrix B) with a linear gap penalty d. Matrix S(a,b) generally supplies substitution probabilities. The SW algorithm is similar to the NW algorithm, but any negative scoring matrix cells are set to zero. The SW and NW algorithms, and implementations thereof, are described in more detail in U.S. Pat. 5,701,256 and U.S. Pub. 2009/0119313, both herein incorporated by reference in their entirety. Computer programs known in the art for implementing these methods are described in more detail below.</p><p id="p-0095" num="0094">In certain embodiments, an exhaustive pairwise alignment is avoided by positioning a consensus sequence or a contig along a reference genome through the use of a transformation of the sequence data. One useful category of transformation according to some embodiments of the invention involve making compressed indexes of sequences (see, e.g., Lam, et al., Compressed indexing and local alignment of DNA, 2008, Bioinformatics 24(6):791-97). Exemplary compressed indexes include the FN-index, the compressed suffix array, and the Burrows-Wheeler Transform (BWT, described in more detail below).</p><p id="p-0096" num="0095">In certain embodiments, the invention provides methods of alignment which avoid an exhaustive pairwise alignment by making a suffix tree (sometime known as a suffix trie). Given a reference genome T, a suffix tree for T is a tree comprising all suffices of T such that each edge is uniquely labeled with a character, and the concatenation of the edge labels on a path from the root to a leaf corresponds to a unique suffix of T. Each leaf stores the starting location of the corresponding suffix.</p><p id="p-0097" num="0096">On a suffix tree, distinct substrings of T are represented by different paths from the root of the suffix tree. Then, Q is aligned against each path from the root up to cm characters (e.g., using dynamic programming). The common prefix structure of the paths also gives a way to share the common parts of the dynamic programming on different paths. A pre-order traversal of the suffix tree is performed; at each node, a dynamic programming table (DP table) is maintained for aligning the pattern and the path up to the node. More rows are added to the table while proceeding down the tree, and corresponding rows are deleted while ascending the tree.</p><p id="p-0098" num="0097">In certain embodiments, a BWT is used to index reference T, and the index is used to emulate a suffix tree. The Burrows&#x2014;Wheeler transform (BWT) (Burrow and Wheeler, 1994, A block-sorting lossless data compression algorithm, Technical Report 124, Digital Equipment Corporation, CA) was invented as a compression technique and later extended to support pattern matching. To perform a BWT, first let T be a string of length n over an alphabet &#x3a3;. Assume that the last character of T is a unique special character $, which is smaller than any character in &#x3a3;. The suffix array SA[0, n&#x2212;1] of T is an array of indexes such that SA[i] stores the starting position of the i-th-lexicographically smallest suffix. The BWT of T is a permutation of T such that BWT [i]=T[SA[i]&#x2212;1]. For example, if T=&#x2018;acaacg$&#x2019;, then SA=(8, 3, 1, 4, 2, 5, 6, 7), and BWT=&#x2018;gc$aaac&#x2019;.</p><p id="p-0099" num="0098">Alignment generally involves finding the best alignment score among sub strings of T and Q. Using a BWT of T speeds up this step by avoiding aligning substrings of T that are identical. This method exploits the common prefix structure of a tree to avoid aligning identical substrings more than once. Use of a pre-order traversal of the suffix tree generates all distinct substrings of T. Further, only substrings of T of length at most cm, where c is usually a constant bounded by 2, are considered, because the score of a match is usually smaller than the penalty due to a mismatch/insert/delete, and a substring of T with more than 2 m characters has at most m matches and an alignment score less than 0. Implementation of the method for aligning sequence data is described in more detail in Lam, et al., Bioinformatics 24(6):791-97 (2008).</p><p id="p-0100" num="0099">An alignment according to the invention can be performed using any suitable computer program known in the art.</p><p id="p-0101" num="0100">One exemplary alignment program, which implements a BWT approach, is Burrows-Wheeler Aligner (BWA) available from the SourceForge web site maintained by Geeknet (Fairfax, Va.). BWA can align reads, contigs, or consensus sequences to a reference. BWT occupies 2 bits of memory per nucleotide, making it possible to index nucleotide sequences as long as 4G base pairs with a typical desktop or laptop computer. The pre-processing includes the construction of BWT (i.e., indexing the reference) and the supporting auxiliary data structures.</p><p id="p-0102" num="0101">BWA implements two different algorithms, both based on BWT. Alignment by BWA can proceed using the algorithm bwa-short, designed for short queries up to &#x2dc;200 bp with low error rate (&#x3c;3%) (Li H. and Durbin R. Bioinformatics, 25:1754-60 (2009)). The second algorithm, BWA-SW, is designed for long reads with more errors (Li H. and Durbin R. (2010) Fast and accurate long-read alignment with Burrows-Wheeler Transform. Bioinformatics, Epub.). The BWA-SW component performs heuristic Smith-Waterman-like alignment to find high-scoring local hits. One skilled in the art will recognize that bwa-sw is sometimes referred to as &#x201c;bwa-long&#x201d;, &#x201c;bwa long algorithm&#x201d;, or similar. Such usage generally refers to BWA-SW.</p><p id="p-0103" num="0102">An alignment program that implements a version of the Smith-Waterman algorithm is MUMmer, available from the SourceForge web site maintained by Geeknet (Fairfax, Va.). MUMmer is a system for rapidly aligning entire genomes, whether in complete or draft form (Kurtz, S., et al., Genome Biology, 5:R12 (2004); Delcher, A. L., et al., Nucl. Acids Res., 27:11 (1999)). For example, MUMmer 3.0 can find all 20-basepair or longer exact matches between a pair of 5-megabase genomes in 13.7 seconds, using 78 MB of memory, on a 2.4 GHz Linux desktop computer. MUMmer can also align incomplete genomes; it can easily handle the 100s or 1000s of contigs from a shotgun sequencing project, and will align them to another set of contigs or a genome using the NUCmer program included with the system. If the species are too divergent for a DNA sequence alignment to detect similarity, then the PROmer program can generate alignments based upon the six-frame translations of both input sequences.</p><p id="p-0104" num="0103">Another exemplary alignment program according to embodiments of the invention is BLAT from Kent Informatics (Santa Cruz, Calif.) (Kent, W. J., Genome Research 4: 656-664 (2002)). BLAT (which is not BLAST) keeps an index of the reference genome in memory such as RAM. The index includes of all non-overlapping k-mers (except optionally for those heavily involved in repeats), where k=11 by default. The genome itself is not kept in memory. The index is used to find areas of probable homology, which are then loaded into memory for a detailed alignment.</p><p id="p-0105" num="0104">Another alignment program is SOAP2, from Beijing Genomics Institute (Beijing, CN) or BGI Americas Corporation (Cambridge, Mass.). SOAP2 implements a 2-way BWT (Li et al., Bioinformatics 25(15):1966-67 (2009); Li, et al., Bioinformatics 24(5):713-14 (2008)).</p><p id="p-0106" num="0105">Another program for aligning sequences is Bowtie (Langmead, et al., Genome Biology, 10:R25 (2009)). Bowtie indexes reference genomes by making a BWT.</p><p id="p-0107" num="0106">Other exemplary alignment programs include: Efficient Large-Scale Alignment of Nucleotide Databases (ELAND) or the ELANDv2 component of the Consensus Assessment of Sequence and Variation (CASAVA) software (Illumina, San Diego, Calif.); RTG Investigator from Real Time Genomics, Inc. (San Francisco, Calif.); Novoalign from Novocraft (Selangor, Malaysia); Exonerate, European Bioinformatics Institute (Hinxton, UK) (Slater, G., and Birney, E., BMC Bioinformatics 6:31 (2005)), Clustal Omega, from University College Dublin (Dublin, Ireland) (Sievers F., et al., Mol Syst Biol 7, article 539 (2011)); ClustalW or ClustalX from University College Dublin (Dublin, Ireland) (Larkin M. A., et al., Bioinformatics, 23, 2947-2948 (2007)); and FASTA, European Bioinformatics Institute (Hinxton, UK) (Pearson W. R., et al., PNAS 85(8):2444-8 (1988); Lipman, D. J., Science 227(4693):1435-41 (1985)).</p><p id="p-0108" num="0107">With each contig aligned to the reference genome, any differences between the contig and the reference genome can be identified by a comparison <b>113</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). For example, a computer alignment program can report any non-matching pair of aligned bases, e.g., in a visual display or as a character string. Since the entire contig is aligned to the reference genome, instead of individual short reads, an incorrect position is improbable. Thus, any indels introduced here typically will represent differences between the nucleic acid and the reference.</p><p id="p-0109" num="0108">Parameters of the alignment are optimized to ensure correct placement of the contig on the overall reference genome, for example, where the bwa-sw algorithm is used. Each mutation identified here in a contig or consensus sequence can be described as it exists in the nucleic acid with reference to the reference genome. For convenience, this could be referred to as a contig:reference description of a mutation. Identifying a mutation according to methods of the invention can include identifying 1, 2, or any number of mutations as revealed, for example, by comparing a contig or consensus sequence to a reference genome.</p><p id="p-0110" num="0109">In certain embodiments, a computer program creates a display, file, or variable containing a description of the mutation or descriptions of a number of mutations. In some embodiments, a contig:reference description of mutations will be written in a file, e.g., a CIGAR string in a BAM format file.</p><p id="p-0111" num="0110">Besides aligning the contigs to a reference, methods of the invention include analyzing the individual reads. Individual reads are aligned <b>117</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) to the contigs, and positional and variant information is mapped from the reference to the individual reads through the contig.</p><p id="p-0112" num="0111">An alignment according to this step can be performed by a computer program using any suitable algorithm such as one of those discussed above. In certain embodiments, a pair-wise alignment is performed between a read and a contig and optionally iterated until each read of interest has been aligned. In certain embodiments, the reads are aligned to a contig using bwa-short as implemented by BWA. In some embodiments, only certain reads are aligned&#x2014;for example, those having certain scores or those that were excluded from further analysis prior to or during assembly.</p><p id="p-0113" num="0112">Parameters of this alignment can be optimized to ensure very highly sensitive detection of mutations and combinations of mutations. For example, because the position relative to the reference genome is established with confidence, a gap penalty can be decreased relative to a substitution probability. In this alignment step by these parameters, long indels, indel-proximal substitutions, and indels near the ends of reads are detected with fidelity.</p><p id="p-0114" num="0113">Each read represents a portion of the nucleic acid from the sample that can be described with reference to the contig. For convenience's sake, this could be referred to as a read:contig description. In certain embodiments, a computer program creates a display, file, or variable containing a read:contig description. The read:contig description can be written in a file, e.g., a CIGAR string in a BAM format file.</p><p id="p-0115" num="0114">The output of the local alignment, describing the read with regards to the contig, can be combined with the output of the reference alignment, describing the contig with regards to the reference genome. Thus, the portion of nucleic acid represented by a read is determined to be related to a corresponding portion of the genome by the combination of alignments. This can be expressed, for example, by combining a read:contig description with a contig:reference description to produce a read:reference description. In this way, a target can be genotyped <b>121</b>, as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0116" num="0115">This combination gives, for any mutation detected in the nucleic acid, a description of that mutation by reference to the reference genome. That is, the difference relative to the reference for the individual reads is determined using alignments between the read and the mapped contig plus alignments between the mapped contig and the reference genome.</p><p id="p-0117" num="0116">In some embodiments, a heterogeneous sample includes some reads that vary from the contig. For example, a contig may map to reference genome according to a contig:reference alignment with a 1 bp substitution. A read may map to the contig with a 8 bp deletion according to a read:contig alignment. Methods of the invention give the correct annotation for the read, relative to the reference, as a description including a 8 bp deletion and a 1 bp substitution.</p><p id="p-0118" num="0117">In some embodiments, any or all of the steps of the invention are automated. For example, a Perl script or shell script can be written to invoke any of the various programs discussed above (see, e.g., Tisdall, Mastering Perl for Bioinformatics, O&#x2032;Reilly &#x26; Associates, Inc., Sebastopol, Calif. 2003; Michael, R., Mastering Unix Shell Scripting, Wiley Publishing, Inc., Indianapolis, Ind. 2003). Alternatively, methods of the invention may be embodied wholly or partially in one or more dedicated programs, for example, each optionally written in a compiled language such as C++ then compiled and distributed as a binary. Methods of the invention may be implemented wholly or in part as modules within, or by invoking functionality within, existing sequence analysis platforms. In certain embodiments, methods of the invention include a number of steps that are all invoked automatically responsive to a single starting queue (e.g., one or a combination of triggering events sourced from human activity, another computer program, or a machine). Thus, the invention provides methods in which any or the steps or any combination of the steps can occur automatically responsive to a queue. Automatically generally means without intervening human input, influence, or interaction (i.e., responsive only to original or pre-queue human activity). In certain embodiments, a contig is aligned to a reference, a read is aligned to a contig, the two alignments are combined, and a mutation is identified based on the combination of the alignments, partially or entirely automatically.</p><p id="p-0119" num="0118">By combining alignments according to methods of the invention, the limitations of a tradeoff between substitution sensitivity and deletion sensitivity are overcome. The output includes an accurate and sensitive interpretation of the subject nucleic. The output can be provided in the format of a computer file. In certain embodiments, the output is a FASTA file, VCF file, text file, or an XML file containing sequence data such as a sequence of the nucleic acid aligned to a sequence of the reference genome. In other embodiments, the output contains coordinates or a string describing one or more mutations in the subject nucleic acid relative to the reference genome. Alignment strings known in the art include Simple UnGapped Alignment Report (SUGAR), Verbose Useful Labeled Gapped Alignment Report (VULGAR), and Compact Idiosyncratic Gapped Alignment Report (CIGAR) (Ning, Z., et al., Genome Research 11(10):1725-9 (2001)). These strings are implemented, for example, in the Exonerate sequence alignment software from the European Bioinformatics Institute (Hinxton, UK).</p><p id="p-0120" num="0119">In some embodiments, the output is a sequence alignment&#x2014;such as, for example, a sequence alignment map (SAM) or binary alignment map (BAM) file&#x2014;comprising a CIGAR string (the SAM format is described, e.g., in Li, et al., The Sequence Alignment/Map format and SAMtools, Bioinformatics, 2009, 25(16):2078-9). In some embodiments, CIGAR displays or includes gapped alignments one-per-line. CIGAR is a compressed pairwise alignment format reported as a CIGAR string. A CIGAR string is useful for representing long (e.g. genomic) pairwise alignments. A CIGAR string is used in SAM format to represent alignments of reads to a reference genome sequence.</p><p id="p-0121" num="0120">An CIGAR string follows an established motif. Each character is preceded by a number, giving the base counts of the event. Characters used can include M, I, D, N, and S (M=match; I=insertion; D=deletion; N=gap; S=substitution).</p><p id="p-0122" num="0121">The cigar line defines the sequence of matches/mismatches and deletions (or gaps). For example, the cigar line 2MD3M2D2M will mean that the alignment contains 2 matches, 1 deletion (number 1 is omitted in order to save some space), 3 matches, 2 deletions and 2 matches.</p><p id="p-0123" num="0122">To illustrate, if the original sequence is AACGCTT and the CIGAR string is 2MD3M2D2M, the aligned sequence will be AA-CGG-TT. As a further example, if an 80 bp read aligns to a contig such that the first 5&#x2032; nucleotide of the read aligns to the 50th nucleotide from the 5&#x2032; end of the contig with no indels or substitutions between the read and the contig, the alignment will yield &#x201c;80M&#x201d; as a CIGAR string.</p><p id="p-0124" num="0123">By combining alignments according to the methods described herein, one or more mutations in the nucleic acid can be detected, identified, or described. Mutations detectable by methods of the invention include substitutions, single nucleotide polymorphisms, insertions, deletions, translocations, epigenetic mutations, and copy number repeats. Methods of the invention detect and describe more than one mutation including, for example, two or more mutations. Mutations can be detected that are near each other, for example less than 1,000 nucleotides apart along a strand of nucleic acid. In a preferred embodiment, methods of the invention can detect two mutations within 100 bases of each other, and even within 10 bases of each other.</p><p id="p-0125" num="0124">Methods of the invention can detect two mutations of different types near each other including, for example, a substitution near an indel. Mutations near the ends of sequence reads can be detected including, for example, an indel at or near an end of a read.</p><p id="p-0126" num="0125">By detecting mutations with great sensitivity, methods of the invention can reliably detect disease-associated mutations. Disease associated mutations include known mutations and novel ones. In certain embodiments, methods of the invention detect mutations known to be associated with Tay-Sachs disease, Canavan disease, cystic fibrosis, familial dysautonomia, Bloom syndrome, Fanconi anemia group C, Gaucher disease, mucolipidosis type IV, Niemann-Pick disease type A, spinal muscular atrophy (SMA), Sickle cell anemia, Thalassemia, or novel mutations.</p><p id="p-0127" num="0126">Other embodiments are within the scope and spirit of the invention. For example, due to the nature of software, functions described above can be implemented using software, hardware, firmware, hardwiring, or combinations of any of these. Features implementing functions can also be physically located at various positions, including being distributed such that portions of functions are implemented at different physical locations.</p><p id="p-0128" num="0127">As one skilled in the art would recognize as necessary or best-suited for performance of the methods of the invention and sequence assembly in general, computer system <b>200</b> or machines of the invention include one or more processors (e.g., a central processing unit (CPU) a graphics processing unit (GPU) or both), a main memory and a static memory, which communicate with each other via a bus.</p><p id="p-0129" num="0128">In an exemplary embodiment shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, system <b>200</b> can include a sequencer <b>201</b> with data acquisition module <b>205</b> to obtain sequence read data. Sequencer <b>201</b> may optionally include or be operably coupled to its own, e.g., dedicated, sequencer computer <b>233</b> (including an input/output mechanism <b>237</b>, one or more of processor <b>241</b> and memory <b>245</b>). Additionally or alternatively, sequencer <b>201</b> may be operably coupled to a server <b>213</b> or computer <b>249</b> (e.g., laptop, desktop, or tablet) via network <b>209</b>. Computer <b>249</b> includes one or more processor <b>259</b> and memory <b>263</b> as well as an input/output mechanism <b>254</b>. Where methods of the invention employ a client/server architecture, an steps of methods of the invention may be performed using server <b>213</b>, which includes one or more of processor <b>221</b> and memory <b>229</b>, capable of obtaining data, instructions, etc., or providing results via interface module <b>225</b> or providing results as a file <b>217</b>. Server <b>213</b> may be engaged over network <b>209</b> through computer <b>249</b> or terminal <b>267</b>, or server <b>213</b> may be directly connected to terminal <b>267</b>, including one or more processor <b>275</b> and memory <b>279</b>, as well as input/output mechanism <b>271</b>.</p><p id="p-0130" num="0129">System <b>200</b> or machines according to the invention may further include, for any of I/O <b>249</b>, <b>237</b>, or <b>271</b> a video display unit (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)). Computer systems or machines according to the invention can also include an alphanumeric input device (e.g., a keyboard), a cursor control device (e.g., a mouse), a disk drive unit, a signal generation device (e.g., a speaker), a touchscreen, an accelerometer, a microphone, a cellular radio frequency antenna, and a network interface device, which can be, for example, a network interface card (NIC), Wi-Fi card, or cellular modem.</p><p id="p-0131" num="0130">Memory <b>263</b>, <b>245</b>, <b>279</b>, or <b>229</b> according to the invention can include a machine-readable medium on which is stored one or more sets of instructions (e.g., software) embodying any one or more of the methodologies or functions described herein. The software may also reside, completely or at least partially, within the main memory and/or within the processor during execution thereof by the computer system, the main memory and the processor also constituting machine-readable media.</p><p id="p-0132" num="0131">The software may further be transmitted or received over a network via the network interface device.</p><p id="p-0133" num="0132">While the machine-readable medium can in an exemplary embodiment be a single medium, the term &#x201c;machine-readable medium&#x201d; should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of instructions. The term &#x201c;machine-readable medium&#x201d; shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention. The term &#x201c;machine-readable medium&#x201d; shall accordingly be taken to include, but not be limited to, solid-state memories (e.g., subscriber identity module (SIM) card, secure digital card (SD card), micro SD card, or solid-state drive (SSD)), optical and magnetic media, and any other tangible storage media.</p><p id="p-0134" num="0133">Incorporation by Reference References and citations to other documents, such as patents, patent applications, patent publications, journals, books, papers, web contents, have been made throughout this disclosure. All such documents are hereby incorporated herein by reference in their entirety for all purposes.</p><heading id="h-0007" level="1">Equivalents</heading><p id="p-0135" num="0134">Various modifications of the invention and many further embodiments thereof, in addition to those shown and described herein, will become apparent to those skilled in the art from the full contents of this document, including references to the scientific and patent literature cited herein. The subject matter herein contains important information, exemplification and guidance that can be adapted to the practice of this invention in its various embodiments and equivalents thereof.</p><heading id="h-0008" level="1">EXAMPLES</heading><heading id="h-0009" level="1">Example 1</heading><heading id="h-0010" level="1">Multiple (N) Reads from Two Alleles</heading><p id="p-0136" num="0135">A sample containing heterozygous human genomic nucleic acid is obtained.</p><p id="p-0137" num="0136">A short human exon is captured by three different mutually overlapping molecular inversion probes. The sample is heterozygous. The nucleic acid is sequenced to produce N different reads, each 80 bp.</p><p id="p-0138" num="0137">All reads derived from one of those probes (i.e., all reads beginning with the targeting sequence from one of the three probes) are collected and passed to the assembly algorithm together with their known relative offsets, which is known because the reads were sequenced from the probes.</p><p id="p-0139" num="0138">This &#x201c;subsetting&#x201d; allows the efficiency of the assembly to be increased by seeding the assembly with information about the expected position of each given read relative to the others. Thus, the start of each read derives from a genomic position that is known and specified by the probe set design.</p><p id="p-0140" num="0139">The reads are assembled into two contigs. Two contigs are found, each about 180 bp. Each contig contains a unique combination of indels and substitutions. One contig corresponds to allele 1 and the other contig corresponds to allele 2.</p><p id="p-0141" num="0140">Each contig is aligned to a reference genome to determine the genomic position of each contig. Each contig aligns to substantially the same reference position.</p><p id="p-0142" num="0141">For each contig, any difference between that contig and a reference genome is identified, where differences includes substitutions and indels. This is done using BWA-long, which returns a BAM format file containing the alignment of the contig and a CIGAR string describing any differences from the reference sequence. One contains a deletion and a substitution, relative to the reference. The position for the allele 1 contig (Contigl) is chromosome 7:11608523 and the CIGAR string for the allele 1 contig is 180M. The position for the allele 2 contig (Contig2) is chromosome 7:11608523 and the CIGAR string for the allele 1 contig is 75M8D105M.</p><p id="p-0143" num="0142">The increased sequence context provided by the assembled reads (contigs) improves the overall mapping accuracy. For example, the probes are more likely to map uniquely to the reference genome as an assembled contig than as individual reads.</p><p id="p-0144" num="0143">The local, contig-specific alignment of each raw read is determined using BWA-short, with appropriate adjustments to substitution and gap penalties to ensure accurate placement of each read to its respective contig. That is, each raw read is aligned to the contig with which it is associated. The positions and CIGAR strings are given in Table 1.</p><p id="p-0145" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Position and CIGAR string of each read</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="77pt" align="left"/><colspec colname="3" colwidth="70pt" align="left"/><tbody valign="top"><row><entry/><entry>Read</entry><entry>Position</entry><entry>CIGAR string</entry></row><row><entry/><entry namest="offset" nameend="3" align="center" rowsep="1"/></row><row><entry/><entry>1</entry><entry>Contig1:1</entry><entry>80M</entry></row><row><entry/><entry>2</entry><entry>Contig2:1</entry><entry>80M</entry></row><row><entry/><entry>3</entry><entry>Contig2:50</entry><entry>80M</entry></row><row><entry/><entry>4</entry><entry>Contig2:100</entry><entry>80M</entry></row><row><entry/><entry>5</entry><entry>Contig1:50</entry><entry>80M</entry></row><row><entry/><entry>6</entry><entry>Contig1:100</entry><entry>80M</entry></row><row><entry/><entry namest="offset" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0146" num="0144">For each raw read, any difference between that read and contig to which it has been aligned is identified (i.e., as represented by the entries in the CIGAR string column in Table 1). Most differences will represent sequencing errors (since most common variations will typically be captured in the contigs themselves). However, some differences between a raw read and a contig will be evidence of rare alleles if the sample being analyzed is, e.g., a hetergoenous population of cells or ploidy other than diploid. The output of this alignment is in BAM format.</p><p id="p-0147" num="0145">The alignments of the raw reads to the contigs are converted into global, reference-based alignments. Specifically, the coordinates are converted to reference coordinates (multiple contigs can map to the same reference position). For each individual read, the differences between that read and the reference are determined using the differences between that read and the mapped contig plus the differences between the mapped contig and the reference.</p><p id="p-0148" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Map of raw read alignments from contig space to original reference space</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="21pt" align="left"/><colspec colname="2" colwidth="42pt" align="left"/><colspec colname="3" colwidth="49pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><colspec colname="5" colwidth="56pt" align="left"/><tbody valign="top"><row><entry/><entry>Position of</entry><entry/><entry>Position of</entry><entry/></row><row><entry/><entry>Read in</entry><entry>Read to Contig</entry><entry>Contig in</entry><entry>Read to Reference</entry></row><row><entry>Read</entry><entry>Contig</entry><entry>CIGAR string</entry><entry>Reference</entry><entry>CIGAR string</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row><row><entry>1</entry><entry>Contig1:1</entry><entry>80M</entry><entry>Chr7:11608523</entry><entry>85M</entry></row><row><entry>2</entry><entry>Contig2:1</entry><entry>80M</entry><entry>Chr7:11608523</entry><entry>75M8D5M</entry></row><row><entry>3</entry><entry>Contig2:50</entry><entry>80M</entry><entry>Chr7:11608573</entry><entry>25M8D55M</entry></row><row><entry>4</entry><entry>Contig2:100</entry><entry>80M</entry><entry>Chr7:11608631</entry><entry>80M</entry></row><row><entry>5</entry><entry>Contig1:50</entry><entry>80M</entry><entry>Chr7:11608573</entry><entry>80M</entry></row><row><entry>6</entry><entry>Contig2:50</entry><entry>30MS49M</entry><entry>Chr7:11608573</entry><entry>25M8D5MS49M</entry></row><row><entry>N</entry><entry>Contig1:100</entry><entry>80M</entry><entry>Chr7:11608623</entry><entry>80M</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0149" num="0146">One contig (Contig2) maps to the reference with an 8 bp deletion. One individual read (Read 6) maps to that contig with a 1 bp substitution only. The correct annotation for this read, relative to the reference, is 8 bp deletion and 1 bp substitution. The CIGAR string in the BAM file is adjusted accordingly. The adjusted CIGAR string for Read 6 is 25M8D5MS49M, indicating that, beginning at position 11,608,573 of chromosome 7, Read 6 matches chromosome 7 for 25 bases, then has an 8 base deletion followed by 5 matching bases, then 1 substitution, followed by 49 more matching bases. Thus, an indel and a substitution proximal to each other on the nucleic acid and captured in Read 6 are described as mutations relative to the wild-type reference genome.</p><p id="p-0150" num="0147">The genotype is assessed (i.e., for substitutions or indels) on the output BAM file. This allows for the detection of large indels and allows for accurate, quality score-based genotyping of substitutions near indels.</p><heading id="h-0011" level="1">Example 2</heading><heading id="h-0012" level="1">Assemblies of Subsets</heading><p id="p-0151" num="0148">A sample containing a nucleic acid containing three exons is obtained.</p><p id="p-0152" num="0149">Each exon is defined by a set of probe arms that covers it. Each exon is captured by the probes and sequenced to produce a plurality of reads, each approximately 85 bp.</p><p id="p-0153" num="0150">All reads are collected and passed to the assembly algorithm and are subset going into the assembly using the probe arms. Each subset includes those reads associated with one set of probe arms. This reduces the runtime of the assembly drastically, relative to assembly without subsetting the reads, because assembly time is exponential to number of reads.</p><p id="p-0154" num="0151">Each subset is assembled into a contig. Since each subset corresponds to a set of probe arms, and each exon is defined as the set of probe arms that covers it, three contigs are found.</p><p id="p-0155" num="0152">Each contig is aligned to a reference using BWA-long and any differences are found and recorded as a position and a CIGAR string in a contig:reference BAM format file. This alignment step captures and stores variant information about the sample and thus the reads. The variant information is transferred through to the individual reads by aligning them to the contigs to produce a read:contig BAM file and mapping the first alignment onto the second. The individual reads are thus translated to include the variant and positional information.</p><p id="p-0156" num="0153">Each exon in the nucleic acid from the sample is then genotyped based on the translated reads.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for assembling and aligning a plurality of sequence reads having mutations of different types, the method comprising:<claim-text>obtaining a sample comprising a template nucleic acid;</claim-text><claim-text>sequencing the sample to generate the plurality of sequence reads, the plurality of sequence reads comprising aligned translated reads, the sequencing comprising:<claim-text>fragmenting the template nucleic acid,</claim-text><claim-text>attaching the fragments to a surface of channels in a flow cell, and</claim-text><claim-text>amplifying the attached fragments to create clusters, each cluster comprising a plurality of copies of the template nucleic acid in one of the channels in the flow cell;</claim-text></claim-text><claim-text>inputting a reference genome and all or a subset of the plurality of sequence reads into a computer system comprising a non-transitory memory and a processor coupled to the non-transitory memory, wherein the non-transitory memory has instructions stored thereon that, when executed by the processor, cause the processor to perform the steps of:<claim-text>assembling a contig from at least some of the plurality of sequence reads;</claim-text><claim-text>identifying a plurality of contig-to-reference descriptions of the mutations by aligning the contig to a sequence of the reference genome, the mutations including a substitution and an indel;</claim-text><claim-text>identifying a plurality of read-to-contig descriptions by aligning each of the at least some of the plurality of sequence reads to the contig; and</claim-text><claim-text>generating a read-to-reference description by aligning at least one of the plurality of contig-to-reference descriptions with a corresponding at least one of the plurality of read-to-contig descriptions, wherein the read-to-reference description maps positional information of the mutations found in at least one of the at least some of the plurality of sequence reads relative to the sequence of the reference genome.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising attaching a barcode sequence to the template nucleic acid.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising assigning one of the plurality of sequence reads to a subset based on the barcode sequence.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the subset is used to create a unique contig for the subset.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein assembling the contig comprises overlap consensus assembly.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein assembling the contig comprises searching a prefix tree for overlap between the plurality of sequence reads.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising identifying the mutations based on one or more alignments between the contig and the sequence of the reference genome.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the substitution is within 100 nucleotides of the indel.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the sequencing comprises sequencing-by-synthesis.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein aligning the contig to the sequence of the reference genome is performed using a first plurality of alignment parameters and aligning each of the at least some of the plurality of sequence reads to the contig is performed using a second plurality of alignment parameters.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the first plurality of alignment parameters includes a first gap penalty and a first substitution penalty, the second plurality of alignment parameters includes a second gap penalty and a second substitution penalty, and the first gap penalty is greater than the second gap penalty.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the template nucleic acid is DNA or RNA.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the template nucleic acid is tumor DNA.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the template nucleic acid is circulating fetal DNA.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the reference genome is a human genome.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions further cause the processor to create a file or variable containing a description of the mutations.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the file or variable is a binary alignment map (BAM) file comprising a Compact Idiosyncratic Gapped Alignment Report (CIGAR) string.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the description of the mutations comprises variant and positional information.</claim-text></claim></claims></us-patent-application>