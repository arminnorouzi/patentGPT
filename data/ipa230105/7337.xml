<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007338A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007338</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17780241</doc-number><date>20201124</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="regional"><country>EP</country><doc-number>19306539.8</doc-number><date>20191129</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>44</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>442</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>81</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>44</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>44209</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>816</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">A METHOD AND APPARATUS FOR DECODING A 3D VIDEO</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>InterDigital CE Patent Holdings</orgname><address><city>Paris</city><country>FR</country></address></addressbook><residence><country>FR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Travert</last-name><first-name>Serge</first-name><address><city>Dinan</city><country>FR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Le Roux</last-name><first-name>Jean</first-name><address><city>Rennes</city><country>FR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Salmon-Legagneur</last-name><first-name>Charles</first-name><address><city>Rennes</city><country>FR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Houdaille</last-name><first-name>Remi</first-name><address><city>Cesson Sevigne</city><country>FR</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/EP2020/083249</doc-number><date>20201124</date></document-id><us-371c12-date><date>20220526</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method and an apparatus for decoding a volumetric video are disclosed. Such a method comprises receiving a data stream representative of a file comprising information for selecting, according to a rendering viewpoint, at least one atlas comprising color and depth data patches associated with a viewpoint in said volumetric video, said color and depth data patches being generated with respect to depth and color reference data acquired from a reference viewpoint in said volumetric video.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="75.44mm" wi="158.75mm" file="US20230007338A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="236.98mm" wi="174.24mm" file="US20230007338A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="235.63mm" wi="151.89mm" file="US20230007338A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="241.64mm" wi="154.86mm" file="US20230007338A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="234.70mm" wi="162.56mm" file="US20230007338A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="214.55mm" wi="109.90mm" file="US20230007338A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="195.66mm" wi="146.39mm" orientation="landscape" file="US20230007338A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">1. TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present principles generally relate to the domain of three-dimensional (3D) scene and volumetric video content. The present document is also understood in the context of the encoding, the formatting and the decoding of data representative of the texture and the geometry of a 3D scene for a rendering of volumetric content on end-user devices such as mobile devices or Head-Mounted Displays (HMD).</p><heading id="h-0002" level="1">2. BACKGROUND</heading><p id="p-0003" num="0002">The present section is intended to introduce the reader to various aspects of art, which may be related to various aspects of the present principles that are described and/or claimed below. This discussion is believed to be helpful in providing the reader with background information to facilitate a better understanding of the various aspects of the present principles. Accordingly, it should be understood that these statements are to be read in this light, and not as admissions of prior art.</p><p id="p-0004" num="0003">Recently there has been a growth of available large field-of-view content (up to 360&#xb0;). Such content is potentially not fully visible by a user watching the content on immersive display devices such as Head Mounted Displays, smart glasses, PC screens, tablets, smartphones and the like. That means that at a given moment, a user may only be viewing a part of the content. However, a user can typically navigate within the content by various means such as head movement, mouse movement, touch screen, voice and the like. It is typically desirable to encode and decode this content.</p><p id="p-0005" num="0004">Omnidirectional video, also called 360&#xb0; flat video, allows the user to watch all around himself through rotations of his head around a still point of view. Rotations only allow a 3 Degrees of Freedom (3DoF) experience. Even if 3DoF video is sufficient for an omnidirectional video experience, for example using a Head-Mounted Display device (HMD), 3DoF video may quickly become frustrating for the viewer who would expect more freedom, for example by experiencing parallax, i.e. 3D rendering. In addition, 3DoF may also induce dizziness because of a user never only rotates his head but also translates his head in three directions, translations which are not reproduced in 3DoF video experiences.</p><p id="p-0006" num="0005">A large field-of-view content may be, among others, a three-dimension computer graphic imagery scene (3D CGI scene), a point cloud or an immersive video. Many terms might be used to design such immersive videos: Virtual Reality (VR), 360, panoramic, 4&#x3c0; steradians, immersive, omnidirectional or large field of view for example.</p><p id="p-0007" num="0006">Volumetric video (also known as 6 Degrees of Freedom (6DoF) video) is an alternative to 3DoF video. When watching a 6DoF video, in addition to rotations, the user can also translate his head, and even his body, within the watched content and experience parallax and even volumes. Such videos considerably increase the feeling of immersion and the perception of the scene depth and prevent from dizziness by providing consistent visual feedback during head translations. A content may be created by means of dedicated sensors allowing simultaneous recording of color and depth of a scene of interest. The use of a rig of color cameras combined with photogrammetry techniques is a way to perform such a recording, even if technical difficulties remain.</p><p id="p-0008" num="0007">While 3DoF videos comprise a sequence of images resulting from the un-mapping of texture images (e.g. spherical images encoded according to latitude/longitude projection mapping or equirectangular projection mapping), 6DoF video frames embed information from several points of views. They can be viewed as a temporal series of point clouds resulting from a three-dimension capture. Two kinds of volumetric videos may be considered depending on the viewing conditions. A first one (i.e. complete 6DoF) allows a complete free navigation within the video content whereas a second one (aka. 3DoF+) restricts the user viewing space to a limited volume called viewing bounding box, allowing limited translation of the head and parallax experience. This second context is a valuable trade-off between free navigation and passive viewing conditions of a seated audience member.</p><p id="p-0009" num="0008">Viewing experience to users is often offered to users through streaming session. Encoded volumetric videos may be sent from a streaming server to a user's terminal through wired or wireless network connections. However, network connection shall accommodate to these new video formats, and more particularly in terms of bandwidths. There are still some limitations of the networks which put constraints on the video contents and formats to be delivered to end devices.</p><p id="p-0010" num="0009">It should be noted that such volumetric videos need a large volume of data to be transmitted to an end device in order to offer a realistic perception of 3D space in the scene displayed and to offer the possibility for the user to &#x201c;move in the scene&#x201d;, i.e. change the viewpoint like when moving in the real world, while avoiding visual artifacts.</p><p id="p-0011" num="0010">Therefore, there is a need for improving the state of the art.</p><heading id="h-0003" level="1">3. SUMMARY</heading><p id="p-0012" num="0011">The following presents a simplified summary of the present principles to provide a basic understanding of some aspects of the present principles. This summary is not an extensive overview of the present principles. It is not intended to identify key or critical elements of the present principles. The following summary merely presents some aspects of the present principles in a simplified form as a prelude to the more detailed description provided below.</p><p id="p-0013" num="0012">According to an aspect of the present disclosure, a method for decoding a volumetric video is presented. Such a method comprises receiving a data stream representative of a file comprising information for selecting, according to a rendering viewpoint, at least one atlas comprising color and depth data patches associated with a viewpoint in the volumetric video, the color and depth data patches being generated with respect to depth and color reference data acquired from a reference viewpoint in the volumetric video.</p><p id="p-0014" num="0013">In an embodiment, the method comprises requesting to a server, using information comprised in the file:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0014">at least one data stream representative of a reference view comprising the color and depth reference data and,</li>        <li id="ul0002-0002" num="0015">at least one data stream representative of at least one selected atlas,</li>    </ul>    </li></ul></p><p id="p-0015" num="0016">and decoding the at least one data stream representative of the reference view and the at least one data stream representative of the at least one selected atlas.</p><p id="p-0016" num="0017">According to another aspect of the present disclosure, a method for encoding a volumetric video is presented which comprises:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0018">encoding at least one data stream representative of at least one reference view comprising color and depth reference data associated with (e.g. acquired from) a reference viewpoint in the volumetric video,</li>        <li id="ul0004-0002" num="0019">encoding at least one data stream representative of at least one atlas comprising color and depth data patches associated with (e.g. acquired from) a viewpoint in the volumetric video, the color and depth data patches being generated with respect to depth and color reference data,</li>        <li id="ul0004-0003" num="0020">encoding a data stream representative of a file comprising information for selecting at least one atlas, according to a rendering viewpoint in the volumetric video.</li>    </ul>    </li></ul></p><p id="p-0017" num="0021">According to another aspect of the present disclosure, a data stream is presented, which is representative of a file comprising information for selecting, according to the rendering viewpoint of a volumetric video, at least one atlas comprising color and depth data patches associated with at least one virtual camera corresponding to a viewpoint in the volumetric video, the color and depth data patches being generated with respect to depth and color reference data associated with the reference viewpoint in the volumetric video.</p><p id="p-0018" num="0022">According to another aspect of the present disclosure, an apparatus for decoding a volumetric video is presented which comprises means for receiving a data stream representative of a file comprising information for selecting, according to a rendering viewpoint, at least one atlas comprising color and depth data patches associated with a viewpoint in the volumetric video, the color and depth data patches being generated with respect to depth and color reference data acquired from a reference viewpoint in the volumetric video.</p><p id="p-0019" num="0023">According to another aspect of the present disclosure, an apparatus for encoding a volumetric video is presented, which comprises:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0024">means for encoding at least one data stream representative of at least one reference view comprising color and depth reference data associated with a reference viewpoint in the volumetric video,</li>        <li id="ul0006-0002" num="0025">means for encoding at least one data stream representative of at least one atlas comprising color and depth data patches associated with at least one virtual camera corresponding to a viewpoint in said volumetric video, the color and depth data patches being generated with respect to depth and color reference data associated with the reference viewpoint in the volumetric video,</li>        <li id="ul0006-0003" num="0026">means for encoding a data stream representative of a file comprising information for selecting at least one atlas, according to a rendering viewpoint of the volumetric video.</li>    </ul>    </li></ul></p><p id="p-0020" num="0027">According to a further aspect of the present disclosure, a computer program is presented which comprises instructions to command the execution of the method steps according to any one of embodiments presented herein, when the instructions are processed by a processor.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">4. BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0021" num="0028">The present disclosure will be better understood, and other specific features and advantages will emerge upon reading the following description, the description making reference to the annexed drawings wherein:</p><p id="p-0022" num="0029"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a three-dimension (3D) model of an object and points of a point cloud corresponding to the 3D model, according to a non-limiting embodiment of the present principles;</p><p id="p-0023" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a non-limitative example of the encoding, transmission and decoding of data representative of a sequence of 3D scenes, according to a non-limiting embodiment of the present principles;</p><p id="p-0024" num="0031"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example architecture of a device which may be configured to implement a method described in relation with <figref idref="DRAWINGS">FIGS. <b>10</b> and <b>11</b></figref>, according to a non-limiting embodiment of the present principles;</p><p id="p-0025" num="0032"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example of an embodiment of the syntax of a stream when the data are transmitted over a packet-based transmission protocol, according to a non-limiting embodiment of the present principles;</p><p id="p-0026" num="0033"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a spherical projection into patches for multiple points of view, according to a non-limiting embodiment of the present principles;</p><p id="p-0027" num="0034"><figref idref="DRAWINGS">FIGS. <b>6</b><i>a </i>and <b>6</b><i>b </i></figref>show an example of texture information of the points of a 3D scene for atlases defined for a main point of view (<figref idref="DRAWINGS">FIG. <b>6</b><i>a</i></figref>) and a virtual cameras (<figref idref="DRAWINGS">FIG. <b>6</b><i>b</i></figref>), according to a non-limiting embodiment of the present principles;</p><p id="p-0028" num="0035"><figref idref="DRAWINGS">FIGS. <b>7</b><i>a </i>and <b>7</b><i>b </i></figref>show an example of depth information of the points of the 3D scene for atlases defined for a main point of view (<figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>) and virtual cameras (<figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>) of <figref idref="DRAWINGS">FIGS. <b>6</b><i>a </i>and <b>6</b><i>b</i></figref>, according to a non-limiting embodiment of the present principles;</p><p id="p-0029" num="0036"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an exemplary positioning of 4 virtual cameras for a 3DOF+ cell according to the SoA approach;</p><p id="p-0030" num="0037"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a multi 3DOF+ cells approach and a dynamic cell using additional cameras according to an embodiment of the present disclosure,</p><p id="p-0031" num="0038"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an exemplary method for encoding a volumetric video according to an embodiment of the present disclosure,</p><p id="p-0032" num="0039"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates an exemplary method for decoding a volumetric video according to an embodiment of the present disclosure,</p><p id="p-0033" num="0040"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates an exemplary data stream representative of a volumetric video according to an embodiment of the present disclosure,</p><p id="p-0034" num="0041"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates an example of adaptive selection of virtual cameras within a 3DOF+ cell by a terminal.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">5. DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0035" num="0042">The present principles will be described more fully hereinafter with reference to the accompanying figures, in which examples of the present principles are shown. The present principles may, however, be embodied in many alternate forms and should not be construed as limited to the examples set forth herein. Accordingly, while the present principles are susceptible to various modifications and alternative forms, specific examples thereof are shown by way of examples in the drawings and will herein be described in detail. It should be understood, however, that there is no intent to limit the present principles to the particular forms disclosed, but on the contrary, the disclosure is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the present principles as defined by the claims.</p><p id="p-0036" num="0043">The terminology used herein is for the purpose of describing particular examples only and is not intended to be limiting of the present principles. As used herein, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms &#x201c;comprises&#x201d;, &#x201c;comprising,&#x201d; &#x201c;includes&#x201d; and/or &#x201c;including&#x201d; when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof. Moreover, when an element is referred to as being &#x201c;responsive&#x201d; or &#x201c;connected&#x201d; to another element, it can be directly responsive or connected to the other element, or intervening elements may be present. In contrast, when an element is referred to as being &#x201c;directly responsive&#x201d; or &#x201c;directly connected&#x201d; to other element, there are no intervening elements present. As used herein the term &#x201c;and/or&#x201d; includes any and all combinations of one or more of the associated listed items and may be abbreviated as&#x201c;/&#x201d;.</p><p id="p-0037" num="0044">It will be understood that, although the terms first, second, etc. may be used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first element could be termed a second element, and, similarly, a second element could be termed a first element without departing from the teachings of the present principles.</p><p id="p-0038" num="0045">Although some of the diagrams include arrows on communication paths to show a primary direction of communication, it is to be understood that communication may occur in the opposite direction to the depicted arrows.</p><p id="p-0039" num="0046">Some examples are described with regard to block diagrams and operational flowcharts in which each block represents a circuit element, module, or portion of code which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that in other implementations, the function(s) noted in the blocks may occur out of the order noted. For example, two blocks shown in succession may, in fact, be executed substantially concurrently or the blocks may sometimes be executed in the reverse order, depending on the functionality involved.</p><p id="p-0040" num="0047">Reference herein to &#x201c;in accordance with an example&#x201d; or &#x201c;in an example&#x201d; means that a particular feature, structure, or characteristic described in connection with the example can be included in at least one implementation of the present principles. The appearances of the phrase in accordance with an example&#x201d; or &#x201c;in an example&#x201d; in various places in the specification are not necessarily all referring to the same example, nor are separate or alternative examples necessarily mutually exclusive of other examples.</p><p id="p-0041" num="0048">Reference numerals appearing in the claims are by way of illustration only and shall have no limiting effect on the scope of the claims. While not explicitly described, the present examples and variants may be employed in any combination or sub-combination.</p><p id="p-0042" num="0049">To improve the immersivity in 360&#xb0; video contents rendered, a so-called 3DOF+ approach may be used. According to this 3DOF+ approach data information is added to the video data for allowing to generate parallax effects when rendering video on an end terminal. According to this approach, the volumetric input is processed to generate a combination of color and depth patches stored in color and depth atlases. Planar representations of the volumetric content are obtained such that they can then be processed by legacy video codecs. The patches are obtained from a peeling of the 3D scene, each individual patch resulting from a mapping (typically projections such as ERP&#x2014;EquiRectangular Projection, cubemap projection, . . . ) of a subpart of the scene on a given virtual camera. Such a decomposition peels and factorizes the scene as:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0050">i) a central patch containing the part of the scene visible from a main central viewpoint and</li>        <li id="ul0008-0002" num="0051">ii) peripheral patches embedding the complementary information non-visible from this central viewpoint.</li>    </ul>    </li></ul></p><p id="p-0043" num="0052">Such contents may come from real captures or can be generated from existing Computer Graphics (CG) contents.</p><p id="p-0044" num="0053">An exemplary implementation of the 3DOF+ approach is illustrated by <figref idref="DRAWINGS">FIG. <b>8</b></figref>. A central patch and the additional information are defined thanks to the introduction of 4 virtual cameras (Cam0-3), placed at the center (Cam0) and at each vertex of a tetrahedron (Cam1-3), as illustrated on <figref idref="DRAWINGS">FIG. <b>8</b></figref>. The central viewpoint corresponds to the view from camera Cam0. Additional information is recovered thanks to the 3 additional virtual cameras Cam1, Cam2 and Cam3. The central and lateral viewpoints corresponding to the 4 virtual cameras, and their associated color and depth patches, characterize a 3DoF+ cell.</p><p id="p-0045" num="0054">In an embodiment, all volumetric data seen by the camera Cam0 are sent as it is for instance through 360&#xb0; ERP color and depth streams if ERP mapping is used. However, other kinds of mapping could also be used. All other points seen by cameras Cam1 to Cam3 are transmitted via additional patches if they are not seen by camera Cam0. So, the greater the distance between camera i (i in [1;3]) and camera Cam0, the more additional points will be visible, i.e. the more the parallax information and so the patches number will be important.</p><p id="p-0046" num="0055">According to the current 3DOF+ approach, for a 3DOF+ cell, all the color and depth patches from the central and lateral viewpoints corresponding to the virtual cameras are sent to the end device.</p><p id="p-0047" num="0056">Consequently, this approach limits the capability of the end device to optimize parallax rendering and immersion effect as a function of the evolving network throughput. It also limits the capability of the end device to optimize parallax rendering and immersion effect as a function of the video content, and of other factors related to the behavior of the user of the end device.</p><p id="p-0048" num="0057">Finally, because existing approaches require to systematically send to end devices at the same time all parallax information which has been generated for a given viewpoint, this prevents from adding further parallax information which may enhance content immersion and/or extend the size of the cell, due to the constraint of keeping as low as possible the network bandwidth required to transmit the content data.</p><p id="p-0049" num="0058">Thus, according to the present disclosure, the end device player is provided with the possibility to select in a flexible way a number and location of the so-called &#x201c;side&#x201d; virtual cameras, associated to color and depth atlases transmitted to allow parallax rendering.</p><p id="p-0050" num="0059">According to a principle of the present disclosure, a terminal or end device is given the following new adaptative abilities:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0060">When navigating into 3DOF+ contents, the terminal can select which color and depth patches, i.e. which virtual cameras, the terminal will request, for the 3DoF+ cell corresponding to the viewpoint it will render on the display. To perform this selection, it may implement &#x201c;intelligent&#x201d; strategies based on various decision criteria which may be related to the network throughput currently available, the characteristics of the terminal, observations on the current behavior of the end user, strategies for rendering of 3DOF+ contents based on usage data collected by the terminal, . . . .</li>        <li id="ul0010-0002" num="0061">To allow the terminal to deploy such intelligent strategies for parallax rendering, the number and locations in space of the virtual cameras, associated to the color and depth atlases where color and depth patches are stored, can vary throughout the duration of the video content; the atlases associated to the virtual cameras are all streamable individually and independently from each other, contrarily to the existing approaches.</li>        <li id="ul0010-0003" num="0062">The terminal receives specific signaling information describing the various parameters involved with these new capabilities. This signaling information can be updated at a frequency of the parameter changes (for instance at every group of pictures (GoP)). Such a signaling can include:        <ul id="ul0011" list-style="none">            <li id="ul0011-0001" num="0063">a number of virtual cameras used to provide the color and depth patches to be used to generate parallax,</li>            <li id="ul0011-0002" num="0064">a location of these virtual cameras,</li>            <li id="ul0011-0003" num="0065">a quantitative information on the size (in terms of volume of data to transmit) of the color and depth patches associated to each virtual camera,</li>            <li id="ul0011-0004" num="0066">information of various kinds on the characteristics and usability of the color and depth patches associated to each virtual camera, which can be useful for the terminal player to select for which virtual camera it will request color and depth patches from a server.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0051" num="0067">Thanks to the possibility to offer atlases of color and depth patches, associated to a number of virtual cameras, with signaling allowing the terminal to select and request from the server any subset/combination of these atlases/virtual cameras, the terminal player can adapt its capability of processing and rendering parallax to the evolving available network throughput.</p><p id="p-0052" num="0068"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a three-dimension (3D) model <b>10</b> of an object and points of a point cloud <b>11</b> corresponding to 3D model <b>10</b>. 3D model <b>10</b> and the point cloud <b>11</b> may for example correspond to a possible 3D representation of an object of the 3D scene comprising other objects. Model <b>10</b> may be a 3D mesh representation and points of point cloud <b>11</b> may be the vertices of the mesh. Points of point cloud <b>11</b> may also be points spread on the surface of faces of the mesh. Model <b>10</b> may also be represented as a splatted version of point cloud <b>11</b>, the surface of model <b>10</b> being created by splatting the points of the point cloud <b>11</b>. Model <b>10</b> may be represented by a lot of different representations such as voxels or splines. <figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates the fact that a point cloud may be defined with a surface representation of a 3D object and that a surface representation of a 3D object may be generated from a point of cloud. As used herein, projecting points of a 3D object (by extension points of a 3D scene) onto an image is equivalent to projecting any representation of this 3D object, for example a point cloud, a mesh, a spline model or a voxel model.</p><p id="p-0053" num="0069">A point cloud may be represented in memory, for instance, as a vector-based structure, wherein each point has its own coordinates in the frame of reference of a viewpoint (e.g. three-dimensional coordinates XYZ, or a solid angle and a distance (also called depth) from/to the viewpoint) and one or more attributes, also called component. An example of component is the color component that may be expressed in various color spaces, for example RGB (Red, Green and Blue) or YUV (Y being the luminance component and UV two chrominance components). The point cloud is a representation of a 3D scene. The 3D scene may be a real scene captured by a video camera. The 3D scene may be seen from a given viewpoint or a range of viewpoints. The point cloud may be obtained by many ways, e.g.:<ul id="ul0012" list-style="none">    <li id="ul0012-0001" num="0000">    <ul id="ul0013" list-style="none">        <li id="ul0013-0001" num="0070">from a capture of a real scene shot by a rig of cameras, optionally complemented by depth active sensing device;</li>        <li id="ul0013-0002" num="0071">from a capture of a virtual/synthetic scene shot by a rig of virtual cameras in a modelling tool;</li>        <li id="ul0013-0003" num="0072">from a mix of both real and virtual scenes.</li>    </ul>    </li></ul></p><p id="p-0054" num="0073">Some benefits of the principle disclosed herein are illustrated hereafter. This is a non-exhaustive list of all potential benefits that can be derived from the present principle.</p><heading id="h-0006" level="2">Improved Capacity of the Terminal to Optimize the Parallax Effect, and Thus the Volumetric Immersion, as a Function of an Available Network Throughput</heading><p id="p-0055" num="0074">Let us consider that the video content available in the server at a given time for a given viewpoint is a combination of a color and depth atlas a<sub>0 </sub>corresponding to a reference (central) virtual camera, and of n additional color and depth atlases a<sub>i </sub>(i=1,n) corresponding to n additional side virtual cameras, which can be selected individually.</p><p id="p-0056" num="0075">The network throughput required to transmit simultaneously all atlases (a<sub>0 </sub>and a<sub>1 </sub>to a<sub>n</sub>) will be rather high (for an UHD video quality, a<sub>0 </sub>may typically require 20 Mbps and each a<sub>i </sub>typically a few Mbps). In many situations the network throughput available for the end terminal may not be sufficient to transmit all atlases, but may allow to transmit the atlas a<sub>0 </sub>and some of the atlases a<sub>i </sub>(i=1,n).</p><p id="p-0057" num="0076">According to the principle disclosed herein, the terminal may request the transmission of the atlas a<sub>0 </sub>and some of the atlases a<sub>i</sub>, and so to be able to stream the immersive 3DOF+ content, whereas access to the immersive 3DOF+ content would be impossible with existing solutions which can only deliver the full set of all atlases.</p><p id="p-0058" num="0077">If the network throughput available for the terminal decreases, the terminal may, for instance, stop requesting a subset of additional atlases a<sub>i </sub>corresponding to the level of throughput decrease, minimizing the loss of parallax information that it induces.</p><p id="p-0059" num="0078">Similarly, if the network throughput available for the terminal increases, the terminal may request a subset of additional atlases a<sub>i </sub>corresponding to the level of throughput increase, maximizing the additional benefit it can derive of extra parallax information.</p><p id="p-0060" num="0079">Furthermore, the terminal may assess, from the network throughput currently available, and using the signaling information (metadata) transmitted to characterize each atlas a<sub>i</sub>, which number/combination of additional atlases a<sub>i </sub>it can afford additionally to the atlas a<sub>0</sub>, and it can select a combination that optimizes the parallax and immersive effect as a function of criteria dealing with the video content and/or an end user position and navigation behavior. Examples of that are further described later.</p><p id="p-0061" num="0080">If the video content is stored in a server and proposed to the terminal in various quality levels associated with various bit rates&#x2014;i.e. both a<sub>0 </sub>and a<sub>i </sub>(i=1,n) atlases are proposed with various quality and bit rate levels -, as it is often the case for video contents to be accessed via adaptive streaming, the terminal can arbitrate image quality versus immersion quality in a way which is optimized for its characteristics. For instance a smartphone with a small screen may favor a compromise where it requests from the server all a<sub>0 </sub>and a<sub>i </sub>(i=1,n) atlases with a lower image definition, whereas a TV set with a large screen may favor a compromise where it requests from the server a<sub>0 </sub>and a few a<sub>i </sub>(i=1,n) atlases with a better image definition.</p><p id="p-0062" num="0081">Thanks to the possibility to offer atlases of color and depth patches, associated to a number of virtual cameras, with signaling allowing a terminal to select and request from the server any subset/combination of these atlases/virtual cameras, the terminal player can adapt its capability of processing and rendering parallax to the evolving available network throughput:<ul id="ul0014" list-style="none">    <li id="ul0014-0001" num="0000">    <ul id="ul0015" list-style="none">        <li id="ul0015-0001" num="0082">If network throughput allows it, it can request the totality of the atlases corresponding to all virtual cameras, and hence is able to generate and render the maximum parallax effect that the source content can offer;</li>        <li id="ul0015-0002" num="0083">When network throughput is not sufficient to allow the delivery of all atlases, the terminal player can request a subset of atlases that allows it to get the most data for parallax effect that the network bandwidth can afford;</li>        <li id="ul0015-0003" num="0084">When available network bandwidth increases, the terminal player can request additional atlases, and thus improve the parallax and immersion effect;</li>        <li id="ul0015-0004" num="0085">When bandwidth available decreases, the terminal player can still select the maximum number of atlases that is compatible with the available bandwidth, and thus preserve as much as possible parallax and immersion effect.<br/>The above section emphasized the improvements brought by the principle of the present disclosure, in terms of maximizing the parallax and immersion effect as a function of the network bandwidth available (insufficient bandwidth to transmit all atlases available, variations in time of the network bandwidth available). The next two sections emphasize what benefits can be obtained, in terms of improvement in parallax and immersion effect, by adding virtual cameras which can be selected by the terminal as a function of a scene content and/or a user navigation behavior.<br/>Improved Parallax and Immersion Effect by Adding Virtual Cameras, with Associated Color and Depth Patches, During the Video Content Duration, Based on the Video Content</li>    </ul>    </li></ul></p><p id="p-0063" num="0086">The principle disclosed herein allows to add extra virtual cameras, to enrich the parallax information made available, for periods of the video content where the ability to generate an improved parallax effect is particularly relevant. For instance, when the scene captured from a current reference viewpoint includes several regions of interests (characters, animals, objects, . . . ) of complex shapes located at various depths, with partial mutual occlusions, adding virtual cameras can avoid generating artifacts while keeping a same amplitude of movements of the user around the reference viewpoint in the 3DOF+ cell.</p><p id="p-0064" num="0087">According to the present principle, the terminal is allowed to select a number of additional atlases according to the available network bandwidth, the number of additional virtual cameras can be increased during such critical content periods as much as it is useful, without increasing up to a prohibitive level the network bandwidth required to deliver the content, so without generating potential side issues for content delivery.</p><p id="p-0065" num="0000">Improved Parallax and Immersion Effect by Adding Virtual Cameras, with Associated Color and Depth Patches, to Accommodate Variable User Behaviors</p><p id="p-0066" num="0088">With state of the art (SoA) approaches that do not give the possibility to select a subset of the additional atlases associated to side virtual cameras, a compromise has to be found between keeping as low as possible the additional network bandwidth required to transmit the additional atlases for parallax, and sending as much additional atlases as possible to increase the parallax and immersion effects. According to the present principle, it is possible to add any further atlases that can improve the user experience for some particular navigation behaviors, which can be selected by a terminal only when the available network bandwidth allows it, or when it is more relevant due to a current user behavior. For instance, additional virtual cameras can be added to enlarge the potential range of movements around a reference central viewpoint. This can allow:<ul id="ul0016" list-style="none">    <li id="ul0016-0001" num="0000">    <ul id="ul0017" list-style="none">        <li id="ul0017-0001" num="0089">To increase the amplitude of user movements around the reference central viewpoint when the network bandwidth allows to transmit all atlases,</li>        <li id="ul0017-0002" num="0090">Or to select atlases best fitting to the position/movements of the end user versus the reference central viewpoint, when all atlases cannot be transmitted,</li>        <li id="ul0017-0003" num="0091">And to increase the speed of displacement that can be accommodated without artefacts.</li>    </ul>    </li></ul></p><heading id="h-0007" level="2">Enlarging Significantly the Size of a Cell by Adding a High Number of Virtual Cameras, to Allow Parallax Rendering in a Large Area Around a Viewpoint</heading><p id="p-0067" num="0092">By further increasing the number of side virtual cameras with associated color and depth atlases, we can significantly enlarge the area around a reference viewpoint where the end user will be able to move, while keeping a full parallax rendering. There is no strong limitation, in terms of network bandwidth required, to the number of such side virtual cameras that can be added, as all extra atlases are not systematically transmitted to the end device. Indeed, they are individually delivered only when the end device requests them, when they are relevant for the current navigation behavior of the end user and when the available network bandwidth can afford it.</p><p id="p-0068" num="0093">It provides a solution for keeping good parallax rendering even when the end user moves rapidly when navigating in the rendered scene. In the SoA 3DoF+ approach, enlarging the area where parallax is rendered is provided through multi 3DoF+ cells. Keeping a good parallax rendering when the user moves away from the reference central viewpoint requires to switch to a neighbor cell. The maximum speed of movements that are possible with a good parallax rendering is consequently much lower, compared to the principle disclosed herein.</p><p id="p-0069" num="0094"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates on the left-hand side (a) a multi-cells SoA 3DoF+ approach and on the right hand side (b) an exemplary dynamic use of additional cameras according to an embodiment of the present disclosure. In each one of these illustrated approaches, &#x201c;Cam 0&#x201d; represents viewpoints of a central camera 360&#xb0;, these central cameras are illustrated with circled grey crosses. It can be seen that according to the 3DoF+ cells approach (<figref idref="DRAWINGS">FIG. <b>9</b>(<i>a</i>)</figref>), two cells are represented, each one with a central camera. While, in the dynamic cell approach, (<figref idref="DRAWINGS">FIG. <b>9</b>(<i>b</i>)</figref>), one central camera is used.</p><p id="p-0070" num="0095">Other grey crosses represent the viewpoints with active additional camera (which provides parallax patches). By active additional camera, it should be understood here, the additional camera available to the rendering device. In the case of the 3DoF+ cells approach, all the peripheral cameras of the second 3DoF+ cell are available. It corresponds to the peripheral cameras of the active cell, the active cell being the 3DoF+ cell in which the user is positioned for rendering (illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref> by a grey point). White crosses represent the viewpoints with inactive additional camera. By inactive additional camera, it should be understood here, an additional camera that is not available to the rendering device.</p><p id="p-0071" num="0096">In the case of the dynamic cell, it can be seen that according to the principle disclosed herein, the cell comprises active and inactive additional cameras. On <figref idref="DRAWINGS">FIG. <b>9</b> (<i>b</i>)</figref>, according to an embodiment of the present principle, the main camera corresponds to the reference view that is sent to the terminal, the active additional cameras corresponds to the selected atlases that are selected by the terminal for improving the parallax of the rendering. The inactive additional cameras are the virtual cameras that are not selected by the terminal, and thus not requested to the server.</p><p id="p-0072" num="0097">In the remaining of the document, for ease of understanding, we will use the following terms and</p><heading id="h-0008" level="1">Definitions</heading><p id="p-0073" num="0000"><ul id="ul0018" list-style="none">    <li id="ul0018-0001" num="0000">    <ul id="ul0019" list-style="none">        <li id="ul0019-0001" num="0098">C<sub>i </sub>will denote a 3 DoF+ cell, which involves the following elements and parameters:        <ul id="ul0020" list-style="none">            <li id="ul0020-0001" num="0099">A reference central virtual camera, corresponding to a central reference viewpoint denoted V<sub>i,0</sub>, with coordinates (x<sub>i,0</sub>,y<sub>i,0</sub>,z<sub>i,0</sub>) in a global 3D cartesian coordinates system; the central atlas generated in the cell C<sub>i </sub>contains the part of the scene visible from this central reference viewpoint V<sub>i,0</sub>.</li>            <li id="ul0020-0002" num="0100">n side virtual cameras, corresponding to peripheral viewpoints denoted V<sub>i,j </sub>(j=1,n), with coordinates (x<sub>i,j</sub>,y<sub>i,j</sub>,z<sub>i,j</sub>) which can be either its coordinates in a global 3D cartesian coordinates system or its relative coordinates in the local 3D cartesian coordinates system centered on the central viewpoint V<sub>i,0 </sub>of the cell; to each side virtual camera is associated a peripheral atlas embedding the complementary information visible from the viewpoint Vi which is not visible from the central viewpoint V<sub>i,0</sub>.</li>            <li id="ul0020-0003" num="0101">We call atlas a whole color+depth data associated with a virtual camera corresponding to a particular viewpoint. A central atlas A<sub>i,0 </sub>contains the information relative to the central reference viewpoint V<sub>i,0 </sub>of the cell C<sub>i</sub>, i.e. the color and depth reference data associated with the reference view. A peripheral atlas A<sub>i,j </sub>contains the information relative to a peripheral viewpoint V<sub>i,j </sub>of the cell C<sub>i</sub>, i.e. the color and depth data associated with the peripheral viewpoint and where points already visible from V<sub>i,0 </sub>have been removed. According to the principle disclosed herein, atlases are streamable individually and independently from each other, and can be requested on demand by the terminal.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0074" num="0102"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates the patches atlas approach with an example of 4 projection centers, i.e. 4 virtual cameras. The patches atlas approach is not limited to this number of virtual cameras.</p><p id="p-0075" num="0103">3D scene <b>50</b> comprises a character. For instance, center of projection <b>51</b> is a perspective camera and camera <b>53</b> is an orthographic camera. Cameras may also be omnidirectional cameras with, for instance a spherical mapping (e.g. Equi-Rectangular mapping) or a cube mapping. The 3D points of the 3D scene are projected onto the 2D planes associated with virtual cameras located at the projection centers, according to a projection operation described in projection information of metadata. In the example of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, projection of the points captured by camera <b>51</b> is mapped onto patch <b>52</b> according to a perspective mapping and projection of the points captured by camera <b>53</b> is mapped onto patch <b>54</b> according to an orthographic mapping.</p><p id="p-0076" num="0104">The clustering of the projected pixels yields a multiplicity of 2D patches which are packed in rectangular atlases <b>520</b>, <b>540</b>, <b>550</b> and <b>560</b>. The organization of patches within each of the atlas defines the atlas layout. In an embodiment, two atlases with identical layout: one for texture (i.e. color) information and one for depth information are used.</p><p id="p-0077" num="0105">It can be seen that according to the principle disclosed herein, the 2D patches obtained from each one of the virtual cameras are packed in separate atlases. In other words, for each virtual camera, one atlas of color and depth information comprises all the patches obtained for this camera, or two atlases in case color and depth information are packed in separate atlases.</p><p id="p-0078" num="0106">Two patches captured by a same camera or by two distinct cameras may comprise information representative of a same part of the 3D scene, like, for instance patches <b>54</b> and <b>56</b>.</p><p id="p-0079" num="0107">The packing operation produces a patch data for each generated patch. A patch data comprises a reference to a projection data (e.g. an index in a table of projection data or a pointer (i.e. address in memory or in a data stream) to a projection data) and information describing the location and the size of the patch within the atlas (e.g. top left corner coordinates, size and width in pixels). Patch data items are added to metadata to be encapsulated in a data stream in association with the compressed data of the atlases.</p><p id="p-0080" num="0108"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a non-limitative example of the encoding, transmission and decoding of data representative of a sequence of 3D scenes. The encoding format that may be, for example and at the same time, compatible for 3DoF, 3DoF+ and 6DoF decoding.</p><p id="p-0081" num="0109">A sequence of 3D scenes <b>20</b> is obtained. As a sequence of pictures is a 2D video, a sequence of 3D scenes is a 3D (also called volumetric) video. A sequence of 3D scenes may be provided to a volumetric video rendering device for a 3DoF, 3DoF+ or 6DoF rendering and displaying.</p><p id="p-0082" num="0110">Sequence of 3D scenes <b>20</b> is provided to an encoder <b>21</b>. The encoder <b>21</b> takes one 3D scene or a sequence of 3D scenes as input and provides a bit stream representative of the input. The bit stream may be stored in a memory <b>22</b> and/or on an electronic data medium and may be transmitted over a network <b>22</b>. The bit stream representative of a sequence of 3D scenes may be read from a memory <b>22</b> and/or received from a network <b>22</b> by a decoder <b>23</b>. Decoder <b>23</b> is inputted by said bit stream and provides a sequence of 3D scenes, for instance in a point cloud format.</p><p id="p-0083" num="0111">Encoder <b>21</b> may comprise several circuits implementing several steps. In a first step, encoder <b>21</b> projects each 3D scene onto at least one 2D picture. 3D projection is any method of mapping three-dimensional points to a two-dimensional plane. As most current methods for displaying graphical data are based on planar (pixel information from several bit planes) two-dimensional media, the use of this type of projection is widespread, especially in computer graphics, engineering and drafting. Projection circuit <b>211</b> provides at least one two-dimensional frame <b>2111</b> for a 3D scene of sequence <b>20</b>. Frame <b>2111</b> comprises color information and depth information representative of the 3D scene projected onto frame <b>2111</b>. In a variant, color information and depth information are encoded in two separate frames <b>2111</b> and <b>2112</b>.</p><p id="p-0084" num="0112">Metadata <b>212</b> are used and updated by projection circuit <b>211</b>. Metadata <b>212</b> comprise information about the projection operation (e.g. projection parameters) and about the way color and depth information is organized within frames <b>2111</b> and <b>2112</b> as described in relation to <figref idref="DRAWINGS">FIGS. <b>5</b> to <b>7</b></figref>.</p><p id="p-0085" num="0113">A video encoding circuit <b>213</b> encodes sequence of frames <b>2111</b> and <b>2112</b> as a video. Pictures of a 3D scene <b>2111</b> and <b>2112</b> (or a sequence of pictures of the 3D scene) is encoded in a stream by video encoder <b>213</b>. Then video data and metadata <b>212</b> are encapsulated in a data stream by a data encapsulation circuit <b>214</b>.</p><p id="p-0086" num="0114">According to an embodiment of the present disclosure, all color and depth patches associated to a given virtual camera are encapsulated in an atlas encoded as a separate data stream. For instance, a data stream representative of the one reference view comprising color and depth reference data associated with the reference viewpoint is encoded, and a plurality of data streams respectively representative of atlases comprising color and depth data patches associated with peripheral virtual cameras. The color and depth data patches are generated with respect to depth and color reference data associated with the reference viewpoint.</p><p id="p-0087" num="0115">Encoder <b>213</b> is for example compliant with an encoder such as:<ul id="ul0021" list-style="none">    <li id="ul0021-0001" num="0000">    <ul id="ul0022" list-style="none">        <li id="ul0022-0001" num="0116">JPEG, specification ISO/CEI 10918-1 UIT-T Recommendation T.81, https://www.itu.int/rec/T-REC-T.81/en;</li>        <li id="ul0022-0002" num="0117">AVC, also named MPEG-4 AVC or h264. Specified in both UIT-T H.264 and ISO/CEI MPEG-4 Part 10 (ISO/CEI 14496-10), http://www.itu.int/rec/T-REC-H.264/en, HEVC (its specification is found at the ITU website, T recommendation, H series, h265, http://www.itu.int/rec/T-REC-H.265-201612-Fen);</li>        <li id="ul0022-0003" num="0118">3D-HEVC (an extension of HEVC whose specification is found at the ITU website, T recommendation, H series, h265, http://www.itu.int/rec/T-REC-H.265-201612-I/en annex G and I);</li>        <li id="ul0022-0004" num="0119">VP9 developed by Google; or</li>        <li id="ul0022-0005" num="0120">AV1 (AOMedia Video 1) developed by Alliance for Open Media.</li>    </ul>    </li></ul></p><p id="p-0088" num="0121">The data streams are stored in a memory that is accessible, for example through a network <b>22</b>, by a decoder <b>23</b>.</p><p id="p-0089" num="0000">Also, a data stream representative of a file comprising information for selecting one or more atlases from the plurality of atlases, according to a rendering viewpoint is encoded.</p><p id="p-0090" num="0122">On <figref idref="DRAWINGS">FIG. <b>2</b></figref>, decoder <b>23</b> comprises different circuits implementing different steps of the decoding. Decoder <b>23</b> takes at least one data stream generated by an encoder <b>21</b> as an input and provides a sequence of 3D scenes <b>24</b> to be rendered and displayed by a volumetric video display device, like a Head-Mounted Device (HMD). According to a variant, the decoder <b>23</b> may also provided the images to be rendered to the volumetric video display device which displays the images. Decoder <b>23</b> obtains the stream from a source <b>22</b>. For example, source <b>22</b> belongs to a set comprising:<ul id="ul0023" list-style="none">    <li id="ul0023-0001" num="0000">    <ul id="ul0024" list-style="none">        <li id="ul0024-0001" num="0123">a local memory, e.g. a video memory or a RAM (or Random-Access Memory), a flash memory, a ROM (or Read Only Memory), a hard disk;</li>        <li id="ul0024-0002" num="0124">a storage interface, e.g. an interface with a mass storage, a RAM, a flash memory, a ROM, an optical disc or a magnetic support;</li>        <li id="ul0024-0003" num="0125">a communication interface, e.g. a wireline interface (for example a bus interface, a wide area network interface, a local area network interface) or a wireless interface (such as a IEEE 802.11 interface or a Bluetooth&#xae; interface or a 4G/5G interface); and</li>        <li id="ul0024-0004" num="0126">a user interface such as a Graphical User Interface enabling a user to input data.</li>    </ul>    </li></ul></p><p id="p-0091" num="0127">Decoder <b>23</b> comprises a circuit <b>234</b> to extract data encoded in the data stream. Circuit <b>234</b> takes a data stream as input and provides metadata <b>232</b> corresponding to metadata <b>212</b> encoded in the stream and a two-dimensional video. The video is decoded by a video decoder <b>233</b> which provides a sequence of frames. Decoded frames comprise color and depth information. In a variant, video decoder <b>233</b> provides two sequences of frames, one comprising color information, the other comprising depth information. A circuit <b>231</b> uses metadata <b>232</b> to un-project color and depth information from decoded frames to provide a sequence of 3D scenes <b>24</b>. Sequence of 3D scenes <b>24</b> corresponds to sequence of 3D scenes <b>20</b>, with a possible loss of precision related to the encoding as a 2D video and to the video compression.</p><p id="p-0092" num="0128"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example architecture of a device <b>30</b> which may be configured to implement a method described in relation with <figref idref="DRAWINGS">FIGS. <b>10</b> and <b>11</b></figref>. Encoder <b>21</b> and/or decoder <b>23</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may implement this architecture. Alternatively, each circuit of encoder <b>21</b> and/or decoder <b>23</b> may be a device according to the architecture of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, linked together, for instance, via their bus <b>31</b> and/or via I/O interface <b>36</b>.</p><p id="p-0093" num="0129">Device <b>30</b> comprises following elements that are linked together by a data and address bus <b>31</b>:<ul id="ul0025" list-style="none">    <li id="ul0025-0001" num="0000">    <ul id="ul0026" list-style="none">        <li id="ul0026-0001" num="0130">a microprocessor <b>32</b> (or CPU, and/or GPU), which is, for example, a DSP (or Digital Signal Processor);</li>        <li id="ul0026-0002" num="0131">a ROM (or Read Only Memory) <b>33</b>;</li>        <li id="ul0026-0003" num="0132">a RAM (or Random Access Memory) <b>34</b>;</li>        <li id="ul0026-0004" num="0133">a storage interface <b>35</b>;</li>        <li id="ul0026-0005" num="0134">an I/O interface <b>36</b> for reception of data to transmit, from an application; and</li>        <li id="ul0026-0006" num="0135">a power supply, e.g. a battery.</li>    </ul>    </li></ul></p><p id="p-0094" num="0136">In accordance with an example, the power supply is external to the device. In each of mentioned memory, the word &#xab;register&#xbb; used in the specification may correspond to area of small capacity (some bits) or to very large area (e.g. a whole program or large amount of received or decoded data). The ROM <b>33</b> comprises at least a program and parameters. The ROM <b>33</b> may store algorithms and instructions to perform techniques in accordance with present principles. When switched on, the CPU <b>32</b> uploads the program in the RAM and executes the corresponding instructions.</p><p id="p-0095" num="0137">The RAM <b>34</b> comprises, in a register, the program executed by the CPU <b>32</b> and uploaded after switch-on of the device <b>30</b>, input data in a register, intermediate data in different states of the method in a register, and other variables used for the execution of the method in a register.</p><p id="p-0096" num="0138">The implementations described herein may be implemented in, for example, a method or a process, an apparatus, a computer program product, a data stream, or a signal. Even if only discussed in the context of a single form of implementation (for example, discussed only as a method or a device), the implementation of features discussed may also be implemented in other forms (for example a program). An apparatus may be implemented in, for example, appropriate hardware, software, and firmware. The methods may be implemented in, for example, an apparatus such as, for example, a processor, which refers to processing devices in general, including, for example, a computer, a microprocessor, an integrated circuit, or a programmable logic device. Processors also include communication devices, such as, for example, computers, cell phones, portable/personal digital assistants (&#x201c;PDAs&#x201d;), and other devices that facilitate communication of information between end-users.</p><p id="p-0097" num="0139">In accordance with examples, the device <b>30</b> is configured to implement a method described in relation with <figref idref="DRAWINGS">FIGS. <b>10</b> and <b>11</b></figref>, and belongs to a set comprising:<ul id="ul0027" list-style="none">    <li id="ul0027-0001" num="0000">    <ul id="ul0028" list-style="none">        <li id="ul0028-0001" num="0140">a mobile device;</li>        <li id="ul0028-0002" num="0141">a communication device;</li>        <li id="ul0028-0003" num="0142">a game device;</li>        <li id="ul0028-0004" num="0143">a tablet (or tablet computer);</li>        <li id="ul0028-0005" num="0144">a laptop;</li>        <li id="ul0028-0006" num="0145">a television;</li>        <li id="ul0028-0007" num="0146">a still picture camera;</li>        <li id="ul0028-0008" num="0147">a video camera;</li>        <li id="ul0028-0009" num="0148">an encoding chip;</li>        <li id="ul0028-0010" num="0149">a server (e.g. a broadcast server, a video-on-demand server or a web server).</li>    </ul>    </li></ul></p><p id="p-0098" num="0150"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example of an embodiment of the syntax of a stream when the data are transmitted over a packet-based transmission protocol. <figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example structure <b>4</b> of a data stream encoded for instance by the encoder discussed in relation with <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The structure consists in a container which organizes the stream in independent elements of syntax. The structure may comprise a header part <b>41</b> which is a set of data common to every syntax elements of the stream. For example, the header part comprises some of metadata about syntax elements, describing the nature and the role of each of them. The header part may also comprise a part of metadata <b>212</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, for instance the coordinates of a central point of view used for projecting points of a 3D scene onto frames <b>2111</b> and <b>2112</b>. The structure comprises a payload comprising an element of syntax <b>42</b> and at least one element of syntax <b>43</b>. Syntax element <b>42</b> comprises data representative of the color and depth frames. Images may have been compressed according to a video compression method.</p><p id="p-0099" num="0151">Element of syntax <b>43</b> is a part of the payload of the data stream and may comprise metadata about how frames of element of syntax <b>42</b> are encoded, for instance parameters used for projecting and packing points of a 3D scene onto frames. Such metadata may be associated with each frame of the video or to group of frames (also known as Group of Pictures (GoP) in video compression standards). According to the embodiment disclosed herein, the data stream representative of the reference view and the data streams representative of the atlases associated with the peripheral virtual cameras can be encoded according to the syntax structure illustrated on <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0100" num="0152"><figref idref="DRAWINGS">FIGS. <b>6</b><i>a </i>and <b>6</b><i>b </i></figref>show an illustrative example of a reference atlas <b>61</b> and peripheral atlases <b>62</b> and <b>63</b> comprising the texture information (e.g. RGB data or YUV data) of the points of a 3D scene, according to a non-limiting embodiment of the present principles. As explained in relation to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, an atlas is an image packing together patches, a patch being a picture obtained by projecting a part of the points of the 3D scene.</p><p id="p-0101" num="0153">In the example of <figref idref="DRAWINGS">FIG. <b>6</b><i>a</i></figref>, atlas <b>61</b> comprises the texture information of the points of the 3D scene that are visible from the reference point of view. This texture information may for example be obtained according to an equirectangular projection mapping, an equirectangular projection mapping being an example of spherical projection mapping.</p><p id="p-0102" num="0154">In the example of <figref idref="DRAWINGS">FIG. <b>6</b><i>b</i></figref>, atlases <b>62</b> and <b>63</b> comprises texture information of parts of the 3D scene that are complementary to the part visible from the reference point of view. This texture information may be obtained by removing from the 3D scene the points that are visible from the main viewpoint (the texture of which being stored in atlas <b>61</b>) and by projecting the remaining points according to the same point of view. Atlases <b>62</b> and <b>63</b> thus correspond to the color data of respectively peripheral virtual cameras in the video. According to the principle disclosed herein, the color and depth data of the peripheral virtual cameras in the video are encoded in separate bitstreams.</p><p id="p-0103" num="0155">The projection process may be reiterated iteratively to obtain at each time the hidden parts of the 3D scene. According to a variant, the second parts may be obtained by removing from the 3D scene the points that are visible from the point of view, for example a central point of view, (the texture of which being stored in the first part) and by projecting the remaining points according to a point of view different from the first point of view, for example from one or more second point of view of a space of view centred onto the central point of view (e.g. the viewing space of a 3DoF rendering).</p><p id="p-0104" num="0156"><figref idref="DRAWINGS">FIGS. <b>7</b><i>a </i>and <b>7</b><i>b </i></figref>shows an illustrative example of a reference atlas <b>71</b> and peripheral atlases <b>72</b> and <b>73</b> comprising the depth information of the 3D scene of <figref idref="DRAWINGS">FIGS. <b>6</b><i>a </i>and <b>6</b><i>b</i></figref>, according to a non-limiting embodiment of the present principles. Atlas <b>71</b> may be seen as the depth image corresponding to texture image <b>61</b> of <figref idref="DRAWINGS">FIG. <b>6</b><i>a</i></figref>, and atlases <b>72</b> and <b>73</b> may be seen as the depth image corresponding to texture image <b>62</b> and <b>63</b> respectively of <figref idref="DRAWINGS">FIG. <b>6</b></figref><i>b. </i></p><p id="p-0105" num="0157">Atlas <b>71</b> comprises the depth information of the points of the 3D scene that are visible from the central point of view. Atlas <b>71</b> may be obtained in a same way as atlas <b>61</b> but contains the depth information associated with the points of the 3D scene instead of the texture information.</p><p id="p-0106" num="0158">In the example of <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, atlases <b>72</b> and <b>73</b> comprise depth information of parts of the 3D scene that are complementary to the part visible from the reference point of view, and may be obtained in a same way as for the texture information.</p><p id="p-0107" num="0159">With regard to 6DoF rendering, the user may move the viewpoint everywhere in the scene. In this case, it is required to encode every point (depth and texture) of the scene as every point is potentially accessible by a user who can move his/her point of view. At the encoding stage, there is no means to know, a priori, from which point of view the user will observe the 3D scene.</p><p id="p-0108" num="0160">With regard to 3DoF+ rendering, the user may move the point of view within a limited space around a central point of view. This enables to experience parallax. Data representative of the part of the scene visible from any point of the space of view is to be encoded into the stream, including the data representative of the 3D scene visible according to the central point of view (i.e. first parts <b>61</b> and <b>71</b>). The size and shape of the space of view may for example be decided and determined at the encoding step and encoded in the bitstream. The decoder may obtain this information from the bitstream and the renderer limits the space of view to the space determined by the obtained information. According to another example, the renderer determines the space of view according to hardware constraints, for example in relation to capabilities of the sensor(s) that detects the movements of the user. In such a case, if, at the encoding phase, a point visible from a point within the space of view of the renderer has not been encoded in the bitstream, this point will not be rendered. According to a further example, data (e.g. texture and/or geometry) representative of every point of the 3D scene is encoded in the stream without considering the rendering space of view. To optimize the size of the stream, only a subset of the points of the scene may be encoded, for instance the subset of points that may be seen according to a rendering space of view.</p><p id="p-0109" num="0161"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an exemplary method for encoding a volumetric video according to an embodiment of the present disclosure. For instance, the encoding method is performed by the encoder disclosed in relation with <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0110" num="0162">In a step E<b>101</b>, at least one data stream representative of a reference view comprising color and depth reference data associated with a reference viewpoint in the volumetric video is encoded.</p><p id="p-0111" num="0000">In a step E<b>102</b>, at least one data stream representative of at least one atlas comprising color and depth data patches associated with at least one virtual camera corresponding to a viewpoint in the volumetric video is encoded. As discussed above, the color and depth data patches are generated with respect to depth and color reference data associated with the reference viewpoint in the volumetric video.</p><p id="p-0112" num="0163">In a step E<b>103</b>, a data stream representative of a file comprising information for selecting at least one atlas, according to a rendering viewpoint of the volumetric video is encoded.</p><p id="p-0113" num="0000">An exemplary structure STR of the encoded data streams is illustrated on <figref idref="DRAWINGS">FIG. <b>12</b></figref>. The structure of <figref idref="DRAWINGS">FIG. <b>12</b></figref> comprises the data stream representative of the file (Manifest) and a set of video data streams: H_a<sub>i</sub>, i=0,n. The data stream H_a<sub>0 </sub>corresponds to the data stream representative of the reference view, the data streams H_a<sub>1</sub>, . . . , H_a<sub>n </sub>correspond respectively to the data streams representative of the atlases, n being a number of peripheral virtual cameras in the volumetric video. It should be noted that according to an embodiment of the present disclosure, n can vary through the duration of the video.</p><p id="p-0114" num="0164">According to the present disclosure, for rendering a viewpoint of the volumetric video, a terminal will select the data streams among the plurality of data streams depending on its capacities, on the transmission bandwidth, etc. . . . using the information embedded in the Manifest.</p><p id="p-0115" num="0165">Such a manifest describes the parameters required to manage the steps of the video transfer to the terminal. It includes in particular, among other information which are not described here as they are not specific to the implementation of the present principle:<ul id="ul0029" list-style="none">    <li id="ul0029-0001" num="0000">    <ul id="ul0030" list-style="none">        <li id="ul0030-0001" num="0166">The list of reference viewpoints V<sub>i,0 </sub>and their coordinates (x<sub>i</sub>,y<sub>i</sub>,z<sub>i</sub>) in a global 3D cartesian coordinates system, each reference viewpoint V<sub>i,0 </sub>being associated to a so-called 3DoF+ cell C<sub>i</sub>;</li>        <li id="ul0030-0002" num="0167">The information to manage properly, during the video content duration, all parameters that are related to the adaptive load of the parallax which is an object of the principle presented herein. These parameters are called in the following &#x201c;adaptive parallax parameters&#x201d;.</li>    </ul>    </li></ul></p><p id="p-0116" num="0168">These adaptive parallax parameters can be:<ul id="ul0031" list-style="none">    <li id="ul0031-0001" num="0000">    <ul id="ul0032" list-style="none">        <li id="ul0032-0001" num="0169">The number of side virtual cameras in a cell, associated to color+depth atlases generated in reference to the reference viewpoint V<sub>i,0 </sub>of the cell, which can be requested independently from each other by the terminal;</li>        <li id="ul0032-0002" num="0170">For each such side virtual camera:        <ul id="ul0033" list-style="none">            <li id="ul0033-0001" num="0171">the coordinates of the corresponding viewpoint V<sub>i,j</sub>;</li>            <li id="ul0033-0002" num="0172">the parameters that characterize the projection operated for this peripheral viewpoint V<sub>i,j</sub>: orientation, field of view (FoV/theta, phi), projection method applied to project on 2D textures (ERP, EDP, orthogonal, pinhole, . . . );</li>            <li id="ul0033-0003" num="0173">a parameter quantifying the size (in bytes) or the requested bit rate (in bps) for transmission of the color+depth atlas A<sub>i,j </sub>associated to this virtual camera;</li>            <li id="ul0033-0004" num="0174">possibly a list of one or several zones of main interest for which parallax is best improved with the transmission of the corresponding atlas A<sub>i,j</sub>; each zone of interest can be characterized by a (several) parameter(s) describing its location in the global 3D space, such as its mean depth, its depth range, its vertical and/or horizontal angular sector, . . .</li>            <li id="ul0033-0005" num="0175">. . .</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0117" num="0176">Also, for allowing the downloading of encoded data streams representative of an atlas associated with a reference viewpoint or a virtual camera, the adaptive parallax parameters comprise a uniform resource identifier for each one of the available data stream.</p><p id="p-0118" num="0177">According to an embodiment of the present disclosure, information for managing the &#x201c;adaptive parallax parameters&#x201d; can be included in the manifest. Such information could include:<ul id="ul0034" list-style="none">    <li id="ul0034-0001" num="0000">    <ul id="ul0035" list-style="none">        <li id="ul0035-0001" num="0178">The list and values of parameters that remain unchanged for the full duration of the video content;</li>        <li id="ul0035-0002" num="0179">For the parameters that may change in the course of the video content: a description of the time when each such parameter can change, in a format which makes reference to the temporal organization of the video content itself; for instance, the number and/or the location of the so-called side virtual cameras may change at every GoP or at every intra-period of a GoP (half GoP, third of a GoP, . . . ).</li>    </ul>    </li></ul></p><p id="p-0119" num="0180">The adaptive parallax parameters can be changed in the course of the video content.</p><p id="p-0120" num="0181">Therefore, according to an embodiment of the present disclosure, in a step E<b>104</b> of the encoding method, the file &#x201c;Manifest&#x201d; is updated and sent to the terminal. The file is updated with data that comprises at least one value for updating at least one of the adaptative parallax parameters that have changed in the course of the video content.</p><p id="p-0121" num="0182">According to an embodiment of the present disclosure, the manifest file is stored on a video content transfer server, optionally with the video data streams.</p><p id="p-0122" num="0183"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates an exemplary method for decoding a volumetric video according to an embodiment of the present disclosure. For instance, the decoding method is performed by the decoder discussed in relation with <figref idref="DRAWINGS">FIG. <b>2</b></figref> or more generally by the player of a terminal.</p><p id="p-0123" num="0184">In adaptive streaming systems, the terminal must regularly request from the server the next files transporting the data it needs to render and play a new temporal segment of the content.</p><p id="p-0124" num="0185">In a step E<b>111</b>, the terminal receives a data stream representative of a manifest file as discussed above. Such a file comprises information for selecting, according to a rendering viewpoint, at least one atlas comprising color and depth data patches associated with a viewpoint in the volumetric video, said color and depth data patches being generated with respect to depth and color reference data acquired from a reference viewpoint in the volumetric video.</p><p id="p-0125" num="0186">According to an embodiment of the present disclosure, the received signaling information comprises a list of all alternative versions of the video representations for a given temporal segment, and the uniform resource identifiers (URIs) of the corresponding data streams.</p><p id="p-0126" num="0187">According to the present disclosure, there will be different data streams, for each 3DoF+ cell C<sub>i</sub>, allowing to select different color+depth atlases A<sub>i,j </sub>to be requested in addition to the atlas A<sub>i,0 </sub>associated to the central reference viewpoint Vo.</p><p id="p-0127" num="0188">Additionally, according to an embodiment of the present disclosure, there may be also a plurality of quality levels for all atlases, corresponding to a plurality of bit rates, to offer more flexibility in adapting both the image quality level and the immersion (parallax) quality level to the network bandwidth available. According to this embodiment, the adaptative parallax parameters of the manifest file comprise, for at least one of the virtual cameras and/or the reference viewpoint, a plurality of uniform resource identifiers, each one of said uniform resource identifiers being associated to a bit-rate level.</p><p id="p-0128" num="0189">During the rendering of the volumetric video, the terminal constantly tracks user information (user position in the scene, user acceleration) from which it can predict a new viewpoint for the next temporal segment.</p><p id="p-0129" num="0190">In a step E<b>112</b>, the terminal selects at least one atlas for rendering the new viewpoint for the next temporal segment using the information of the manifest. It is to be noted that the terminal here selects only the atlases associated to peripheral virtual cameras, as the reference data is always needed for rendering a viewpoint of the volumetric video.</p><p id="p-0130" num="0191">According to an embodiment of the present disclosure, such a selecting step comprises determining a network bandwidth available for requesting a next temporal segment of the volumetric video. Then, the terminal determines, according to the information comprised in the file and according to the network bandwidth, a reference view and at least one atlas associated with a viewpoint corresponding to a virtual camera for rendering the next temporal segment of the volumetric video. The terminal takes into account the available network bandwidth to select a maximum number of available peripheral atlases.</p><p id="p-0131" num="0192">When running its algorithm to select the next video representation that it will request from the server for the predicted viewpoint, the terminal is able to compute an estimate of the network bandwidth that is currently available for that purpose. It knows from the signaling received from the server the bandwidth necessary for the delivery of the reference atlas and of each additional color+depth atlas A<sub>ij</sub>. From that, it can estimate which possible combinations of central reference atlas A<sub>i0 </sub>and additional atlases A<sub>ij </sub>it can afford with the available bandwidth, and it will select among them the combination it will request the server to deliver, based on various strategies it may implement.</p><p id="p-0132" num="0193">According to an embodiment of the present disclosure, for determining a reference view and at least one atlas associated with a viewpoint, the terminal can predict one or more future possible rendering viewpoint(s), for instance according to the user's behavior in the volumetric video.</p><p id="p-0133" num="0194">Such an embodiment takes into account the anticipated position of the viewpoint versus the reference viewpoint V<sub>i,0</sub>, to prioritize atlases corresponding to the virtual cameras best located to provide parallax for the center of the viewpoint. In this case, the terminal selects the main central reference camera for V<sub>i,0</sub>, plus all virtual cameras at viewpoints V<sub>i,j </sub>that include parallax information for the anticipated viewpoint, and unselects cameras of the previous viewpoint irrelevant for this new viewpoint. This process of unselecting and selecting new cameras is illustrated in <figref idref="DRAWINGS">FIG. <b>13</b></figref>. <figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates the adaptive selection of virtual cameras with a 3DoF+ cell C<sub>i </sub>by the terminal at time t and t+1 of the video content. <figref idref="DRAWINGS">FIG. <b>13</b>(<i>a</i>)</figref> illustrates the selection of virtual cameras at viewpoints V<sub>i,0</sub>, V<sub>i,1</sub>, V<sub>i,2 </sub>for a temporal segment at t=1. <figref idref="DRAWINGS">FIG. <b>13</b>(<i>b</i>)</figref> illustrates the un-selection of virtual camera V<sub>i,1 </sub>and the selection of virtual cameras at viewpoints V<sub>i,0</sub>, V<sub>i,2</sub>, V<sub>i,3 </sub>for the next temporal segment at t=1+1.</p><p id="p-0134" num="0195">Circled grey crosses represent the central camera (V<sub>i,0</sub>). Grey crosses represent viewpoints corresponding to selected virtual cameras and dashed crosses represent viewpoints corresponding to unselected virtual cameras. It can be seen that from t to t+1, taking into account the user's navigation behavior (user's position is illustrated by the grey point) on the volumetric video allows for the next temporal segment t+1 to select the virtual camera V<sub>i,3 </sub>and unselect the virtual camera V<sub>i,1</sub>.</p><p id="p-0135" num="0196">According to a variant, for determining a reference view and at least one atlas associated with a viewpoint, the terminal can determine regions of interest for which parallax is improved with a transmission of a corresponding atlas. In this variant, the terminal privileges the quality of the rendering of a viewpoint. This embodiment takes into account the regions of interests best processed, in terms of parallax, by the additional atlases A<sub>ij </sub>(for instance by prioritizing the regions of interest from the closest, in terms of depth, to the most remote).</p><p id="p-0136" num="0197">When the terminal has selected the atlases, in a step E<b>113</b>, the terminal requests to a content server, the corresponding data streams, using information comprised in the manifest file. More particularly, the terminal requests the data stream representative of the reference view, and the one or more data streams of the selected atlases.</p><p id="p-0137" num="0198">In a step E<b>114</b>, the terminal decodes the received data streams for rendering the viewpoint to a user.</p><p id="p-0138" num="0199">According to an embodiment of the present disclosure, some of the &#x201c;adaptive parallax parameters&#x201d; can change in the course of the video content. For instance, the number of side virtual cameras in a 3DOF+ cell C<sub>i </sub>can change.</p><p id="p-0139" num="0200">According to an embodiment of the present disclosure, in a step E<b>115</b>, the terminal receives a data stream representative of updating data of the manifest file, which comprises at least one value for updating at least one of the adaptative parallax parameters that may change. This updating data comprises the list and values of the parameters that change. The terminal then updates accordingly its internal records, in order to take these changes into account when running its algorithms to select the color+depth atlas A<sub>ij </sub>associated to side virtual cameras that it will request from the server.</p><p id="p-0140" num="0201">This updated data can be transmitted according to various schemes:<ul id="ul0036" list-style="none">    <li id="ul0036-0001" num="0000">    <ul id="ul0037" list-style="none">        <li id="ul0037-0001" num="0202">It can be embedded as meta-data transported with the content itself. This in turn may be realized in different ways, such as embedding within a video stream itself, or using a dedicated track component.</li>        <li id="ul0037-0002" num="0203">It can be pushed by the server to all terminals. This requires that some dedicated transmission channel be opened by each terminal playing the content to receive pushed updates of &#x201c;adaptive parallax parameters&#x201d;.</li>        <li id="ul0037-0003" num="0204">Some event system can be implemented so that the server just sends a &#x201c;heads up&#x201d; indication to all terminals when an update is available. It is then the responsibility of each terminal to react to this indication and request the current &#x201c;adaptive parallax parameters&#x201d; from the server, for example through a simple HTTP GET on an XML, or JSON document.</li>    </ul>    </li></ul></p><p id="p-0141" num="0205">These options are not mutually exclusive, and a deployed system may support one or several of them, as the use of any allows to signal the same information.</p><p id="p-0142" num="0206">The choice among these options (or other non-described options) may be guided by performance considerations, limitations of the streaming system used or the need that all clients take the changes into account or not.</p><p id="p-0143" num="0207">The implementations described herein may be implemented in, for example, a method or a process, an apparatus, a computer program product, a data stream, or a signal. Even if only discussed in the context of a single form of implementation (for example, discussed only as a method or a device), the implementation of features discussed may also be implemented in other forms (for example a program). An apparatus may be implemented in, for example, appropriate hardware, software, and firmware. The methods may be implemented in, for example, an apparatus such as, for example, a processor, which refers to processing devices in general, including, for example, a computer, a microprocessor, an integrated circuit, or a programmable logic device. Processors also include communication devices, such as, for example, Smartphones, tablets, computers, mobile phones, portable/personal digital assistants (&#x201c;PDAs&#x201d;), Television, HMD, and other devices that facilitate communication of information between end-users.</p><p id="p-0144" num="0208">Implementations of the various processes and features described herein may be embodied in a variety of different equipment or applications, particularly, for example, equipment or applications associated with data encoding, data decoding, view generation, texture processing, and other processing of images and related texture information and/or depth information. Examples of such equipment include an encoder, a decoder, a post-processor processing output from a decoder, a pre-processor providing input to an encoder, a video coder, a video decoder, a video codec, a web server, a set-top box, a laptop, a personal computer, a cell phone, a PDA, a Television, an HMD and other communication devices. As should be clear, the equipment may be mobile and even installed in a mobile vehicle.</p><p id="p-0145" num="0209">Additionally, the methods may be implemented by instructions being performed by a processor, and such instructions (and/or data values produced by an implementation) may be stored on a processor-readable medium such as, for example, an integrated circuit, a software carrier or other storage device such as, for example, a hard disk, a compact diskette (&#x201c;CD&#x201d;), an optical disc (such as, for example, a DVD, often referred to as a digital versatile disc or a digital video disc), a random access memory (&#x201c;RAM&#x201d;), or a read-only memory (&#x201c;ROM&#x201d;). The instructions may form an application program tangibly embodied on a processor-readable medium. Instructions may be, for example, in hardware, firmware, software, or a combination. Instructions may be found in, for example, an operating system, a separate application, or a combination of the two. A processor may be characterized, therefore, as, for example, both a device configured to carry out a process and a device that includes a processor-readable medium (such as a storage device) having instructions for carrying out a process. Further, a processor-readable medium may store, in addition to or in lieu of instructions, data values produced by an implementation.</p><p id="p-0146" num="0210">As will be evident to one of skill in the art, implementations may produce a variety of signals formatted to carry information that may be, for example, stored or transmitted. The information may include, for example, instructions for performing a method, or data produced by one of the described implementations. For example, a signal may be formatted to carry as data the rules for writing or reading the syntax of a described embodiment, or to carry as data the actual syntax-values written by a described embodiment. Such a signal may be formatted, for example, as an electromagnetic wave (for example, using a radio frequency portion of spectrum) or as a baseband signal. The formatting may include, for example, encoding a data stream and modulating a carrier with the encoded data stream. The information that the signal carries may be, for example, analog or digital information. The signal may be transmitted over a variety of different wired or wireless links, as is known. The signal may be stored on a processor-readable medium.</p><p id="p-0147" num="0211">A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made. For example, elements of different implementations may be combined, supplemented, modified, or removed to produce other implementations. Additionally, one of ordinary skill will understand that other structures and processes may be substituted for those disclosed and the resulting implementations will perform at least substantially the same function(s), in at least substantially the same way(s), to achieve at least substantially the same result(s) as the implementations disclosed. Accordingly, these and other implementations are contemplated by this application.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for decoding a volumetric video, the method comprising:<claim-text>receiving a data stream representative of information for selecting, according to a rendering viewpoint, at least one atlas comprising color and depth data patches associated with a viewpoint in said volumetric video, said color and depth data patches being generated with respect to depth and color reference data acquired from a reference viewpoint in said volumetric video.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>requesting from a server, using said information:<claim-text>at least one data stream representative of a reference view comprising said color and depth reference data, and</claim-text><claim-text>at least one data stream representative of at least one selected atlas, and</claim-text></claim-text><claim-text>decoding said at least one data stream representative of said reference view and said at least one data stream representative of said at least one selected atlas.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein selecting the at least one atlas according to a rendering viewpoint of said volumetric video, comprises:<claim-text>determining a network bandwidth available for requesting a next temporal segment of said volumetric video; and</claim-text><claim-text>determining, according to said information and according to said network bandwidth, a reference view and the at least one atlas associated with a viewpoint corresponding to a virtual camera for rendering said next temporal segment of said volumetric video.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein selecting the at least one atlas according to a rendering viewpoint of said volumetric video uses at least one of:<claim-text>predicting at least one future rendering viewpoint, and</claim-text><claim-text>determining regions of interest for which parallax is improved with a transmission of a corresponding atlas.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. A method for encoding a volumetric video, comprising:<claim-text>encoding at least one data stream representative of at least one reference view comprising color and depth reference data acquired from a reference viewpoint in the volumetric video;</claim-text><claim-text>encoding at least one data stream representative of at least one atlas comprising color and depth data patches acquired from a viewpoint in said volumetric video, said color and depth data patches being generated with respect to depth and color reference data; and</claim-text><claim-text>encoding a data stream comprising information for selecting the at least one atlas, according to a rendering viewpoint in said volumetric video.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A data stream comprising information for selecting, according to rendering viewpoint of a volumetric video, at least one atlas comprising color and depth data patches acquired from a viewpoint in said volumetric video, said color and depth data patches being generated with respect to depth and color reference data acquired from a reference viewpoint in said volumetric video.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said information comprises a list of adaptive parallax parameters comprising:<claim-text>a list of reference viewpoints comprising at least one reference viewpoint, and for each of said reference viewpoints:<claim-text>associated coordinates of said at least one reference viewpoint in a volumetric cartesian coordinates system, and</claim-text><claim-text>at least one uniform resource identifier allowing to download an encoded data stream representative of an atlas associated with said reference viewpoint;</claim-text></claim-text><claim-text>for each of said reference viewpoints in the list, a number of virtual cameras, each of said virtual cameras corresponding to a viewpoint in said volumetric video; and</claim-text><claim-text>for each of said virtual cameras:<claim-text>associated coordinates of said viewpoint corresponding to said virtual camera in said 3D cartesian coordinates system, and</claim-text><claim-text>at least one uniform resource identifier allowing to download an encoded data stream representative of an atlas associated with said virtual camera.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein said adaptive parallax parameters further comprise at least one parameter belonging to the group:<claim-text>a parameter quantifying a size of said encoded data stream representative of an atlas associated with a virtual camera or a reference viewpoint;</claim-text><claim-text>a group of parameters defining a projection associated with a virtual camera to be used for 2D to 3D conversion; and</claim-text><claim-text>a list of at least one zone of interest for which parallax is improved with a transmission of a corresponding atlas.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein said information further comprises for at least one of said adaptive parallax parameters, an indication of a time when said at least one adaptive parallax parameter may change during rendering of said volumetric video.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein said at least one adaptative parallax parameter which may change corresponds to the number of virtual cameras associated to a reference viewpoint.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein said adaptative parallax parameters comprises, for at least one of said virtual cameras and/or one of said at least reference viewpoint, a plurality of uniform resource identifiers, each of said uniform resource identifiers being associated to a bit-rate level.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method according <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:<claim-text>receiving a data stream representative of updating the information, wherein said updating the information comprises at least one value for updating at least one of said adaptative parallax parameters.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. An apparatus for decoding a volumetric video, comprising:<claim-text>means for receiving a data stream comprising information for selecting, according to a rendering viewpoint, at least one atlas comprising color and depth data patches acquired from a viewpoint in said volumetric video, said color and depth data patches being generated with respect to depth and color reference data acquired from a reference viewpoint in said volumetric video.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. An apparatus for encoding a volumetric video, comprising:<claim-text>means for encoding at least one data stream representative of at least one reference view comprising color and depth reference data acquired from a reference viewpoint in said volumetric video;</claim-text><claim-text>means for encoding at least one data stream representative of at least one atlas comprising color and depth data patches acquired from a viewpoint in said volumetric video, said color and depth data patches being generated with respect to depth and color reference data acquired from said reference viewpoint in said volumetric video; and</claim-text><claim-text>means for encoding a data stream comprising information for selecting at least one atlas, according to a rendering viewpoint of said volumetric video.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. (canceled)</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>means for requesting from a server, using said information:<claim-text>at least one data stream representative of a reference view comprising said color and depth reference data, and</claim-text><claim-text>at least one data stream representative of at least one selected atlas; and</claim-text></claim-text><claim-text>means for decoding said at least one data stream representative of said reference view and said at least one data stream representative of said at least one selected atlas.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The data stream according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein said information comprises a list of adaptive parallax parameters comprising:<claim-text>a list of reference viewpoints comprising at least one reference viewpoint, and for each of said reference viewpoints:<claim-text>associated coordinates of said at least one reference viewpoint in a volumetric cartesian coordinates system, and</claim-text><claim-text>at least one uniform resource identifier allowing to download an encoded data stream representative of an atlas associated with said reference viewpoint,</claim-text></claim-text><claim-text>for each of said reference viewpoints in the list, a number of virtual cameras, each of said virtual cameras corresponding to a viewpoint in said volumetric video; and</claim-text><claim-text>for each of said virtual cameras:<claim-text>associated coordinates of said viewpoint corresponding to said virtual camera in said 3D cartesian coordinates system, and</claim-text><claim-text>at least one uniform resource identifier allowing to download an encoded data stream representative of an atlas associated with said virtual camera.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The data stream according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein said adaptive parallax parameters further comprise at least one parameter belonging to the group:<claim-text>a parameter quantifying a size of said encoded data stream representative of an atlas associated with a virtual camera or a reference viewpoint;</claim-text><claim-text>a group of parameters defining a projection associated with a virtual camera to be used for 2D to 3D conversion; and</claim-text><claim-text>a list of at least one zone of interest for which parallax is improved with a transmission of a corresponding atlas.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The data stream according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein said information further comprises for at least one of said adaptive parallax parameters, an indication of a time when said at least one adaptive parallax parameter may change during rendering of said volumetric video.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The data stream according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein said at least one adaptative parallax parameter which may change corresponds to the number of virtual cameras associated to a reference viewpoint.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The data stream according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein said adaptative parallax parameters comprises, for at least one of said virtual cameras and/or one of said at least reference viewpoint, a plurality of uniform resource identifiers, each said uniform resource identifiers being associated to a bit-rate level.</claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said information comprises a list of adaptive parallax parameters comprising:<claim-text>a list of reference viewpoints comprising at least one reference viewpoint, and for each of said reference viewpoints:<claim-text>associated coordinates of said at least one reference viewpoint in a volumetric cartesian coordinates system, and</claim-text><claim-text>at least one uniform resource identifier allowing to download an encoded data stream representative of an atlas associated with said reference viewpoint;</claim-text></claim-text><claim-text>for each of said reference viewpoints in the list, a number of virtual cameras, each of said virtual cameras corresponding to a viewpoint in said volumetric video; and</claim-text><claim-text>for each of said virtual cameras:<claim-text>associated coordinates of said viewpoint corresponding to said virtual camera in said 3D cartesian coordinates system, and</claim-text><claim-text>at least one uniform resource identifier allowing to download an encoded data stream representative of an atlas associated with said virtual camera.</claim-text></claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The method according to <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein said adaptive parallax parameters further comprise at least one parameter belonging to the group:<claim-text>a parameter quantifying a size of said encoded data stream representative of an atlas associated with a virtual camera or a reference viewpoint;</claim-text><claim-text>a group of parameters defining a projection associated with a virtual camera to be used for 2D to 3D conversion; and</claim-text><claim-text>a list of at least one zone of interest for which parallax is improved with a transmission of a corresponding atlas.</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method according to <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein said information further comprises for at least one of said adaptive parallax parameters, an indication of a time when said at least one adaptive parallax parameter may change during rendering of said volumetric video.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The method according to <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein said at least one adaptative parallax parameter which may change corresponds to the number of virtual cameras associated to a reference viewpoint.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The method according to <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein said adaptative parallax parameters comprises, for at least one of said virtual cameras and/or one of said at least reference viewpoint, a plurality of uniform resource identifiers, each of said uniform resource identifiers being associated to a bit-rate level.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The method for decoding a volumetric video according <claim-ref idref="CLM-00022">claim 22</claim-ref>, further comprising receiving a data stream representative of updating information, wherein said updating information comprises at least one value for updating at least one of said adaptative parallax parameters.</claim-text></claim></claims></us-patent-application>