<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004680A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004680</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17738524</doc-number><date>20220506</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>KR</country><doc-number>10-2021-0086012</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>57</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>572</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2221</main-group><subgroup>033</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">APPARATUS AND METHOD FOR VERIFYING INTEGRITY OF HARDWARE BOARD</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>ELECTRONICS AND TELECOMMUNICATIONS RESEARCH INSTITUTE</orgname><address><city>Daejeon</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Yong-Je</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Dae-Won</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LEE</last-name><first-name>Sang-Su</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Byeong-Cheol</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>KANG</last-name><first-name>Dong-Wook</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Ik-Kyun</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Yang-Seo</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>ELECTRONICS AND TELECOMMUNICATIONS RESEARCH INSTITUTE</orgname><role>03</role><address><city>Daejeon</city><country>KR</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Disclosed herein are an apparatus and method for verifying the integrity of a hardware board. The apparatus includes one or more processors and execution memory for storing at least one program that is executed by the processors, wherein the program is configured to compare images of components arranged on a verification target board and a source board in a first image, obtained by photographing the verification target board, and in a second image prestored for the source board, as to whether images of the components are identical to each other, and compare first firmware extracted from the verification target board with second firmware of the source board, as to whether first firmware is identical to second firmware and verify integrity of the verification target board based on whether the images are identical to each other and on whether the pieces of firmware are identical to each other.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="89.15mm" wi="77.39mm" file="US20230004680A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="103.38mm" wi="79.42mm" file="US20230004680A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="199.14mm" wi="131.49mm" file="US20230004680A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="211.84mm" wi="143.26mm" file="US20230004680A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="90.42mm" wi="125.90mm" file="US20230004680A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="210.48mm" wi="139.70mm" file="US20230004680A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="198.71mm" wi="149.10mm" file="US20230004680A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="122.51mm" wi="109.56mm" file="US20230004680A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="139.19mm" wi="134.62mm" file="US20230004680A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims the benefit of Korean Patent Application No. 10-2021-0086012, filed Jun. 30, 2021, which is hereby incorporated by reference in its entirety into this application.</p><heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading><heading id="h-0003" level="1">1. Technical Field</heading><p id="p-0003" num="0002">The present invention relates generally to hardware security technology, and more particularly to technology for verifying board integrity.</p><heading id="h-0004" level="1">2. Description of the Related Art</heading><p id="p-0004" num="0003">The development of Information Technology (IT) attributable to the information-oriented age causes changes not only in the daily lives of users, but also in industrial ecosystems. As a result, most manufacturers have configured and utilized various types of hardware or software throughout an entire process from the design of products to production, sales, and maintenance of products. The term &#x201c;supply chain&#x201d; means a set of individual enterprises that supply all parts and services required for production, distribution and maintenance of products for sale.</p><p id="p-0005" num="0004">Here, hardware and software that are used are supplied to enterprises through a manufacturing and distribution process. During such a supply process, the hardware and software may be exposed to various types of security threats such as hacking, and thus the urgent need to ensure the security of a supply chain has recently arisen. In particular, because it is very difficult to analyze and detect backdoor attacks based on hardware, the incidence of backdoor attacks has gradually increased, and various real-world security incidents related to such backdoor attacks have been reported.</p><p id="p-0006" num="0005">Meanwhile, Korean Patent Application Publication No. 10-2007-0040896 entitled &#x201c;Method of system authentication and security enforcement using self-integrity checking based on tamper-proof H/W&#x201d; discloses a method for generating a security-strengthening module which guarantees a secure computing environment and for strengthening the security of the security-strengthening module using tamper-proof hardware (H/W) by securing the integrity of a security program or the like installed to strengthen the security of a booting process and the system.</p><heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0007" num="0006">Accordingly, the present invention has been made keeping in mind the above problems occurring in the prior art, and an object of the present invention is to verify the integrity of a hardware board of a supply chain.</p><p id="p-0008" num="0007">Another object of the present invention is to detect malicious modification when a board is modified with malicious intent.</p><p id="p-0009" num="0008">A further object of the present invention is to verify integrity in a board environment in which it is difficult to extract firmware.</p><p id="p-0010" num="0009">In accordance with an aspect of the present invention to accomplish the above objects, there is provided an apparatus for verifying integrity of a hardware board, including one or more processors, and execution memory for storing at least one program that is executed by the one or more processors, wherein the at least one program is configured to compare images of components arranged on a verification target board and a source board with each other in a first image, obtained by photographing the verification target board, and in a second image prestored for the source board, as to whether the images of the components are identical to each other, and compare first firmware extracted from the verification target board with second firmware of the source board, as to whether the first firmware is identical to the second firmware and verify the integrity of the verification target board based on whether the images are identical to each other and on whether the pieces of firmware are identical to each other.</p><p id="p-0011" num="0010">The at least one program may be configured to normalize the first image and the second image into an identical shape with respect to board sizes and board directions of the first and second images.</p><p id="p-0012" num="0011">The at least one program may be configured to compare pieces of data that are extracted through a hash operation and an unpack operation by the first firmware and the second firmware.</p><p id="p-0013" num="0012">The unpack operation may be configured to separate a bootloader, a kernel, and an operating system, as respective pieces of data, from corresponding firmware and to decompress compressed data.</p><p id="p-0014" num="0013">The at least one program may be configured to extract the first firmware using a micro-probe when the verification target board is in a state in which a memory interface is unavailable and a memory pin is exposed outside.</p><p id="p-0015" num="0014">The at least one program may be configured to extract the first firmware by causing a memory reader to directly access a memory chip removed from the verification target board when the verification target board is in a state in which a memory interface is unavailable in and a memory pin is not exposed outside.</p><p id="p-0016" num="0015">In accordance with another aspect of the present invention to accomplish the above objects, there is provided a method for verifying integrity of a hardware board, the method being performed by an apparatus for verifying the integrity of the hardware board, the method including comparing images of components arranged on a verification target board and a source board with each other in a first image, obtained by photographing the verification target board, and in a second image prestored for the source board, as to whether the images of the components are identical to each other; comparing first firmware extracted from the verification target board with second firmware of the source board, as to whether the first firmware is identical to the second firmware; and verifying the integrity of the verification target board based on whether the images are identical to each other and on whether the pieces of firmware are identical to each other.</p><p id="p-0017" num="0016">Comparing the images of the components may include normalizing the first image and the second image into an identical shape with respect to board sizes and board directions of the first and second images.</p><p id="p-0018" num="0017">Comparing the first firmware extracted from the verification target board with the second firmware of the source board may include comparing pieces of data that are extracted through a hash operation and an unpack operation by the first firmware and the second firmware.</p><p id="p-0019" num="0018">The unpack operation may be configured to separate a bootloader, a kernel, and an operating system, as respective pieces of data, from corresponding firmware and to decompress compressed data.</p><p id="p-0020" num="0019">Comparing the first firmware extracted from the verification target board with the second firmware of the source board may further include extracting the first firmware using a micro-probe when the verification target board is in a state in which a memory interface is unavailable and a memory pin is exposed outside.</p><p id="p-0021" num="0020">Comparing the first firmware extracted from the verification target board with the second firmware of the source board may further include extracting the first firmware by causing a memory reader to directly access a memory chip removed from the verification target board when the verification target board is in a state in which a memory interface is unavailable in and a memory pin is not exposed outside.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0022" num="0021">The above and other objects, features and advantages of the present invention will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings, in which:</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an operation flowchart illustrating a method for verifying the integrity of a hardware board according to an embodiment of the present invention;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is an operation flowchart illustrating in detail an example of the board hardware image checking step illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref> are diagrams illustrating a board image normalization process according to an embodiment of the present invention;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating component images for which image-checking results for hardware boards are determined to be inconsistent according to an embodiment of the present invention;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an operation flowchart illustrating in detail an example of the board firmware checking step illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is an operation flowchart illustrating in detail an example of the step of extracting firmware from a verification target board, illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating a process of extracting firmware from a verification target board according to an embodiment of the present invention; and</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating a computer system according to an embodiment of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading><p id="p-0031" num="0030">The present invention will be described in detail below with reference to the accompanying drawings. Repeated descriptions and descriptions of known functions and configurations which have been deemed to make the gist of the present invention unnecessarily obscure will be omitted below. The embodiments of the present invention are intended to fully describe the present invention to a person having ordinary knowledge in the art to which the present invention pertains. Accordingly, the shapes, sizes, etc. of components in the drawings may be exaggerated to make the description clearer.</p><p id="p-0032" num="0031">In the present specification, it should be understood that terms such as &#x201c;include&#x201d; or &#x201c;have&#x201d; are merely intended to indicate that features, numbers, steps, operations, components, parts, or combinations thereof are present, and are not intended to exclude the possibility that one or more other features, numbers, steps, operations, components, parts, or combinations thereof will be present or added.</p><p id="p-0033" num="0032">Hereinafter, preferred embodiments of the present invention will be described in detail with reference to the attached drawings.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an operation flowchart illustrating a method for verifying the integrity of a hardware board according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. <b>2</b></figref> is an operation flowchart illustrating in detail an example of the board hardware image checking step illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref> are diagrams illustrating a board image normalization process according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating a component image for which image-checking results for a hardware board are determined to be inconsistent according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. <b>6</b></figref> is an operation flowchart illustrating in detail an example of the board firmware checking step illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. <figref idref="DRAWINGS">FIG. <b>7</b></figref> is an operation flowchart illustrating in detail an example of the step of extracting firmware from a verification target board, illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0035" num="0034">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the method for verifying the integrity of a hardware board according to the embodiment of the present invention may perform a board hardware image check at step S<b>110</b>.</p><p id="p-0036" num="0035">That is, at step S<b>110</b>, in a first image obtained by photographing a verification target board and in a second image prestored for a source board, images of components arranged on the boards are compared with each other, as to whether the images of the components are identical to each other.</p><p id="p-0037" num="0036">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in a procedure at step S<b>110</b>, the board images may be received at step S<b>210</b>.</p><p id="p-0038" num="0037">That is, at step S<b>210</b>, the first image obtained by photographing the verification target board and the second image prestored for the source board may be received.</p><p id="p-0039" num="0038">Also, in the procedure at step S<b>110</b>, the board images may be normalized at step S<b>220</b>.</p><p id="p-0040" num="0039">In detail, at step S<b>220</b>, the first image and the second image may be normalized into shapes having the same board size and the same board direction.</p><p id="p-0041" num="0040">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, at step S<b>220</b>, a normalization process of checking board areas of the first image and the second image and making the first image and the second image into rectangular images having the same size is illustrated.</p><p id="p-0042" num="0041">Here, it can be seen that the images of a source board <b>10</b> and a verification target board <b>20</b> are normalized to be arranged in the same direction through the normalization process.</p><p id="p-0043" num="0042">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, when the verification target board <b>20</b> is rotated or shifted in a specific direction, the verification target board <b>20</b> may be normalized such that it is arranged in the same direction as the source board <b>10</b> through the normalization process.</p><p id="p-0044" num="0043">Also, in the procedure at step S<b>110</b>, components may be extracted at step S<b>230</b>.</p><p id="p-0045" num="0044">That is, at step S<b>230</b>, the components on the verification target board and the components on the source board may be extracted from the normalized first and second images, respectively.</p><p id="p-0046" num="0045">Further, in the procedure at step S<b>110</b>, the components may be compared with each other at step S<b>240</b>.</p><p id="p-0047" num="0046">That is, at step S<b>240</b>, in the normalized first image and the normalized second image, the components on the verification target board may be compared with the components on the source board, as to whether the components are identical to each other.</p><p id="p-0048" num="0047">Also, in the procedure at step S<b>110</b>, whether the components are identical to each other may be determined at step S<b>250</b>.</p><p id="p-0049" num="0048">That is, at step S<b>250</b>, when an extracted component on the verification target board is not identical to the corresponding component on the source board, it may be determined that the corresponding component is a component suspected to have been modified, and the results of the determination may be reported at step S<b>260</b>. On the other hand, when the extracted components are identical to each other, the results of the determination may be reported at step S<b>270</b>.</p><p id="p-0050" num="0049">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, component images <b>30</b> for which image-checking results for hardware boards are determined to be inconsistent are shown.</p><p id="p-0051" num="0050">Next, the method for verifying the integrity of a hardware board according to the embodiment of the present invention may perform a board firmware check at step S<b>120</b>.</p><p id="p-0052" num="0051">That is, at step S<b>120</b>, first firmware extracted from the verification target board may be compared with second firmware of the source board, as to whether the first firmware is identical to the second firmware.</p><p id="p-0053" num="0052">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, in a procedure at step S<b>120</b>, firmware may be extracted from the verification target board at step S<b>310</b>.</p><p id="p-0054" num="0053">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, in a procedure at step S<b>310</b>, firmware may be extracted at step S<b>410</b>.</p><p id="p-0055" num="0054">Here, at step S<b>410</b>, the firmware of the source board may be loaded from a prestored firmware database (DB), and may be downloaded from an official website.</p><p id="p-0056" num="0055">On the corresponding board, the firmware is typically stored in separate flash memory, so that, at step S<b>310</b>, the firmware may be extracted without separate modification of the board or may be extracted by removing a memory chip from the board, i.e., through a chip-off method, depending on the states of the board and the memory.</p><p id="p-0057" num="0056">Here, in the procedure at step S<b>310</b>, whether the memory interface of the verification target board is available may be checked at step S<b>420</b>.</p><p id="p-0058" num="0057">That is, at step S<b>420</b>, whether the verification target board is in the state in which a memory chip is readable/writable through a serial port or a device such as a Joint Test Action Group (JTAG) device may be checked.</p><p id="p-0059" num="0058">Here, in a procedure at step S<b>420</b>, if the verification target board is not in the state in which a memory chip is readable/writable, firmware may be extracted by reading the memory chip at step S<b>430</b>, whereas if the verification target board is in the state in which the memory chip is readable/writable, firmware may be extracted using the memory interface at step S<b>440</b>.</p><p id="p-0060" num="0059">In this case, at step S<b>450</b>, the state of the pin of the memory chip may be checked, and in particular, whether the memory pin is exposed outside (i.e., in an OUT state) may be checked.</p><p id="p-0061" num="0060">Here, if it is determined at step S<b>450</b> that the memory pin is not exposed outside, the memory chip is removed from the board (i.e., chip-off), and a memory reader may directly access the memory chip removed from the board to extract the firmware therefrom at step S<b>460</b>. In contrast, if the verification target board is in the state in which the memory interface is unavailable and the memory pin is exposed outside, firmware may be extracted using a micro-probe at step S<b>470</b>.</p><p id="p-0062" num="0061">Here, at step S<b>460</b>, after the memory chip is removed from the board, it is mounted on the memory reader to extract the firmware. After the firmware is extracted, the memory chip may be mounted on the board again by being soldered onto the board, or using a chip socket or the like.</p><p id="p-0063" num="0062">Also, in the procedure at step S<b>120</b>, a hash operation and an unpack operation may be performed at step S<b>320</b>.</p><p id="p-0064" num="0063">That is, at step S<b>320</b>, data may be extracted through a hash operation and an unpack operation by the first firmware and the second firmware.</p><p id="p-0065" num="0064">That is, at step S<b>320</b>, a bootloader, a kernel, and an operating system (OS) may be separated as respective pieces of data from the corresponding firmware through the unpack operation, and compressed data may be decompressed.</p><p id="p-0066" num="0065">At step S<b>320</b>, the extracted firmware performs a hash operation and an unpack operation using the same method as for the firmware of the source board (source firmware).</p><p id="p-0067" num="0066">Further, in the procedure at step S<b>120</b>, version information may be extracted at step S<b>330</b>.</p><p id="p-0068" num="0067">Here, at step S<b>330</b>, version information may be acquired from the extracted data.</p><p id="p-0069" num="0068">Further, in the procedure at step S<b>120</b>, a source board firmware database (DB) may be constructed at step S<b>340</b>.</p><p id="p-0070" num="0069">That is, at step S<b>340</b>, the source board firmware DB may be constructed in advance from downloaded source firmware data, and may then be used for a comparison.</p><p id="p-0071" num="0070">Furthermore, in the procedure at step S<b>120</b>, the pieces of data extracted from the firmware of the verification target board and the firmware of the source board may be compared with each other at step S<b>350</b>.</p><p id="p-0072" num="0071">That is, at step S<b>350</b>, firmware hash values extracted from the firmware of the verification target board and the firmware of the source board may be compared with each other, as to whether the firmware hash values are identical to each other.</p><p id="p-0073" num="0072">Further, in the procedure at step S<b>120</b>, whether the firmware hash values are identical to each other may be determined at step S<b>360</b>.</p><p id="p-0074" num="0073">That is, if it is determined at step S<b>360</b> that the firmware hash values are not identical to each other, pieces of detailed data that are extracted may be compared with each other, and an area suspected to have been modified and a related task may be reported at step S<b>370</b>, whereas if it is determined at step S<b>360</b> that the firmware hash values are identical to each other, the results of the determination may be reported at step S<b>380</b>.</p><p id="p-0075" num="0074">That is, at step S<b>370</b>, if the firmware hash values are not identical to each other, malicious modification may be determined to be present, the pieces of detailed data may again be compared with each other, and the area suspected to have been modified and a related task may be reported.</p><p id="p-0076" num="0075">Next, the method for verifying the integrity of a hardware board according to the embodiment of the present invention may perform a board integrity check at step S<b>130</b>.</p><p id="p-0077" num="0076">That is, at step S<b>130</b>, the integrity of the verification target board may be verified based on whether the images are identical to each other and on whether the pieces of firmware are identical to each other.</p><p id="p-0078" num="0077">Here, at step S<b>130</b>, if it is determined both that the images are identical to each other and that the pieces of firmware are identical to each other, it may be determined that no fault is present in the integrity of the verification target board.</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating a process of extracting firmware from a verification target board according to an embodiment of the present invention.</p><p id="p-0080" num="0079">Referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, it can be seen that the process of extracting firmware from the verification target board <b>20</b> using a micro-probe and a memory reader is illustrated.</p><p id="p-0081" num="0080">The micro-probe may be a fine probe, which may be used to be connected to individual pins of a memory chip, and may be stably connected to respective pins <b>40</b> through fixing devices <b>50</b>.</p><p id="p-0082" num="0081">The micro-probe connected to the respective pins <b>40</b> may be connected to the input pins of a memory reader <b>60</b>, through which firmware may be extracted.</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating a computer system according to an embodiment of the present invention.</p><p id="p-0084" num="0083">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an apparatus for verifying the integrity of a hardware board according to an embodiment of the present invention may be implemented in a computer system <b>1100</b>, such as a computer-readable storage medium. As illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the computer system <b>1100</b> may include one or more processors <b>1110</b>, memory <b>1130</b>, a user interface input device <b>1140</b>, a user interface output device <b>1150</b>, and storage <b>1160</b>, which communicate with each other through a bus <b>1120</b>. The computer system <b>1100</b> may further include a network interface <b>1170</b> connected to a network <b>1180</b>. Each processor <b>1110</b> may be a Central Processing Unit (CPU) or a semiconductor device for executing processing instructions stored in the memory <b>1130</b> or the storage <b>1160</b>. Each of the memory <b>1130</b> and the storage <b>1160</b> may be any of various types of volatile or nonvolatile storage media. For example, the memory <b>1130</b> may include Read-Only Memory (ROM) <b>1131</b> or Random Access Memory (RAM) <b>1132</b>.</p><p id="p-0085" num="0084">An apparatus for verifying the integrity of a hardware board according to an embodiment of the present invention may include one or more processors <b>1110</b> and execution memory <b>1130</b> for storing at least one program that is executed by the one or more processors, wherein the at least one program is configured to compare images of components arranged on a verification target board and a source board with each other in a first image, obtained by photographing the verification target board, and in a second image prestored for the source board, as to whether the images of the components are identical to each other, and compare first firmware extracted from the verification target board with second firmware of the source board, as to whether the first firmware is identical to the second firmware and verify the integrity of the verification target board based on whether the images are identical to each other and on whether the pieces of firmware are identical to each other.</p><p id="p-0086" num="0085">Here, the at least one program may be configured to normalize the first image and the second image into an identical shape with respect to board sizes and board directions of the first and second images.</p><p id="p-0087" num="0086">Here, the at least one program may be configured to compare pieces of data that are extracted through a hash operation and an unpack operation by the first firmware and the second firmware.</p><p id="p-0088" num="0087">Here, the unpack operation may be configured to separate a bootloader, a kernel, and an operating system, as respective pieces of data, from corresponding firmware and to decompress compressed data.</p><p id="p-0089" num="0088">The at least one program may be configured to extract the first firmware using a micro-probe and a memory reader when the verification target board is in the state in which a memory interface is unavailable and a memory pin is exposed outside.</p><p id="p-0090" num="0089">The at least one program may be configured to extract the first firmware by causing a memory reader to directly access a memory chip removed from the verification target board when the verification target board is in a state in which a memory interface is unavailable in and a memory pin is not exposed outside.</p><p id="p-0091" num="0090">The present invention may verify the integrity of a hardware board of a supply chain.</p><p id="p-0092" num="0091">Further, the present invention may detect malicious modification when a board is modified with malicious intent.</p><p id="p-0093" num="0092">Furthermore, the present invention may verify integrity in a board environment in which it is difficult to extract firmware.</p><p id="p-0094" num="0093">As described above, in the apparatus and method for verifying the integrity of a hardware board according to the present invention, the configurations and schemes in the above-described embodiments are not limitedly applied, and some or all of the above embodiments can be selectively combined and configured so that various modifications are possible.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus for verifying integrity of a hardware board, comprising:<claim-text>one or more processors; and</claim-text><claim-text>an execution memory for storing at least one program that is executed by the one or more processors,</claim-text><claim-text>wherein the at least one program is configured to:</claim-text><claim-text>compare images of components arranged on a verification target board and a source board with each other in a first image, obtained by photographing the verification target board, and in a second image prestored for the source board, as to whether the images of the components are identical to each other, and</claim-text><claim-text>compare first firmware extracted from the verification target board with second firmware of the source board, as to whether the first firmware is identical to the second firmware and verify the integrity of the verification target board based on whether the images are identical to each other and on whether the pieces of firmware are identical to each other.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one program is configured to normalize the first image and the second image into an identical shape with respect to board sizes and board directions of the first and second images.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the at least one program is configured to compare pieces of data that are extracted through a hash operation and an unpack operation by the first firmware and the second firmware.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the unpack operation is configured to separate a bootloader, a kernel, and an operating system, as respective pieces of data, from corresponding firmware and to decompress compressed data.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the at least one program is configured to extract the first firmware using a micro-probe and a memory reader when the verification target board is in a state in which a memory interface is unavailable and a memory pin is exposed outside.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the at least one program is configured to extract the first firmware by causing a memory reader to directly access a memory chip removed from the verification target board when the verification target board is in a state in which a memory interface is unavailable in and a memory pin is not exposed outside.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A method for verifying integrity of a hardware board, the method being performed by an apparatus for verifying the integrity of the hardware board, the method comprising:<claim-text>comparing images of components arranged on a verification target board and a source board with each other in a first image, obtained by photographing the verification target board, and in a second image prestored for the source board, as to whether the images of the components are identical to each other;</claim-text><claim-text>comparing first firmware extracted from the verification target board with second firmware of the source board, as to whether the first firmware is identical to the second firmware; and</claim-text><claim-text>verifying the integrity of the verification target board based on whether the images are identical to each other and on whether the pieces of firmware are identical to each other.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein comparing the images of the components comprises:<claim-text>normalizing the first image and the second image into an identical shape with respect to board sizes and board directions of the first and second images.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein comparing the first firmware extracted from the verification target board with the second firmware of the source board comprises:<claim-text>comparing pieces of data that are extracted through a hash operation and an unpack operation by the first firmware and the second firmware.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the unpack operation is configured to separate a bootloader, a kernel, and an operating system, as respective pieces of data, from corresponding firmware and to decompress compressed data.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein comparing the first firmware extracted from the verification target board with the second firmware of the source board further comprises:<claim-text>extracting the first firmware using a micro-probe and a memory reader when the verification target board is in a state in which a memory interface is unavailable and a memory pin is exposed outside.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein comparing the first firmware extracted from the verification target board with the second firmware of the source board further comprises:<claim-text>extracting the first firmware by causing a memory reader to directly access a memory chip removed from the verification target board when the verification target board is in a state in which a memory interface is unavailable in and a memory pin is not exposed outside.</claim-text></claim-text></claim></claims></us-patent-application>