<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004351A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004351</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17784656</doc-number><date>20201210</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>FR</country><doc-number>FR1914706</doc-number><date>20191218</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>7</main-group><subgroup>544</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>7</main-group><subgroup>5443</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>084</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD AND DEVICE FOR ADDITIVE CODING OF SIGNALS IN ORDER TO IMPLEMENT DIGITAL MAC OPERATIONS WITH DYNAMIC PRECISION</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>COMMISSARIAT A L'ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES</orgname><address><city>PARIS</city><country>FR</country></address></addressbook><residence><country>FR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>THIELE</last-name><first-name>Johannes Christian</first-name><address><city>GIF SUR YVETTE</city><country>FR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>BICHLER</last-name><first-name>Olivier</first-name><address><city>VIEILLE EGLISE EN YVELINES</city><country>FR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LORRAIN</last-name><first-name>Vincent</first-name><address><city>SAULX-LES-CHARTREUX</city><country>FR</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/EP2020/085417</doc-number><date>20201210</date></document-id><us-371c12-date><date>20220612</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A computer-implemented method is provided for coding a digital signal quantized on a given number N<sub>d </sub>of bits and intended to be processed by a digital computing system, the signal being coded on a predetermined number N<sub>p </sub>of bits which is strictly less than N<sub>d</sub>, the method including the steps of: receiving a digital signal composed of a plurality of samples, decomposing each sample into a sum of k maximum values which are equal to 2<sup>N</sup>P&#x2212;1 and a residual value, with k being a positive or zero integer, successively transmitting the values obtained after decomposition to an integration unit for carrying out a MAC operation between the sample and a weighting coefficient.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="97.37mm" wi="74.00mm" file="US20230004351A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="224.54mm" wi="75.86mm" file="US20230004351A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="145.03mm" wi="92.46mm" file="US20230004351A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="180.34mm" wi="121.07mm" file="US20230004351A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="187.03mm" wi="135.64mm" file="US20230004351A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><p id="p-0002" num="0001">The invention relates to the field of computing architectures for machine learning models, in particular artificial neural networks, and bears on a method and a device for coding and integrating digital signals with dynamic precision adapted to signals propagated in an artificial neural network.</p><p id="p-0003" num="0002">More generally, the invention is applicable to any computing architecture implementing operations of multiply-accumulate (MAC) type.</p><p id="p-0004" num="0003">Artificial neural networks are computational models imitating the operation of biological neural networks. Artificial neural networks comprise neurons which are interconnected by synapses, which are conventionally implemented by digital memories. The synapses may also be implemented by resistive components the conductance of which varies depending on the voltage applied across their terminals. Artificial neural networks are used in various fields of (visual, audio or other) signal processing, such as, for example, in the field of image classification or image recognition.</p><p id="p-0005" num="0004">A general problem for architectures of computers implementing an artificial neural network relates to the overall energy consumption of the circuit creating the network.</p><p id="p-0006" num="0005">The basic operation implemented by an artificial neuron is a multiply-accumulate (MAC) operation. According to the number of neurons per layer and of layers of neurons which the network comprises, the number of MAC operations per unit of time needed for real-time operation becomes restrictive.</p><p id="p-0007" num="0006">There is therefore a need to develop computing architectures optimized for neural networks which make it possible to limit the number of MAC operations without degrading either the performance of the algorithms implemented by the network or the precision of the computations.</p><p id="p-0008" num="0007">The Applicant's international application WO 2016/050595 describes a signal coding method making it possible to simplify the implementation of the MAC operator.</p><p id="p-0009" num="0008">One drawback of this method is that it does not make it possible to take into account the nature of the signals propagated in a digital computer implementing a learning function such as an artificial neural network.</p><p id="p-0010" num="0009">Specifically, when the dynamic range of the signals is very variable, quantization on a fixed number of bits of all the samples leads to sub-optimal sizing of the computing operators, in particular of the MAC operators. This has the effect of increasing the overall energy consumption of the computer.</p><p id="p-0011" num="0010">The invention proposes a coding method with dynamic precision which makes it possible to take into account the nature of the signals to be coded, in particular the variability of the dynamic range of the values of the signals.</p><p id="p-0012" num="0011">Due to its dynamic aspect, the invention makes it possible to optimize the coding of the signals propagated in a neural network so as to limit the number and the complexity of MAC operations carried out and thus limit the energy consumption of the circuit or computer creating the network.</p><p id="p-0013" num="0012">One subject of the invention is a computer-implemented method for coding a digital signal quantized on a given number Nd of bits and intended to be processed by a digital computing system, the signal being coded on a predetermined number N<sub>p </sub>of bits which is strictly less than N<sub>d</sub>, the method comprising the steps of:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0013">Receiving a digital signal composed of a plurality of samples,</li>        <li id="ul0002-0002" num="0014">Decomposing each sample into a sum of k maximum values which are equal to 2<sup>Np</sup>&#x2212;1 and a residual value, with k being a positive or zero integer,</li>        <li id="ul0002-0003" num="0015">Successively transmitting the values obtained after decomposition to an integration unit for carrying out a MAC operation between the sample and a weighting coefficient.</li>    </ul>    </li></ul></p><p id="p-0014" num="0016">According to one particular variant, the method comprises a step of determining the size N<sub>p </sub>of the coded signal depending on a statistical distribution of the values of the digital signal.</p><p id="p-0015" num="0017">According to one particular aspect of the invention, the size N<sub>p </sub>of the coded signal is parameterized so as to minimize the energy consumption of a digital computing system in which the processed signals are coded by means of said coding method.</p><p id="p-0016" num="0018">According to one particular aspect of the invention, the energy consumption is estimated by simulation or on the basis of an empirical model.</p><p id="p-0017" num="0019">According to one particular aspect of the invention, the digital computing system implements an artificial neural network.</p><p id="p-0018" num="0020">According to one particular aspect of the invention, the size N<sub>p </sub>of the coded signal is parameterized independently for each layer of the artificial neural network.</p><p id="p-0019" num="0021">Another subject of the invention is a coding device, comprising a coder configured to execute the coding method according to the invention.</p><p id="p-0020" num="0022">Another subject of the invention is an integration device, configured to carry out a multiply-accumulate (MAC) operation between a first number coded by means of the coding method according to the invention and a weighting coefficient, the device comprising a multiplier for multiplying the weighting coefficient by the coded number, an adder and an accumulation register for accumulating the output signal of the multiplier.</p><p id="p-0021" num="0023">Another subject of the invention is an artificial neuron, implemented by a digital computing system, comprising an integration device according to the invention, for carrying out a multiply-accumulate (MAC) operation between a received signal and a synaptic coefficient, and a coding device according to the invention for coding the output signal of the integration device, the artificial neuron being configured to propagate the coded signal to another artificial neuron.</p><p id="p-0022" num="0024">Another subject of the invention is an artificial neuron, implemented by a computer, comprising an integration device according to the invention for carrying out a multiply-accumulate (MAC) operation between an error signal received from another artificial neuron and a synaptic coefficient, a local error computing module configured to compute a local error signal on the basis of the output signal of the integration device and a coding device according to the invention for coding the local error signal, the artificial neuron being configured to back-propagate the local error signal to another artificial neuron.</p><p id="p-0023" num="0025">Another subject of the invention is an artificial neural network comprising a plurality of artificial neurons according to the invention.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><p id="p-0024" num="0026">Other features and advantages of the present invention will become more clearly apparent upon reading the following description with reference to the following appended drawings.</p><p id="p-0025" num="0027"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a flowchart illustrating the steps for implementing the coding method according to the invention,</p><p id="p-0026" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a diagram of a coder according to one embodiment of the invention,</p><p id="p-0027" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a diagram of an integration module for carrying out an operation of MAC type for numbers quantized via the coding method of <figref idref="DRAWINGS">FIG. <b>1</b></figref>,</p><p id="p-0028" num="0030"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a block diagram of an exemplary artificial neuron comprising an integration module of the type of <figref idref="DRAWINGS">FIG. <b>3</b></figref> for operation during a data propagation phase,</p><p id="p-0029" num="0031"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of an exemplary artificial neuron comprising an integration module of the type of <figref idref="DRAWINGS">FIG. <b>3</b></figref> for operation during a data back-propagation phase.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0030" num="0032"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows, on a flowchart, the steps for implementing a coding method according to one embodiment of the invention.</p><p id="p-0031" num="0033">One objective of the method is to code a number quantized on N<sub>d </sub>bits as a group of values which can be transmitted (or propagated) separately in the form of events.</p><p id="p-0032" num="0034">To this end, the first step <b>101</b> of the method consists in receiving a number y quantized on N<sub>d </sub>bits, N<sub>d </sub>being an integer. The number y is, typically, a quantized sample of a signal, for example an image signal, an audio signal or a data signal intrinsically comprising a piece of information. For a conventional computing architecture, the number Nd is typically equal to 8, 16, 32 or 64 bits. It is notably sized depending on the dynamic range of the signal, that is to say the difference between the minimum value of a sample of the signal and its maximum value. In order not to introduce quantization noise, the number N<sub>d </sub>is generally chosen so as to take into account this dynamic range in order not to saturate or clip the high or low values of the samples of the signal. This can lead to choosing a high value for N<sub>d</sub>, which leads to a problem of oversizing of the computing operators which have to carry out operations on samples thus quantized.</p><p id="p-0033" num="0035">The invention therefore aims to propose a method for coding the signal which makes it possible to adapt the size (in number of bits) of the samples transmitted depending on their real value so as to be able to carry out operations on quantized samples with a lower number of bits.</p><p id="p-0034" num="0036">In a second step <b>102</b>, the number N<sub>p </sub>of bits on which the coded samples to be transmitted are quantized is chosen. N<sub>p </sub>is less than N<sub>b</sub>.</p><p id="p-0035" num="0037">The number y is then decomposed in the following form:</p><p id="p-0036" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y=k</i>&#xb7;(2<sup>N</sup><sup><sub2>p</sub2></sup>&#x2212;1)+<i>v</i><sub>r</sub><i>=k&#xb7;v</i><sub>max</sub><i>+v</i><sub>r </sub>&#x2003;&#x2003;[Math. 1]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0037" num="0038">k is a positive or zero integer, v<sub>r </sub>is a residual value and v<sub>max </sub>is the maximum value of a number quantized on N<sub>p </sub>bits.</p><p id="p-0038" num="0039">The sample y is then coded by the succession of the k values v<sub>max </sub>and the residual value v<sub>r </sub>which are transmitted successively.</p><p id="p-0039" num="0040">For example, if y=50 and N<sub>p</sub>=4, y is coded by transmitting the successive values {15},{15},{15},{5}={1111},{1111},{1111},{0101}.</p><p id="p-0040" num="0041">If y=50 and N<sub>p</sub>=5, y is coded by transmitting the successive values {31},{19}={11111},{10011}.</p><p id="p-0041" num="0042">Upon reception, the end or the beginning of a new sample can be identified by the reception of a value which is different from the maximum value v<sub>max</sub>. The next value received then corresponds to a new sample.</p><p id="p-0042" num="0043">In a final step <b>103</b>, the coded signals are transmitted, for example via a data bus of appropriate size, to a MAC operator with a view to carrying out a multiply-accumulate operation.</p><p id="p-0043" num="0044">The proposed coding method makes it possible to reduce the size of the operators (which are designed to carry out operations on N<sub>p </sub>bits) while at the same time making it possible to preserve the whole dynamic range of the signals. Specifically, samples with a high value (greater than v<sub>max</sub>) are coded by several successive values, while samples with a low value (less than v<sub>max</sub>) are transmitted directly.</p><p id="p-0044" num="0045">Moreover, this method does not require addressing in order to identify the coded values belonging to the same sample as a value which is less than v<sub>max </sub>indicates the end or the beginning of a sample.</p><p id="p-0045" num="0046"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows, in schematic form, an exemplary coder <b>200</b> configured to code an input value y by applying the method described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the non-limiting digital example for y=50 and N<sub>p</sub>=5 has been taken.</p><p id="p-0046" num="0047">The values {11111} and {10011} are transmitted at two successive instants. The order of transmission is chosen by convention.</p><p id="p-0047" num="0048">One advantage of the proposed coding method is that it makes it possible to limit the size of the coded data transmitted to N<sub>p </sub>bits. Another advantage lies in its dynamic aspect, because the parameter N<sub>p </sub>can be adapted according to the nature of the data to be coded or depending on the constraints on the sizing of the operators used to carry out computations on the coded data.</p><p id="p-0048" num="0049"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically shows an integration module <b>300</b> configured to carry out an operation of multiply-add type or MAC operation. The integration module <b>300</b> described in <figref idref="DRAWINGS">FIG. <b>3</b></figref> is optimized for processing data coded via the method according to the invention. Typically, the integration module <b>300</b> implements a MAC operation between an input datum p coded via the coding method according to the invention and a weighting coefficient w which corresponds to a parameter learned by a machine learning model. The coefficient w corresponds, for example, to a synaptic weight in an artificial neural network.</p><p id="p-0049" num="0050">An integration module <b>300</b> of the type described in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can be duplicated in order to carry out MAC operations in parallel between several input values p and several coefficients w.</p><p id="p-0050" num="0051">Alternatively, one and the same integration module can be activated sequentially in order to carry out several successive MAC operations.</p><p id="p-0051" num="0052">The integration module <b>300</b> comprises a multiplier MUL, an adder ADD and an accumulation register RAC.</p><p id="p-0052" num="0053">When the integration module <b>300</b> receives a coded value p, the value saved in the accumulation register RAC is incremented by the product INC=w&#xb7;p of the value p and the weighting coefficient w.</p><p id="p-0053" num="0054">When a new sample is indicated, for example by the reception of a value which is different from v<sub>max</sub>, the register RAC is reset.</p><p id="p-0054" num="0055">The operators MUL, ADD of the device are sized for numbers quantized on N<sub>p </sub>bits, which makes it possible to reduce the overall complexity of the device.</p><p id="p-0055" num="0056">The size of the register RAC must be greater than the sum of the maximum sizes of the values w and p. Typically it will be of the size N<sub>d</sub>+N<sub>w</sub>, which is the maximum size of a MAC operation between words of sizes N<sub>d </sub>and N<sub>w</sub>.</p><p id="p-0056" num="0057">In one variant embodiment, when the numbers are represented in signed notation, a sign management module (not shown in detail in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) is also needed.</p><p id="p-0057" num="0058">The integration module <b>300</b> according to the invention can be advantageously used to implement an artificial neural network as illustrated in <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>.</p><p id="p-0058" num="0059">Typically, the function implemented by a machine learning model consists of an integration of the signals received as input and weighted by coefficients.</p><p id="p-0059" num="0060">In the particular case of an artificial neural network, the coefficients are called synaptic weights and the weighted sum is followed by the application of an activation function a which, depending on the result of the integration, generates a signal to be propagated as output from the neuron.</p><p id="p-0060" num="0061">Thus, the artificial neuron N comprises a first integration module <b>401</b> of the type of <figref idref="DRAWINGS">FIG. <b>3</b></figref> for carrying out the product y<sup>l&#x2212;1</sup>&#xb7;w with y<sup>l&#x2212;1 </sup>being a value coded via the method according to the invention in the form of several events successively propagated between two neurons and w being the value of a synaptic weight. A second conventional integration module <b>402</b> is then used to integrate the products y<sup>l&#x2212;1</sup>&#xb7;w over time.</p><p id="p-0061" num="0062">Without departing from the scope of the invention, an artificial neuron N can comprise several integration modules for carrying out MAC operations in parallel for several input data and weighting coefficients.</p><p id="p-0062" num="0063">The activation function a is, for example, defined by the generation of a signal when the integration of the received signals is completed. The activation signal is then coded via a coder <b>403</b> according to the invention (as described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>), which codes the value as several events which are propagated successively to one or more other neurons.</p><p id="p-0063" num="0064">More generally, the output value of the activation function a<sup>I </sup>of a neuron of a layer of index I is given by the following relationship:</p><p id="p-0064" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>[Math. 1]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0065" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>i</sub><sup>l</sup><i>=a</i><sup>l</sup>(&#x3a3;<sub>j</sub><i>y</i><sub>j</sub><sup>l&#x2212;1 </sup><i>w</i><sub>ij</sub><sup>l</sup><i>+b</i><sub>i</sub><sup>l</sup>)=<i>a</i><sup>l</sup>(<i>I</i><sub>i</sub><sup>l</sup>) &#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0066" num="0065">I<sub>i</sub><sup>l </sup>is the output value of the second integration module <b>402</b>.</p><p id="p-0067" num="0066">b<sub>i</sub><sup>l </sup>represents a bias value which is the initial value of the accumulator in the second integration module <b>402</b>.</p><p id="p-0068" num="0067">w<sub>ij</sub><sup>l </sup>represents a synaptic coefficient.</p><p id="p-0069" num="0068">The output value y<sub>i</sub><sup>l </sup>is then coded via a coder <b>403</b> according to the invention (as described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>), which codes the value y<sub>j</sub><sup>l </sup>as several events which are propagated successively to one or more other neurons.</p><p id="p-0070" num="0069">The various operations implemented successively in a neuron N can be carried out at different rates, that is to say with different time scales or clocks. Typically, the first integration device <b>401</b> operates at a faster rate than the second integration device <b>402</b>, which itself operates at a faster rate than the operator carrying out the activation function.</p><p id="p-0071" num="0070">In the case where the two integration devices <b>401</b>, <b>402</b> operate at the same rate, a single integration device is used instead of two. In general, according to the chosen hardware implementation, the number of accumulators used varies.</p><p id="p-0072" num="0071">In a similar way to what was described above, the error signals back-propagated during the back-propagation phase can also be coded by means of the coding method according to the invention. In this case, an integration module according to the invention is implemented in each neuron for carrying out the weighting of the coded error signals received with synaptic coefficients as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, which shows an artificial neuron configured to process and back-propagate error signals from a layer l+1 to a layer l.</p><p id="p-0073" num="0072">In the back-propagation phase, the error computation &#x3b4;<sub>i</sub><sup>l </sup>is implemented according to the following equation:</p><p id="p-0074" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>[Math. 2]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0075" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x3b4;<sub>i</sub><sup>l</sup><i>=a&#x2032;</i><sup>l</sup>(<i>I</i><sub>i</sub><sup>l</sup>) <i>E</i><sub>i</sub><sup>l</sup><i>, E</i><sub>i</sub><sup>l</sup>=&#x3a3;<sub>k </sub>&#x3b4;<sub>k</sub><sup>l+1 </sup><i>w</i><sub>ki</sub><sup>l+1 </sup>&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0076" num="0073">a&#x2032;<sup>l</sup>(I<sub>i</sub><sup>l</sup>) is the value of the derivative of the activation function.</p><p id="p-0077" num="0074">The neuron described in <figref idref="DRAWINGS">FIG. <b>5</b></figref> comprises a first integration module <b>501</b> of the type of <figref idref="DRAWINGS">FIG. <b>3</b></figref> for carrying out the computation of the product &#x3b4;<sub>k</sub><sup>l+1 </sup><i>w</i><sub>ki</sub><sup>l+1</sup>, with &#x3b4;<sub>k</sub><sup>l+1 </sup>being the error signal received from a neuron of the layer l+1 and coded by means of the coding method according to the invention and w<sub>ki</sub><sup>l+1 </sup>being the value of a synaptic coefficient.</p><p id="p-0078" num="0075">A second conventional integration module <b>502</b> is then used to carry out the integration of the results of the first module <b>501</b> over time.</p><p id="p-0079" num="0076">The neuron N comprises other specific operators needed to compute a local error &#x3b4;<sub>i</sub><sup>l </sup>which is then coded via a coder <b>503</b> according to the invention, which codes the error in the form of several events which are then back-propagated to the previous layer l&#x2212;1.</p><p id="p-0080" num="0077">The neuron N also comprises, moreover, a module for updating the synaptic weights <b>504</b> depending on the computed local error.</p><p id="p-0081" num="0078">The various operators of the neuron can operate at different rates or time scales. In particular, the first integration module <b>501</b> operates at the fastest rate. The second integration module <b>502</b> operates at a slower rate than the first module <b>501</b>. The operators used to compute the local error operate at a slower rate than the second module <b>502</b>.</p><p id="p-0082" num="0079">In the case where the two integration modules <b>501</b>, <b>502</b> operate at the same rate, a single integration module is used instead of two. In general, according to the chosen hardware implementation, the number of accumulators used varies.</p><p id="p-0083" num="0080">The invention proposes a means for adapting the computing operators of a digital computing architecture depending on the received data. It is particularly advantageous for architectures implementing machine learning models, in which the distribution of the data to be processed varies greatly according to the received inputs.</p><p id="p-0084" num="0081">The invention notably has advantages when the propagated signals comprise a large number of low values or, more generally, when the signal has a wide dynamic range with a large variation in values. Specifically, in this case, the low values can be quantized directly on a limited number of bits, while the higher values are coded by several successive events, each quantized on the same number of bits.</p><p id="p-0085" num="0082">Statistically, only 50% of the bits are zero when random binary data are considered. In contrast, the data propagated within a machine learning model have a large number of low values.</p><p id="p-0086" num="0083">This property is explained notably by the fact that the data propagated by a machine learning model with several processing layers, such as a neural network, convey information which is concentrated, gradually during propagation, toward a small number of neurons. As a result, the values propagated to the other neurons are close to 0 or generally low.</p><p id="p-0087" num="0084">One conventional approach to taking into account this particular property of the signals consists in coding all the values on a low number of bits (for example 8 bits). However, this approach has the drawback of having a large impact for values which exceed the maximum quantization value (for example 2<sup>8</sup>&#x2212;1). Specifically, these values are clipped at the maximum value, which leads to losses of precision for the values which convey the most information.</p><p id="p-0088" num="0085">This approach is therefore not adapted to these types of machine learning models.</p><p id="p-0089" num="0086">Another approach still consists in coding the values on a fixed number of bits, but while adjusting the dynamic range so as not to clip the maximum values. This second approach has the drawback of modifying the value of data with low values, which are very numerous.</p><p id="p-0090" num="0087">Thus, the coding method according to the invention is particularly adapted to the statistical profile of the values propagated in a machine learning model, because it makes it possible to take into account the whole dynamic range of the values without, however, using a fixed high number of bits to quantize all the values. Thus, there is no loss of precision due to the quantization of the data, but the operators used for the implementation of a MAC operator can be sized to process data of lower size.</p><p id="p-0091" num="0088">One of the advantages of the invention is that the size N<sub>p </sub>of the coded samples is a parameter of the coding method.</p><p id="p-0092" num="0089">This parameter can be optimized depending on the statistical properties of the data to be coded. This makes it possible to optimize the coding so as to optimize the overall energy consumption of the computer or circuit creating the machine learning model.</p><p id="p-0093" num="0090">Specifically, the coding parameters influence the values which are propagated in the machine learning model and therefore the size of the operators carrying out the MAC operations.</p><p id="p-0094" num="0091">By applying the invention, it is possible to parameterize the coding so as to minimize the number of binary operations carried out or, more generally, to minimize or optimize the resulting energy consumption.</p><p id="p-0095" num="0092">A first approach to optimizing the coding parameters consists in simulating the behavior of a machine learning model for a set of training data and simulating its energy consumption depending on the number and size of the operations carried out. By varying the coding parameters for the same set of data, the parameters which make it possible to minimize energy consumption are sought.</p><p id="p-0096" num="0093">A second approach consists in determining a mathematical model to express the energy consumed by the machine learning model or, more generally, the targeted computer, depending on the coding parameter N<sub>p</sub>.</p><p id="p-0097" num="0094">In the case of application of a neural network, the coding parameter Np may be different according to the layer of the network. Specifically, the statistical properties of the propagated values can depend on the layer of the network. Advancing through the layers, the information tends to be more concentrated toward a few particular neurons. In contrast, in the first layers, the distribution of the information depends on the input data of the neuron, it can be more random.</p><p id="p-0098" num="0095">An exemplary mathematical model for a neural network is proposed below.</p><p id="p-0099" num="0096">The energy E<sup>l </sup>consumed by a layer of a network depends on the energy E<sub>int</sub><sup>l</sup>(N<sub>p</sub>) consumed by the integration of an event (a received value) by a neuron and the energy E<sub>enc</sub><sup>l&#x2212;1</sup>(N<sub>p</sub>) consumed by the coding of this event by the previous layer.</p><p id="p-0100" num="0097">Thus, a model of the energy consumed by a layer can be formulated using the following relationship:</p><p id="p-0101" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>[Math. 3]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0102" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>E</i><sup>l</sup><i>=N</i><sub>hist</sub><sup>l&#x2212;1</sup>(<i>N</i><sub>p</sub><sup>l</sup>)&#xb7;(<i>E</i><sub>enc</sub><sup>l&#x2212;1</sup>(<i>N</i><sub>p</sub><sup>l</sup>)+<i>E</i><sub>int</sub><sup>l</sup>(<i>N</i><sub>p</sub><sup>l</sup>)&#xb7;<i>n</i><sub>int</sub><sup>l</sup>) &#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0103" num="0098">n<sub>int</sub><sup>l </sup>is the number of neurons in the layer l.</p><p id="p-0104" num="0099">N<sub>hist</sub><sup>l&#x2212;1</sup>(N<sub>p</sub><sup>l</sup>) is the number of events transmitted by the layer l&#x2212;1. This number depends on the coding parameter N<sub>p</sub><sup>l </sup>and the distribution of the data.</p><p id="p-0105" num="0100">On the basis of the model given by relationship (3), the value of N<sub>p</sub><sup>l </sup>which makes it possible to minimize the energy E<sup>l </sup>consumed is sought for each layer.</p><p id="p-0106" num="0101">The functions E<sub>int</sub><sup>l</sup>(N<sub>p</sub><sup>l</sup>) and E<sub>enc</sub><sup>l&#x2212;1</sup>(N<sub>p</sub><sup>l</sup>) can be determined on the basis of empirical functions or models by means of simulations or on the basis of real measurements.</p><p id="p-0107" num="0102">One advantage of the invention is that it makes it possible to parameterize the value of N<sub>p</sub><sup>l </sup>independently for each layer l of the network, which makes it possible to finely take into account the statistical profile of the propagated data for each layer.</p><p id="p-0108" num="0103">The invention can also be applied in order to optimize the coding of error values back-propagated during a gradient back-propagation phase. The coding parameters can be optimized independently for the propagation phase and the back-propagation phase.</p><p id="p-0109" num="0104">In one variant embodiment of the invention, the activation values in the neural network can be constrained so as to favor a wider distribution of low values.</p><p id="p-0110" num="0105">This property can be obtained by acting on the cost function implemented in the final layer of the network. By adding a term to this cost function which depends on the values of the propagated signals, large values in the cost function can be penalized and activations in the network can thus be constrained to lower values.</p><p id="p-0111" num="0106">This property makes it possible to modify the statistical distribution of the activations and thus to improve the efficiency of the coding method.</p><p id="p-0112" num="0107">The coding method according to the invention can be advantageously applied to the coding of data propagated in a computer implementing a machine learning function, for example an artificial neural network function for classifying data according to a learning function.</p><p id="p-0113" num="0108">The coding method according to the invention can also be applied to the input data of the neural network, in other words the data produced as input to the first layer of the network. In this case, the statistical profile of the data is exploited in order to best code the information. For example, in the case of images, the data to be encoded can correspond to pixels of the image or groups of pixels or also to differences between pixels of two consecutive images in a sequence of images (video).</p><p id="p-0114" num="0109">The computer according to the invention may be implemented using hardware and/or software components. The software elements may be available as a computer program product on a computer-readable medium, which medium may be electronic, magnetic, optical or electromagnetic. The hardware elements may be available, in full or in part, notably as application-specific integrated circuits (ASICs) and/or field-programmable gate arrays (FPGAs) and/or as neural circuits according to the invention or as a digital signal processor (DSP) and/or as a graphics processing unit (GPU), and/or as a microcontroller and/or as a general-purpose processor, for example. The computer CONV also comprises one or more memories, which may be registers, shift registers, a RAM memory, a ROM memory or any other type of memory adapted to implementing the invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method for coding a digital signal composed of samples quantized on a given number N<sub>d </sub>of bits and intended to be processed by a digital computing system, the signal being coded by means of samples quantized on a predetermined number N<sub>p </sub>of bits which is strictly less than N<sub>d</sub>, the method comprising the steps of:<claim-text>receiving a digital signal composed of a plurality of samples,</claim-text><claim-text>decomposing each sample into a sum of k maximum values which are equal to 2<sup>N</sup><sup><sub2>p</sub2></sup>&#x2212;1 and a residual value, with k being a positive or zero integer, and</claim-text><claim-text>successively transmitting the values obtained after decomposition to an integration unit for carrying out a MAC operation between the sample and a weighting coefficient.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising a step of determining the size N<sub>p </sub>of the coded signal depending on a statistical distribution of the values of the digital signal.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The coding method as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the size N<sub>p </sub>of the coded signal is parameterized so as to minimize the energy consumption of a digital computing system in which the processed signals are coded by means of said coding method.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The coding method as claimed in <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the energy consumption is estimated by simulation or on the basis of an empirical model.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the digital computing system implements an artificial neural network.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The coding method as claimed in <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the size N<sub>p </sub>of the coded signal is parameterized independently for each layer of the artificial neural network.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A coding device, comprising a coder configured to execute the coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. An integration device, configured to carry out a multiply-accumulate (MAC) operation between a first number coded by means of the coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> and a weighting coefficient, the device comprising a multiplier (MUL) for multiplying the weighting coefficient by the coded number, an adder (ADD) and an accumulation register (RAC) for accumulating the output signal of the multiplier (MUL).</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. An artificial neuron (N), implemented by a digital computing system, comprising an integration device configured to carry out a multiply-accumulate (MAC) operation between a first number coded by means of the coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> and a weighting coefficient, the device comprising a multiplier (MUL) for multiplying the weighting coefficient by the coded number, an adder (ADD) and an accumulation register (RAC) for accumulating the output signal of the multiplier (MUL), the integration device carrying out a multiply-accumulate (MAC) operation between a received signal and a synaptic coefficient, and a coding device comprising a coder configured to execute the coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, for coding the output signal of the integration device, the artificial neuron (N) being configured to propagate the coded signal to another artificial neuron.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. An artificial neuron (N), implemented by a computer, comprising an integration device configured to carry out a multiply-accumulate (MAC) operation between a first number coded by means of the coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> and a weighting coefficient, the device comprising a multiplier (MUL) for multiplying the weighting coefficient by the coded number, an adder (ADD) and an accumulation register (RAC) for accumulating the output signal of the multiplier (MUL), the integration device carrying out a multiply-accumulate (MAC) operation between an error signal received from another artificial neuron and a synaptic coefficient, a local error computing module configured to compute a local error signal on the basis of the output signal of the integration device and a coding device comprising a coder configured to execute the coding method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, for coding the local error signal, the artificial neuron (N) being configured to back-propagate the local error signal to another artificial neuron.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. An artificial neural network, comprising a plurality of artificial neurons as claimed in <claim-ref idref="CLM-00009">claim 9</claim-ref>.</claim-text></claim></claims></us-patent-application>