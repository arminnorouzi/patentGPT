<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005305A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005305</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943825</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2020-045410</doc-number><date>20200316</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>07</class><subclass>C</subclass><main-group>5</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>07</class><subclass>C</subclass><main-group>5</main-group><subgroup>008</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">CENTER DEVICE, METHOD FOR GENERATING DISTRIBUTION PACKAGE, AND NON-TRANSITORY COMPUTER READABLE MEDIUM FOR GENERATING DISTRIBUTION PACKAGE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/JP2021/007692</doc-number><date>20210301</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17943825</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>DENSO CORPORATION</orgname><address><city>Kariya-city</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>SAKURAI</last-name><first-name>Nao</first-name><address><city>Kariya-city</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>TAKAHASHI</last-name><first-name>Shuhei</first-name><address><city>Kariya-city</city><country>JP</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In one aspect of the present disclosure, a distribution package that is generated in advance is stored in a package DB, and information of a vehicle in which a target device is mounted is stored in a campaign DB. Vehicle related information includes a special flag indicating whether to generate a distribution package at that point in time. A package generation unit generates a distribution package upon receiving a package generation instruction and stores the distribution package in the package DB. When the special flag is in a reset state, the package generation unit reads the distribution package from the package DB and transfers the read distribution package to a package distribution unit. On the other hand, when the special flag is in a set state, the package generation unit generates a distribution package at that point in time.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="104.99mm" wi="158.75mm" file="US20230005305A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="256.79mm" wi="170.52mm" orientation="landscape" file="US20230005305A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="185.67mm" wi="147.32mm" file="US20230005305A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="185.67mm" wi="146.56mm" file="US20230005305A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="249.68mm" wi="146.22mm" orientation="landscape" file="US20230005305A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="251.54mm" wi="170.01mm" orientation="landscape" file="US20230005305A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="217.76mm" wi="168.99mm" orientation="landscape" file="US20230005305A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="253.32mm" wi="169.76mm" orientation="landscape" file="US20230005305A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="251.21mm" wi="171.62mm" orientation="landscape" file="US20230005305A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="149.61mm" wi="156.04mm" file="US20230005305A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="249.51mm" wi="87.63mm" orientation="landscape" file="US20230005305A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="155.28mm" wi="167.39mm" file="US20230005305A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="249.00mm" wi="126.32mm" orientation="landscape" file="US20230005305A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="88.22mm" wi="152.65mm" file="US20230005305A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="249.09mm" wi="99.48mm" orientation="landscape" file="US20230005305A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="238.25mm" wi="134.28mm" file="US20230005305A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="205.15mm" wi="134.79mm" file="US20230005305A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="213.70mm" wi="168.06mm" file="US20230005305A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="250.53mm" wi="148.59mm" file="US20230005305A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="187.11mm" wi="168.32mm" file="US20230005305A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="218.19mm" wi="170.01mm" orientation="landscape" file="US20230005305A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="243.33mm" wi="165.52mm" file="US20230005305A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="252.22mm" wi="168.15mm" orientation="landscape" file="US20230005305A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="178.31mm" wi="139.36mm" file="US20230005305A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="171.37mm" wi="165.86mm" file="US20230005305A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="252.48mm" wi="158.83mm" orientation="landscape" file="US20230005305A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="198.63mm" wi="171.11mm" file="US20230005305A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="198.29mm" wi="131.66mm" file="US20230005305A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="159.60mm" wi="131.23mm" file="US20230005305A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="236.14mm" wi="169.84mm" orientation="landscape" file="US20230005305A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="239.44mm" wi="160.02mm" orientation="landscape" file="US20230005305A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="193.46mm" wi="118.87mm" file="US20230005305A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="212.85mm" wi="170.10mm" orientation="landscape" file="US20230005305A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="206.67mm" wi="121.67mm" orientation="landscape" file="US20230005305A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="244.60mm" wi="125.39mm" orientation="landscape" file="US20230005305A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="206.67mm" wi="108.63mm" orientation="landscape" file="US20230005305A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="244.60mm" wi="135.97mm" orientation="landscape" file="US20230005305A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="226.57mm" wi="124.12mm" orientation="landscape" file="US20230005305A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="245.79mm" wi="131.23mm" orientation="landscape" file="US20230005305A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00039" num="00039"><img id="EMI-D00039" he="226.48mm" wi="124.12mm" orientation="landscape" file="US20230005305A1-20230105-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00040" num="00040"><img id="EMI-D00040" he="249.17mm" wi="139.36mm" orientation="landscape" file="US20230005305A1-20230105-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00041" num="00041"><img id="EMI-D00041" he="215.22mm" wi="168.57mm" orientation="landscape" file="US20230005305A1-20230105-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00042" num="00042"><img id="EMI-D00042" he="208.36mm" wi="169.59mm" orientation="landscape" file="US20230005305A1-20230105-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00043" num="00043"><img id="EMI-D00043" he="217.59mm" wi="160.78mm" orientation="landscape" file="US20230005305A1-20230105-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00044" num="00044"><img id="EMI-D00044" he="225.47mm" wi="158.33mm" orientation="landscape" file="US20230005305A1-20230105-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00045" num="00045"><img id="EMI-D00045" he="251.38mm" wi="168.66mm" orientation="landscape" file="US20230005305A1-20230105-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00046" num="00046"><img id="EMI-D00046" he="253.15mm" wi="170.69mm" orientation="landscape" file="US20230005305A1-20230105-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00047" num="00047"><img id="EMI-D00047" he="252.05mm" wi="160.02mm" orientation="landscape" file="US20230005305A1-20230105-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00048" num="00048"><img id="EMI-D00048" he="231.56mm" wi="166.03mm" orientation="landscape" file="US20230005305A1-20230105-D00048.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00049" num="00049"><img id="EMI-D00049" he="245.53mm" wi="166.29mm" orientation="landscape" file="US20230005305A1-20230105-D00049.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00050" num="00050"><img id="EMI-D00050" he="232.66mm" wi="169.25mm" orientation="landscape" file="US20230005305A1-20230105-D00050.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00051" num="00051"><img id="EMI-D00051" he="244.52mm" wi="169.33mm" orientation="landscape" file="US20230005305A1-20230105-D00051.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00052" num="00052"><img id="EMI-D00052" he="151.21mm" wi="111.93mm" file="US20230005305A1-20230105-D00052.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00053" num="00053"><img id="EMI-D00053" he="157.56mm" wi="160.95mm" file="US20230005305A1-20230105-D00053.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00054" num="00054"><img id="EMI-D00054" he="167.39mm" wi="160.70mm" file="US20230005305A1-20230105-D00054.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00055" num="00055"><img id="EMI-D00055" he="169.84mm" wi="160.78mm" file="US20230005305A1-20230105-D00055.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00056" num="00056"><img id="EMI-D00056" he="171.45mm" wi="160.70mm" file="US20230005305A1-20230105-D00056.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00057" num="00057"><img id="EMI-D00057" he="171.45mm" wi="160.61mm" file="US20230005305A1-20230105-D00057.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00058" num="00058"><img id="EMI-D00058" he="167.72mm" wi="160.70mm" file="US20230005305A1-20230105-D00058.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00059" num="00059"><img id="EMI-D00059" he="171.87mm" wi="160.61mm" file="US20230005305A1-20230105-D00059.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00060" num="00060"><img id="EMI-D00060" he="169.50mm" wi="160.78mm" file="US20230005305A1-20230105-D00060.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00061" num="00061"><img id="EMI-D00061" he="171.79mm" wi="170.26mm" file="US20230005305A1-20230105-D00061.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00062" num="00062"><img id="EMI-D00062" he="157.65mm" wi="160.61mm" file="US20230005305A1-20230105-D00062.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00063" num="00063"><img id="EMI-D00063" he="168.49mm" wi="160.61mm" file="US20230005305A1-20230105-D00063.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00064" num="00064"><img id="EMI-D00064" he="157.48mm" wi="160.70mm" file="US20230005305A1-20230105-D00064.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00065" num="00065"><img id="EMI-D00065" he="171.11mm" wi="160.61mm" file="US20230005305A1-20230105-D00065.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00066" num="00066"><img id="EMI-D00066" he="168.91mm" wi="160.87mm" file="US20230005305A1-20230105-D00066.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00067" num="00067"><img id="EMI-D00067" he="168.83mm" wi="160.70mm" file="US20230005305A1-20230105-D00067.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00068" num="00068"><img id="EMI-D00068" he="168.83mm" wi="160.78mm" file="US20230005305A1-20230105-D00068.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00069" num="00069"><img id="EMI-D00069" he="164.76mm" wi="130.39mm" file="US20230005305A1-20230105-D00069.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00070" num="00070"><img id="EMI-D00070" he="217.93mm" wi="136.14mm" file="US20230005305A1-20230105-D00070.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00071" num="00071"><img id="EMI-D00071" he="242.23mm" wi="144.10mm" file="US20230005305A1-20230105-D00071.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00072" num="00072"><img id="EMI-D00072" he="190.08mm" wi="142.24mm" file="US20230005305A1-20230105-D00072.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00073" num="00073"><img id="EMI-D00073" he="247.06mm" wi="133.69mm" file="US20230005305A1-20230105-D00073.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00074" num="00074"><img id="EMI-D00074" he="142.24mm" wi="127.59mm" file="US20230005305A1-20230105-D00074.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00075" num="00075"><img id="EMI-D00075" he="220.05mm" wi="170.52mm" file="US20230005305A1-20230105-D00075.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00076" num="00076"><img id="EMI-D00076" he="123.70mm" wi="129.37mm" file="US20230005305A1-20230105-D00076.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00077" num="00077"><img id="EMI-D00077" he="250.02mm" wi="144.10mm" file="US20230005305A1-20230105-D00077.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00078" num="00078"><img id="EMI-D00078" he="247.48mm" wi="163.66mm" file="US20230005305A1-20230105-D00078.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00079" num="00079"><img id="EMI-D00079" he="186.35mm" wi="163.15mm" file="US20230005305A1-20230105-D00079.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00080" num="00080"><img id="EMI-D00080" he="164.51mm" wi="129.54mm" file="US20230005305A1-20230105-D00080.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00081" num="00081"><img id="EMI-D00081" he="252.14mm" wi="140.29mm" file="US20230005305A1-20230105-D00081.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00082" num="00082"><img id="EMI-D00082" he="246.13mm" wi="154.01mm" file="US20230005305A1-20230105-D00082.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00083" num="00083"><img id="EMI-D00083" he="206.33mm" wi="156.97mm" file="US20230005305A1-20230105-D00083.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00084" num="00084"><img id="EMI-D00084" he="254.34mm" wi="170.43mm" orientation="landscape" file="US20230005305A1-20230105-D00084.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00085" num="00085"><img id="EMI-D00085" he="233.68mm" wi="160.36mm" file="US20230005305A1-20230105-D00085.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00086" num="00086"><img id="EMI-D00086" he="242.32mm" wi="144.86mm" file="US20230005305A1-20230105-D00086.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00087" num="00087"><img id="EMI-D00087" he="209.97mm" wi="169.42mm" orientation="landscape" file="US20230005305A1-20230105-D00087.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00088" num="00088"><img id="EMI-D00088" he="153.92mm" wi="147.66mm" file="US20230005305A1-20230105-D00088.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00089" num="00089"><img id="EMI-D00089" he="251.29mm" wi="149.44mm" orientation="landscape" file="US20230005305A1-20230105-D00089.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00090" num="00090"><img id="EMI-D00090" he="239.44mm" wi="156.13mm" file="US20230005305A1-20230105-D00090.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00091" num="00091"><img id="EMI-D00091" he="251.38mm" wi="154.86mm" orientation="landscape" file="US20230005305A1-20230105-D00091.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00092" num="00092"><img id="EMI-D00092" he="252.31mm" wi="150.11mm" orientation="landscape" file="US20230005305A1-20230105-D00092.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00093" num="00093"><img id="EMI-D00093" he="250.87mm" wi="152.65mm" orientation="landscape" file="US20230005305A1-20230105-D00093.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00094" num="00094"><img id="EMI-D00094" he="250.53mm" wi="153.59mm" orientation="landscape" file="US20230005305A1-20230105-D00094.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00095" num="00095"><img id="EMI-D00095" he="191.01mm" wi="169.50mm" file="US20230005305A1-20230105-D00095.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00096" num="00096"><img id="EMI-D00096" he="229.62mm" wi="160.87mm" file="US20230005305A1-20230105-D00096.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00097" num="00097"><img id="EMI-D00097" he="142.66mm" wi="126.83mm" file="US20230005305A1-20230105-D00097.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00098" num="00098"><img id="EMI-D00098" he="235.71mm" wi="168.49mm" file="US20230005305A1-20230105-D00098.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00099" num="00099"><img id="EMI-D00099" he="246.55mm" wi="169.59mm" orientation="landscape" file="US20230005305A1-20230105-D00099.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00100" num="00100"><img id="EMI-D00100" he="141.99mm" wi="128.44mm" file="US20230005305A1-20230105-D00100.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00101" num="00101"><img id="EMI-D00101" he="251.21mm" wi="150.28mm" file="US20230005305A1-20230105-D00101.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00102" num="00102"><img id="EMI-D00102" he="246.97mm" wi="148.42mm" file="US20230005305A1-20230105-D00102.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00103" num="00103"><img id="EMI-D00103" he="247.14mm" wi="148.34mm" file="US20230005305A1-20230105-D00103.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00104" num="00104"><img id="EMI-D00104" he="256.29mm" wi="153.84mm" orientation="landscape" file="US20230005305A1-20230105-D00104.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00105" num="00105"><img id="EMI-D00105" he="256.20mm" wi="166.37mm" orientation="landscape" file="US20230005305A1-20230105-D00105.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00106" num="00106"><img id="EMI-D00106" he="157.82mm" wi="128.27mm" file="US20230005305A1-20230105-D00106.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00107" num="00107"><img id="EMI-D00107" he="222.42mm" wi="142.75mm" file="US20230005305A1-20230105-D00107.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00108" num="00108"><img id="EMI-D00108" he="256.79mm" wi="167.47mm" orientation="landscape" file="US20230005305A1-20230105-D00108.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00109" num="00109"><img id="EMI-D00109" he="255.86mm" wi="167.98mm" orientation="landscape" file="US20230005305A1-20230105-D00109.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00110" num="00110"><img id="EMI-D00110" he="209.21mm" wi="122.85mm" orientation="landscape" file="US20230005305A1-20230105-D00110.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00111" num="00111"><img id="EMI-D00111" he="153.67mm" wi="170.43mm" file="US20230005305A1-20230105-D00111.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00112" num="00112"><img id="EMI-D00112" he="198.71mm" wi="171.28mm" file="US20230005305A1-20230105-D00112.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00113" num="00113"><img id="EMI-D00113" he="245.96mm" wi="142.66mm" file="US20230005305A1-20230105-D00113.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00114" num="00114"><img id="EMI-D00114" he="239.69mm" wi="140.38mm" file="US20230005305A1-20230105-D00114.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00115" num="00115"><img id="EMI-D00115" he="213.28mm" wi="118.79mm" orientation="landscape" file="US20230005305A1-20230105-D00115.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00116" num="00116"><img id="EMI-D00116" he="179.07mm" wi="132.25mm" file="US20230005305A1-20230105-D00116.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00117" num="00117"><img id="EMI-D00117" he="209.13mm" wi="135.04mm" orientation="landscape" file="US20230005305A1-20230105-D00117.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00118" num="00118"><img id="EMI-D00118" he="210.74mm" wi="120.65mm" orientation="landscape" file="US20230005305A1-20230105-D00118.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00119" num="00119"><img id="EMI-D00119" he="251.12mm" wi="162.48mm" file="US20230005305A1-20230105-D00119.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00120" num="00120"><img id="EMI-D00120" he="191.85mm" wi="155.36mm" file="US20230005305A1-20230105-D00120.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00121" num="00121"><img id="EMI-D00121" he="179.41mm" wi="142.49mm" file="US20230005305A1-20230105-D00121.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00122" num="00122"><img id="EMI-D00122" he="245.11mm" wi="131.32mm" orientation="landscape" file="US20230005305A1-20230105-D00122.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00123" num="00123"><img id="EMI-D00123" he="251.29mm" wi="131.32mm" orientation="landscape" file="US20230005305A1-20230105-D00123.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00124" num="00124"><img id="EMI-D00124" he="237.41mm" wi="158.33mm" orientation="landscape" file="US20230005305A1-20230105-D00124.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00125" num="00125"><img id="EMI-D00125" he="236.90mm" wi="158.41mm" orientation="landscape" file="US20230005305A1-20230105-D00125.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00126" num="00126"><img id="EMI-D00126" he="141.99mm" wi="130.73mm" file="US20230005305A1-20230105-D00126.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00127" num="00127"><img id="EMI-D00127" he="250.53mm" wi="136.48mm" file="US20230005305A1-20230105-D00127.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00128" num="00128"><img id="EMI-D00128" he="242.32mm" wi="136.23mm" orientation="landscape" file="US20230005305A1-20230105-D00128.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00129" num="00129"><img id="EMI-D00129" he="142.66mm" wi="131.83mm" file="US20230005305A1-20230105-D00129.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00130" num="00130"><img id="EMI-D00130" he="180.51mm" wi="161.88mm" file="US20230005305A1-20230105-D00130.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00131" num="00131"><img id="EMI-D00131" he="251.04mm" wi="170.35mm" file="US20230005305A1-20230105-D00131.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00132" num="00132"><img id="EMI-D00132" he="105.83mm" wi="126.92mm" file="US20230005305A1-20230105-D00132.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00133" num="00133"><img id="EMI-D00133" he="222.42mm" wi="168.74mm" file="US20230005305A1-20230105-D00133.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00134" num="00134"><img id="EMI-D00134" he="251.12mm" wi="166.20mm" file="US20230005305A1-20230105-D00134.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00135" num="00135"><img id="EMI-D00135" he="232.83mm" wi="104.39mm" orientation="landscape" file="US20230005305A1-20230105-D00135.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00136" num="00136"><img id="EMI-D00136" he="220.47mm" wi="126.58mm" file="US20230005305A1-20230105-D00136.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00137" num="00137"><img id="EMI-D00137" he="252.14mm" wi="164.51mm" file="US20230005305A1-20230105-D00137.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00138" num="00138"><img id="EMI-D00138" he="250.44mm" wi="163.66mm" file="US20230005305A1-20230105-D00138.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00139" num="00139"><img id="EMI-D00139" he="249.17mm" wi="128.95mm" file="US20230005305A1-20230105-D00139.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00140" num="00140"><img id="EMI-D00140" he="176.11mm" wi="124.88mm" orientation="landscape" file="US20230005305A1-20230105-D00140.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00141" num="00141"><img id="EMI-D00141" he="175.94mm" wi="124.97mm" orientation="landscape" file="US20230005305A1-20230105-D00141.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00142" num="00142"><img id="EMI-D00142" he="176.28mm" wi="125.05mm" orientation="landscape" file="US20230005305A1-20230105-D00142.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00143" num="00143"><img id="EMI-D00143" he="210.40mm" wi="124.88mm" orientation="landscape" file="US20230005305A1-20230105-D00143.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00144" num="00144"><img id="EMI-D00144" he="249.00mm" wi="123.61mm" orientation="landscape" file="US20230005305A1-20230105-D00144.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00145" num="00145"><img id="EMI-D00145" he="124.63mm" wi="128.10mm" file="US20230005305A1-20230105-D00145.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00146" num="00146"><img id="EMI-D00146" he="227.25mm" wi="169.93mm" file="US20230005305A1-20230105-D00146.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00147" num="00147"><img id="EMI-D00147" he="235.12mm" wi="153.75mm" file="US20230005305A1-20230105-D00147.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00148" num="00148"><img id="EMI-D00148" he="219.79mm" wi="140.72mm" orientation="landscape" file="US20230005305A1-20230105-D00148.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00149" num="00149"><img id="EMI-D00149" he="219.54mm" wi="141.14mm" orientation="landscape" file="US20230005305A1-20230105-D00149.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00150" num="00150"><img id="EMI-D00150" he="218.27mm" wi="138.77mm" orientation="landscape" file="US20230005305A1-20230105-D00150.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00151" num="00151"><img id="EMI-D00151" he="218.02mm" wi="138.60mm" orientation="landscape" file="US20230005305A1-20230105-D00151.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00152" num="00152"><img id="EMI-D00152" he="218.19mm" wi="138.60mm" orientation="landscape" file="US20230005305A1-20230105-D00152.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00153" num="00153"><img id="EMI-D00153" he="187.79mm" wi="157.23mm" file="US20230005305A1-20230105-D00153.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00154" num="00154"><img id="EMI-D00154" he="235.03mm" wi="152.48mm" file="US20230005305A1-20230105-D00154.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00155" num="00155"><img id="EMI-D00155" he="235.20mm" wi="152.48mm" file="US20230005305A1-20230105-D00155.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00156" num="00156"><img id="EMI-D00156" he="187.45mm" wi="154.60mm" file="US20230005305A1-20230105-D00156.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00157" num="00157"><img id="EMI-D00157" he="218.27mm" wi="138.77mm" orientation="landscape" file="US20230005305A1-20230105-D00157.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00158" num="00158"><img id="EMI-D00158" he="214.55mm" wi="129.03mm" file="US20230005305A1-20230105-D00158.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00159" num="00159"><img id="EMI-D00159" he="251.46mm" wi="166.29mm" file="US20230005305A1-20230105-D00159.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00160" num="00160"><img id="EMI-D00160" he="222.08mm" wi="148.08mm" orientation="landscape" file="US20230005305A1-20230105-D00160.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00161" num="00161"><img id="EMI-D00161" he="237.91mm" wi="157.48mm" orientation="landscape" file="US20230005305A1-20230105-D00161.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00162" num="00162"><img id="EMI-D00162" he="197.19mm" wi="132.93mm" file="US20230005305A1-20230105-D00162.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00163" num="00163"><img id="EMI-D00163" he="235.63mm" wi="170.18mm" file="US20230005305A1-20230105-D00163.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00164" num="00164"><img id="EMI-D00164" he="251.63mm" wi="132.84mm" file="US20230005305A1-20230105-D00164.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00165" num="00165"><img id="EMI-D00165" he="180.00mm" wi="133.35mm" file="US20230005305A1-20230105-D00165.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00166" num="00166"><img id="EMI-D00166" he="250.44mm" wi="164.59mm" file="US20230005305A1-20230105-D00166.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00167" num="00167"><img id="EMI-D00167" he="193.89mm" wi="154.35mm" file="US20230005305A1-20230105-D00167.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00168" num="00168"><img id="EMI-D00168" he="193.38mm" wi="152.32mm" file="US20230005305A1-20230105-D00168.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00169" num="00169"><img id="EMI-D00169" he="255.19mm" wi="169.84mm" file="US20230005305A1-20230105-D00169.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00170" num="00170"><img id="EMI-D00170" he="248.41mm" wi="168.06mm" file="US20230005305A1-20230105-D00170.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00171" num="00171"><img id="EMI-D00171" he="224.87mm" wi="169.50mm" orientation="landscape" file="US20230005305A1-20230105-D00171.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00172" num="00172"><img id="EMI-D00172" he="220.81mm" wi="170.60mm" orientation="landscape" file="US20230005305A1-20230105-D00172.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00173" num="00173"><img id="EMI-D00173" he="226.74mm" wi="171.45mm" orientation="landscape" file="US20230005305A1-20230105-D00173.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00174" num="00174"><img id="EMI-D00174" he="222.00mm" wi="155.96mm" orientation="landscape" file="US20230005305A1-20230105-D00174.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00175" num="00175"><img id="EMI-D00175" he="222.00mm" wi="155.36mm" orientation="landscape" file="US20230005305A1-20230105-D00175.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00176" num="00176"><img id="EMI-D00176" he="251.54mm" wi="166.20mm" file="US20230005305A1-20230105-D00176.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00177" num="00177"><img id="EMI-D00177" he="240.37mm" wi="168.74mm" file="US20230005305A1-20230105-D00177.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00178" num="00178"><img id="EMI-D00178" he="241.72mm" wi="168.91mm" file="US20230005305A1-20230105-D00178.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00179" num="00179"><img id="EMI-D00179" he="252.05mm" wi="127.51mm" file="US20230005305A1-20230105-D00179.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00180" num="00180"><img id="EMI-D00180" he="244.09mm" wi="170.10mm" file="US20230005305A1-20230105-D00180.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00181" num="00181"><img id="EMI-D00181" he="158.33mm" wi="168.06mm" file="US20230005305A1-20230105-D00181.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00182" num="00182"><img id="EMI-D00182" he="234.87mm" wi="155.02mm" orientation="landscape" file="US20230005305A1-20230105-D00182.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00183" num="00183"><img id="EMI-D00183" he="228.77mm" wi="141.65mm" file="US20230005305A1-20230105-D00183.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00184" num="00184"><img id="EMI-D00184" he="251.12mm" wi="130.47mm" file="US20230005305A1-20230105-D00184.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00185" num="00185"><img id="EMI-D00185" he="237.57mm" wi="161.12mm" file="US20230005305A1-20230105-D00185.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00186" num="00186"><img id="EMI-D00186" he="188.47mm" wi="159.77mm" file="US20230005305A1-20230105-D00186.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00187" num="00187"><img id="EMI-D00187" he="247.23mm" wi="129.37mm" file="US20230005305A1-20230105-D00187.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00188" num="00188"><img id="EMI-D00188" he="232.16mm" wi="150.88mm" orientation="landscape" file="US20230005305A1-20230105-D00188.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00189" num="00189"><img id="EMI-D00189" he="250.87mm" wi="169.67mm" file="US20230005305A1-20230105-D00189.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00190" num="00190"><img id="EMI-D00190" he="242.32mm" wi="170.18mm" file="US20230005305A1-20230105-D00190.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00191" num="00191"><img id="EMI-D00191" he="234.78mm" wi="168.99mm" file="US20230005305A1-20230105-D00191.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00192" num="00192"><img id="EMI-D00192" he="240.45mm" wi="146.90mm" file="US20230005305A1-20230105-D00192.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00193" num="00193"><img id="EMI-D00193" he="123.78mm" wi="131.32mm" file="US20230005305A1-20230105-D00193.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00194" num="00194"><img id="EMI-D00194" he="207.60mm" wi="171.45mm" file="US20230005305A1-20230105-D00194.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00195" num="00195"><img id="EMI-D00195" he="233.17mm" wi="167.89mm" orientation="landscape" file="US20230005305A1-20230105-D00195.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00196" num="00196"><img id="EMI-D00196" he="215.82mm" wi="133.18mm" file="US20230005305A1-20230105-D00196.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00197" num="00197"><img id="EMI-D00197" he="154.77mm" wi="168.99mm" file="US20230005305A1-20230105-D00197.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00198" num="00198"><img id="EMI-D00198" he="168.32mm" wi="160.70mm" file="US20230005305A1-20230105-D00198.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00199" num="00199"><img id="EMI-D00199" he="165.86mm" wi="165.18mm" file="US20230005305A1-20230105-D00199.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00200" num="00200"><img id="EMI-D00200" he="237.24mm" wi="168.83mm" file="US20230005305A1-20230105-D00200.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00201" num="00201"><img id="EMI-D00201" he="250.11mm" wi="135.30mm" file="US20230005305A1-20230105-D00201.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00202" num="00202"><img id="EMI-D00202" he="249.85mm" wi="168.06mm" orientation="landscape" file="US20230005305A1-20230105-D00202.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00203" num="00203"><img id="EMI-D00203" he="241.81mm" wi="166.96mm" file="US20230005305A1-20230105-D00203.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00204" num="00204"><img id="EMI-D00204" he="248.75mm" wi="170.52mm" file="US20230005305A1-20230105-D00204.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00205" num="00205"><img id="EMI-D00205" he="246.30mm" wi="166.62mm" orientation="landscape" file="US20230005305A1-20230105-D00205.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00206" num="00206"><img id="EMI-D00206" he="244.60mm" wi="170.69mm" orientation="landscape" file="US20230005305A1-20230105-D00206.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00207" num="00207"><img id="EMI-D00207" he="238.17mm" wi="171.20mm" orientation="landscape" file="US20230005305A1-20230105-D00207.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00208" num="00208"><img id="EMI-D00208" he="244.94mm" wi="170.86mm" orientation="landscape" file="US20230005305A1-20230105-D00208.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00209" num="00209"><img id="EMI-D00209" he="241.64mm" wi="171.28mm" orientation="landscape" file="US20230005305A1-20230105-D00209.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00210" num="00210"><img id="EMI-D00210" he="244.18mm" wi="144.19mm" orientation="landscape" file="US20230005305A1-20230105-D00210.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00211" num="00211"><img id="EMI-D00211" he="170.43mm" wi="160.87mm" file="US20230005305A1-20230105-D00211.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00212" num="00212"><img id="EMI-D00212" he="169.76mm" wi="160.70mm" file="US20230005305A1-20230105-D00212.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00213" num="00213"><img id="EMI-D00213" he="169.08mm" wi="161.12mm" file="US20230005305A1-20230105-D00213.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00214" num="00214"><img id="EMI-D00214" he="168.91mm" wi="160.70mm" file="US20230005305A1-20230105-D00214.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00215" num="00215"><img id="EMI-D00215" he="170.60mm" wi="160.70mm" file="US20230005305A1-20230105-D00215.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00216" num="00216"><img id="EMI-D00216" he="157.90mm" wi="171.37mm" file="US20230005305A1-20230105-D00216.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00217" num="00217"><img id="EMI-D00217" he="157.56mm" wi="160.78mm" file="US20230005305A1-20230105-D00217.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00218" num="00218"><img id="EMI-D00218" he="194.14mm" wi="125.73mm" file="US20230005305A1-20230105-D00218.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00219" num="00219"><img id="EMI-D00219" he="251.54mm" wi="138.18mm" file="US20230005305A1-20230105-D00219.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00220" num="00220"><img id="EMI-D00220" he="238.17mm" wi="160.87mm" orientation="landscape" file="US20230005305A1-20230105-D00220.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00221" num="00221"><img id="EMI-D00221" he="250.44mm" wi="159.94mm" file="US20230005305A1-20230105-D00221.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00222" num="00222"><img id="EMI-D00222" he="252.39mm" wi="150.62mm" file="US20230005305A1-20230105-D00222.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00223" num="00223"><img id="EMI-D00223" he="250.02mm" wi="152.82mm" file="US20230005305A1-20230105-D00223.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00224" num="00224"><img id="EMI-D00224" he="248.67mm" wi="148.00mm" orientation="landscape" file="US20230005305A1-20230105-D00224.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00225" num="00225"><img id="EMI-D00225" he="213.53mm" wi="128.10mm" file="US20230005305A1-20230105-D00225.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00226" num="00226"><img id="EMI-D00226" he="142.41mm" wi="128.61mm" file="US20230005305A1-20230105-D00226.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00227" num="00227"><img id="EMI-D00227" he="251.80mm" wi="156.80mm" file="US20230005305A1-20230105-D00227.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00228" num="00228"><img id="EMI-D00228" he="192.53mm" wi="170.43mm" file="US20230005305A1-20230105-D00228.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00229" num="00229"><img id="EMI-D00229" he="253.07mm" wi="157.73mm" orientation="landscape" file="US20230005305A1-20230105-D00229.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00230" num="00230"><img id="EMI-D00230" he="254.34mm" wi="171.03mm" orientation="landscape" file="US20230005305A1-20230105-D00230.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00231" num="00231"><img id="EMI-D00231" he="253.24mm" wi="170.43mm" orientation="landscape" file="US20230005305A1-20230105-D00231.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00232" num="00232"><img id="EMI-D00232" he="257.05mm" wi="168.49mm" orientation="landscape" file="US20230005305A1-20230105-D00232.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00233" num="00233"><img id="EMI-D00233" he="254.08mm" wi="171.28mm" orientation="landscape" file="US20230005305A1-20230105-D00233.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00234" num="00234"><img id="EMI-D00234" he="252.56mm" wi="172.38mm" orientation="landscape" file="US20230005305A1-20230105-D00234.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00235" num="00235"><img id="EMI-D00235" he="252.31mm" wi="171.45mm" orientation="landscape" file="US20230005305A1-20230105-D00235.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00236" num="00236"><img id="EMI-D00236" he="253.41mm" wi="169.08mm" orientation="landscape" file="US20230005305A1-20230105-D00236.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00237" num="00237"><img id="EMI-D00237" he="255.95mm" wi="170.43mm" orientation="landscape" file="US20230005305A1-20230105-D00237.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00238" num="00238"><img id="EMI-D00238" he="254.00mm" wi="170.01mm" orientation="landscape" file="US20230005305A1-20230105-D00238.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00239" num="00239"><img id="EMI-D00239" he="244.69mm" wi="171.28mm" orientation="landscape" file="US20230005305A1-20230105-D00239.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00240" num="00240"><img id="EMI-D00240" he="253.32mm" wi="170.01mm" orientation="landscape" file="US20230005305A1-20230105-D00240.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation application of International Patent Application No. PCT/JP2021/007692 filed on Mar. 1, 2021, which designated the U.S. and claims the benefit of priority from Japanese Patent Application No. 2020-045410 filed on Mar. 16, 2020. The entire disclosure of all of the above application is incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to a center device managing data to be written in a plurality of electronic control unites mounted on vehicles, and a method and a non-transitory computer readable medium storing a program for generating a distribution package including the data.</p><heading id="h-0003" level="1">BACKGROUND ART</heading><p id="p-0004" num="0003">In recent years, a scale of application program for vehicle control, diagnosis, and the like, installed in an electronic control unit (hereinafter, referred to as an ECU) of a vehicle, has been increased due to the diversification of vehicle control such as a driver-assistance function and an autonomous driving function. An opportunity to rewrite (reprogram) an application program of an ECU has been increased in accordance with upgrading based on functional improvement or the like. On the other hand, a technique for connected cars has also been spread with the progress of communication networks or the like. In light of such circumstances, for example, there has been known a technique in which an ECU update program is distributed from a server to an in-vehicle device through Over The Air (OTA), and the update program is rewritten on the vehicle side.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">According to one aspect of the present disclosure, a vehicle related information receiving unit is configured to receive vehicle related information transmitted from the vehicles. The vehicle related information is related to device identification of each of the plurality of ECUs and data identification of data stored in each of the plurality of ECUs. An update data storage unit is configured to store update data for a target ECU that is a target in which data is to be updated among the plurality of ECUs. A vehicle information storage unit is configured to store the vehicle related information along with a plurality of types of the vehicles. A device related information storage unit is configured to store an attribute of the target ECU and update data related information that is related to the update data.</p><p id="p-0006" num="0005">A specification data generation unit is configured to, when the vehicle related information receiving unit receives the vehicle related information, generate specification data based on the information stored in the vehicle information storage unit and the device related information storage unit, the specification data including a device type of the target ECU, the attribute of the target ECU, the update data related information of the target ECU, and information indicating a rewrite environment related to data update in the target ECU. A package generation unit is configured to generate a distribution package including the update data acquired from the update data storage unit and the specification data. Consequently, the device on the vehicle side can receive the specification data transmitted together with the update data, and can appropriately select a target device based on the specification data and write the update data.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0007" num="0006">These and other objects, features, and advantages of the present disclosure will become more apparent from the following detailed description when taken in conjunction with the accompanying drawings. In the drawings:</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating the overall configuration of a vehicle information communication system in a first embodiment,</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram illustrating an electrical configuration of a CGW,</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating an electrical configuration of an ECU,</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram illustrating a connection aspect of a power line,</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating an aspect of packaging reprogramming data and distribution specification data,</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram illustrating an aspect of unpackaging a distribution package,</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating blocks of portions mainly related to each function of a server in the center device,</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is an image diagram illustrating a flow of a process in the center device,</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating an example of vehicle configuration information registered in a configuration information DB,</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram illustrating an example of a program or data registered in an ECU reprogramming data DB,</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram illustrating an example of specification data registered in an ECU metadata DB,</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a diagram illustrating an example of vehicle configuration information registered in an individual vehicle information DB,</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a diagram illustrating an example of distribution package data registered in a package DB,</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a diagram illustrating an example of campaign data registered in the campaign DB,</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart illustrating a process of generating a program or data registered in the ECU reprogramming data DB,</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a flowchart illustrating a process of generating an example of specification data registered in the ECU metadata DB,</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a diagram illustrating an example of the specification data,</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a diagram illustrating an example of a bus load table,</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flowchart illustrating a process of generating a distribution package registered in the package DB,</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is an image diagram illustrating a content of a package file,</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a sequence diagram illustrating a processing procedure executed between a center device and a vehicle-side system in a second embodiment,</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a flowchart illustrating a process performed by the center device,</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is an image diagram illustrating contents of processes performed in steps D<b>6</b> and D<b>7</b> in the flowchart of <figref idref="DRAWINGS">FIG. <b>22</b></figref>,</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a flowchart illustrating a process when a hash value is transmitted from the vehicle-side system to the center device,</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a diagram illustrating an example of a program and data registered in the ECU reprogramming data DB in the third embodiment,</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a diagram illustrating an example of vehicle configuration information registered in the individual vehicle information DB,</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a flowchart illustrating a process performed by the center device,</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is a flowchart illustrating a process of generating difference data,</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is a flowchart illustrating a process of generating a distribution package,</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is a diagram illustrating DCM rewrite specification data,</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is a diagram illustrating CGW rewrite specification data,</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>32</b></figref> is a diagram illustrating distribution specification data,</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>33</b></figref> is a diagram illustrating an aspect of unpackaging a distribution package,</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a diagram illustrating an aspect during normal operation in an embedded type single-bank memory,</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>35</b></figref> is a diagram illustrating an aspect during a rewrite operation in the embedded type single-bank memory,</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is a diagram illustrating an aspect during a normal operation in a download type single-bank memory,</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a diagram illustrating an aspect during a rewrite operation in the download type single-bank memory,</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>38</b></figref> is a diagram illustrating an aspect during normal operation in an embedded type single-bank suspend memory,</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>39</b></figref> is a diagram illustrating an aspect during a rewrite operation in the embedded type single-bank suspend memory,</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>40</b></figref> is a diagram illustrating an aspect during normal operation in a download type single-bank suspend memory,</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>41</b></figref> is a diagram illustrating an aspect during a rewrite operation in the download type single-bank suspend memory,</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>42</b></figref> is a diagram illustrating an aspect during a normal operation in an embedded type double-bank memory,</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>43</b></figref> is a diagram illustrating an aspect during a rewrite operation in the embedded type double-bank memory,</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>44</b></figref> is a diagram illustrating an aspect during normal operation in a download type double-bank memory,</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>45</b></figref> is a diagram illustrating an aspect during a rewrite operation in the download type double-bank memory,</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a diagram illustrating an aspect of rewriting an application program,</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>47</b></figref> is a diagram illustrating an aspect of rewriting an application program,</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a diagram illustrating an aspect of rewriting an application program,</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>49</b></figref> is a timing chart illustrating an aspect in which an application program is rewritten by using power supply control,</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>50</b></figref> is a timing chart illustrating an aspect in which an application program is rewritten by using power supply control,</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>51</b></figref> is a timing chart illustrating an aspect in which the application program is rewritten by using self-retention power,</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>52</b></figref> is a timing chart illustrating an aspect in which the application program is rewritten by using self-retention power,</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>53</b></figref> is a diagram illustrating a phase,</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>54</b></figref> is a diagram illustrating a screen in a normal state,</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram illustrating a screen when a campaign notification occurs,</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a diagram illustrating a screen at the time of campaign notification,</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a diagram illustrating a screen when download is approved,</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>58</b></figref> is a diagram illustrating a screen when the download is approved,</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>59</b></figref> is a diagram illustrating a screen during execution of the download,</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>60</b></figref> is a diagram illustrating a screen during execution of the download,</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>61</b></figref> is a diagram illustrating a screen when the download is completed,</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>62</b></figref> is a diagram illustrating a screen when installation is approved,</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>63</b></figref> is a diagram illustrating a screen when the installation is approved,</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>64</b></figref> is a diagram illustrating a screen during execution of the installation,</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>65</b></figref> is a diagram illustrating a screen during execution of the installation,</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>66</b></figref> is a diagram illustrating a screen when activation is approved,</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>67</b></figref> is a diagram illustrating a screen when IG is ON,</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>68</b></figref> is a diagram illustrating a screen during a check operation,</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>69</b></figref> is a diagram illustrating a screen during the check operation,</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>70</b></figref> is a functional block diagram of a center device,</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>71</b></figref> is a functional block diagram of a DCM,</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>72</b></figref> is a functional block diagram of a CGW,</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>73</b></figref> is a functional block diagram of the CGW,</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>74</b></figref> is a functional block diagram of the ECU,</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>75</b></figref> is a functional block diagram of an in-vehicle display,</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>76</b></figref> is a functional block diagram of a distribution package transmission determination unit,</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>77</b></figref> is a flowchart illustrating a distribution package transmission determination process,</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>78</b></figref> is a functional block diagram of a distribution package download determination unit,</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>79</b></figref> is a flowchart illustrating a distribution package download determination process,</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>80</b></figref> is a functional block diagram of a write data transfer determination unit,</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>81</b></figref> is a flowchart illustrating a write data transfer determination process,</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>82</b></figref> is a functional block diagram of a write data acquisition determination unit,</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>83</b></figref> is a flowchart illustrating a write data acquisition determination process,</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>84</b></figref> is a functional block diagram of an installation instruction determination unit,</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>85</b></figref> is a flowchart illustrating an installation instruction determination process,</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>86</b></figref> is a diagram illustrating an aspect of giving an instruction for installation,</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>87</b></figref> is a diagram illustrating an aspect of giving an instruction for installation,</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>88</b></figref> is a diagram illustrating an aspect of generating a random number value,</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>89</b></figref> is a functional block diagram of a security access key management unit,</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>90</b></figref> is a flowchart illustrating a security access key generation process,</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>91</b></figref> is a diagram illustrating an aspect of generating a security access key,</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>92</b></figref> is a flowchart illustrating a process of erasing a security access key,</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>93</b></figref> is a diagram illustrating a flow of a process related to verification of write data,</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>94</b></figref> is a functional block diagram of a write data verification unit,</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>95</b></figref> is a flowchart illustrating a write data verification process,</p><p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. <b>96</b></figref> is a diagram illustrating an aspect in which a process related to verification of write data is distributed,</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>97</b></figref> is a diagram illustrating an aspect in which the process related to verification of write data is distributed,</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>98</b></figref> is a diagram illustrating an aspect in which the process related to verification of write data is distributed,</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>99</b></figref> is a diagram illustrating an aspect in which the process related to verification of write data is distributed,</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>100</b></figref> is a diagram illustrating a flow of verification of write data and rewriting of an application program,</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>101</b></figref> is a diagram illustrating a flow of verification of the write data and rewriting of the application program,</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>102</b></figref> is a functional block diagram of a data storage bank information transmission control unit,</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>103</b></figref> is a flowchart illustrating a data storage bank information transmission control process,</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIG. <b>104</b></figref> is a sequence diagram illustrating an aspect of performing a notification of double-bank rewrite information,</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>105</b></figref> is a functional block diagram of a power supply management unit for a non-rewrite target,</p><p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. <b>106</b></figref> is a flowchart illustrating a power supply management process for a non-rewrite target,</p><p id="p-0114" num="0113"><figref idref="DRAWINGS">FIG. <b>107</b></figref> is a diagram illustrating transition to a start state, a stop state, and a sleep state,</p><p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. <b>108</b></figref> is a diagram illustrating the transition of the start state, stop state, and sleep state,</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>109</b></figref> is a diagram illustrating a connection aspect of power lines,</p><p id="p-0117" num="0116"><figref idref="DRAWINGS">FIG. <b>110</b></figref> is a flowchart illustrating a remaining battery charge monitoring process,</p><p id="p-0118" num="0117"><figref idref="DRAWINGS">FIG. <b>111</b></figref> is a functional block diagram of a file transfer control unit,</p><p id="p-0119" num="0118"><figref idref="DRAWINGS">FIG. <b>112</b></figref> is a flowchart illustrating a file transfer control process,</p><p id="p-0120" num="0119"><figref idref="DRAWINGS">FIG. <b>113</b></figref> is a diagram illustrating an aspect of exchanging files,</p><p id="p-0121" num="0120"><figref idref="DRAWINGS">FIG. <b>114</b></figref> is a diagram illustrating an aspect of exchanging files,</p><p id="p-0122" num="0121"><figref idref="DRAWINGS">FIG. <b>115</b></figref> is a diagram illustrating divided files and write files,</p><p id="p-0123" num="0122"><figref idref="DRAWINGS">FIG. <b>116</b></figref> is a diagram illustrating an aspect in which the CGW transmits a transfer request to the DCM,</p><p id="p-0124" num="0123"><figref idref="DRAWINGS">FIG. <b>117</b></figref> is a diagram illustrating an aspect in which the CGW transmits a transfer request to the DCM,</p><p id="p-0125" num="0124"><figref idref="DRAWINGS">FIG. <b>118</b></figref> is a diagram illustrating an aspect in which the CGW distributes write data to a rewrite target ECU,</p><p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. <b>119</b></figref> is a diagram illustrating an aspect in which the CGW distributes the write data to the rewrite target ECU,</p><p id="p-0127" num="0126"><figref idref="DRAWINGS">FIG. <b>120</b></figref> is a diagram illustrating an aspect in which the CGW distributes the write data to the rewrite target ECU,</p><p id="p-0128" num="0127"><figref idref="DRAWINGS">FIG. <b>121</b></figref> is a diagram illustrating a connection aspect of the ECU,</p><p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. <b>122</b></figref> is a functional block diagram of a write data distribution control unit,</p><p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. <b>123</b></figref> is a diagram illustrating a bus load table,</p><p id="p-0131" num="0130"><figref idref="DRAWINGS">FIG. <b>124</b></figref> is a diagram illustrating a table to which the rewrite target ECU belongs,</p><p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. <b>125</b></figref> is a flowchart illustrating a write data distribution control process,</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>126</b></figref> is a diagram illustrating an aspect of distributing write data,</p><p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. <b>127</b></figref> is a diagram illustrating an aspect of distributing write data,</p><p id="p-0135" num="0134"><figref idref="DRAWINGS">FIG. <b>128</b></figref> is a diagram illustrating an aspect of distributing write data while a vehicle is traveling,</p><p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. <b>129</b></figref> is a diagram illustrating an aspect of distributing write data during parking,</p><p id="p-0137" num="0136"><figref idref="DRAWINGS">FIG. <b>130</b></figref> is a diagram illustrating a distribution amount of write data,</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>131</b></figref> is a diagram illustrating a distribution amount of write data,</p><p id="p-0139" num="0138"><figref idref="DRAWINGS">FIG. <b>132</b></figref> is a functional block diagram of an activation request instruction unit,</p><p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. <b>133</b></figref> is a flowchart illustrating an activation request instruction process,</p><p id="p-0141" num="0140"><figref idref="DRAWINGS">FIG. <b>134</b></figref> is a diagram illustrating an aspect of giving an instruction for an activation request,</p><p id="p-0142" num="0141"><figref idref="DRAWINGS">FIG. <b>135</b></figref> is a functional block diagram of an activation execution control unit,</p><p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. <b>136</b></figref> is a flowchart illustrating a rewrite process,</p><p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. <b>137</b></figref> is a flowchart illustrating an activation execution control process,</p><p id="p-0145" num="0144"><figref idref="DRAWINGS">FIG. <b>138</b></figref> is a functional block diagram of a rewrite target grouping unit,</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>139</b></figref> is a flowchart illustrating a rewrite target group management process,</p><p id="p-0147" num="0146"><figref idref="DRAWINGS">FIG. <b>140</b></figref> is a flowchart illustrating the rewrite target group management process,</p><p id="p-0148" num="0147"><figref idref="DRAWINGS">FIG. <b>141</b></figref> is a diagram illustrating an aspect of grouping rewrite targets,</p><p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. <b>142</b></figref> is a functional block diagram of a rollback execution control unit,</p><p id="p-0150" num="0149"><figref idref="DRAWINGS">FIG. <b>143</b></figref> is a flowchart illustrating a rollback method specifying process,</p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. <b>144</b></figref> is a flowchart illustrating a cancellation request determination process,</p><p id="p-0152" num="0151"><figref idref="DRAWINGS">FIG. <b>145</b></figref> is a flowchart illustrating the cancellation request determination process,</p><p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. <b>146</b></figref> is a flowchart illustrating the cancellation request determination process,</p><p id="p-0154" num="0153"><figref idref="DRAWINGS">FIG. <b>147</b></figref> is a flowchart illustrating the cancellation request determination process,</p><p id="p-0155" num="0154"><figref idref="DRAWINGS">FIG. <b>148</b></figref> is a flowchart illustrating the cancellation request determination process,</p><p id="p-0156" num="0155"><figref idref="DRAWINGS">FIG. <b>149</b></figref> is a diagram illustrating an aspect of executing rollback,</p><p id="p-0157" num="0156"><figref idref="DRAWINGS">FIG. <b>150</b></figref> is a diagram illustrating an aspect of executing the rollback,</p><p id="p-0158" num="0157"><figref idref="DRAWINGS">FIG. <b>151</b></figref> is a diagram illustrating an aspect of executing the rollback,</p><p id="p-0159" num="0158"><figref idref="DRAWINGS">FIG. <b>152</b></figref> is a diagram illustrating an aspect of executing the rollback,</p><p id="p-0160" num="0159"><figref idref="DRAWINGS">FIG. <b>153</b></figref> is a diagram illustrating an aspect of executing the rollback,</p><p id="p-0161" num="0160"><figref idref="DRAWINGS">FIG. <b>154</b></figref> is a functional block diagram of a rewrite progress situation display control unit,</p><p id="p-0162" num="0161"><figref idref="DRAWINGS">FIG. <b>155</b></figref> is a flowchart illustrating a rewrite progress situation display control process,</p><p id="p-0163" num="0162"><figref idref="DRAWINGS">FIG. <b>156</b></figref> is a flowchart illustrating the rewrite progress situation display control process,</p><p id="p-0164" num="0163"><figref idref="DRAWINGS">FIG. <b>157</b></figref> is a diagram illustrating a rewrite progress situation screen,</p><p id="p-0165" num="0164"><figref idref="DRAWINGS">FIG. <b>158</b></figref> is a diagram illustrating the rewrite progress situation screen,</p><p id="p-0166" num="0165"><figref idref="DRAWINGS">FIG. <b>159</b></figref> is a diagram illustrating the rewrite progress situation screen,</p><p id="p-0167" num="0166"><figref idref="DRAWINGS">FIG. <b>160</b></figref> is a diagram illustrating the rewrite progress situation screen,</p><p id="p-0168" num="0167"><figref idref="DRAWINGS">FIG. <b>161</b></figref> is a diagram illustrating the rewrite progress situation screen,</p><p id="p-0169" num="0168"><figref idref="DRAWINGS">FIG. <b>162</b></figref> is a diagram illustrating transition of progress graph display,</p><p id="p-0170" num="0169"><figref idref="DRAWINGS">FIG. <b>163</b></figref> is a diagram illustrating the transition of the progress graph display,</p><p id="p-0171" num="0170"><figref idref="DRAWINGS">FIG. <b>164</b></figref> is a diagram illustrating the transition of the progress graph display,</p><p id="p-0172" num="0171"><figref idref="DRAWINGS">FIG. <b>165</b></figref> is a diagram illustrating the transition of the progress graph display,</p><p id="p-0173" num="0172"><figref idref="DRAWINGS">FIG. <b>166</b></figref> is a diagram illustrating a rewrite progress situation screen,</p><p id="p-0174" num="0173"><figref idref="DRAWINGS">FIG. <b>167</b></figref> is a functional block diagram of a difference data consistency determination unit,</p><p id="p-0175" num="0174"><figref idref="DRAWINGS">FIG. <b>168</b></figref> is a flowchart illustrating a difference data consistency determination process,</p><p id="p-0176" num="0175"><figref idref="DRAWINGS">FIG. <b>169</b></figref> is a diagram illustrating an aspect of determining the consistency of difference data,</p><p id="p-0177" num="0176"><figref idref="DRAWINGS">FIG. <b>170</b></figref> is a diagram illustrating an aspect of determining the consistency of difference data,</p><p id="p-0178" num="0177"><figref idref="DRAWINGS">FIG. <b>171</b></figref> is a functional block diagram of a rewrite execution control unit,</p><p id="p-0179" num="0178"><figref idref="DRAWINGS">FIG. <b>172</b></figref> is a flowchart illustrating a normal operation process,</p><p id="p-0180" num="0179"><figref idref="DRAWINGS">FIG. <b>173</b></figref> is a flowchart illustrating a rewrite operation process,</p><p id="p-0181" num="0180"><figref idref="DRAWINGS">FIG. <b>174</b></figref> is a flowchart illustrating an information notification process,</p><p id="p-0182" num="0181"><figref idref="DRAWINGS">FIG. <b>175</b></figref> is a flowchart illustrating a rewrite program verification process,</p><p id="p-0183" num="0182"><figref idref="DRAWINGS">FIG. <b>176</b></figref> is a diagram illustrating an aspect of transmitting identification information and write data,</p><p id="p-0184" num="0183"><figref idref="DRAWINGS">FIG. <b>177</b></figref> is a diagram illustrating an aspect of transmitting the identification information and the write data,</p><p id="p-0185" num="0184"><figref idref="DRAWINGS">FIG. <b>178</b></figref> is a flowchart illustrating an installation instruction process,</p><p id="p-0186" num="0185"><figref idref="DRAWINGS">FIG. <b>179</b></figref> is a functional block diagram of a session establishment unit,</p><p id="p-0187" num="0186"><figref idref="DRAWINGS">FIG. <b>180</b></figref> is a diagram illustrating a configuration of a program,</p><p id="p-0188" num="0187"><figref idref="DRAWINGS">FIG. <b>181</b></figref> is a diagram illustrating state transition,</p><p id="p-0189" num="0188"><figref idref="DRAWINGS">FIG. <b>182</b></figref> is a diagram illustrating the state transition,</p><p id="p-0190" num="0189"><figref idref="DRAWINGS">FIG. <b>183</b></figref> is a diagram illustrating the state transition,</p><p id="p-0191" num="0190"><figref idref="DRAWINGS">FIG. <b>184</b></figref> is a diagram illustrating session arbitration,</p><p id="p-0192" num="0191"><figref idref="DRAWINGS">FIG. <b>185</b></figref> is a diagram illustrating session arbitration,</p><p id="p-0193" num="0192"><figref idref="DRAWINGS">FIG. <b>186</b></figref> is a flowchart illustrating a state transition management process of a first state,</p><p id="p-0194" num="0193"><figref idref="DRAWINGS">FIG. <b>187</b></figref> is a flowchart illustrating the state transition management process of the first state,</p><p id="p-0195" num="0194"><figref idref="DRAWINGS">FIG. <b>188</b></figref> is a flowchart illustrating the state transition management process of the first state,</p><p id="p-0196" num="0195"><figref idref="DRAWINGS">FIG. <b>189</b></figref> is a flowchart illustrating a state transition management process of a second state,</p><p id="p-0197" num="0196"><figref idref="DRAWINGS">FIG. <b>190</b></figref> is a flowchart illustrating the state transition management process of the second state,</p><p id="p-0198" num="0197"><figref idref="DRAWINGS">FIG. <b>191</b></figref> is a diagram illustrating a configuration of a program,</p><p id="p-0199" num="0198"><figref idref="DRAWINGS">FIG. <b>192</b></figref> is a diagram illustrating state transition,</p><p id="p-0200" num="0199"><figref idref="DRAWINGS">FIG. <b>193</b></figref> is a functional block diagram of a retry point specifying unit,</p><p id="p-0201" num="0200"><figref idref="DRAWINGS">FIG. <b>194</b></figref> is a diagram illustrating a configuration of a flash memory,</p><p id="p-0202" num="0201"><figref idref="DRAWINGS">FIG. <b>195</b></figref> is a flowchart illustrating a process flag setting process,</p><p id="p-0203" num="0202"><figref idref="DRAWINGS">FIG. <b>196</b></figref> is a flowchart illustrating a process flag determination process,</p><p id="p-0204" num="0203"><figref idref="DRAWINGS">FIG. <b>197</b></figref> is a flowchart illustrating the process flag determination process,</p><p id="p-0205" num="0204"><figref idref="DRAWINGS">FIG. <b>198</b></figref> is a functional block diagram of a progress state synchronization control unit,</p><p id="p-0206" num="0205"><figref idref="DRAWINGS">FIG. <b>199</b></figref> is a functional block diagram of the progress state synchronization control unit,</p><p id="p-0207" num="0206"><figref idref="DRAWINGS">FIG. <b>200</b></figref> is a diagram illustrating an aspect of transmitting and receiving a progress state signal,</p><p id="p-0208" num="0207"><figref idref="DRAWINGS">FIG. <b>201</b></figref> is a flowchart illustrating a progress state synchronization control process,</p><p id="p-0209" num="0208"><figref idref="DRAWINGS">FIG. <b>202</b></figref> is a flowchart illustrating the progress state synchronization control process,</p><p id="p-0210" num="0209"><figref idref="DRAWINGS">FIG. <b>203</b></figref> is a flowchart illustrating a progress state display process,</p><p id="p-0211" num="0210"><figref idref="DRAWINGS">FIG. <b>204</b></figref> is a functional block diagram of a display control information transmission control unit,</p><p id="p-0212" num="0211"><figref idref="DRAWINGS">FIG. <b>205</b></figref> is a flowchart illustrating a display control information transmission control process,</p><p id="p-0213" num="0212"><figref idref="DRAWINGS">FIG. <b>206</b></figref> is a functional block diagram of a display control information reception control unit,</p><p id="p-0214" num="0213"><figref idref="DRAWINGS">FIG. <b>207</b></figref> is a flowchart illustrating a display control information reception control process,</p><p id="p-0215" num="0214"><figref idref="DRAWINGS">FIG. <b>208</b></figref> is a diagram illustrating information included in distribution specification data,</p><p id="p-0216" num="0215"><figref idref="DRAWINGS">FIG. <b>209</b></figref> is a functional block diagram of a progress display screen display control unit,</p><p id="p-0217" num="0216"><figref idref="DRAWINGS">FIG. <b>210</b></figref> is a diagram illustrating rewrite specification data,</p><p id="p-0218" num="0217"><figref idref="DRAWINGS">FIG. <b>211</b></figref> is a diagram illustrating a screen during menu selection,</p><p id="p-0219" num="0218"><figref idref="DRAWINGS">FIG. <b>212</b></figref> is a diagram illustrating a screen during user selection,</p><p id="p-0220" num="0219"><figref idref="DRAWINGS">FIG. <b>213</b></figref> is a diagram illustrating a screen during user registration,</p><p id="p-0221" num="0220"><figref idref="DRAWINGS">FIG. <b>214</b></figref> is a flowchart illustrating a progress display screen display control process,</p><p id="p-0222" num="0221"><figref idref="DRAWINGS">FIG. <b>215</b></figref> is a flowchart illustrating the progress display screen display control process,</p><p id="p-0223" num="0222"><figref idref="DRAWINGS">FIG. <b>216</b></figref> is a diagram illustrating a message frame,</p><p id="p-0224" num="0223"><figref idref="DRAWINGS">FIG. <b>217</b></figref> is a diagram illustrating a screen when activation is approved,</p><p id="p-0225" num="0224"><figref idref="DRAWINGS">FIG. <b>218</b></figref> is a diagram illustrating setting of item display availability,</p><p id="p-0226" num="0225"><figref idref="DRAWINGS">FIG. <b>219</b></figref> is a diagram illustrating the setting of item display availability,</p><p id="p-0227" num="0226"><figref idref="DRAWINGS">FIG. <b>220</b></figref> is a diagram illustrating a screen when activation is approved,</p><p id="p-0228" num="0227"><figref idref="DRAWINGS">FIG. <b>221</b></figref> is a diagram illustrating an aspect of data communication,</p><p id="p-0229" num="0228"><figref idref="DRAWINGS">FIG. <b>222</b></figref> is a diagram illustrating a message frame during a campaign notification,</p><p id="p-0230" num="0229"><figref idref="DRAWINGS">FIG. <b>223</b></figref> is a diagram illustrating a message frame when download is approved,</p><p id="p-0231" num="0230"><figref idref="DRAWINGS">FIG. <b>224</b></figref> is a diagram illustrating a message frame when installation is approved,</p><p id="p-0232" num="0231"><figref idref="DRAWINGS">FIG. <b>225</b></figref> is a diagram illustrating the message frame when activation is approved,</p><p id="p-0233" num="0232"><figref idref="DRAWINGS">FIG. <b>226</b></figref> is a diagram illustrating screen transition,</p><p id="p-0234" num="0233"><figref idref="DRAWINGS">FIG. <b>227</b></figref> is a diagram illustrating a screen when a campaign notification occurs,</p><p id="p-0235" num="0234"><figref idref="DRAWINGS">FIG. <b>228</b></figref> is a diagram illustrating a screen when download is approved,</p><p id="p-0236" num="0235"><figref idref="DRAWINGS">FIG. <b>229</b></figref> is a diagram illustrating a screen when the download is approved,</p><p id="p-0237" num="0236"><figref idref="DRAWINGS">FIG. <b>230</b></figref> is a diagram illustrating a screen during execution of download,</p><p id="p-0238" num="0237"><figref idref="DRAWINGS">FIG. <b>231</b></figref> is a diagram illustrating a screen when download is completed,</p><p id="p-0239" num="0238"><figref idref="DRAWINGS">FIG. <b>232</b></figref> is a diagram illustrating a screen when installation is approved,</p><p id="p-0240" num="0239"><figref idref="DRAWINGS">FIG. <b>233</b></figref> is a diagram illustrating a screen when activation is approved,</p><p id="p-0241" num="0240"><figref idref="DRAWINGS">FIG. <b>234</b></figref> is a functional block diagram of a program update notification control unit,</p><p id="p-0242" num="0241"><figref idref="DRAWINGS">FIG. <b>235</b></figref> is a flowchart illustrating a program update notification control process,</p><p id="p-0243" num="0242"><figref idref="DRAWINGS">FIG. <b>236</b></figref> is a diagram illustrating an indicator notification aspect,</p><p id="p-0244" num="0243"><figref idref="DRAWINGS">FIG. <b>237</b></figref> is a diagram illustrating transition of a notification aspect in a case where a rewrite target is a double-bank memory,</p><p id="p-0245" num="0244"><figref idref="DRAWINGS">FIG. <b>238</b></figref> is a diagram illustrating transition of a notification aspect in a case where a rewrite target is a single-bank suspend memory,</p><p id="p-0246" num="0245"><figref idref="DRAWINGS">FIG. <b>239</b></figref> is a diagram illustrating transition of a notification aspect in a case where a rewrite target is a single-bank memory,</p><p id="p-0247" num="0246"><figref idref="DRAWINGS">FIG. <b>240</b></figref> is a diagram illustrating a connection aspect,</p><p id="p-0248" num="0247"><figref idref="DRAWINGS">FIG. <b>241</b></figref> is a functional block of a self-retention power execution control unit in the CGW,</p><p id="p-0249" num="0248"><figref idref="DRAWINGS">FIG. <b>242</b></figref> is a functional block of a self-retention power execution control unit in the ECU,</p><p id="p-0250" num="0249"><figref idref="DRAWINGS">FIG. <b>243</b></figref> is a flowchart illustrating an execution control process for self-retention power in the CGW,</p><p id="p-0251" num="0250"><figref idref="DRAWINGS">FIG. <b>244</b></figref> is a flowchart illustrating an execution control process for self-retention power in the ECU,</p><p id="p-0252" num="0251"><figref idref="DRAWINGS">FIG. <b>245</b></figref> is a diagram illustrating a period in which self-retention power is required,</p><p id="p-0253" num="0252"><figref idref="DRAWINGS">FIG. <b>246</b></figref> is an overall sequence diagram illustrating an aspect of rewriting an application program,</p><p id="p-0254" num="0253"><figref idref="DRAWINGS">FIG. <b>247</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0255" num="0254"><figref idref="DRAWINGS">FIG. <b>248</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0256" num="0255"><figref idref="DRAWINGS">FIG. <b>249</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0257" num="0256"><figref idref="DRAWINGS">FIG. <b>250</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0258" num="0257"><figref idref="DRAWINGS">FIG. <b>251</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0259" num="0258"><figref idref="DRAWINGS">FIG. <b>252</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0260" num="0259"><figref idref="DRAWINGS">FIG. <b>253</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0261" num="0260"><figref idref="DRAWINGS">FIG. <b>254</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program,</p><p id="p-0262" num="0261"><figref idref="DRAWINGS">FIG. <b>255</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program, and</p><p id="p-0263" num="0262"><figref idref="DRAWINGS">FIG. <b>256</b></figref> is an overall sequence diagram illustrating an aspect of rewriting the application program.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0264" num="0263">To begin with, a relevant technology will be described first only for understanding the following embodiments. As described above, there are various possible forms of rewriting the update program distributed through OTA on the vehicle side, but it is general users of the vehicle that are involved in the market. Thus, it is desired that a center distributes necessary information such that a device on a vehicle side can perform flexible control.</p><p id="p-0265" num="0264">The present disclosure has been made in view of the above circumstances, and one objective thereof is to provide a center device capable of generating a distribution package including information necessary for rewriting the update program on the vehicle side, a distribution package generation method, and a distribution package generation program.</p><p id="p-0266" num="0265">According to one aspect of the present disclosure, a vehicle related information receiving unit is configured to receive vehicle related information transmitted from the vehicles. The vehicle related information is related to device identification of each of the plurality of ECUs and data identification of data stored in each of the plurality of ECUs. An update data storage unit is configured to store update data for a target ECU that is a target in which data is to be updated among the plurality of ECUs. A vehicle information storage unit is configured to store the vehicle related information along with a plurality of types of the vehicles. A device related information storage unit is configured to store an attribute of the target ECU and update data related information that is related to the update data.</p><p id="p-0267" num="0266">A specification data generation unit is configured to, when the vehicle related information receiving unit receives the vehicle related information, generate specification data based on the information stored in the vehicle information storage unit and the device related information storage unit, the specification data including a device type of the target ECU, the attribute of the target ECU, the update data related information of the target ECU, and information indicating a rewrite environment related to data update in the target ECU. A package generation unit is configured to generate a distribution package including the update data acquired from the update data storage unit and the specification data. Consequently, the device on the vehicle side can receive the specification data transmitted together with the update data, and can appropriately select a target device based on the specification data and write the update data.</p><p id="p-0268" num="0267">According to a second aspect of the present disclosure, a distribution package storage unit is configured to store the distribution package that is generated upon receiving a generation instruction for each of the plurality of types of the vehicles. The vehicle related information received by the vehicle related information receiving unit includes a dynamic generation flag indicating whether to generate the distribution package. When the dynamic generation flag is not set, the package distribution unit is configured to read the distribution package from the distribution package storage unit and distribute the read distribution package, and when the dynamic generation flag is set, the package generation unit is configured to generate the distribution package at that point in time and the package distribution unit is configured to distribute the generated distribution package. With this configuration, depending on a state of the dynamic generation flag included in the vehicle related information, it is possible to flexibly determine whether the distribution package that is already generated can be read and used, or the distribution package that is dynamically generated at that time can be used.</p><p id="p-0269" num="0268">According to a third aspect of the present disclosure, a distribution package generation method comprises: receiving vehicle related information transmitted from vehicles, the vehicle related information being related to device identification of each of a plurality of electronic control units (ECUs) and data identification of data stored in the device; generating, regardless of whether a combination in the vehicle related information is approved, specification data including a device type of a target ECU, an attribute of the target ECU, update data related information of the target ECU, and information indicating a rewrite environment related to data update in the target ECU based on information stored in a vehicle information storage unit, an update data storage unit, and a device related information storage unit, the vehicle information storage unit storing the vehicle related information that is related to the device identification of each of the plurality of ECUs and the data identification of the data stored in each of the plurality of ECUs along with a plurality of types of the vehicles, the update data storage unit storing update data for the target ECU that is a target in which data is to be updated among the plurality of ECUs, and the device related information storage unit storing the attribute of the target ECU and the update data related information that is related to the update data; and generating a distribution package including the update data and the specification data.</p><p id="p-0270" num="0269">According to a fourth aspect of the present disclosure, a non-transitory computer readable medium storing a distribution package generation program for a center device that is configured to manage data to be written in a plurality of electronic control units (ECUs) mounted on each of vehicles. The center device includes: a vehicle related information receiving unit that is configured to receive vehicle related information transmitted from the vehicles, the vehicle related information being related to device identification of each of the plurality of ECUs and data identification of data stored in the device; an update data storage unit that is configured to store update data for a target ECU that is a target in which data is to be updated among the plurality of ECUs; a vehicle information storage unit that is configured to store the vehicle related information that is related to the device identification of each of the plurality of ECUs and the data identification of the data stored in each of the plurality of ECUs along with a plurality of types of the vehicles; and a device related information storage unit that is configured to store an attribute of the target ECU and update data related information that is related to the update data. The program includes instructions configured to, when executed by the center device, causing the center device to: when the vehicle related information is received, generate, regardless of whether a combination in the vehicle related information is approved, specification data including a device type of the target ECU, the attribute of the target ECU, the update data related information of the target ECU, and information indicating a rewrite environment related to data update in the target ECU based on the information stored in the vehicle information storage unit, the update data storage unit, and the device related information storage unit, the vehicle information storage unit storing the vehicle related information that is related to the device identification of each of the plurality of ECUs and the data identification of the data stored in each of the plurality of ECUs along with the plurality of types of the vehicles, the update data storage unit storing update data for the target ECU that is a target in which data is to be updated among the plurality of ECUs, and the device related information storage unit storing the attribute of the target ECU and the update data related information that is related to the update data; and generate a distribution package including the update data and the specification data.</p><heading id="h-0007" level="1">First Embodiment</heading><p id="p-0271" num="0270">Hereinafter, a first embodiment of the present invention will be described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>20</b></figref>. A vehicle program rewriting system is a system capable of rewriting an application program such as vehicle control and diagnosis of an ECU (Electronic Control Unit) mounted on a vehicle through OTA. As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a vehicle program rewriting system <b>1</b> includes a center device <b>3</b> on a communication network <b>2</b> side, a vehicle-side system <b>4</b> on a vehicle side, and a display terminal <b>5</b>. The communication network <b>2</b> is configured to include, for example, a mobile object communication network such as a 4G line, the Internet, and Wireless Fidelity (Wi-Fi (registered trademark)).</p><p id="p-0272" num="0271">The display terminal <b>5</b> is a terminal having a function of receiving operation input from a user and a function of displaying various screens, and is, for example, a mobile terminal <b>6</b> such as a smartphone or a tablet computer that can be carried by a user, and an in-vehicle display <b>7</b> such as a display or a meter display that is also used as a navigation function disposed in a vehicle compartment. The mobile terminal <b>6</b> can be connected to the communication network <b>2</b> as long as the mobile terminal <b>6</b> is within a communication range of a mobile object communication network. The in-vehicle display <b>7</b> is connected to the vehicle-side system <b>4</b>.</p><p id="p-0273" num="0272">As long as a user is located outside the vehicle compartment and is within the communication range of the mobile object communication network, the user can perform operation input while checking various screens related to rewriting of an application program with the mobile terminal <b>6</b>, and can perform a procedure related to the rewriting of the application program. In the vehicle compartment, the user can perform operation input while checking various screens related to rewriting of the application program with the in-vehicle display <b>7</b>, and can perform a procedure related to rewriting of the application program. That is, the user can use the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> separately outside the vehicle compartment and in the vehicle compartment, and can perform a procedure related to rewriting of the application program.</p><p id="p-0274" num="0273">The center device <b>3</b> controls an OTA function of the communication network <b>2</b> side in the vehicle program rewriting system <b>1</b>, and functions as an OTA center. The center device <b>3</b> includes a file server <b>8</b>, a web server <b>9</b>, and a management server <b>10</b>, and each of the servers <b>8</b> to <b>10</b> is configured to be able to perform data communication with each other.</p><p id="p-0275" num="0274">The file server <b>8</b> has a function of managing an application program transmitted from the center device <b>3</b> to the vehicle-side system <b>4</b>, and is a server that manages an ECU program provided from a supplier or the like that is a provider of the application program, information associated with the ECU program, distribution specification data provided from an original equipment manufacturer (OEM), vehicle conditions acquired from the vehicle-side system <b>4</b>, and the like. The file server <b>8</b> can perform data communication with the vehicle-side system <b>4</b> via the communication network <b>2</b>, and transmits a distribution package in which the reprogramming data and the distribution specification data are packaged to the vehicle-side system <b>4</b> when a download request for the distribution package is generated. The web server <b>9</b> is a server that manages web information, and provides various screens related to rewriting an application program to the mobile terminal <b>6</b>. The management server <b>10</b> manages personal information of a user registered in a service of rewriting an application program, a rewrite history of an application program for each vehicle, and the like.</p><p id="p-0276" num="0275">The vehicle-side system <b>4</b> has a master device <b>11</b>. The master device <b>11</b> has a DCM <b>12</b> and a CGW <b>13</b>, and the DCM <b>12</b> and the CGW <b>13</b> are connected to each other via a first bus <b>14</b> to be able to perform data communication. The DCM <b>12</b> is an in-vehicle communication device that performs data communication with the center device <b>3</b> via the communication network <b>2</b>, and, when a distribution package is downloaded from the file server <b>8</b>, extracts write data from the distribution package, and transfers the write data to the CGW <b>13</b>.</p><p id="p-0277" num="0276">The CGW <b>13</b> is a vehicle gateway device having a data relay function, and, when the write data is acquired from the DCM <b>12</b>, distributes the write data to a rewrite target ECU in which an application program is rewritten. The master device <b>11</b> controls the OTA function of the vehicle side in the vehicle program rewriting system <b>1</b>, and functions as an OTA master. In <figref idref="DRAWINGS">FIG. <b>1</b></figref>, although the DCM <b>12</b> and the in-vehicle display <b>7</b> are configured to be connected to the same first bus <b>14</b> as an example, the DCM <b>12</b> and the in-vehicle display <b>7</b> may be configured to be connected to separate buses.</p><p id="p-0278" num="0277">In addition to the first bus <b>14</b>, a second bus <b>15</b>, a third bus <b>16</b>, a fourth bus <b>17</b>, and a fifth bus <b>18</b> are connected to the CGW <b>13</b> as buses inside the vehicle, and various ECUs <b>19</b> are connected via the buses <b>15</b> to <b>17</b>, and a power supply management ECU <b>20</b> is connected via the bus <b>18</b>.</p><p id="p-0279" num="0278">The second bus <b>15</b> is, for example, a body system network bus. The ECUs <b>19</b> connected to the second bus <b>15</b> are ECUs controlling the body system including, for example, a door ECU controlling locking/unlocking of a door, a meter ECU controlling display on the meter display, an air conditioner ECU controlling driving of an air conditioner, and a window ECU controlling opening and closing of a window. The third bus <b>16</b> is, for example, a traveling system network bus. The ECUs <b>19</b> connected to the third bus <b>16</b> are ECUs controlling the traveling system including, for example, an engine ECU controlling driving of an engine, a brake ECU controlling driving of a brake, an ECT (Electronic Toll Collection System (ETC) (registered trademark)) ECU controlling driving of an automatic transmission, and a power steering ECU controlling a driving of a power steering.</p><p id="p-0280" num="0279">The fourth bus <b>17</b> is, for example, a multimedia system network bus. The ECUs <b>19</b> connected to the fourth bus <b>17</b> are ECUs controlling the multimedia system including, for example, a navigation ECU controlling a navigation system, and an ETC ECU controlling an electronic toll collection system, that is, an ECT system. The buses <b>15</b> to <b>17</b> may be system buses other than the body system network bus, the traveling system network bus, and the multimedia system network bus. The number of buses or the number of the ECUs <b>19</b> is not limited to the exemplified configuration.</p><p id="p-0281" num="0280">The power supply management ECU <b>20</b> is an ECU having a function of managing power to be supplied to the DCM <b>12</b>, the CGW <b>13</b>, the various ECUs <b>19</b>, and the like.</p><p id="p-0282" num="0281">A sixth bus <b>21</b> is connected to the CGW <b>13</b> as a bus outside the vehicle. A data link coupler (DLC) connector <b>22</b> to which a tool <b>23</b> is detachably connected is connected to the sixth bus <b>21</b>. The buses <b>14</b> to <b>18</b> inside the vehicle and the bus <b>21</b> outside the vehicle are configured with, for example, Controller Area Network (CAN) (registered trademark) buses, and the CGW <b>13</b> performs data communication with the DCM <b>12</b>, the various ECUs <b>19</b>, and the tool <b>23</b> in accordance with the CAN data communication standard and the diagnosis communication standard (UDS: ISO14229). The DCM <b>12</b> and the CGW <b>13</b> may be connected to each other via Ethernet, and the DLC connector <b>22</b> and the CGW <b>13</b> may be connected to each other via Ethernet.</p><p id="p-0283" num="0282">When write data is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> writes the write data into a flash memory to rewrite an application program. In the above configuration, when a request for acquiring write data is received from the rewrite target ECU <b>19</b>, the CGW <b>13</b> functions as a reprogramming master that distributes the write data to the rewrite target ECU <b>19</b>. When the write data is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> functions as a reprogramming slave that writes the write data into the flash memory to rewrite the application program.</p><p id="p-0284" num="0283">As an aspect of rewriting the application program, there are a wired rewrite aspect and a wireless rewrite aspect. In the aspect in which the application program is rewritten in a wired manner, when the tool <b>23</b> is connected to the DLC connector <b>22</b>, the tool <b>23</b> transfers the write data to the CGW <b>13</b>. The CGW <b>13</b> relays or distributes the write data transferred from the tool <b>23</b> to the rewrite target ECU <b>19</b>. In the aspect of rewriting the application program in a wireless manner, as described above, when the distribution package is downloaded from the file server <b>8</b>, the DCM <b>12</b> extracts the write data from the distribution package, and transfers the write data to the CGW <b>13</b>.</p><p id="p-0285" num="0284">As illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the CGW <b>13</b> includes a microcomputer <b>24</b>, a data transfer circuit <b>25</b>, a power supply circuit <b>26</b>, and a power detection circuit <b>27</b> as electrical functional blocks. The microcomputer <b>24</b> includes a central processing unit (CPU) <b>24</b><i>a</i>, a read only memory (ROM) <b>24</b><i>b</i>, a random access memory (RAM) <b>24</b><i>c</i>, and a flash memory <b>24</b><i>d</i>. The microcomputer <b>24</b> performs various processes by executing various control programs stored in a non-transitory tangible storage medium, and controls an operation of the CGW <b>13</b>.</p><p id="p-0286" num="0285">The data transfer circuit <b>25</b> controls data communication with the buses <b>14</b> to <b>18</b> and <b>21</b> in accordance with the CAN data communication standard and the diagnosis communication standard. The power supply circuit <b>26</b> receives battery power (hereinafter, referred to as +B power), accessory power (hereinafter, referred to as ACC power), and ignition power (hereinafter, referred to as IG power). The power detection circuit <b>27</b> detects a voltage value of the +B power, a voltage value of the ACC power, and a voltage value of the IG power received by the power supply circuit <b>26</b>, compares the detected voltage values with predetermined voltage threshold values, and outputs comparison results to the microcomputer <b>24</b>. The microcomputer <b>24</b> determines whether the +B power, the ACC power, and the IG power supplied to the CGW <b>13</b> from the outside are normal or abnormal on the basis of the comparison results that are input from the power detection circuit <b>27</b>.</p><p id="p-0287" num="0286">As illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the ECU <b>19</b> includes a microcomputer <b>28</b>, a data transfer circuit <b>29</b>, a power supply circuit <b>30</b>, and a power detection circuit <b>31</b> as electrical functional blocks. The microcomputer <b>28</b> includes a CPU <b>28</b><i>a</i>, a ROM <b>28</b><i>b</i>, a RAM <b>28</b><i>c</i>, and a flash memory <b>28</b><i>d</i>. The microcomputer <b>28</b> performs various processes by executing various control programs stored in a non-transitory tangible storage medium, and controls an operation of the ECU <b>19</b>.</p><p id="p-0288" num="0287">The data transfer circuit <b>29</b> controls data communication with the buses <b>15</b> to <b>17</b> in accordance with the CAN data communication standard. The power supply circuit <b>30</b> receives +B power, ACC power, and IG power. The power detection circuit <b>31</b> detects a voltage value of the +B power, a voltage value of the ACC power, and a voltage value of the IG power received by the power supply circuit <b>30</b>, compares the detected voltage values with predetermined voltage threshold values, and outputs comparison results to the microcomputer <b>28</b>. The microcomputer <b>28</b> determines whether the +B power, the ACC power, and the IG power supplied to the ECU <b>19</b> from the outside are normal or abnormal on the basis of the comparison results that are input from the power detection circuit <b>27</b>. The ECUs <b>19</b> fundamentally have the same configuration except that loads such as sensors or actuators connected thereto are different from each other. A fundamental configuration of each of the DCM <b>12</b>, the in-vehicle display <b>7</b>, and the power supply management ECUs is the same as that of the ECU <b>19</b> illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0289" num="0288">As illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the power supply management ECU <b>20</b>, the CGW <b>13</b>, and the ECU <b>19</b> are connected to a +B power line <b>32</b>, an ACC power line <b>33</b>, and an IG power line <b>34</b>. The +B power line <b>32</b> is connected to a positive electrode of a vehicle battery <b>35</b>. The ACC power line <b>33</b> is connected to the positive electrode of the vehicle battery <b>35</b> via an ACC switch <b>36</b>. When the user performs an ACC operation, the ACC switch <b>36</b> switches from an OFF state to an ON state, and an output voltage of the vehicle battery <b>35</b> is applied to the ACC power line <b>33</b>. For example, in a case of a vehicle of the type to insert a key into an insertion port, the ACC operation is an operation of rotating the key from an &#x201c;OFF&#x201d; position to an &#x201c;ACC&#x201d; position by inserting the key into the insertion port, and, in a case of a vehicle of the type to press a start button, the ACC operation is an operation of pressing the start button once.</p><p id="p-0290" num="0289">The IG power line <b>34</b> is connected to the positive electrode of the vehicle battery <b>35</b> via an IG switch <b>37</b>. When the user performs an IG operation, the IG switch <b>37</b> switches from an OFF state to an ON state, and an output voltage of the vehicle battery <b>35</b> is applied to the IG power line <b>34</b>. For example, in a case of a vehicle of the type to insert a key into an insertion port, the IG operation is an operation of rotating the key from an &#x201c;OFF&#x201d; position to an &#x201c;ON&#x201d; position by inserting the key into the insertion port, and, in a case of a vehicle of the type to press a start button, the IG operation is an operation of pressing the start button twice. A negative electrode of the vehicle battery <b>35</b> is grounded.</p><p id="p-0291" num="0290">When both of the ACC switch <b>36</b> and the IG switch <b>37</b> are in an OFF state, only the +B power is supplied to the vehicle-side system <b>4</b>. The state in which only the +B power is supplied to the vehicle-side system <b>4</b> will be referred to as a +B power supply state. When the ACC switch <b>36</b> is in an ON state and the IG switch <b>37</b> is in an OFF state, the ACC power and the +B power are supplied to the vehicle-side system <b>4</b>. The state in which the ACC power and the +B power are supplied to the vehicle-side system <b>4</b> will be referred to as an ACC power supply state. When of both the ACC switch <b>36</b> and the IG switch <b>37</b> are in an ON state, the +B power, the ACC power, and the IG power are supplied to the vehicle-side system <b>4</b>. The state in which the +B power, the ACC power, and the IG power are supplied to the vehicle-side system <b>4</b> will be referred to as an IG power supply state.</p><p id="p-0292" num="0291">The ECUs <b>19</b> have different start conditions depending on power supply states, and are classified as a +B ECU that is started in the +B power supply state, an ACC ECU that is started in the ACC power supply state, and an IG ECU that is started in the IG power supply state. For example, the ECU <b>19</b> driven in an application such as vehicle theft is the +B ECU. For example, the ECU <b>19</b> driven in a non-traveling system application such as an audio is the ACC ECUs. For example, the ECU <b>19</b> driven in a traveling system application such as engine control is the IG ECU.</p><p id="p-0293" num="0292">The CGW <b>13</b> transmits a start request to the ECU <b>19</b> that is in a sleep state, and thus causes the ECU <b>19</b> that is a transmission destination of the start request to transition from the sleep state to a start state. The CGW <b>13</b> also transmits a sleep request to the ECU <b>19</b> that is in a start state, and thus causes the ECU <b>19</b> that is a transmission destination of the sleep request to transition from the start state to a sleep state. The CGW <b>13</b> selects the ECU <b>19</b> that is a transmission destination of the start request or the sleep request from among the plurality of ECUs, for example, by making waveforms of the transmission signals to be transmitted to the buses <b>15</b> to <b>17</b> different from each other.</p><p id="p-0294" num="0293">The power supply control circuit <b>38</b> is connected in parallel to the ACC switch <b>36</b> and the IG switch <b>37</b>. The CGW <b>13</b> transmits a power supply control request to the power supply management ECU <b>20</b> and causes the power supply management ECU <b>20</b> to control the power supply control circuit <b>38</b>. That is, the CGW <b>13</b> transmits a power supply start request as the power supply control request to the power supply management ECU <b>20</b>, to connect the ACC power line <b>33</b> or the IG power line <b>34</b> to the positive electrode of the vehicle battery <b>35</b> in the power supply control circuit <b>38</b>. In this state, the ACC power or IG power is supplied to the vehicle-side system <b>4</b> even when the ACC switch <b>36</b> and the IG switch <b>37</b> is turned off. The CGW <b>13</b> transmits a power supply stop request as the power supply control request to the power supply management ECU <b>20</b>, to disconnect the ACC power line <b>33</b> or IG power line <b>34</b> from the positive electrode of the vehicle battery <b>35</b> in the power supply control circuit <b>38</b>.</p><p id="p-0295" num="0294">The DCM <b>12</b>, the CGW <b>13</b>, and the ECU <b>19</b> have a self-retention power function. That is, when vehicle power switches from the ACC power or the IG power to the +B power in the start state, the DCM <b>12</b>, the CGW <b>13</b>, and the ECU <b>19</b> do not transition from the start state to the stop state or the sleep state immediately after the switching, but continue the start state for a predetermined time even immediately after the switching, and thus self-retain drive power. The DCM <b>12</b>, the CGW <b>13</b>, and the ECU <b>19</b> transition from the start state to the stop state or the sleep state when a predetermined time (for example, several seconds) has elapsed immediately after the vehicle power switches from the ACC power or IG power to the +B power.</p><p id="p-0296" num="0295">Next, a distribution package distributed from the center device <b>3</b> to the master device <b>11</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref>. In the vehicle program rewriting system <b>1</b>, reprogramming data including write data provided from a supplier as a provider of an application program and rewrite specification data provided from an OEM is generated. The write data provided from the supplier includes difference data corresponding to a difference between an old application program and a new application program, and the entire data corresponding to the whole of the new application program. The difference data or the entire data may be compressed by using a well-known data compression technique. <figref idref="DRAWINGS">FIG. <b>5</b></figref> exemplifies a case where difference data is provided as write data from suppliers A to C, and reprogramming data is generated from encrypted difference data and an authenticator of the ECU (ID1) provided from the supplier A, encrypted difference data and an authenticator of the ECU (ID2) provided from the supplier B, and encrypted difference data and an authenticator of the ECU (ID3) provided from the supplier C, and rewrite specification data provided from the OEM. The authenticator is added to each piece of write data.</p><p id="p-0297" num="0296">Although <figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates the difference data used to update the old application program to the new application program, rollback difference data used to roll back the new application program to the old application program may also be included in the reprogramming data. For example, in a case where the rewrite target ECU <b>19</b> has a single-bank memory, the rollback difference data is included in the reprogramming data.</p><p id="p-0298" num="0297">The rewrite specification data provided from the OEM includes, as information related to rewriting of the application program, information for specifying the rewrite target ECU <b>19</b>, information for specifying a rewrite order when there are a plurality of rewrite target ECUs <b>19</b>, information for specifying a rollback method described later, and the like, and is data defining an operation related to rewriting in the DCM <b>12</b>, the CGW <b>13</b>, or rewrite target ECU <b>19</b>. The rewrite specification data is classified into DCM rewrite specification data used by the DCM <b>12</b> and CGW rewrite specification data used by the CGW <b>13</b>. Information required to read files corresponding to the rewrite target ECU <b>19</b> is described in the DCM rewrite specification data. As described above, information required to control rewriting in the rewrite target ECU <b>19</b> is described in the CGW rewrite specification data.</p><p id="p-0299" num="0298">When the DCM rewrite specification data is acquired, the DCM <b>12</b> analyzes the DCM rewrite specification data, and controls operations related to rewriting such as transferring write data to the CGW <b>13</b> according to the analysis result. When the CGW rewrite specification data is acquired, the CGW <b>13</b> analyzes the CGW rewrite specification data, and controls operations related to rewriting such as acquiring write data from the DCM <b>12</b> and distributing the write data to the rewrite target ECU <b>19</b> according to the analysis result.</p><p id="p-0300" num="0299">In the file server <b>8</b>, the above-described reprogramming data is registered, and the distribution specification data provided from the OEM is registered. The distribution specification data provided from the OEM is data defining an operation related to display of various screens in the display terminal <b>5</b>.</p><p id="p-0301" num="0300">When the reprogramming data and the distribution specification data are registered, the file server <b>8</b> encrypts the registered reprogramming data, and generates a distribution package in which a package authenticator for authenticating the package, the encrypted reprogramming data, and the distribution specification data are packaged into a single file. When a download request for the distribution package is received from the outside, the file server <b>8</b> transmits the distribution package to the DCM <b>12</b>. In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a case is exemplified in which the file server <b>8</b> generates the distribution package storing the reprogramming data and the distribution specification data and transmits the reprogramming data and the distribution specification data to the DCM <b>12</b> together, but the reprogramming data and the distribution specification data may be separately transmitted to the DCM <b>12</b>. That is, the file server <b>8</b> may transmit the distribution specification data to the DCM <b>12</b> first, and may transmit the reprogramming data to the DCM <b>12</b> later. The file server <b>8</b> may transmit the distribution package and the package authenticator to the DCM <b>12</b> by generating the reprogramming data and the distribution specification data as a distribution package that is a single file.</p><p id="p-0302" num="0301">When the distribution package is downloaded from the file server <b>8</b>, the DCM <b>12</b> verifies the package authenticator stored in the distribution package and the encrypted reprogramming data, and decrypts the encrypted reprogramming data when the verification result is positive. When the encrypted reprogramming data is decrypted, the DCM <b>12</b> unpackages the decrypted reprogramming data, and generates encrypted difference data, an authenticator, DCM rewrite specification data, and CGW rewrite specification data for each of the ECUs. <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a case where the encrypted difference data and the authenticator of the ECU (ID1), the encrypted difference data and the authenticator of the ECU (ID2), the encrypted difference data and the authenticator of the ECU (ID3), and the rewrite specification data are generated.</p><p id="p-0303" num="0302"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram mainly illustrating portions related to functions of the servers <b>8</b> to <b>10</b> in the center device <b>3</b>. <figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an outline of processes performed by the center device <b>3</b> with respect to program update in the ECU. In the following description, a &#x201c;database&#x201d; will be referred to as a &#x201c;DB&#x201d; in some cases. As illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the center device <b>3</b> includes a package management unit <b>3</b>A, a configuration information management unit <b>3</b>B, an individual vehicle information management unit <b>3</b>C, and a campaign management unit <b>3</b>D. The package management unit <b>3</b>A includes a specification data generation unit <b>201</b>, a package generation unit <b>202</b>, a package distribution unit <b>203</b>, an ECU reprogramming data DB <b>204</b>, an ECU metadata DB <b>205</b>, and a package DB <b>206</b>. The configuration information management unit <b>3</b>B includes a configuration information registration unit <b>207</b> and a configuration information DB <b>208</b>.</p><p id="p-0304" num="0303">The supplier registers ECU individual data by using an input unit <b>218</b> and a display unit <b>219</b> that are user interface (UI) functions of the management server <b>10</b>. The ECU individual data includes a program file such as a new program or difference data, verification data or a size of the program file, program file related information such as encryption methods, and ECU attribute information such as a memory structure of the ECU <b>19</b>. The program file is stored in the ECU reprogramming data DB <b>204</b>. The ECU attribute information is stored in the ECU metadata DB <b>205</b>. The program file related information may be stored in the ECU reprogramming data DB <b>204</b> or may be stored in the ECU metadata DB <b>205</b>. The ECU reprogramming data DB <b>204</b> is an example of an update data storage unit. The ECU metadata DB <b>205</b> is an example of a device related information storage unit.</p><p id="p-0305" num="0304">The OEM registers approved configuration information in the configuration information DB <b>208</b> for each vehicle type via the configuration information registration unit <b>207</b>. The approved configuration information is configuration information of a vehicle approved by a public organization. The configuration information is identification information regarding hardware and software of the ECU <b>19</b> mounted on a vehicle, and is an example of vehicle related information. The configuration information includes identification information of a system configuration formed of a plurality of ECUs <b>19</b> and identification information of a vehicle configuration formed of a plurality of systems. As the configuration information, vehicle restriction information related to program update may be registered. For example, group information of the ECU described in the rewrite specification data, a bus load table, and information regarding a battery load may be registered. The ECU metadata DB <b>205</b> is an example of a device related information storage unit. The configuration information DB <b>208</b> is an example of a vehicle information storage unit.</p><p id="p-0306" num="0305">The specification data generation unit <b>201</b> refers to each DB and generates rewrite specification data. The package generation unit <b>202</b> generates a distribution package including rewrite specification data and reprogramming data, and registers the distribution package in the package DB <b>206</b>. The package generation unit <b>202</b> may generate a distribution package including the distribution specification data. The package distribution unit <b>203</b> distributes the registered distribution package to the vehicle-side system <b>4</b>. The distribution package corresponds to a file.</p><p id="p-0307" num="0306">The individual vehicle information management unit <b>3</b>C includes an individual vehicle information registration unit <b>209</b>, a configuration information check unit <b>210</b>, an update availability check unit <b>211</b>, an SMS transmission control unit <b>212</b>, and an individual vehicle information DB <b>213</b>. The individual vehicle information registration unit <b>209</b> registers individual vehicle information uploaded from individual vehicles in the individual vehicle information DB <b>213</b>. The individual vehicle information registration unit <b>209</b> may register, as initial values, individual vehicle information at the time of vehicle production or sales in the individual vehicle information DB <b>213</b>. When the uploaded individual vehicle information is registered, the configuration information check unit <b>210</b> collates the individual vehicle information with the configuration information of the same type vehicle registered in the configuration information DB <b>208</b>. The update availability check unit <b>211</b> checks the availability of update using a new program, that is, the availability of a campaign with respect to the individual vehicle information. In a case where the individual vehicle information is updated, the SMS transmission control unit <b>212</b> transmits a message related to the update to a corresponding vehicle by a short message service (SMS).</p><p id="p-0308" num="0307">The campaign management unit <b>3</b>D includes a campaign generation unit <b>214</b>, a campaign distribution unit <b>215</b>, an instruction notification unit <b>216</b>, and a campaign DB <b>217</b>. The OEM causes the campaign generation unit <b>214</b> to generate campaign information that is information related to the program update, and registers the campaign information in the campaign DB <b>217</b>. The campaign information here corresponds to the &#x201c;distribution specification data&#x201d; described above, and is mainly information regarding an update content displayed on the vehicle-side system <b>4</b>. The campaign distribution unit <b>215</b> distributes the campaign information to the vehicle. The instruction notification unit <b>216</b> notifies the vehicle of a necessary instruction related to the program update. In the vehicle-side system <b>4</b>, for example, the user determines whether or not to download the update program on the basis of the campaign information transmitted from the center device <b>3</b>, and downloads the update program if necessary.</p><p id="p-0309" num="0308">The portions of each of the management units <b>3</b>A to <b>3</b>D except the databases are functions realized by computer hardware and software.</p><p id="p-0310" num="0309">The vehicle communication unit <b>222</b> is a functional block for performing data communication between the center device <b>3</b> and the vehicle-side system <b>4</b> in a wireless manner.</p><p id="p-0311" num="0310">Hereinafter, the above process will be described in more detail, and, first, a content of data registered in each database will be described. As illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, as an example, the following data is registered in the configuration information DB <b>208</b>. A &#x201c;vehicle type&#x201d; indicates the type of a vehicle. A &#x201c;Vehicle SW ID&#x201d; is a software ID for the entire vehicle, and corresponds to a vehicle software ID. Only one &#x201c;Vehicle SW ID&#x201d; is granted to each vehicle, and is updated as versions of application programs of any one or more of the ECUs are updated. A &#x201c;Sys ID&#x201d; is an ID of a system when a group of a plurality of ECUs <b>19</b> mounted on each vehicle is referred to as a &#x201c;system&#x201d;.</p><p id="p-0312" num="0311">For example, in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a group of body system ECUs <b>19</b> is a body system, and a group of traveling system ECUs <b>19</b> is a traveling system. The &#x201c;Sys ID&#x201d; is updated as versions of application programs of any one or more ECUs forming a system are updated. An &#x201c;ECU ID&#x201d; is an ID for identifying a device, indicating the type of ECU. An &#x201c;ECU SW ID&#x201d; is a software ID for each ECU and corresponds to an ECU software ID. For the sake of convenience, the &#x201c;ECU ID&#x201d; is illustrated to be added with a version of software. The &#x201c;ECU SW ID&#x201d; is updated as a version of an application program of a corresponding ECU is updated. Even if the same program version is used in the same &#x201c;ECU ID&#x201d;, different &#x201c;ECU SW IDs&#x201d; are used when hardware configurations are different from each other. That is, the &#x201c;ECU SW ID&#x201d; is also information indicating a product number of the ECU.</p><p id="p-0313" num="0312"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates configuration information regarding a vehicle of &#x201c;vehicle type&#x201d;=&#x201c;aaa&#x201d;. Among the ECUs <b>19</b> mounted on a vehicle, an autonomous driving ECU (ADS), an engine ECU (ENG), a brake ECU (BRK), and an electric power steering ECU (EPS) are exemplified.</p><p id="p-0314" num="0313">For example, &#x201c;ECU SW IDs&#x201d; of &#x201c;Vehicle SW ID&#x201d;=&#x201c;0001&#x201d; are &#x201c;ads_001&#x201d;, &#x201c;eng_010&#x201d;, &#x201c;brk_001&#x201d;, and &#x201c;eps_010&#x201d;, whereas &#x201c;ECU SW IDs&#x201d; of &#x201c;Vehicle SW ID&#x201d;=&#x201c;0002&#x201d; is &#x201c;ads_002&#x201d;, &#x201c;eng_010&#x201d;, &#x201c;brk_005&#x201d;, and &#x201c;eps_011&#x201d;, and three software versions are updated. As a result, &#x201c;Sys ID&#x201d;=&#x201c;SA01&#x201d; is updated to &#x201c;SA02&#x201d;, and &#x201c;Sys ID&#x201d;=&#x201c;SA02&#x201d; is updated to &#x201c;SA03&#x201d;. As mentioned above, the initial value is registered in the configuration information DB <b>208</b> at the time of production or sales of the vehicle, and is then is updated as versions of application programs of any one or more ECUs is updated. That is, the configuration information DB <b>208</b> indicates approved configuration information that is present in the market for each vehicle type.</p><p id="p-0315" num="0314">As illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, as an example, the following programs and data are registered in the ECU reprogramming data DB <b>204</b>. In <figref idref="DRAWINGS">FIG. <b>10</b></figref>, among the ECUs <b>19</b> to be mounted on a certain vehicle type, as ECUs <b>19</b> in which application programs are updated, an autonomous driving ECU (ADS), a brake ECU (BRK), and an electric power steering ECU (EPS) are exemplified. With respect to the latest &#x201c;ECU SW ID&#x201d; of the update target ECU <b>19</b>, old program and new program files of the ECU, the integrity verification data of the new program, an update data file that is difference data between the new program and the old program, integrity verification data of the update data, a rollback data file that is the difference data, and integrity verification data of the rollback data are registered. The integrity verification data is a hash value obtained by applying a hash function to a data value. When the entire data of the new program is used as the update data instead of the difference data, the integrity verification data of the update data is same as the entire data of the new program.</p><p id="p-0316" num="0315">Although a data structure of the latest &#x201c;ECU SW ID&#x201d; is illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, in a case where data of the old &#x201c;ECU SW ID&#x201d; is stored, a new program file with the previous &#x201c;ECU SW ID&#x201d; may be referred to with respect to the old program file. Each piece of the integrity verification data may have a format in which a value calculated by the supplier is registered, or may have a format in which a value calculated by the center device <b>3</b> is registered.</p><p id="p-0317" num="0316">As illustrated in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the following ECU individual specification data is registered in the ECU metadata DB <b>205</b>. For the latest &#x201c;ECU SW ID&#x201d;, a size of an update data file, a size of a rollback data file, bank information indicating a bank related to a program among a bank-A, a bank-B, a bank-C, and the like in a case where the flash memory <b>28</b><i>d </i>included in the ECU <b>19</b> has two or more banks, a transfer size, a read address of a program file, and the like are registered. These are examples of update data related information.</p><p id="p-0318" num="0317">Attribute information indicating an attribute of the ECU <b>19</b> is also registered in the ECU metadata DB <b>205</b>. The attribute information is information indicating a hardware attribute and a software attribute regarding the ECU. The &#x201c;transfer size&#x201d; is a transfer size when rewrite data is divided and transferred from the CGW <b>13</b> to the ECU <b>19</b>, and the &#x201c;key&#x201d; is a key used when the CGW <b>13</b> securely accesses the ECU <b>19</b>. These are examples of software attribute information. The &#x201c;vehicle type&#x201d; and &#x201c;ECU ID&#x201d; also include a memory configuration of the flash memory <b>28</b><i>d </i>of the ECU <b>19</b>, the type of bus to which the ECU <b>19</b> is connected, the type of power supply connected to the ECU <b>19</b>, and the like. These are examples of hardware attribute information.</p><p id="p-0319" num="0318">Here, as the memory configuration, a &#x201c;single-bank&#x201d; is a single-bank memory having a single flash bank, a &#x201c;double-bank&#x201d; is a double-bank memory having double flash banks, and &#x201c;suspend&#x201d; is a single-bank suspend memory having a pseudo-double flash banks. The hardware attribute information and the software attribute information are information used for rewrite control of each ECU <b>19</b> in the vehicle-side system <b>4</b>. Although the hardware attribute information may be stored in advance in the CGW <b>13</b>, in the present embodiment, the hardware attribute information is managed by the center device <b>3</b> in order to reduce the management load on the vehicle-side system <b>4</b>. The software attribute information is data that directly designates a rewrite operation of each ECU <b>19</b>. The software attribute information is managed by the center device <b>3</b> such that flexible control in the vehicle-side system <b>4</b> can be realized.</p><p id="p-0320" num="0319">As illustrated in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the following data for each individual vehicle is registered in the individual vehicle information DB <b>213</b>. Generally, configuration information for each individual vehicle or status information of an individual vehicle with respect to program update is registered. Specifically, for &#x201c;VIN&#x201d; that is an ID of each vehicle, the &#x201c;Vehicle SW ID&#x201d;, the &#x201c;Sys ID&#x201d;, the &#x201c;ECU ID&#x201d;, the &#x201c;ECU SW ID&#x201d; and the like that are configuration information are registered. A &#x201c;Digest&#x201d; value that is a hash value for the configuration information is also calculated and stored in the center device <b>3</b>. An &#x201c;active bank&#x201d; is a bank where a program currently operated by the ECU <b>19</b> is written in a case where a memory configuration is a double-bank, and an uploaded value is registered along with the configuration information.</p><p id="p-0321" num="0320">An &#x201c;access log&#x201d; is the date and time when the vehicle uploaded the individual vehicle information to the center device <b>3</b>. A &#x201c;reprogramming status&#x201d; indicates a status of reprogramming in the vehicle, and includes, for example, &#x201c;campaign issued&#x201d;, &#x201c;activation completed&#x201d;, and &#x201c;download completed&#x201d;. That is, it can be seen from this progress status to which phase the reprogramming in the vehicle advances and in which phase the reprogramming is delayed. When the configuration information or the like is uploaded from the vehicle-side system <b>4</b> to the center device <b>3</b>, the &#x201c;VIN&#x201d; of each vehicle is added to the information or the like.</p><p id="p-0322" num="0321">As illustrated in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, an ID of a distribution package, a distribution package file, and data for verifying the integrity of the distribution package are registered in the package DB <b>206</b>.</p><p id="p-0323" num="0322">As illustrated in <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the following data is registered in the campaign DB <b>217</b>. The data is an ID of campaign information, a distribution package ID, message information such as text statements indicating a specific update content as a campaign content, a list of &#x201c;VINs&#x201d; which are IDs of campaign target vehicles, a list of &#x201c;Vehicle SW IDs&#x201d; before and after the update, a list of &#x201c;ECU SW IDs&#x201d; before and after the update, and the like. A &#x201c;target VIN&#x201d; list may be registered by collating the individual vehicle information DB <b>213</b> with the campaign DB <b>217</b>. The campaign information may also be registered in the package DB <b>206</b>.</p><p id="p-0324" num="0323">Next, an operation of the present embodiment will be described. In <figref idref="DRAWINGS">FIG. <b>15</b></figref>, a description will be made of a process of registering data in the ECU reprogramming data DB <b>204</b> of the package management unit <b>3</b>A. As illustrated in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the display unit <b>219</b> and the input unit <b>218</b> start a reprogramming data registration screen of the management server <b>10</b>, and receive input of new and old program files of the ECU <b>19</b> from an operator of the supplier (A<b>1</b>). For example, a UI or the like may be used to register a file in which configuration information is written in a CSV format or the like as a file. Subsequently, the package management unit <b>3</b>A generates integrity verification data of the new program (A<b>2</b>), and generates a difference data file as update difference data for update to the new program on the basis of the old program, and integrity verification data of the update difference data (A<b>3</b> and A<b>4</b>).</p><p id="p-0325" num="0324">Next, a difference data file as rollback difference data for update to the old program on the basis of the new program and integrity verification data of the data are generated (A<b>5</b> and A<b>6</b>). The program files and the verification data are registered in the ECU reprogramming data DB <b>204</b>, and a new &#x201c;ECU SW ID&#x201d; is generated and registered on the basis of the previous &#x201c;ECU SW ID&#x201d; (A<b>7</b>). Here, when the entire data is distributed instead of the difference, the step related to the difference data may be omitted.</p><p id="p-0326" num="0325">The integrity verification data is a hash value generated, for example, by applying a hash function. For example, in a case where Secure Hash Algorithm 256-bit (SHA-256) is used as the hash function, data values are separated into message blocks every 64 bytes. Then, when data values of the first message block are applied to an initial hash value and thus a hash value with 32-byte length is obtained, a hash value with 32-byte length is sequentially and repeatedly obtained by applying data values of the next message block to the hash value.</p><p id="p-0327" num="0326">In <figref idref="DRAWINGS">FIG. <b>16</b></figref>, a description will be made of a rewrite specification data generation process in the specification data generation unit <b>201</b>. Here, the rewrite specification data generation process of for the vehicle of &#x201c;vehicle type&#x201d;=&#x201c;aaa&#x201d; will be described, but the same applies to other vehicles.</p><p id="p-0328" num="0327">The center device <b>3</b> starts a specification data generation program of the specification data generation unit <b>201</b>, and receives input from an operator of the OEM via the display unit <b>219</b> and the input unit <b>218</b>. First, the specification data generation unit <b>201</b> determines the update target ECU <b>19</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>16</b></figref>, the specification data generation unit <b>201</b> accesses the ECU reprogramming data DB <b>204</b> and outputs a display screen on which an update target can be selected from among the registered &#x201c;ECU SW IDs&#x201d; to the display unit <b>219</b>. The specification data generation unit <b>201</b> stores one or more &#x201c;ECU SW IDs&#x201d; selected by the operator of the OEM via the input unit <b>218</b> in a specific ECU order (B<b>1</b>). Here, the ECU order indicates a rewrite order of the ECUs <b>19</b> in the vehicle-side system <b>4</b>. The specification data generation unit <b>201</b> sets the order designated by the operator of the OEM as the specific ECU order.</p><p id="p-0329" num="0328">The specification data generation unit <b>201</b> may access the configuration information DB <b>208</b> to determine the update target ECU <b>19</b> without receiving input from the operator of the OEM. The specification data generation unit <b>201</b> refers to an &#x201c;ECU SW ID&#x201d; for the latest &#x201c;Vehicle SW ID&#x201d; and an &#x201c;ECU SW ID&#x201d; for the previous &#x201c;Vehicle SW ID&#x201d;, and extracts the ECU <b>19</b> subjected to update. For example, in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the &#x201c;ADS&#x201d;, the &#x201c;BRK&#x201d;, and the &#x201c;EPS&#x201d; are the update target ECUs <b>19</b>. The specification data generation unit <b>201</b> sets the order of the ECUs registered in the configuration information DB <b>208</b> as the specific ECU order.</p><p id="p-0330" num="0329">The specification data generation unit <b>201</b> generates group information for ECUs having a plurality of update target &#x201c;ECU SW IDs&#x201d; (B<b>2</b>). Here, with reference to the configuration information DB <b>208</b>, by using the &#x201c;Sys ID&#x201d;, for example, a group 1 includes &#x201c;ECU IDs&#x201d; in which the &#x201c;Sys ID&#x201d; is &#x201c;SA01_02&#x201d;, and a group 2 includes &#x201c;ECU IDs&#x201d; in which the &#x201c;Sys ID&#x201d; is &#x201c;SA02_02&#x201d;. For example, in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the group 1 is set to the &#x201c;ADS&#x201d;, the group 2 is set to the &#x201c;BRK&#x201d; first, and the group 2 is set to the &#x201c;EPS&#x201d; second. As described above, the specification data generation unit <b>201</b> determines an update target ECU, a group to which the ECU belongs, and an ECU order in the group.</p><p id="p-0331" num="0330">Next, the specification data generation unit <b>201</b> accesses the ECU metadata DB <b>205</b>, and acquires the update data related information, the hardware attribute information, and the software attribute information as the specification data regarding the update target ECU <b>19</b> (B<b>3</b>). For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>17</b></figref>, the update data related information includes an &#x201c;update program version&#x201d;, an &#x201c;update program acquisition address&#x201d;, an &#x201c;update program size&#x201d;, a &#x201c;rollback program version&#x201d;, a &#x201c;rollback program acquisition address&#x201d;, a &#x201c;rollback program size&#x201d;, a &#x201c;write data type&#x201d;, and a &#x201c;write bank&#x201d;. The hardware attribute information includes a &#x201c;connection bus&#x201d;, a &#x201c;connection power supply&#x201d;, and a &#x201c;memory type&#x201d;. The software attribute information includes &#x201c;rewrite bank information&#x201d;, &#x201c;security access key information&#x201d;, a &#x201c;rewrite method&#x201d;, and a &#x201c;transfer size&#x201d;. The &#x201c;rewrite method&#x201d; is data indicating whether rewriting is performed by enabling the self-retention power circuit when switching occurs from IG-on to IG-off (self-retention power), or the rewriting is performed according to IG-on and IG-off (power supply control). Information other than a key may be included as the &#x201c;security access key information&#x201d;.</p><p id="p-0332" num="0331">Hereinafter, each piece of information will be described.</p><p id="p-0333" num="0332">The &#x201c;Write data type&#x201d; is a type indicating whether a program is difference data or the entire data. The write data type for an update program and the write data type for a rollback program may be described separately.</p><p id="p-0334" num="0333">The &#x201c;write bank&#x201d; is information indicating a bank in which a program is written for the double-bank memory ECU <b>19</b>.</p><p id="p-0335" num="0334">The &#x201c;connection bus&#x201d; is information for identifying a bus to which the ECU <b>19</b> is connected.</p><p id="p-0336" num="0335">The &#x201c;connection power supply&#x201d; is information indicating a state of a power supply to which the ECU <b>19</b> is connected, in which a value indicating any of the battery power (+B power), the accessory power (ACC power), and the ignition power (IG power) is described.</p><p id="p-0337" num="0336">The &#x201c;memory type&#x201d; is information for identifying a memory configuration of the ECU <b>19</b>, in which values indicating a double-bank memory, a single-bank suspend memory (pseudo-double-bank memory), a single-bank memory, and the like are described.</p><p id="p-0338" num="0337">The &#x201c;rewrite bank information&#x201d; is information indicating which bank of the ECU <b>19</b> is a start bank (active bank) and which bank is a rewrite bank (inactive bank).</p><p id="p-0339" num="0338">The &#x201c;security access key information&#x201d; is information for authenticating access to the ECU <b>19</b> by using a key, and includes information such as a key derivation key, a key pattern, and a decryption operation pattern.</p><p id="p-0340" num="0339">The &#x201c;transfer size&#x201d; is a data size when a program is divided and transferred to the ECU <b>19</b>.</p><p id="p-0341" num="0340">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>17</b></figref>, the &#x201c;ECU ID&#x201d; is used as a key to store these pieces of information in the specific ECU order described above. When information regarding all the ECUs is acquired (B<b>4</b>; YES), the specification data generation unit <b>201</b> designates &#x201c;rewrite environment information&#x201d; for an update target vehicle (B<b>5</b>). The &#x201c;rewrite environment information&#x201d; is information used for rewrite control in the vehicle-side system <b>4</b> for the group of ECUs or the entire vehicle, and is data directly designating a rewrite operation. For example, the rewrite environment information for the entire vehicle includes a &#x201c;vehicle condition&#x201d; indicating whether program update in the vehicle-side system <b>4</b> is performed while the vehicle is traveling (while the IG switch is turned on) or while the vehicle is parked (while the IG switch is turned off), a &#x201c;battery load (a remaining battery charge)&#x201d; indicating a restriction on the remaining battery charge capable of executing the program update in the vehicle-side system <b>4</b>, bus load table information indicating a restriction on a bus load capable of transferring write data in the vehicle-side system <b>4</b>, and the like.</p><p id="p-0342" num="0341">The rewrite environment information for the group includes the ECUs <b>19</b> belonging to the group, the order of ECUs in the group, and the like. In the vehicle-side system <b>4</b>, program update is controlled to be synchronized in the group unit, and writing into the ECU <b>19</b> is executed in the designated ECU order. The specification data generation unit <b>201</b> starts a screen for registering rewrite environment information, and receives input from the operator of the OEM. Alternatively, Excel (registered trademark) in which rewrite environment information is input may be imported. Alternatively, the restriction information registered in the configuration information DB <b>208</b> may be extracted. The specification data generation unit <b>201</b> uses the generation result in the above step B<b>2</b> as the rewrite environment information for the group.</p><p id="p-0343" num="0342">The bus load table is a table illustrating a correspondence relationship between a power supply state and an allowable transmission amount for a bus. As illustrated in <figref idref="DRAWINGS">FIG. <b>18</b></figref>, the allowable transmission amount is a sum of a transmission amount of vehicle control data and write data that can be transmitted with respect to the maximum allowable transmission amount. In this example, since an allowable transmission amount is &#x201c;80%&#x201d; with respect to the maximum allowable transmission amount for the first bus, in the IG power supply state, the CGW <b>13</b> allows &#x201c;50%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of vehicle control data and &#x201c;30%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of write data. In the ACC power supply state, the CGW <b>13</b> allows &#x201c;30%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the vehicle control data and &#x201c;50%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the write data. In the +B power supply state, the CGW <b>13</b> allows &#x201c;20%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the vehicle control data, and allows &#x201c;60%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the write data. The same applies to the second bus and the third bus.</p><p id="p-0344" num="0343">Finally, the specification data generation unit <b>201</b> locates each piece of the generated or acquired data in accordance with a predetermined data structure, and thus generates rewrite specification data as illustrated in <figref idref="DRAWINGS">FIG. <b>17</b></figref> (B<b>6</b>). That is, the specification data generation unit <b>201</b> generates the rewrite specification data in a data structure that can be analyzed by the vehicle-side system <b>4</b>. Each piece of ECU information may be described in the rewrite specification data in the order of younger group and in accordance with the order of ECUs in the group. For example, in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, in a case where the group 1 is set to the &#x201c;ADS&#x201d; and the group 2 is set to the &#x201c;BRK&#x201d; first and is set to the &#x201c;EPS&#x201d; second, ECU information of the &#x201c;ADS&#x201d; is arranged first, ECU information of the &#x201c;BRK&#x201d; is arranged next, and ECU information of the &#x201c;EPS&#x201d; is arranged last in the ECU information field of the specification data.</p><p id="p-0345" num="0344">In the specification data illustrated in <figref idref="DRAWINGS">FIG. <b>17</b></figref>, the &#x201c;ECU ID&#x201d; to the &#x201c;transfer size&#x201d; of the ECU information are examples of the target device related information including the type of target ECU <b>19</b>, and correspond to the above-described hardware attribute information and software attribute information. The &#x201c;update program version&#x201d; to the &#x201c;write bank&#x201d; are examples of update data related information. The &#x201c;rewrite environment&#x201d; for the group of ECUs or the entire vehicle is an example of update process information for designating an update process in a vehicle.</p><p id="p-0346" num="0345">In <figref idref="DRAWINGS">FIG. <b>19</b></figref>, the package generation process in the package generation unit <b>202</b> will be described. As described above, here, a description will be made of the package generation process for the vehicle of &#x201c;vehicle type&#x201d;=&#x201c;aaa&#x201d;. As illustrated in <figref idref="DRAWINGS">FIG. <b>19</b></figref>, the center device <b>3</b> starts the package generation unit <b>202</b> of the package management unit <b>3</b>A with an instruction from the operator as a trigger. This starting is an instruction for causing the package generation unit <b>202</b> to generate a distribution package. The package generation unit <b>202</b> determines an update target &#x201c;ECU SW ID&#x201d; in the same manner as in step B<b>1</b> (C<b>1</b>). The package generation unit <b>202</b> acquires each piece of data corresponding to the update target &#x201c;ECU SW ID&#x201d; from the ECU reprogramming data DB <b>204</b> and generates one piece of reprogramming data (C<b>2</b>). For example, in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the package generation unit <b>201</b> acquires the integrity verification data of the new program, the update data that is difference data, the integrity verification data of the update data, the integrity verification data of the old program, the rollback data that is difference data, and the integrity verification data of the rollback data, and generates the reprogramming data. The generated reprogramming data and the corresponding rewrite specification data described in steps B<b>1</b> to B<b>6</b> are integrated to generate a single distribution package file (C<b>3</b>). Next, integrity verification data for the generated package file is generated (C<b>4</b>), and the integrity verification data is registered in the package DB <b>206</b> along with the package file (C<b>5</b>).</p><p id="p-0347" num="0346"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is an image diagram illustrating contents of the package file generated as described above. The image illustrates a case where update data or integrity verification data corresponding to the &#x201c;ADS&#x201d;, the &#x201c;BRK&#x201d;, and the &#x201c;EPS&#x201d; that are update targets are integrated into one piece of reprogramming data according to the ECU order, and a single distribution package file is generated by integrating the reprogramming data with rewrite specification data. Here, the rollback data may be included in the reprogramming data only in a case where a memory configuration of the update target ECU <b>19</b> is the single-bank. When the memory configuration is the double-bank or the suspend, the rollback data that is an old program may be omitted because rewriting is not performed on an active bank.</p><p id="p-0348" num="0347">As described above, according to the present embodiment, data of an update program of the application program update target ECU <b>19</b> among a plurality of ECUs <b>19</b> mounted on the vehicle is stored in the ECU reprogramming data DB <b>204</b> of the center device <b>3</b>. The vehicle related information such as an &#x201c;ECU ID&#x201d; for each of a plurality of the ECUs <b>19</b> mounted on the vehicle and an &#x201c;ECU SW ID&#x201d; of an application program stored in the ECU <b>19</b> is stored in the configuration information DB <b>208</b> along with the type of vehicle. The attribute of the rewrite target ECU <b>19</b> and the update data related information related to update data are stored in the ECU metadata DB <b>205</b>.</p><p id="p-0349" num="0348">The specification data generation unit <b>201</b> generates the specification data to be transmitted to the vehicle along with the update data to be written to the target ECU <b>19</b>, the specification data including the type, the attribute, the update data related information, and the information indicating the rewrite environment related to the data update for the target ECU <b>19</b> on the basis of the information stored in the configuration information DB <b>208</b> and the ECU metadata DB <b>205</b>. The package generation unit <b>202</b> generates the distribution package including the specification data and the reprogramming data, and registers the distribution package in the package DB <b>206</b>. The package distribution unit <b>203</b> distributes the registered distribution package to the vehicle-side system <b>4</b>. Thus, the vehicle-side system <b>4</b> receives the specification data transmitted along with the update data, and can thus appropriately select the target ECU <b>19</b> on the basis of the specification data, and appropriately control a write process by using the update data.</p><p id="p-0350" num="0349">Since the specification data generation unit <b>201</b> generates specification data for a plurality of ECUs <b>19</b> as one file (i.e., a single file), and the package generation unit <b>202</b> further packages the file into one file along with the reprogramming data for the plurality of ECUs <b>19</b>, the vehicle-side system <b>4</b> can write the update data into the plurality of ECUs <b>19</b> when a single distribution package is received.</p><p id="p-0351" num="0350">Since the vehicle related information as the specification data includes group information in which some of ECUs <b>19</b> are grouped, the vehicle-side system <b>4</b> can select a target ECU <b>19</b> according to an order defined by the group information, and can write update data. For example, when there are a plurality of ECUs <b>19</b> that are improvement targets of a certain function, by setting the group 1 as the body system ECU <b>19</b>, the group 2 as the traveling system ECU <b>19</b>, and the group 3 as the MM system ECU <b>19</b>, program update in the vehicle-side system <b>4</b> can be divisionally executed three times. Therefore, the waiting time of a user for each update time can be shortened compared with a case where the program update is executed collectively in all the ECUs.</p><p id="p-0352" num="0351">Since the rewrite environment information includes the &#x201c;vehicle condition (IG ON state)&#x201d; and the &#x201c;battery load&#x201d; related to the vehicle and the &#x201c;bus load table&#x201d; related to the ECU <b>19</b>, the vehicle-side system <b>4</b> can determine a timing or the like for writing update data on the basis of the information. That is, a service provider using the OEM or the center device <b>3</b> can operate flexible program update by designating execution restriction conditions for the vehicle as the rewrite environment information.</p><p id="p-0353" num="0352">Since the specification data generation unit <b>201</b> generates specification data to have a predetermined data structure in which a plurality of information related to the ECUs <b>19</b> are arranged in an order from the information related to one of the ECUs having the earliest rewrite order that has been set in advance, the vehicle-side system <b>4</b> can write update data in accordance with the arranging order of ECU IDs in the specification data. That is, since the ECUs <b>19</b> having mutually cooperative process are grouped into one group and an ECU order is defined by considering a content of the mutually cooperative process, even in a case where an update timing to the new program is not completely synchronized in the vehicle-side system <b>4</b>, the program update can be completed without inconvenience. For example, in a case where a new program of the ECU (ID1) has a process of transmitting a predetermined message to the ECU (ID2), and a new program of the ECU (ID2) has a process of generating a timeout error when the predetermined message transmitted from the ECU (ID1) cannot be received, it is preferable to define an ECU order such that the ECU (ID1) is subjected to update first and the ECU (ID2) is subjected to update later.</p><heading id="h-0008" level="1">Second Embodiment</heading><p id="p-0354" num="0353">As illustrated in <figref idref="DRAWINGS">FIG. <b>21</b></figref>, the second embodiment relates to &#x201c;vehicle configuration information synchronization&#x201d; that is initially transmitted from the vehicle-side system <b>4</b> to the center device <b>3</b> in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. When, on the vehicle side, the IG switch <b>37</b> is turned on, the CGW <b>13</b> transmits a &#x201c;synchronization initiation request&#x201d; to the DCM <b>12</b> with the turning-on as a trigger. The DCM <b>12</b> receives the synchronization initiation request, and returns a &#x201c;configuration information collection request&#x201d; to the CGW <b>13</b>. The CGW <b>13</b> inquires each ECU <b>19</b> for a program version. Each ECU <b>19</b> returns an &#x201c;ECU SW ID&#x201d; to the CGW <b>13</b>. The ECU <b>19</b> of which a memory configuration is the double-bank or the suspend also returns bank information indicating which of a plurality of banks is an active bank and which is an inactive bank to the CGW <b>13</b>. Each ECU <b>19</b> may also transmit calibration information of a control target actuator or the like, license information for receiving a program update service, and a trouble code occurring in the ECU <b>19</b> to the CGW <b>13</b>.</p><p id="p-0355" num="0354">When reception of the &#x201c;ECU SW ID&#x201d; from each ECU <b>19</b> is completed, the CGW <b>13</b> transmits all the pieces of information to the DCM <b>12</b> along with the &#x201c;VIN&#x201d;. In this case, the &#x201c;Vehicle SW ID&#x201d; and the &#x201c;Sys ID&#x201d; managed by the CGW <b>13</b> may also be transmitted to the DCM <b>12</b>. The DCM <b>12</b> receives the information, and generates a single hash value that is a digest value for all of the &#x201c;ECU SW IDs&#x201d; by using, for example, a hash function. As described above, in a case where SHA-256 is used as the hash function, data values obtained by serially connecting values of all of the &#x201c;ECU SW IDs&#x201d; to each other are divided into message blocks every 64 bytes, the data values of the first message block is applied to an initial hash value to obtain a hash value with 32-byte length, and the data values of the succeeding message block is sequentially applied to the hash value, and, finally, a hash value of 32-byte length is obtained. Here, the DCM <b>12</b> may generate a single hash value not only for all of the &#x201c;ECU SW IDs&#x201d; but also for values including the &#x201c;Vehicle SW ID&#x201d;, the &#x201c;Sys ID&#x201d;, the bank information, and the calibration information.</p><p id="p-0356" num="0355">The DCM <b>12</b> transmits the digest value of the &#x201c;ECU SW ID&#x201d; obtained as described above to the center device <b>3</b> along with the &#x201c;VIN&#x201d;. The DCM <b>12</b> may transmit the trouble code or the license information along with the digest value. Hereinafter, the digest value may be referred to as a &#x201c;configuration information digest&#x201d;, and all data values of the &#x201c;ECU SW IDs&#x201d; that are a basis thereof may be referred to as &#x201c;configuration information all&#x201d;. The &#x201c;configuration information all&#x201d; may include the &#x201c;Vehicle SW ID&#x201d;, the &#x201c;Sys ID&#x201d;, the bank information, and the calibration information.</p><p id="p-0357" num="0356">As will be described later, the center device <b>3</b> compares digest values or updates the individual vehicle information DB <b>213</b>. The center device <b>3</b> synchronized with the configuration information checks availability of program update, and notifies the vehicle-side system <b>4</b> of the campaign information in a case where the program update is available. Thereafter, the vehicle-side system <b>4</b> downloads a distribution package, installs the distribution package in the target ECU <b>19</b>, and activates a new program. The CGW <b>13</b> transmits a &#x201c;synchronization initiation request&#x201d; to the DCM <b>12</b> with completion of the update process as a trigger, and then performs the same process as described above until a synchronization completion notification is performed. The above-described process that is performed with turning-on of the IG switch <b>37</b> as a trigger may also be performed after the program is updated.</p><p id="p-0358" num="0357">As illustrated in <figref idref="DRAWINGS">FIG. <b>22</b></figref>, when the &#x201c;configuration information digest&#x201d; is received from the vehicle-side system <b>4</b> (D<b>1</b>), the individual vehicle information management unit <b>3</b>C of the center device <b>3</b> collates the &#x201c;configuration information digest&#x201d; with a &#x201c;configuration information digest&#x201d; of a corresponding vehicle registered in the individual vehicle information DB <b>213</b> at that time, and determines whether or not both of the digests match each other (D<b>2</b>). As the &#x201c;individual vehicle information digest&#x201d;, a value calculated in advance may be registered in the individual vehicle information DB <b>213</b>, or a digest value may be calculated by using the configuration information registered in the individual vehicle information DB <b>213</b> at the time of reception from the vehicle-side system <b>4</b>. When both of the digests match each other (YES), it is determined whether or not the individual vehicle information of the vehicle conforms to an approved combination registered in the configuration information DB <b>208</b> (D<b>6</b>). Since there is a probability that the configuration information DB <b>208</b> may be updated at a predetermined timing, the determination in step D<b>6</b> is performed both in a case where both of the digests match each other in step D<b>2</b> (YES) and in a case where both of the digests do not match each other (NO).</p><p id="p-0359" num="0358">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b></figref>, in order to determine the conformity, it is checked whether or not the combination of the &#x201c;Vehicle SW ID&#x201d; and the &#x201c;ECU SW ID&#x201d; of the configuration information uploaded from the vehicle-side system <b>4</b> is approved. In a list illustrated in the same figure, an &#x201c;ECU SW ID&#x201d; of &#x201c;ECU ID=ADS&#x201d; corresponding to &#x201c;Vehicle SW ID=0001&#x201d; registered in the configuration information DB <b>208</b> is &#x201c;ads_001&#x201d;, an &#x201c;ECU SW ID&#x201d; of &#x201c;ECU ID=BRK&#x201d; is &#x201c;brk_001&#x201d;, and an &#x201c;ECU SW ID&#x201d; of &#x201c;ECU ID=EPS&#x201d; is &#x201c;eps_010&#x201d;.</p><p id="p-0360" num="0359">In contrast, the vehicle C with VIN=300 is also &#x201c;Vehicle SW ID=0001&#x201d;, but an &#x201c;ECU SW ID&#x201d; of &#x201c;ECU ID=ADS&#x201d; is &#x201c;ads_002&#x201d; and an &#x201c;ECU SW ID&#x201d; of &#x201c;ECU ID=BRK&#x201d; is &#x201c;brk_003&#x201d;. These two ECUs <b>19</b> are different from the configuration information registered in the configuration information DB <b>208</b>. Therefore, in step D<b>6</b>, &#x201c;NO&#x201d;, that is, it is determined to be disapproved and &#x201c;NG&#x201d;, and the configuration information check unit <b>210</b> notifies the vehicle-side system <b>4</b> and the management device <b>220</b> illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref> that is a device managing information regarding a vehicle produced by the OEM or the like, of an abnormality (D<b>12</b>). The notification of the abnormality is performed by, for example, the SMS transmission control unit <b>212</b> by using an SMS. The SMS transmission control unit <b>212</b> is an example of a communication unit. Even when the two ECUs <b>19</b> are not update target ECUs using new programs, the center device <b>3</b> determines that the vehicle is disapproved, and does not perform the processes in step D<b>7</b> and the subsequent steps.</p><p id="p-0361" num="0360">On the other hand, the vehicle A with VIN=100 has &#x201c;Vehicle SW ID=0001&#x201d;, the &#x201c;ECU SW ID&#x201d; of &#x201c;ECU ID=ADS&#x201d; is &#x201c;ads_001&#x201d;, and the &#x201c;ECU SW ID&#x201d; of &#x201c;ECU ID=BRK&#x201d; is &#x201c;brk_001&#x201d;, all of which match the configuration information registered in the configuration information DB <b>208</b>. Therefore, in step D<b>6</b>, &#x201c;YES&#x201d;, that is, it is determined to be approved and &#x201c;OK&#x201d;, and the process proceeds to step D<b>7</b>. Here, the configuration information check unit <b>210</b> may determine whether the combination of &#x201c;ECU SW IDs&#x201d; of the vehicle C is present in the configuration information DB <b>208</b> to determine whether the vehicle C is approved or disapproved. The &#x201c;Sys ID&#x201d; may also be used for determination in addition to the &#x201c;Vehicle SW ID&#x201d;.</p><p id="p-0362" num="0361">Next, the update availability check unit <b>211</b> accesses the campaign DB <b>217</b> via the campaign management unit <b>3</b>D to check availability of update using a new program (D<b>7</b>). The availability of update is determined by comparing the &#x201c;Vehicle SW ID&#x201d; uploaded from the vehicle-side system <b>4</b> with the &#x201c;pre-update Vehicle SW ID&#x201d; of the campaign DB <b>217</b>. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b></figref>, since the vehicle A with VIN=100 has &#x201c;Vehicle SW ID=0001&#x201d; before the update, it is determined that the update is available in the vehicle A (YES). In this case, the update availability check unit <b>211</b> notifies the vehicle-side system <b>4</b> of the vehicle A of the corresponding campaign ID &#x201c;Cpn_001&#x201d; (D<b>8</b>). The campaign information corresponds to update notification information, and the campaign DB <b>217</b> is an example of an update notification information storage unit.</p><p id="p-0363" num="0362">When the campaign DB <b>217</b> stores &#x201c;Sys IDs&#x201d; before and after update, availability of the update can be checked by using the &#x201c;Sys IDs&#x201d;. Instead of the &#x201c;Vehicle SW ID&#x201d;, the uploaded &#x201c;ECU SW ID&#x201d; list may be compared with the &#x201c;pre-update ECU SW ID list&#x201d; of the campaign DB <b>217</b> to determine update availability.</p><p id="p-0364" num="0363">The vehicle-side system <b>4</b> acquires a campaign file corresponding to the ID from the center device <b>3</b> by using the notified campaign ID as a key (D<b>9</b>). The campaign file includes text statements that describe a campaign content, restrictions on execution of program update, and so on. The restrictions are conditions for executing download or installation, and include, for example, a remaining battery charge, a free capacity of the RAM required for downloading a distribution package, and the current position of the vehicle. The vehicle-side system <b>4</b> analyzes the campaign file and displays the campaign content by using the in-vehicle display <b>7</b>. The user refers to a message displayed on the in-vehicle display <b>7</b> according to the campaign content, and decides whether or not to update an application program of the ECU <b>19</b>. When the user's approval operation is received via the in-vehicle display <b>7</b>, the CGW <b>13</b> notifies the center device <b>3</b> of the approval for the update via the DCM <b>12</b>. The center device <b>3</b> transmits the distribution package file with the package ID corresponding to the campaign ID and the integrity verification data to the vehicle-side system <b>4</b> (D<b>10</b>).</p><p id="p-0365" num="0364">When the update is unavailable in step D<b>7</b> (NO), the vehicle-side system <b>4</b> is notified of &#x201c;update unavailable&#x201d; (D<b>11</b>). For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>23</b></figref>, since the vehicle A with VIN=200 has &#x201c;Vehicle SW ID=0002&#x201d; after update which does not match any of the &#x201c;pre-update Vehicle SW IDs&#x201d; of the campaign DB <b>217</b>, it is determined that the update is unavailable.</p><p id="p-0366" num="0365">On the other hand, when the collation result of the &#x201c;configuration information digest&#x201d; shows mismatch (NO) in step D<b>2</b>, the center device <b>3</b> requests the vehicle-side system <b>4</b> to transmit the &#x201c;configuration information all&#x201d; (D<b>3</b>). This transmission corresponds to an &#x201c;entire data transmission request notification&#x201d;. When the vehicle-side system <b>4</b> transmits the &#x201c;configuration information all&#x201d; in response to the request, the center device <b>3</b> receives the &#x201c;configuration information all&#x201d; (D<b>4</b>). The individual vehicle information management unit <b>3</b>C of the center device <b>3</b> updates the information regarding the vehicle registered in the individual vehicle information DB <b>213</b> (D<b>4</b>). The process proceeds to step D<b>6</b>. The individual vehicle information DB <b>213</b> is an example of a vehicle-side configuration information storage unit. The individual vehicle information registration unit <b>209</b> is an example of an information update unit.</p><p id="p-0367" num="0366">The CGW <b>13</b> may transmit the &#x201c;synchronization initiation request&#x201d; at a timing at which the IG switch <b>37</b> is turned off.</p><p id="p-0368" num="0367">As described above, according to the second embodiment, when configuration information regarding a configuration of each ECU <b>19</b> is received from a plurality of ECUs <b>19</b>, the vehicle-side system <b>4</b> generates a hash value on the basis of data values of a plurality of pieces of configuration information, and transmits the hash value to the center device <b>3</b>. The center device <b>3</b> includes the individual vehicle information DB <b>213</b>, and compares the hash value transmitted from the vehicle-side system <b>4</b> with a hash value of the vehicle configuration information stored in the individual vehicle information DB <b>213</b>. When both of the values do not match each other, a request for transmission of &#x201c;configuration information all&#x201d; is transmitted to the vehicle-side system <b>4</b>. The vehicle-side system <b>4</b> receives the transmission of the request, and transmits the &#x201c;configuration information all&#x201d; to the center device <b>3</b>. When the &#x201c;configuration information all&#x201d; is received, the center device <b>3</b> updates the configuration information stored in the individual vehicle information DB <b>213</b> on the basis of data values thereof.</p><p id="p-0369" num="0368">With this configuration, the vehicle-side system <b>4</b> initially transmits the hash value of the configuration information to the center device <b>3</b>, and transmits all data values of the configuration information to the center device <b>3</b> only when a comparison result of the hash values in the center device <b>3</b> shows mismatch. Consequently, since a size of data transmitted from the vehicle-side system <b>4</b> can be reduced, even when the vehicle-side system <b>4</b> is mounted on a plurality of vehicles, it is possible to reduce a total amount of communication. In particular, in a case where the configuration information is uploaded at a predetermined timing such as IG-on in the vehicle-side system <b>4</b>, a time period in which the communication concentrates may occur. Thus, an amount of transmitted data is reduced by using a hash value, and thus it is possible to reduce a communication load.</p><p id="p-0370" num="0369">The CGW <b>13</b> receives the configuration information from all the rewrite target ECUs <b>19</b> of update data, and generates a hash value on the basis of all data values thereof, and the DCM <b>12</b> transmits the hash value at a timing at which the ignition switch <b>37</b> of the vehicle is turned on or off. Therefore, it is possible to transmit the hash value to the center device <b>3</b> at a timing at which traveling of the vehicle is initiated or finished. Thus, the center device <b>3</b> can appropriately synchronize the configuration information of the individual vehicle information DB <b>213</b> with that of the vehicle.</p><p id="p-0371" num="0370">When an &#x201c;ECU SW ID&#x201d; of each ECU <b>19</b> is received from a plurality of ECUs <b>19</b>, the vehicle-side system <b>4</b> transmits a configuration information list in which a &#x201c;Vehicle SW ID&#x201d; is combined therewith to the center device <b>3</b>. The center device <b>3</b> compares the &#x201c;ECU SW ID&#x201d; list transmitted from the vehicle-side system <b>4</b> with an approved &#x201c;ECU SW ID&#x201d; list of a corresponding vehicle stored in the configuration information DB <b>208</b>&#x2033;, and transmits abnormality detection to the vehicle-side system <b>4</b> and the management device <b>220</b> when it is determined that the transmitted lists of combinations are disapproved.</p><p id="p-0372" num="0371">With this configuration, the center device <b>3</b> can detect, as an abnormality, that a combination of the configuration information of the vehicle is in a state in which the plurality of ECUs <b>19</b> cannot cooperate with each other and traveling of the vehicle is hindered, and notify the vehicle-side system <b>4</b> of the abnormality. Thus, the vehicle-side system <b>4</b> can perform measures such as prohibiting traveling of the vehicle.</p><p id="p-0373" num="0372">The center device <b>3</b> does not perform the update availability check process (D<b>7</b>) on a vehicle in which a combination of vehicle configuration information is disapproved. Thus, it is possible to prevent program update from being executed in a disapproved vehicle. Even when the disapproved ECU <b>19</b> is not an update target ECU of a new program, the center device <b>3</b> does not execute the update availability check process (D<b>7</b>). In the vehicle-side system <b>4</b>, when program update is executed, control for the ECU <b>19</b> which is not an update target is also generated. Therefore, in a vehicle having a disapproved ECU <b>19</b>, there is a probability that the program update may not be normally completed, and thus the center device <b>3</b> prevents the program update from being executed in the vehicle.</p><p id="p-0374" num="0373">The center device <b>3</b> includes the campaign DB <b>217</b> in which the campaign information used to notify the vehicle side that update using a new program has occurred is stored, and, for a vehicle determined to be approved, checks availability of the campaign information of the corresponding vehicle. When the update is available, the campaign information is transmitted to the vehicle-side system <b>4</b>. Consequently, the campaign information can be presented to a user, and thus update of an application program can be prompted. Synchronization of the configuration information, determination of whether or not the configuration information is approved, and checking of update availability are executed as a series of processes by the center device <b>3</b> with upload of the configuration information from a vehicle as a trigger, and thus it is possible to promptly notify an adequate vehicle of update of a program.</p><p id="p-0375" num="0374">The second embodiment may be modified and implemented as follows.</p><p id="p-0376" num="0375">The center device <b>3</b> may transmit the &#x201c;synchronization initiation request&#x201d; to the vehicle-side system <b>4</b>, and the DCM <b>12</b> may transmit the &#x201c;configuration information collection request&#x201d; to the CGW <b>13</b> when the &#x201c;synchronization initiation request&#x201d; is received. For example, when the configuration information DB <b>208</b> of &#x201c;vehicle type=aaa&#x201d; is updated, the center device <b>3</b> transmits the &#x201c;synchronization initiation request&#x201d; to a vehicle of the vehicle type.</p><p id="p-0377" num="0376">The hash value may be transmitted to the center device <b>3</b> at a timing when rewriting is completed in the rewrite target ECU <b>19</b> of the update data. That is, the flowchart of steps D<b>1</b> to D<b>12</b> illustrated in <figref idref="DRAWINGS">FIG. <b>22</b></figref> is executed even at a timing at which update of programs of all the rewrite target ECUs <b>19</b> is completed.</p><p id="p-0378" num="0377">The center device <b>3</b> requests the vehicle-side system <b>4</b> to transmit a combination list of the configuration information of the respective ECUs <b>16</b> when a comparison result of both hash values shows match. When the combination list is received, the processes in steps D<b>6</b> to D<b>12</b> may be performed.</p><p id="p-0379" num="0378">Even when the comparison result of both of the hash values shows match, the center device <b>3</b> may refer to the campaign DB <b>217</b> to check availability of the campaign information of a corresponding vehicle.</p><p id="p-0380" num="0379">The transmission of a hash value from the vehicle-side system <b>4</b> to the center device <b>3</b> may be performed as illustrated in <figref idref="DRAWINGS">FIG. <b>24</b></figref>. <figref idref="DRAWINGS">FIG. <b>24</b></figref> is a flowchart illustrating a process in the CGW <b>13</b>. For example, when the IG switch <b>37</b> is turned on, the CGW <b>13</b> collects configuration information from each ECU <b>19</b> (D<b>21</b>), and generates a hash value for data values of the collected configuration information (D<b>22</b>). The generated hash value is compared with a hash value (previously generated value) stored in the flash memory <b>24</b><i>d</i>, and thus it is determined whether or not there is a difference therebetween (D<b>23</b>). When there is a difference (YES), the hash value generated this time is stored in the flash memory <b>24</b><i>d </i>(D<b>24</b>), and the hash value is transmitted to the center device <b>3</b>. When there is no difference between both of the hash values in step D<b>23</b>, the process is finished (NO). A hash value for initial values of the configuration information is assumed to be stored in advance in the flash memory <b>24</b><i>d</i>. As a result, the number of times of uploading the configuration information from the vehicle-side system <b>4</b> to the center device <b>3</b> can be reduced.</p><heading id="h-0009" level="1">Third Embodiment</heading><p id="p-0381" num="0380">In the first embodiment, the center device <b>3</b> generates the distribution package in advance, but in the third embodiment, for example, when the center device <b>3</b> is accessed from the vehicle-side system <b>4</b> at a timing or the like at which the IG switch <b>37</b> is turned on, the distribution package is dynamically generated according to conditions. The vehicle communication unit <b>222</b> corresponds to a vehicle related information receiving unit. <figref idref="DRAWINGS">FIG. <b>25</b></figref> illustrates data registered in the ECU reprogramming data DB <b>204</b> in an aspect different from that in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. The ADS, the BRK, and the EPS of the &#x201c;ECU IDs&#x201d; respectively indicate an autonomous driving ECU, a brake ECU, and an electric power steering ECU in the same manner as in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. There are &#x201c;ECU SW ID_001 to ECU SW ID_003&#x201d; for the respective update target ECUs <b>19</b>, and there are &#x201c;ECU program_001 to ECU program_003&#x201d; and &#x201c;integrity verification data_001 to integrity verification data_003&#x201d; corresponding to the respective &#x201c;ECU SW IDs&#x201d;. A system in which the programs and the data are combined and of which operations have been checked is registered in the ECU reprogramming data DB <b>204</b>.</p><p id="p-0382" num="0381"><figref idref="DRAWINGS">FIG. <b>26</b></figref> illustrates data registered in the individual vehicle information DB <b>213</b> centering on an update history corresponding to the ID &#x201c;VIN&#x201d; of each vehicle. A &#x201c;special flag&#x201d; is added as ECU information. The special flag is a flag that is set in a case where a special process occurs or is required for updating an ECU program. For a vehicle with &#x201c;VIN=0001&#x201d;, the &#x201c;ECU SW ID&#x201d; has not been updated from the initial version &#x201c;001&#x201d;, and there is no update history. When the center device <b>3</b> is accessed from this vehicle at a timing at which the IG switch <b>37</b> is turned on next time, for example, a package for updating the version to the latest &#x201c;003&#x201d; is generated and distributed.</p><p id="p-0383" num="0382">A vehicle with &#x201c;VIN=0002&#x201d; is being updated to the latest version, activation of the previous version &#x201c;002&#x201d; has been completed, and download of the latest version &#x201c;003&#x201d; has been completed. Thereafter, a status transitions to activation, and thus when this vehicle accesses the center device <b>3</b> next time, a notification of &#x201c;update unavailable&#x201d; is performed.</p><p id="p-0384" num="0383">After a vehicle with &#x201c;VIN=0003&#x201d; is updated to the version &#x201c;002&#x201d;, only the &#x201c;ECU ID=ADS&#x201d; is updated to the latest version &#x201c;003&#x201d; by exchanging the ECUs <b>19</b> in a dealer, for example, and information thereof is reflected in the &#x201c;special flag&#x201d;. Next, when this vehicle accesses the center device <b>3</b>, a package for updating the version of &#x201c;ECU IDs=BRK and EPS&#x201d; to &#x201c;003&#x201d; is generated and distributed. The &#x201c;special flag&#x201d; is registered in the individual vehicle information DB <b>213</b> on the center device <b>3</b> side.</p><p id="p-0385" num="0384">Hereinafter, an operation of the third embodiment will be described. As illustrated in <figref idref="DRAWINGS">FIG. <b>27</b></figref>, when the individual vehicle information management unit <b>3</b>C of the center device <b>3</b> executes steps D<b>4</b> and D<b>5</b>, it is determined whether or not the &#x201c;special flag&#x201d; is written in the ECU information of the individual vehicle information DB <b>213</b> (D<b>21</b>). When information such as &#x201c;ECU exchange&#x201d; is written in the &#x201c;special flag&#x201d; as in &#x201c;VIN=0003&#x201d; in <figref idref="DRAWINGS">FIG. <b>27</b></figref> (YES), the process proceeds to step D<b>22</b> and the same determination as in step D<b>7</b> is performed. When no information is written in the &#x201c;special flag&#x201d; (NO), the process proceeds to step D<b>6</b>. Steps D<b>6</b> to D<b>12</b> are executed in the same manner as in the first embodiment.</p><p id="p-0386" num="0385">The determination of conformity in step D<b>6</b> may be omitted depending on a content of a program. The determination is essential if the program is a program related to firmware of ECU <b>19</b>, but may be omitted if the program is an application program. The &#x201c;special flag&#x201d; may also be &#x201c;initialization&#x201d;. For example, in a case where the version is initialized when the vehicle is sold, there is no problem even if a combination is disapproved. A disapproved combination in a case where there is no &#x201c;special flag&#x201d; is handled as abnormal because it means that the program has been tampered with without approval. The determination of update availability in step D<b>7</b> is performed for each ECU. In a case where the ECU <b>19</b> is replaced, for example, in the dealer, information corresponding to the &#x201c;special flag&#x201d; may be stored in the ECU <b>19</b> and uploaded to the center device <b>3</b> at that time. As described above, the information registered in the ECU <b>19</b> on the vehicle side will be referred to as a &#x201c;dynamic generation flag&#x201d;.</p><p id="p-0387" num="0386">When &#x201c;YES&#x201d; is determined in step D<b>22</b>, difference data is generated at this point (D<b>23</b>), specification data is generated (D<b>24</b>), a distribution package is further generated (D<b>25</b>), and a package file is transmitted (D<b>26</b>).</p><p id="p-0388" num="0387">For the generation of the difference data in step D<b>23</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>28</b></figref>, first, new and old ECU programs are selected (A<b>11</b>). &#x201c;Old&#x201d; is the current &#x201c;ECU SW ID&#x201d;, and &#x201c;new&#x201d; is the latest &#x201c;ECU SW ID&#x201d;. Thereafter, when steps A<b>2</b> to A<b>6</b> are executed in the same manner as in the first embodiment, the generated difference data is temporarily stored in a work area or the like of the memory (A<b>12</b>). The generation of the specification data in step D<b>24</b> is the same as in the first embodiment. For the generation of the distribution package in step D<b>25</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>29</b></figref>, when steps C<b>1</b> to C<b>4</b> are executed in the same manner as in the first embodiment, the data of the generated package is registered in the individual vehicle information DB <b>213</b> (C<b>11</b>).</p><p id="p-0389" num="0388">As described above, according to the third embodiment, a distribution package generated in advance is stored in the package DB <b>206</b>, and information regarding a vehicle on which a target device is mounted is stored in the campaign DB <b>217</b>. The vehicle related information includes a special flag indicating whether or not to generate a distribution package, and the package generation unit <b>202</b> generates a distribution package upon receiving a package generation instruction, and stores the distribution package in the package DB <b>206</b> portion. If the special flag is not set, the distribution package stored in the package DB <b>206</b> is read and transferred to the package distribution unit <b>203</b>. On the other hand, if the special flag is set, the package generation unit <b>202</b> generates a distribution package at that time. With this configuration, it is possible to flexibly select whether to read and use a distribution package generated in advance or to use a distribution package dynamically generated at that time according to a state of the special flag.</p><p id="p-0390" num="0389">That is, in a case where the special flag is set, this indicates that a program has been updated in a situation in which the center device <b>3</b> cannot know, such as the ECU <b>19</b> being replaced by the dealer. Therefore, in this case, the center device <b>3</b> dynamically generates a distribution package, and thus the distribution package can be appropriately generated according to the latest state of the vehicle-side system <b>4</b>.</p><p id="p-0391" num="0390">In the third embodiment, a configuration in which it is selectively executed whether to use a distribution package statically generated in advance or a dynamically generated package according to a state of the special flag may be employed as necessary, and when the vehicle related information is received from the vehicle-side system <b>4</b>, the distribution package may be dynamically generated at all times. Needless to say, when the distribution package is dynamically generated at all times, the one applied to the distribution package generated in advance in the first and second embodiments may be similarly applied.</p><p id="p-0392" num="0391">The statically generated distribution package is a package that is required to be uniformly distributed to vehicles of the same type, and the dynamically generated distribution package is a package that is required to be distributed to each &#x201c;individual vehicle&#x201d;. Therefore, in a case where the &#x201c;special flag&#x201d; of the third embodiment is registered in the individual vehicle information DB <b>213</b> as a result of being included in the vehicle related information transmitted from the vehicle side, the &#x201c;special flag&#x201d; is a &#x201c;dynamic generation flag&#x201d;.</p><heading id="h-0010" level="1">Fourth Embodiment</heading><p id="p-0393" num="0392">Hereinafter, a fourth embodiment centering on an operation of the vehicle program rewriting system <b>1</b> will be described. As illustrated in <figref idref="DRAWINGS">FIG. <b>30</b></figref>, the DCM rewrite specification data includes specification data information and ECU information. The specification data information includes address information and a file name. The ECU information includes address information, or the like referenced when an update program (write data) of each rewrite target ECU <b>19</b> is transmitted to the CGW <b>13</b> by the number of rewrite target ECUs <b>19</b>. Specifically, the ECU information includes at least an ID (ECU (ID)) for identifying an ECU, a reference address (update program acquisition address) for acquiring an update program, an update program size, a reference address (rollback program acquisition address) for acquiring a rollback program, and a rollback program size. The rollback program is a program (write data) for returning an application program to an original version when rewriting of the application program is canceled halfway.</p><p id="p-0394" num="0393">As illustrated in <figref idref="DRAWINGS">FIG. <b>31</b></figref>, the CGW rewrite specification data includes group information, a bus load table, a battery load, a vehicle condition during rewriting, and ECU information. The CGW rewrite specification data may include rewrite procedure information, display scene information, and the like in addition to the information. The group information is information indicating a group to which the rewrite target ECU <b>19</b> belongs and a rewrite order, and defines that application programs are rewritten in an order of the ECU (ID1), the ECU (ID2), and the ECU (ID3) as first group information, and that application programs are rewritten in an order of an ECU (ID4), an ECU (ID5), and an ECU (ID6) as second group information, for example. The bus load table is a table illustrated in <figref idref="DRAWINGS">FIG. <b>136</b></figref> which will be described later, and content thereof will be described later. The battery load is information indicating a lower limit value of a remaining battery charge of the vehicle battery <b>40</b> allowable in the vehicle. The vehicle condition during rewriting is information indicating in what kind of vehicle condition rewriting is performed.</p><p id="p-0395" num="0394">The ECU information is information regarding the rewrite target ECU <b>19</b>, and includes at least an ECU_ID (corresponding to device identification information), a connection bus (corresponding to bus identification information), a connection power supply, security access key information, a memory type, a rewrite method, a self-retention power time, rewrite bank information, an update program version, an update program acquisition address, an update program size, a rollback program version, a rollback program acquisition address, a rollback program size, and a write data type.</p><p id="p-0396" num="0395">The connection bus indicates a bus to which the ECU <b>19</b> is connected. The connection power supply indicates a power line to which the ECU <b>19</b> is connected. The security access key information indicates key information used for authentication performed by the CGW <b>13</b> in order to access the rewrite target ECU <b>19</b>, and includes a random number value or unique information, a key pattern, and a decryption operation pattern. The memory type indicates whether a memory mounted on the rewrite target ECU <b>19</b> is a single-bank memory, a single-bank suspend memory (also referred to as a pseudo-double-bank memory), or a double-bank memory. The rewrite method indicates whether the rewriting is performed on the basis of self-retention power or power supply control. The self-retention power time indicates a time for continuing the self-retention power when the rewrite method is rewriting based on self-retention power. The rewrite bank information indicates which bank is an active bank and which bank is an inactive bank. The active bank is also referred to as a start bank, and the inactive bank is also referred to as a rewrite bank.</p><p id="p-0397" num="0396">The update program version indicates a version of an update program. The update program acquisition address indicates an address of the update program. The update program size indicates a data size of the update program. The rollback program version indicates a version of a rollback program. The rollback program acquisition address indicates an address of the rollback program. The rollback program size indicates a data size of the rollback program. The write data type indicates whether the write data is difference data or the entire data. In addition to these pieces of information, the rewrite specification data may include information uniquely defined by the system.</p><p id="p-0398" num="0397">When the DCM rewrite specification data is acquired, the DCM <b>12</b> analyzes the acquired DCM rewrite specification data. When the DCM rewrite specification data is analyzed, the DCM <b>12</b> controls operations related to rewriting such as acquiring write data from an address in which an update program of the rewrite target ECU <b>19</b> is stored and transferring the acquired write data to the CGW <b>13</b>.</p><p id="p-0399" num="0398">When the CGW rewrite specification data is acquired, the CGW <b>13</b> analyzes the acquired CGW rewrite specification data. When the CGW rewrite specification data is analyzed, the CGW <b>13</b> controls operations related to rewriting such as requesting the DCM <b>12</b> to transfer a predetermined size of an update program of the rewrite target ECU <b>19</b> in accordance with the analysis result, or distributing the write data to the rewrite target ECU <b>19</b> in a designated order.</p><p id="p-0400" num="0399">In the file server <b>8</b>, the above-described reprogramming data is registered, and the distribution specification data provided from the OEM is registered. The distribution specification data provided from the OEM is data defining an operation related to display of various screens in the display terminal <b>5</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>45</b></figref>, the distribution specification data includes language information, a display text, package information, image data, a display pattern, a display control program, and the like.</p><p id="p-0401" num="0400">When the distribution specification data is acquired from the CGW <b>13</b>, the display terminal <b>5</b> analyzes the acquired distribution specification data, and controls display of various screens according to the analysis result. For example, the display terminal <b>5</b> superimposes a display text acquired from the distribution specification data on a display frame stored in advance, and executes a display control program acquired from the distribution specification data. In addition to these pieces of information, the distribution specification data may include information uniquely defined by the system.</p><p id="p-0402" num="0401">When the reprogramming data and the distribution specification data are registered, the file server <b>8</b> encrypts the registered reprogramming data, and generates a distribution package storing a package authenticator for authenticating the package, the encrypted reprogramming data, and the distribution specification data. The authenticator is data added to verify the integrity of the reprogramming data and the distribution specification data, and is generated from, for example, key information, the reprogramming data, and the distribution specification data linked to the CGW <b>13</b>. When a download request for the distribution package is received from the outside, the file server <b>8</b> transmits the distribution package to the DCM <b>12</b>. In <figref idref="DRAWINGS">FIG. <b>42</b></figref>, a case is exemplified in which the file server <b>8</b> generates the distribution package storing the reprogramming data and the distribution specification data and transmits the reprogramming data and the distribution specification data to the DCM <b>12</b> as a single file together, but the reprogramming data and the distribution specification data may be transmitted to the DCM <b>12</b> as separate files. That is, the file server <b>8</b> may transmit the distribution specification data to the DCM <b>12</b> first, and may transmit the reprogramming data to the DCM <b>12</b> later. In this case, an authenticator may be added to each of the distribution specification data and the reprogramming data.</p><p id="p-0403" num="0402">As illustrated in <figref idref="DRAWINGS">FIG. <b>33</b></figref>, when the DCM <b>12</b> downloads the distribution package from the file server <b>8</b>, the DCM <b>12</b> verifies the integrity of the encrypted reprogramming data by using the package authenticator stored in the downloaded distribution package. The DCM <b>12</b> decrypts the encrypted reprogramming data when the verification result is positive. When the encrypted reprogramming data is decrypted, the DCM <b>12</b> unpacks (hereinafter, also referred to as unpackages) the decrypted reprogramming data, and divisionally extracts the encrypted difference data, the authenticator, the DCM rewrite specification data, and the CGW rewrite specification data. <figref idref="DRAWINGS">FIG. <b>33</b></figref> illustrates a case where the encrypted difference data and the authenticator of the ECU (ID1), the encrypted difference data and the authenticator of the ECU (ID2), the encrypted difference data and the authenticator of the ECU (ID3), the DCM rewrite specification data, and the CGW rewrite specification data are divisionally extracted.</p><p id="p-0404" num="0403">Next, the flash memory <b>33</b><i>d </i>of the ECU <b>19</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>34</b> to <b>45</b></figref>. The flash memory <b>33</b><i>d </i>of the ECU <b>19</b> is classified into a single-bank memory having a single flash bank, a single-bank suspend memory having pseudo-double flash banks, and a double-bank memory having double substantial flash banks depending on memory configurations. Thereafter, the ECU <b>19</b> equipped with the single-bank memory will be referred to as the single-bank memory ECU, the ECU <b>19</b> equipped with the single-bank suspend memory will be referred to as a single-bank suspend memory ECU, and the ECU <b>19</b> equipped with the double-bank memory will be referred to as a double-bank memory ECU.</p><p id="p-0405" num="0404">Since the single-bank memory has a single flash bank, there is no concept of an active bank and an inactive bank, and an application program cannot be rewritten while the application program is being executed. On the other hand, since the single-bank suspend memory or the double-bank memory has double flash banks, there is a concept of an active bank and an inactive bank, and an application program in the inactive bank can be rewritten while the application program in the active bank is being executed.</p><p id="p-0406" num="0405">Since the double-bank memory has double flash banks that are completely separated from each other, an application program can be rewritten at any timing, for example, when the vehicle is traveling. Since the single-bank suspend memory has a configuration in which the single-bank memory is divided into pseudo-double banks, there are restrictions on a timing at which reading and writing can be normally performed, and an application program cannot be rewritten while the vehicle is traveling, and the application program can be rewritten while the IG power is turned off and the vehicle is parked.</p><p id="p-0407" num="0406">Each of the single-bank memory, the single-bank suspend memory, and the double-bank memory includes a reprogramming firmware embedded type (hereinafter, referred to as the embedded type) in which reprogramming firmware is embedded, and a reprogramming firmware download type (hereinafter, referred to as the download type) in which the reprogramming firmware is downloaded from the outside. The reprogramming firmware is firmware for rewriting an application program.</p><p id="p-0408" num="0407">A configuration of each flash memory will be described below in order.</p><p id="p-0409" num="0408">(A) Single-Bank Memory</p><p id="p-0410" num="0409">(A-1) Embedded Type Single-Bank Memory</p><p id="p-0411" num="0410">The embedded type single-bank memory will be described with reference to <figref idref="DRAWINGS">FIGS. <b>47</b> and <b>48</b></figref>. The embedded type single-bank memory has a difference engine work area, an application program area, and a boot program area. Version information, parameter data, an application program, firmware, and a normal time vector table are located in the application program area. A boot program, a progress state point <b>2</b>, a progress state point <b>1</b>, start determination information, wireless reprogramming firmware, wired reprogramming firmware, a start determination program, and a boot time vector table are located in the boot area.</p><p id="p-0412" num="0411">As illustrated in <figref idref="DRAWINGS">FIG. <b>34</b></figref>, during a normal operation of executing application processes such as a vehicle control process and a diagnosis process, the microcomputer <b>33</b> executes the start determination program, refers to the boot time vector table and the normal time vector table to search for a leading address, and executes a predetermined address of an application program.</p><p id="p-0413" num="0412">The microcomputer <b>33</b> executes the wireless or wired reprogramming firmware instead of the application program in a rewrite operation of executing a rewrite process on the application program. <figref idref="DRAWINGS">FIG. <b>35</b></figref> illustrates an operation of rewriting an application program by using difference data as an update program As illustrated in <figref idref="DRAWINGS">FIG. <b>35</b></figref>, the microcomputer <b>33</b> temporarily saves the application program as old data in the difference engine work area. The microcomputer <b>33</b> reads the old data temporarily saved in the difference engine work area, and restores new data from the read old data and the difference data stored in the RAM <b>33</b><i>c </i>by using a difference engine included in the embedded reprogramming firmware. When the new data is generated from the old data and the difference data, the microcomputer <b>33</b> writes the new data to a predetermined address of the memory to rewrite the application program.</p><p id="p-0414" num="0413">(A-2) Download Type Single-Bank Memory</p><p id="p-0415" num="0414">The download type single-bank memory will be described with reference to <figref idref="DRAWINGS">FIGS. <b>36</b> and <b>37</b></figref>. The download type differs from the embedded type described above in that the wireless reprogramming firmware or the wired reprogramming firmware is downloaded from the outside, the application program is rewritten, and then the wireless reprogramming firmware or the wired reprogramming firmware is deleted. When the application program is updated wirelessly, for example, the wireless reprogramming firmware to be executed in each the ECU <b>19</b> is included in the reprogramming data illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. The ECU <b>19</b> receives wireless reprogramming firmware for use only by the ECU from the CGW <b>13</b>, and stores the received wireless reprogramming firmware for use only by the ECU into the RAM.</p><p id="p-0416" num="0415">As illustrated in <figref idref="DRAWINGS">FIG. <b>36</b></figref>, during a normal operation of executing application processes such as a vehicle control process and a diagnosis process, in the same manner as in the embedded type, the microcomputer <b>33</b> executes the start determination program, refers to the boot time vector table and the normal time vector table to search for a leading address, and executes a predetermined address of an application program.</p><p id="p-0417" num="0416">As illustrated in <figref idref="DRAWINGS">FIG. <b>37</b></figref>, the microcomputer <b>33</b> temporarily saves the application program as old data in the difference engine work area during a rewrite operation of executing a rewrite process on the application program. The microcomputer <b>33</b> reads the old data temporarily saved in the difference engine work area, and restores new data from the read old data and the difference data stored in the RAM <b>33</b><i>c </i>by using difference engine included in the reprogramming firmware downloaded from the outside. When the new data is generated from the old data and the difference data, the microcomputer <b>33</b> writes the new data to rewrite the application program.</p><p id="p-0418" num="0417">(B) Single-Bank Suspend Memory</p><p id="p-0419" num="0418">(B-1) Embedded Type Single-Bank Suspend Memory</p><p id="p-0420" num="0419">The embedded type single-bank suspend memory will be described with reference to <figref idref="DRAWINGS">FIGS. <b>38</b> and <b>39</b></figref>. The embedded type single-bank suspend memory has a difference engine work area, an application program area, and a boot program area. Reprogramming firmware for updating a program is located in the boot program area in the same manner as in the single-bank memory, and is not subjected to program update. The application program area that is a program update target has pseudo-bank-A and bank-B, and version information, an application program, and a normal time vector table are located in each of the bank-A and the bank-B. A boot program, reprogramming firmware, a reprogramming time vector table, a start bank determination function, start bank determination information, and a boot time vector table are located in the boot area.</p><p id="p-0421" num="0420">As illustrated in <figref idref="DRAWINGS">FIG. <b>38</b></figref>, during a normal operation of executing application processes such as a vehicle control process and a diagnosis process, the microcomputer <b>33</b> executes the boot program to determine which of the bank-A and the bank-B is an active bank on the basis of the start bank determination information of the bank-A and the bank-B according to the start bank determination function. When it is determined that the bank-A is an active bank, the microcomputer <b>33</b> refers to the normal time vector table of the bank-A to search for a leading address and executes the application program of the bank-A. Similarly, when it is determined that the bank-B is an active bank, the microcomputer <b>33</b> refers to the normal time vector table of the bank-B to search for a leading address and executes the application program of the bank-B. In <figref idref="DRAWINGS">FIG. <b>38</b></figref>, although the reprogramming firmware is located in the boot program area, the reprogramming firmware may also be subjected to program update and located in each area of the bank-A or the bank-B.</p><p id="p-0422" num="0421">As illustrated in <figref idref="DRAWINGS">FIG. <b>39</b></figref>, during a rewrite operation of executing a rewrite process on an application program of an inactive bank, the microcomputer <b>33</b> temporarily saves the application program of the inactive bank as old data into the difference engine work area. The microcomputer <b>33</b> reads the old data temporarily saved in the difference engine work area, and restores new data from the read old data and the difference data stored in the RAM <b>33</b><i>c </i>by using a difference engine in the embedded type reprogramming firmware. When the new data is generated from the old data and the difference data, the microcomputer <b>33</b> writes the new data into the inactive bank to rewrite the application program of the inactive bank. <figref idref="DRAWINGS">FIG. <b>39</b></figref> exemplifies a case where the bank-A is an active bank and the bank-B is an inactive bank.</p><p id="p-0423" num="0422">(B-2) Download Type Single-Bank Suspend Memory</p><p id="p-0424" num="0423">The download type single-bank suspend memory will be described with reference to <figref idref="DRAWINGS">FIGS. <b>40</b> and <b>41</b></figref>. The download type differs from the embedded type described above in that reprogramming firmware and a reprogramming time vector table are downloaded from the outside, an application program is rewritten, and then the reprogramming firmware and the reprogramming time vector table are deleted.</p><p id="p-0425" num="0424">As illustrated in <figref idref="DRAWINGS">FIG. <b>40</b></figref>, during a normal operation of executing application processes such as a vehicle control process and a diagnosis process, in the same manner as the embedded type, the microcomputer <b>33</b> executes the boot program to determine whether the application program is new or old on the basis of the start bank determination information of each of the bank-A and the bank-B according to the start bank determination function, and determines which of the bank-A and the bank-B is an active bank. When it is determined that the bank-A is an active bank, the microcomputer <b>33</b> refers to the normal time vector table of the bank-A to search for a leading address and executes the application program of the bank-A. Similarly, when it is determined that the bank-B is an active bank, the microcomputer <b>33</b> refers to the normal time vector table of the bank-B to search for a leading address and executes the application program of the bank-B.</p><p id="p-0426" num="0425">As illustrated in <figref idref="DRAWINGS">FIG. <b>41</b></figref>, during a rewrite operation of executing a rewrite process on an application program, the microcomputer <b>33</b> temporarily saves the application program of the inactive bank as old data into the difference engine work area. The microcomputer <b>33</b> reads the old data temporarily saved in the difference engine work area, and restores new data from the read old data and the difference data stored in the RAM <b>33</b><i>c </i>by using a difference engine in the reprogramming firmware downloaded from the outside. When the new data is generated from the old data and the difference data, the microcomputer <b>33</b> writes the new data to rewrite the application program. <figref idref="DRAWINGS">FIG. <b>41</b></figref> exemplifies a case where the bank-A is an active bank and the bank-B is an inactive bank. As described above, in the single-bank suspend memory, rewriting of the application program of the bank-B can be executed on the background while executing the application program of the bank-A.</p><p id="p-0427" num="0426">(C) Double-Bank Memory</p><p id="p-0428" num="0427">(C-1) Embedded Type Double-Bank Memory</p><p id="p-0429" num="0428">The embedded type double-bank memory will be described with reference to <figref idref="DRAWINGS">FIGS. <b>42</b> and <b>43</b></figref>. The embedded type single-bank memory includes an application program area and a rewrite program area of the bank-A, an application program area and a rewrite program area of the bank-B, and a boot program area. A boot program is located in the boot area as non-rewritable. The boot program includes a boot swap function and a boot time vector table. Version information, parameter data, an application program, firmware, and a normal time vector table are located in each application program area. A program for controlling rewriting, reprogramming progress management information <b>2</b>, reprogramming progress management information <b>1</b>, start bank determination information, wireless reprogramming firmware, wired reprogramming firmware, and a boot time vector table are located in each rewrite program area. A boot program, a boot swap function, and a boot time vector table are located in the boot area.</p><p id="p-0430" num="0429">As illustrated in <figref idref="DRAWINGS">FIG. <b>42</b></figref>, during a normal operation of executing application processes such as a vehicle control process and a diagnosis process and during a rewrite operation of executing a rewrite process on an application program of an inactive bank, the microcomputer <b>33</b> executes the boot program to determine whether the application program is new or old according to the boot swap function on the basis of each of the start bank determination information of the bank-A and the bank-B, and determines which of the bank-A and the bank-B is an active bank. When it is determined that the bank-A is an active bank, the microcomputer <b>33</b> refers to the boot time vector table of the bank-A and the normal time vector table of the bank-A to search for a leading address and executes the application program of the bank-A. Similarly, when it is determined that the bank-B is an active bank, the microcomputer <b>33</b> refers to the boot time vector table of the bank-B and the normal time vector table of the bank-B to search for a leading address and executes the application program of the bank-B.</p><p id="p-0431" num="0430">As illustrated in <figref idref="DRAWINGS">FIG. <b>43</b></figref>, during a rewrite operation of executing a rewrite process on an application program of an inactive bank, the microcomputer <b>33</b> temporarily saves the application program of the inactive bank as old data into the difference engine work area. The microcomputer <b>33</b> reads the old data temporarily saved in the difference engine work area, and restores new data from the read old data and the difference data stored in the RAM <b>33</b><i>c </i>by using a difference engine in the embedded type reprogramming firmware. When the new data is generated from the old data and the difference data, the microcomputer <b>33</b> writes the new data into the inactive bank to rewrite the application program of the inactive bank. Old data temporarily saved in the difference engine work area may be an application program of an active bank or an application program of an inactive bank. In this case, in a case where the application program of the active bank is a target, data of the inactive bank is deleted before writing new data. Here, in a case where reprogramming data acquired from the outside of the vehicle is not difference data but entire data (full data), the acquired reprogramming data is written as new data to the inactive bank. <figref idref="DRAWINGS">FIG. <b>56</b></figref> exemplifies a case where the bank-A is an active bank and the bank-B is an inactive bank. Old data temporarily saved in the difference engine work area may be an application program of an active bank or an application program of an inactive bank. In a case where it is necessary to match execution addresses of the application programs with each other, the application program of the inactive bank is saved as old data.</p><p id="p-0432" num="0431">(C-2) Download Type Double-Bank Memory</p><p id="p-0433" num="0432">The download type double-bank memory will be described with reference to <figref idref="DRAWINGS">FIGS. <b>44</b> and <b>45</b></figref>. The download type differs from the embedded type described above in that the wireless reprogramming firmware or the wired reprogramming firmware is downloaded from the outside, the application program is rewritten, and then the wireless reprogramming firmware or the wired reprogramming firmware is deleted.</p><p id="p-0434" num="0433">As illustrated in <figref idref="DRAWINGS">FIG. <b>44</b></figref>, during a normal operation of executing application processes such as a vehicle control process and a diagnosis process and during a rewrite operation of executing a rewrite process on an application program of an inactive bank, in the same manner as in the embedded type, the microcomputer <b>33</b> executes the boot program to determine whether the application program is new or old according to the boot swap function on the basis of each of the start bank determination information of the bank-A and the bank-B and to determine which of the bank-A and the bank-B is an active bank, and executes an application program of the active bank to execute an application process.</p><p id="p-0435" num="0434">As illustrated in <figref idref="DRAWINGS">FIG. <b>45</b></figref>, during a rewrite operation of executing a rewrite process on the application program, the microcomputer <b>33</b> temporarily saves the application program of the inactive bank as old data in the difference engine work area. The microcomputer <b>33</b> reads the old data temporarily saved in the difference engine work area, and restores new data from the read old data and the difference data stored in the RAM <b>33</b><i>c </i>by using the reprogramming firmware downloaded from the outside. When the new data is generated from the old data and the difference data, the microcomputer <b>33</b> writes the new data into the inactive bank to rewrite the application program of the inactive bank. Old data temporarily saved in the difference engine work area may be an application program of an active bank or an application program of an inactive bank. In this case, in a case where the application program of the active bank is a target, data of the inactive bank is deleted before writing new data. Here, in a case where reprogramming data acquired from the outside of the vehicle is not difference data but entire data (full data), the acquired reprogramming data is written as new data to the inactive bank. <figref idref="DRAWINGS">FIG. <b>45</b></figref> exemplifies a case where the bank-A is an active bank and the bank-B is an inactive bank. Old data temporarily saved in the difference engine work area may be an application program of an active bank or an application program of an inactive bank. As described above, in the double-bank memory, rewriting of the application program of the bank-B can be executed on the background while executing the application program of the bank-A.</p><p id="p-0436" num="0435">As described above, in both configurations of the embedded type and the download type, the application program and the rewrite programs for rewriting the application program are located in each application area. In <figref idref="DRAWINGS">FIG. <b>43</b></figref> and <figref idref="DRAWINGS">FIG. <b>45</b></figref>, the application program has been described as a reprogramming target, but the rewrite program may also be a reprogramming target. In a case where it is desired that the rewrite program cannot be rewritten, the rewrite program may be located in the boot area. For example, a program for wired rewriting may be located in the boot area such that the wired rewriting using the tool <b>23</b> can be reliably performed in a dealer or the like.</p><p id="p-0437" num="0436">Next, the overall sequence of rewriting an application program will be described with reference to <figref idref="DRAWINGS">FIGS. <b>46</b> to <b>48</b></figref>. Here, a description will be made of a case where a user operates the mobile terminal <b>6</b> as the display terminal <b>5</b> to rewrite an application program during parking, but the same applies to a case where the application program is rewritten during parking by operating the in-vehicle display <b>7</b>. The distribution package transmitted from the center device <b>3</b> to the DCM <b>12</b> stores write data of one or more rewrite target ECUs <b>19</b>. That is, when there is a single rewrite target ECU <b>19</b>, one piece of write data for the single rewrite target ECU <b>19</b> is stored in the distribution package, and, when there are a plurality of rewrite target ECUs <b>19</b>, a plurality of pieces of write data for the respective a plurality of rewrite target ECUs <b>19</b> are stored in the distribution package. Here, there are two rewrite target ECUs <b>19</b>, and the two rewrite target ECUs <b>19</b> will be referred to as a rewrite target ECU (ID1) and a rewrite target ECU (ID2). The ECUs <b>19</b> other than the rewrite target ECU (ID1) and the rewrite target ECU (ID2) will be referred to as other ECUs.</p><p id="p-0438" num="0437">Each of the rewrite target ECU (ID1) and the rewrite target ECU (ID2) determines that a transmission condition for a version notification signal is established, for example, when it is determined that a transmission request for the version notification signal has been received from the master device <b>11</b>. When the transmission condition for the version notification signal is established, the rewrite target ECU (ID1) transmits the version notification signal including version information of an application program stored therein and an ECU (ID) that can identify the ECU to the master device <b>11</b>. When the version notification signal is received from the rewrite target ECU (ID1), the master device <b>11</b> transmits the received version notification signal to the center device <b>3</b>. Similarly, when the transmission condition for the version notification signal is established, the rewrite target ECU (ID2) transmits the version notification signal including a version of an application program stored therein and an ECU (ID) that can identify the ECU to the master device <b>11</b>. When the version notification signal is received from the rewrite target ECU (ID2), the master device <b>11</b> transmits the received version notification signal to the center device <b>3</b>.</p><p id="p-0439" num="0438">When the version notification signals are received from the rewrite target ECU (ID1) and the rewrite target ECU (ID2), the center device <b>3</b> specifies the versions of the application programs included in the received version notification signals and the ECUs (ID), and determines availability of write data to be distributed to the rewrite target ECU <b>19</b> that is a transmission source of the version notification signal. The center device <b>3</b> specifies the version of the current application program of the rewrite target ECU <b>19</b> from the version notification signal received from the rewrite target, and collates the version of the current application program with the managed latest version.</p><p id="p-0440" num="0439">When the version specified from the version notification signal has the same value as that of the managed latest version, the center device <b>3</b> determines that write data to be distributed to the rewrite target ECU <b>19</b> that is a transmission source of the version notification signal is unavailable, and the application program stored in the rewrite target ECU <b>19</b> does not need to be updated. On the other hand, when the version specified from the version notification signal has a value smaller than that of the managed newest version, the center device <b>3</b> determines that write data to be distributed to the rewrite target ECU <b>19</b> that is a transmission source of the version notification signal is available, and the application program stored in the rewrite target ECU <b>19</b> needs to be updated.</p><p id="p-0441" num="0440">When it is determined that the application program stored in the rewrite target ECU <b>19</b> needs to be updated, the center device <b>3</b> notifies the mobile terminal <b>6</b> of information indicating that update is necessary. When the mobile terminal <b>6</b> is notified of the information indicating that update is necessary, the mobile terminal displays a distribution feasibility screen (A<b>1</b>). The distribution feasibility screen is the same as a campaign notification screen which will be described later. The user can check the necessity of update from the distribution feasibility screen displayed on the mobile terminal <b>6</b>, and can thus select whether or not to perform the update.</p><p id="p-0442" num="0441">When the user selects that the update is to be performed on the mobile terminal <b>6</b> (A<b>2</b>), the mobile terminal <b>6</b> notifies the center device <b>3</b> of a download request for a distribution package. When the center device <b>3</b> is notified of the download request for the distribution package from the mobile terminal <b>6</b>, the center device transmits the distribution package to the master device <b>11</b>.</p><p id="p-0443" num="0442">When the master device <b>11</b> downloads the distribution package from the center device <b>3</b>, the master device initiates a package authentication process on the downloaded distribution package (B<b>1</b>). When the master device <b>11</b> authenticates the distribution package and completes the package authentication process, the master device initiates a write data extraction process (B<b>2</b>). When the master device <b>11</b> extracts the write data from the distribution package, and completes the write data extraction process, the master device transmits a download completion notification signal to the center device <b>3</b>.</p><p id="p-0444" num="0443">When the center device <b>3</b> receives the download completion notification signal from the master device <b>11</b>, the center device <b>3</b> notifies the mobile terminal <b>6</b> of completion of the download. When the mobile terminal <b>6</b> is notified of completion of the download from the center device <b>3</b>, the mobile terminal <b>6</b> displays a download completion notification screen (A<b>3</b>). The user can check that the download has been completed from the download completion notification screen displayed on the mobile terminal <b>6</b>, and can thus set a rewrite initiation time of an application program on the vehicle side.</p><p id="p-0445" num="0444">When the user sets the rewrite initiation time of the application program on the vehicle side on the mobile terminal <b>6</b> (A<b>4</b>), the mobile terminal <b>6</b> notifies the center device <b>3</b> of the rewrite initiation time. When the center device <b>3</b> is notified of the rewrite initiation time from the mobile terminal <b>6</b>, the center device <b>3</b> stores the rewrite initiation time set by the user as a set initiation time. When the current time reaches the set initiation time (A<b>5</b>), the center device <b>3</b> transmits a rewrite instruction signal to the master device <b>11</b>.</p><p id="p-0446" num="0445">When the rewrite instruction signal is received from the center device <b>3</b>, the master device <b>11</b> transmits a power supply start request to the power supply management ECU <b>20</b>, and thus causes the rewrite target ECU (ID1), the rewrite target ECU (ID2), and the other ECUs to transition from a stop state or a sleep state to a start state (X1).</p><p id="p-0447" num="0446">The master device <b>11</b> initiates to distribute the write data to the rewrite target ECU (ID1) and instructs the rewrite target ECU (ID1) to write the write data. The rewrite target ECU (ID1) initiates to receive the write data from the master device <b>11</b>, and initiates to write the write data and initiates a program rewrite process when the write data is instructed to be written (C<b>1</b>). When the rewrite target ECU (ID1) completes reception of the write data from the master device <b>11</b>, completes writing of the write data, and completes the program rewrite process, the rewrite target ECU (ID1) transmits a rewrite completion notification signal to the master device <b>11</b>.</p><p id="p-0448" num="0447">When the rewrite completion notification signal is received from the rewrite target ECU (ID1), the master device <b>11</b> initiates to distribute the write data to the rewrite target ECU (ID2), and instructs the rewrite target ECU (ID2) to write the write data. The rewrite target ECU (ID2) initiates to receive the write data from the master device <b>11</b>, and initiates to write the write data and initiates a program rewrite process when the write data is instructed to be written (D<b>1</b>). When the rewrite target ECU (ID2) completes reception of the write data from the master device <b>11</b>, completes writing of the write data, and completes the program rewrite process, the rewrite target ECU (ID2) transmits a rewrite completion notification signal to the master device <b>11</b>. When the rewrite completion notification signal is received from the rewrite target ECU (ID2), the master device <b>11</b> transmits the rewrite completion notification signal to the center device <b>3</b>.</p><p id="p-0449" num="0448">When the rewrite completion notification signal is received from the master device <b>11</b>, the center device <b>3</b> notifies the mobile terminal <b>6</b> of the completion of rewriting of the application program. When the mobile terminal <b>6</b> is notified of the completion of rewriting of the application program from the center device <b>3</b>, the mobile terminal <b>6</b> displays a rewrite completion notification screen (A<b>6</b>). The user can check that rewriting of the application program has been completed from the rewrite completion notification screen displayed on the mobile terminal <b>6</b>, and can thus set execution of synchronization as activation.</p><p id="p-0450" num="0449">When the user sets the execution of synchronization on the mobile terminal <b>6</b> (A<b>7</b>), that is, when the user sets an approval for activation of a new program, the mobile terminal <b>6</b> notifies the center device <b>3</b> of the execution of synchronization. When the center device <b>3</b> is notified of the execution of synchronization from the mobile terminal <b>6</b>, the center device transmits a synchronization switching instruction signal to the master device <b>11</b>. When the synchronization switching instruction signal is received from the center device <b>3</b>, the master device <b>11</b> distributes the received synchronization switching instruction signal to the rewrite target ECU (ID1) and the rewrite target ECU (ID2).</p><p id="p-0451" num="0450">When the synchronization switching instruction signal is received from the master device <b>11</b>, each of the rewrite target ECU (ID1) and the rewrite target ECU (ID2) initiates a program switching process of switching an application program to be started next time from the old application program to the new application program (C<b>2</b> and D<b>2</b>). When the program switching process has been completed, each of the rewrite target ECU (ID1) and the rewrite target ECU (ID2) transmits a switching completion notification signal to the master device <b>11</b>.</p><p id="p-0452" num="0451">When the switching completion notification signal is received from the rewrite target ECU (ID1) and the rewrite target ECU (ID2), the master device <b>11</b> distributes a version read signal to the rewrite target ECU (ID1) and the rewrite target ECU (ID2). When the version read signal is received from the master device <b>11</b>, each of the rewrite target ECU (ID1) and the rewrite target ECU (ID2) reads a version of an application program to be operated thereafter (C<b>3</b> and D<b>3</b>), and transmits a latest version notification signal including the read version to the master device <b>11</b>. The master device <b>11</b> checks a version of software or performs rollback as necessary by receiving the version notification signal from the rewrite target ECU (ID1) and the rewrite target ECU (ID2).</p><p id="p-0453" num="0452">When the version notification signal is received from the rewrite target ECU (ID1) and the rewrite target ECU (ID2), the master device <b>11</b> transmits a power supply stop request to the power supply management ECU <b>20</b>, and thus causes the rewrite target ECU (ID1), the rewrite target ECU (ID2), and the other ECUs to transition from the start state to the stop state or the sleep state (X2).</p><p id="p-0454" num="0453">The master device <b>11</b> transmits the latest version notification signal to the center device <b>3</b>. When the latest version notification signal is received from the master device <b>11</b>, the center device <b>3</b> specifies the latest versions of the application programs of the rewrite target ECU (ID1) and the rewrite target ECU (ID2) from the received latest version notification signal, and notifies the mobile terminal <b>6</b> of the specified latest versions. When a notification of the latest versions is sent from the center device <b>3</b>, the mobile terminal <b>6</b> displays a latest version notification screen indicating the latest versions of which the notification is sent on the mobile terminal <b>6</b> (A<b>8</b>). The user can check the latest versions from the latest version notification screen displayed on the mobile terminal <b>6</b>, and can thus check that the activation has been completed.</p><p id="p-0455" num="0454">Next, with reference to <figref idref="DRAWINGS">FIGS. <b>49</b> to <b>52</b></figref>, a description will be made of timing charts for operations of the DCM <b>12</b>, the CGW <b>13</b> and the rewrite target ECU <b>19</b> when an application program is rewritten. Here, a description will be made of a case where an application program of the double-bank memory ECU is rewritten during a period in which the IG switch <b>42</b> is turned on by a user operation, that is, while the vehicle can travel, and application programs of the single-bank suspend memory ECU and the single-bank memory ECU are rewritten during parking after the IG switch <b>42</b> is turned off by the user operation. A description will be made of a case where the application program is rewritten by using power supply control and a case where the application program is rewritten by using self-retention power.</p><p id="p-0456" num="0455">(a) Case where Application Program is Rewritten by Using Power Supply Control</p><p id="p-0457" num="0456">The case where the application program is rewritten by using power supply control will be described with reference to <figref idref="DRAWINGS">FIGS. <b>49</b> and <b>50</b></figref>. The rewriting of the application program by using power supply control indicates a configuration in which a rewrite operation is controlled in accordance with switching of a power supply without using the self-retention power circuit. When the user switches on the IG switch in an OFF state and thus the vehicle power switches from the +B power to the IG power, each of the DCM <b>12</b>, the CGW <b>13</b>, the double-bank memory ECU, the single-bank suspend memory ECU, and the single-bank memory ECU initiates a normal operation (t<b>1</b>).</p><p id="p-0458" num="0457">When a notification of download initiation is sent from the center device <b>3</b>, the DCM <b>12</b> transitions from the normal operation to a download operation, and initiates to download a distribution package from the center device <b>3</b> (t<b>2</b>). The DCM <b>12</b> may download the distribution package on the background while performing the normal operation. When the download of the distribution package from the center device <b>3</b> has been completed, the DCM <b>12</b> returns from the download operation to the normal operation (t<b>3</b>).</p><p id="p-0459" num="0458">When a notification of a rewrite instruction signal (installation instruction signal) is sent from the center device <b>3</b> or the CGW <b>13</b>, the DCM <b>12</b> transitions from the normal operation to a data transfer/center communication operation, and initiates the data transfer/center communication operation (t<b>4</b>). That is, the DCM <b>12</b> extracts write data from the distribution package, initiates to transfer the write data to the CGW <b>13</b>, acquires a rewrite progress situation from the CGW <b>13</b>, and initiates to notify the center device <b>3</b> of the rewrite progress situation.</p><p id="p-0460" num="0459">When acquisition of the write data from the DCM <b>12</b> is initiated, the CGW <b>13</b> transitions from the normal operation to a reprogramming master operation, initiates the reprogramming master operation, initiates to distribute the write data to the double-bank memory ECU, and instructs the double-bank memory ECU to write the write data. When the double-bank memory ECU initiates to receive write data from the CGW <b>13</b>, the double-bank memory ECU initiates a programming phase (hereinafter, also referred to as an installation phase) in a normal operation. That is, the double-bank memory ECU performs the installation of the application program on the background while performing the normal operation. The double-bank memory ECU initiates to write the received write data into the flash memory and initiates to rewrite the application program.</p><p id="p-0461" num="0460">When the user switches off the IG switch in an ON state such that the vehicle power switches from the IG power to the +B power during rewriting of the application program in the double-bank memory ECU, the DCM <b>12</b> stops the data transfer/center communication operation, the CGW <b>13</b> stops the reprogramming master operation, and the double-bank memory ECU stops the installation phase and stops rewriting of the application program (t<b>5</b>).</p><p id="p-0462" num="0461">Thereafter, when the user switches on the IG switch in an OFF state such that the vehicle power switches from the +B power to the IG power, the DCM <b>12</b> resumes the data transfer/center communication operation, the CGW <b>13</b> resumes the reprogramming master operation, and the double-bank memory ECU resumes the installation phase and resumes rewriting of the application program (t<b>6</b>). That is, the user switches off the IG switch in an ON state such that the vehicle power switches from the IG power to +B power, and then the user switches on the IG switch in an OFF state such that the vehicle power switches from the +B power to the IG power, and, each time a trip occurs, the double-bank memory ECU repeats stopping and resuming of rewriting of the application program (t<b>7</b> and t<b>8</b>).</p><p id="p-0463" num="0462">When the double-bank memory ECU completes writing of the write data, and completes rewriting of the application program, the double-bank memory ECU finishes the installation phase, and transitions from the normal operation to activation standby. That is, the double-bank memory ECU is not started on the new bank (bank-B) in which the application program is rewritten at the time point when the activation phase is not performed, and remains started on the old bank (bank-A) (t<b>9</b>).</p><p id="p-0464" num="0463">After the user switches off the IG switch in an ON state such that the vehicle power switches from the IG power to the +B power (t<b>10</b>), when the double-bank memory ECU completes rewriting of the application program at that time, the CGW <b>13</b> transmits a power supply start request to the power supply management ECU <b>20</b>. When the vehicle power switches from the +B power to the IG power by the CGW <b>13</b> transmitting the power supply start request to the power supply management ECU <b>20</b>, the DCM <b>12</b> resumes the data transfer/center communication operation, and the CGW <b>13</b> resumes the reprogramming master operation, and initiates to distribute the write data to the single-bank suspend memory ECU and the single-bank memory ECU. When reception of the write data from the CGW <b>13</b> is initiated, the single-bank suspend memory ECU and the single-bank memory ECU transition from the normal operation to a boot process and initiate the installation phase in the boot process (t<b>11</b>). That is, the single-bank suspend memory ECU and the single-bank memory ECU do not perform installation in parallel to the normal operation, and perform installation in the boot process in which the application program is not operated.</p><p id="p-0465" num="0464">When rewriting of the application program is initiated, the single-bank suspend memory ECU stops rewriting of the application program in a case where the IG switch <b>42</b> switches from an OFF state to an ON state due to the user operation before rewriting of the application program is completed. The single-bank suspend memory ECU returns to an active bank (bank-A) as a start bank instead of an inactive bank (bank-B) in which rewriting of the application program is stopped. When rewriting of the application program is initiated, the single-bank memory ECU continues rewriting of the application program even though the IG switch <b>42</b> switches from an OFF state to an ON state due to the user operation before rewriting of the application program is completed. This is because the single-bank memory ECU cannot return to the normal operation if rewriting of the application program is stopped halfway. Preferably, after rewriting of the application program of the single-bank memory ECU is initiated, it is desirable to disable the user operation on the IG switch <b>42</b> until rewriting of the application program is completed.</p><p id="p-0466" num="0465">When the single-bank suspend memory ECU completes writing of the write data and completes rewriting of the application program, the single-bank suspend memory ECU finishes the installation phase in the boot process and transitions from the boot process to activation standby. That is, the single-bank suspend memory ECU is not started on the new bank (bank-B) in which the application program is rewritten at the time point when the activation phase is not performed, and remains started on the old bank (bank-A). When the single-bank memory ECU completes writing of the write data and completes rewriting of the application program, the single-bank memory ECU finishes the installation phase in the boot process and waits for activation (t<b>12</b>).</p><p id="p-0467" num="0466">When the power supply management ECU <b>20</b> switches the vehicle power from the IG power to the +B power in response to an activation instruction from the CGW <b>13</b>, each of the double-bank memory ECU and the single-bank suspend memory ECU switches from the old bank to the new bank to be started in the new bank, and initiates a post-programming phase (hereinafter, also referred to as an activation phase) in the new bank start. The single-bank memory ECU initiates restart, and initiates the activation phase in restart after installation is completed (t<b>13</b> and t<b>14</b>). In the activation, for example, it is checked that accurate start is performed by the new program, or the CGW <b>13</b> is notified of version information.</p><p id="p-0468" num="0467">When the activation has been completed, and the power supply management ECU <b>20</b> switches the vehicle power from the IG power to the +B power in response to an activation completion instruction from the CGW <b>13</b>, the DCM <b>12</b> transitions from the data transfer/center communication operation to a sleep/stop operation and initiates the sleep/stop operation. The CGW <b>13</b> transitions from the reprogramming master operation to the sleep/stop operation and initiates the sleep/stop operation. Each of the double-bank memory ECU, single-bank suspend memory ECU, and single-bank memory ECU transitions from the new bank start to the sleep/stop operation (t<b>15</b>).</p><p id="p-0469" num="0468">Thereafter, when the user switches on the IG switch in an OFF state such that the vehicle power switches from the +B power to the IG power, each of the double-bank memory ECU and the single-bank suspend memory ECU starts the new application program with the new bank (bank-B) as a start bank, and the single-bank memory ECU starts the new application program (t<b>16</b>).</p><p id="p-0470" num="0469">(b) Case where Application Program is Rewritten by Using Self-Retention Power</p><p id="p-0471" num="0470">The case where an application program is rewritten by using self-retention power will be described with reference to <figref idref="DRAWINGS">FIGS. <b>51</b> and <b>52</b></figref>. Rewriting of the application program using the self-retention power indicates a configuration in which a rewrite operation is controlled by using the self-retention power circuit. When the user switches on the IG switch in an OFF state such that the vehicle power switches from the +B power to the IG power, each of the DCM <b>12</b>, the CGW <b>13</b>, the double-bank memory ECU, the single-bank suspend memory ECU, and the single-bank memory ECU initiates a normal operation (t<b>21</b>).</p><p id="p-0472" num="0471">When a notification of initiation of download is sent from the center device <b>3</b>, that is, when a notification that update is available due to a new program is sent, the DCM <b>12</b> transitions from the normal operation to a download operation, and initiates to download a distribution package from the center device <b>3</b> (t<b>22</b>). When the download of the distribution package from the center device <b>3</b> has been completed, the DCM <b>12</b> returns from the download operation to the normal operation (t<b>23</b>).</p><p id="p-0473" num="0472">When a notification of a rewrite instruction signal (installation instruction signal) is sent from the center device <b>3</b> or the CGW <b>13</b>, the DCM <b>12</b> transitions from the normal operation to a data transfer/center communication operation, and initiates the data transfer/center communication operation (t<b>24</b>). That is, the DCM <b>12</b> extracts write data from the distribution package, initiates to transfer the write data to the CGW <b>13</b>, acquires a rewrite progress situation from the CGW <b>13</b>, and initiates to notify the center device <b>3</b> of the rewrite progress situation.</p><p id="p-0474" num="0473">When acquisition of the write data from the DCM <b>12</b> is initiated, the CGW <b>13</b> transitions from the normal operation to a reprogramming master operation, initiates the reprogramming master operation, initiates to distribute the write data to the double-bank memory ECU, and instructs the double-bank memory ECU to write the write data. When the double-bank memory ECU initiates to receive write data from the CGW <b>13</b>, the double-bank memory ECU initiates a programming phase (hereinafter, also referred to as an installation phase) in a normal operation. That is, the double-bank memory ECU performs the installation of the application program on the background while performing the normal operation. The double-bank memory ECU initiates to write the received write data into the flash memory and initiates to rewrite the application program.</p><p id="p-0475" num="0474">When the user switches off the IG switch in an ON state such that the vehicle power switches from the IG power to the +B power during rewriting of the application program in the double-bank memory ECU (t<b>25</b>), the DCM <b>12</b> continues the data transfer/center communication operation, the CGW <b>13</b> continues the reprogramming master operation, and the double-bank memory ECU continues the installation phase and continues rewriting of the application program immediately after the vehicle power switches from the IG power to the +B power. When a self-retention period that is a preset period elapses after the vehicle power switches from the IG power to the +B power, the DCM <b>12</b> stops the data transfer/center communication operation, the CGW <b>13</b> stops the reprogramming master operation, and the double-bank memory ECU stops the installation phase and stops rewriting of the application program (t<b>26</b>). That is, the installation is continued by supplying power from the vehicle battery <b>40</b> until a predetermined time elapses after the IG switch <b>42</b> is turned off.</p><p id="p-0476" num="0475">Thereafter, when the user switches on the IG switch in an OFF state such that the vehicle power switches from the +B power to the IG power, the DCM <b>12</b> resumes the data transfer/center communication operation, the CGW <b>13</b> resumes the reprogramming master operation, and the double-bank memory ECU resumes the installation phase and resumes rewriting of the application program (t<b>27</b>). That is, the user switches off IG switch in an ON state such that the vehicle power switches from IG power to +B power, and then the user switches on the IG switch in an OFF state such that the vehicle power switches from +B power to IG power, and, each time a trip occurs, the double-bank memory ECU repeats stopping and resuming of rewriting of the application program (t<b>28</b> to t<b>30</b>). However, until the self-retention period elapses after the vehicle power switches from the IG power to the +B power, the DCM <b>12</b> continues the data transfer/center communication operation, the CGW <b>13</b> continues the reprogramming master operation, and the double-bank memory ECU continues the installation phase and continues rewriting of the application program.</p><p id="p-0477" num="0476">When the double-bank memory ECU completes writing of the write data, and completes rewriting of the application program, the double-bank memory ECU finishes the installation phase, and transitions from the normal operation to activation standby. That is, the double-bank memory ECU is not started on the new bank (bank-B) in which the application program is rewritten at the time point when the activation phase is not performed, and remains started on the old bank (bank-A) (t<b>31</b>).</p><p id="p-0478" num="0477">When the user switches off the IG switch in an ON state such that the vehicle power from the IG power to the +B power and rewriting of the application program is completed at that time in the double-bank memory ECU at that time, each of the single-bank suspend memory ECU and the single-bank memory ECU transitions from the normal operation to a boot process, initiates the boot process, and initiates the installation phase in the boot process (t<b>32</b>).</p><p id="p-0479" num="0478">When the single-bank suspend memory ECU and the single-bank memory ECU complete writing of the write data, and complete rewriting of the application program, the single-bank suspend memory ECU and the single-bank memory ECU finish the installation phase in the boot process (t<b>33</b>). When the vehicle power switches from the +B power to the IG power by the CGW <b>13</b> transmitting the power supply start request to the power supply management ECU <b>20</b>, the DCM <b>12</b> resumes the data transfer/center communication operation (t<b>34</b>).</p><p id="p-0480" num="0479">When the single-bank suspend memory ECU completes writing of the write data and completes rewriting of the application program, the single-bank suspend memory ECU transitions from the boot process to activation standby. That is, the single-bank suspend memory ECU is not started on the new bank (bank-B) in which the application program is rewritten at the time point when the activation phase is not performed, and remains started on the old bank (bank-A). When the single-bank memory ECU completes writing of the write data and completes rewriting of the application program, the single-bank memory ECU finishes the installation phase in the boot process and waits for activation (t<b>35</b>).</p><p id="p-0481" num="0480">When the power supply management ECU <b>20</b> switches the vehicle power from the IG power to the +B power in response to an activation instruction from the CGW <b>13</b>, each of the double-bank memory ECU and the single-bank suspend memory ECU switches from the old bank to the new bank to be started on the new bank, and initiates an activation phase in the new bank start. The single-bank memory ECU initiates restart, and initiates the activation phase in restart after installation is completed (t<b>36</b> and t<b>37</b>).</p><p id="p-0482" num="0481">When the activation has been completed, and the power supply management ECU <b>20</b> switches the vehicle power from the IG power to the +B power in response to an activation completion instruction from the CGW <b>13</b>, the DCM <b>12</b> transitions from the data transfer/center communication operation to a sleep/stop operation and initiates the sleep/stop operation. The CGW <b>13</b> transitions from the reprogramming master operation to the sleep/stop operation and initiates the sleep/stop operation. Each of the double-bank memory ECU, single-bank suspend memory ECU, and single-bank memory ECU transitions from the new bank start to the sleep/stop operation (t<b>38</b>).</p><p id="p-0483" num="0482">Thereafter, when the user switches on the IG switch in an OFF state such that the vehicle power switches from the +B power to the IG power, each of the double-bank memory ECU and the single-bank suspend memory ECU starts the new application program with the new bank (bank-B) as a start bank, and the single-bank memory ECU starts the new application program (t<b>39</b>).</p><p id="p-0484" num="0483">Prior to download of a distribution package from the center device <b>3</b> and distribution of write data to the rewrite target ECU <b>19</b>, the CGW <b>13</b> performs the following checking. Prior to download of a distribution package from the center device <b>3</b>, the CGW <b>13</b> checks a radio wave environment, a remaining battery charge of the vehicle battery <b>40</b>, and a memory capacity of the DCM <b>12</b> such that the distribution package can be downloaded normally. Prior to distribution of write data to the rewrite target ECU <b>19</b>, the CGW <b>13</b> performs detection of an intrusion sensor, detection of a door lock, detection of a curtain, and detection of IG-off as a check of a manned environment in order not to make an installation environment unstable such that write data can be distributed normally, and checks a version and the occurrence of abnormality as a check of whether or not the rewrite target ECU <b>19</b> can be written. The CGW <b>13</b> performs a falsification check, access authentication, a version check, and the like as a check of write data to be distributed to the rewrite target ECU <b>19</b> prior to initiation of installation, performs a communication disruption check, an error occurrence check, and the like during the installation, and performs a version check, an integrity check, a diagnostic trouble code (DTC, error code) check, and the like after the installation is completed.</p><p id="p-0485" num="0484">Next, a screen displayed on the display terminal <b>5</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>53</b> to <b>69</b></figref>. As illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, in a configuration in which an application program of the rewrite target ECU <b>19</b> is rewritten through OTA, there are phases of a campaign notification, download, installation, and activation. The campaign notification is a notification of program update. For example, the campaign notification is that the master device <b>11</b> downloads distribution specification data or the like in response to a determination that update of an application program is available in the center device <b>3</b>. The display terminal <b>5</b> displays a screen in each phase as rewriting of the application program progresses. Here, a screen displayed on the in-vehicle display <b>7</b> will be described.</p><p id="p-0486" num="0485">As illustrated in <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the CGW <b>13</b> displays a navigation screen <b>501</b> such as a well-known route guidance screen, which is one of the navigation functions, on the in-vehicle display <b>7</b> at a normal time prior to a campaign notification. When the campaign notification occurs in this state, the CGW <b>13</b> displays a campaign notification icon <b>501</b><i>a </i>indicating the occurrence of the campaign notification on the lower right of the navigation screen <b>501</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>55</b></figref>. The user can recognize the occurrence of the campaign notification regarding the update of the application program by checking the display of the campaign notification icon <b>501</b><i>a. </i></p><p id="p-0487" num="0486">When the user operates the campaign notification icon <b>501</b><i>a </i>in this state, as illustrated in <figref idref="DRAWINGS">FIG. <b>56</b></figref>, the CGW <b>13</b> displays a campaign notification screen <b>502</b> in a pop-up form on the navigation screen <b>501</b>. The CGW <b>13</b> is not limited to displaying the campaign notification screen <b>502</b> in a pop-up form, and may employ other display aspects. On the campaign notification screen <b>502</b>, the CGW <b>13</b> displays, for example, a guidance such as &#x201c;software update is available&#x201d; to notify the user of the occurrence of the campaign notification, and displays a &#x201c;check&#x201d; button <b>502</b><i>a </i>and a &#x201c;later&#x201d; button <b>502</b><i>b </i>to wait for the user operation. In this case, the user may proceed to the next screen for initiating rewriting of the application program by operating the &#x201c;check&#x201d; button <b>502</b><i>a</i>. When the user operates the &#x201c;later&#x201d; button <b>502</b><i>b</i>, the CGW <b>13</b> deletes the pop-up display of the campaign notification screen <b>502</b>, and returns the screen to the screen displaying the campaign notification icon <b>501</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>32</b></figref>.</p><p id="p-0488" num="0487">When the user operates the &#x201c;check&#x201d; button <b>502</b><i>a </i>in this state, as illustrated in <figref idref="DRAWINGS">FIG. <b>57</b></figref>, the CGW <b>13</b> switches the display from the navigation screen <b>501</b> to a download approval screen <b>503</b>, and displays the download approval screen <b>503</b> on the in-vehicle display <b>7</b>. In the download approval screen <b>503</b>, the CGW <b>13</b> notifies the user of a campaign ID or the name of the update, displays a &#x201c;download initiation&#x201d; button <b>503</b><i>a</i>, a &#x201c;details check&#x201d; button <b>503</b><i>b</i>, and a &#x201c;back&#x201d; button <b>503</b><i>c</i>, and waits for the user operation. In this case, the user may initiate download by operating the &#x201c;download initiation&#x201d; button <b>503</b><i>a</i>, display details of the download by operating the &#x201c;details check&#x201d; button <b>503</b><i>b</i>, and reject the download and return to the previous screen by displaying the &#x201c;back&#x201d; button <b>503</b><i>c</i>. In the case where the &#x201c;back&#x201d; button <b>503</b><i>c </i>is operated, the user may proceed to a screen for initiating the download by operating the campaign notification icon <b>501</b><i>a. </i></p><p id="p-0489" num="0488">When the user operates the &#x201c;details check&#x201d; button <b>503</b><i>b </i>in a state in which the download approval screen <b>503</b> is displayed, as illustrated in <figref idref="DRAWINGS">FIG. <b>58</b></figref>, the CGW <b>13</b> performs switching of display contents of the download approval screen <b>503</b> and displays the details of the download on the in-vehicle display <b>7</b>. The CGW <b>13</b> displays a content of the update, the time required for the update, restrictions on vehicle functions due to the update, and the like by using the received distribution specification data as the details of the download. When the user operates the &#x201c;download initiation&#x201d; button <b>503</b><i>a</i>, the CGW <b>13</b> initiates to download a distribution package via the DCM <b>12</b>. In parallel to initiation of the download of the distribution package, as illustrated in <figref idref="DRAWINGS">FIG. <b>59</b></figref>, the CGW <b>13</b> switches the display from the download approval screen <b>503</b> to the navigation screen <b>501</b>, displays the navigation screen <b>501</b> on the in-vehicle display <b>7</b> again, and displays a download-in-progress icon <b>501</b><i>b </i>indicating that the download is in progress on the lower right of the navigation screen <b>501</b>. The user can recognize that the download of the distribution package is in progress by checking the display of the download-in-progress icon <b>501</b><i>b. </i></p><p id="p-0490" num="0489">When the user operates the download-in-progress icon <b>501</b><i>b </i>in this state, as illustrated in <figref idref="DRAWINGS">FIG. <b>60</b></figref>, the CGW <b>13</b> switches the display from the navigation screen <b>501</b> to a download-in-progress screen <b>504</b>, and displays the download-in-progress screen <b>504</b> on the in-vehicle display <b>7</b>. The CGW <b>13</b> notifies the user that the download is in progress, displays a &#x201c;details check&#x201d; button <b>504</b><i>a</i>, a &#x201c;back&#x201d; button <b>504</b><i>b</i>, and a &#x201c;cancel&#x201d; button <b>504</b><i>c </i>on the download-in-progress screen <b>504</b>, and waits for the user operation. In this case, the user can display details during download by operating the &#x201c;details check&#x201d; button <b>504</b><i>a</i>, and can stop the download by operating the &#x201c;cancel&#x201d; button <b>504</b><i>c. </i></p><p id="p-0491" num="0490">When the download has been completed, the CGW <b>13</b> displays a download completion notification screen <b>505</b> in a pop-up form on the navigation screen <b>501</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>61</b></figref>. On the download completion notification screen <b>505</b>, for example, the CGW <b>13</b> displays a guidance such as &#x201c;downloaded software is updatable&#x201d; to notify the user of the completion of the download, displays a &#x201c;check&#x201d; button <b>505</b><i>a </i>and a &#x201c;later&#x201d; button <b>505</b><i>b</i>, and waits for the user operation. In this case, the user may proceed to a screen for initiating installation by operating the &#x201c;check&#x201d; button <b>505</b><i>a. </i></p><p id="p-0492" num="0491">When the user operates the &#x201c;check&#x201d; button <b>505</b><i>a </i>in this state, as illustrated in <figref idref="DRAWINGS">FIG. <b>62</b></figref>, the CGW <b>13</b> switches the display from the navigation screen <b>501</b> to an installation approval screen <b>506</b>, and displays the installation approval screen <b>506</b> on the in-vehicle display <b>7</b>. On the installation approval screen <b>506</b>, the CGW <b>13</b> notifies the user of the time required for installation, or restrictions and setting of schedules, displays an &#x201c;immediate update&#x201d; button <b>506</b><i>a</i>, an &#x201c;update reservation&#x201d; button <b>506</b><i>b</i>, and a &#x201c;back&#x201d; button <b>506</b><i>c</i>, and waits for the user operation. In this case, the user may immediately initiate the installation by operating the &#x201c;immediate update&#x201d; button <b>506</b><i>a</i>. The user may also reserve and initiate the installation by setting the time at which the installation is to be performed and operating the &#x201c;update reservation&#x201d; button <b>506</b><i>b</i>. The user may reject the installation and return to the previous screen by operating the &#x201c;back&#x201d; button <b>506</b><i>c</i>. In a case where the &#x201c;back&#x201d; button <b>506</b><i>c </i>is operated, the user may proceed to a screen for initiating the installation by operating the download-in-progress icon <b>501</b><i>b. </i></p><p id="p-0493" num="0492">When the user operates the &#x201c;immediate update&#x201d; button <b>506</b><i>a </i>in this state, as illustrated in <figref idref="DRAWINGS">FIG. <b>63</b></figref>, the CGW <b>13</b> performs switching of display contents of the installation approval screen <b>506</b>, and displays details of the installation on the in-vehicle display <b>7</b>. The CGW <b>13</b> receives an installation request on the installation approval screen <b>506</b> and notifies the user that the installation is to be initiated.</p><p id="p-0494" num="0493">When the installation is initiated, as illustrated in <figref idref="DRAWINGS">FIG. <b>64</b></figref>, the CGW <b>13</b> switches the display from the installation approval screen <b>506</b> to the navigation screen <b>501</b>, displays the navigation screen <b>501</b> on the in-vehicle display <b>7</b> again, and displays an installation-in-progress icon <b>501</b><i>c </i>indicating that the installation is in progress on the lower right of the navigation screen <b>501</b>. The user can recognize that the installation is in progress by checking the display of the installation-in-progress icon <b>501</b><i>c. </i></p><p id="p-0495" num="0494">When the user operates the installation-in-progress icon <b>501</b><i>c </i>in this state, as illustrated in <figref idref="DRAWINGS">FIG. <b>65</b></figref>, the CGW <b>13</b> switches the display from the navigation screen <b>501</b> to an installation-in-progress screen <b>507</b>, and displays the installation-in-progress screen <b>507</b> on the in-vehicle display <b>7</b>. The CGW <b>13</b> notifies the user that the installation is in progress on the installation-in-progress screen <b>507</b>. The CGW <b>13</b> may, for example, cause the installation-in-progress screen <b>507</b> to show the time-remaining or percentage-of-progress of the installation.</p><p id="p-0496" num="0495">When the installation has been completed, as illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref>, the CGW <b>13</b> switches the display from the navigation screen <b>501</b> to an activation approval screen <b>508</b>, and displays the activation approval screen <b>508</b> on the in-vehicle display <b>7</b>. On the activation approval screen <b>508</b>, the CGW <b>13</b> notifies the user of a content of the activation and displays a &#x201c;back&#x201d; button <b>508</b><i>a </i>and an &#x201c;OK&#x201d; button <b>508</b><i>b </i>to wait for the user operation. In this case, the user may reject the activation and return to the previous screen by operating the &#x201c;back&#x201d; button <b>508</b><i>a</i>. The user may approve the activation by operating the &#x201c;OK&#x201d; button <b>508</b><i>b</i>. In a case where the &#x201c;back&#x201d; button <b>508</b><i>a </i>is operated, the user may proceed to a screen for executing the activation by operating the installation-in-progress icon <b>501</b><i>c</i>. Such display or approval may be omitted without being displayed by the user's settings or scenes of the program.</p><p id="p-0497" num="0496">When the user turns on the IG power in the state after the user operates the &#x201c;OK&#x201d; button <b>508</b><i>b</i>, as illustrated in <figref idref="DRAWINGS">FIG. <b>67</b></figref>, the CGW <b>13</b> displays an activation completion notification screen <b>509</b> in a pop-up form on the navigation screen <b>501</b>. On the activation completion notification screen <b>509</b>, the CGW <b>13</b> displays, for example, a guidance such as &#x201c;software update has been completed&#x201d; to notify the user of the completion of the activation, displays an &#x201c;OK&#x201d; button <b>509</b><i>a </i>and a &#x201c;details check&#x201d; button <b>509</b><i>b</i>, and waits for the user operation. In this case, the user may delete the pop-up display on the activation completion notification screen <b>509</b> by operating the &#x201c;OK&#x201d; button <b>509</b><i>a</i>, and may display details of the completion of the activation by operating the &#x201c;details check&#x201d; button <b>509</b><i>b. </i></p><p id="p-0498" num="0497">When the user operates the &#x201c;OK&#x201d; button <b>509</b><i>a </i>in this state, as illustrated in FIG.</p><p id="p-0499" num="0498"><b>68</b>, the CGW <b>13</b> switches the display from the navigation screen <b>501</b> to a check operation screen <b>510</b>, and displays the check operation screen <b>510</b> on the in-vehicle display <b>7</b>. On the check operation screen <b>510</b>, the CGW <b>13</b> notifies the user of the completion of the activation, displays a &#x201c;details check&#x201d; button <b>510</b><i>a </i>and an &#x201c;OK&#x201d; button <b>510</b><i>b</i>, and waits for the user operation. In this case, the user may display details of the completion of the activation by operating the &#x201c;details check&#x201d; button <b>510</b><i>a. </i></p><p id="p-0500" num="0499">When the user operates the &#x201c;details check&#x201d; button <b>510</b><i>a </i>in this state, as illustrated in <figref idref="DRAWINGS">FIG. <b>69</b></figref>, the CGW <b>13</b> performs switching of display contents of the check operation screen <b>510</b>, and displays details of the completion of the activation on the in-vehicle display <b>7</b>. The CGW <b>13</b> displays a function added or changed due to the update as update details, and displays the &#x201c;OK&#x201d; button <b>510</b><i>b</i>. When the user operates the &#x201c;OK&#x201d; buttons <b>509</b><i>a </i>and <b>510</b><i>b</i>, the CGW <b>13</b> determines that the user has confirmed the software update completion.</p><p id="p-0501" num="0500">As described above, the vehicle-side system <b>4</b> controls the respective operation phases such as the campaign notification, the download, the installation, the activation, and the update completion, and presents display corresponding to each operation phase to the user. In the above description, the CGW <b>13</b> is configured to control the display, but the in-vehicle display <b>7</b> may be configured to receive an operation phase or distribution specification data from the CGW <b>13</b> and to perform the display.</p><p id="p-0502" num="0501">Next, characteristic processes performed by the vehicle program rewriting system <b>1</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>70</b> to <b>256</b></figref>. The vehicle program rewriting system <b>1</b> performs the following characteristic processes.</p><p id="p-0503" num="0502">(1) Distribution package transmission determination process</p><p id="p-0504" num="0503">(2) Distribution package download determination process</p><p id="p-0505" num="0504">(3) Write data transfer determination process</p><p id="p-0506" num="0505">(4) Write data acquisition determination process</p><p id="p-0507" num="0506">(5) Installation instruction determination process</p><p id="p-0508" num="0507">(6) Security access key management process</p><p id="p-0509" num="0508">(7) Write data verification process</p><p id="p-0510" num="0509">(8) Data storage bank information transmission control process</p><p id="p-0511" num="0510">(9) Non-rewrite target power supply management process</p><p id="p-0512" num="0511">(10) File transfer control process</p><p id="p-0513" num="0512">(11) Write data distribution control process</p><p id="p-0514" num="0513">(12) Activation request instruction process</p><p id="p-0515" num="0514">(13) Activation execution control process</p><p id="p-0516" num="0515">(14) Rewrite target group management process</p><p id="p-0517" num="0516">(15) Rollback execution control process</p><p id="p-0518" num="0517">(16) Rewrite progress situation display control process</p><p id="p-0519" num="0518">(17) Difference data consistency determination process</p><p id="p-0520" num="0519">(18) Rewrite execution control process</p><p id="p-0521" num="0520">(19) Session establishment process</p><p id="p-0522" num="0521">(20) Retry point specifying process</p><p id="p-0523" num="0522">(21) Progress state synchronization control process</p><p id="p-0524" num="0523">(22) Display control information transmission control process</p><p id="p-0525" num="0524">(23) Display control information reception control process</p><p id="p-0526" num="0525">(24) Screen display control process for progress display</p><p id="p-0527" num="0526">(25) Program update notification control process</p><p id="p-0528" num="0527">(26) Self-retention power execution control process</p><p id="p-0529" num="0528">Each of the center device <b>3</b>, the DCM <b>12</b>, the CGW <b>13</b>, the ECU <b>19</b>, and the in-vehicle display <b>7</b> has the following functional blocks as configurations for performing the characteristic processes (1) to (26) described above.</p><p id="p-0530" num="0529">As illustrated in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, the center device <b>3</b> has a distribution package transmission unit <b>51</b>. When a download request for a distribution package is received from the DCM <b>12</b>, the distribution package transmission unit <b>51</b> transmits the distribution package to the DCM <b>12</b>. In addition to the above-described configuration, the center device <b>3</b> includes a distribution package transmission determination unit <b>52</b>, a progress state synchronization control unit <b>53</b>, a display control information transmission control unit <b>54</b>, and a write data selection unit <b>55</b> (corresponding to an update data selection unit) as a configuration of performing the characteristic processes. When data storage bank information is received from the master device <b>11</b>, the write data selection unit <b>55</b> (corresponding to an update data selection unit) selects write data conforming to an inactive bank on the basis of a software version and an active bank specified by the received data storage bank information. That is, the distribution package transmission unit <b>51</b> transmits the distribution package including the write data selected by the write data selection unit <b>55</b> to the DCM <b>12</b>. The functional blocks performing the characteristic processes will be described later.</p><p id="p-0531" num="0530">As illustrated in <figref idref="DRAWINGS">FIG. <b>71</b></figref>, the DCM <b>12</b> includes a download request transmission unit <b>61</b>, a distribution package download unit <b>62</b>, a write data extraction unit <b>63</b>, a write data transfer unit <b>64</b>, a rewrite specification data extraction unit <b>65</b>, and a rewrite specification data transfer unit <b>66</b>. The download request transmission unit <b>61</b> transmits a download request for a distribution package to the center device <b>3</b>. The distribution package download unit <b>62</b> downloads the distribution package from the center device <b>3</b>. When the distribution package is downloaded from the center device <b>3</b> by the distribution package download unit <b>62</b>, the write data extraction unit <b>63</b> extracts write data from the downloaded distribution package.</p><p id="p-0532" num="0531">When the write data is extracted from the distribution package by the write data extraction unit <b>63</b>, the write data transfer unit <b>64</b> transfers the extracted write data to the CGW <b>13</b>. When the distribution package is downloaded from the center device <b>3</b> by the distribution package download unit <b>62</b>, the rewrite specification data extraction unit <b>65</b> extracts rewrite specification data from the downloaded distribution package. When rewrite specification data is extracted from the distribution package by the rewrite specification data extraction unit <b>56</b>, the rewrite specification data transfer unit <b>66</b> transfers the extracted rewrite specification data to the CGW <b>13</b>. In addition to the above-described configuration, the DCM <b>12</b> includes a distribution package download determination unit <b>67</b> and a write data transfer determination unit <b>68</b> as a configuration of performing the characteristic processes. The functional blocks performing the characteristic processes will be described later.</p><p id="p-0533" num="0532">As illustrated in <figref idref="DRAWINGS">FIGS. <b>72</b> and <b>73</b></figref>, the CGW <b>13</b> includes an acquisition request transmission unit <b>71</b>, a write data acquisition unit <b>72</b> (corresponding to an update data storage unit), a write data distribution unit <b>73</b> (corresponding to an update data distribution unit), a rewrite specification data acquisition unit <b>74</b>, and a rewrite specification data analysis unit <b>75</b>. The write data acquisition unit <b>72</b> acquires write data from the DCM <b>12</b> due to transfer of the write data from the DCM <b>12</b>. In a case where the write data is acquired by the write data acquisition unit <b>72</b>, the write data distribution unit <b>73</b> distributes the acquired write data to the rewrite target ECU <b>19</b> when the distribution timing of the write data is reached. The rewrite specification data acquisition unit <b>74</b> acquires rewrite specification data from the DCM <b>12</b> due to transfer of the rewrite specification data from the DCM <b>12</b>. When the rewrite specification data is acquired by the rewrite specification data acquisition unit <b>74</b>, the rewrite specification data analysis unit <b>75</b> analyzes the acquired rewrite specification data.</p><p id="p-0534" num="0533">In addition to the above-described configuration, the CGW <b>13</b> includes, as a configuration of performing the characteristic processes, a write data acquisition determination unit <b>76</b>, an installation instruction determination unit <b>77</b>, a security access key management unit <b>78</b>, a write data verification unit <b>79</b>, a data storage bank information transmission control unit <b>80</b>, a non-rewrite target power supply management unit <b>81</b>, a file transfer control unit <b>82</b>, a write data distribution control unit <b>83</b>, an activation request instruction unit <b>84</b>, a rewrite target group management unit <b>85</b>, a rollback execution control unit <b>86</b>, a rewrite progress situation display control unit <b>87</b>, a progress state synchronization control unit <b>88</b>, a display control information reception control unit <b>89</b>, a progress display screen display control unit <b>90</b>, a program update notification control unit <b>91</b>, a self-retention power execution control unit <b>92</b>. The functional blocks performing the characteristic processes will be described later.</p><p id="p-0535" num="0534">As illustrated in <figref idref="DRAWINGS">FIG. <b>74</b></figref>, the ECU <b>19</b> includes a write data receiving unit <b>101</b> and a program rewriting unit <b>102</b>. The write data receiving unit <b>101</b> receives write data from the CGW <b>13</b>. When the write data is received from the CGW <b>13</b> by the write data receiving unit <b>101</b>, the program rewriting unit <b>102</b> writes the received write data into a flash memory and thus rewrites an application program. In addition to the above-described configuration, the ECU <b>19</b> includes a difference data consistency determination unit <b>103</b>, a rewrite execution control unit <b>104</b>, a session establishment unit <b>105</b>, a retry point specifying unit <b>106</b>, an activation execution control unit <b>107</b>, and a self-retention power execution control unit <b>108</b> as a configuration of performing the characteristic processes. The functional blocks performing the characteristic processes will be described later.</p><p id="p-0536" num="0535">As illustrated in <figref idref="DRAWINGS">FIG. <b>75</b></figref>, the in-vehicle display <b>7</b> includes a distribution specification data reception control unit <b>111</b>. The distribution specification data reception control unit <b>111</b> controls reception of distribution specification data.</p><p id="p-0537" num="0536">Hereinafter, each of the processes (1) to (26) described above will be described in order.</p><p id="p-0538" num="0537">(1) Distribution Package Transmission Determination Process and (2) Distribution Package Download Determination Process</p><p id="p-0539" num="0538">The distribution package transmission determination process in the center device <b>3</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>76</b> and <b>77</b></figref>, and the distribution package download determination process in the master device <b>11</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>78</b> and <b>79</b></figref>.</p><p id="p-0540" num="0539">As illustrated in <figref idref="DRAWINGS">FIG. <b>76</b></figref>, the center device <b>3</b> includes a software information acquisition unit <b>52</b><i>a</i>, an update availability determination unit <b>52</b><i>b</i>, an update propriety determination unit <b>52</b><i>c</i>, and a campaign information transmission unit <b>52</b><i>d </i>in the distribution package transmission determination unit <b>52</b>. The software information acquisition unit <b>52</b><i>a </i>acquires software information of each ECU <b>19</b> from the vehicle side. Specifically, the software information acquisition unit <b>52</b><i>a </i>acquires ECU configuration information including software information such as a version and a write bank and hardware information from the vehicle side. The software information acquisition unit <b>52</b><i>a </i>may acquire vehicle condition information such as a trouble code, setting of an anti-theft alarm function, and license contract information from the vehicle side in combination with the ECU configuration information.</p><p id="p-0541" num="0540">When the software information is acquired by the software information acquisition unit <b>52</b><i>a</i>, the update availability determination unit <b>52</b><i>b </i>determines whether or not availability of update data for the vehicle on the basis of the acquired software information. That is, the update availability determination unit <b>52</b><i>b </i>compares a version of the acquired software information with a version of the latest software information to be managed thereby, to determine whether both of the versions match each other, and thus determines availability of update data for the vehicle. The update availability determination unit <b>52</b><i>b </i>determines that update data for the vehicle is unavailable when it is determined that both of the versions match each other, and determines that update data for the vehicle is available when it is determined that both of the versions do not match each other.</p><p id="p-0542" num="0541">When it is determined by the update availability determination unit <b>52</b><i>b </i>that update data for the vehicle is available, the update propriety determination unit <b>52</b><i>c </i>determines whether or not a vehicle condition is a condition suitable for updating a program or the like using a distribution package. Specifically, the update propriety determination unit <b>52</b><i>c </i>determines whether or not a license contract is established, whether or not a vehicle position is within a predetermined range registered in advance by the user, whether or not a setting of an alarm function of the vehicle is validated, whether or not trouble information regarding the ECU <b>19</b> is generated, and determines whether or not a vehicle condition is a condition suitable for downloading a distribution package. That is, the update propriety determination unit <b>52</b><i>c </i>determines whether or not the vehicle is a vehicle in which a program may be updated against the intention of the user, or a vehicle in which installation may fail after download even when the download is successful.</p><p id="p-0543" num="0542">When it is determined that the license contract is established, the vehicle position is within a predetermined range registered in advance by the user, the setting of the alarm function of the vehicle is validated, and the trouble information regarding the ECU <b>19</b> is not generated, the update propriety determination unit <b>52</b><i>c </i>determines that the vehicle condition is a condition suitable for updating a program or the like using a distribution package. The update propriety determination unit <b>52</b><i>c </i>determines that the vehicle condition is not a condition suitable for updating a program or the like using a distribution package when it is determined that at least any of the following is true: the license contract is not established, the vehicle position is not within a predetermined range registered in advance by the user, the setting of the alarm function of the vehicle is not validated, and the trouble information regarding the ECU <b>19</b> is generated.</p><p id="p-0544" num="0543">The campaign information transmission unit <b>52</b><i>d </i>transmits campaign information to the master device <b>11</b> when the update propriety determination unit <b>52</b><i>c </i>determines that the vehicle condition is a condition suitable for updating a program or the like using a distribution package. The campaign information transmission unit <b>52</b><i>d </i>does not transmit the campaign information to the master device <b>11</b> when it is determined by the update propriety determination unit <b>52</b><i>c </i>that the vehicle condition is not a condition suitable for updating a program or the like using a distribution package. The campaign information transmission unit <b>52</b><i>d </i>performs the determination described above, and thus stores information regarding a vehicle in which the campaign information is not transmitted to the master device <b>11</b>. The center device <b>3</b> may display the information regarding a vehicle in which the campaign information is not transmitted to the master device <b>11</b>.</p><p id="p-0545" num="0544">Next, an operation of the distribution package transmission determination unit <b>52</b> in the center device <b>3</b> will be described with reference to <figref idref="DRAWINGS">FIG. <b>77</b></figref>. The center device <b>3</b> executes a distribution package transmission determination program and performs a distribution package transmission determination process.</p><p id="p-0546" num="0545">When the distribution package transmission determination process is initiated, the center device <b>3</b> acquires software information from the vehicle side (S<b>101</b>; corresponding to a software information acquisition procedure). That is, the center device <b>3</b> determines whether or not software update for the vehicle is available. The center device <b>3</b> determines availability of update data for the vehicle on the basis of the acquired software information (S<b>102</b>; corresponding to an update availability determination procedure). When it is determined that update data for the vehicle is available (S<b>102</b>: YES), the center device <b>3</b>, it is determined whether the vehicle condition is in a condition suitable for updating the program or the like using the distribution package (S<b>103</b>; corresponding to an update propriety determination procedure). When it is determined that the vehicle condition is a condition suitable for updating a program or the like using a distribution package (S<b>103</b>: YES), the center device <b>3</b> transmits campaign information to the master device <b>11</b> (S<b>104</b>; corresponding to a campaign information transmission procedure), and finishes the distribution package transmission determination process.</p><p id="p-0547" num="0546">When it is determined that update data for the vehicle is not available (S<b>102</b>: NO), the center device <b>3</b> transmits, to the master device <b>11</b>, information indicating that the vehicle is not a distribution package transmission target, that is, update of an application program is not available (S<b>105</b>), and finishes the transmission determination process of the distribution package. When it is determined that the vehicle condition is not a condition suitable for updating a program or the like using the distribution package (S<b>103</b>: NO), the center device <b>3</b> transmits, to the master device <b>11</b>, information indicating that the vehicle condition is not suitable for updating a program or the like and the reason therefor (S<b>106</b>), and finishes the distribution package transmission determination process. In this case, the master device <b>11</b> displays, on the in-vehicle display <b>7</b>, the information indicating that the vehicle condition is not suitable for updating a program or the like and the reason therefor. For example, when a license contract is not established, the master device <b>11</b> displays the content that &#x201c;the program cannot be updated because the license is not valid; please contact your dealer&#x201d; on the in-vehicle display <b>7</b>. Please contact your dealer. Display such as &#x201c;on the in-vehicle display <b>7</b>. Consequently, it is possible to present the reason why the vehicle condition is not suitable for updating a program or the like to the user, and thus to present appropriate information to the user.</p><p id="p-0548" num="0547">As described above, the center device <b>3</b> can determine whether or not a condition is suitable for updating a program or the like using a distribution package by performing the distribution package transmission determination process before transmission of the distribution package to the master device <b>11</b> and before transmission of campaign information. The center device <b>3</b> can transmit campaign information to the master device <b>11</b> so as to transmit a distribution package to the master device <b>11</b> only in a case where it is determined that a condition is suitable for updating a program or the like using the distribution package.</p><p id="p-0549" num="0548">The center device <b>3</b> can transmit the campaign information to the master device <b>11</b> in a case where a license contract is established, a vehicle position is within a predetermined range registered in advance by the user, a setting of an alarm function of the vehicle is validated, and trouble information regarding the ECU <b>19</b> is not generated as a case where a condition is suitable for updating a program or the like using a distribution package. That is, the center device <b>3</b> can prevent a situation in which the campaign information is transmitted to the master device <b>11</b> in a case where the license contract is not established, the vehicle position is out of a predetermined range such as a position far away from the home, the setting of the alarm function of the vehicle is invalidated, or the trouble information regarding the ECU <b>19</b> is generated. As described above, the center device <b>3</b> can prevent the campaign information from being transmitted to the master device <b>11</b> for a vehicle in which a program may be updated against the intention of the user, or installation may fail after download even when the download is successful.</p><p id="p-0550" num="0549">The center device <b>3</b> may perform the distribution package transmission determination process during transmission of a distribution package. In this case, when it is determined that a vehicle condition is suitable for updating a program using the distribution package during the transmission of the distribution package, the center device <b>3</b> continues the transmission of the distribution package, but, when it is determined that the vehicle condition is not suitable for updating a program using the distribution package during transmission of the distribution package, the center device stops transmission of the distribution package. That is, the center device <b>3</b> stops the transmission of the distribution package, for example, when trouble information regarding the ECU <b>19</b> occurs during the transmission of the distribution package.</p><p id="p-0551" num="0550">Next, a description will be made of a process in the master device <b>11</b> that has received the campaign information transmitted from the center device <b>3</b>. The distribution package download determination process in the master device <b>11</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>78</b> and <b>79</b></figref>. The vehicle program rewriting system <b>1</b> performs the distribution package download determination process in the master device <b>11</b>. The above-described (1) distribution package transmission determination process is a determination process performed by the center device <b>3</b> in the campaign notification phase before the download phase, but the distribution package download determination process is a determination process performed by the master device <b>11</b> in the download phase. In the present embodiment, a description will be made of a case where the DCM <b>12</b> performs the distribution package download determination process in the master device <b>11</b>, but the CGW <b>13</b> may have the function of the DCM <b>12</b> to perform the distribution package download determination process.</p><p id="p-0552" num="0551">As illustrated in <figref idref="DRAWINGS">FIG. <b>78</b></figref>, the DCM <b>12</b> includes a campaign information receiving unit <b>67</b><i>a</i>, a downloadability determination unit <b>67</b><i>b</i>, and a download execution unit <b>67</b><i>c </i>in the distribution package download determination unit <b>67</b>. The campaign information receiving unit <b>67</b><i>a </i>receives campaign information from the center device <b>3</b>. When the campaign information is received from the center device <b>3</b>, the campaign notification icon <b>501</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>55</b></figref> is displayed. When the campaign information is received by the campaign information receiving unit <b>67</b><i>a</i>, the downloadability determination unit <b>67</b><i>b </i>determines whether or not a vehicle condition is a condition in which the distribution package is downloadable. That is, the downloadability determination unit <b>67</b><i>b </i>determines whether or not a radio wave environment for communicating with the center device <b>3</b> is favorable, whether or not a remaining battery charge of the vehicle battery <b>40</b> is equal to or larger than a predetermined capacity, and whether or not a free memory capacity of the DCM <b>12</b> is equal to or larger than a predetermined capacity, and determines whether or not a vehicle condition is a condition in which the distribution package is downloadable.</p><p id="p-0553" num="0552">When it is determined that the radio wave environment is favorable, the remaining battery charge of the vehicle battery <b>40</b> is equal to or larger than the predetermined capacity, and the free memory capacity of the DCM <b>12</b> is equal to or larger than the predetermined capacity, the downloadability determination unit <b>67</b><i>b </i>determines that the vehicle condition is a condition in which the distribution package is downloadable. The downloadability determination unit <b>67</b><i>b </i>determines that the vehicle condition is not a condition in which the distribution package is downloadable when it is determined that at least any of the following is true: the radio wave environment is not favorable, and the remaining battery charge of the vehicle battery <b>40</b> is not equal to or larger than the predetermined capacity, and the free memory capacity of the DCM <b>12</b> is not equal to or larger than the predetermined capacity.</p><p id="p-0554" num="0553">As mentioned above, the downloadability determination unit <b>67</b><i>b </i>determines whether or not there is a possibility that the download cannot be completed normally. The determination in the downloadability determination unit <b>67</b><i>b </i>is performed on the condition that the &#x201c;download initiation&#x201d; button <b>503</b><i>a </i>is operated by the user on the download approval screen <b>503</b> illustrated in <figref idref="DRAWINGS">FIGS. <b>57</b> and <b>58</b></figref>. The downloadability determination unit <b>67</b><i>b </i>may be configured to determine a determination item in the center device <b>3</b>. That is, the downloadability determination unit <b>67</b><i>b </i>determines that the vehicle is in a downloadable state, for example, in a case where the setting of the alarm function of the vehicle is validated or the trouble information regarding the ECU <b>19</b> is not generated.</p><p id="p-0555" num="0554">The download execution unit <b>67</b><i>c </i>downloads the distribution package from the center device <b>3</b> when the downloadability determination unit <b>67</b><i>b </i>determines that the vehicle condition is a condition in which the distribution package is downloadable. That is, the download execution unit <b>67</b><i>c </i>executes download of the distribution package after confirming that the download can be completed normally.</p><p id="p-0556" num="0555">The download execution unit <b>67</b><i>c </i>does not download the distribution package from the center device <b>3</b> when the downloadability determination unit <b>67</b><i>b </i>determines that the vehicle condition is not a condition in which the distribution package is downloadable. That is, the download execution unit <b>67</b><i>c </i>does not execution download of the distribution package in a case where there is a possibility that the download cannot be completed normally. In this case, the download execution unit <b>67</b><i>c </i>instructs the in-vehicle display <b>7</b> to display a pop-up screen indicating that the download cannot be initiated and the reason therefor on the navigation screen <b>501</b>.</p><p id="p-0557" num="0556">Next, a description will be made of an operation of the distribution package download determination unit <b>67</b> in the master device <b>11</b> with reference to <figref idref="DRAWINGS">FIG. <b>79</b></figref>. The master device <b>11</b> executes a distribution package download determination program and thus performs the distribution package download determination process.</p><p id="p-0558" num="0557">The master device <b>11</b> receives campaign information from the center device <b>3</b> when the distribution package download determination process is initiated (S<b>201</b>; corresponding to a campaign information reception procedure). The master device <b>11</b> determines whether or not a vehicle condition is a condition in which the distribution package is downloadable (S<b>202</b>; corresponding to a downloadability determination procedure). When it is determined that the vehicle condition is a condition in which the distribution package is downloadable (S<b>202</b>: YES), the master device <b>11</b> downloads the distribution package corresponding to the campaign from the center device <b>3</b> (S<b>203</b>; corresponding to a download execution procedure), and finishes the distribution package download determination process. When it is determined that the vehicle condition is not a condition in which the distribution package is downloadable (S<b>202</b>: NO), the master device <b>11</b> does not download the distribution package from the center device <b>3</b> and finishes the distribution package download determination process.</p><p id="p-0559" num="0558">As described above, the master device <b>11</b> can determine whether or not a vehicle condition is a condition in which a distribution package is downloadable by performing the distribution package download determination process before downloading the distribution package from the center device <b>3</b>. The master device <b>11</b> can download the distribution package only in a case where the vehicle condition is a condition in which the distribution package is downloadable.</p><p id="p-0560" num="0559">The master device <b>11</b> can download the distribution package from the center device <b>3</b> in a case where the radio wave environment is favorable, the remaining battery charge of the vehicle battery <b>40</b> is equal to or larger than the predetermined capacity, and the free memory capacity of the DCM <b>12</b> is equal to or larger than the predetermined capacity, as a case suitable for downloading the distribution package. That is, in a case where the radio wave environment is not favorable, the remaining battery charge of the vehicle battery <b>40</b> is smaller than the predetermined capacity, or the free memory capacity of the DCM <b>12</b> is smaller than the predetermined capacity, it is possible to prevent a situation in which the distribution package is downloaded from the center device <b>3</b>.</p><p id="p-0561" num="0560">The master device <b>11</b> may perform the distribution package download determination process during download of the distribution package. In this case, when it is determined that the vehicle condition is a condition in which the distribution package is downloadable during download of the distribution package, the master device <b>11</b> continues download of the distribution package from the center device <b>3</b>, but, when it is determined that the vehicle condition is not a condition in which the distribution package is downloadable during download of the distribution package, the master device stops download of the distribution package from the center device <b>3</b>. That is, the master device <b>11</b> stops download of the distribution package, for example, in a case where the radio wave environment becomes unfavorable, the remaining battery charge of the vehicle battery <b>40</b> becomes smaller than the predetermined capacity, or the free memory capacity of the DCM <b>12</b> becomes smaller than the predetermined capacity, during download of the distribution package.</p><p id="p-0562" num="0561">In the above-described way, the center device <b>3</b> determines whether or not the vehicle is a vehicle in which a program may be updated against the intention of the user, or installation may fail, and the master device <b>11</b> determines whether or not there is a possibility that the download may fail in the master device <b>11</b>, so that transmission of unnecessary campaign information and a distribution package from the center device <b>3</b> to the master device <b>11</b> can be suppressed.</p><p id="p-0563" num="0562">The center device <b>3</b> has the following configuration. The center device <b>3</b> includes the software information acquisition unit <b>52</b><i>a </i>acquiring software information of an electronic control unite from a vehicle side, the update availability determination unit <b>52</b><i>b </i>determining availability of update data for the vehicle on the basis of the software information acquired by the software information acquisition unit, the update propriety determination unit <b>52</b><i>c </i>determining whether or not a vehicle condition is a condition suitable for update in a case where it is determined by the update availability determination unit that update data is available, and the campaign information transmission unit <b>52</b><i>d </i>transmitting campaign information regarding update to a vehicle master device in a case where it is determined by the update propriety determination unit that the vehicle condition is a condition suitable for the update.</p><p id="p-0564" num="0563">The master device <b>11</b> has the following configuration. The master device <b>11</b> includes the campaign information receiving unit <b>67</b><i>a </i>receiving campaign information from a center device, the downloadability determination unit <b>67</b><i>b </i>determining whether or not a vehicle condition is a condition in which a distribution package is downloadable in a case where the campaign information is received by the campaign information receiving unit, and the download execution unit <b>67</b><i>c </i>downloading the distribution package from the center device in a case where it is determined by the downloadability determination unit that the vehicle condition is a condition in which the distribution package is downloadable.</p><p id="p-0565" num="0564">(3) Write Data Transfer Determination Process, (4) Write Data Acquisition Determination Process, and (5) Installation Instruction Determination Process</p><p id="p-0566" num="0565">The write data transfer determination process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>80</b> and <b>81</b></figref>, the write data acquisition determination process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>82</b> and <b>83</b></figref>, and the installation instruction determination process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>84</b> to <b>87</b></figref>. The vehicle program rewriting system <b>1</b> performs the write data transfer determination process in the DCM <b>12</b>. Here, a state is assumed in which a distribution package transmitted from the center device <b>3</b> to the DCM <b>12</b> is unpackaged, and write data is extracted from the distribution package.</p><p id="p-0567" num="0566">As illustrated in <figref idref="DRAWINGS">FIG. <b>80</b></figref>, the DCM <b>12</b> includes an acquisition request receiving unit <b>68</b><i>a </i>and a communication state determination unit <b>68</b><i>b </i>in the write data transfer determination unit <b>68</b>. The acquisition request receiving unit <b>68</b><i>a </i>receives an acquisition request for a write data from the CGW <b>13</b>. When the acquisition request of the write data is received by the acquisition request receiving unit <b>68</b><i>a</i>, the communication state determination unit <b>68</b><i>b </i>determines a state of data communication between the center device <b>3</b> and the DCM <b>12</b>, for example, in a case where a transfer feasibility determination flag set in advance by the user has a first predetermined value. The transfer feasibility determination flag has, for example, 1 (first predetermined value) in a case where a predetermined condition is checked during installation, 0 (second predetermined value) in a case where the check is omitted. The write data transfer unit <b>64</b> transfers the write data to the CGW <b>13</b> on the condition that the communication state determination unit <b>68</b><i>b </i>determines that the data communication between the center device <b>3</b> and the DCM <b>12</b> is in a connection state.</p><p id="p-0568" num="0567">Next, an operation of the write data transfer determination unit <b>68</b> in the DCM <b>12</b> will be described with reference to <figref idref="DRAWINGS">FIG. <b>81</b></figref>. The DCM <b>12</b> executes a write data transfer determination program and thus performs the write data transfer determination process. Here, a description will be made of a process in a case where the CGW <b>13</b> requests the DCM <b>12</b> to acquire the write data in response to an installation instruction from the center device <b>3</b>.</p><p id="p-0569" num="0568">When it is determined that an acquisition request for the write data from the CGW <b>13</b> has been received, the DCM <b>12</b> initiates the write data transfer determination process. When the write data transfer determination process is initiated, the DCM <b>12</b> determines the transfer feasibility determination flag (S<b>301</b> and S<b>302</b>). When it is determined that the transfer feasibility determination flag has the first predetermined value (S<b>301</b>: YES), the DCM <b>12</b> determines a state of data communication between the center device <b>3</b> and the DCM <b>12</b> (S<b>303</b>). When it is determined that the data communication between the center device <b>3</b> and the DCM <b>12</b> is in a connection state (S<b>303</b>: YES), the DCM <b>12</b> transfers the write data to the CGW <b>13</b> (S<b>304</b>) and finishes the write data transfer determination process. When it is determined that the data communication between the center device <b>3</b> and the DCM <b>12</b> is not in a connection state but in a disconnection state (S<b>303</b>: NO), the DCM <b>12</b> does not transfer the write data to the CGW <b>13</b> and finishes the write data transfer determination process.</p><p id="p-0570" num="0569">When it is determined that the transfer feasibility determination flag has the second predetermined value (S<b>302</b>: YES), the DCM <b>12</b> transfers the write data to the CGW <b>13</b> without determining a state of the data communication between the center device <b>3</b> and the DCM <b>12</b>, and finishes the write data transfer determination process.</p><p id="p-0571" num="0570">As described above, the DCM <b>12</b> performs the write data transfer determination process prior to transfer of the write data to the CGW <b>13</b>, and determines a state of a data communication between the center device <b>3</b> and the DCM <b>12</b> in a case where the transfer feasibility determination flag has the first predetermined value. When it is determined that the data communication is in a connection state, the DCM <b>12</b> initiates transfer of the write data, and when it is determined that the data communication is in a disconnection state, the DCM <b>12</b> waits without initiating transfer of the write data. In a situation in which data communication with the center device <b>3</b> is possible, the write data can be transferred to the CGW <b>13</b>, and installation can be performed in the rewrite target ECU <b>19</b>.</p><p id="p-0572" num="0571">For example, in a case where there are a plurality of rewrite target ECUs <b>19</b> and installation takes time, the in-vehicle-side system <b>4</b> can notify the center device <b>3</b> of an installation progress situation, and the mobile terminal <b>6</b> can display the progress situation one by one. The DCM <b>12</b> may perform the write data transfer determination process during transfer of the write data. In this case, when it is determined that data communication is in a connection state during the transfer of the write data, the DCM <b>12</b> continues the transfer of the write data, but when it is determined that the data communication is in a disconnection state during the transfer of the write data, the DCM stops the transfer of the write data.</p><p id="p-0573" num="0572">Next, the write data acquisition determination process will be described. The vehicle program rewriting system <b>1</b> performs the write data acquisition determination process in the CGW <b>13</b>. (3) The write data transfer determination process is a determination process performed by the DCM <b>12</b> in the installation phase, and the write data acquisition determination process is a determination process performed by the CGW <b>13</b> in the same installation phase.</p><p id="p-0574" num="0573">As illustrated in <figref idref="DRAWINGS">FIG. <b>82</b></figref>, the CGW <b>13</b> includes an event occurrence determination unit <b>76</b><i>a </i>and a communication state determination unit <b>76</b><i>b </i>in the write data acquisition determination unit <b>76</b>. The event occurrence determination unit <b>76</b><i>a </i>determines the occurrence of an event of an acquisition request (installation instruction) for the write data from the center device <b>3</b>. When the occurrence of the event of the acquisition request of the write data is determined by the event occurrence determination unit <b>76</b><i>a</i>, the communication state determination unit <b>76</b><i>b </i>determines a state of data communication between the center device <b>3</b> and the DCM <b>12</b>, for example, in a case where an acquisition feasibility determination flag set in advance by the user has a first predetermined value. The acquisition feasibility determination flag has, for example, 1 (first predetermined value) when a predetermined condition during installation, 0 (second predetermined value) in a case where the check is omitted. The event occurrence determination unit <b>76</b><i>a </i>may determine the event occurrence on the basis of the user having given an instruction for installation, and determines that an event of an acquisition request for the write data has occurred, for example, when a notification that the user has performed an installation instruction (refer to <figref idref="DRAWINGS">FIG. <b>62</b></figref>) on the in-vehicle display <b>7</b> is received.</p><p id="p-0575" num="0574">Next, an operation of the write data acquisition determination unit <b>76</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIG. <b>83</b></figref>. The CGW <b>13</b> executes a write data acquisition determination program and thus performs the write data acquisition determination process.</p><p id="p-0576" num="0575">When it is determined that the event of the request to acquire the write data has occurred, the CGW <b>13</b> initiates the write data acquisition determination process. When the write data acquisition determination process is initiated, the CGW <b>13</b> determines the acquisition feasibility determination flag (S<b>401</b> and S<b>402</b>). When it is determined that the acquisition feasibility determination flag has the first predetermined value (S<b>401</b>: YES), the CGW <b>13</b> determines a state of data communication between the center device <b>3</b> and the DCM <b>12</b> (S<b>403</b>). When it is determined that data communication between the center device <b>3</b> and the DCM <b>12</b> is a connection state (S<b>403</b>: YES), the CGW <b>13</b> transmits an acquisition request for the write data to the DCM <b>12</b> (S<b>404</b>), and finishes the write data acquisition determination process. Thereafter, when the write data is transferred from the DCM <b>12</b>, the CGW <b>13</b> distributes the transferred write data to the rewrite target ECU <b>19</b>. When it is determined that the data communication between the center device <b>3</b> and the DCM <b>12</b> is not in a connection state but is in a disconnection state (S<b>403</b>: NO), the CGW <b>13</b> does not transmit the acquisition request for the write data to the DCM <b>12</b> and finishes the write data acquisition determination process.</p><p id="p-0577" num="0576">When it is determined that the acquisition feasibility determination flag has the second predetermined value (S<b>402</b>: YES), the CGW <b>13</b> transmits an acquisition request the write data to the DCM <b>12</b> without determining a state of the data communication between the center device <b>3</b> and the DCM <b>12</b>, and finishes the write data acquisition determination process.</p><p id="p-0578" num="0577">As described above, the CGW <b>13</b> performs the write data acquisition determination process prior to acquisition of the write data from the DCM <b>12</b>, and determines a state of the data communication between the center device <b>3</b> and the DCM <b>12</b> in a case where the acquisition feasibility determination flag has the first predetermined value. When it is determined that the data communication is in a connection state, the CGW <b>13</b> initiates acquisition of the write data, and, when it is determined that the data communication is in a disconnection state, the CGW waits without initiating acquisition of the write data. In a situation in which communication with the center device <b>3</b> is possible, the write data can be acquired from the DCM <b>12</b>, and installation can be performed in the rewrite target ECU <b>19</b>.</p><p id="p-0579" num="0578">For example, in a case where there are a plurality of rewrite target ECUs <b>19</b> and installation takes time, the in-vehicle-side system <b>4</b> can notify the center device <b>3</b> of an installation progress situation, and the mobile terminal <b>6</b> can display the progress situation one by one. The CGW <b>13</b> may perform the write data acquisition determination process during acquisition of the write data. In this case, when it is determined that the data communication is in a connection state during the acquisition of the write data, the CGW <b>13</b> continues the acquisition of the write data, but when it is determined that the data communication is in a disconnection state during the acquisition of the write data, the CGW stops the acquisition of the write data.</p><p id="p-0580" num="0579">Next, the write data acquisition determination described above will be described in more detail. Acquisition of the write data is one of the processes related to installation, and the installation instruction determination process will be described here with reference to <figref idref="DRAWINGS">FIGS. <b>84</b> to <b>87</b></figref>. The vehicle program rewriting system <b>1</b> performs the installation instruction determination process in the CGW <b>13</b>. (1) The distribution package transmission determination process and (2) the distribution package download determination process are determination processes performed in the download phase, (3) the write data transfer determination process and (4) the write data acquisition determination process are processes performed in the installation phase after download is completed, and (5) the installation instruction determination process is a process performed in the installation phase and the activation phase. A state is assumed in which a distribution package is downloaded to the DCM <b>12</b>, and, as illustrated in <figref idref="DRAWINGS">FIG. <b>33</b></figref>, the write data (update data or difference data) for the write target ECU <b>19</b> is unpackaged.</p><p id="p-0581" num="0580">As illustrated in <figref idref="DRAWINGS">FIG. <b>84</b></figref>, the CGW <b>13</b> includes an installation condition determination unit <b>77</b><i>a</i>, an installation instruction unit <b>77</b><i>b</i>, a vehicle condition information acquisition unit <b>77</b><i>c</i>, an activation condition determination unit <b>77</b><i>d</i>, and an activation instruction unit <b>77</b><i>e </i>in the installation instruction determination unit <b>77</b>. The installation condition determination unit <b>77</b><i>a </i>determines whether or not a first condition, a second condition, a third condition, a fourth condition, and a fifth condition are established. The first condition is a condition that the user's approval for installation is obtained. The user approval for installation indicates the user's approval operation for installation (for example, pressing the &#x201c;immediate update&#x201d; button <b>506</b><i>a</i>) on the screen illustrated in <figref idref="DRAWINGS">FIG. <b>62</b></figref>, for example. Alternatively, operations from download to activation may be regarded as one update, and the user's approval operation for update may be regarded to be performed.</p><p id="p-0582" num="0581">The second condition is a condition that the CGW <b>13</b> can perform data communication with the center device <b>3</b>. The third condition is a condition that a vehicle condition is an installable condition. The fourth condition is a condition that installation can be performed in the rewrite target ECU <b>19</b>. Here, the fourth condition includes not only that installation can be performed in the rewrite target ECU <b>19</b> which is an installation target, but also that installation can be performed in the rewrite target ECU <b>19</b> cooperating with the rewrite target ECU <b>19</b> which is an installation target. The fifth condition is a condition that the write data is normal data. Here, the normal data includes data suitable for the rewrite target ECU <b>19</b>, data that is not falsified, and the like.</p><p id="p-0583" num="0582">When it is determined by the installation condition determination unit <b>77</b><i>a </i>that all of the first condition, the second condition, the third condition, the fourth condition, and the fifth condition are established, the installation instruction unit <b>77</b><i>b </i>instructs the rewrite target ECU <b>19</b> to install an application program. That is, when the installation instruction unit <b>77</b><i>b </i>obtains the user's approval for the installation, the CGW <b>13</b> can perform data communication with the center device <b>3</b>, the vehicle condition is an installable condition, the installation can be performed in the rewrite target ECU <b>19</b>, and it is determined by the installation condition determination unit <b>77</b><i>a </i>that the write data is normal data, the rewrite target ECU <b>19</b> is instructed to install the application program. Specifically, the installation instruction unit <b>77</b><i>b </i>acquires the write data from the DCM <b>12</b>, and transfers the acquired write data to the rewrite target ECU <b>19</b>. When it is determined by the installation condition determination unit <b>77</b><i>a </i>that at least any of the first condition, the second condition, the third condition, the fourth condition, and the fifth condition is not established, the installation instruction unit <b>77</b><i>b </i>does not instruct the rewrite target ECU <b>19</b> to install the application program, and waits or presents, to the user, information indicating that installation cannot be initiated and the reason therefor.</p><p id="p-0584" num="0583">The vehicle condition information acquisition unit <b>77</b><i>c </i>acquires vehicle condition information from the center device <b>3</b>. The activation condition determination unit <b>77</b><i>d </i>determines whether or not a sixth condition, a seventh condition, and an eighth condition are established in a case where the installation of the application program has been completed in all of the rewrite target ECUs <b>19</b>. The sixth condition is a condition that the user's approval for activation is obtained. The user's approval for the activation indicates the user's approval operation (for example, pressing the &#x201c;OK&#x201d; button <b>508</b><i>b</i>) for the activation on the screen illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref>, for example. Alternatively, operations from download to activation may be regarded as one update, and the user's approval operation for update may be regarded to be performed. The seventh condition is a condition that the vehicle condition is an activatable condition. The eighth condition is a condition that the rewrite target ECU <b>19</b> is in an activatable condition.</p><p id="p-0585" num="0584">When it is determined by the activation condition determination unit <b>77</b><i>d </i>that all of the sixth condition, the seventh condition, and the eighth condition are established, the activation instruction unit <b>77</b><i>e </i>instructs the rewrite target ECU <b>19</b> to activate the application program. A detailed description will be made of (12) the activation request instruction process which will be described later. That is, the activation instruction unit <b>77</b><i>e </i>instructs the rewrite target ECU <b>19</b> to activate the application program when the activation condition determination unit <b>77</b><i>d </i>determines that the user's approval for the activation is obtained, the vehicle condition is an activatable condition, and the rewrite target ECU <b>19</b> is in an activatable condition. The activation is performed, and thus an update program written in the rewrite target ECU <b>19</b> is validated. When it is determined by the activation condition determination unit <b>77</b><i>d </i>that at least any of the sixth condition, the seventh condition, and the eighth condition is not established, the activation instruction unit <b>77</b><i>e </i>does not instruct the rewrite target ECU <b>19</b> to activate the application program, and waits or presents, to the user, information indicating that the activation cannot be initiated and the reason therefor.</p><p id="p-0586" num="0585">Next, an operation of the installation instruction determination unit <b>77</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>85</b> to <b>87</b></figref>. The CGW <b>13</b> executes an installation instruction determination program and thus performs the installation instruction determination process.</p><p id="p-0587" num="0586">When the installation instruction determination process is initiated, the CGW <b>13</b> determines whether or not the first condition is established, and determines whether or not the user's approval for the installation is obtained (S<b>501</b>; corresponding to a part of an installation condition determination procedure). When it is determined that the user's approval for installation is obtained (S<b>501</b>: YES), the CGW <b>13</b> determines whether or not the second condition is established, and determines whether or not data communication with the center device <b>3</b> is possible (S<b>502</b>; corresponding to a part of the installation condition determination procedure). The CGW <b>13</b> determines whether or not data communication with the center device <b>3</b> is possible on the basis of a communication radio wave status in the DCM <b>12</b>.</p><p id="p-0588" num="0587">When it is determined that data communication with the center device <b>3</b> is possible (S<b>502</b>: YES), the CGW <b>13</b> determines whether or not the third condition is established, and determines whether or not a vehicle condition is an installable condition (S<b>503</b>; corresponding to a part of the installation condition determination procedure). The CGW <b>13</b> determines, as the vehicle condition, for example, whether or not a remaining battery charge of the vehicle battery <b>40</b> is equal to or larger than a predetermined capacity, or whether or not the vehicle is in a parking state (IG OFF state) in a case where a memory configuration of the rewrite target ECU <b>19</b> is a single-bank memory, and thus determines whether or not the vehicle condition is an installable condition. The condition of the vehicle condition may refer to received rewrite specification data (refer to <figref idref="DRAWINGS">FIG. <b>31</b></figref>). The CGW <b>13</b> determines that the vehicle condition is an installable condition, for example, in a case where a remaining battery charge of the vehicle battery <b>40</b> is equal to or larger than a predetermined capacity specified in the rewrite specification data, and the vehicle condition matches a vehicle condition (installable only in a parking state, installable only in a traveling state, or installable in both the parking state and the traveling state) specified in the rewrite specification data.</p><p id="p-0589" num="0588">When it is determined that the vehicle condition is an installable condition (S<b>503</b>: YES), the CGW <b>13</b> determines whether or not the fourth condition is established, and determines whether or not the rewrite target ECU <b>19</b> is in an installable condition (S<b>504</b>; corresponding to a part of the install condition determination procedure). The CGW <b>13</b> determines that the rewrite target ECU <b>19</b> is in an installable condition, for example, in a case where a trouble code is not generated in the rewrite target ECU <b>19</b> and security access to the rewrite target ECU <b>19</b> is successful. Here, whether or not the trouble code is generated may be checked not only for the rewrite target ECU <b>19</b> to which the write data is written but also for the ECU <b>19</b> performing cooperative control with the rewrite target ECU <b>19</b>. That is, the CGW <b>13</b> determines whether or not the trouble code is generated not only for the rewrite target ECU <b>19</b> but also for the ECU <b>19</b> performing cooperative control with the rewrite target ECU <b>19</b>.</p><p id="p-0590" num="0589">When it is determined that the rewrite target ECU <b>19</b> is an installable condition (S<b>504</b>: YES), the CGW <b>13</b> determines whether or not the fifth condition is established, and determines whether or not the write data is normal data (S<b>505</b>; corresponding to a part of an installation condition determination procedure). The CGW <b>13</b> determines that the write data is normal data in a case where the write data matches a write bank (inactive bank) of the rewrite target ECU <b>19</b>, and a verification result of the integrity of the write data is normal. When it is determined that the write data is normal data (S<b>505</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to install the application program (S<b>506</b>;</p><p id="p-0591" num="0590">corresponding to an installation instruction procedure), and thus the CGW <b>13</b> performs determination of the second condition and the subsequent conditions on the condition that the first condition is satisfied. The CGW <b>13</b> finally determines the fifth condition. When it is determined that all of the first to fifth conditions are established, the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to install the application program.</p><p id="p-0592" num="0591">On the other hand, when the CGW <b>13</b> determines that the user's approval for installation is not obtained (S<b>501</b>: NO), determines that data communication with the center device <b>3</b> is not possible (S<b>502</b>: NO), determines that the vehicle condition is not an installable condition (S<b>503</b>: NO), determines that the rewrite target ECU <b>19</b> is not in an installable condition (S<b>504</b>: NO), or determines that the write data is not normal data (S<b>505</b>: NO), the CGW does not instruct the rewrite target ECU <b>19</b> to install the application program. In the above-described process, a configuration has been described in which the condition that the user's approval for installation is obtained is determined earlier than the other conditions, but a configuration in which the condition is determined later than the other conditions may be used.</p><p id="p-0593" num="0592">When the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to install the application program, the CGW distributes the write data to the rewrite target ECU <b>19</b> (S<b>507</b>), and determines whether or not the installation has been completed (S<b>508</b>). When it is determined that the installation has been completed (S<b>508</b>: YES), the CGW <b>13</b> determines whether or not the sixth condition is established, and determines whether or not the user's approval for the activation is obtained (S<b>509</b>). When it is determined that the user's approval for the activation is obtained (S<b>509</b>: YES), the CGW <b>13</b> determines whether or not the seventh condition is established, and determines whether or not the vehicle condition is an activatable condition (S<b>510</b>).</p><p id="p-0594" num="0593">When it is determined that the vehicle condition is an activatable condition (S<b>510</b>: YES), the CGW <b>13</b> determines whether or not the eighth condition is established, and determines whether or not the rewrite target ECU <b>19</b> is in an activatable condition (S<b>511</b>). When it is determined that the rewrite target ECU <b>19</b> is in an activatable condition (S<b>511</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to perform activation (S<b>512</b>). As mentioned above, when it is determined that all of the sixth condition to the eighth condition are established, the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to perform activation.</p><p id="p-0595" num="0594">In a case where there are a plurality of rewrite target ECUs <b>19</b>, the CGW <b>13</b> may individually or collectively give an instruction for installation. In a case where the rewrite target ECUs <b>19</b> are the ECU (ID1) and the ECU (ID2), in an aspect of individually giving an instruction for the installation, the CGW <b>13</b> determines whether or not installation conditions are established for the ECU (ID1), as illustrated in <figref idref="DRAWINGS">FIG. <b>86</b></figref>. When it is determined that the installation conditions are established for the ECU (ID1), the CGW <b>13</b> instructs the ECU (ID1) to perform installation. Next, the CGW <b>13</b> determines whether or not installation conditions are established for ECU (ID2). Here, the CGW <b>13</b> may determine whether or not the fourth condition and the fifth condition are established for ECU (ID2) as the installation conditions. When it is determined that the installation conditions are established for the ECU (ID2), the CGW <b>13</b> instructs the ECU (ID2) to perform installation.</p><p id="p-0596" num="0595">In a case where the rewrite target ECUs <b>19</b> are the ECU (ID1) and the ECU (ID2), in an aspect of collectively giving an instruction for installation, the CGW <b>13</b> determines whether or not installation conditions are established for the ECU (ID1), as illustrated in <figref idref="DRAWINGS">FIG. <b>87</b></figref>. That is, the CGW <b>13</b> determines the first to third conditions, and the fourth and fifth conditions for the ECU (ID1). When it is determined that the installation conditions are established for the ECU (ID1), it the CGW <b>13</b> determines whether or not installation conditions are established for the ECU (ID2). That is, the CGW <b>13</b> determines the fourth condition and the fifth condition for ECU (ID2). When the installation conditions are established for the ECU (ID2), the CGW <b>13</b> instructs the ECU (ID1) and the ECU (ID2) to perform installation. For example, the CGW <b>13</b> simultaneously perform transfer of rewrite data to the ECU (ID1) and transfer of rewrite data to the ECU (ID2) in parallel. As described above, in the aspect of collectively giving an instruction for installation, the CGW <b>13</b> determines the first condition to the third condition, and the fourth condition and the fifth condition for all the rewrite target ECUs. The CGW <b>13</b> gives an instruction for installation after all of the conditions are satisfied.</p><p id="p-0597" num="0596">As described above, the CGW <b>13</b> performs the installation instruction determination process before instructing the rewrite target ECU <b>19</b> to install an application program, and thus instructs the rewrite target ECU <b>19</b> to install the application program when it is determined that all of the first condition that the user's approval for the installation is obtained, the second condition that data communication with the center device <b>3</b> is possible, the third condition that a vehicle condition is an installable condition, the fourth condition that the rewrite target ECU <b>19</b> is in an installable condition, and the fifth condition that the write data is normal data are established. It is possible to appropriately instruct the rewrite target ECU <b>19</b> to install an application program.</p><p id="p-0598" num="0597">(6) Security Access Key Management Process</p><p id="p-0599" num="0598">The security access key management process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>88</b> to <b>92</b></figref>. A security access key is used to authenticate a device when the CGW <b>13</b> accesses the rewrite target ECU <b>19</b> before write data is installed. The vehicle program rewriting system <b>1</b> performs the security access key management process in the CGW <b>13</b>. Here, a description will be made assuming that the CGW <b>13</b> is in a state of being able to acquire the write data from the DCM <b>12</b> through (3) the write data transfer determination process or (4) the write data acquisition determination process. The device authentication using the security access key corresponds to the fourth condition (step S<b>505</b>) in (5) the installation instruction determination process described above.</p><p id="p-0600" num="0599">When the CGW <b>13</b> distributes the write data to the rewrite target ECU <b>19</b>, the CGW <b>13</b> is required to perform security access (device authentication) with the rewrite target ECU <b>19</b> by using the security access key. In this case, a method is considered in which the CGW <b>13</b> requests the rewrite target ECU <b>19</b> to generate a random number value, acquires the random number value generated by the rewrite target ECU <b>19</b> from the rewrite target ECU <b>19</b>, generates a security access key by computing the acquired random number value. However, in such a method, in a case where the random number value is acquired from the rewrite target ECU <b>19</b> even when an application program is not rewritten, the security access key can be stored, so that there may be a risk of security access key leakage.</p><p id="p-0601" num="0600">In a configuration in which the CGW <b>13</b> transmits a random number value acquired from the rewrite target ECU <b>19</b> to the center device <b>3</b>, and the center device <b>3</b> generate a security access key by computing the random number value, it is not necessary to store the security access key, and thus it is possible to reduce the risk of security access key leakage. However, in the configuration in which the center device <b>3</b> computes the random number value, the waiting time until the rewrite target ECU <b>19</b> acquires the random number value from the center device <b>3</b> is increased, and thus it is difficult to satisfy the time specification for the diagnosis communication. In view of such circumstances, the present embodiment employs the following configuration.</p><p id="p-0602" num="0601">As illustrated in <figref idref="DRAWINGS">FIG. <b>88</b></figref>, the supplier generates a random number value by encrypting a security access key for each rewrite target ECU <b>19</b> by using an encryption/decryption key of the security access key. The random number value mentioned here is a random value including both a value different from the value used in the past or a value same as the value used in the past. The random number value is an encrypted security access key. The supplier provides the generated random number value along with reprogramming data. The security access key, the encryption/decryption key of the security access keys, and the random number value are unique keys to each the ECU <b>19</b>.</p><p id="p-0603" num="0602">When the OEM is provided with the random number value along with the reprogramming data from the supplier, the OEM correlates the provided random number value with an ECU (ID) for identifying the ECU <b>19</b>, and stores the random number value into the CGW rewrite specification data illustrated in <figref idref="DRAWINGS">FIG. <b>31</b></figref>. The OEM also stores a key pattern or a decryption operation pattern necessary for decrypting the random number value into the CGW rewrite specification data. As the key pattern, a method such as a common key/public key, a key length, and the like are stored, and, as the decryption operation pattern, the type of algorithm used for a decryption operation and the like are stored. When the OEM stores the random number value, the key pattern, and the decryption operation pattern into the CGW rewrite specification data, the OEM provides the CGW rewrite specification data storing the random number value to the center device <b>3</b> along with the reprogramming data. The information provided from the supplier is stored in an ECU reprogramming data DB and an ECU metadata DB, which will be described later.</p><p id="p-0604" num="0603">When rewrite specification data (DCM rewrite specification data and CGW rewrite specification data) is provided along with the reprogramming data from the OEM, the center device <b>3</b> transmits a distribution package including the provided rewrite specification data and reprogramming data to the master device <b>11</b>. In the master device <b>11</b>, when the distribution package is downloaded from the center device <b>3</b>, the DCM <b>12</b> transfers the rewrite specification data and write data to the CGW <b>13</b>.</p><p id="p-0605" num="0604">As illustrated in <figref idref="DRAWINGS">FIG. <b>89</b></figref>, the CGW <b>13</b> includes a secure area <b>78</b><i>a </i>(corresponding to a decryption key storage unit), a random number value extraction unit <b>78</b><i>b </i>(corresponding to a key derivation value extraction unit), a key pattern extraction unit <b>78</b><i>c</i>, a decryption operation pattern extraction unit <b>78</b><i>d</i>, a key generation unit <b>78</b><i>e</i>, a security access execution unit <b>78</b><i>f</i>, a session transition request unit <b>78</b><i>g</i>, and a key erasure unit <b>78</b><i>h </i>in the security access key management unit <b>78</b>. In the secure area <b>78</b><i>a</i>, information therein cannot be read from the outside of the ECU <b>19</b>, and an encryption/decryption key of a security access key and a decryption operation algorithm are located. The random number value extraction unit <b>78</b><i>b </i>extracts, from an analysis result of the CGW rewrite specification data, a random number value (key derivation value) included in the rewrite specification data. The random number value is a value encrypted in correlation with the ECU (ID) of the rewrite target ECU <b>19</b>.</p><p id="p-0606" num="0605">The key pattern extraction unit <b>78</b><i>c </i>extracts, from an analysis result of the CGW rewrite specification data, a key pattern included in the rewrite specification data. The decryption operation pattern extraction unit <b>78</b><i>d </i>extracts, from an analysis result of the CGW rewrite specification data, a decryption operation pattern included in the rewrite specification data.</p><p id="p-0607" num="0606">When the random number value is extracted by the random number value extraction unit <b>78</b><i>b</i>, the key generation unit <b>78</b><i>e </i>searches the secure area <b>78</b><i>a</i>, decrypts the extracted random number value by using a decryption key corresponding to the ECU (ID) from a bundle of decryption keys of the security access key located in the secure area <b>78</b><i>a</i>, and generates the security access key. In this case, the key generation unit <b>78</b><i>e </i>decrypts the key derivation value according to a decryption operation method specified by the decryption operation pattern extracted by the decryption operation pattern extraction unit <b>78</b><i>d </i>by using a decryption key specified by the key pattern extracted by the key pattern extraction unit <b>78</b><i>c</i>. That is, a plurality of key patterns and a plurality of decryption operation patterns are prepared, and a key pattern and a decryption operation pattern are specified by the CGW rewrite specification data, and thus the key generation unit <b>78</b><i>e </i>generates a security access key by using the key pattern and the decryption operation pattern.</p><p id="p-0608" num="0607">When the security access key is generated by the key generation unit <b>78</b><i>e</i>, the security access execution unit <b>78</b><i>f </i>executes security access to the rewrite target ECU <b>19</b> by using the generated security access key. Specifically, the security access execution unit <b>78</b><i>f </i>transmits encrypted data in which an ECU (ID) is encrypted by using, for example, a security access key, and requests access to the rewrite target ECU <b>19</b>. When receiving the encrypted data, the rewrite target ECU <b>19</b> decrypts the received encrypted data by using the security access key held by itself. The rewrite target ECU <b>19</b> compares decrypted data generated through the decryption with an ECU (ID) thereof, and permits access to the rewrite target ECU in a case where the data matches the ECU (ID), and does not permit access thereto in a case where the data does not match the ECU (ID).</p><p id="p-0609" num="0608">The session transition request unit <b>78</b><i>g </i>requests transition to a rewrite session. After transition from a default session to the rewrite session, the security access execution unit <b>78</b><i>f </i>executes security access. After transition to a session (for example, a diagnosis session) other than the default session, security access may be performed, and then transition to the rewrite session may occur. The key erasure unit <b>78</b><i>h </i>erases the security access key generated by the key generation unit <b>78</b><i>e </i>after the security access to the rewrite target ECU <b>19</b> is executed by the security access execution unit <b>78</b><i>f </i>and rewriting of an application program in the rewrite target ECU <b>19</b> is completed.</p><p id="p-0610" num="0609">Next, an operation of the security access key management unit <b>78</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>90</b> to <b>92</b></figref>. The CGW <b>13</b> executes a security access key management program and thus performs the security access key management process. The CGW <b>13</b> performs a security access key generation process and a security access key erasure process as the security access key management process. Hereinafter, each process will be described in order.</p><p id="p-0611" num="0610">(6-1) Security Access Key Generation Process</p><p id="p-0612" num="0611">When the security access key generation process is initiated, the CGW <b>13</b> analyzes rewrite specification data acquired from the DCM <b>12</b> (S<b>601</b>; corresponding to a rewrite specification data analysis procedure), and extracts a random number value, a key pattern, and a decryption operation pattern from CGW rewrite specification data (S<b>602</b>; corresponding to a key derivation value extraction procedure).</p><p id="p-0613" num="0612">The CGW <b>13</b> searches the secure area <b>78</b><i>a</i>, decrypts the random number value extracted from the CGW rewrite specification data by using a decryption key corresponding to an ECU (ID) from a bundle of decryption keys of a security access key located in the secure area <b>78</b><i>a</i>, and generates the security access key (S<b>603</b>; corresponding to a key generation procedure).</p><p id="p-0614" num="0613">As illustrated in <figref idref="DRAWINGS">FIG. <b>91</b></figref>, the CGW <b>13</b> generates the security access key from the CGW rewrite specification data. The CGW <b>13</b> makes a session transition request for transition to a rewrite session that makes write data writable (S<b>604</b>) and executes the security access to the rewrite target ECU <b>19</b> by using the security access key (S<b>605</b>). When execution of the security access has been completed, the CGW <b>13</b> distributes the write data to the rewrite target ECU <b>19</b> (S<b>606</b>) and makes a session maintenance request (S<b>607</b>). When it is determined that installation has been completed (S<b>608</b>: YES), the CGW <b>13</b> finishes the security access key generation process.</p><p id="p-0615" num="0614">(6-2) Security Access Key Deletion Process</p><p id="p-0616" num="0615">When the security access key erasure process is initiated, the CGW <b>13</b> determines whether or not rewriting of the application program in the rewrite target ECU <b>19</b> has been completed (S<b>611</b>). When it is determined that rewriting of the application program in the rewrite target ECU <b>19</b> has been completed (S<b>611</b>: YES), the CGW <b>13</b> executes the security access key generation process to erase the generated security access key (S<b>612</b>), and finishes the security access key erasure process.</p><p id="p-0617" num="0616">As described above, the CGW <b>13</b> executes the security access key management process, extracts a random number value corresponding to the rewrite target ECU <b>19</b> from an analysis result of rewrite specification data, decrypts the random number value by using a decryption key corresponding to the rewrite target ECU <b>19</b> stored in the secure area <b>78</b><i>a</i>, and generates a security access key. The CGW <b>13</b> generates a security access key without acquiring the security access key from the outside, and thus security access to the rewrite target ECU <b>19</b> can be appropriately executed while reducing the risk of security access key leakage.</p><p id="p-0618" num="0617">When there are a plurality of the rewrite target ECUs <b>19</b>, it is desirable for the CGW <b>13</b> to generate a security access key immediately before each piece of write data is installed. In other words, in a case where rewrite target ECUs <b>19</b> are the ECU (ID1), the ECU (ID2), and the ECU (ID3), it is desirable for the CGW <b>13</b> to execute processes of generating a security access key of the ECU (ID1), installing write data into the ECU (ID1), generating a security access key of the ECU (ID2), installing write data into the ECU (ID2), generating a security access key of the ECU (ID3), and installing write data into the ECU (ID3) in this order. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>86</b></figref>, the CGW <b>13</b> performs a security access process as one of whether or not installation conditions for the ECU (ID1) are established, and instructs the ECU (ID1) to perform installation in a case where access is normally permitted. Thereafter, the CGW <b>13</b> performs a security access process as one of whether or not installation conditions for the ECU (ID2) are established, and instructs the ECU (ID2) to perform installation in a case where access is normally permitted.</p><p id="p-0619" num="0618">When the CGW <b>13</b> performs security access to the rewrite target ECU <b>19</b> which then permits access thereto, the rewrite target ECU unlocks the security access by receiving a session transition request from the CGW <b>13</b>, and thus makes write data writable into the flash memory. The session transition request is, for example, a &#x201c;rewrite session transition request&#x201d; in a second state illustrated in <figref idref="DRAWINGS">FIG. <b>181</b></figref>. Unless the rewrite target ECU <b>19</b> receives the session transition request from the CGW <b>13</b> within a predetermined time (for example, 5 seconds) after permitting access thereto, the rewrite target ECU times out, locks the security access, and does not accept reception of the session transition request. In a case where the CGW <b>13</b> does not transmit the session transition request to the rewrite target ECU <b>19</b> within a predetermined time after specifying permission for access to the rewrite target ECU <b>19</b>, the CGW is required to transmit a session maintenance request to the rewrite target ECU <b>19</b>, retain the rewrite target ECU <b>19</b> not to time out, and transmit the session transition request to the rewrite target ECU <b>19</b>.</p><p id="p-0620" num="0619">For example, when a campaign notification to the version 2.0 occurs by canceling an operation in the middle of rewriting in a state in which an application program of the version 1.0 is written in an active bank-And an application program of the version 2.0 is written in an inactive bank, and when from this state, it is preferable that only activation is performed without performing installation, and thus the security access process may be omitted.</p><p id="p-0621" num="0620">(7) Write Data Verification Process</p><p id="p-0622" num="0621">The write data verification process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>93</b> to <b>101</b></figref>. The vehicle program rewriting system <b>1</b> verifies write data in the CGW <b>13</b>. The CGW <b>13</b> may perform the write data verification process described in the present embodiment before acquiring an access permission in (6) the security access key management process, or may perform the write data verification process after acquiring the access permission.</p><p id="p-0623" num="0622">As illustrated in <figref idref="DRAWINGS">FIG. <b>93</b></figref>, when the write data is generated, the supplier or the OEM generates a data verification value by applying a data verification value calculation algorithm to the generated write data. Here, the write data may be a new program to be updated, or may be difference data between an old program and a new program. The supplier or OEM generates an authenticator by applying encryption using a predetermined key (key value) to the data verification value, and registers the write data and the authenticator in the center device <b>3</b> in correlation with each other. Specifically, the data is stored for each ECU <b>19</b> in the reprogramming data DB which will be described later. The center device <b>3</b> generates a distribution package including the write data and the authenticator, and stores the distribution package into the package DB.</p><p id="p-0624" num="0623">When a download request for the distribution package from the master device <b>11</b> is generated, the center device <b>3</b> transmits the distribution package including the write data and the authenticator to the master device <b>11</b> in response to the download request. In this case, the write data transmitted from the center device <b>3</b> to the master device <b>11</b> is ciphertext, and the authenticator transmitted from the center device <b>3</b> to the master device <b>11</b> is also ciphertext. The authenticator transmitted from the center device <b>3</b> to the master device <b>11</b> may be plaintext. When the authenticator transmitted from the center device <b>3</b> to the master device <b>11</b> is plaintext, a decryption process which will be described later is not necessary.</p><p id="p-0625" num="0624">When the distribution package is downloaded from the center device <b>3</b>, the master device <b>11</b> extracts the write data for the rewrite target ECU <b>19</b> from the downloaded distribution package, and verifies validity of the write data before distributing the write data to the rewrite target ECU <b>19</b>. That is, the master device <b>11</b> sequentially executes a decryption process, a first verification value calculation process, a second verification value calculation process, a comparison process, and a determination process, and thus verifies the write data. The decryption process is a process of decrypting the authenticator transmitted in the ciphertext. The first verification value calculation process is a process of calculating a first data verification value that is an expected value, from the decrypted authenticator by using the key (key value). The second verification value calculation process is a process of calculating a second data verification value from the write data by using the data verification value calculation algorithm. The comparison process is a process of comparing the first data verification value with the second data verification value. The determination process is a process of determining validity of the write data on the basis of a comparison result in the comparison process.</p><p id="p-0626" num="0625">As illustrated in <figref idref="DRAWINGS">FIG. <b>94</b></figref>, the CGW <b>13</b> includes a writability determination unit <b>79</b><i>a</i>, a process execution request unit <b>79</b><i>b</i>, a process result acquisition unit <b>79</b><i>c</i>, and a verification unit <b>79</b><i>d </i>in the write data verification unit <b>79</b>. The writability determination unit <b>79</b><i>a </i>determines whether or not write data can be written in the rewrite target ECU <b>19</b>. When it is determined by the writability determination unit <b>69</b><i>a </i>that the write data can be written in the rewrite target ECU <b>19</b>, the process execution request unit <b>79</b><i>b </i>notifies the DCM <b>12</b> of a process execution request and thus requests the DCM <b>12</b> to execute a process. The process execution request unit <b>68</b><i>b </i>notifies the DCM <b>12</b> of a request for executing at least any of the decryption process, the first verification value calculation process, the second verification value calculation process, the comparison process, and the determination process. The process result acquisition unit <b>68</b><i>c </i>is notified of a process result from the DCM <b>12</b> and thus acquires the process result from the DCM <b>12</b>. When the process result is acquired by the process result acquisition unit <b>68</b><i>c</i>, the verification unit <b>79</b><i>d </i>verifies the write data by using the process result. That is, in the configuration, the CGW <b>13</b> corresponds to a first device and a first functional unit, and the DCM <b>12</b> corresponds to a second device and a second functional unit.</p><p id="p-0627" num="0626">Next, an operation of the write data verification unit <b>79</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>95</b> to <b>100</b></figref>. The CGW <b>13</b> executes the verification program of the write data and performs the verification process of the write data.</p><p id="p-0628" num="0627">When the write data verification process is initiated, the CGW <b>13</b> notifies the DCM <b>12</b> of a process execution request and thus requests the DCM <b>12</b> to execute a process (S<b>701</b>; corresponding a process execution request procedure). The CGW <b>13</b> notifies the DCM <b>12</b> of a process execution request for at least any of the decryption process, the first verification value calculation process, the second verification value calculation process, the comparison process, and the determination process. When a process result is acquired from the DCM <b>12</b> (S<b>702</b>; corresponding to a process result acquisition procedure), the CGW <b>13</b> verifies the write data by using the acquired process result (S<b>703</b>; corresponding to a verification procedure).</p><p id="p-0629" num="0628">Hereinafter, some cases where the CGW <b>13</b> notifies the DCM <b>12</b> of a process execution request will be exemplified. In an example illustrated in <figref idref="DRAWINGS">FIG. <b>96</b></figref>, the CGW <b>13</b> notifies the DCM <b>12</b> of process execution requests for the decryption process, the first verification value calculation process, and the second verification value calculation process. When the DCM <b>12</b> is notified of the process execution requests for the decryption process from the CGW <b>13</b>, the first verification value calculation process, and the second verification value calculation process, the DCM sequentially executes the decryption process, the first verification value calculation process, and the second verification value calculation process. The DCM <b>12</b> executes a process result notification process, and notifies the CGW <b>13</b> of a first data verification value calculated through the first verification value calculation process and a second data verification value calculated through the second verification value calculation process as process results. When the CGW <b>13</b> executes a process result acquisition process and acquires the first data verification value and the second data verification value from the DCM <b>12</b>, the CGW sequentially executes the comparison process and the determination process by using the first data verification value and the second data verification value. The CGW <b>13</b> verifies the write data on the basis of the correctness of a determination result in the determination process. In this example, the DCM <b>12</b> stores a key for calculating the first data verification value.</p><p id="p-0630" num="0629">In an example illustrated in <figref idref="DRAWINGS">FIG. <b>97</b></figref>, the CGW <b>13</b> notifies the DCM <b>12</b> of process execution requests for the decryption process and the second verification value calculation process. When the DCM <b>12</b> is notified of the process execution requests for the decryption process and the second verification value calculation process from the CGW <b>13</b>, the DCM sequentially executes the decryption process and the second verification value calculation process, and notifies the CGW <b>13</b> of a second data verification value calculated through the second verification value calculation process. When the CGW <b>13</b> executes a process result acquisition process and acquires the second data verification value from the DCM <b>12</b>, the CGW executes the first verification value calculation process, and sequentially executes the comparison process and the determination process by using the first data verification value calculated through the first verification value calculation process and the second data verification value. The CGW <b>13</b> verifies the write data on the basis of the correctness of a determination result in the determination process. In this example, the CGW <b>13</b> stores a key for calculating the first data verification value.</p><p id="p-0631" num="0630">In the example of <figref idref="DRAWINGS">FIG. <b>98</b></figref>, the CGW <b>13</b> notifies the DCM <b>12</b> of process execution requests for the decryption process, the first verification value calculation process, the second verification value calculation process, and the comparison process. When the DCM <b>12</b> is notified of the process execution requests for the decryption process, the first verification value calculation process, the second verification value calculation process, and the comparison process from the CGW <b>13</b>, the DCM sequentially executes the decryption process, the first verification value calculation process, the second verification value calculation process, and the comparison process. The DCM <b>12</b> executes a process result notification process, and notifies the CGW <b>13</b> of a comparison result in the comparison process as a process result. When the CGW <b>13</b> executes a process result acquisition process and acquires the comparison result from the DCM <b>12</b>, the CGW executes the determination process by using the comparison result. The CGW <b>13</b> verifies the write data on the basis of the correctness of a determination result in the determination process. In this example, the DCM <b>12</b> stores a key for calculating the first data verification value.</p><p id="p-0632" num="0631">In an example illustrated in <figref idref="DRAWINGS">FIG. <b>99</b></figref>, the CGW <b>13</b> notifies the DCM <b>12</b> of process execution requests for the decryption process, the first verification value calculation process, the second verification value calculation process, the comparison process, and the determination process. When the DCM <b>12</b> is notified of the process execution requests for the decryption process, the first verification value calculation process, the second verification value calculation process, the comparison process, and the determination process from the CGW <b>13</b>, the DCM sequentially executes the decryption process, the first verification value calculation process, the second verification value calculation process, the comparison process, and the determination process. The DCM <b>12</b> executes a process result notification process, and notifies the CGW <b>13</b> of a determination result in the determination process as a process result. When the CGW <b>13</b> executes a process result acquisition process, and acquires the process result from the DCM <b>12</b>, the CGW verifies the write data on the basis of the correctness of the determination result indicated by the process result. In this example, the DCM <b>12</b> stores a key for calculating the first data verification value.</p><p id="p-0633" num="0632">In a case where there are a plurality of rewrite target ECUs <b>19</b>, the CGW <b>13</b> performs a verification process on write data for two or more the rewrite target ECUs <b>19</b> as follows. In a case where there are a plurality of rewrite target ECUs <b>19</b>, the CGW <b>13</b> has a method of collectively verifying write data for the plurality of rewrite target ECU <b>19</b> and a method of individually verifying write data.</p><p id="p-0634" num="0633">In the method of collectively verifying the write data for a plurality of rewrite target ECUs <b>19</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>100</b></figref>, the CGW <b>13</b> collectively verifies write data of the ECU (ID1), write data of the ECU (ID2), and write data of the ECU (ID3), distributes the write data of the ECU (ID1) to the write target ECU (ID1), distributes the write data of the ECU (ID2) to the write target ECU (ID2), and distributes the write data of the ECU (ID3) to the write target ECU (ID3). In this case, the pieces of write data of the plurality of rewrite target ECUs <b>19</b> are collectively verified, and thus it is possible to reduce the time required from initiation of verification of the write data of the plurality of rewrite target ECUs <b>19</b> to completion of rewriting of a program. That is, it is possible to reduce the time required from initiation of verification of pieces of write data of a plurality of rewrite target ECUs <b>19</b> to completion of rewriting of a program more than in a configuration in which the pieces of write data of the plurality of rewrite target ECUs <b>19</b> are individually verified.</p><p id="p-0635" num="0634">In the method of individually verifying the write data of a plurality of rewrite target ECUs <b>19</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>101</b></figref>, the CGW <b>13</b> verifies write data of the ECU (ID1), distributes the write data of the ECU (ID1) to the write target ECU (ID1), verifies write data of the ECU (ID2), distributes the write data of the ECU (ID2) to the write target ECU (ID2), verifies write data of the ECU (ID3), and distributes the write data of the ECU (ID3) to the write target ECU (ID2). In this case, the write data is verified immediately before the write data is distributed, and therefore it is possible to prevent illegal access and thus to increase reliability. In other words, in the configuration in which the write data is collectively verified for a plurality of rewrite target ECUs <b>19</b>, the time from completion of verification according to a rewrite order to distribution of the write data varies depending on the rewrite order, and, when the time from completion of verification to distribution of the write data increases, there is concern that there is a risk of falsification due to illegal access during that time, but such a situation can be prevented by verifying the write data immediately before the write data is distributed.</p><p id="p-0636" num="0635">As described above, the CGW <b>13</b> performs write data verification process, and thus causes the DCM <b>12</b> downloading a distribution package from the center device <b>3</b> to execute at least some of the processes related to verification of the write data. Even though an area for storing write data cannot be allocated or a verification computation program cannot be installed in the CGW <b>13</b> or the rewrite target ECU <b>19</b>, the write data can be appropriately verified before the write data is written to the rewrite target ECU <b>19</b>.</p><p id="p-0637" num="0636">In the configuration in which the CGW <b>13</b> illustrated in <figref idref="DRAWINGS">FIG. <b>97</b></figref> performs the first verification value calculation process, since the CGW <b>13</b> stores the key (key value) and performs the verification process without transmitting the key to the DCM <b>12</b>, security can be increased compared with a configuration in which the DCM <b>12</b> performs the first verification value calculation process. In a case where there are a plurality of rewrite target ECUs <b>19</b>, the first verification value calculation process may be performed by using a common key (key value) that is common to the plurality of rewrite target ECUs <b>19</b>, and the first verification value calculation process may be performed by using different individual keys (key values) in the plurality of rewrite target ECUs <b>19</b>.</p><p id="p-0638" num="0637">As described above, although the configuration in which the CGW <b>13</b> notifies the DCM <b>12</b> of the process execution request has been exemplified, for example, in a case where a processing load increases in the DCM <b>12</b> and thus a problem occurs in an original process, a navigation apparatus or an ECU other than the rewrite target ECU <b>19</b> may be used instead of the DCM <b>12</b> to notify the navigation apparatus or the ECU other than the rewrite target ECU <b>19</b> of the process execution request.</p><p id="p-0639" num="0638">In a case where the DCM <b>12</b> and the CGW <b>13</b> are integrated with each other and can cope with an original process without causing a problem, the process execution request may be requested to the process execution unit of the process execution unit itself. For example, the process may be performed between different software components in the same ECU. The above-described invention may be applied to the master device <b>11</b> configured as one integrated ECU having the functions of the DCM <b>12</b> and the CGW <b>13</b>. For example, in <figref idref="DRAWINGS">FIGS. <b>96</b> to <b>109</b></figref>, the process function in the CGW <b>13</b> is set as a first functional unit, and the process function in the DCM <b>12</b> is set as a second functional unit, and the first functional unit notifies the second functional unit of a process execution request, and an execution result is returned from the second functional unit to the first functional unit. In the master device <b>11</b> configured as an integrated ECU, in a case where a processing load increases and thus a problem occurs in a communication process or a relay process, the navigation apparatus or an ECU other than the rewrite target ECU <b>19</b> may be notified of a process execution request instead of the second functional unit.</p><p id="p-0640" num="0639">As the data verification value, a single value may be calculated for the entire application program, and a plurality of values may be calculated for respective blocks of the application program. When the write data is entire data, the data verification value may be used for integrity verification after the write data is completed.</p><p id="p-0641" num="0640">Whereas the security access is a method for verifying whether or not the CGW <b>13</b> and the rewrite target ECU <b>19</b> are connectable, verification of the write data includes the concepts that the center device <b>3</b> which is a distribution destination of the write data is approved (connection and mutual authentication through TLS communication), a communication channel for downloading the write data from the center device <b>3</b> is approved (communication channel concealment or encryption), the write data downloaded from the center device <b>3</b> is not falsified (falsification detection), and the write data downloaded from the center device <b>3</b> cannot be falsified (encryption).</p><p id="p-0642" num="0641">The write data at the time of rewriting a new program has been described, but the same applies to write data during rollback at the time of rollback to an old program. In this case, the CGW <b>13</b> may verify the write data during rollback at the time of downloading the write data from the center device <b>3</b>, but may verify the rollback write data immediately before the rollback write data is distributed to the rewrite target ECU <b>19</b> when a write cancellation request is generated.</p><p id="p-0643" num="0642">(8) Data Storage Bank Information Transmission Control Process</p><p id="p-0644" num="0643">The data storage bank information transmission control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>102</b> to <b>104</b></figref>. The vehicle program rewriting system <b>1</b> performs the data storage bank information transmission control process in the CGW <b>13</b>.</p><p id="p-0645" num="0644">As illustrated in <figref idref="DRAWINGS">FIG. <b>102</b></figref>, the CGW <b>13</b> includes a data storage bank information acquisition unit <b>80</b><i>a</i>, a data storage bank information transmission unit <b>80</b><i>b</i>, a rewrite method specifying unit <b>80</b><i>c</i>, and a rewrite method instruction unit <b>80</b><i>d </i>in the data storage bank information transmission control unit <b>80</b>. The data storage bank information acquisition unit <b>80</b><i>a </i>acquires information regarding hardware and software from the respective ECUs <b>19</b> as ECU configuration information. Specifically, in a case of a double-bank memory ECU and a single-bank suspend memory ECU having a plurality of data storage banks, a software ID including version information of each of the data storage banks and information that can specify an active bank-A are acquired as double-bank rewrite information (hereinafter, referred to as bank information).</p><p id="p-0646" num="0645">When the ECU configuration information including the bank information is acquired by the data storage bank information acquisition unit <b>80</b><i>a</i>, the data storage bank information transmission unit <b>80</b><i>b </i>transmits the acquired bank information from the DCM <b>12</b> to the center device <b>3</b> as one of the ECU configuration information. The data storage bank information transmission unit <b>80</b><i>b </i>may transmit the ECU configuration information to the center device <b>3</b> each time the IG switch <b>42</b> switches between an ON state and an OFF state, and may transmit the ECU configuration information to the center device <b>3</b> in response to a request from the center device <b>3</b>. The data storage bank information transmission unit <b>80</b><i>b </i>may transmit the ECU configuration information not only to a double-bank memory ECU and a single-bank suspend memory ECU but also to a single-bank memory ECU along with an ECU configuration including the bank information.</p><p id="p-0647" num="0646">The rewrite method specifying unit <b>80</b>c specifies a rewrite method on the basis of an analysis result of rewrite specification data for the CGW <b>13</b>. The rewrite method indicates a power supply switching method during installation in the rewrite target ECU <b>19</b>. When the rewrite method is specified by the rewrite method specifying unit <b>80</b><i>c</i>, the rewrite method instruction unit <b>80</b><i>d </i>instructs the rewrite target ECU <b>19</b> to rewrite an application program according to the specified rewrite method. That is, when a rewrite method based on self-retention power is specified by the rewrite method specifying unit <b>80</b><i>c</i>, the rewrite method instruction unit <b>80</b><i>d </i>instructs the rewrite target ECU <b>19</b> to rewrite an application program based on the self-retention power. When a rewrite method based on power supply control is specified by the rewrite method specifying unit <b>80</b><i>c</i>, the rewrite method instruction unit <b>80</b><i>d </i>instructs the rewrite target ECU <b>19</b> to rewrite an application program based on the power supply control without using the self-retention power.</p><p id="p-0648" num="0647">Next, an operation of the data storage bank information transmission control unit <b>80</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>103</b> and <b>104</b></figref>. The CGW <b>13</b> executes a data storage bank information transmission control program, and thus performs the data storage bank information transmission control process.</p><p id="p-0649" num="0648">When the data storage bank information transmission control process is initiated, the CGW <b>13</b> transmits an ECU configuration information request including the bank information to all of the ECUs <b>19</b> (S<b>801</b>), and acquires ECU configuration information including the bank information from all of the ECUs <b>19</b> (S<b>802</b>; corresponding to a data storage bank information acquisition procedure). When the ECU configuration information is acquired from each rewrite target ECU <b>19</b>, the CGW <b>13</b> transmits the acquired ECU configuration information to the DCM <b>12</b> (S<b>803</b>; corresponding to a data storage bank information transmitting procedure), and waits for write data and rewrite specification data to be acquired from the DCM <b>12</b> (S<b>804</b>). Here, in a case where the rewrite target ECU <b>19</b> is specified in advance, the CGW <b>13</b> may acquire bank information or the like from only the specified rewrite target ECU <b>19</b>.</p><p id="p-0650" num="0649">When the ECU configuration information is received from the CGW <b>13</b>, the DCM <b>12</b> temporarily stores the received ECU configuration information, and transmits the ECU configuration information to the center device <b>3</b> at a timing of transmitting (uploading) the ECU configuration information to the center device <b>3</b>. When the ECU configuration information is received from the DCM <b>12</b>, the center device <b>3</b> stores and analyzes the received ECU configuration information.</p><p id="p-0651" num="0650">The center device <b>3</b> specifies a version of an application program on each bank of each ECU <b>19</b> that is a transmission source of the bank information and which bank is an active bank, and specifies write data conforming to the version of the application program and the active bank corresponding to the specified double banks (corresponding to an update data selection procedure). For example, in a case where the bank-A is an active bank, the application program stored in the active bank has the version 2.0, the bank-B is an inactive bank, and the application program stored in the inactive bank has the version 1.0, the center device <b>3</b> specifies write data of the version 3.0 for the bank-B as the write data. In a case where the write data is difference data, the center device <b>3</b> specifies the difference data for update from the version 1.0 to the version 3.0. When the write data is specified, the center device <b>3</b> transmits a distribution package including the specified write data and rewrite specification data to the DCM <b>12</b> (corresponding to a distribution package transmission procedure).</p><p id="p-0652" num="0651">The center device <b>3</b> may statically select or dynamically generate a distribution package to be transmitted to the DCM <b>12</b>. In a case where the center device <b>3</b> statically selects the distribution package to be transmitted to the DCM <b>12</b>, the center device manages a plurality of distribution packages in which the write data is stored, selects write data conforming to an inactive bank, selects a distribution package in which the selected write data is stored from among the plurality of distribution packages, and transmits the selected distribution package to the DCM <b>12</b>. In a case where the center device <b>3</b> dynamically generates a distribution package to be transmitted to the DCM <b>12</b>, when write data conforming to the inactive bank is specified, the center device generates a distribution package in which the specified write data is stored and transmits the generated distribution package to the DCM <b>12</b>.</p><p id="p-0653" num="0652">When the distribution package is downloaded from the center device <b>3</b>, the DCM <b>12</b> extracts the write data and the rewrite specification data from the downloaded distribution package, and transfers the extracted write data and rewrite specification data to the CGW <b>13</b>.</p><p id="p-0654" num="0653">When it is determined that the write data and the rewrite specification data are acquired from the DCM <b>12</b> (S<b>804</b>: YES), the CGW <b>13</b> analyzes the acquired rewrite specification data (S<b>805</b>), and determines a rewrite methods for the rewrite target ECU <b>19</b> on the basis of an analysis result of the rewrite specification data (S<b>806</b> and S<b>807</b>).</p><p id="p-0655" num="0654">When it is determined that the rewrite method is a rewrite method using self-retention power (S<b>806</b>: YES), the CGW <b>13</b> transmits a write data acquisition request to the DCM <b>12</b> on the condition of being in an installable vehicle condition, acquires the write data from the DCM <b>12</b>, distributes the acquired write data to the rewrite target ECU <b>19</b>, rewrites the application program by using self-retention power (S<b>808</b>), and finishes the data storage bank information transmission control process. The method of rewriting the application program by using the self-retention power is the same as described in (b) Case where application program is rewritten by using self-retention power with reference to <figref idref="DRAWINGS">FIGS. <b>51</b> and <b>52</b></figref> described above.</p><p id="p-0656" num="0655">When it is determined that a rewrite method is rewriting based on power supply control (S<b>807</b>: YES), the CGW <b>13</b> transmits a write data acquisition request to the DCM <b>12</b> on the condition that the vehicle is parked, acquires write data from the DCM <b>12</b>, distributes the acquired write data to the rewrite target ECU <b>19</b>, rewrites the application program by using the power supply control (S<b>809</b>), and finishes the data storage bank information transmission control process. The method of rewriting the application program by using the power supply control is the same as described in (a) Case where application program is rewritten by using power supply control with reference to <figref idref="DRAWINGS">FIGS. <b>49</b> and <b>50</b></figref>.</p><p id="p-0657" num="0656">As described above, the CGW <b>13</b> performs the data storage bank information transmission control process, and thus notifies the center device <b>3</b> of ECU configuration information including bank information, and downloads a distribution package including write data conforming to the ECU configuration information from the center device <b>3</b> to the DCM <b>12</b>. The CGW <b>13</b> acquires write data conforming to the bank information from the DCM <b>12</b> and distributes the write data to the rewrite target ECU <b>19</b>. In a case where the ECU <b>19</b> equipped with a flash memory having double data storage banks is mounted is a rewrite target, an application program can be appropriately rewritten.</p><p id="p-0658" num="0657">As an aspect in which the center device <b>3</b> distributes the distribution package, there are the following first to third distribution aspects. In the first distribution aspect, the center device <b>3</b> distributes a single distribution package storing, for example, write data of the version 2.0 for the bank-A and write data of the version 2.0 for the bank-B. The DCM <b>12</b> extracts the write data of the version 2.0 for the bank-A and the write data of the version 2.0 for the bank-B from the distribution package downloaded from the center device <b>3</b>, and transfers the extracted write data to the CGW <b>13</b>. When the write data of the version 2.0 for the bank-A and the write data of the version 2.0 for the bank-B are transferred from the DCM <b>12</b>, the CGW <b>13</b> selects one of the two pieces of write data and distributes the selected write data to the rewrite target ECU <b>19</b>. That is, there is a configuration in which write data corresponding to each data storage bank is included in a distribution package, and rewrite data suitable for the rewrite target ECU <b>19</b> is selected in the master device <b>11</b>.</p><p id="p-0659" num="0658">In the second distribution aspect, the center device <b>3</b> selects and distributes either a distribution package storing write data of the version 2.0 for the bank-A or a distribution package storing write data of the version 2.0 for the bank-B, for example. The DCM <b>12</b> extracts the write data from the distribution package downloaded from the center device <b>3</b> and transfers the extracted write data to the CGW <b>13</b>. The CGW <b>13</b> distributes the write data transferred from the DCM <b>12</b> to the rewrite target ECU <b>19</b>. That is, there is a configuration in which the center device <b>3</b> selects a distribution package including inactive bank write data on the basis of bank information uploaded from the DCM <b>12</b>.</p><p id="p-0660" num="0659">In the third distribution aspect, the center device <b>3</b> distributes a distribution package storing, for example, write data of the version 2.0 shared by the bank-A and the bank-B. The DCM <b>12</b> extracts the write data of the version 2.0 shared by the bank-A and the bank-B from the distribution package downloaded from the center device <b>3</b>, and transfers the extracted write data to the CGW <b>13</b>. The CGW <b>13</b> distributes the write data of the version 2.0 shared by the bank-A and the bank-B transferred from the DCM <b>12</b> to the rewrite target ECU <b>19</b>. When the write data of the version 2.0 shared by the bank-A and the bank-B is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> writes the received write data to either the bank-A or the bank-B. In this case, when an application program is executed in the rewrite target ECU <b>19</b>, an address solving function of the microcomputer works, so that the rewrite target ECU <b>19</b> is appropriately operated even when the write data is written to either the bank-A or the bank-B. That is, the microcomputer of the write target ECU <b>19</b> solves a differences between execution addresses due to a difference between the banks such that the center device <b>3</b> and the master device <b>11</b> can be operated without being aware of the banks.</p><p id="p-0661" num="0660">The ECU configuration information including the bank information transmitted from the CGW <b>13</b> to the center device <b>3</b> via the DCM <b>12</b> may include not only information for specifying a version of an application program and an active bank corresponding to the double banks but also vehicle specifying information, system specifying information, ECU specifying information, usage environment information, and the like.</p><p id="p-0662" num="0661">The vehicle specifying information is unique information for specifying a vehicle that is a distribution destination of a distribution package, and is, for example, a vehicle identification number (VIN). In vehicles that fall under the on-board diagnostics (OBD) regulations, a VIN can be used in accordance with provisions of the OBD regulations, but in vehicles that do not fall under the OBD Regulations, such as EV vehicles, the VIN is not available, and thus individual vehicle identification information may be used instead of the VIN.</p><p id="p-0663" num="0662">The system specifying information is unique information for identifying the type of reprogramming system. The CGW <b>13</b> can perform wireless rewriting for a system in which wired rewriting using diagnosis communication managed by the CGW can be performed, but cannot perform wireless rewriting for other individual systems. That is, this is because the system updates a program that is acquired in a wireless manner by using an update mechanism of a program acquired in a wired manner. Thus, it is necessary for the center device <b>3</b> to determine which distribution package is to be distributed to which system, and it is possible to manage which system is mounted on the vehicle by using the system specifying information. The center device <b>3</b> can determine a rewrite method for each system, a rewrite order in a case where a plurality of systems are rewrite targets, and the like by determining the system specifying information.</p><p id="p-0664" num="0663">The ECU specifying information is unique information for specifying the rewrite target ECU <b>19</b>, and is information including a software version for uniquely specifying the rewrite ECU and an application program written in the rewrite target ECU <b>19</b>, and a hardware version. The ECU specifying information also corresponds to an ECU part number. In a case where the latest software is written with entire data, only the hardware version is required. It is also possible to define information that can be specified by an application program, such as a specification version or a configuration version, and to further define a microcomputer ID, a sub-microcomputer ID, a flash ID, a software child version, a software grandchild version, and the like.</p><p id="p-0665" num="0664">The usage environment information is unique information for specifying an environment in which the user uses the vehicle. When the usage environment information is transmitted from the CGW <b>13</b> to the center device <b>3</b> via the DCM <b>12</b>, the center device <b>3</b> can distribute an application program suitable for the environment in which the user uses the vehicles. It is possible to distribute application programs suitable for environments in which users use vehicles, for example, application programs specialized for acceleration are distributed to users who prefer sudden acceleration driving from the time of stop, and application programs that are inferior in acceleration performance but specialized for eco-driving are distributed to users who prefer eco-driving.</p><p id="p-0666" num="0665">As described above, the case has been described in which the flash memory is mounted on the microcomputer of the rewrite target ECU <b>19</b>, but, in a case where an external memory is connected to the microcomputer of the rewrite target ECU <b>19</b>, the external memory is processed as the same as a double-bank memory, and write data is written by dividing a write area of the external memory into two areas. In a case where the flash memory is mounted on the microcomputer of the rewrite target ECU <b>19</b> and the external memory is connected, a program stored in the external memory may be temporarily copied to a memory of the microcomputer in some cases. Since the external memory may generally be used as a storage area of an operation log of the ECU, it is desirable to stop storing the operation log in a case where writing of write data to the external memory is initiated, and to resume storing of the operation log in a case where writing of the write data to the external memory has been completed.</p><p id="p-0667" num="0666">The same applies to a case of rewriting map data because there is a concept of double banks and a version not only in a case of rewriting an application program but also in a case of data having the property of being updated one by one, such as the map data.</p><p id="p-0668" num="0667">(9) Non-Rewrite Target Power Supply Management Process</p><p id="p-0669" num="0668">The power supply management process for the non-rewrite target ECU <b>19</b> will be described will be described with reference to <figref idref="DRAWINGS">FIGS. <b>105</b> to <b>110</b></figref>. The vehicle program rewriting system <b>1</b> performs the power supply management process for the non-rewrite target ECU <b>19</b> in the CGW <b>13</b>. In the present embodiment, a situation is assumed in which download of a distribution package has been completed by the DCM <b>12</b>, the CGW <b>13</b> acquires a rewrite specification data, and the CGW <b>13</b> distributes a write data to the rewrite target ECU <b>19</b> while the vehicle is in a parking state. In a case where the write data is distributed to the rewrite target ECU <b>19</b>, the CGW <b>13</b> requests the power supply management ECU <b>20</b> to turn on the IG power to bring all of the ECUs <b>19</b> into a start state.</p><p id="p-0670" num="0669">As illustrated in <figref idref="DRAWINGS">FIG. <b>105</b></figref>, the CGW <b>13</b> includes a rewrite target specifying unit <b>81</b><i>a</i>, an installability determination unit <b>81</b><i>b</i>, a state transition control unit <b>81</b><i>c</i>, and a rewrite order specifying unit <b>81</b><i>d </i>in the power supply management unit <b>81</b> of the non-rewrite target ECU <b>19</b>. The rewrite target specifying unit <b>81</b><i>a </i>specifies the rewrite target ECU <b>19</b> and the non-rewrite target ECU <b>19</b> on the basis of an analysis result of the rewrite specification data. The installability determination unit <b>81</b><i>b </i>determines whether or not installation is feasible in the rewrite target ECU <b>19</b>.</p><p id="p-0671" num="0670">The state transition control unit <b>81</b><i>c </i>can cause a state of the ECU <b>19</b> to transition, and causes the ECU <b>19</b> in a stop state or a sleep state to transition to a start state (wake-up state), or causes the ECU <b>19</b> in the start state to transition to the stop state or the sleep state. The state transition control unit <b>81</b><i>c </i>causes the ECU <b>19</b> in a normal operating state to transition to a power saving operating state or causes the ECU <b>19</b> in the power saving operating state to transition to the normal operating state. When it is determined by the installability determination unit <b>81</b><i>b </i>that the installation is feasible, the state transition control unit <b>81</b><i>c </i>controls at least one non-rewrite target ECU <b>19</b> to be in the stop state, the sleep state, or the power saving operating state. The rewrite order specifying unit <b>81</b><i>d </i>specifies a rewrite order of the rewrite target ECU <b>19</b> on the basis of the analysis result of the rewrite specification data.</p><p id="p-0672" num="0671">Next, an operation of the power supply management unit <b>81</b> of the non-rewrite target ECU <b>19</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>106</b> to <b>110</b></figref>. The CGW <b>13</b> executes a non-rewrite target power supply management program and thus performs a non-rewrite target power supply management process. Here, a description will be made of a case where the ECUs <b>19</b> that are management targets are brought into a start state by the CGW <b>13</b>.</p><p id="p-0673" num="0672">When the power supply management process for the non-rewrite target ECU <b>19</b> is initiated, the CGW <b>13</b> specifies the rewrite target ECU <b>19</b> and the non-rewrite target ECU <b>19</b> on the basis of an analysis result of the CGW rewrite specification data (S<b>901</b>), and specifies a rewrite order of one or more rewrite target ECUs <b>19</b> on the basis of the analysis result of the rewrite specification data (S<b>902</b>). When the CGW <b>13</b> determines whether or not write data can be written (S<b>903</b>; corresponding to a writability determination procedure) and determines that the write data can be written (S<b>903</b>: YES), the CGW transmits a power-off request (stop request) to the non-rewrite target ECU <b>19</b> of the ACC system and the non-rewrite target ECU <b>19</b> of the IG system, and thus causes the non-rewrite target ECU <b>19</b> of the ACC system and the non-rewrite target ECU <b>19</b> of the IG system to transition from the start state to the stop state (S<b>904</b>; corresponding to a state transition control procedure).</p><p id="p-0674" num="0673">When the CGW <b>13</b> determines whether or not transmission of the power-off request to all of the corresponding ECUs <b>19</b> has been completed (S<b>905</b>), and determines that transmission of the power-off request to all of the corresponding ECUs <b>19</b> has been completed (S<b>905</b>: YES), the CGW transmits a sleep request to the non-rewrite target ECU <b>19</b> of the +B power system, and thus causes the non-rewrite target ECU <b>19</b> of the +B power system to transition from the start state to the sleep state (S<b>906</b>; corresponding to a state transition control procedure).</p><p id="p-0675" num="0674">When the CGW <b>13</b> determines whether or not transmission of the sleep request to all of the corresponding ECUs <b>19</b> has been completed (S<b>907</b>), and determines that the transmission of the sleep request to all of the corresponding ECUs <b>19</b> has been completed (S<b>907</b>: YES), the CGW determines whether or not rewriting of an application program in all of the rewrite target ECUs <b>19</b> has been completed (S<b>908</b>). When it is determined that rewriting of the application program has been completed in all of the rewrite target ECUs <b>19</b> (S<b>908</b>: YES), the CGW <b>13</b> finishes the power supply management process for the non-rewrite target ECU <b>19</b>. When it is determined that rewriting of the application program is not completed in all of the rewrite target ECUs <b>19</b> (S<b>908</b>: NO), the CGW <b>13</b> returns to step S<b>904</b>, and repeatedly performs step S<b>904</b> and the subsequent steps.</p><p id="p-0676" num="0675">In a case where there are a plurality of rewrite target ECUs <b>19</b>, the CGW <b>13</b> may individually cause states of the plurality of rewrite target ECUs <b>19</b> to transition, or may collectively cause the states of the plurality of rewrite target ECUs <b>19</b> to transition. That is, <figref idref="DRAWINGS">FIG. <b>106</b></figref> illustrates a process in which the CGW <b>13</b> transmits a power-off request or a sleep request to the non-rewrite target ECU <b>19</b>. In <figref idref="DRAWINGS">FIGS. <b>107</b> and <b>108</b></figref> described next, a description will be made of a case where the power supply management process for the rewrite target ECU <b>19</b> is performed in addition to the power supply management process for the non-rewrite target ECU <b>19</b>.</p><p id="p-0677" num="0676">First, a description will be made of a case where the CGW <b>13</b> individually causes states of a plurality of rewrite target ECUs <b>19</b> to transition with reference to <figref idref="DRAWINGS">FIG. <b>107</b></figref>. As illustrated in <figref idref="DRAWINGS">FIG. <b>107</b></figref>, for example, a description will be made of a case where the rewrite target ECUs <b>19</b> are an ECU (ID1), an ECU (ID2), and an ECU (ID3), and the rewrite target ECUs <b>19</b> are sequentially subjected to rewriting during parking in a designated rewrite order of the ECU (ID1), the ECU (ID2), and the ECU (ID3) from the earliest rewrite order.</p><p id="p-0678" num="0677">The CGW <b>13</b> causes all of the ECU (ID1), ECU (ID2), and ECU (ID3) to transition from the stop state or the sleep state to the start state. The CGW <b>13</b> maintains the first rewrite target ECU (ID1) to be in the start state, causes the ECU (ID2) and the ECU (ID3) to transition from the start state to the stop state or the sleep state, and distributes the write data to the ECU (ID1). When the distribution of the write data to the ECU (ID1) has been completed, the CGW <b>13</b> causes the ECU (ID1) to transition from the start state to the stop state or the sleep state, causes the second rewrite target ECU (ID2) to transition from the stop state or the sleep state to the start state, maintains the ECU (ID3) to be in the stop state or the sleep state, and distributes the write data to the ECU (ID2).</p><p id="p-0679" num="0678">When the distribution of the write data to the ECU (ID2) has been completed, the CGW <b>13</b> maintains the ECU (ID1) to be in the stop state or the sleep state, causes the ECU (ID2) to transition from the start state to the stop state or the sleep state, causes the third rewrite target ECU (ID3) to transition from the stop state or the sleep state to the start state, and distributes the write data to the ECU (ID3). When the distribution of the write data to the ECU (ID3) has been completed, the CGW <b>13</b> maintains the ECU (ID1) and the ECU (ID2) to be in the stop state or the sleep state, and causes the ECU (ID3) to transition from the start state to the stop state or the sleep state. As mentioned above, the CGW <b>13</b> controls only the ECU <b>19</b> that is a current rewrite target among the plurality of the rewrite target ECUs <b>19</b> to be in the start state.</p><p id="p-0680" num="0679">Next, a description will be made of a case where the CGW <b>13</b> collectively causes states of a plurality of rewrite target ECUs <b>19</b> to transition with reference to <figref idref="DRAWINGS">FIG. <b>108</b></figref>. As illustrated in <figref idref="DRAWINGS">FIG. <b>108</b></figref>, for example, a description will be made of a case where the rewrite target ECUs <b>19</b> are the ECU (ID1), the ECU (ID2), and the ECU (ID3), and the rewrite target ECUs <b>19</b> are sequentially subjected to rewriting during parking in a designated rewrite order of the ECU (ID1), the ECU (ID2), and the ECU (ID3) from the earliest rewrite order.</p><p id="p-0681" num="0680">The CGW <b>13</b> causes all of the ECU (ID1), ECU (ID2), and ECU (ID3) to transition from the stop state or the sleep state to the start state. The CGW <b>13</b> maintains all of the ECU (ID1), ECU (ID2), and ECU (ID3) to be in the start state and distributes the write data to the ECU (ID1). When the distribution of the write data to the ECU (ID1) has been completed, the CGW <b>13</b> distributes the write data to the ECU (ID2). When the distribution of the write data to the ECU (ID2) has been completed, the CGW <b>13</b> distributes the write data to the ECU (ID3). When the distribution of the write data to the ECU (ID3) has been completed, the CGW <b>13</b> causes all of the ECU (ID1), ECU (ID2), and ECU (ID3) to transition from the start state to the stop state or the sleep state. As mentioned above, the CGW <b>13</b> controls a plurality of all rewrite target ECUs <b>19</b> to be in the start state until installation has been completed in all of the rewrite target ECUs. Here, the CGW <b>13</b> may simultaneously distribute write data to the ECU (ID1), the ECU (ID2), and the ECU (ID3) in parallel.</p><p id="p-0682" num="0681">In a case where the rewrite target ECU <b>19</b> rewrites an application program during parking, a voltage supplied to the rewrite target ECU <b>19</b> is not necessarily in a stable environment, and there is concern that exhaustion of the vehicle battery <b>40</b> may occur during the rewriting of the application program. Particularly, where there are a plurality of rewrite target ECUs <b>19</b>, the time required for rewriting the application program increases, and thus there is a high probability that exhaustion of the vehicle battery <b>40</b> may occur during rewriting of the application program. In relation to this fact, the non-rewrite target ECU <b>19</b> is brought into the stop state or the sleep state as described above, and thus a situation in which a remaining battery charge of the vehicle battery <b>40</b> becomes insufficient during rewriting of a program is prevented in advance. The ECU <b>19</b> that is not a current rewrite target among the rewrite target ECUs <b>19</b> is brought into the stop state or the sleep state, and thus power consumption can be further reduced.</p><p id="p-0683" num="0682">The above description relates to a case where an application program of the rewrite target ECU <b>19</b> is rewritten during parking, and a description will be made of a case where an application program of the rewrite target ECU <b>19</b> is rewritten while the vehicle is traveling. In a case where the rewrite target ECU <b>19</b> rewrites the application program while the vehicle is traveling, a voltage supplied to the rewrite target ECU <b>19</b> is in a stable environment, and thus there is no concern that exhaustion of the vehicle battery <b>40</b> may occur during the rewriting of the application program, but a remaining battery charge of the vehicle battery <b>40</b> may be small. In light of such circumstances, it is desirable to cause the ECU <b>19</b> that does not need to perform an operation to transition to the stop state or the sleep state while the vehicle is traveling. As illustrated in <figref idref="DRAWINGS">FIG. <b>109</b></figref>, although an ECU <b>44</b> that does not need to perform an operation is connected to the +B power line <b>37</b> while the vehicle is traveling, in a case of a configuration in which the ECU <b>44</b> is not connected to the ACC power line <b>38</b> and the IG power line <b>39</b>, the CGW <b>13</b> causes ECU <b>44</b> that does not need to perform an operation while the vehicle is traveling to transition from the start state to the stop state or the sleep state. The ECU <b>44</b> is, for example, an ECU having a function of preventing theft. That is, the CGW <b>13</b> causes the ECU<b>44</b> that does not need to perform an operation and is not a rewrite target among all the ECU <b>19</b> in the start state while the vehicle is traveling, to transition to the stop state or the sleep state. Consequently, it is possible to suppress an increase in power consumption due to installation while the vehicle is traveling.</p><p id="p-0684" num="0683">The CGW <b>13</b> monitors a remaining battery charge of the vehicle battery <b>40</b>, and performs the above-described non-rewrite target power supply management process. A remaining battery charge monitoring process will be described with reference to <figref idref="DRAWINGS">FIG. <b>110</b></figref>. When the remaining battery charge monitoring process is initiated, the CGW <b>13</b> monitors a remaining battery charge while write data is being distributed to the rewrite target ECU <b>19</b> (S<b>911</b>), and determines whether the remaining battery charge is equal to or more than a first predetermined capacity, whether the remaining battery charge is less than the first predetermined capacity and equal to or more than a second predetermined capacity, and whether the remaining battery charge is less than the second predetermined capacity (S<b>912</b> to S<b>914</b>).</p><p id="p-0685" num="0684">When it is determined that the remaining battery charge is equal to or more than the first predetermined capacity (S<b>912</b>: YES), the CGW <b>13</b> maintains the non-rewrite target ECU <b>19</b> to be in the start state, and continues the distribution of the write data to the rewrite target ECU <b>19</b> (S<b>915</b>). When it is determined that the remaining battery charge is less than the first predetermined capacity and is equal to or more than the second predetermined capacity (S<b>913</b>: YES), the CGW <b>13</b> causes an ECU that does not need to perform an operation during traveling among the non-rewrite target ECUs <b>19</b> to transition to the stop state or the sleep state, and continues the distribution of the write data to the rewrite target ECU <b>19</b> (S<b>916</b>). When it is determined that the remaining battery charge is less than the second predetermined capacity (S<b>914</b>: YES), the CGW <b>13</b> determines whether or not rewriting can be stopped (S<b>917</b>).</p><p id="p-0686" num="0685">When it is determined that rewriting can be stopped (S<b>917</b>: YES), the CGW <b>13</b> stops the distribution of the write data (S<b>918</b>). When it is determined that rewriting cannot be stopped (S<b>917</b>: NO), the CGW <b>13</b> causes all ECUs among the non-rewrite target ECUs <b>19</b> that can transition to the stop state or the sleep state to transition to the stop state or the sleep state (S<b>919</b>).</p><p id="p-0687" num="0686">When the CGW <b>13</b> determines whether or not rewriting has been completed (S<b>920</b>), and determines that rewriting is not completed (S<b>920</b>: NO), the CGW <b>13</b> returns to step S<b>911</b>, and repeatedly performs step S<b>911</b> and the subsequent steps. When it is determined that the rewriting has been completed (S<b>920</b>: YES), the CGW <b>13</b> causes the rewrite target ECU <b>19</b> in the stop state or the sleep state to transition to the start state (S<b>921</b>), and finishes the remaining battery charge monitoring process. Here, values of the first predetermined capacity and the second predetermined capacity may be stored in advance by the CGW <b>13</b>, or values designated by rewrite specification data may be used.</p><p id="p-0688" num="0687">In the step S<b>919</b>, the CGW <b>13</b> may exclude the ECU <b>19</b> having a specific function such as an alarm function from targets that transition to the stop state or the sleep state, and may cause the non-rewrite target ECU <b>19</b> to transition from the start state to the stop state or the sleep state except the ECU <b>19</b> having the specific function. In a case where the rewrite target ECU <b>19</b> can execute application control while an application program is being rewritten, the CGW <b>13</b> may bring the non-rewrite target ECU <b>19</b> into the stop state or the sleep state except the ECU <b>19</b> that can communicate with the rewrite target ECU <b>19</b>. The CGW <b>13</b> may cause the rewrite target ECU <b>19</b> to transition from the stop state or the sleep state to the start state in a case where rewrite conditions are established when all the ECUs <b>19</b> are in the stop state or the sleep state, for example, when a vehicle position becomes a predetermined position or the present time reaches a predetermined time.</p><p id="p-0689" num="0688">The CGW <b>13</b> may group the rewrite target ECUs <b>19</b> or the non-rewrite target ECUs <b>19</b> on the basis of any of start power (a +B power ECU, an ACC ECU, or an IG ECU), a domain group (a body system, a traveling system, or a multimedia system), and a synchronization timing, and may bring the rewrite target ECU <b>19</b> into the start state in the group unit, or may bring the non-rewrite target ECU <b>19</b> into the stop state or sleep state in the group unit.</p><p id="p-0690" num="0689">The CGW <b>13</b> may be configured to control the power supply in the bus unit. That is, when it is determined that all of the ECUs <b>19</b> connected to a specific bus are the non-rewrite target ECUs <b>19</b>, the CGW <b>13</b> may turn off power of the specific bus to cause all of the non-rewrite target ECUs <b>19</b> connected to the specific bus to transition to the stop state or the sleep state.</p><p id="p-0691" num="0690">As described above, the CGW <b>13</b> performs the non-rewrite target power supply management process, and thus brings at least one non-rewrite target ECU <b>19</b> into the stop state, the sleep state, or the power saving operating state when it is determined that installation can be performed in the rewrite target ECU <b>19</b>. It is possible to prevent a situation in which a remaining battery charge of the vehicle battery <b>40</b> becomes insufficient during rewriting of an application program. Since the non-rewrite target ECU <b>19</b> is brought into the stop state, the sleep state, or the power saving operating state, it is possible to suppress an increase in communication loads.</p><p id="p-0692" num="0691">(10) File Transfer Control Process</p><p id="p-0693" num="0692">The file transfer control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>111</b> to <b>120</b></figref>. The vehicle program rewriting system <b>1</b> performs the file transfer control process in the CGW <b>13</b>. The present embodiment corresponds to a process of transmitting rewrite data stored the DCM <b>12</b> (corresponding to a first device) to the rewrite target ECU <b>19</b> (corresponding to a third device) via the CGW <b>13</b> (corresponding to a second device).</p><p id="p-0694" num="0693">As illustrated in <figref idref="DRAWINGS">FIG. <b>111</b></figref>, the CGW <b>13</b> includes a transfer target file specifying unit <b>82</b><i>a</i>, a first data size specifying unit <b>82</b><i>b</i>, an acquisition information specifying unit <b>82</b><i>c</i>, a second data size specifying unit <b>82</b><i>d</i>, and a divided file transfer request unit <b>82</b><i>e </i>in the file transfer control unit <b>82</b>. The transfer target file specifying unit <b>82</b><i>a </i>specifies a file including write data to be written to the rewrite target ECU <b>19</b> as a transfer target file by using an analysis result of rewrite specification data. For example, in a case where the rewrite target ECUs <b>19</b> are the ECU (ID1), the ECU (ID2), and the ECU (ID3), the transfer target file specifying unit <b>82</b><i>a </i>acquires ECU information of the ECU (ID1), the ECU (ID2), and the ECU (ID3) from the CGW rewrite specification data illustrated in <figref idref="DRAWINGS">FIG. <b>31</b></figref>, and specifies the file including the write data from the acquired ECU information as a transfer target file. As the transfer target file, an address or an index for acquiring the file may be specified, or a file name of the file may be specified.</p><p id="p-0695" num="0694">When the transfer target file is specified by the transfer target file specifying unit <b>82</b><i>a</i>, the first data size specifying unit <b>82</b><i>b </i>specifies a first data size for acquiring the transfer target file. When the transfer target file is specified by the transfer target file specifying unit <b>82</b><i>a</i>, the acquisition information specifying unit <b>82</b><i>c </i>specifies an address as acquisition information for acquiring the transfer target file. In the present embodiment, the address is specified as the acquisition information for acquiring the transfer target file, but, as long as the acquisition information is used for acquiring the transfer target file, not only an address but also a file name or an ECU (ID) may be used. The second data size specifying unit <b>82</b><i>d </i>specifies a second data size for distributing write data to the rewrite target ECU <b>19</b>. That is, the first data size is a data transfer size from the DCM <b>12</b> to the CGW <b>13</b>, and the second data size is a data transfer size from the CGW <b>13</b> to the rewrite target ECU <b>19</b>.</p><p id="p-0696" num="0695">When the address is specified by the acquisition information specifying unit <b>82</b><i>c </i>and the first data size is specified by the first data size specifying unit <b>82</b><i>b</i>, the divided file transfer request unit <b>82</b><i>e </i>designates the address and the first data size in the DCM <b>12</b>, and requests the DCM <b>12</b> to transfer a divided file. For example, in a case where a data amount of a write file to be distributed to the ECU (ID1) is 1M bytes, the divided file transfer request unit <b>82</b><i>e </i>requests that the write data is transferred from the address of 0x10000000 every 1 k bytes.</p><p id="p-0697" num="0696">Next, an operation of the file transfer control unit <b>82</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>112</b> to <b>120</b></figref>. The CGW <b>13</b> executes a file transfer control program and thus performs the file transfer control process.</p><p id="p-0698" num="0697">When it is determined that an unpackaging completion notification signal is received from the DCM <b>12</b>, the CGW <b>13</b> initiates the file transfer control process. As illustrated in <figref idref="DRAWINGS">FIG. <b>33</b></figref>, the unpackaging is a process of dividing a distribution package file into data for each ECU and each piece of rewrite specification data. When the file transfer control process is initiated, the CGW <b>13</b> transmits a predetermined address to the DCM <b>12</b> (S<b>1001</b>). When the predetermined address is received from the CGW <b>13</b>, the DCM <b>12</b> transfers the CGW rewrite specification data to the CGW <b>13</b> with the reception of the predetermined address as a trigger. The CGW <b>13</b> acquires the CGW rewrite specification data due to transfer of the CGW rewrite specification data from the DCM <b>12</b> (S<b>1002</b>).</p><p id="p-0699" num="0698">When the CGW rewrite specification data is acquired from the DCM <b>12</b>, the CGW <b>13</b> analyzes the acquired CGW rewrite specification data (S<b>1003</b>), and specifies a transfer target file on the basis of an analysis result of the rewrite specification data (S<b>1004</b>; corresponding to a transfer target file specifying procedure). The CGW <b>13</b> specifies an address corresponding to the transfer target file (S<b>1005</b>; corresponding to an acquisition information specifying procedure), and specifies the first data size corresponding to the transfer target file (S<b>1006</b>; corresponding to a first data size specifying procedure). The CGW <b>13</b> transmits the specified address and data size to the DCM <b>12</b> in accordance with the provisions of Service Identifier (SID) <b>35</b>, designates the address and the data size in a memory area, and requests the DCM <b>12</b> to transfer a divided file (S<b>1007</b>).</p><p id="p-0700" num="0699">When the address and the data size are received from the CGW <b>13</b>, the DCM <b>12</b> analyzes the DCM rewrite specification data, and transfers a file corresponding to the address and the data size to the CGW <b>13</b> as the divided file. The CGW <b>13</b> acquires the divided file due to transfer of the divided file from the DCM <b>12</b> (S<b>1008</b>). In this case, the CGW <b>13</b> may store the acquired file into a RAM and then store the acquired file into a flash memory.</p><p id="p-0701" num="0700">The CGW <b>13</b> determines whether or not acquisition of all divided files to be acquired has been completed (S<b>1009</b>). For example, in a case where a data amount of a write file to be distributed to the ECU (ID1) is 1M bytes, the CGW <b>13</b> acquires a divided file every 1k bytes and determines whether or not acquisition of the data amount of 1M byte has been completed by repeating the acquisition of the divided file every 1 k bytes. When it is determined that acquisition of all divided files to be acquired is not completed (S<b>1009</b>: NO), the CGW <b>13</b> returns to step S<b>1004</b> and repeatedly performs step S<b>1004</b> and the subsequent steps. When it is determined that acquisition of all of the files to be acquired has been completed (S<b>1009</b>: YES), the CGW <b>13</b> finishes the file transfer control process. In a case where there are a plurality of rewrite target ECUs <b>19</b>, the CGW <b>13</b> repeatedly performs the file transfer control process on each rewrite target ECU <b>19</b>.</p><p id="p-0702" num="0701">That is, for example, in a case where the rewrite target ECUs <b>19</b> are the ECU (ID1), the ECU (ID2), and the ECU (ID3), the CGW <b>13</b> performs the file transfer control process on the ECU (ID2) when distribution of write data to the ECU (ID1) has been completed, and performs the file transfer control process on the ECU (ID3) when distribution of write data to the ECU (ID2) has been completed. The CGW <b>13</b> may sequentially perform the transfer control process on a plurality of rewrite target ECUs <b>19</b>, and may perform the transfer control process in parallel.</p><p id="p-0703" num="0702"><figref idref="DRAWINGS">FIG. <b>113</b></figref> illustrates, for example, a case where a write data file of the ECU (ID1) is stored at addresses &#x201c;1000&#x201d; to &#x201c;3999&#x201d;, a write data file of the ECU (ID2) is stored at addresses &#x201c;4000&#x201d; to &#x201c;6999&#x201d;, and a write data file of the ECU (ID3) is stored at addresses &#x201c;7000&#x201d; . . . in the memory of the DCM <b>12</b>.</p><p id="p-0704" num="0703">In this case, as illustrated in <figref idref="DRAWINGS">FIG. <b>114</b></figref>, when an unpackaging completion notification signal is received from the DCM <b>12</b>, the CGW <b>13</b> transmits the address &#x201c;0000&#x201d; to the DCM <b>12</b>, and acquires rewrite specification data from the DCM <b>12</b>. That is, the DCM <b>12</b> determines that reception of the address &#x201c;0000&#x201d; is a request for acquiring CGW rewrite data, and transmits the CGW rewrite specification data to the CGW <b>13</b>. The CGW <b>13</b> designates the ECU (ID1) as a transfer target of write data, designates the address &#x201c;1000&#x201d; and the data size &#x201c;1k bytes&#x201d;, and acquires a divided file including write data of the ECU (ID1) stored at the addresses &#x201c;1000&#x201d; to &#x201c;1999&#x201d; from the DCM <b>12</b>. When the divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the write data included in the divided file to the ECU (ID1).</p><p id="p-0705" num="0704">Subsequently, the CGW <b>13</b> similarly designates the ECU (ID1) as a transfer target of write data, designates the address &#x201c;2000&#x201d; and the data size &#x201c;1k bytes&#x201d;, and acquires a divided file including write data of the ECU (ID1) stored at the addresses &#x201c;2000&#x201d; to &#x201c;2999&#x201d; from the DCM <b>12</b>. When the divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the write data included in the divided file to the ECU (ID1). The CGW <b>13</b> repeatedly acquires the divided file every 1 k bytes from the DCM <b>12</b> until writing of all pieces of write data to the ECU (ID1) is completed, and repeatedly distributes the write data included in the divided file to the ECU (ID1). That is, when the write data of 1k bytes is acquired from the DCM <b>12</b>, the CGW <b>13</b> transmits the write data of 1k bytes to the rewrite target ECU <b>19</b>, and acquires the next write data of 1 k bytes from the DCM <b>12</b> when transmission to the rewrite target ECU <b>19</b> has been completed. The CGW <b>13</b> repeatedly performs these processes until writing of all pieces of write data is complete.</p><p id="p-0706" num="0705">When writing of the write data in the ECU (ID1) is normally completed, the CGW <b>13</b> designates the ECU (ID2) as a transfer target of write data, designates the address &#x201c;4000&#x201d; and the data size &#x201c;1k bytes&#x201d;, and acquires a divided file including write data of the ECU (ID2) stored at the addresses &#x201c;4000&#x201d; to &#x201c;4999&#x201d; from the DCM <b>12</b>. When the divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the write data included in the divided file to the ECU (ID2).</p><p id="p-0707" num="0706">When writing of the write data in the ECU (ID2) is normally completed, the CGW <b>13</b> designates the ECU (ID3) as a transfer target of write data, designates the address &#x201c;7000&#x201d; and the data size &#x201c;1k bytes&#x201d;, and acquires a divided file including write data of the ECU (ID2) stored at the addresses &#x201c;7000&#x201d; to &#x201c;7999&#x201d; from the DCM <b>12</b>. When the divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the write data included in the divided file to the ECU (ID2).</p><p id="p-0708" num="0707">As described above, the CGW <b>13</b> performs the file transfer control process, and thus specifies a transfer target file on the basis of an analysis result of rewrite specification data, and specifies an address and a data size corresponding to the transfer target file. The CGW <b>13</b> designates the address and the data size in the DCM <b>12</b>, requests the DCM <b>12</b> to transfer a divided file obtained by dividing the transfer target file, and acquires the divided file from the DCM <b>12</b>. Consequently, it is possible to distribute write data to the ECU <b>19</b> while storing a large volume of write data in the memory of the DCM <b>12</b>. That is, in the CGW <b>13</b>, it is not necessary to prepare a memory for storing a large volume of a file and thus to reduce a memory capacity of the CGW <b>13</b>.</p><p id="p-0709" num="0708">Here, a description will be made of a relationship between a data amount of a divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> and a data amount of a write file distributed from the CGW <b>13</b> to the rewrite target ECU <b>19</b>. In the above example, as illustrated in <figref idref="DRAWINGS">FIG. <b>115</b></figref>, a description has been made of a case where a data amount of a divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> is 1k bytes. However, any relationship between a data amount of the divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> and a data amount of the write file distributed from the CGW <b>13</b> to the rewrite target ECU <b>19</b> may be employed.</p><p id="p-0710" num="0709">That is, for example, when the rewrite target ECU <b>19</b> has a specification of receiving the write data in 4k bytes for the reason of CAN communication, the CGW <b>13</b> distributes a data amount of a write file to the rewrite target ECU <b>19</b> in the unit of 4k bytes. In this case, when a data amount of the divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> is 1k bytes, the CGW <b>13</b> acquires four divided files from the DCM <b>12</b> and then distributes 4k bytes to the rewrite target ECU <b>19</b>. That is, a data amount of a divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> is smaller than a data amount of a write file distributed from the CGW <b>13</b> to the rewrite target ECU <b>19</b>. In such a relationship, in the CGW <b>13</b>, it is possible to acquire a divided file from the DCM <b>12</b> and distribute write data to the rewrite target ECU <b>19</b> in parallel while suppressing an increase in a memory capacity.</p><p id="p-0711" num="0710">That is, when a data amount of a divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> is 4k bytes, a memory capacity of the CGW <b>13</b> is required to be set to 8k bytes in order to acquire the divided file from the DCM <b>12</b> and distribute write data to the rewrite target ECU <b>19</b> in parallel. A data amount of the divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> is set to 1k bytes, and thus it is possible to acquire the divided file from the DCM <b>12</b> and distribute write data to the rewrite target ECU <b>19</b> in parallel without changing the memory capacity of the CGW <b>13</b> to 8k bytes. For example, the memory capacity of the CGW <b>13</b> is allocated to 5k bytes, and the CGW <b>13</b> acquires the next 1k bytes from the DCM <b>12</b> while distributing 4k bytes acquired from the DCM <b>12</b> to the rewrite target ECU <b>19</b>. The CGW <b>13</b> further acquires the next 1k bytes from the DCM <b>12</b> after the distribution of 4k byte to the rewrite target ECU <b>19</b> is completed.</p><p id="p-0712" num="0711">On the other hand, for example, when the rewrite target ECU <b>19</b> has a specification of receiving the write data in 128 bytes for the reason of CAN communication, the CGW <b>13</b> distributes the write data to the rewrite target ECU <b>19</b> in 128 bytes. In this case, when a data amount of a divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> is 1k bytes, the CGW <b>13</b> acquires a single divided file from the DCM <b>12</b> and then distributes 128 bytes to the rewrite target ECU <b>19</b> at a time. That is, a data amount of the divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> is larger than a data amount of the write file distributed from the CGW <b>13</b> to the rewrite target ECU <b>19</b>. For example, a memory capacity of the CGW <b>13</b> is allocated to 2k bytes, and the CGW <b>13</b> acquires the next 1k bytes from the DCM <b>12</b> while distributing 1k bytes acquired from the DCM <b>12</b> to the rewrite target ECU <b>19</b> in the unit of 128 bytes. The CGW <b>13</b> further acquires the next 1k bytes from the DCM <b>12</b> after eight number of times of distribution of 128 bytes to the rewrite target ECU <b>19</b> is completed.</p><p id="p-0713" num="0712">In the above-described way, a data amount of a divided file transferred from the DCM <b>12</b> to the CGW <b>13</b> may be set to a fixed value (for example, 1k bytes), and a data amount of a write file distributed from the CGW <b>13</b> to the rewrite target ECU <b>19</b> may be set to a variable value in accordance with a specification of the rewrite target ECU <b>19</b>. The CGW <b>13</b> may determine an amount of data to be distributed to the rewrite target ECU <b>19</b> by using a data transfer size of each ECU specified in the rewrite specification data, for example.</p><p id="p-0714" num="0713">The CGW <b>13</b> transmits a transfer request to the DCM <b>12</b> and requests the DCM <b>12</b> to transfer a divided file, and there are a first request aspect and a second request aspect as aspects of requesting the DCM <b>12</b> to transfer the divided file. When reception of write data has been completed, the rewrite target ECU <b>19</b> transmits a reception completion notification indicating that the reception of the write data has been completed to the CGW <b>13</b>, and, when writing of the write data has been completed, the rewrite target ECU transmits a write completion notification indicating that the writing of the write data has been completed to the CGW <b>13</b>.</p><p id="p-0715" num="0714">The first distribution aspect will be described with reference to <figref idref="DRAWINGS">FIG. <b>116</b></figref>. When a divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the acquired divided file as write data to the rewrite target ECU <b>19</b>. When reception of the write data has been completed, the rewrite target ECU <b>19</b> transmits a reception completion notification to the CGW <b>13</b> and initiates a write process on the write data. When the reception completion notification of the write data is received from the rewrite target ECU <b>19</b>, the CGW <b>13</b> transmits a transfer request to the DCM <b>12</b> and requests the DCM <b>12</b> to transfer the next divided file. When the next divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the acquired next divided file as write data to the rewrite target ECU <b>19</b>.</p><p id="p-0716" num="0715">As described above, in the first distribution aspect, the CGW <b>13</b> acquires the next write data from the DCM <b>12</b> and distributes the next write data to the rewrite target ECU <b>19</b> without waiting for completion of writing of the write data in the rewrite target ECU <b>19</b>. Thus, in the first distribution aspect, in the CGW <b>13</b>, in a case where the rewrite target ECU <b>19</b> has not completed writing of the write data, there is concern that the next write data may not be received by the rewrite target ECU <b>19</b> even though the next divided file is acquired from the DCM <b>12</b> and the next write data is distributed to the rewrite target ECU <b>19</b>. However, in a case where the rewrite target ECU <b>19</b> has completed writing of the write data, the next divided file can be quickly acquired from the DCM <b>12</b> and the next write data can be quickly distributed to the rewrite target ECU <b>19</b>.</p><p id="p-0717" num="0716">The second distribution aspect will be described with reference to <figref idref="DRAWINGS">FIG. <b>117</b></figref>. When a divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the acquired divided file as write data to the rewrite target ECU <b>19</b>. When reception of the write data has been completed, the rewrite target ECU <b>19</b> transmits a reception completion notification to the CGW <b>13</b> and initiates a write process on the write data. When writing has been completed, the rewrite target ECU <b>19</b> transmits a write completion notification to the CGW <b>13</b>. When the write completion notification is received from the rewrite target ECU <b>19</b>, the CGW <b>13</b> transmits a transfer request to the DCM <b>12</b> and requests the DCM <b>12</b> to transfer the next divided file. When the next divided file is acquired from the DCM <b>12</b>, the CGW <b>13</b> distributes the acquired next divided file as write data to the rewrite target ECU <b>19</b>.</p><p id="p-0718" num="0717">As described above, in the second distribution aspect, the CGW <b>13</b> waits for completion of writing of the write data in the rewrite target ECU <b>19</b>, then acquires the next write data from the DCM <b>12</b>, and distributes the next write data to the rewrite target ECU <b>19</b>. Thus, in the second distribution aspect, it takes time for the CGW <b>13</b> to acquire the next divided file from the DCM <b>12</b>, but it is possible to request the DCM <b>12</b> to transfer a divided file in a state in which the rewrite target ECU <b>19</b> has completed writing of write data. Therefore, when the next divided file is acquired from the DCM <b>12</b> and the next write data is distributed to the rewrite target ECU <b>19</b>, the next write data can be reliably distributed to the rewrite target ECU <b>19</b>.</p><p id="p-0719" num="0718">The CGW <b>13</b> distributes write data to the rewrite target ECU <b>19</b> according to SID <b>34</b> <b>36</b>, and <b>37</b>, and there are a first distribution aspect and a second distribution aspect as aspects of distributing the write data to the rewrite target ECU <b>19</b>. In the first distribution aspect, as illustrated in <figref idref="DRAWINGS">FIG. <b>118</b></figref>, the CGW <b>13</b> divides write data to be distributed by a predetermined data amount (for example, 1k bytes), and distributes the divided write data. In the second distribution aspect, as illustrated in <figref idref="DRAWINGS">FIG. <b>119</b></figref>, the CGW <b>13</b> collectively distributes write data to be distributed without dividing the write data. The CGW <b>13</b> selects either the first distribution aspect or the second distribution aspect according to SID <b>34</b> to be distributed first to the rewrite target ECU <b>19</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>120</b></figref>, the CGW <b>13</b> specifies reception of write data in the rewrite target ECU <b>19</b> by receiving ACK (SID <b>74</b>) for SID <b>37</b> to be finally distributed to the rewrite target ECU <b>19</b>. ACK for this SID <b>37</b> corresponds to the reception completion notification of the write data described above with reference to <figref idref="DRAWINGS">FIGS. <b>116</b> and <b>117</b></figref>. That is, in the first distribution aspect, when ACK for SID <b>37</b> to be finally distributed to the rewrite target ECU <b>19</b> is received, the CGW <b>13</b> increments an address of the next write data to distribute the next write data to the rewrite target ECU <b>19</b> and also to further acquire the next write data from the DCM <b>12</b>.</p><p id="p-0720" num="0719">Although an address and a file are correlated with each other in the DCM rewrite specification data, as a method of correlating an address with a file, for example, a folder configuration may be devised, specification data may be stored and managed in a folder <b>1</b>, a file <b>1</b> may be stored and managed in a folder <b>2</b>, a file <b>2</b> may be stored and managed in a folder <b>3</b>, and the files may be managed in an order of file names. For example, in the unpackaging illustrated in <figref idref="DRAWINGS">FIG. <b>33</b></figref>, the DCM rewrite specification data and the CGW rewrite specification data are stored and managed in the folder <b>1</b>, the authenticator and the difference data of the ECU (ID1) are stored and managed in the folder <b>2</b>, and the authenticator and the difference data of the ECU (ID2) are stored and managed in the folder <b>3</b>.</p><p id="p-0721" num="0720">For example, in a case where distribution of write data to the rewrite target ECU <b>19</b> is stopped for some reason such as communication disruption, the CGW <b>13</b> acquires information that can specify an address at which writing of the write data has been completed from the rewrite target ECU <b>19</b>, and requests the DCM <b>12</b> to transfer a divided file including the write data from a time point at which writing thereof is not completed. Alternatively, the CGW <b>13</b> may request the DCM <b>12</b> to transfer a divided file including write data from the beginning.</p><p id="p-0722" num="0721">As described above, the CGW <b>13</b> performs the file transfer control process, thus specifies a file including write data to be written to the rewrite target ECU <b>19</b> as a transfer target file, specifies an address for acquiring the transfer target file and the first data size, requests the DCM <b>12</b> to transfer a divided file, and distributes the write data to the rewrite target ECU when the divided file is transferred from the DCM <b>12</b>. Transfer of write data from the DCM <b>12</b> to the CGW <b>13</b> and distribution of the write data from the CGW <b>13</b> to the rewrite target ECU <b>19</b> can be efficiently performed.</p><p id="p-0723" num="0722">(11) Write Data Distribution Control Process</p><p id="p-0724" num="0723">The distribution control process of the write data will be described with reference to <figref idref="DRAWINGS">FIGS. <b>121</b> to <b>131</b></figref>. The vehicle program rewriting system <b>1</b> performs the write data distribution control process in the CGW <b>13</b>. Since the CGW <b>13</b> transmits write data to the ECU <b>19</b> via the bus in the vehicle, the write data distribution control process is performed such that a bus load during distribution of the write data does not become unnecessarily high.</p><p id="p-0725" num="0724">As illustrated in <figref idref="DRAWINGS">FIG. <b>121</b></figref>, a case is assumed in which the +B power ECU, the ACC ECU, and the IG ECU are connected to the same bus. In this case, in the +B power supply state, since only the +B power ECU is started, and the ACC ECU and the IG ECU are stopped, vehicle control data of only the +B power ECU is transmitted to the bus. In the ACC power supply state, since the +B power ECU and the ACC ECU are started, and the IG ECU is stopped, vehicle control data of the +B power ECU and the ACC ECU is transmitted to the bus. In the IG power supply state, since the +B power ECU, the ACC ECU, and the IG ECU are started, vehicle control data of the +B power ECU, the ACC ECU, and the IG ECU is transmitted to the bus. That is, a transmission amount of the vehicle control data decreases in an order of the IG power supply state, the ACC power supply state, and the +B power supply state.</p><p id="p-0726" num="0725">As illustrated in <figref idref="DRAWINGS">FIG. <b>122</b></figref>, the CGW <b>13</b> includes a first correspondence relationship specifying unit <b>83</b><i>a</i>, a second correspondence relationship specifying unit <b>83</b><i>b</i>, an allowable transmission amount specifying unit <b>83</b><i>c</i>, a distribution frequency specifying unit <b>83</b><i>d</i>, a bus load measurement unit <b>83</b><i>e</i>, and a distribution control unit <b>83</b><i>f </i>in the write data distribution control unit <b>83</b>.</p><p id="p-0727" num="0726">The first correspondence relationship specifying unit <b>83</b><i>a </i>specifies a first correspondence relationship indicating a relationship between a power supply state and an allowable transmission amount for a bus on the basis of an analysis result of rewrite specification data, and specifies a bus load table illustrated in <figref idref="DRAWINGS">FIG. <b>124</b></figref>. The allowable transmission amount is a value of a transmission amount at which data can be transmitted and received under a situation in which data collision or delay does not occur. The bus load table is a table indicating a correspondence relationship between the power supply state and an allowable transmission amount for a bus, and is defined for each bus. The allowable transmission amount is a sum of a transmission amount of vehicle control data and write data that can be transmitted with respect to the maximum allowable transmission amount.</p><p id="p-0728" num="0727">In the example illustrated in <figref idref="DRAWINGS">FIG. <b>124</b></figref>, since an allowable transmission amount is &#x201c;80%&#x201d; with respect to the maximum allowable transmission amount for the first bus, in the IG power supply state, the CGW <b>13</b> allows &#x201c;50%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of vehicle control data and &#x201c;30%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of write data. For the first bus, in the ACC power supply state, the CGW <b>13</b> allows &#x201c;30%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the vehicle control data and &#x201c;50%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the write data. For the first bus, in the +B power supply state, the CGW <b>13</b> allows &#x201c;20%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the vehicle control data, and allows &#x201c;60%&#x201d; with respect to the maximum allowable transmission amount as an allowable transmission amount of the write data. As illustrated in <figref idref="DRAWINGS">FIG. <b>123</b></figref>, the second bus and the third bus are defined in the same manner.</p><p id="p-0729" num="0728">The second correspondence relationship specifying unit <b>83</b><i>b </i>specifies a second correspondence relationship indicating a relationship between a bus to which the rewrite target ECU <b>19</b> belongs and a power supply system on the basis of an analysis result of rewrite specification data, and specifies a rewrite target ECU-belonging table illustrated in <figref idref="DRAWINGS">FIG. <b>124</b></figref>. The rewrite target ECU-belonging table is a table indicating a bus to which the rewrite target ECU <b>19</b> belongs and a power supply system.</p><p id="p-0730" num="0729">In an example illustrated in <figref idref="DRAWINGS">FIG. <b>124</b></figref>, the CGW <b>13</b> specifies the first rewrite target ECU <b>19</b> as a +B power ECU since the first rewrite target ECU <b>19</b> is connected to the first bus and is started in any of the +B power supply state, the ACC power supply state, and the IG power supply state. The CGW <b>13</b> specifies the second rewrite target ECU <b>19</b> as an ACC ECU since the second rewrite target ECU is connected to the second bus and is stopped in the +B power supply state, but is started in the ACC power supply state and the IG power supply state. The CGW <b>13</b> specifies the third rewrite target ECU <b>19</b> as an IG ECU since the third rewrite target ECU <b>19</b> is connected to the third bus, and is stopped in the +B power supply state and the ACC power supply state, but is started in the IG power supply state.</p><p id="p-0731" num="0730">The CGW <b>13</b> uses the data of the &#x201c;connection bus&#x201d; and the &#x201c;connection power supply&#x201d; in the rewrite specification data illustrated in <figref idref="DRAWINGS">FIG. <b>31</b></figref> to specify a bus to which the rewrite target ECU <b>19</b> is connected and a power supply system corresponding thereto. When such information can be specified, the information is not necessarily required to be stored in a table form.</p><p id="p-0732" num="0731">The allowable transmission amount specifying unit <b>83</b><i>c </i>specifies an allowable transmission amount for a bus to which the rewrite target ECU <b>19</b> belongs, the allowable transmission amount corresponding to a power supply states of the vehicle when a program is updated, according to the specifying result of the first correspondence relationship and the specifying result of the second correspondence relationship. Specifically, the allowable transmission amount specifying unit <b>83</b><i>c </i>specifies a bus to which the rewrite target ECU <b>19</b> belongs by using the rewrite target ECU-belonging table that is the second correspondence relationship, and specifies an allowable transmission amount in each power supply state for the specified bus by using the bus load table that is the first correspondence relationship.</p><p id="p-0733" num="0732">The distribution frequency specifying unit <b>83</b><i>d </i>specifies a distribution frequency of write data corresponding to a power supply state at the time of installation, by using a predefined correspondence relationship between a power supply state and a distribution frequency of write data. Specifically, the distribution frequency specifying unit <b>83</b><i>d </i>specifies, by using the bus load table, an allowable transmission amount allocated for distributing write data among allowable transmission amounts specified by the allowable transmission amount specifying unit <b>83</b><i>c</i>, and specifies a distribution frequency of the write data. For example, when it is specified that a bus to which the rewrite target ECU <b>19</b> belongs is the first bus, when a power supply state at the time of installation is the IG power supply state, the distribution frequency specifying unit <b>83</b><i>d </i>specifies an allowable transmission amount as &#x201c;80%&#x201d;, specifies an allowable transmission amount allocated for distributing the write data as &#x201c;30%&#x201d; out of 80%, and thus specifies a distribution frequency of the write data. The allowable transmission amount allocated for distributing the write data corresponds to transmission restriction information.</p><p id="p-0734" num="0733">The bus load measurement unit <b>83</b><i>e </i>measures a bus load of a bus to which the rewrite target ECU <b>19</b> belongs. The bus load measurement unit <b>83</b><i>e </i>measures the bus load by counting the number of frames or the number of bits received per unit time, for example. The distribution control unit <b>83</b><i>f </i>controls distribution of the write data depending on the distribution frequency specified by the distribution frequency specifying unit <b>83</b><i>d. </i></p><p id="p-0735" num="0734">Next, an operation of the write data distribution control unit <b>83</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>125</b> to <b>131</b></figref>. The CGW <b>13</b> executes a write data distribution control program and thus performs the write data distribution control process.</p><p id="p-0736" num="0735">When an unpackaging completion notification signal is received from the DCM <b>12</b>, the CGW <b>13</b> initiates the write data distribution control process. The CGW <b>13</b> acquires the CGW rewrite specification data from the DCM <b>12</b> (S<b>1101</b>), and specifies a bus load table and a rewrite target ECU-belonging table by using the CGW rewrite specification data (S<b>1102</b>). The CGW <b>13</b> specifies a bus to which the rewrite target ECU <b>19</b> belongs by using the rewrite target ECU-belonging table (S<b>1103</b>). The CGW <b>13</b> specifies an allowable transmission amount for the bus to which the rewrite target ECU <b>19</b> belongs, the allowable transmission amount corresponding to a power supply state of the vehicle when update is performed by using the bus load table. The CGW <b>13</b> specifies a distribution frequency of the write data by considering the specified allowable transmission amount (S<b>1104</b>; corresponding to a distribution frequency specifying procedure). The CGW <b>13</b> refers to the allowable transmission amount for the first bus in the IG power supply state, for example, in a case where the write data is distributed to the ECU (ID1) as the first rewrite target ECU <b>19</b> while the vehicle is traveling. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>123</b></figref>, the allowable transmission amount for the first bus in the IG power supply state is &#x201c;80%&#x201d;, out of which transmission of &#x201c;50%&#x201d; is allowed in the vehicle control data and transmission of &#x201c;30%&#x201d; is allowed in the write data. The allowable transmission amount is a value for only an example, and a numerical value is set within an allowable range in accordance with the specification of communication to be applied.</p><p id="p-0737" num="0736">Since one frame is about 250 &#x3bc;s in the specification on 500 kbps of CAN, when interruption occurs four times for one second, four frames are generated, and a bus load is 100%. The CGW <b>13</b> specifies a distribution frequency of the write data by determining the interruption occurring in the bus. The CGW <b>13</b> initiates to measure the number of frames received in the unit time, initiates to measure a bus load (S<b>1105</b>), determines whether or not the measured bus load exceeds the allowable transmission amount (S<b>1106</b>), and sets a distribution interval. The distribution interval is a time interval until the CGW <b>13</b> distributes write data to the rewrite target ECU <b>19</b>, receives a write completion notification (ACK) from the rewrite target ECU <b>19</b>, and transmits the next write data to the rewrite target ECU <b>19</b>.</p><p id="p-0738" num="0737">When it is determined that the measured bus load does not exceed the allowable transmission amount (S<b>1106</b>: NO), the CGW <b>13</b> sets the distribution interval of the write data to the shortest interval set in advance, and initiates to distribute the write data to the rewrite target ECU <b>19</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>126</b></figref> (S<b>1107</b>; corresponding to a distribution control procedure). That is, the CGW <b>13</b> sets the distribution interval of one frame on the CAN to the shortest interval set in advance, and initiates to distribute the write data to the rewrite target ECU <b>19</b>. One frame on the CAN includes write data having a data amount of 8 bytes. One frame on CAN with Flexible Data-Rate (CAN FD) includes write data having a data amount of 64 bytes.</p><p id="p-0739" num="0738">On the other hand, when it is determined that the measured bus load exceeds the allowable transmission amount (S<b>1106</b>: YES), the CGW <b>13</b> computes an interval at which the bus load does not exceed the allowable transmission amount (S<b>1108</b>), sets the distribution interval of the write data to the computed interval, and initiates to distribute the write data to the rewrite target ECU <b>19</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>127</b></figref> (S<b>1109</b>; corresponding to a distribution control procedure).</p><p id="p-0740" num="0739">For example, in the IG power supply state, the CGW <b>13</b> determines whether or not the bus load exceeds the allowable transmission amount of &#x201c;80%&#x201d; for the first bus, and, when it is determined that the bus load does not exceed the allowable transmission amount, sets a distribution interval T<b>1</b> at which an allowable transmission amount of the write data is &#x201c;30%&#x201d;. That is, as shown in the bus load table of <figref idref="DRAWINGS">FIG. <b>123</b></figref>, the CGW <b>13</b> sets the distribution interval T<b>1</b> by using &#x201c;30%&#x201d; that is an allowable transmission amount of write data for the first bus in the IG power supply state. The CGW <b>13</b> sets the distribution interval T<b>1</b> such that the maximum transmission amount is allowed. The CGW <b>13</b> may measure a bus load by narrowing a measurement target to a frame of write data, and determine whether or not the bus load depending on the write data exceeds the allowable transmission amount &#x201c;30%&#x201d; of the write data. When it is determined that the bus load exceeds the allowable transmission amount, the CGW <b>13</b> changes the distribution interval to a distribution interval T<b>2</b> (&#x3e;T<b>1</b>) at which the bus load does not exceed the allowable transmission amount, according to the amount by which the bus load exceeds the allowable transmission amount. In above-described way, after write data is acquired from the DCM <b>12</b>, the CGW <b>13</b> waits until the set distribution interval is reached, and distributes the write data to the rewrite target ECU <b>19</b>.</p><p id="p-0741" num="0740">When distribution of the write data to the rewrite target ECU <b>19</b> is initiated, the CGW <b>13</b> determines whether or not the distribution of the write data to the rewrite target ECU <b>19</b> has been completed, and continuously determines whether or not the measured bus load exceeds the allowable transmission amount (S<b>1110</b> and S<b>1011</b>). When it is determined that the measured bus load does not exceed the allowable transmission amount (S<b>1111</b>: NO), the CGW <b>13</b> sets a distribution interval of the write data to the shortest interval set in advance, and changes the distribution interval of the write data to the rewrite target ECU <b>19</b> (S<b>1112</b>). On the other hand, when it is determined that the measured bus load exceeds the allowable transmission amount (S<b>1111</b>: YES), the CGW <b>13</b> computes an interval at which the bus load does not exceed the allowable transmission amount (S<b>1113</b>), sets a distribution interval of the write data to the computed interval, and changes the distribution interval of the write data to the rewrite target ECU <b>19</b> (S<b>1114</b>).</p><p id="p-0742" num="0741">When it is determined that the distribution of the write data to the rewrite target ECU <b>19</b> has been completed (S<b>1110</b>: YES), the CGW <b>13</b> stops measuring the number of frames received per unit time, stops measuring the bus load (S<b>1115</b>), and finishes the write data distribution control process. Here, in a case where there are a plurality of the rewrite target ECUs <b>19</b>, the CGW <b>13</b> performs the write data distribution control process on installation in all of the rewrite target ECUs <b>19</b>.</p><p id="p-0743" num="0742">As described above, the CGW <b>13</b> performs the write data distribution control process, thus specifies a distribution frequency of write data to the rewrite target ECU <b>19</b> by using a correspondence relationship between a predetermined power supply state and a distribution frequency of write data, and controls distribution of the write data according to the distribution frequency. It is possible to reduce, for example, data collision or delay during installation. Distribution of write data can coexist without hindering distribution of vehicle control data on the same bus.</p><p id="p-0744" num="0743">In the above description, the configuration has been exemplified in which the bus load table is specified on the basis of an analysis result of the rewrite specification data in the CGW <b>13</b>, but the bus load table may be stored in advance. The configuration has been exemplified in which the rewrite target ECU-belonging table is specified on the basis of an analysis result of the rewrite specification data in the CGW <b>13</b>, but the rewrite target ECU-belonging table may be stored in advance.</p><p id="p-0745" num="0744">In a power supply state in which the vehicle is traveling, a distribution amount of write data may be relatively reduced, and, in a power supply state in which the vehicle is parked, the distribution amount of the write data may be relatively increased. That is, in the CGW <b>13</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>128</b></figref>, when the IG power is in an ON state while the vehicle is traveling, the IG ECU, the ACC ECU, and the +B power ECU transmit a CAN frame, so that a transmission amount of application data such as vehicle control or diagnosis becomes relatively large, and thus a distribution amount of write data is relatively reduced. In the CGW <b>13</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>142</b></figref>, when the IG power is in an OFF state while the vehicle is parked, only the +B power ECU transmits a CAN frame, so that a transmission amount of application data such as vehicle control or diagnosis becomes relatively small, and thus a distribution amount of write data is relatively increased. That is, the CGW <b>13</b> adjusts a distribution amount of write data within a free capacity that does not hinder transmission of application data such as vehicle control or diagnosis.</p><p id="p-0746" num="0745">As illustrated in <figref idref="DRAWINGS">FIG. <b>130</b></figref>, in the CGW <b>13</b>, in a case where an event frame is transmitted from the rewrite target ECU <b>19</b>, since the frequency of interruption increases by receiving the event frame, and thus a bus load increases, a distribution amount of write data may be relatively reduced, and, in a case where the event frame is no longer transmitted from the rewrite target ECU <b>19</b>, the distribution amount of the write data may be relatively increased.</p><p id="p-0747" num="0746">As illustrated in <figref idref="DRAWINGS">FIG. <b>131</b></figref>, in the vehicle system, in a case where it is specified that the CGW <b>13</b> is distributing write data, a bus load may be reduced by increasing a transmission interval of application data such as vehicle control or diagnosis to the allowable maximum interval. In the CGW <b>13</b>, since the bus load is reduced by the vehicle system increasing the transmission interval of the application data, a distribution amount of write data may be relatively increased.</p><p id="p-0748" num="0747">The bus load table incorporated in the rewrite specification data is set uniformly and commonly by, for example, a vehicle manufacturer regardless of a vehicle model, grade, or the like. This is because, for example, when equipment of an ECU greatly changes depending on the vehicle model, grade, or the like, a bus load greatly changes, and, when the optimum bus load table is individually set depending on the vehicle model, grade, or the like, complicated labor such as labor to verify the bus load table is required, so that such complicated labor is reduced.</p><p id="p-0749" num="0748">As described above, similarly to the case where installation is performed while the vehicle is traveling, also in a case where installation is performed while the vehicle is parked, the write data distribution control process is performed. When the rewrite target ECU <b>19</b> is a +B power ECU, update can be performed in the +B power supply state, and thus an allowable transmission amount in the +B power supply state in the bus load table is referred to. On the other hand, in a case where the rewrite target ECU <b>19</b> is an IG ECU, installation is performed in the IG power supply state, and thus an allowable transmission amount in the IG power supply state in the bus load table is referred to. Here, for example, in a case where the rewrite target ECU <b>19</b> is an ACC ECU, installation can be performed in the IG power supply state. In this case, an allowable transmission amount in the IG power supply state in the bus load table is referred to. The configuration of storing the bus load table and the rewrite target ECU-belonging table has been described, but any table may be stored as long as a distribution frequency of write data in each power supply state can be specified.</p><p id="p-0750" num="0749">(12) Activation Request Instruction Process</p><p id="p-0751" num="0750">The activation request instruction process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>132</b> to <b>133</b></figref>. The vehicle program rewriting system <b>1</b> performs an activation request instruction process in the CGW <b>13</b>. The CGW <b>13</b> makes activation requests to a plurality of rewrite target ECUs <b>19</b> in which rewriting of an application program has been completed in order to validate the rewritten program. In the present embodiment, a state is assumed in which the CGW <b>13</b> analyzes the CGW rewrite specification data to recognize a group of the rewrite target ECUs <b>19</b>. The CGW <b>13</b> makes an activation request only during parking, and does not make an activation request during traveling of the vehicle.</p><p id="p-0752" num="0751">As illustrated in <figref idref="DRAWINGS">FIG. <b>132</b></figref>, the CGW <b>13</b> includes a rewrite target specifying unit <b>84</b><i>a</i>, a rewrite completion determination unit <b>84</b><i>b</i>, an activation executability determination unit <b>84</b><i>c</i>, and an activation request instruction unit <b>84</b><i>d </i>in the activation request instruction unit <b>84</b>. The rewrite target specifying unit <b>84</b><i>a </i>specifies a plurality of rewrite target ECUs <b>19</b> among a plurality of rewrite target ECUs <b>19</b> performing cooperative control. When the plurality of rewrite target ECUs <b>19</b> are specified by the rewrite target specifying unit <b>84</b><i>a</i>, the rewrite completion determination unit <b>84</b><i>b </i>determines whether or not rewriting of programs has been completed in all of the plurality of specified rewrite target ECUs <b>19</b>.</p><p id="p-0753" num="0752">When it is determined by the rewrite completion determination unit <b>84</b><i>b </i>that the rewriting of the programs has been completed in all of the plurality of rewrite target ECUs <b>19</b>, the activation executability determination unit <b>84</b><i>c </i>determines whether or not activation is executable. The activation executability determination unit <b>84</b><i>c </i>determines that the activation is executable in a case where the activation is approved by the user and the vehicle is in a parking state.</p><p id="p-0754" num="0753">The activation request instruction unit <b>84</b><i>d </i>gives an instruction for an activation request in a case where it is determined by the activation executability determination unit <b>84</b><i>c </i>that the activation is executable. Specifically, the activation request instruction unit <b>84</b><i>d </i>gives the instruction for the activation request by giving an instruction for a reset request, monitoring session transition timeout, or monitoring the internal reset of the rewrite target ECU <b>19</b> after giving an instruction for a request for switching to a new bank. In a double-bank memory ECU or a single-bank suspend memory ECU, an application program is activated by starting the application program on a new bank (inactive bank) in which the application program is written. On the other hand, in a single-bank memory ECU, the application program is activated through restart. The rewrite target ECU <b>19</b> may be configured to be reset by itself regardless of an activation request after an instruction for a request for switching to a new bank is received.</p><p id="p-0755" num="0754">Next, an operation of the activation request instruction unit in CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>133</b> and <b>134</b></figref>. The CGW <b>13</b> executes an activation request instruction program and thus performs the activation request instruction process.</p><p id="p-0756" num="0755">When the activation request instruction process is initiated, the CGW <b>13</b> specifies a plurality of rewrite target ECUs <b>19</b> (S<b>1201</b>; corresponding to a rewrite target specifying procedure). Specifically, the CGW <b>13</b> specifies the rewrite target ECUs <b>19</b> by referring to ECUs (IDs) described in the rewrite specification data. The CGW <b>13</b> determines whether or not rewriting of application programs has been completed in all of the plurality of specified rewrite target ECUs <b>19</b> (S<b>1202</b>; corresponding to a rewrite completion determination procedure). For example, the CGW <b>13</b> sequentially performs installation on the rewrite target ECUs <b>19</b> according to the order of the ECUs (IDs) described in the rewrite specification data, and determines that writing has been completed in all of the rewrite target ECUs <b>19</b> when installation for an ECU (ID) described last has been completed.</p><p id="p-0757" num="0756">When it is determined that rewriting of the application program has been completed in all of the plurality of specified rewrite target ECUs <b>19</b> (S<b>1202</b>: YES), the CGW <b>13</b> determines whether or not activation is executable (S<b>1203</b>; corresponding to an activation executability determination procedure). Specifically, the CGW <b>13</b> determines whether or not the user's approval for the update has been obtained so far, whether or not the vehicle is in a parking state, and the like, and determines that the activation is executable when these conditions are satisfied. The user's approval may be an approval for the entire update process or an approval for the activation. When it is determined that activation is executable (S<b>1203</b>: YES), the CGW <b>13</b> subsequently gives instructions for activation requests to the plurality of rewrite target ECUs <b>19</b> at the same time (corresponding to an activation request instruction procedure). Here, a description will be made assuming that the ECU (ID1), the ECU (ID2), and the ECU (ID3) are the rewrite target ECUs <b>19</b> of the same group.</p><p id="p-0758" num="0757">When it is determined that activation is executable for the ECU (ID1), the ECU (ID2), and the ECU (ID3), the CGW <b>13</b> initiates the activation request instruction process. When the activation request instruction process is initiated, the CGW <b>13</b> gives an instruction for a request for switching to a new bank to the rewrite target ECU <b>19</b> (S<b>1204</b>). The CGW <b>13</b> requests the power supply management ECU <b>20</b> to switch on the IG power in an OFF state (S<b>1205</b>). The CGW <b>13</b> switches on the IG power in an OFF state in order to perform activation although the vehicle is in a parking state and the IG switch <b>42</b> is in an OFF state. In a case where the CGW <b>13</b> performs installation and subsequently performs activation, since the IG power is in an ON state, S<b>1205</b> is not performed, and a start request (wake-up request) is made to the rewrite target ECU <b>19</b> in the sleep state.</p><p id="p-0759" num="0758">The CGW <b>13</b> transmits a software reset request to the rewrite target ECU <b>19</b>, and gives an instruction for the software reset request to the rewrite target ECU <b>19</b> (S<b>1206</b>). In a case where the rewrite target ECU <b>19</b> has a specification of coping with the software reset request, when the software reset request is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> is restarted by resetting the software, and activates an application program. In a case where the rewrite target ECU <b>19</b> is a single-bank memory ECU, the rewrite target ECU <b>19</b> is restarted by the new application program and thus switches from the old application program to the new application program. In a case where the rewrite target ECU <b>19</b> is a single-bank suspend memory ECU or a double-bank memory ECU, the rewrite target ECU <b>19</b> updates the active bank information (the bank-A or the bank-B) stored in the flash memory, causes a bank to which the new application program is written to switch to an active bank, and thus switches from the old application program to the new application program.</p><p id="p-0760" num="0759">The CGW <b>13</b> requests the power supply management ECU <b>20</b> to switch off the IG power in an ON state and to switch on the IG power in an OFF state, gives an instruction for a power reset request to the rewrite target ECU <b>19</b>, and instructs the rewrite target ECU <b>19</b> to be restarted (S<b>1207</b>). Even in a case where the rewrite target ECU <b>19</b> does not have a specification of coping with the software reset request, when the IG power switches from an ON state to an OFF state and the IG power switches from an OFF state to an ON state, the rewrite target ECU is reset and restarted to activate the application program. Also in this case, in a case where the rewrite target ECU <b>19</b> is a single-bank memory ECU, the rewrite target ECU <b>19</b> is restarted by the new application program and thus switches from the old application program to the new application program. In a case where the rewrite target ECU <b>19</b> is a single-bank suspend memory ECU or a double-bank memory ECU, the rewrite target ECU <b>19</b> updates the active bank information (the bank-A or the bank-B) stored in the flash memory, causes a bank to which the new application program is written to switch to an active bank, and thus switches from the old application program to the new application program. The CGW <b>13</b> monitors session transition timeout (S<b>1208</b>) and monitors the internal reset of the rewrite target ECU <b>19</b> (S<b>1209</b>).</p><p id="p-0761" num="0760">That is, in a case where the rewrite target ECU <b>19</b> does not have the specification of coping with the software reset request, the CGW <b>13</b> cannot give an instruction for activation even when the software reset request is transmitted to the rewrite target ECU <b>19</b>. Therefore, an instruction for the power reset request is given to the rewrite target ECU <b>19</b>, and thus activation is performed in the rewrite target ECU <b>19</b> that does not have the specification of coping with the software reset request. For example, an IG ECU such as an engine ECU is configured to be reset without fail when the power is turned on or off, and, thus, in many cases, a configuration does not cope with the software reset request. From the viewpoint of the rewrite target ECU <b>19</b>, activation is performed (started by the new program) by any of reception of an instruction for the software reset request from the CGW <b>13</b>, reception of an instruction for the power reset request from the CGW <b>13</b>, the session transition timeout, and the internal reset.</p><p id="p-0762" num="0761">When an instruction for the software reset request is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> coping with the software reset request is forced to be reset to perform activation. The rewrite target ECU <b>19</b> that is an ACC ECU or an IG ECU is reset to perform activation when power is supplied next since the power is forced not to be supplied in a case where an instruction for the power reset request is received from the CGW <b>13</b>. Unlike the rewrite target ECU <b>19</b> that is an ACC or IG ECU, the rewrite target ECU <b>19</b> that is a +B power ECU is supplied with power at all times, and thus activation is performed by the session transition timeout or the internal reset. An activation method for each rewrite target ECU <b>19</b> is specified by the rewrite specification data.</p><p id="p-0763" num="0762">When the CGW <b>13</b> is notified that the new application program is normally started from all of the rewrite target ECUs <b>19</b>, the CGW transmits a switching completion notification to the DCM <b>12</b> (S<b>1210</b>). The DCM <b>12</b> notifies the center device <b>3</b> that activation of the update programs has been completed. The CGW <b>13</b> requests the power supply management ECU <b>20</b> to switch on the IG power in an OFF state, and finishes an application program activation synchronization instruction process. When the IG power switches from an OFF state to an ON state through the user operation, the CGW <b>13</b> transmits a program version, a start bank, and the like of the ECU to the DCM <b>12</b>. The DCM <b>12</b> notifies the center device <b>3</b> of the information of each ECU <b>19</b> received from the CGW <b>13</b>. Here, when the DCM <b>12</b> notifies the center device <b>3</b> of completion of the activation, ECU configuration information including a program version and bank information of each ECU may be transmitted to the center device <b>3</b>. <figref idref="DRAWINGS">FIG. <b>134</b></figref> illustrates a case where the rewrite target ECU <b>19</b> is a double-bank memory ECU or a single-bank suspend memory ECU.</p><p id="p-0764" num="0763">As described above, the CGW <b>13</b> performs the activation request instruction process, thus prevents a situation in which a plurality of rewrite target ECUs <b>19</b> having completed rewriting of application programs switch from old programs to new programs at their own timings, and appropriately aligns timings of switching from the old programs to the new programs in the plurality of rewrite target ECUs <b>19</b>. That is, a situation is prevented in which program versions of a plurality of rewrite target ECUs <b>19</b> which cooperate with each other do not match each other, and thus a problem occurs in a cooperative process.</p><p id="p-0765" num="0764">(13) Activation Execution Control Process</p><p id="p-0766" num="0765">The activation execution control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>135</b> to <b>137</b></figref>. The activation execution control process is a process performed by the rewrite target ECU <b>19</b> to which an instruction for an activation request is given by the CGW <b>13</b> due to the CGW <b>13</b> performing (12) the activation request instruction process described above. The vehicle program rewriting system <b>1</b> performs the activation execution control process in the rewrite target ECU <b>19</b>. Here, the rewrite target ECU <b>19</b> has a plurality of data storage banks, such as a single-bank suspend memory or a double-bank memory. A state is assumed in which the rewrite target ECU <b>19</b> has a first data storage bank and a second data storage bank, and installation of rewrite data has been completed in an inactive bank (new bank).</p><p id="p-0767" num="0766">As illustrated in <figref idref="DRAWINGS">FIG. <b>135</b></figref>, the ECU <b>19</b> includes an active bank information update unit <b>107</b><i>a</i>, an execution condition determination unit <b>107</b><i>b</i>, an execution control unit <b>107</b><i>c</i>, and a notification unit <b>107</b><i>d </i>in the activation execution control unit <b>107</b>. When an instruction for an activation request is received from the CGW <b>13</b>, the active bank information update unit <b>107</b><i>a </i>updates start bank determination information (active bank information) of the flash memory in preparation for the next restart. For example, the active bank information update unit <b>107</b><i>a </i>is currently started in the bank-A, and updates the active bank information from the bank-A to the bank-B when a new program is written in the bank-B.</p><p id="p-0768" num="0767">The execution condition determination unit <b>107</b><i>b </i>determines whether or not an instruction for a software reset request is received from the CGW <b>13</b>, whether or not an instruction for a power reset request is given from the CGW <b>13</b> to the power supply management ECU <b>20</b>, and whether or not disruption of communication with the CGW <b>13</b> lasts for a predetermined time, as activation execution conditions. When any one of the conditions is satisfied, the execution condition determination unit <b>107</b><i>b </i>determines that the activation execution conditions are established. Whether or not an instruction for the power reset request is received may be detected by the power detection circuit <b>36</b> instead of an instruction from the CGW <b>13</b>. When it is determined by the execution condition determination unit <b>107</b><i>b </i>that the activation execution condition is established, the execution control unit <b>107</b><i>c </i>performs new bank switching (activation) of causing the start bank to switch from the old bank (the bank currently operated) to the new bank (the bank not currently operated) in accordance with the active bank information. The notification unit <b>107</b><i>d </i>notifies the CGW <b>13</b> of notification information such as active bank information and version information.</p><p id="p-0769" num="0768">Next, an operation of the activation execution control unit <b>107</b> in the rewrite target ECU <b>19</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>136</b> and <b>137</b></figref>. The rewrite target ECU <b>19</b> executes an activation execution control program and thus performs the activation execution control process.</p><p id="p-0770" num="0769">(13-1) Rewrite Process</p><p id="p-0771" num="0770">When the rewrite process is initiated, the rewrite target ECU <b>19</b> performs processes up to immediately before memory erasure, such as part number reading or authenticating as a pre-rewrite process (S<b>1301</b>). The rewrite target ECU <b>19</b> determines whether or not rewrite bank information has been received from the center device <b>3</b> (S<b>1302</b>). The rewrite target ECU <b>19</b> determines whether or not the rewrite bank information has been received on the basis of, for example, whether or not the rewrite bank information described in rewrite specification data included in a distribution package has been acquired from the CGW <b>13</b>. When it is determined that the rewrite bank information has been received from the center device <b>3</b> (S<b>1302</b>: YES), the rewrite target ECU <b>19</b> collates the rewrite bank information with rewrite bank information (active bank information) managed thereby, and thus determines whether or not the two pieces of information match each other (S<b>1303</b>). Here, the rewrite bank information is described in the rewrite specification data transmitted from, for example, the center device <b>3</b>. For example, in a case where the rewrite bank information managed by the rewrite target ECU indicates that an active bank is the bank-A and an inactive bank is the bank-B, when the rewrite bank information described in the rewrite specification data indicates the inactive bank (bank-B), it is determined that both of the pieces of information match each other, and, when the rewrite bank information described in the specification data indicates the active bank (bank-A), it is determined that both of the pieces of information do not match each other.</p><p id="p-0772" num="0771">When it is determined that both of the pieces of information match each other (S<b>1303</b>: YES), the rewrite target ECU <b>19</b> performs, as the rewrite process, memory erasure, writing of write data, and verification (S<b>1304</b>), and finishes the rewrite process. The verification is, for example, to verify the integrity of data written in the flash memory. When it is determined that both of the pieces of information do not match each other (S<b>1303</b>: NO), the rewrite target ECU <b>19</b> transmits a negative acknowledgment to the CGW <b>13</b> (S<b>1305</b>), and finishes the rewrite process.</p><p id="p-0773" num="0772">(13-2) Activation Execution Control Process</p><p id="p-0774" num="0773">When the activation execution control process is initiated, the rewrite target ECU <b>19</b> sets an inactive bank as a rewrite bank, and determines whether or not rewriting of an application program into the rewrite bank has been completed (S<b>1311</b>). When it is determined that rewriting of the application program into the rewrite bank has been completed (S<b>1311</b>: YES), the rewrite target ECU <b>19</b> verifies the integrity of the application program written in the flash memory, and determines whether or not data verification after the rewriting is positive (S<b>1312</b>). When it is determined that the data verification after the rewriting is positive (S<b>1312</b>: YES), the rewrite target ECU <b>19</b> sets a rewrite completion flag of the new bank to &#x201c;OK&#x201d; and stores the rewrite completion flag (S<b>1313</b>).</p><p id="p-0775" num="0774">Thereafter, the rewrite target ECU <b>19</b> determines whether or not an instruction for an activation request has been received from the CGW <b>13</b> (S<b>1314</b>). When it is determined that the instruction for the activation request has been received (S<b>1314</b>: YES), the rewrite target ECU <b>19</b> determines whether or not the rewrite completion flag of the new bank is &#x201c;OK&#x201d; (S<b>1315</b>), and updates the active bank information when it is determined that the rewrite completion flag of the new bank is &#x201c;OK&#x201d; (S<b>1315</b>: YES) (S<b>1316</b>; corresponding to an active bank information update procedure). That is, for example, in a case where an active bank is the bank-A and an inactive bank is the bank-B, when rewriting of the application program into the rewrite bank has been completed by using the bank-B as the rewrite bank, the rewrite target ECU <b>19</b> updates the active bank information indicating that an active bank is the bank-A and an inactive bank is the bank-B to active bank information indicating that an active bank is the bank-B and an inactive bank is the bank-A.</p><p id="p-0776" num="0775">When the active bank information is updated, the rewrite target ECU <b>19</b> determines whether or not a software reset request has been received from the CGW <b>13</b>, whether or not an instruction for a power reset request has been given from the CGW <b>13</b> to the power supply management ECU <b>20</b>, and whether or not disruption of communication with the CGW <b>13</b> lasts for a predetermined time after the instruction for the software reset request is received, and thus determines whether or not the activation execution condition is established (S<b>1317</b>; corresponding to an execution condition determination procedure). Here, the rewrite target ECU <b>19</b> is restarted when any of the activation execution conditions is established, and restart conditions are defined for each ECU.</p><p id="p-0777" num="0776">The rewrite target ECU <b>19</b> determines whether an instruction for the software reset request has been received from the CGW <b>13</b>, the instruction for the power reset request has been given from the CGW <b>13</b> to the power supply management ECU <b>20</b>, or the predetermined time has elapsed after the instruction for the software reset request is received, and executes restart (reset) when it is determined that the activation execution condition is established (S<b>1317</b>: YES). The rewrite target ECU <b>19</b> executes the restart and is started by using the new bank (bank-B) as a start bank (S<b>1318</b>; corresponding to a start control procedure) according to the updated active bank information, and finishes the activation execution control process. That is, after the rewrite target ECU <b>19</b> is restarted, the rewrite target ECU is started in the bank-B in which the application program is installed.</p><p id="p-0778" num="0777">When it is determined that rewriting of the application program to the new bank is not completed (S<b>1311</b>: NO), or it is determined that the data verification after the rewriting is negative (S<b>1312</b>: NO), the rewrite target ECU <b>19</b> determines whether or not an instruction for an activation request has been received (S<b>1319</b>), transmits a negative acknowledgment to the CGW <b>13</b> (S<b>1320</b>) when it is determined that the instruction for the activation request has been received (S<b>1319</b>: YES), and returns to step S<b>1311</b>. When it is determined that the data verification after the rewriting is negative, the rewrite target ECU <b>19</b> may finish the activation execution control process and perform a process such as rollback. When it is determined that the rewrite completion flag of the new bank is not &#x201c;OK&#x201d; (S<b>1315</b>: NO), the rewrite target ECU <b>19</b> transmits a negative acknowledgment to the CGW <b>13</b> (S<b>1321</b>) and returns to step S<b>1311</b>.</p><p id="p-0779" num="0778">As described above, the rewrite target ECU <b>19</b> performs the activation execution control process, thus updates the active bank information in preparation for the next restart when an instruction for an activation request is received from the CGW <b>13</b>, and performs new bank switching for causing a start bank to switch from the old bank to the new bank according to the active bank information after restarting when the activation execution condition is established. That is, the rewrite target ECU <b>19</b> is not started by an update program unless the CGW <b>13</b> gives an instruction for activation thereto even though installation of the update program has been completed. For example, even when the rewrite target ECU <b>19</b> is restarted due to the user turning on the IG switch <b>42</b> in an OFF state, unless an instruction for activation is received from the CGW <b>13</b>, the rewrite target ECU is started in the same active bank. The CGW <b>13</b> simultaneously gives instructions for activation to a plurality of rewrite target ECUs <b>19</b>, and then update programs of the plurality of the rewrite target ECUs <b>19</b> can be simultaneously validated when being restarted by software reset, power reset, or session timeout. In the above description, the case where data storage banks are double banks has been described, but the same applies to a case where data storage banks are three or more banks.</p><p id="p-0780" num="0779">In (12) the activation request instruction process in the CGW <b>13</b>, the CGW <b>13</b> performs the activation request instruction process on a plurality of rewrite target ECUs <b>19</b> having completed rewriting of application programs, and thus it is possible to prevent a situation in which the plurality of rewrite target ECUs <b>19</b> having completed rewriting of the application programs switch from old programs to new programs at their own timings, and to appropriately align timings of switching from the old programs to the new programs in the plurality of rewrite target ECUs <b>19</b>.</p><p id="p-0781" num="0780">(14) Rewrite Target Group Management Process</p><p id="p-0782" num="0781">The rewrite target group management process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>138</b> to <b>141</b></figref>. The vehicle program rewriting system <b>1</b> performs the rewrite target group management process in the CGW <b>13</b>. The CGW <b>13</b> simultaneously instructs one or more rewrite target ECUs <b>19</b> belonging to the same group to activate application programs. The CGW <b>13</b> performs control from installation to activation in the group unit. Here, a description will be made assuming that the ECU (ID1) and the ECU (ID2) are the rewrite target ECUs <b>19</b> of a first group, and an ECU (ID11), an ECU (ID12), and an ECU (ID13) are the rewrite target ECUs <b>19</b> of a second group.</p><p id="p-0783" num="0782">As illustrated in <figref idref="DRAWINGS">FIG. <b>138</b></figref>, the CGW <b>13</b> includes a group generation unit <b>85</b><i>a </i>and an instruction execution unit <b>85</b><i>b </i>in the rewrite target group management unit <b>85</b>. The group generation unit <b>85</b><i>a </i>groups the rewrite target ECUs <b>19</b> to be upgraded together according to an analysis result of the CGW rewrite specification data, and thus generates a group. In a case where the group is generated by the group generation unit <b>85</b><i>a</i>, the instruction execution unit <b>85</b><i>b </i>gives an instruction for installation in a predetermined order in the unit of the group, and gives an instruction for activation in the unit of group when the installation has been completed.</p><p id="p-0784" num="0783">Next, an operation of the rewrite target group management unit <b>85</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>139</b> to <b>141</b></figref>. The CGW <b>13</b> executes a rewrite target grouping program and thus performs the rewrite target group management process. When the rewrite target group management process is initiated, the CGW <b>13</b> acquires the CGW rewrite specification data from the DCM <b>12</b> (S<b>1401</b>; corresponding to a rewrite specification data acquisition procedure), analyzes the acquired rewrite specification data (S<b>1402</b>; corresponding to a rewrite specification data analysis procedure), and determines a group to which the present rewrite target ECU <b>19</b> belongs. For example, the CGW <b>13</b> may specify to which group the rewrite target ECU belongs by referring to information regarding the ECU of the rewrite specification data, and may specify to which group the ECU belongs by referring to information regarding the group of the rewrite specification data. The CGW <b>13</b> determines whether or not the rewrite target ECU <b>19</b> is initially subjected to rewriting for a certain group (S<b>1403</b>), determines whether or not the rewrite target ECU <b>19</b> belonging to the same group as that of the previous rewrite target ECU <b>19</b> is subjected to rewriting (S<b>1404</b>), and determines whether or not the rewrite target ECU <b>19</b> belonging to a group different from that of the previous rewrite target ECU <b>19</b> is subjected to rewriting (S<b>1405</b>; corresponding to a group generation procedure).</p><p id="p-0785" num="0784">When it is determined that the rewrite target ECU <b>19</b> is initially subjected to rewriting (S<b>1403</b>: YES) or it is determined that the rewrite target ECU <b>19</b> belonging to the same group as that of the previous rewrite target ECU <b>19</b> is subjected to rewriting (S<b>1404</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to rewrite an application program such that the application program of the rewrite target ECU <b>19</b> is rewritten (S<b>1406</b>). The CGW <b>13</b> determines whether or not there is the next rewrite target ECU <b>19</b> (S<b>1407</b>). When it is determined that there is the next rewrite target ECU <b>19</b> in the same group (S<b>1407</b>: YES), the CGW <b>13</b> returns to the above steps S<b>1403</b> to S<b>1405</b>, and repeatedly performs S<b>1403</b> to S<b>1405</b>.</p><p id="p-0786" num="0785">When it is determined that the rewrite target ECU <b>19</b> belonging to a group different from that of the previous rewrite target ECU <b>19</b> is subjected to rewriting (S<b>1405</b>: YES), the CGW <b>13</b> proceeds to an activation request instruction process (S<b>1408</b>; corresponding to an instruction execution procedure).</p><p id="p-0787" num="0786">When the activation request instruction process is initiated, the CGW <b>13</b> determines whether or not there is the next rewrite target ECU <b>19</b> (S<b>1411</b>). That is, the CGW <b>13</b> determines whether or not there is a group in which installation is not completed. When it is determined that there is the next the rewrite target ECU <b>19</b> (S<b>1411</b>: YES), the CGW <b>13</b> gives an instruction for an activation request to the rewrite target ECU <b>19</b> belonging to the group in which the rewriting has been completed (S<b>1412</b>). That is, in a case where installation has not yet been performed on the rewrite target ECU <b>19</b> belonging to the second group, the CGW <b>13</b> gives an instruction for activation to the rewrite target ECU (ID1) and the rewrite target ECU (ID2) of the first group in which rewriting is already completed.</p><p id="p-0788" num="0787">The CGW <b>13</b> gives an instruction for a software reset request to the rewrite target ECU <b>19</b>, and instructs the rewrite target ECU <b>19</b> to be restarted by switching on the power in an OFF state and switching off the power in an ON state via the power supply management ECU <b>20</b>, and thus the application programs of the rewrite target ECU (ID1) and the rewrite target ECU (ID2) are started together.</p><p id="p-0789" num="0788">The CGW <b>13</b> determines a rewrite timing for the next rewrite target ECU <b>19</b> (S<b>1413</b> and S<b>1314</b>). That is, the CGW <b>13</b> determines rewrite timings for the rewrite target ECUs <b>19</b> belonging to the second group. When it is determined that the rewrite timing for the next rewrite target ECU <b>19</b> is a timing of the user's switching from the next riding to getting-off (S<b>1413</b>: YES), the CGW <b>13</b> switches off the IG power in an ON state (S<b>1415</b>), finishes the activation request instruction process, and the returns to the rewrite target group management process. For example, when a time period in which rewriting of an application program is allowed to be updated is set by the user in advance, and it is predicted that installation in the rewrite target ECU <b>19</b> belonging to the second group is not completed during the time period, the CGW <b>13</b> performs installation in the next parking state. In this case, the CGW <b>13</b> instructs the power supply management ECU <b>20</b> to turn off the IG power in order to return to the original parking state.</p><p id="p-0790" num="0789">When it is determined that the rewrite timing for the next rewrite target ECU <b>19</b> is the present getting-off (parking state) (S<b>1414</b>: YES), the CGW <b>13</b> determines whether or not a remaining battery charge of the vehicle battery <b>40</b> is equal to or more than a threshold value (S<b>1417</b>). Here, the threshold value may be a value set in advance or a value acquired from CGW rewrite specification data. When it is determined that the remaining battery charge of the vehicle battery <b>40</b> is not equal to or more than the threshold value (S<b>1416</b>: NO), the CGW <b>13</b> instructs the power supply management ECU <b>20</b> to switch off the IG power in an ON state (S<b>1415</b>), finishes the activation request instruction process, and returns to the rewrite target group management process. When it is determined that the remaining battery charge of the vehicle battery <b>40</b> is equal to or more than the threshold value (S<b>1416</b>: YES), the CGW <b>13</b> maintains the IG power to be in an ON state (S<b>1417</b>), finishes the activation request instruction process, and returns to the rewrite target group management process. As illustrated in <figref idref="DRAWINGS">FIG. <b>139</b></figref>, the CGW <b>13</b> rewrites the application program of the rewrite target ECU <b>19</b> belonging to the second group.</p><p id="p-0791" num="0790">When it is determined that there is no next rewrite target ECU <b>19</b> (S<b>1411</b>: NO), the CGW <b>13</b> gives an instruction for an activation request to the rewrite target ECU <b>19</b> belonging to the group in which rewriting has been completed (S<b>1418</b>), switches off the IG power in an ON state (S<b>1419</b>), finishes the instruction process of the activation request, and returns to the group management process of the rewrite target. For example, when rewriting in the rewrite targets ECU (ID11), ECU (ID12), and ECU (ID13) belonging to the second group has been completed, the next rewrite target ECU <b>19</b>, that is, the next group is not present. In this case, the CGW <b>13</b> instructs the ECU (ID11), the ECU (ID12), and the ECU (ID12) to activate the update programs, and instructs the power supply management ECU <b>20</b> to turn off the IG power after the activation has been completed.</p><p id="p-0792" num="0791">As illustrated in <figref idref="DRAWINGS">FIG. <b>141</b></figref>, in a case where the application programs of the ECU (ID1) and the ECU (ID2) and the ECU (ID11) to the ECU (ID13) are rewritten, when the ECU (ID1) and ECU (ID2) have a cooperative control relationship, and the ECU (ID11), the ECU (ID12), and the ECU (ID13) have a cooperative control relationship, in a distribution package, the ECU (ID1) and the ECU (ID2) belong to the first group as the rewrite target ECUs <b>19</b>, and the ECU (ID11), the ECU (ID12), and the ECU (ID13) belong to the second group as the rewrite target ECUs <b>19</b>. When rewriting of the application programs has been completed in the ECU (ID1) and the ECU (ID2) belonging to the first group, the CGW <b>13</b> simultaneously gives an instruction for an activation request to the ECU (ID1) and the ECU (ID2). Thereafter, the CGW <b>13</b> executes rewriting of the application programs in the ECU (ID11), the ECU (ID12), and the ECU (ID13) belonging to the second group, and gives an instruction for an activation request to the ECU (ID11), the ECU (ID12), and the ECU (ID13) when the rewriting has been completed in all of the ECUs. The rewrite target ECU <b>19</b> that is a single-bank memory is instructed to be restarted, and is thus instructed to perform activation.</p><p id="p-0793" num="0792">As described above, the CGW <b>13</b> performs the group management process on the rewrite target ECUs <b>19</b> to which an activation request is made, and thus gives an instruction for an activation request thereto in the unit of the group. A plurality of ECUs having a cooperative control relationship can be simultaneously upgraded. That is, it is possible to prevent the occurrence of a problem in a cooperative control process due to mismatching among versions of application programs of the plurality of rewrite target ECUs <b>19</b> having a cooperative control relationship. The CGW <b>13</b> performs installation in a predetermined order in the unit of the group. That is, the CGW <b>13</b> performs control such that processes from installation to activation are performed in the group unit.</p><p id="p-0794" num="0793">The present embodiment relates to a configuration in which, after installation in the rewrite target ECU <b>19</b> belonging to the first group has been completed, activation in the rewrite target ECU <b>19</b> belonging to the first group is performed, and, subsequently, after installation in the rewrite target ECU <b>19</b> belonging to the second group has been completed, activation in the rewrite target ECU <b>19</b> belonging to the second group is performed. However, activation in the rewrite target ECU <b>19</b> belonging to the first group and activation in the rewrite target ECU <b>19</b> belonging to the second group may be performed successively. That is, installation in the rewrite target ECU <b>19</b> belonging to the first group may be completed, installation in the rewrite target ECU <b>19</b> belonging to the second group may be completed, and then activation in rewrite target ECU <b>19</b> belonging to the first group may be performed, and activation in the rewrite target ECU <b>19</b> belonging to the second group may be performed. In this case, activation in the rewrite target ECUs <b>19</b> belonging to the first group and the second group may be performed simultaneously.</p><p id="p-0795" num="0794">In a case where the rewrite target ECU <b>19</b> includes a single-bank memory ECU, an instruction for installation in the single-bank memory ECU may be given last in a group. In a case where an instruction for installation is given to the rewrite target ECUs <b>19</b> having a cooperative operation relationship, the instruction for installation may be first given to the rewrite target ECU <b>19</b> that operates as a data transmission side, and the instruction for installation may be later given to the rewrite target ECU that operates as a data reception side.</p><p id="p-0796" num="0795">The CGW <b>13</b> refers to the memory type in rewrite specification data and determines the installation order according to the memory type of the rewrite target ECU <b>19</b>. For example, installation is performed in an order of a double-bank memory, a single-bank suspend memory, and a single-bank memory. The CGW <b>13</b> stores in advance which of a data transmission side and a data reception side the ECU is as information regarding the ECUs <b>19</b> having a cooperative operation relationship, and determines an installation order of the rewrite target ECUs <b>19</b> on the basis of the information.</p><p id="p-0797" num="0796">In a case where there are a plurality of groups, an installation order may be determined on the basis of, for example, the degree of urgency, the degree of safety, a function, or a time. The degree of urgency is an index indicating whether or not it is necessary to perform immediate installation. The degree of urgency is high in a case where there is a high probability that man-made disasters or accidents may occur if the ECU is left without installation. The degree of urgency is low in a case where there is a low probability that man-made disasters or accidents may occur even if the ECU is left without installation. Installation is preferentially performed on a group having a high degree of urgency. The degree of safety is an index of the restriction due to the type of microcomputer at the time of installation, and installation is performed in an ascending order of restriction, that is, in an order of a double-bank memory, a single-bank suspend memory, and a single-bank memory. The function is an index of user's convenience, and installation is preferentially performed on a group that is more convenient to a user. The time is an index of the time required for installation, and installation is preferentially performed on a group requiring a short installation time.</p><p id="p-0798" num="0797">In a case where the CGW <b>13</b> instructs the first rewrite target ECU <b>19</b> and the second rewrite target ECU <b>19</b> belonging to the same group to perform installation, when the first rewrite target ECU <b>19</b> succeeds in installation, and the second rewrite target ECU <b>19</b> fails in installation, the CGW <b>13</b> instructs the second rewrite target ECU <b>19</b> to perform rollback and instructs the first rewrite target ECU <b>19</b> to perform rollback.</p><p id="p-0799" num="0798">In a case where the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> belonging to the first group and the rewrite target ECU <b>19</b> belonging to the second group to perform installation, when the rewrite target ECU <b>19</b> belonging to the first group fails in installation, the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> belonging to the second group to perform installation. For example, in <figref idref="DRAWINGS">FIG. <b>139</b></figref>, in a case where rewriting is performed in the second group (S<b>1405</b>: YES) in a state in which the rewrite target ECU <b>19</b> belonging to the first group fails in installation, the CGW <b>13</b> skips the activation request instruction process (S<b>1408</b>) for the first group and proceeds to step S<b>1407</b>. The CGW <b>13</b> returns to step S<b>1403</b> and initiates to perform installation on the second group, and performs the activation request instruction process on the second group in a case where the installation has been completed (S<b>1408</b>). That is, even though the first group fails in update, the CGW <b>13</b> performs update on the second group.</p><p id="p-0800" num="0799">In a case where there are two groups in a single campaign (within a single distribution package), the user's approval operation for the campaign and the user's approval operation for download are performed once, and the user's approval operation for installation and the user's approval operation for activation are performed twice for each group. That is, in a case where a function changed due to update differs for each group, it is desirable to perform the user's approval operation for installation and the user's approval operation for activation for each function. Since some users feel complicated about the user's approval operation for installation and the user's approval operation for activation for each group, the user's approval operation for installation and the user's approval operation for activation may be performed once for all groups.</p><p id="p-0801" num="0800">Although the configuration in which a group to which the rewrite target ECU <b>19</b> belongs is determined by using the rewrite specification data has been exemplified, there may be a configuration in which a group to which the rewrite target ECU <b>19</b> belongs is stored in the CGW <b>13</b>.</p><p id="p-0802" num="0801">(15) Rollback Execution Control Process</p><p id="p-0803" num="0802">The rollback execution control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>142</b> to <b>153</b></figref>. The vehicle program rewriting system <b>1</b> executes the rollback execution control process in the CGW <b>13</b>. The rollback indicates writing for returning the memory of the rewrite target ECU <b>19</b> to a predetermined state, such as returning an application program to an original version, in a case where rewriting of the application program is stopped, and is to return a state of the rewrite target ECU <b>19</b> to a state before writing of write data is initiated from the viewpoint of the user.</p><p id="p-0804" num="0803">As illustrated in <figref idref="DRAWINGS">FIG. <b>142</b></figref>, the CGW <b>13</b> includes a cancellation request determination unit <b>86</b><i>a</i>, a rollback method specifying unit <b>86</b><i>b</i>, and a rollback execution unit <b>86</b><i>c </i>in the rollback execution control unit <b>86</b>. The cancellation request determination unit <b>86</b><i>a </i>determines whether or not a rewrite cancellation request is generated during rewriting of an application program. For example, when the user operates the mobile terminal <b>6</b> and selects cancellation of program rewriting, the center device <b>3</b> that acquires information regarding the cancellation notifies the CGW <b>13</b> of a program rewrite cancellation request via the DCM <b>12</b>.</p><p id="p-0805" num="0804">In a case where an abnormality occurs in the system, when the center device <b>3</b> is notified of the abnormality in the system, the center device <b>3</b> notifies the CGW <b>13</b> of the program rewrite cancellation request via the DCM <b>12</b>. The abnormality in the system is, for example, a case where a certain rewrite target ECU <b>19</b> succeeds in writing, but another rewrite target ECU <b>19</b> performing cooperative control with the certain rewrite target ECU <b>19</b> fails in writing. As mentioned above, when at least one of a plurality of rewrite target ECUs <b>19</b> performing cooperative control fails in writing, it is determined that the system is abnormal, and the center device <b>3</b> notifies the CGW <b>13</b> of the program rewrite cancellation request via the DCM <b>12</b> with respect to the rewrite target ECU <b>19</b> that has succeeds in writing. That is, causes of generation of the cancellation request include an operation performed by the user and the occurrence of an abnormality in the system.</p><p id="p-0806" num="0805">The rollback method specifying unit <b>86</b><i>b </i>specifies a rollback method for returning a state of the rewrite target ECU <b>19</b> to a state before writing of write data is initiated according to the memory type of the flash memory mounted on the rewrite target ECU <b>19</b> and the data type of write data of a new program or an old program. That is, the rollback method specifying unit <b>86</b><i>b </i>specifies whether the flash memory is a single-bank memory, a single-bank suspend memory, or a double-bank memory as the memory type of the rewrite target ECU <b>19</b>, and specifies whether the write data is the entire data or difference data as the data type of the write data.</p><p id="p-0807" num="0806">The rollback method specifying unit <b>86</b><i>b </i>specifies a first rollback process, a second rollback process, or a third rollback process according to the memory type and the data type. When the rollback method is specified by the rollback method specifying unit <b>86</b><i>b</i>, the rollback execution unit <b>86</b><i>c </i>instructs the rewrite target ECU <b>19</b> to perform rollback in accordance with the rollback method, and operates the rewrite target ECU <b>19</b> with the old program. That is, the rollback execution unit <b>86</b><i>c </i>performs rollback for returning an operation state of the rewrite target ECU <b>19</b> to a state before rewriting of the application program is initiated.</p><p id="p-0808" num="0807">Next, an operation of the rollback execution control unit <b>86</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>143</b> to <b>153</b></figref>. The CGW <b>13</b> executes a rollback execution control program and thus performs the rollback execution control process. The CGW <b>13</b> performs a rollback method specifying process and a cancellation request determination process as the rollback execution control process. Each process will be described below.</p><p id="p-0809" num="0808">(15-1) Rollback Method Specifying Process</p><p id="p-0810" num="0809">When the rollback method specifying process is initiated, the CGW <b>13</b> analyzes the CGW rewrite specification data acquired from the DCM <b>12</b> (S<b>1501</b>), specifies a rollback method on the basis of an analysis result thereof (S<b>1502</b>), and finishes the rollback method specifying process. The CGW <b>13</b> acquires the memory type and the data type of a rollback program from the rewrite specification data illustrated in <figref idref="DRAWINGS">FIG. <b>31</b></figref>, and specifies a rollback method. The rollback method may be specified by using the data type of the new program when the data type is the same as that of the old program (rollback program).</p><p id="p-0811" num="0810">That is, in a case where the flash memory of the rewrite target ECU <b>19</b> is a single-bank memory and the write data is the entire data, as a rollback method when a cancellation request is generated, the CGW <b>13</b> immediately stops distribution of the entire data, and specifies a method (first rollback process) in which data of the old application program is written into a rewrite area in the rewrite target ECU <b>19</b> to be rewritten into the old application program. The old application program (rollback rewrite data) for a single-bank memory is included in a distribution package along with an update program, and the CGW <b>13</b> distributes the old application program to the rewrite target ECU <b>19</b> in the same manner as in the new application program.</p><p id="p-0812" num="0811">When the flash memory of the rewrite target ECU <b>19</b> is a single-bank memory and write data is difference data, as a rollback method when a cancellation request is generated, the CGW <b>13</b> continues distribution of the difference data, and specifies a method (second rollback process) in which the difference data is written into a rewrite area in the rewrite target ECU <b>19</b> to be rewritten into the new application program, then the difference data of the old application program is distributed, and the old data is written into the rewrite area in the rewrite target ECU <b>19</b> to be rewritten into the old application program.</p><p id="p-0813" num="0812">In a case where write data is difference data, the rewrite target ECU <b>19</b> restores the new application program by using the current application program written in the flash memory and the difference data acquired from the CGW <b>13</b>, and writes the new application program. In a state in which a different application program is written in the flash memory, the write target ECU <b>19</b> cannot restore the new application program by using the difference data. Thus, in a single-bank memory, it is necessary to perform a process of rewriting data into the new application program. Here, for example, when a version of the current application program is 1.0 and a version of the new application program is 2.0, a rewrite program (rewrite data) is difference data for updating the version 1.0 to the version 2.0, and rollback rewrite data is difference data for updating the version 2.0 to the version 1.0.</p><p id="p-0814" num="0813">When the flash memory of the rewrite target ECU <b>19</b> is a single-bank suspend memory or a double-bank memory, the CGW <b>13</b> continues distribution of write data, and specifies a method (third rollback process) in which, when an active bank is the bank-A and an inactive bank is the bank-B in the rewrite target ECU <b>19</b>, the write data is written into the bank-B that is the inactive bank such that the new application program is installed, but switching of the active bank from bank-A to bank-B is suppressed.</p><p id="p-0815" num="0814">(15-2) Cancellation Request Determination Process</p><p id="p-0816" num="0815">When it is specified that rewriting of an application program is initiated in the rewrite target ECU <b>19</b>, the CGW <b>13</b> initiates the cancellation request determination process, determines whether or not the rewriting of the application program has been completed (S<b>1511</b>), and determines whether or not a cancellation request has been generated (S<b>1512</b>). That is, as described above, the CGW <b>13</b> determines whether or not the cancellation request has been generated due to an operation performed by the user, the occurrence of abnormality in the system, or the like.</p><p id="p-0817" num="0816">When it determines that the cancellation request is generated before the rewriting of the application program has been completed, that is, the cancellation request is generated during installation (S<b>1512</b>: YES), the CGW <b>13</b> specifies the rewrite target ECU <b>19</b> that is a rollback target (S<b>1513</b>). It is assumed that the rewrite target ECUs <b>19</b> belonging to the same group are the ECU (ID1), the ECU (ID2), and the ECU (ID3), the ECU (ID1) is a single-bank memory, the ECU (ID2) and the ECU (ID3) are double-bank memories, installation in the ECU (ID1) has been completed, and a cancellation request is generated during installation in the ECU (ID2). In this case, the CGW <b>13</b> determines whether or not rollback is required for all of the rewrite target ECUs <b>19</b> belonging to the first group in S<b>1413</b>.</p><p id="p-0818" num="0817">The CGW <b>13</b> specifies the ECU (ID1) in which the entire application program is rewritten and the ECU (ID2) in which a part of the application program is rewritten as rollback targets. The CGW <b>13</b> determines the memory type of the flash memories of the rewrite target ECUs <b>19</b> that are the specified rollback targets, and determines whether each flash memory is a single-bank memory, a single-bank suspend memory, or a double-bank memory (S<b>1514</b> and S<b>1515</b>). When it is determined that the flash memory is a single-bank memory (S<b>1514</b>: YES), the CGW <b>13</b> determines the data type of the rollback program, and determines whether the rollback write data is the entire data or difference data (S<b>1516</b> and S<b>1517</b>).</p><p id="p-0819" num="0818">When it is determined that the rollback write data is the entire data (S<b>1516</b>: YES), the CGW <b>13</b> proceeds to the first rollback process (S<b>1518</b>; corresponding to a rollback execution procedure). When the first rollback process is initiated, the CGW <b>13</b> immediately stops distribution of the write data that is the new program (S<b>1531</b>). The CGW <b>13</b> acquires the rollback write data (old program) that is the entire data from the DCM <b>12</b> and distributes the rollback write data to the rewrite target ECU <b>19</b>. The rewrite target ECU <b>19</b> writes the data of the old application program acquired from the CGW <b>13</b> into the flash memory such that the data is rewritten into the old application program (S<b>1532</b>), finishes the first rollback process, and returns to the cancellation request determination process.</p><p id="p-0820" num="0819">When it is determined that the rollback write data is difference data (S<b>1517</b>: YES), the CGW <b>13</b> proceeds to the second rollback process (S<b>1519</b>; corresponding to a rollback execution procedure). When the second rollback process is initiated, the CGW <b>13</b> continues distribution of write data that is a new program (S<b>1541</b>), restores the difference data in the rewrite target ECU <b>19</b>, and writes the difference data into the flash memory such that the difference data is rewritten into the new application program (S<b>1542</b>). The CGW <b>13</b> distributes the write data of the old application program acquired from the DCM <b>12</b> to the rewrite target ECU <b>19</b> after rewriting into the new application program has been completed (S<b>1543</b>). The difference data that is the write data of the old application program is restored in the rewrite target ECU <b>19</b>, and is written into the flash memory to be rewritten into the old application program (S<b>1544</b>), and the CGW <b>13</b> finishes the second rollback process and returns to the cancellation request determination process.</p><p id="p-0821" num="0820">When it is determined that the rewrite target ECU <b>19</b> is a single-bank suspend memory ECU or a double-bank memory ECU (S<b>1515</b>: YES), the CGW <b>13</b> proceeds to the third rollback process (S<b>1520</b>; corresponding to a rollback execution procedure). In this case, the CGW <b>13</b> proceeds to the third rollback process regardless of the rewrite data type. When the third rollback process is initiated, the CGW <b>13</b> continues distribution of write data (S<b>1551</b>), writes the write data into an inactive bank (bank-B) in the rewrite target ECU <b>19</b> such that the write data is rewritten into the new application program (S<b>1552</b>). The CGW <b>13</b> suppresses switching of an active bank from the old bank (active bank: bank-A) to the new bank (inactive bank: bank-B) (S<b>1553</b>), finishes the third rollback process, and returns to the cancellation request determination process. In addition to suppressing the switching of the active bank, the CGW <b>13</b> may roll back the inactive bank in which the version 2.0 is written to a state (for example, the version 1.0) before rewriting into the new application program, as illustrated in <figref idref="DRAWINGS">FIG. <b>113</b></figref>.</p><p id="p-0822" num="0821">When the CGW <b>13</b> returns to the cancellation request determination process, the CGW <b>13</b> determines whether or not the rollback process has been performed on all the rewrite target ECUs <b>19</b> that are the rollback targets (S<b>1521</b>). For example, in the exemplified case where the rewrite target ECUs <b>19</b> are the ECU (ID1), the ECU (ID2), and the ECU (ID3), first, the CGW <b>13</b> performs the first rollback process or the second rollback process on the single-bank memory ECU (ID1) in which installation was being performed, according to the rollback data type. Thereafter, the CGW <b>13</b> performs the third rollback process on the double-bank memory ECU (ID2) in which installation has been completed.</p><p id="p-0823" num="0822">The CGW <b>13</b> performs the first rollback process or the second rollback process on the single-bank memory ECU (ID1) according to the rewrite data type. When it is determined that the rollback process has not been performed on all the rewrite target ECUs <b>19</b> that are the rollback targets (S<b>1521</b>: NO), the CGW <b>13</b> returns to step S<b>1513</b> and repeatedly performs step S<b>1513</b> and the subsequent steps. When it is determined that the rollback process has been performed on all the rewrite target ECUs <b>19</b> that are rollback targets (S<b>1521</b>: YES), the CGW <b>13</b> finishes the cancellation request determination process. The CGW <b>13</b> simultaneously instructs the ECU (ID1), the ECU (ID2), and the ECU (ID3) belonging to the first group on which the rollback process has been performed, to activate the old application programs. The ECU (ID1) having a single-bank memory switches to the old application program through restart. The ECU (ID2) and the ECU (ID3) having double-bank memories are started in the same active bank (bank-A) as before instead of the inactive bank (bank-B) in which the update program is written. When the user's intention changes and the program update is executed again, the new application program is written in the ECU (ID1) and the ECU (ID3). However, since the new application program has already been installed in the inactive bank of the ECU (ID2), writing is omitted.</p><p id="p-0824" num="0823">When it is determined that rewriting of the application program has been completed without the cancellation request being generated (S<b>1511</b>: YES), the CGW <b>13</b> determines whether activation has been completed (S<b>1522</b>), and determines whether the cancellation request has been generated (S<b>1523</b>).</p><p id="p-0825" num="0824">When it is determined that the cancellation request has been generated before completion of the activation, that is, the cancellation request has been generated during the activation (S<b>1523</b>: YES), the CGW <b>13</b> determines whether or not an activation instruction has reached the rewrite target ECU <b>19</b>, and determines whether or not switching of the active bank has been completed (S<b>1524</b>).</p><p id="p-0826" num="0825">When it is determined that the activation instruction has not reached the rewrite target ECU <b>19</b> and that the switching of the active bank is not completed (S<b>1524</b>: NO), the CGW <b>13</b> performs a fourth rollback process (S<b>1525</b>). It is assumed that the CGW <b>13</b> does not switch the active bank as the fourth rollback process. Alternatively, the CGW <b>13</b> may return the inactive bank to a state before rewriting into the new application program without switching the active bank. When the active bank is not switched, the CGW <b>13</b> uses a bank in which the version 1.0 is written as the active bank, and uses a bank in which the version 2.0 is written as the inactive bank, as illustrated in <figref idref="DRAWINGS">FIG. <b>150</b></figref>. When the inactive bank is returned to the state before rewriting into the new application program without switching the active bank, the CGW <b>13</b> uses the bank in which the version 1.0 is written as the active bank, and rolls back the inactive bank that is a bank in which the version 2.0 is written, to a state (version 1.0) before rewriting into the new application program, as illustrated in <figref idref="DRAWINGS">FIG. <b>151</b></figref>.</p><p id="p-0827" num="0826">When it is determined that the activation instruction has reached the rewrite target ECU <b>19</b> and switching of the active bank has been completed (S<b>1524</b>: YES), the CGW <b>13</b> performs a fifth rollback process. The completion of switching of the active bank indicates a state in which a bank in which the version 2.0 is written switches from the inactive bank to the active bank, and a bank of the version 1.0 switches from the active bank to the inactive bank, as illustrated in <figref idref="DRAWINGS">FIG. <b>152</b></figref>. As the fifth rollback process, the CGW <b>13</b> switches the active bank, or switches the active bank after returning the inactive bank to the state before rewriting into the new application program. In a case where switching the active bank, the CGW <b>13</b> switches the bank in which the version 2.0 is written from the active bank to the inactive bank, and switches the bank in which the version 1.0 is written from the inactive bank to the active bank, as illustrated in <figref idref="DRAWINGS">FIG. <b>153</b></figref>. In a case of switching the active bank after returning the inactive bank to the state before rewriting into the new application program, as illustrated in <figref idref="DRAWINGS">FIG. <b>154</b></figref>, the CGW <b>13</b> rolls back the active bank that is the bank in which the version 2.0 is written, to the state (for example, the version 1.0) before rewriting into the new application program, switches the bank that is returned to the state before rewriting into the new application program from the active bank to the inactive bank, and switches the bank in which the version 1.0 is written from the inactive bank to the active bank.</p><p id="p-0828" num="0827">As described above, the CGW <b>13</b> performs the rollback execution control process, and, thus, when a rewrite cancellation request is generated during rewriting of an application program, the CGW <b>13</b> returns an operation state of the rewrite target ECU <b>19</b> to a state before rewriting of the application program is initiated from the viewpoint of the user. Thus, all the rewrite target ECUs <b>19</b> belonging to the same group can be returned to original program versions together. Even in a case where difference data is used in the next program update, write data can be correctly restored.</p><p id="p-0829" num="0828">(16) Rewrite Progress Situation Display Control Process</p><p id="p-0830" num="0829">The rewrite progress situation display control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>154</b> to <b>166</b></figref>. The vehicle program rewriting system <b>1</b> performs the rewrite progress situation display control process in the CGW <b>13</b>. In order to inform the user of an application program rewrite progress situation, the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> as the display terminal <b>5</b> display a progress situation. The progress situation to be displayed includes not only a case where a program is updated but also a case where the program is rolled back due to, for example, a cancellation operation performed by the user or an update failure.</p><p id="p-0831" num="0830">As illustrated in <figref idref="DRAWINGS">FIG. <b>154</b></figref>, the CGW <b>13</b> includes a cancellation detection unit <b>87</b><i>a</i>, a write instruction unit <b>87</b><i>b</i>, and a notification instruction unit <b>87</b><i>c </i>in the rewrite progress situation display control unit <b>87</b>. The cancellation detection unit <b>87</b><i>a </i>detects cancellation regarding rewriting of a program for rewriting first write data stored in the rewrite target ECU <b>19</b> with second write data acquired from the center device <b>3</b>. The cancellation detection unit <b>87</b><i>a </i>detects a cancellation operation performed by the user or an error such as a failure in writing into the rewrite target ECU <b>19</b>. The cancellation detection unit <b>87</b><i>a </i>performs a rollback process even in a case where a predetermined abnormality is detected, such as a case where write data is incompatible with the rewrite target ECU <b>19</b>, a case where falsification of the write data is detected, or a case where an error of writing into the rewrite target ECU <b>19</b> occurs, and thus detection of these abnormalities is also treated as detection of cancellation.</p><p id="p-0832" num="0831">The write instruction unit <b>87</b><i>b </i>distributes the second write data to the rewrite target ECU <b>19</b> and instructs the rewrite target ECU <b>19</b> to write the second write data. The notification instruction unit <b>87</b><i>c </i>gives an instruction for a notification of a progress situation related to rewriting of an application program. The notification instruction unit <b>87</b><i>c </i>gives an instruction for a notification of the progress situation related to rewriting of the application program in a first aspect while the second write data is being distributed by the write instruction unit <b>87</b><i>b</i>, and gives an instruction for a notification of the progress situation related to the rewriting of the application program in a second aspect when the cancellation detection unit <b>87</b><i>a </i>detects cancellation. When cancellation is detected by the cancellation detection unit <b>87</b><i>a </i>while the second write data is being distributed, the write instruction unit <b>87</b><i>b </i>continues distribution of the second write data.</p><p id="p-0833" num="0832">The CGW <b>13</b> specifies rewriting of the application programs in the rewrite target ECU <b>19</b> by specifying an internal state of the rewrite target ECU <b>19</b>, specifying an instruction from the center device <b>3</b>, or specifying the user operation. When the rewriting of the application program is specified, the CGW <b>13</b> determines whether the rewriting is rewriting (installation) during the normal time or rewriting (uninstallation) during rollback. When it is determined whether the rewriting is rewriting during the normal time or rewriting is performed during rollback by specifying the internal state of the rewrite target ECU <b>19</b>, specifying the instruction from the center device <b>3</b>, and specifying the user operation, the CGW <b>13</b> calculates a progress situation of rewriting during the normal time or during rollback on the basis of the determination result, and instructs the display terminal <b>5</b> to display the calculated progress situation.</p><p id="p-0834" num="0833">The CGW <b>13</b> instructs the display terminal <b>5</b> to display the progress situation during the normal time or the progress situation during rollback in accordance with the rewrite determination result indicating whether the rewriting is rewriting during the normal time or rewriting during rollback. The CGW <b>13</b> gives an instruction such that progress display indicating the progress situation of the rewriting during the normal time is displayed to be differentiated from progress display indicating the progress situation of the rewriting during rollback. That is, the CGW <b>13</b> displays the progress situation in the first aspect in a case of the rewriting during the normal time, and displays the progress situation in the second aspect different from the first aspect in a case of the rewriting during rollback. The CGW <b>13</b> differentiates the progress display during the normal time from the progress display during rollback by differentiating characters, items, colors, numerical values, flashing, and the like on a display screen between the normal time and the rollback time, as an aspect related to display when a progress situation is displayed. The CGW <b>13</b> differentiates progress display during the normal time from progress display during rollback by differentiating sounds, vibrations, and the like between the normal time and the rollback time, as an aspect other than the display at the time of displaying the progress display.</p><p id="p-0835" num="0834">Next, an operation of CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>155</b> to <b>166</b></figref>. The CGW <b>13</b> executes a rewrite progress situation display control program and thus performs the rewrite progress situation display control process.</p><p id="p-0836" num="0835">When a rewrite initiation signal indicating that rewriting of a program has been initiated in the rewrite target ECU <b>19</b> is received (when installation of the program is initiated in the rewrite target ECU <b>19</b>), the CGW <b>13</b> initiates the rewrite progress situation display control process. When rewrite progress situation display control process is initiated, the CGW <b>13</b> analyzes the CGW rewrite specification data, specifies the memory type and the write data type of the flash memory of the rewrite target ECU <b>19</b>, and specifies the rewrite target ECU <b>19</b> during the normal time (S<b>1601</b>). When the memory type and the write data type of the flash memory of the rewrite target ECU <b>19</b>, and a size of an update program are specified (S<b>1602</b>), the CGW <b>13</b> calculates a rewrite progress situation during the normal time according to the specified result, and gives an instruction for display of the rewrite progress situation during the normal time (S<b>1603</b>). The display terminal <b>5</b> displays rewrite progress situation in a rewrite display aspect during the normal time in response to the instruction from the CGW <b>13</b>.</p><p id="p-0837" num="0836">The CGW <b>13</b> determines whether or not rewriting of the application program has been completed (S<b>1604</b>), and determines whether or not a cancellation request has been generated (S<b>1605</b>; corresponding to a cancellation detection procedure). The CGW <b>13</b> repeatedly performs S<b>1604</b> and S<b>1605</b>, and updates and displays a progress situation at any time, for example, during installation in the rewrite target ECU (ID1).</p><p id="p-0838" num="0837">When a rewrite completion signal indicating that the rewriting of the application program has been completed in the rewrite target ECU <b>19</b> is received, and it is determined that the rewriting of the application program has been completed without a cancellation request being generated (S<b>1604</b>: YES), the CGW <b>13</b> finishes the display of the rewrite progress situation during the normal state (S<b>1606</b>), and determines whether or not rewriting has been completed in all the rewrite target ECUs <b>19</b> (S<b>1607</b>). For example, when installation has been completed in the rewrite target ECU (ID1), the CGW <b>13</b> displays the progress situation of the ECU (ID1) as 100%. When it is determined that rewriting is not completed yet in all the rewrite target ECUs <b>19</b> (S<b>1607</b>: NO), the CGW <b>13</b> returns to step S<b>1601</b> and repeatedly performs step S<b>1601</b> and the subsequent steps. The CGW <b>13</b> performs progress display related to the rewrite target ECU (ID2) subjected to next installation, for example, after S<b>1601</b>.</p><p id="p-0839" num="0838">When it is determined that the cancellation request has been generated before completion of rewriting of the application program (S<b>1605</b>: YES), the CGW <b>13</b> finishes the display of the rewrite progress situation during the normal time (S<b>1608</b>), and proceeds to a display control process during rollback (S<b>1609</b>; corresponding to a notification instruction procedure). Here, the cancellation request includes a cancellation request made by the user, and a cancellation request made by the system based on a failure in writing into the rewrite target ECU <b>19</b> or the like.</p><p id="p-0840" num="0839">When the display control process during rollback is initiated, the CGW <b>13</b> specifies the rewrite target ECU <b>19</b> during rollback (S<b>1611</b>), and specifies the memory type of the flash memory of the rewrite target ECU <b>19</b> during rollback, and the data type and a size of a rollback program (S<b>1612</b>). The CGW <b>13</b> performs a process, for example, assuming that the rewrite target ECUs <b>19</b> belonging to the same group are the ECU (ID1), the ECU (ID2), and the ECU (ID3), installation has been completed in the ECU (ID1) and the ECU (ID2), and a cancellation request has been generated during installation in the ECU (ID3). In this case, the CGW <b>13</b> specifies whether or not rollback is required and a rollback method according to the memory type and the write data type of each rewrite target ECU <b>19</b>.</p><p id="p-0841" num="0840">The CGW <b>13</b> specifies the memory type and the write data type of the flash memory of the rewrite target ECU <b>19</b> that is a rollback target, and specifies whether or not rollback is required and a rollback method (the first rollback process in S<b>1518</b>, the second rollback process in S<b>1519</b>, and the third rollback process in S<b>1520</b>). The CGW <b>13</b> calculates a progress situation according to the specified result, displays the progress situation, and gives an instruction for display of a rewrite progress situation during rollback (S<b>1613</b>). An amount of write data in the CGW <b>13</b> differs depending on the first to third rollback processes. Thus, the CGW <b>13</b> determines a total amount of write data according to the first to third rollback processes, and calculates the progress (how much of the data has been written) on the basis of a ratio of an amount of written data. The CGW <b>13</b> determines whether or not rewriting as the rollback process of the application program has been completed (S<b>1614</b>).</p><p id="p-0842" num="0841">The CGW <b>13</b> distributes the write data to the rewrite target ECU <b>19</b> until the rewriting as the rollback process has been completed, and repeatedly performs the above-described progress calculation and display instruction. In S<b>1613</b>, the CGW <b>13</b> displays the calculated progress situation in a display aspect during rollback. In S<b>1614</b>, the CGW <b>13</b> determines whether or not the rollback for the ECU (ID3) in which rewriting was being performed is normally completed.</p><p id="p-0843" num="0842">When it is determined that the rollback for the rewrite target ECU <b>19</b> that is a rollback target has been completed (S<b>1614</b>: YES), the CGW <b>13</b> finishes displaying the rewrite progress situation during rollback (S<b>1615</b>). For example, the CGW <b>13</b> continues to display that rollback has been completed by 100% for the ECU (ID3).</p><p id="p-0844" num="0843">The CGW <b>13</b> determines whether or not rewriting during rollback has been completed in all rollback target ECUs <b>19</b> (S<b>1616</b>). When it is determined that rewriting during rollback is not completed for all the rollback target ECUs <b>19</b> (S<b>1616</b>: NO), the CGW <b>13</b> returns to step S<b>1611</b> and repeatedly performs step S<b>1611</b> and the subsequent steps.</p><p id="p-0845" num="0844">For example, in a case where the ECU (ID1) in which installation has been completed is a single-bank memory, the CGW <b>13</b> displays the rewrite progress situation during rollback (S<b>1613</b>). On the other hand, for example, in a case where the ECU (ID2) in which installation has been completed is a double-bank memory and does not require rollback, the ECU (ID2) is excluded from a rewrite target during rollback. When the rollback for the ECU (ID3) and the ECU (ID1) has been completed, rewriting in the rewrite target ECUs <b>19</b> that are all rollback targets has been completed (S<b>1616</b>: YES), and the CGW <b>13</b> finishes the display control process during rollback.</p><p id="p-0846" num="0845">In the above description, the CGW <b>13</b> performs the display control process during rollback, but the in-vehicle display ECU <b>7</b> or the center device <b>3</b> may be configured to perform the display control process during rollback while acquiring necessary information from the CGW <b>13</b>. There may be a configuration in which the CGW <b>13</b> performs rewriting during rollback, progress calculation, and the like, and the in-vehicle display ECU <b>7</b> or the center device <b>3</b> performs display control during rollback. That is, there is no limitation to the configuration in which only the CGW <b>13</b> has the function of the display control device, and the function of the display control device may be distributed between the CGW <b>13</b> and the in-vehicle display ECU <b>7</b>, or the function of the display control device may be distributed between the CGW <b>13</b> and the center device <b>3</b>.</p><p id="p-0847" num="0846">Hereinafter, display of a rewrite progress situation will be described with reference to <figref idref="DRAWINGS">FIGS. <b>157</b> to <b>165</b></figref>. As illustrated in <figref idref="DRAWINGS">FIG. <b>157</b></figref>, the display terminal <b>5</b> displays the overall progress situation as &#x201c;normal rewriting&#x201d; in display of the rewrite progress situation during the normal time, and thus allows the user to recognize that the display is display of the rewrite progress situation during the normal time. The &#x201c;normal rewriting&#x201d; may be displayed as &#x201c;installation&#x201d;. As a first aspect, the display terminal <b>5</b> displays the rewrite progress situation during the normal time.</p><p id="p-0848" num="0847">The display terminal <b>5</b> displays the progress state as &#x201c;waiting for synchronization instruction&#x201d; for the rewrite target ECU <b>19</b> that completes rewriting of an application program and is waiting for a synchronization instruction for activating the update program, and displays the progress state as &#x201c;normal rewriting&#x201d; for the rewrite target ECU <b>19</b> that is rewriting an application program. The &#x201c;waiting for synchronization instruction&#x201d; may be displayed as &#x201c;waiting for activation&#x201d;. The &#x201c;normal rewriting in progress&#x201d; may be displayed as &#x201c;installation in progress&#x201d;. <figref idref="DRAWINGS">FIG. <b>157</b></figref> exemplifies a case where the ECU (ID0001) and the ECU (ID0002) have completed rewriting of application programs and are waiting for a synchronization instruction, and the ECU (ID0003) is in a normal-rewriting-in-progress state.</p><p id="p-0849" num="0848">When a cancellation request is generated in this state, for example, as illustrated in <figref idref="DRAWINGS">FIG. <b>135</b></figref>, the display terminal <b>5</b> displays a pop-up message &#x201c;cancellation has been received; the state before rewriting is restored; and please wait for a while&#x201d;, and thus allows the user to recognize that the cancellation has been received. As a second aspect, the display terminal <b>5</b> performs display indicating that cancellation has been received.</p><p id="p-0850" num="0849">When the CGW <b>13</b> prepares for rewriting during rollback, the display terminal <b>5</b> displays the entire progress situation as &#x201c;rollback rewrite&#x201d; as illustrated in <figref idref="DRAWINGS">FIG. <b>159</b></figref>, and allows the user to recognize that the display is a display of the rewrite progress situation during rollback. The &#x201c;rollback rewrite&#x201d; may be displayed as &#x201c;uninstallation&#x201d;. The display terminal <b>5</b> displays the progress situation of all the rewrite target ECUs <b>19</b> as &#x201c;waiting for rollback&#x201d;, and displays a numerical value of a progress graph indicating the rewrite progress situation as &#x201c;0%&#x201d;. The &#x201c;waiting for rollback&#x201d; may be displayed as &#x201c;waiting for uninstallation&#x201d;. Here, the ECU (ID0001) and the ECU (ID0002) are examples of single-bank memory ECUs and the ECU (ID0003) is an example of a double-bank memory ECU, and rollback is required for the ECU (ID0001) and the ECU (ID0002) in which installation has been completed in addition to the ECU (ID0003) in which rewriting was being performed. <figref idref="DRAWINGS">FIG. <b>159</b></figref> illustrates an aspect in which one overall progress situation is displayed, and the progress situation of each rewrite target ECU <b>19</b> is displayed.</p><p id="p-0851" num="0850">When rewrite during rollback is initiated, the CGW <b>13</b> displays the progress state of the rewrite target ECU <b>19</b> in a rewriting state as &#x201c;rollback rewrite in progress (or uninstallation in progress)&#x201d; as illustrated in <figref idref="DRAWINGS">FIG. <b>160</b></figref>. As a third aspect, the display terminal <b>5</b> displays the rewrite progress situation during rollback. <figref idref="DRAWINGS">FIG. <b>160</b></figref> exemplifies a case where the ECU (ID0003) is in a rollback-rewrite-in-progress state. When the rollback for the rewrite target ECU <b>19</b> has been completed, the display terminal <b>5</b> displays the progress state as &#x201c;rollback completed&#x201d; and displays the progress situation as 100% for the rewrite target ECU <b>19</b> that has completed the rewrite as illustrated in <figref idref="DRAWINGS">FIG. <b>161</b></figref>.</p><p id="p-0852" num="0851">In a case where the rollback target ECU <b>19</b> is a single-bank memory ECU and the entire data is to be rewritten, the display terminal <b>5</b> causes the display of the progress graph to transition as illustrated in <figref idref="DRAWINGS">FIG. <b>162</b></figref>. That is, in a case where the rollback target ECU <b>19</b> is a single-bank memory ECU and the entire data is to be rewritten, distribution of the entire data is immediately stopped, and data of the old application program is written into the flash memory in the rewrite target ECU <b>19</b> to be rewritten into the old application program (first rollback process).</p><p id="p-0853" num="0852">For example, when a cancellation request is generated in a stage in which normal rewriting has been completed up to &#x201c;50%&#x201d; (<figref idref="DRAWINGS">FIG. <b>163</b>(<i>a</i>)</figref>), the display terminal <b>5</b> displays the numerical value of the progress graph as &#x201c;0%&#x201d; (<figref idref="DRAWINGS">FIG. <b>163</b>(<i>b</i>)</figref>), increases a numerical value of the progress graph in accordance with the progress of writing the data of the old application program, and rewrites the data into the old application program (<figref idref="DRAWINGS">FIGS. <b>163</b>(<i>c</i>), <b>163</b>(<i>d</i>), and <b>163</b>(<i>e</i>)</figref>). When the rewriting into the old application program has been completed by 100%, the display terminal <b>5</b> displays that the rewrite target ECU <b>19</b> &#x201c;has completed rollback&#x201d;. <figref idref="DRAWINGS">FIGS. <b>162</b> and <b>163</b> to <b>165</b></figref> described later illustrate progress display of the individual ECUs.</p><p id="p-0854" num="0853">When the rollback target ECU <b>19</b> is a single-bank memory ECU and difference data is to be rewritten, the display terminal <b>5</b> causes the display of the progress graph to transition as illustrated in <figref idref="DRAWINGS">FIG. <b>163</b></figref> or <figref idref="DRAWINGS">FIG. <b>164</b></figref>. That is, when the rollback target ECU <b>19</b> is a single-bank memory and the difference data is to be rewritten, the CGW <b>13</b> continues to distribute the difference data, writes the difference data into the flash memory in the rewrite target ECU <b>19</b> and thus rewrites the difference data into the new application program. The CGW <b>13</b> distributes the data of the old application program to the rewrite target ECU <b>19</b>, writes the old data into the flash memory in the rewrite target ECU <b>19</b>, and thus rewrites the old data into the old application program (second rollback process).</p><p id="p-0855" num="0854">For example, when a cancellation request is generated in a stage in which normal rewriting (installation) has been completed up to &#x201c;50%&#x201d; (<figref idref="DRAWINGS">FIG. <b>163</b>(<i>a</i>)</figref> and <figref idref="DRAWINGS">FIG. <b>164</b>(<i>a</i>)</figref>), the display terminal <b>5</b> displays a numerical value of the progress graph as &#x201c;0%&#x201d; (<figref idref="DRAWINGS">FIG. <b>163</b>(<i>b</i>)</figref> and <figref idref="DRAWINGS">FIG. <b>164</b>(<i>b</i>)</figref>). The rewrite target ECU <b>19</b> validates the difference data that has been written so far, and continues to write the difference data that is distributed from the CGW <b>13</b>. That is, the progress display indicating that installation has been completed switches from display of &#x201c;0%&#x201d; to a ratio corresponding to the validated &#x201c;50%&#x201d; (<figref idref="DRAWINGS">FIG. <b>163</b>(<i>c</i>)</figref> and <figref idref="DRAWINGS">FIG. <b>164</b>(<i>c</i>)</figref>). The display terminal <b>5</b> increases the numerical value of the progress graph in accordance with the progress in which the rewrite target ECU <b>19</b> writes the difference data of the new program distributed from the CGW <b>13</b> (<figref idref="DRAWINGS">FIGS. <b>163</b>(<i>d</i>), <b>163</b>(<i>e</i>), <b>164</b>(<i>d</i>), and <b>164</b>(<i>e</i>)</figref>). After the rewrite target ECU <b>19</b> completes rewriting of the new application program, the display terminal <b>5</b> subsequently increases the numerical value of the progress graph in accordance with the progress in which the rewrite target ECU <b>19</b> writes the difference data of the old application program distributed from the CGW <b>13</b> (<figref idref="DRAWINGS">FIGS. <b>163</b>(<i>f</i>), <b>163</b>(<i>g</i>), <b>164</b>(<i>f</i>), and <b>164</b>(<i>g</i>)</figref>). That is, the display terminal <b>5</b> displays the progress situation of writing of the new program and the progress situation of writing of the old program in accordance with the occurrence of continuous installation of the new program and installation of the old program as the rollback process.</p><p id="p-0856" num="0855">In this case, as illustrated in <figref idref="DRAWINGS">FIG. <b>163</b></figref>, the display terminal <b>5</b> may display a rewrite portion of the new application program as &#x201c;100%&#x201d; in the progress graph on the left and display a rewrite portion of the old application program as &#x201c;100%&#x201d; in the progress graph on the right, so that the entire width of the progress graph may be &#x201c;200%&#x201d;. In this case, the display terminal <b>5</b> calculates a progress percentage of the new application program on the basis of a file size of the new application program and a cumulative data size of the written new application program, calculates a progress percentage of the old application program on the basis of a file size of the old application program and a cumulative data size of the written old application program, and thus displays the progress situation.</p><p id="p-0857" num="0856">Further, as illustrated in <figref idref="DRAWINGS">FIG. <b>164</b></figref>, the display terminal <b>5</b> may set the entire width of the progress graph to &#x201c;100%&#x201d; by setting a rewrite portion of the new application program to &#x201c;50%&#x201d; and setting a rewrite portion of the old application program to &#x201c;50%&#x201d;. In this case, the display terminal <b>5</b> calculates and displays a progress percentage on the basis of a sum value of the file size of the written new application program and the file size of the old application program and a sum value of the cumulative data size of the new application program and the cumulative data size of the old application program.</p><p id="p-0858" num="0857">In a case where the rollback target ECU <b>19</b> is subjected to rewriting into a single-bank suspend memory ECU or a double-bank memory ECU, as illustrated in <figref idref="DRAWINGS">FIG. <b>165</b></figref>, the display terminal <b>5</b> causes the display of the progress graph to transition. That is, in a case of rewriting when the rollback target ECU <b>19</b> is a single-bank suspend memory ECU or a double-bank memory ECU, the CGW <b>13</b> continues to distribute write data to the rewrite target ECU <b>19</b>, writes the write data into the inactive bank in the rewrite target ECU <b>19</b>, and rewrites the write data into the new application program (third rollback process).</p><p id="p-0859" num="0858">For example, when a cancellation request is generated in a stage in which normal rewriting (installation) has been completed up to &#x201c;50%&#x201d; (<figref idref="DRAWINGS">FIG. <b>165</b>(<i>a</i>)</figref>), the display terminal <b>5</b> displays the numerical value of the progress graph as &#x201c;0%&#x201d; (<figref idref="DRAWINGS">FIG. <b>165</b>(<i>b</i>)</figref>). The rewrite target ECU <b>19</b> validates the difference data that has been written so far, and continues to write the difference data that is distributed from the CGW <b>13</b>. That is, the progress display indicating that installation has been completed switches from display of &#x201c;0%&#x201d; to a ratio corresponding to the validated &#x201c;50%&#x201d; (<figref idref="DRAWINGS">FIG. <b>165</b>(<i>c</i>)</figref>). The display terminal <b>5</b> increases the numerical value of the progress graph in accordance with the progress in which the rewrite target ECU <b>19</b> writes the write data distributed from the CGW <b>13</b> (<figref idref="DRAWINGS">FIGS. <b>165</b>(<i>d</i>) and <b>165</b>(<i>e</i>)</figref>). In the present embodiment, a description has been made of a case where the CGW <b>13</b> performs the rewrite progress situation display control process, but the display terminal <b>5</b> may perform the rewrite progress situation display control process.</p><p id="p-0860" num="0859">As described above, since the rewrite progress situation display control process is performed, the display terminal <b>5</b> displays a progress situation in a display aspect of differentiating rewriting of an application program between rewriting (installation) during the normal time and rewriting (uninstallation) during rollback on the basis of the rollback process. The user can recognize that rollback is in progress by receiving cancellation of an update program. Although the configuration of displaying a progress state for each rewrite target ECU <b>19</b> has been described above, as illustrated in <figref idref="DRAWINGS">FIG. <b>166</b></figref>, a configuration of collectively displaying a progress state for the rewrite target ECUs <b>19</b> may be used. In this case, the display terminal <b>5</b> displays a single progress state instead of individually displaying progress states for the three rewrite target ECUs <b>19</b>. The CGW <b>13</b> calculates the progress on the basis of a ratio of an amount of written data to a total amount of write data generated in the three rewrite target ECUs <b>19</b> as the rollback process.</p><p id="p-0861" num="0860">(17) Difference Data Consistency Determination Process</p><p id="p-0862" num="0861">The difference data consistency determination process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>167</b> to <b>170</b></figref>. The vehicle program rewriting system <b>1</b> performs the difference data consistency determination process before installation is initiated in the rewrite target ECU <b>19</b>.</p><p id="p-0863" num="0862">As illustrated in <figref idref="DRAWINGS">FIG. <b>167</b></figref>, the ECU <b>19</b> includes, in the difference data consistency determination unit <b>103</b>, a difference data acquisition unit <b>103</b><i>a</i>, a consistency determination unit <b>103</b><i>b</i>, a write data restoration unit <b>103</b><i>c</i>, a data writing unit <b>103</b><i>d</i>, a data verification value calculation unit <b>103</b><i>e</i>, a rewrite specification data acquisition unit <b>103</b><i>f</i>, a data identification information acquisition unit <b>103</b><i>g</i>, and a rewrite bank information acquisition unit <b>103</b><i>h. </i></p><p id="p-0864" num="0863">The difference data acquisition unit <b>103</b><i>a </i>acquires difference data that is used to rewrite a data storage area of an electronic control unit which is the rewrite target ECU <b>19</b> and that indicates a difference between old data and new data. The consistency determination unit <b>103</b><i>b </i>determines whether or not the difference data is consistent with a data storage area or stored data on the basis of first determination information related to the stored data that is stored in the data storage area of the flash memory and second determination information acquired in a manner linked to the difference data. For example, the first determination information is a data verification value for the stored data, and the second determination information is a data verification value for old data or a data verification value for new data. The write data restoration unit <b>103</b><i>c </i>restores write data by using the difference data and the stored data when it is determined by the consistency determination unit <b>103</b><i>b </i>that the consistency of the difference data is positive, and does not restore the write data when it is determined by the consistency determination unit <b>103</b><i>b </i>that the consistency of the difference data is negative. When the write data is restored by the write data restoration unit <b>103</b><i>c</i>, the data writing unit <b>103</b><i>d </i>stores the restored write data into the data storage area. The data verification value calculation unit <b>103</b><i>e </i>calculates a data verification value for each of blocks obtained by dividing the stored data into one or more blocks. The data verification value calculation unit <b>103</b><i>e </i>acquires the data verification value for each block received along with the difference data.</p><p id="p-0865" num="0864">The rewrite specification data acquisition unit <b>103</b><i>f </i>acquires rewrite specification data corresponding thereof in the CGW rewrite specification data from the CGW <b>13</b>. The data identification information acquisition unit <b>103</b><i>g </i>acquires data identification information stored in the difference data and data identification information of an old application program that is the old data. The data identification information is information for identifying whether or not the difference data is data for the ECU, and is, for example, data calculated by applying a predetermined algorithm to the old data.</p><p id="p-0866" num="0865">The rewrite bank information acquisition unit <b>103</b><i>h </i>acquires rewrite bank information stored in the rewrite specification data acquired from the CGW <b>13</b> and rewrite bank information of the old application program that is old data. The rewrite bank information is information indicating which bank of the flash memory is to be written with the difference data that is the write data. In a case where the rewrite target ECU <b>19</b> is a double-bank memory or a single-bank suspend memory, the bank-A or the bank-B is designated. In a case where the rewrite target ECU <b>19</b> is a single-bank memory, the rewrite bank information is not used. When the difference data distributed from the CGW <b>13</b> is received by the write data receiving unit <b>101</b>, the consistency determination unit <b>103</b><i>b </i>determines the consistency of the difference data by using at least one of the data identification information, the data verification value, and the rewrite bank information.</p><p id="p-0867" num="0866">Next, an operation of the difference data consistency determination unit <b>103</b> in the rewrite target ECU <b>19</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>168</b> to <b>170</b></figref>. The rewrite target ECU <b>19</b> executes a difference data consistency determination program and thus performs the difference data consistency determination process. When the difference data consistency determination process is initiated, the rewrite target ECU <b>19</b> acquires data identification information, a data verification value, and rewrite bank information related to difference data as first determination information for determining the consistency of the difference data (S<b>1701</b>). The rewrite target ECU <b>19</b> acquires data identification information, data verification value of old data, a data verification value of new data, and rewrite bank information as second determination information (S<b>1702</b>).</p><p id="p-0868" num="0867">The rewrite target ECU <b>19</b> determines whether or not the data identification information of the first determination information matches the data identification information of the second determination information, and whether or not the rewrite bank information of the first determination information matches the rewrite bank information of the second determination information (S<b>1703</b>). When it is determined that the data identification information of the first determination information does not match the data identification information of the second determination information, or the rewrite bank information of the first determination information does not match the rewrite bank information of the second determination information (S<b>1703</b>: NO), the rewrite target ECU <b>19</b> determines that the write data is improper, notifies the CGW <b>13</b> of error information, and finishes the difference data consistency determination process.</p><p id="p-0869" num="0868">When it is determined that the data identification information of the first determination information matches the data identification information of the second determination information and that the rewrite bank information of the first determination information matches the rewrite bank information of the second determination information (S<b>1703</b>: YES), the rewrite target ECU <b>19</b> collates the data verification value of the first determination information with the data verification value of the new data of the second determination information, and determines whether or not both of the data verification values match each other (S<b>1704</b>; corresponding to a consistency determination procedure). When it is determined that both of the data verification values do not match each other (S<b>1704</b>: NO), the rewrite target ECU <b>19</b> collates the data verification value of the first determination information with the data verification value of the old data of the second determination information, and determines whether both of the data verification values match each other (S<b>1705</b>; corresponding to a consistency determination procedure).</p><p id="p-0870" num="0869">When it is determined that both of the data verification values match each other (S<b>1705</b>: YES), the rewrite target ECU <b>19</b> restores write data (S<b>1706</b>; corresponding to a write data restoration procedure), writes the restored write data into the flash memory (S<b>1707</b>; corresponding to a data write procedure), and determines whether or not writing of the entire write data has been completed (S<b>1708</b>). When it is determined that writing of the entire write data has not been completed (S<b>1708</b>: NO), the rewrite target ECU <b>19</b> returns to step S<b>1703</b> and repeatedly performs step S<b>1703</b> and the subsequent steps. When it is determined that all writing of the entire write data has been completed (S<b>1708</b>: YES), the rewrite target ECU <b>19</b> finishes the difference data consistency determination process.</p><p id="p-0871" num="0870">When it is determined that the data verification value of the first determination information does not match the data verification value of the new data of the second determination information (S<b>1704</b>: NO), and it is determined that the data verification value of the first determination information does not match the data verification value of the old data of the second determination information (S<b>1705</b>: NO), the rewrite target ECU <b>19</b> determines whether or not writing for a first block is performed (S<b>1709</b>).</p><p id="p-0872" num="0871">When it is determined that writing for the first block is performed (S<b>1709</b>: YES), the rewrite target ECU <b>19</b> determines whether or not writing of the entire write data has been completed because writing for the first block has not been completed (S<b>1708</b>). When it is determined that writing for the first block is not performed, that is, writing for a second block and the subsequent blocks is performed (S<b>1709</b>: NO), the rewrite target ECU <b>19</b> retries the writing (S<b>1710</b>), and determines whether or not writing of entire write data has been completed (S<b>1708</b>).</p><p id="p-0873" num="0872">A description will be made of a case where the rewrite target ECU <b>19</b> is a single-bank memory ECU with reference to <figref idref="DRAWINGS">FIG. <b>169</b></figref>. Data identification information (old) and a CRC value (data verification value) computed for each block of old data are attached to difference data distributed from the CGW <b>13</b>. The data identification information (old) is data calculated by applying a predetermined algorithm to the old data (old application program). When the data identification information is used as determination information, the rewrite target ECU <b>19</b> collates the data identification information (old) attached to the difference data with the data identification information (old) of the program (old data) stored in the flash memory, and determines the consistency of the difference data. The data identification information (old) stored in the flash memory is information stored together when the program is written into the flash memory of the rewrite target ECU <b>19</b>. Alternatively, a predetermined number of bits from a leading address of the program written in the flash memory may be regarded as data identification information (old).</p><p id="p-0874" num="0873">When the data verification value is used as determination information, the rewrite target ECU <b>19</b> computes a CRC value for each block of the program stored in the flash memory, collates a CRC value (CRC (B<b>1</b> to Bn)) for the old data attached to the received difference data and a CRC value (CRC (B<b>1</b>&#x2032; to Bn&#x2032;)) for the new data with the computed CRC value, and determines the consistency of the difference data. When no new program is written in the flash memory, the received CRC value in all blocks matches the computed CRC value. In a case where writing is stopped in a state in which the new program is written up to m (&#x3c;n) blocks of the flash memory, and the writing is resumed, the computed CRC value matches the CRC value (CRC (B<b>1</b>&#x2032; to Bn&#x2032;) of the new data in the blocks <b>1</b> to m, and thus the rewrite target ECU <b>19</b> skips a write process (S<b>1706</b> and S<b>1707</b>). The rewrite target ECU <b>19</b> performs the write process (S<b>1706</b> and S<b>1707</b>) from the block m+1 by checking match with the CRC value (CRC (B<b>1</b> to Bn)) for the old data.</p><p id="p-0875" num="0874">Data identification information (new) of a new program (new data) and a CRC value (CRC (B<b>1</b>&#x2032; to Bn&#x2032;)) for each block may be attached to the difference data. The rewrite target ECU <b>19</b> writes the difference data into the flash memory, stores the data identification information (new) together when the new program is installed, and uses the difference data to determine the consistency in the next program update. When installation of the new program is completed, the rewrite target ECU <b>19</b> reads the new program written in the flash memory for each block, computes a CRC value, compares the CRC value with the CRC value attached to the difference data, and verifies whether or not the new program has been correctly written.</p><p id="p-0876" num="0875">A description will be made of a case where the rewrite target ECU <b>19</b> is a double-bank memory ECU with reference to <figref idref="DRAWINGS">FIG. <b>170</b></figref>. Also in this case, when the data verification value is used as determination information, the rewrite target ECU <b>19</b> computes a CRC value for each block of the program stored in the flash memory, collates the CRC value (CRC (B<b>1</b> to Bn)) for the old data attached to the received difference data and the CRC value (CRC (B<b>1</b>&#x2032; to Bn&#x2032;) for the new data with the computed CRC value, and determines the consistency of the difference data. When no new program is written in the flash memory, the received CRC value in all blocks matches the computed CRC value. In a case where writing is stopped in a state in which the new program is written up to m (&#x3c;n) blocks of the flash memory, and the writing is resumed, the computed CRC value matches the CRC value (CRC (B<b>1</b>&#x2032; to Bn&#x2032;) of the new data in the blocks <b>1</b> to m, and thus the rewrite target ECU <b>19</b> skips a write process (S<b>1706</b> and S<b>1707</b>). The rewrite target ECU <b>19</b> performs the write process (S<b>1706</b> and S<b>1707</b>) from the block m+1 by checking match with the CRC value (CRC (B<b>1</b> to Bn)) for the old data.</p><p id="p-0877" num="0876">It is assumed that the bank-A of the flash memory is an active bank and has the version 2.0, the bank-B thereof is an inactive bank and has the version 1.0, and the difference data is difference data (difference data between the version 1.0 and the version 3.0) for updating the bank-B to the version 3.0. The difference data distributed from the CGW <b>13</b> is attached with data identification information (information indicating old (version 1.0)), a CRC value calculated for each block of the old data (old program (version 1.0)), and a CRC value computed for each block of the new data (new program (version 3.0)).</p><p id="p-0878" num="0877">The rewrite specification data includes rewrite bank information indicating into which bank of the flash memory the difference data for the rewrite target ECU <b>19</b> is to be written. In a case where the rewrite bank information is used as determination information, the rewrite target ECU <b>19</b> collates the rewrite bank information acquired from the rewrite specification data with inactive bank information (bank-B) of the rewrite target ECU <b>19</b>, and determines the consistency of the difference data. In a case where the data identification information is used as determination information, the rewrite target ECU <b>19</b> collates the data identification information (old (version 1.0)) attached to the difference data with the data identification information (old) of the old program (version 1.0) stored in the inactive bank (bank-B) of the flash memory, and determines the consistency of the difference data. In a case where the data verification value is used as determination information, the rewrite target ECU <b>19</b> computes a CRC value for each block of the old program (version 1.0) stored in the inactive bank (bank-B) of the flash memory, collates the CRC value (CRC (B<b>1</b> to Bn)) attached to the difference data with the computed CRC value, and determines the consistency of the difference data.</p><p id="p-0879" num="0878">In the examples illustrated in <figref idref="DRAWINGS">FIGS. <b>166</b> and <b>167</b></figref> described above, it has been described that the data identification information and the data verification value are attached to the difference data and are distributed from the CGW <b>13</b> along with the difference data. However, the data identification information and the data verification value may be attached as header information of the difference data, and the header information may be distributed to the rewrite target ECU <b>19</b> before the CGW <b>13</b> distributes the difference data to the rewrite target ECU <b>19</b>. When the header information is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> determines the consistency of the difference data by using the data identification information and the data verification value.</p><p id="p-0880" num="0879">In <figref idref="DRAWINGS">FIGS. <b>166</b> and <b>167</b></figref>, the case where rewrite data is the difference data has been described as an example, but the same applies to a case where rewrite data is the entire data. In a case where the rewrite target ECU <b>19</b> has a single-bank memory, the same consistency determination is performed when the rollback difference data is used to return the memory to an original version.</p><p id="p-0881" num="0880">As described above, the rewrite target ECU <b>19</b> performs the difference data consistency determination process, thus writes write data generated on the basis of the difference data only in a case where the consistency of the difference data is positive, and prevents a situation in which write data generated on the basis of the difference data is written in a case where the consistency of the difference data is negative. For example, in a case where difference data to be written into the bank-A is included in a distribution package for the rewrite target ECU <b>19</b> in which the bank-B of the flash memory is not an inactive bank, inconsistency can be detected before the difference data is written into the flash memory. In a case where difference data for other ECUs or difference data of which version is inconsistent is included in a distribution package as difference data for the rewrite target ECU, inconsistency can be detected before the difference data is written into the flash memory.</p><p id="p-0882" num="0881">In a case where the rewrite target ECU <b>19</b> stops and then resumes writing of the write data, the rewrite target ECU <b>19</b> determines the consistency of the difference data on the basis of the data verification value for the stored data in the flash memory, and the data verification value of the old data and the data verification value of the new data associated with the received difference data. The rewrite target ECU <b>19</b> may determine the consistency of the difference data on the basis of the data verification value for the stored data and the verification value of the received new data, and may determine the consistency of the difference data on the basis of the data verification value for the stored data and the data verification value of the received old data from the final block for which a determination result is negative.</p><p id="p-0883" num="0882">The rewrite target ECU <b>19</b> skips writing of the write data at least up to the preceding block of the final block for which the consistency of the difference data is determined as being negative, and resumes writing of the write data from the final block or the subsequent block of the final block. In a case where a block size is same as a data size of a write area for the write data, since writing of the write data has been completed up to the final block, it is sufficient to skip writing to the final block and resume writing from the final block. On the other hand, in a case where the block size is not the same as the data size of the write area for the write data, writing of the write data may be stopped in the final block, and thus it is necessary to resume writing from the final block.</p><p id="p-0884" num="0883">(18) Rewrite Execution Control Process</p><p id="p-0885" num="0884">The rewrite execution control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>171</b> to <b>178</b></figref>. The vehicle program rewriting system <b>1</b> executes the rewrite execution control process in the ECU <b>19</b>.</p><p id="p-0886" num="0885">As illustrated in <figref idref="DRAWINGS">FIG. <b>171</b></figref>, the ECU <b>19</b> includes a program execution unit <b>104</b><i>a</i>, a switching request receiving unit <b>104</b><i>b</i>, a data acquisition unit <b>104</b><i>c</i>, a bank information notification unit <b>104</b><i>d</i>, a firmware acquisition unit <b>104</b><i>e</i>, an installation execution unit <b>104</b><i>f</i>, and an activation execution unit <b>104</b><i>g </i>in the rewrite execution control unit <b>104</b>. The program execution unit <b>104</b><i>a </i>rewrites an inactive bank by executing a rewrite program in an active bank while executing an application program and parameter data in the active bank. The switching request receiving unit <b>104</b><i>b </i>receives an activation request from the CGW <b>13</b>. The data acquisition unit <b>104</b><i>c </i>acquires write data for an area of the inactive bank that needs to be rewritten from the outside. The bank information notification unit <b>104</b><i>d </i>notifies the outside of double-bank rewrite information (hereinafter, referred to as bank information). The firmware acquisition unit <b>104</b><i>e </i>acquires firmware of a rewrite program from the outside. When an instruction for installation is given by the CGW <b>13</b>, the installation execution unit <b>104</b><i>f </i>writes write data into the flash memory and executes the installation. When an instruction for activation is given by the CGW <b>13</b>, the activation execution unit <b>104</b><i>g </i>executes the activation for switching the active bank in preparation for restart.</p><p id="p-0887" num="0886">Next, an operation of the rewrite execution control unit <b>104</b> in the ECU <b>19</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>172</b> to <b>178</b></figref>. The rewrite target ECU <b>19</b> executes a rewrite execution control program and thus performs the rewrite execution control process. The rewrite target ECU <b>19</b> performs a normal operation process, a rewrite operation process, an information notification process, and an application program verification process as the rewrite execution control process. Each process will be described below. In the present embodiment, a description will be made of a case where the rewrite target ECU <b>19</b> is a double-bank memory ECU or a single-bank suspend memory ECU.</p><p id="p-0888" num="0887">(18-1) Normal Operation Process</p><p id="p-0889" num="0888">The rewrite target ECU <b>19</b> initiates the normal operation process when the rewrite target ECU <b>19</b> transitions from the stop state or the sleep state to the start state due to turning-on of the IG power or the like. When the normal operation process is initiated, the rewrite target ECU <b>19</b> specifies a start bank on the basis of start bank determination information regarding the bank-A and the bank-B (S<b>1801</b>), and is started in the start bank (S<b>1802</b>). The rewrite target ECU <b>19</b> verifies the integrity of a program stored in the start bank (active bank), and determines whether the start bank is positive (S<b>1803</b>).</p><p id="p-0890" num="0889">When it is determined that a verification result of the integrity of the start bank is negative, and it is determined that the start bank is negative (S<b>1803</b>: NO), the rewrite target ECU <b>19</b> transmits error information indicating that the verification result of the integrity of the start bank is negative to the CGW <b>13</b> (S<b>1804</b>), and finishes the normal operation process. When the error information is received from the rewrite target ECU <b>19</b>, the CGW <b>13</b> transmits the error information to the DCM <b>12</b>. When the error information is received from the CGW <b>13</b>, the DCM <b>12</b> uploads the received error information to the center device <b>3</b>. That is, when it is determined that the verification result of the integrity of the start bank is negative in the rewrite target ECU <b>19</b>, the CGW <b>13</b>, the DCM <b>12</b>, and the center device <b>3</b> are notified of this fact.</p><p id="p-0891" num="0890">When it is determined that the verification result of the integrity of the start bank is positive, and it is determined that the start bank is positive (S<b>1803</b>: YES), the rewrite target ECU <b>19</b> verifies the integrity of the program stored in the rewrite bank (inactive bank), and determines whether or not the rewrite bank is positive (S<b>1805</b>).</p><p id="p-0892" num="0891">When it is determined that a verification result of the integrity of the rewrite bank is negative, and it is determined that a verification result of the rewrite bank is negative (S<b>1805</b>: NO), the rewrite target ECU <b>19</b> transmits error information indicating that the verification result of the integrity of the rewrite bank is negative to the CGW <b>13</b> (S<b>1806</b>). When the error information is received from the rewrite target ECU <b>19</b>, the CGW <b>13</b> transmits the error information to the DCM <b>12</b>. When the error information is received from the CGW <b>13</b>, the DCM <b>12</b> uploads the received error information to the center device <b>3</b>. That is, when it is determined that the verification result of the integrity of the rewrite bank is negative in the rewrite target ECU <b>19</b>, the CGW <b>13</b>, the DCM <b>12</b>, and the center device <b>3</b> are notified of this fact.</p><p id="p-0893" num="0892">The integrity verification process described above is executed by a boot program before an application program is executed. When the integrity verification is finished, the rewrite target ECU <b>19</b> specifies a location address of the boot vector table (S<b>1807</b>), specifies a location address of the normal time vector table (S<b>1808</b>), specifies a leading address of the application program (S<b>1809</b>), executes the application program, and finishes the normal operation process.</p><p id="p-0894" num="0893">(18-2) Rewrite Operation Process</p><p id="p-0895" num="0894">When a rewrite request is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> initiates the rewrite operation process. When the rewrite operation process is initiated, the rewrite target ECU <b>19</b> performs authentication with the CGW <b>13</b> by using a security access key (S<b>1811</b>). When it is determined that an authentication result is positive (S<b>1812</b>: YES), the rewrite target ECU <b>19</b> waits for write data to be received (S<b>1813</b>). When it is determined that the write data has been received from the CGW <b>13</b> (S<b>1813</b>: YES), the rewrite target ECU <b>19</b> rewrites an application program located in a rewrite bank (inactive bank) while executing an application program located in a start bank (active bank) (S<b>1814</b>).</p><p id="p-0896" num="0895">It is determined whether or not rewriting of the application program has been completed (S<b>1815</b>), and, when it is determined that rewriting of the application program has been completed (S<b>1815</b>: YES), the rewrite target ECU <b>19</b> determines whether or not verification is positive (S<b>1816</b>). When it is determined that the verification is positive (S<b>1816</b>: YES), the rewrite target ECU <b>19</b> sets a rewrite completion flag to &#x201c;OK&#x201d; (S<b>1817</b>). The verification is verification of the integrity of the application program written in the inactive bank.</p><p id="p-0897" num="0896">The rewrite target ECU <b>19</b> determines whether or not an activation request has been received from the CGW <b>13</b> (S<b>1818</b>). When it is determined that the activation request has been received from the CGW <b>13</b> (S<b>1818</b>: YES), the rewrite target ECU <b>19</b> increments, for example, a numerical value of start bank information regarding the rewrite bank, and thus updates the start bank information regarding the rewrite bank (S<b>1819</b>). That is, update to information indicating that the rewrite target ECU will be started in the rewrite bank thereafter is performed. It is determined whether or not a version read signal has been received from the CGW <b>13</b> (S<b>1820</b>), and, when it is determined that the version read signal has been received (S<b>1820</b>: YES), the rewrite target ECU <b>19</b> transmits, to the CGW <b>13</b>, version information regarding the active bank, version information regarding the inactive bank, and identification information for specifying which bank is the active bank (S<b>1821</b>), and finishes the rewrite operation process. Here, the rewrite target ECU <b>19</b> may execute all of the processes from S<b>1811</b> to S<b>1821</b> according to the application program in the active bank (old bank) before switching. The rewrite target ECU <b>19</b> may execute the processes from S<b>1811</b> to S<b>1819</b> according to the application program in the active bank (old bank) before switching, and may be restarted after performing S<b>1819</b>, to execute the processes from S<b>1820</b> to S<b>1821</b> according to the application program in the active bank (new bank) after switching.</p><p id="p-0898" num="0897">(18-3) Information Notification Process</p><p id="p-0899" num="0898">The rewrite target ECU <b>19</b> initiates the information notification process when the rewrite target ECU <b>19</b> transitions from the stop state or the sleep state to the start state, or when, for example, the IG power is turned on or a notification request is received from the CGW <b>13</b>. When the information notification process is initiated, the rewrite target ECU <b>19</b> notifies the CGW <b>13</b> of identification information for uniquely specifying an application program and parameter data related to an active bank or an inactive bank and identification information for uniquely specifying a place where the active bank or the inactive bank is located on the memory. That is, the rewrite target ECU <b>19</b> acquires start bank information regarding a start bank (S<b>1831</b>), and transmits the start bank information to the CGW <b>13</b> (S<b>1832</b>). The rewrite target ECU <b>19</b> transmits, to the CGW <b>13</b>, information indicating which of the bank-A and the bank-B is the start bank, version information of the start bank, and the like as the start bank information.</p><p id="p-0900" num="0899">When the transmission of the start bank information to the CGW <b>13</b> has been completed, the rewrite target ECU <b>19</b> acquires rewrite bank information (hereinafter, also referred to as bank information) regarding the rewrite bank (S<b>1833</b>), and transmits the acquired rewrite bank information to the CGW <b>13</b> (S<b>1834</b>). The rewrite target ECU <b>19</b> transmits, to the CGW <b>13</b>, information indicating which bank of the bank-A and the bank-B is the rewrite bank, version information of the rewrite bank, and the like as the rewrite bank information. When transmission of the rewrite bank information to the CGW <b>13</b> has been completed, the rewrite target ECU <b>19</b> transmits identification information for specifying location addresses of the start bank and the rewrite bank on the memory to the CGW <b>13</b> (S<b>1835</b>), and finishes the information notification process. The rewrite target ECU <b>19</b> transmits, to the CGW <b>13</b>, for example, an initiation address and an end address of the bank-A and an initiation address and an end address of the bank-B in the flash memory as the identification information for specifying addresses.</p><p id="p-0901" num="0900">(18-4) Rewrite Program Verification Process</p><p id="p-0902" num="0901">When the rewrite program verification process is initiated, the rewrite target ECU <b>19</b> determines whether or not identification information for specifying an address for executing a rewrite program has been acquired (S<b>1841</b>). When it is determined that the identification information for specifying the address for executing the rewrite program has been acquired (S<b>1841</b>: YES), the rewrite target ECU <b>19</b> determines whether or not the identification information matches the start bank information of the rewrite target ECU <b>19</b> (S<b>1842</b>). Specifically, the rewrite target ECU <b>19</b> determines whether or not the bank information indicating the start bank in the start bank information matches the identification information.</p><p id="p-0903" num="0902">When it is determined that the identification information matches the start bank information of the rewrite target ECU <b>19</b> (S<b>1842</b>: YES), the rewrite target ECU <b>19</b> acquires the rewrite program (S<b>1843</b>), and determines whether or not identification information for specifying an address for rewriting the application program has been acquired (S<b>1844</b>). Here, in a case of an embedded type configuration in which the rewrite program is embedded in the flash memory in advance, in S<b>1843</b>, the rewrite target ECU <b>19</b> acquires a write program in the start bank from the flash memory and executes the write program on the RAM. In a case of a download type configuration in which the rewrite program is not embedded in the flash memory in advance but is downloaded from the outside, in S<b>1843</b>, the rewrite target ECU <b>19</b> downloads the rewrite program to the RAM and executes the rewrite program.</p><p id="p-0904" num="0903">When it is determined that the identification information for specifying the address for rewriting the application program has been acquired (S<b>1844</b>: YES), the rewrite target ECU <b>19</b> determines whether or not the identification information matches the start bank information of the rewrite target ECU <b>19</b> (S<b>1845</b>). Specifically, the rewrite target ECU <b>19</b> determines whether or not bank information indicating the non-start bank in the start bank information matches the identification information. When it is determined that the identification information matches the start bank information of the ECU <b>19</b> (S<b>1845</b>: YES), the rewrite target ECU <b>19</b> rewrites the application program (S<b>1846</b>), and finishes the rewrite program verification process.</p><p id="p-0905" num="0904">When it is determined that the identification information does not match the start bank information of the ECU <b>19</b> do (S<b>1842</b>: NO), or it is determined that the identification information does not match the start bank information of the rewrite target ECU <b>19</b> (S<b>1845</b>: NO), the rewrite target ECU <b>19</b> determines that the application program or the parameter data is not executable in the active bank or the inactive bank, and transmits a negative acknowledgment to the CGW <b>13</b> (S<b>1847</b>), and finishes the rewrite program verification process. For example, in the case of a double-bank memory ECU in which the bank-A of the flash memory is an active bank and the bank-B is an inactive bank, an address for executing a rewrite program is an address of the bank-A that is the active bank, and an address for rewriting an application program is an address of the bank-B that is the inactive bank.</p><p id="p-0906" num="0905">As illustrated in <figref idref="DRAWINGS">FIG. <b>173</b></figref>, the rewrite target ECU <b>19</b> may acquire identification information for specifying an address from the CGW <b>13</b> before write data is acquired from the CGW <b>13</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>174</b></figref>, the rewrite target ECU <b>19</b> may acquire identification information for specifying an address when write data is acquired from the CGW <b>13</b>. The rewrite target ECU <b>19</b> receives rewrite specification data from the CGW <b>13</b>, for example, before write data is acquired, and acquires rewrite bank information. Since the rewrite bank information includes identification data for identifying which bank is a start bank and which bank is a rewrite bank, the identification data is used as identification information for specifying an address.</p><p id="p-0907" num="0906">The rewrite target ECU <b>19</b> performs (18-2) the rewrite operation process described above in response to the CGW <b>13</b> performing an installation instruction process. Here, the installation instruction process performed by the CGW <b>13</b> will be described.</p><p id="p-0908" num="0907">When the installation instruction process is initiated, the CGW <b>13</b> identifies the rewrite specification data (S<b>1851</b>), and determines whether installation during is designated for all of the rewrite target ECUs <b>19</b>, installation during vehicle traveling is designated for all of the rewrite target ECUs <b>19</b>, or installation is designated for each memory type of the rewrite target ECU <b>19</b> (S<b>1852</b> to S<b>1854</b>).</p><p id="p-0909" num="0908">When it is determined that the installation during parking is designated for all of the rewrite target ECUs <b>19</b> (S<b>1852</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to perform the installation on the condition that an approval for the installation has been obtained and the vehicle is parked (S<b>1855</b>). When it is determined that the installation during vehicle traveling is designated for all of the rewrite target ECUs <b>19</b> (S<b>1853</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to perform the installation on condition that an approval for the installation has been obtained and the vehicle is traveling (S<b>1856</b>).</p><p id="p-0910" num="0909">When it is determined that the installation is designated for each memory type of the rewrite target ECU <b>19</b> (S<b>1854</b>: YES), the CGW <b>13</b> determines whether the memory type is a double-bank memory, or a single-bank suspend memory or a single-bank memory on the basis of the rewrite specification data (S<b>1857</b> and S<b>1858</b>).</p><p id="p-0911" num="0910">When it is determined that the memory type of the rewrite target ECU <b>19</b> is the double-bank memory and satisfies a first predetermined condition (S<b>1857</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to perform the installation on the condition that an approval for the installation has been obtained and the vehicle is traveling (S<b>1859</b>). When it is determined that the memory type of the rewrite target ECU <b>19</b> is the single-bank suspend memory or the single-bank memory and satisfies a second predetermined condition (S<b>1858</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to perform the installation on the condition that an approval for the installation has been obtained and the vehicle is parked (S<b>1860</b>).</p><p id="p-0912" num="0911">It is determined whether or not the installation has been completed in all of the rewrite target ECUs <b>19</b> (S<b>1861</b>), and, when it is determined that the installation has not been completed in all of the rewrite target ECUs <b>19</b> (S<b>1861</b>: NO), the CGW <b>13</b> returns to step S<b>1851</b> and repeatedly performs step S<b>1851</b> and the subsequent steps.</p><p id="p-0913" num="0912">That is, when the rewrite target ECU <b>19</b> is a double-bank memory ECU, the CGW <b>13</b> gives an instruction for the installation while the vehicle is ready to travel. The double-bank memory ECU is instructed to perform the installation from the CGW <b>13</b> while the vehicle is ready to travel, and thus performs the installation while the vehicle is ready to travel (corresponding to an installation execution procedure). When the rewrite target ECU <b>19</b> is a single-bank suspend memory ECU or a single-bank memory ECU, the CGW <b>13</b> gives an instruction for the installation during parking. The single-bank suspend memory ECU or the single-bank memory ECU is instructed to perform the installation during parking from the CGW <b>13</b> and thus performs the installation during parking (corresponding to an installation execution procedure).</p><p id="p-0914" num="0913">When it is determined that the installation has been completed in all of the rewrite target ECUs <b>19</b> (S<b>1861</b>: YES), it is determined whether or not the vehicle is parked (S<b>1862</b>), and, when, it is determined that the vehicle is parked (S<b>1862</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to perform activation while the vehicle is parked (S<b>1863</b>), and finishes the installation instruction process. The rewrite target ECU <b>19</b> is instructed to perform the activation from the CGW <b>13</b> while the vehicle is parked, and thus performs the activation (corresponding to an activation execution procedure).</p><p id="p-0915" num="0914">As described above, the rewrite target ECU <b>19</b> performs the rewrite execution control process, and thus executes a rewrite program in an active bank and rewrites an inactive bank while an application program in the active bank is being executed in a configuration having a plurality of data storage banks. A period in which an application program is rewritable is not limited to a parking state, and the application program can be rewritten during vehicle traveling. When the rewrite target ECU <b>19</b> is a double-bank memory ECU, the rewrite target ECU <b>19</b> is instructed to perform installation from the CGW <b>13</b> while the vehicle is ready to travel, and can thus perform the installation while the vehicle is ready to travel. When the rewrite target ECU <b>19</b> is a single-bank suspend memory ECU or a single-bank memory ECU, the rewrite target ECU <b>19</b> is instructed to perform installation during parking from the CGW <b>13</b>, and can thus perform the installation during parking.</p><p id="p-0916" num="0915">(19) Session Establishment Process</p><p id="p-0917" num="0916">The session establishment process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>179</b> to <b>192</b></figref>. The vehicle program rewriting system <b>1</b> performs the session establishment process in the rewrite target ECU <b>19</b>.</p><p id="p-0918" num="0917">As illustrated in <figref idref="DRAWINGS">FIG. <b>179</b></figref>, the ECU <b>19</b> includes an application execution unit <b>105</b><i>a</i>, a wireless rewrite request specifying unit <b>105</b><i>b</i>, and a wired rewrite request specifying unit <b>105</b><i>c </i>in the session establishment unit <b>105</b>. The application execution unit <b>105</b><i>a </i>has a function of arbitrating execution of each program. The wireless rewrite request specifying unit <b>105</b><i>b </i>has a function of specifying a program rewrite request in a wireless manner. The wired rewrite request specifying unit <b>105</b><i>c </i>has a function of specifying a program rewrite request in a wired manner.</p><p id="p-0919" num="0918"><figref idref="DRAWINGS">FIG. <b>180</b></figref> illustrates a configuration of each program stored in the flash memory. A vehicle control program is a program for realizing a vehicle control function (for example, a steering control function) installed in the ECU <b>19</b>. A wired diagnosis program is a program for diagnosing the ECU <b>19</b> from the outside of the vehicle in a wired manner. A wireless diagnosis program is a program for diagnosing the ECU <b>19</b> from the outside of the vehicle in a wireless manner. A wireless rewrite program is a program for rewriting a program that is acquired from the outside of the vehicle in a wireless manner. A wired rewrite program is a program for rewriting a program that is acquired from the outside of the vehicle in a wired manner. The vehicle control program is located in the application area as a first program. The wired diagnosis program and the wired rewrite program are located in the application area as a second program. The wireless diagnosis program and the wireless rewrite program are located in the application area as a third program. In other words, the second program is a program for performing wired special processes except vehicle control, and the third program is a program for performing wireless special processes except the vehicle control. The wired rewrite program may not be located in the application area but may be located in the boot area as a fourth program.</p><p id="p-0920" num="0919">The application execution unit <b>105</b><i>a </i>controls the first program, the second program, and the third program to be executable simultaneously (performs non-exclusive control). The application execution unit <b>105</b><i>a </i>makes, for example, the vehicle control program, the wired diagnosis program, and the wireless diagnosis program executable simultaneously. That is, the application execution unit <b>105</b><i>a </i>can simultaneously execute vehicle control, wired diagnosis of the ECU <b>19</b>, and wireless diagnosis of the ECU <b>19</b>. Similarly, the application execution unit <b>105</b><i>a </i>performs control such that the vehicle control program, the wired diagnosis program, and the wireless rewrite program can be executed simultaneously, the vehicle control program, the wired rewrite program, and the wireless diagnosis program can be executed simultaneously, and the vehicle control program, the wired rewrite program, and the wireless rewrite program can be executed simultaneously.</p><p id="p-0921" num="0920">On the other hand, the application execution unit <b>105</b><i>a </i>performs exclusive control such that the respective programs in the second program cannot be executed simultaneously. Similarly, the application execution unit <b>105</b><i>a </i>performs exclusive control such that the respective programs in the third program cannot be executed simultaneously. The application execution unit <b>105</b><i>a </i>subjects, for example, the wired diagnosis program and the wired rewrite program to exclusive control, and subjects the wireless diagnosis program and the wireless rewrite program to exclusive control. That is, the application execution unit <b>105</b><i>a </i>executes only one program in the wired special processes. Similarly, the application execution unit <b>105</b><i>a </i>executes only one program in the wireless special processes.</p><p id="p-0922" num="0921">In other words, it may be said that the wireless rewrite program is located inside the wireless diagnosis program and is embedded as a part of the wireless diagnosis program. That is, with the configuration in which the wireless rewrite program is located in the wireless diagnosis program, he application execution unit <b>105</b><i>a </i>performs control such that the wireless rewrite program is executed while continuing execution of the vehicle control program and the wired diagnosis program when a state transition is made from a default session or a wireless diagnosis session to a wireless rewrite session as will be described later while executing the vehicle control program and the wired diagnosis program. The application execution unit <b>105</b><i>a </i>initiates to execute the wireless rewrite program while continuing execution of the vehicle control program and the wired diagnosis program, and thus makes the vehicle control program, the wired diagnosis program, and the wireless rewrite program executable simultaneously. That is, the application execution unit <b>105</b><i>a </i>performs control such that vehicle control, wired diagnosis of the ECU <b>19</b>, and wireless rewriting of an application program can be executed simultaneously.</p><p id="p-0923" num="0922">Here, a situation occurs in which wired diagnosis, wireless diagnosis, wired rewriting, and wireless rewriting cannot be executed simultaneously depending on specific contents of a diagnosis process and a rewrite process. For example, in a case where wired rewriting and wireless rewriting are rewriting of the same area, both of the processes collide with each other. Thus, the application execution unit <b>105</b><i>a </i>performs exclusive control on the wired diagnosis program and the wireless diagnosis program according to specific contents of a process or a request, and performs exclusive control on the wired rewrite program and the wireless rewrite program. Normal vehicle control may not be continued depending on contents of the diagnosis process. For example, in a case of the diagnosis process in which the ECU is operated and an operation result is read, the diagnosis process cannot be executed simultaneously with the normal vehicle control. In this case, the application execution unit <b>105</b><i>a </i>performs arbitration control of causing the vehicle control program to wait and executing the wired or wireless diagnosis program.</p><p id="p-0924" num="0923">On the other hand, in a case where the wired rewrite program is not located in the application area but is located in the boot area as the fourth program, the application execution unit <b>105</b><i>a </i>performs arbitration control which is partially different from the above-described arbitration control. The wired rewrite program is located as the fourth program outside the wired diagnosis program as indicated by a dashed line in <figref idref="DRAWINGS">FIG. <b>180</b></figref>, and is not embedded as a part of the wired diagnosis program. In this case, when the fourth program is executed, the application execution unit <b>105</b><i>a </i>performs exclusive control so as to finish the first to third programs. That is, the application execution unit <b>105</b><i>a </i>switches from a mode of executing the first to third programs to a dedicated mode of executing the fourth program. In other words, regarding the wired rewrite program, with the configuration in which the wired rewrite program is located outside the wired diagnosis program, control is performed such that, when a state transition is made from the wired diagnosis session to the wired rewrite session as will be described later while the vehicle control program and the wireless diagnosis program are being executed, execution of the vehicle control program and the wireless diagnosis program is stopped, and execution of the wired rewrite program is initiated. The application execution unit <b>105</b><i>a </i>stops execution of the vehicle control program and the wireless diagnosis program and initiates execution of the wired rewrite program, and thus the vehicle control program, the wireless diagnosis program, and the wired rewrite program cannot be executed simultaneously, and only the wired rewrite program can be executed. That is, the application execution unit <b>105</b><i>a </i>performs control such that the vehicle control, the wireless diagnosis of the ECU <b>19</b>, and the wired rewriting of an application program cannot be executed simultaneously, and only wired rewriting of the application program can be executed.</p><p id="p-0925" num="0924">As illustrated in <figref idref="DRAWINGS">FIG. <b>181</b></figref>, the application execution unit <b>105</b><i>a </i>manages a default state (default session), a wired diagnosis state (wired diagnosis session), and a wired rewrite state (wired rewrite session) as a first state related to the wired special processes. As a second state related to the wireless special processes, a default state (default session) and a wireless rewrite state (wireless rewrite session) are managed, and an internal operation state is managed.</p><p id="p-0926" num="0925">As a state transition of the first state, the application execution unit <b>105</b><i>a </i>performs exclusive state transition among the default session in which vehicle control is possible in accordance with the diagnosis communication standard, the wired diagnosis session in which wired diagnosis of the ECU <b>19</b> is possible from the outside of the vehicle, and the wired rewrite session in which rewriting of an application program acquired from the outside of the vehicle in a wired manner is possible. The exclusive state transition of the session indicates that the sessions cannot be established simultaneously, and the non-exclusive state transition of the session indicates that the sessions can be established simultaneously.</p><p id="p-0927" num="0926">The default session in the first state is a mode indicating a state in which the wired special process is not performed, and is a state in which vehicle control can be executed. It may also be said that the default session is a mode in which a process that does not influence the vehicle control at all, for example, a diagnosis program that is not related to the vehicle control, may be executed. The diagnosis program not related to the vehicle control is a program for reading information such as a trouble code. The wired diagnosis session is a mode of executing a diagnosis program related to diagnosis of the ECU <b>19</b>. In a case of the occurrence of a state in which at least the vehicle control may be influenced by executing the diagnosis program, the default session transitions to the wired diagnosis session. The diagnosis program related to diagnosis of the ECU <b>19</b> is a program for performing communication stoppage, diagnosis masking, actuator driving, and the like. The wired rewrite session is a mode of rewriting an application program acquired from the outside of the vehicle in a wired manner.</p><p id="p-0928" num="0927">The application execution unit <b>105</b><i>a </i>performs the session state transition in the first state as follows. When a wired diagnosis request is generated in a state of a first default session, the application execution unit <b>105</b><i>a </i>makes a transition from the first default session to the wired diagnosis session in response to a diagnosis session transition request, and executes a wired diagnosis process. The application execution unit <b>105</b><i>a </i>makes a transition from the wired diagnosis session to the first default session when a session return request is generated, a timeout is generated, the power is turned off, or a legal service is received in a state of the wired diagnosis session. When a wired rewrite request is generated in a state of the first default session, the application execution unit <b>105</b><i>a </i>makes a transition from the first default session to the wired diagnosis session in response to a diagnosis session transition request, then makes a transition from the wired diagnosis session to the wired rewrite session in response to a rewrite session transition request, and executes a wired rewrite process. The application execution unit <b>105</b><i>a </i>makes a transition from the wired rewrite session to the first default session when a session restoration request is generated, a timeout is generated, the power is turned off, or a legal service is received in a state of the wired rewrite session. The application execution unit <b>105</b><i>a </i>maintains the current session without making a transition in response to a session maintenance request.</p><p id="p-0929" num="0928">As a state transition of the second state, the application execution unit <b>105</b><i>a </i>makes an exclusive state transition between a default session in which the vehicle control is possible in accordance with the diagnosis communication standard and a wireless rewrite session related to rewriting of an application program acquired from the outside of the vehicle in a wireless manner. The wireless rewrite session is a mode of rewriting an application program acquired from the outside of the vehicle in a wireless manner.</p><p id="p-0930" num="0929">The application execution unit <b>105</b><i>a </i>performs the session state transition in the second state as follows. When a wireless rewrite request is generated in a state of a second default session, the application execution unit <b>105</b><i>a </i>makes a transition from the second default session to the wireless rewrite session in response to a rewrite session transition request, and executes a wireless rewrite process. The application execution unit <b>105</b><i>a </i>makes a transition from the wireless rewrite session to the second default session when a session return request is generated, a timeout occurs, or the power is turned off in a state of the wireless rewrite session. The application execution unit <b>105</b><i>a </i>maintains the current session without making a transition in response to a session maintenance request.</p><p id="p-0931" num="0930">The application execution unit <b>105</b><i>a </i>manages the first state related to the wired special process and the second state related to the wireless special process while executing the vehicle control program as the first program. For example, when a wired diagnosis request is generated in the default session in both of the first state and the second state, the application execution unit <b>105</b><i>a </i>causes the first state to transition to the wired diagnosis session while continuing the vehicle control program, and initiates execution of the wired diagnosis program. In this state, when a wireless rewrite request is generated, the application execution unit <b>105</b><i>a </i>causes the second state to transition to the wireless rewrite session while continuing execution of the vehicle control program and the wired diagnosis program, and initiates execution of the wireless rewrite program. In this state, when a wired rewrite request is generated, the application execution unit <b>105</b><i>a </i>finishes, for example, the execution of the wireless rewrite program, causes the second state to transition to the default session, finishes the execution of the wired diagnosis program, causes the first state to transition to the wired rewrite session, and initiates execution of the wired rewrite program. The application execution unit <b>105</b><i>a </i>performs an exclusive state transition such that the wired rewrite session in the first state and the wireless rewrite session in the second state are not established simultaneously, in order to prevent write processes in the same memory area from colliding with each other (exclusive control).</p><p id="p-0932" num="0931">The wireless rewrite request specifying unit <b>105</b><i>b </i>determines identification information regarding a rewrite request received from the outside, and specifies a wireless rewrite request. That is, when reprogramming data is downloaded from the center device <b>3</b> to the DCM <b>12</b>, and the CGW <b>13</b> distributes the reprogramming data transferred from the DCM <b>12</b> to the rewrite target ECU <b>19</b>, the wireless rewrite request specifying unit <b>105</b><i>b </i>specifies the wireless rewrite request by receiving the identification information indicating the wireless rewrite request from the CGW <b>13</b> along with the reprogramming data.</p><p id="p-0933" num="0932">The wired rewrite request specifying unit <b>105</b><i>c </i>determines identification information regarding a rewrite request received from the outside, and specifies a wired rewrite request. That is, when the tool <b>23</b> is connected to the DLC connector <b>22</b>, and the CGW <b>13</b> distributes reprogramming data transferred from the tool <b>23</b> to the rewrite target ECU <b>19</b>, the wired rewrite request specifying unit <b>105</b><i>c </i>specifies the wired rewrite request by receiving the identification information indicating the wired rewrite request along with the reprogramming data from the CGW <b>13</b>.</p><p id="p-0934" num="0933">The identification information may be, for example, information corresponding to different identification IDs in the wired rewrite request and the wireless rewrite request, and may be information corresponding to the same identification ID but different data in the wired rewrite request and the wireless rewrite request. That is, any information may be used as long as the wired rewrite request and the wireless rewrite request can be differentiated from each other.</p><p id="p-0935" num="0934">In the application execution unit <b>105</b><i>a</i>, in <figref idref="DRAWINGS">FIG. <b>181</b></figref>, the configuration of managing the two states of the default session and the wireless rewrite session as the second state related to the wireless special process has been described, but, as illustrated in <figref idref="DRAWINGS">FIGS. <b>182</b> and <b>183</b></figref>, there may be a configuration of managing three states of the default session, the wireless diagnosis session, and the wireless rewrite session as the second state. The wireless diagnosis session is a mode of executing a wireless diagnosis program for diagnosing the ECU <b>19</b> from the outside of the vehicle in a wireless manner. In a case of executing a wireless diagnosis program that can influence at least the vehicle control, a transition is made to the wireless diagnosis session.</p><p id="p-0936" num="0935">In a case of the configuration illustrated in <figref idref="DRAWINGS">FIG. <b>182</b></figref>, the application execution unit <b>105</b><i>a </i>performs a state transition of the second state as follows. When a wireless diagnosis request is generated in a state of the second default session, the application execution unit <b>105</b><i>a </i>makes a transition from the second default session to the wireless diagnosis session in response to a diagnosis session transition request, and executes a wireless diagnosis process. The application execution unit <b>105</b><i>a </i>makes a transition from the wireless diagnosis session to the second default session when a session return request is generated a timeout is generated, or the power is turned off in a state of the wireless diagnosis session. When a wireless rewrite request is generated in a state of the second default session, the application execution unit <b>105</b><i>a </i>makes a transition from the second default session to the wireless diagnosis session in response to a diagnosis session transition request, then makes a transition from the wireless diagnosis session to the wireless rewrite session in response to a rewrite session transition request, and executes a wireless rewrite process. The application execution unit <b>105</b><i>a </i>makes a transition from the wireless rewrite session to the second default session when a session return request is generated, a timeout is generated, or the power is turned off in a state of the wireless rewrite session.</p><p id="p-0937" num="0936">In a case of the configuration illustrated in <figref idref="DRAWINGS">FIG. <b>183</b></figref>, the application execution unit <b>105</b><i>a </i>performs a state transition of the second state as follows. When a wireless diagnosis request is generated in a state of the second default session, the application execution unit <b>105</b><i>a </i>makes a transition from the second default session to the wireless diagnosis session in response to a diagnosis session transition request, and executes a wireless diagnosis process. The application execution unit <b>105</b><i>a </i>makes a transition from the wireless diagnosis session to the second default session when a session return request is generated a timeout is generated, or the power is turned off in a state of the wireless diagnosis session. When a wireless rewrite request is generated in a state of the second default session, the application execution unit <b>105</b><i>a </i>makes a transition from the second default session to the wireless diagnosis session in response to a diagnosis session transition request, then makes a transition from the wireless diagnosis session to the wireless rewrite session in response to a rewrite session transition request, or makes a transition from the second default session to the wireless rewrite session in response to the rewrite session transition request, and executes the wireless rewrite process. The application execution unit <b>105</b><i>a </i>makes a transition from the wireless rewrite session to the second default session when a session return request is generated, a timeout is generated, or the power is turned off in a state of the wireless rewrite session.</p><p id="p-0938" num="0937">In the wired diagnosis session in the first state and the wireless diagnosis session in the second state, the same diagnosis program may be executed or different diagnosis programs may be executed. In the wired rewrite session in the first state and the wireless rewrite session in the second state, the same rewrite program may be executed or different rewrite programs may be executed. For example, a common rewrite program such as erasure or writing for a memory may be executed.</p><p id="p-0939" num="0938">Arbitration of each session in the first state and each session in the second state in the configurations illustrated in <figref idref="DRAWINGS">FIGS. <b>182</b> and <b>183</b></figref> will be described. As described in <figref idref="DRAWINGS">FIG. <b>180</b></figref>, a description will be made of a case where the wired diagnosis program is located in the application area as the second program, the wireless diagnosis program and the wireless rewrite program are located in the application area as the third program, and the wired diagnosis program is located in the boot area as the fourth program. In other words, a description will be made of a configuration in which the wireless rewrite program is embedded as a part of the wireless diagnosis program, but the wired rewrite program is not embedded as a part of the wired diagnosis program. In this case, arbitration of program execution in each session in the first state and the second state is as illustrated in <figref idref="DRAWINGS">FIG. <b>184</b></figref>.</p><p id="p-0940" num="0939">In a case where the second state is the wireless rewrite session and the first state is the default session, the application execution unit <b>105</b><i>a </i>executes the wireless rewrite program while executing the vehicle control program. In a case where the second state is the wireless rewrite session and the first state is the wired diagnosis session, the application execution unit <b>105</b><i>a </i>simultaneously executes the wireless rewrite program and the wired diagnosis program while executing the vehicle control program.</p><p id="p-0941" num="0940">On the other hand, in a case where the first state is the wired rewrite session and the second state is the default session, the application execution unit <b>105</b><i>a </i>finishes the vehicle control program and executes only the wired rewrite program. In a case where the first state is the wired rewrite session and the second state is the wireless diagnosis session, the application execution unit <b>105</b><i>a </i>finishes the wireless diagnosis program and the vehicle control program, and executes only the wired rewrite program. That is, the application execution unit <b>105</b><i>a </i>exclusively controls the first to third programs as a dedicated mode of executing only the wired rewrite program that is the fourth program.</p><p id="p-0942" num="0941">In a configuration in which the wired diagnosis program and the wired rewrite program are located in the application area as the second program, the arbitration of each program is partially different from that in <figref idref="DRAWINGS">FIG. <b>184</b></figref>. That is, in a configuration in which the wireless rewrite program is embedded as a part of the wireless diagnosis program and the wired rewrite program is embedded as a part of the wired diagnosis program, arbitration of program execution in each session in the first state and the second state is as illustrated in <figref idref="DRAWINGS">FIG. <b>185</b></figref>. In this case, when the first state is the wired rewrite session and the second state is the default session, the application execution unit <b>105</b><i>a </i>executes the wired rewrite program while executing the vehicle control program. In a case where the first state is the wired rewrite session and the second state is the wireless diagnosis session, the application execution unit <b>105</b><i>a </i>simultaneously executes the wired rewrite program and the wireless diagnosis program while executing the vehicle control program.</p><p id="p-0943" num="0942">Next, an operation of the above-described configuration will be described with reference to <figref idref="DRAWINGS">FIGS. <b>186</b> to <b>190</b></figref>. In the ECU <b>19</b>, the microcomputer <b>33</b> executes a session establishment program and thus performs the session establishment process.</p><p id="p-0944" num="0943">When the microcomputer <b>33</b> is started by detecting the supply of power, the microcomputer <b>33</b> executes the session establishment program to perform a state transition management process, and performs a state transition management process of managing a state transition of the first state and a state transition management process of managing a state transition of the second state. Each state transition management process will be described below. A description will be made of a case where the application execution unit <b>105</b><i>a </i>manages the second state by using the configuration illustrated in <figref idref="DRAWINGS">FIG. <b>181</b></figref>, that is, the configuration having no wireless diagnosis session.</p><p id="p-0945" num="0944">(19-1) State Transition Management Process of First State</p><p id="p-0946" num="0945">When the microcomputer <b>33</b> is started by detecting the supply of power, and initiates the state transition management process of the first state, the microcomputer <b>33</b> determines a rewrite completion flag, and determines whether or not rewriting of the previous application program has been completed normally (S<b>1901</b>). When it is determined that the rewrite completion flag is positive, and it is determined that rewriting of the previous application program has been completed normally (S<b>1901</b>: YES), the microcomputer <b>33</b> causes the first state to transition to the default session (S<b>1902</b>). That is, the microcomputer <b>33</b> causes the first state to transition to the default session, and thus initiates the vehicle control process.</p><p id="p-0947" num="0946">When the vehicle control process is initiated by executing the vehicle control program, while executing the vehicle control process, the microcomputer <b>33</b> determines whether or not a wired diagnosis request has been generated (S<b>1903</b>), determines whether or not a wired rewrite request has been generated (S<b>1904</b>), and determines whether a completion condition for the state transition management is established (S<b>1905</b>). When it is determined that a wired diagnosis request has been generated (S<b>1903</b>: YES) while executing the vehicle control process, the microcomputer <b>33</b> causes the first state to transition from the default session to the wired diagnosis session (S<b>1906</b>), and executes the wired diagnosis program to initiate the wired diagnosis process (S<b>1907</b>). It is determined whether the completion condition for the wired diagnosis process is established (S<b>1908</b>), and, when it is determined that the completion condition for the wired diagnosis process is established (S<b>1908</b>: YES), the microcomputer <b>33</b> finishes the wired diagnosis program to finish the wired diagnosis process (S<b>1909</b>), and causes the first state to transition from the wired diagnosis session to the default session (S<b>1910</b>).</p><p id="p-0948" num="0947">When it is determined that a wired rewrite request has been generated (S<b>1904</b>: YES) while executing the vehicle control process, the microcomputer <b>33</b> initiates an exclusive rewrite process at the time of generation of a wired rewrite request (S<b>1911</b>). That is, the process is a process for performing exclusive control such that the wired rewrite process and the wireless rewrite process do not collide with each other. When the exclusive rewrite process at the time of generation of the wired rewrite request is initiated, the microcomputer <b>33</b> determines whether or not a transition to the wireless rewrite session is in progress in the second state, that is, whether or not the second state is the wireless rewrite session (S<b>1921</b>). When it is determined that the transition to the wireless rewrite session is not in progress in the second state (S<b>1921</b>: NO), the microcomputer <b>33</b> specifies that the first state can transition to the wired rewrite session (S<b>1922</b>). The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wired rewrite request, and returns to the state transition management process of the first state.</p><p id="p-0949" num="0948">When it is determined that the transition to the wireless rewrite session is in progress in the second state (S<b>1921</b>: YES), the microcomputer <b>33</b> determines whether or not to perform exclusive control by giving priority to either the wired rewrite session or the wireless rewrite session. Specifically, the microcomputer <b>33</b> determines whether or not any of a wired rewrite session priority condition, a wireless rewrite session priority condition, and a rewrite session priority condition during transition is established (S<b>1923</b> to S<b>1925</b>). The wired rewrite session priority condition is a condition that the wired rewrite session is prioritized to the wireless rewrite session. The wireless rewrite session priority condition is a condition that the wireless rewrite session is prioritized to the wired rewrite session. The rewrite session priority condition during transition is a condition that a rewrite session during transition is prioritized, that is, a session of which a transition is performed earlier is prioritized. Which of these priority conditions is employed is set in advance, and, for example, a priority condition flag may be set for the vehicle, and the priority condition flag may be set for each rewrite ECU.</p><p id="p-0950" num="0949">When it is determined that the wired rewrite session priority condition is established (S<b>1923</b>: YES), the microcomputer <b>33</b> causes the second state to transition from the wireless rewrite session to the default session in response to a session return request, stops the wireless rewriting (S<b>1926</b>), and specifies that the first state can transition to the wired rewrite session (S<b>1922</b>). The microcomputer <b>33</b> finishes the wireless rewrite program in accordance with the transition to the default session. The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wired rewrite request, and returns to the state transition management process of the first state.</p><p id="p-0951" num="0950">When it is determined that the wireless rewrite session priority condition is established (S<b>1924</b>: YES), the microcomputer <b>33</b> discards the wired rewrite request and continues the wireless rewriting (S<b>1927</b>). That is, the microcomputer <b>33</b> maintains the second state in the wireless rewrite session, continues to execute the wireless rewrite program, and specifies that the first state cannot transition to the wired rewrite session (S<b>1928</b>). The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wired rewrite request, and returns to the state transition management process of the first state.</p><p id="p-0952" num="0951">When it is determined that the rewrite session priority condition during transition is established (S<b>1925</b>: YES), also in this case, the microcomputer <b>33</b> discards the wired rewrite request and continues the wireless rewriting (S<b>1927</b>). That is, the microcomputer <b>33</b> maintains the second state in the wireless rewrite session, continues to execute the wireless rewrite program, and specifies that the first state cannot transition to the wired rewrite session (S<b>1928</b>). The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wired rewrite request, and returns to the state transition management process of the first state. The microcomputer <b>33</b> executes the exclusive rewrite process at the time of generation of the wired rewrite request as mentioned above, and thus the wired rewrite session and the wireless rewrite session are exclusively controlled not to be established simultaneously.</p><p id="p-0953" num="0952">When the microcomputer <b>33</b> returns to the state transition management process of the first state, the microcomputer <b>33</b> determines whether or not the first state can transition to the wired rewrite session as a result of the exclusive rewrite process at the time of generation of the wired rewrite request (S<b>1912</b>). When it is specified and thus determined that the first state can transition to the wired rewrite session through the exclusive rewrite process at the time of generation of the wired rewrite request (S<b>1912</b>: YES), the microcomputer <b>33</b> causes the first state to transition from the default session to the wired rewrite session via the wired diagnosis session (S<b>1913</b>), stops the vehicle control process, and initiates the wired rewrite process (S<b>1914</b>). The microcomputer <b>33</b> finishes the vehicle control program in accordance with the transition to the wired rewrite session.</p><p id="p-0954" num="0953">It is determined whether the completion condition for the wired rewrite process is established (S<b>1915</b>), and, when it is determined that a completion condition for the wired rewrite process is established (S<b>1915</b>: YES), the microcomputer <b>33</b> finishes the wired rewrite process (S<b>1916</b>), and causes the first state to transition from the wired rewrite session to the default session (S<b>1917</b>). Here, the completion condition for the wired rewrite process is, for example, a case where writing of the entire application program has been completed and integrity verification is executed.</p><p id="p-0955" num="0954">When it is specified and thus determined that the first state cannot transition to the wired rewrite session through the exclusive rewrite process at the time of generation of the wired rewrite request (S<b>1912</b>: NO), the microcomputer <b>33</b> does not cause the first state to transition from the default session to the wired rewrite session via the wired diagnosis session. That is, the microcomputer <b>33</b> maintains the first state in the default session. When it is determined that a completion condition for the state transition management is established (S<b>1905</b>: YES), the microcomputer <b>33</b> completes the state transition management process of the first state.</p><p id="p-0956" num="0955">In the above description, a description has been made of a case where, when it is determined that a transition to the wireless rewrite session is in progress in the second state in the exclusive rewrite process at the time of generation of the wired rewrite request, and it is determined that the wired rewrite session priority condition is established, the microcomputer <b>33</b> stops the wireless rewriting in the second state, but the microcomputer <b>33</b> may determine whether or not to stop the wireless rewrite session according to a non-rewritten remaining amount in the wireless rewriting.</p><p id="p-0957" num="0956">When it is determined that the transition to the wireless rewrite session is in progress in the second state (S<b>1921</b>: YES), and it is determined that the wired rewrite session priority condition is established (S<b>1923</b>: YES), the microcomputer <b>33</b> determines whether or not a non-rewritten remaining amount in the wireless rewriting is equal to or larger than a predetermined amount (for example, 20% or more) in the wireless rewrite session during the transition (S<b>1931</b>). When it is determined that the non-rewritten remaining amount in the wireless rewriting is equal to or larger than the predetermined amount (S<b>1931</b>: YES), the microcomputer <b>33</b> causes the second state to transition from the wireless rewrite session to the default session, and stops the wireless rewriting (S<b>1926</b>). The microcomputer <b>33</b> finishes the wireless rewrite program in accordance with the transition to the default session. When it is determined that the non-rewritten remaining amount of the wireless rewriting is not equal to or larger than the predetermined amount (S<b>1931</b>: NO), the microcomputer <b>33</b> discards the wired rewrite request and continues the wireless rewriting (S<b>1927</b>). That is, the microcomputer <b>33</b> stops the wireless rewrite session when the remaining time until completion of the wireless rewriting is relatively long, but does not stop and continues the wireless rewrite session when the remaining time until completion of the wireless rewriting is relatively short.</p><p id="p-0958" num="0957">(19-2) State Transition Management Process of Second State</p><p id="p-0959" num="0958">When the microcomputer <b>33</b> is started by detecting the supply of power, and initiates the state transition management process of the second state, the microcomputer <b>33</b> determines a rewrite completion flag, and determines whether or not rewriting of the previous application program has been completed normally (S<b>1941</b>). When it is determined that the rewrite completion flag is positive, and it is determined that rewriting of the previous application program has been completed normally (S<b>1941</b>: YES), the microcomputer <b>33</b> causes the second state to transition to the default session (S<b>1942</b>). That is, the microcomputer <b>33</b> causes the second state to transition to the default session, and thus executes the vehicle control program to initiate the vehicle control process.</p><p id="p-0960" num="0959">When the vehicle control process is initiated, the microcomputer <b>33</b> determines whether or not a wireless rewrite request has been generated (S<b>1943</b>), and determines whether a completion condition for the state transition management is established (S<b>1944</b>). When it is determined that a wireless diagnosis request has been generated (S<b>1943</b>: YES) while executing the vehicle control process, the microcomputer <b>33</b> initiates an exclusive rewrite process at the time of generation of a wireless rewrite request (S<b>1944</b>). When the exclusive rewrite process at the time of generation of the wireless rewrite request is initiated, the microcomputer <b>33</b> determines whether or not a transition to the wired rewrite session is in progress in the first state, that is, whether or not the first state is the wired rewrite session (S<b>1961</b>). When it is determined that the transition to the wired rewrite session is not in progress in the first state (S<b>1961</b>: NO), the microcomputer <b>33</b> specifies that transition to the wireless rewrite session can occur (S<b>1962</b>). The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wireless rewrite request, and returns to the state transition management process of the second state.</p><p id="p-0961" num="0960">When it is determined that the transition to the wired rewrite session is in progress in the first state (S<b>1961</b>: YES), the microcomputer <b>33</b> determines whether or not to perform exclusive control by giving priority to either the wired rewrite session or the wireless rewrite session. Specifically, the microcomputer <b>33</b> determines whether or not any of a wireless rewrite session priority condition, a wired rewrite session priority condition, and a rewrite session priority condition during transition is established (S<b>1963</b> to S<b>1965</b>).</p><p id="p-0962" num="0961">When it is determined that the wireless rewrite session priority condition is established (S<b>1963</b>: YES), the microcomputer <b>33</b> causes the first state to transition from the wired rewrite session to the default session in response to a session return request, stops the wired rewriting (S<b>1966</b>), and specifies that the second state can transition to the wireless rewrite session (S<b>1962</b>). The microcomputer <b>33</b> finishes the wired rewrite program in accordance with the transition to the default session. The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wireless rewrite request, and returns to the state transition management process of the second state.</p><p id="p-0963" num="0962">When it is determined that the priority condition for the wired rewrite session is established (S<b>1964</b>: YES), the microcomputer <b>33</b> discards the wireless rewrite request and continues the wired rewriting (S<b>1967</b>). That is, the microcomputer <b>33</b> maintains the first state in the wired rewrite session, continues execution of the wired rewrite program, and specifies that the second state cannot transition to the wireless rewrite session (S<b>1968</b>). The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wireless rewrite request, and returns to the state transition management process of the second state.</p><p id="p-0964" num="0963">When it is determined that the rewrite session priority condition during transition is established (S<b>1965</b>: YES), also in this case, the microcomputer <b>33</b> discards the wireless rewrite request and continues the wired rewriting (S<b>1967</b>). That is, the microcomputer <b>33</b> maintains the first state in the wired rewrite session, continues execution of the wired rewrite program, and specifies that the second state cannot transition to the wireless rewrite session (S<b>1968</b>). The microcomputer <b>33</b> finishes the exclusive rewrite process at the time of generation of the wireless rewrite request, and returns to the state transition management process of the second state. The microcomputer <b>33</b> executes the exclusive rewrite process at the time of generation of the wireless rewrite request as mentioned above, and thus the wired rewrite session and the wireless rewrite session are exclusively controlled not to be established simultaneously.</p><p id="p-0965" num="0964">When the microcomputer <b>33</b> returns to the state transition management process of the second state, the microcomputer <b>33</b> determines whether or not the second state can transition to the wireless rewrite session as a result of the exclusive rewrite process at the time of generation of the wireless rewrite request (S<b>1945</b>). When it is specified and thus determined that the second state can transition to the wireless rewrite session through the exclusive rewrite process at the time of generation of the wireless rewrite request (S<b>1945</b>: YES), the microcomputer <b>33</b> causes the second state to transition from the default session to the wireless rewrite session (S<b>1946</b>), and executes the wireless rewrite program to initiate the wireless rewrite process (S<b>1847</b>). It is determined whether the completion condition for the wireless rewrite process is established (S<b>1948</b>), and, when it is determined that a completion condition for the wireless rewrite process is established (S<b>1948</b>: YES), the microcomputer <b>33</b> finishes the wireless rewrite process (S<b>1949</b>), and causes the second state to transition from the wireless rewrite session to the default session (S<b>1950</b>). The microcomputer <b>33</b> finishes the wireless rewrite program in accordance with the transition to the default session. Here, the completion condition for the wireless rewrite process is, for example, a case where writing of the entire application program has been completed and the integrity verification is executed.</p><p id="p-0966" num="0965">When it is specified and thus determined that the second state cannot transition to the wireless rewrite session through the exclusive rewrite process at the time of generation of the wireless rewrite request (S<b>1945</b>: NO), the microcomputer <b>33</b> does not cause the second state to transition from the default session to the wireless rewrite session. That is, the microcomputer <b>33</b> maintains the second state in the default session. When it is determined that a completion condition for the state transition management is established (S<b>1951</b>: YES), the microcomputer <b>33</b> finishes the state transition management process of the second state.</p><p id="p-0967" num="0966">In the above description, a description has been made of a case where the application execution unit <b>105</b><i>a </i>can execute the program related to the wired special process and the program related to the wireless special process independently (simultaneously), but there may be a configuration in which the wired diagnosis program and the wireless diagnosis program are shared as illustrated in <figref idref="DRAWINGS">FIG. <b>188</b></figref>. In the configuration, the vehicle control program is located in the application area as the first program, and the diagnosis program (the wired diagnosis program and the wireless diagnosis program) and the wireless rewrite program are located in the application area as the second program. The wired rewrite program may be located in the application area as the second program, or may be located in the boot area as the third program. The application execution unit <b>105</b><i>a </i>simultaneously executes the first program and the second program. That is, the application execution unit <b>105</b><i>a </i>performs control such that the vehicle control program and the common diagnosis program can be executed simultaneously. On the other hand, the application execution unit <b>105</b><i>a </i>exclusively controls execution of each program forming the second program. That is, only one of the wired diagnosis program, the wireless diagnosis program, the wireless rewrite program, and the wired rewrite program is controlled to be operated.</p><p id="p-0968" num="0967">As illustrated in <figref idref="DRAWINGS">FIG. <b>189</b></figref>, the application execution unit <b>105</b><i>a </i>manages the default state (default session), the diagnosis state (diagnosis session), the wired rewrite state (wired rewrite session), and the wireless rewrite state (wireless rewrite session) as the states, and manages an internal operation state. The states managed here are not managed independently in a wired and wireless manner, but are managed as one state in a mixed manner.</p><p id="p-0969" num="0968">Also in this configuration, the application execution unit <b>105</b><i>a </i>initiates execution of the diagnosis program while executing the vehicle control program. The application execution unit <b>105</b><i>a </i>initiates execution of the wireless rewrite program or the wired rewrite program while executing the vehicle control program. On the other hand, the application execution unit <b>105</b><i>a </i>exclusively controls execution of the wireless diagnosis program and the wired diagnosis program. The application execution unit <b>105</b><i>a </i>also exclusively controls execution of the wired diagnosis program and the wireless diagnosis program, and the wired rewrite program and the wireless rewrite program. That is, the application execution unit <b>105</b><i>a </i>exclusively controls execution of each program forming the second program.</p><p id="p-0970" num="0969">Here, in a case where the wired rewrite program is located in the boot area as the third program, the application execution unit <b>105</b><i>a </i>exclusively controls execution of the third program, and the first and second programs. That is, in a case where the wired rewrite program is executed, the first program and the second program are finished and are operated in a dedicated mode.</p><p id="p-0971" num="0970">As illustrated in <figref idref="DRAWINGS">FIG. <b>189</b></figref>, when a diagnosis request is generated, the application execution unit <b>105</b><i>a </i>makes a transition to the diagnosis session while continuing execution of the vehicle control program, and initiates execution of the diagnosis program. In this state, when a wireless rewrite request is generated, the application execution unit <b>105</b><i>a </i>finishes the diagnosis program, makes a transition to the wireless rewrite session, and initiates execution of the wireless rewrite program. Execution of the vehicle control program is continued. On the other hand, in a case where a wired rewrite request is generated, the application execution unit <b>105</b><i>a </i>finishes the diagnosis program and the vehicle control program, makes a transition to the wired rewrite session, and initiates execution of the wired rewrite program.</p><p id="p-0972" num="0971">Even when the wireless rewrite program is located inside the diagnosis program, the application execution unit <b>105</b><i>a </i>stops execution of the vehicle control program and the diagnosis program and then initiates execution of the wireless rewrite program when a state transition is made from the diagnosis session to the wireless rewrite session during execution of the vehicle control program and the diagnosis program. In a case where there is no session, the process can be continued.</p><p id="p-0973" num="0972">When the wired rewrite program is located outside the diagnosis program, the application execution unit <b>105</b><i>a </i>stops execution of the vehicle control program and the wireless diagnosis program and initiates execution of the wired rewrite program when a state transition is made from the diagnosis session to the wired rewrite session during execution of the vehicle control program and the diagnosis program. That is, the application execution unit <b>105</b><i>a </i>performs control such that the vehicle control, the wired or wireless diagnosis of the ECU <b>19</b>, and the wired rewriting of an application program cannot be executed simultaneously, and only the wired rewriting of the application program can be executed.</p><p id="p-0974" num="0973">As described above, the ECU <b>19</b> performs the session establishment process, thus executes the state transition management process of the first state and the state transition management process of the second state, manages a state transition of each session of the first state and the second state, and non-exclusively establishes the default session or the wired diagnosis session of the first state and the wireless rewrite session of the second state. The vehicle control program or the diagnosis program for the ECU <b>19</b> and the wireless rewrite program are controlled to be executed non-exclusively in response to requests for the vehicle control or the diagnosis of the ECU <b>19</b> and the wireless rewriting of a program, and thus it is possible to appropriately arbitrate various requests from the outside.</p><p id="p-0975" num="0974">In the ECU <b>19</b>, the wired rewrite session and the wireless rewrite session are exclusively established. The wired rewrite program and the wireless rewrite program are controlled to be executed exclusively, and wired rewriting of the program and wireless rewriting of the program can be appropriately arbitrated.</p><p id="p-0976" num="0975">In the ECU <b>19</b>, when the wired rewrite session priority condition is established, the wired rewrite session is prioritized to the wireless rewrite session. The wired rewrite session priority condition is set, and thus wired rewriting of the program can be executed prior to wireless rewriting of the program. For example, wired rewriting of a program for which an instruction is given by a maintenance person in a dealer or the like can be executed prior to wireless rewriting of the program for which an instruction is given by a user of a vehicle.</p><p id="p-0977" num="0976">In the ECU <b>19</b>, the wireless rewrite session is prioritized to the wired rewrite session when the wireless rewrite session priority condition is established. The wireless rewrite session priority condition is set, and thus wireless rewriting of a program can be executed prior to wired rewriting of the program. For example, wireless rewriting of a program for which an instruction is given by a user of a vehicle can be executed prior to wired rewriting of the program for which an instruction is given by a maintenance person in a dealer or the like.</p><p id="p-0978" num="0977">In the ECU <b>19</b>, when the rewrite session priority condition during transition is established, a rewrite session during transition is prioritized. The rewrite session priority condition during transition is set, and thus rewriting during transition can be preferentially executed. That is, one of wired rewriting and wireless rewriting, which has been initiated earlier, can be continued without stoppage.</p><p id="p-0979" num="0978">In a configuration having double-bank application areas, the vehicle control program, the diagnosis program, and the wireless rewrite program are located in each application area, and the vehicle control program or the diagnosis program and the wireless rewrite program are executed in parallel (simultaneously). A memory configuration of the flash memory <b>30</b><i>d </i>is devised, and thus the vehicle control program or the diagnosis program and the wireless rewrite program can be executed in parallel.</p><p id="p-0980" num="0979">When a wireless rewrite request is specified during execution of the vehicle control program or the wired diagnosis program, execution of the vehicle control program or the wired diagnosis program is continued, and the wireless rewrite program is executed. When a wireless rewrite request is generated during execution of the vehicle control program or the wired diagnosis program, the vehicle control program or the wired diagnosis program and the wireless rewrite program can be executed in parallel (simultaneously).</p><p id="p-0981" num="0980">When a vehicle control request or a wired diagnosis request is specified during execution of the wireless rewrite program, execution of the wireless rewrite program is continued, and the vehicle control program or the wired diagnosis program is executed. When a vehicle control request or a wired diagnosis request is generated during execution of the wireless rewrite program, the wireless rewrite program and the vehicle control program or the wired diagnosis program can be executed in parallel (simultaneously).</p><p id="p-0982" num="0981">When a wired rewrite request is specified during execution of while the vehicle control program or the wireless diagnosis program, execution of the vehicle control program or the wireless diagnosis program is stopped, and the wired rewrite program is executed. When a wired rewrite request is generated during execution of the vehicle control program or the wireless diagnosis program, only the wired rewrite program can be executed exclusively.</p><p id="p-0983" num="0982">In a case of the reprogramming firmware embedded type in which reprogramming firmware is embedded, the rewrite program is executed by using the firmware located in the application area. It is possible to execute a rewrite process on an application program in an inactive bank without downloading the reprogramming firmware from the outside.</p><p id="p-0984" num="0983">In a case of the reprogramming firmware download type in which reprogramming firmware is downloaded from the outside, the rewrite program is executed by using the firmware downloaded from the outside. It is possible to execute a rewrite process on an application program in an inactive bank after reducing a capacity of a rewrite program in the application area.</p><p id="p-0985" num="0984">Although the double-bank memory having two tangible application areas has been described, the present embodiment is also applicable to a single-bank suspend memory or an external memory having two pseudo-application areas.</p><p id="p-0986" num="0985">Although a description has been made of a case of difference rewriting in which new data is generated from old data and difference reprogramming data, the present embodiment is also applicable to a case of rewriting in which the entire new data is written by deleting old data.</p><p id="p-0987" num="0986">Although a description has been made of a case where an application program of the ECU <b>19</b> is rewritten, the present embodiment is also applicable to a case of rewriting an application program of the CGW <b>13</b>. That is, the flash memory <b>26</b><i>d </i>of the CGW <b>13</b> may have a double-bank configuration equivalent to that of the flash memory <b>30</b><i>d </i>of the ECU <b>19</b>, and the microcomputer <b>26</b> may have a function equivalent to that of the microcomputer <b>33</b> of the ECU <b>19</b>.</p><p id="p-0988" num="0987">(20) Retry Point Specifying Process</p><p id="p-0989" num="0988">The retry point specifying process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>193</b> to <b>197</b></figref>. The vehicle program rewriting system <b>1</b> performs the retry point specifying process in the rewrite target ECU <b>19</b>. The retry point is information indicating a portion corresponding to a completed process in order to resume stopped writing of write data halfway when writing of the write data is stopped in a case where the write data is written a plurality of times. As a case where writing of write data is stopped, for example, there is a case where cancellation occurs due to the user operation, a case where an abnormality such as communication disruption occurs, and a case where ignition switches from an OFF state to an ON state in a parking state.</p><p id="p-0990" num="0989">In the ECU <b>19</b>, the program rewriting unit <b>102</b> shares a series of processes related to rewriting of an application program among a plurality of rewrite programs. The program rewriting unit <b>102</b> includes a first rewrite program for performing a first process and a second rewrite program for performing a second process, and sequentially executes the respective rewrite programs. The first process performed by the first rewrite program is, for example, a memory erasure process of erasing data in the flash memory and a data write process for writing write data. The second process performed by the second rewrite program is, for example, a verification process and a falsification check process.</p><p id="p-0991" num="0990">As illustrated in <figref idref="DRAWINGS">FIG. <b>193</b></figref>, the ECU <b>19</b> includes a first process flag setting unit <b>106</b><i>a</i>, a second process flag setting unit <b>106</b><i>b</i>, and a retry point specifying unit <b>106</b><i>c </i>in the retry point specifying unit <b>106</b>. When the program rewriting unit <b>102</b> executes the first rewrite program, the first process flag setting unit <b>106</b><i>a </i>determines whether or not the program rewriting unit <b>102</b> has completed the first process by using the first rewrite program, and sets a first process flag indicating the determination result. When it is determined that the program rewriting unit <b>102</b> has completed the first process, the first process flag setting unit <b>106</b><i>a </i>sets the first process flag to &#x201c;OK&#x201d;.</p><p id="p-0992" num="0991">When the program rewriting unit <b>102</b> executes the second rewrite program, the second process flag setting unit <b>106</b><i>b </i>determines whether or not the program rewriting unit <b>102</b> has completed the second process by using the second rewrite program, and sets a second process flag indicating the determination result. When it is determined that the program rewriting unit <b>102</b> has completed the second process, the second process flag setting unit <b>106</b><i>b </i>sets the second process flag to &#x201c;OK&#x201d;.</p><p id="p-0993" num="0992">The retry point specifying unit <b>106</b><i>c </i>specifies a retry point when the program rewriting unit <b>102</b> retries rewriting of an application program according to the first process flag and the second process flag in a case where a part of the process related to the rewriting of the program is stopped. The retry point specifying unit <b>106</b><i>c </i>stores a write amount of update data until the stoppage, and requests the CGW <b>13</b> to transmit the update data on the basis of the stored write amount of the update data in a case where the process related to rewriting of the program is resumed. As illustrated in <figref idref="DRAWINGS">FIG. <b>194</b></figref>, the first process flag and the second process flag are stored in the same block of the flash memory of the rewrite target ECU <b>19</b>.</p><p id="p-0994" num="0993">Next, an operation of the retry point specifying unit <b>106</b> in the rewrite target ECU <b>19</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>195</b> to <b>197</b></figref>. The rewrite target ECU <b>19</b> executes a retry point specifying program and thus performs the retry point specifying process. The rewrite target ECU <b>19</b> performs a process flag setting process and a process flag determination process as the retry point specifying process. Each process will be described below.</p><p id="p-0995" num="0994">(20-1) Process Flag Setting Process</p><p id="p-0996" num="0995">When the process flag setting process is initiated, the rewrite target ECU <b>19</b> determines whether or not a pre-process before rewriting of an application program has been completed (S<b>2001</b>). When it is determined that the pre-process before rewriting of the application program has been completed (S<b>2001</b>: YES), the rewrite target ECU <b>19</b> sets the first process flag to &#x201c;NG&#x201d;, sets the second process flag to &#x201c;NG&#x201d;, and stores the set process flags (S<b>2002</b>; corresponding to a first process flag setting procedure and a second process flag setting procedure).</p><p id="p-0997" num="0996">When write data is received from the CGW <b>13</b>, the rewrite target ECU <b>19</b> initiates the first process (S<b>2003</b>) and determines whether or not the first process has been completed (S<b>2004</b>). When it is determined that the first process has been completed (S<b>2004</b>: YES), the rewrite target ECU <b>19</b> sets the first process flag to &#x201c;OK&#x201d; in a state in which the second process flag is still set to &#x201c;NG&#x201d;, and stores the set first process flag (S<b>2005</b>; corresponding to a first process flag setting procedure and a second process flag setting procedure). The rewrite target ECU <b>19</b> stores a write completion address indicating a portion where writing has been completed in the flash memory.</p><p id="p-0998" num="0997">The rewrite target ECU <b>19</b> initiates the second process such as sending a write completion notification to the CGW <b>13</b> (S<b>2006</b>), and determines whether or not the second process has been completed (S<b>2007</b>). When it is determined that the second process has been completed (S<b>2007</b>: YES), the rewrite target ECU <b>19</b> sets the second process flag to &#x201c;OK&#x201d; and stores the set second process flag in a state in which the first process flag is still set to &#x201c;OK&#x201d; (S<b>2008</b>; corresponding to a first process flag setting procedure and a second process flag setting procedure), and finishes the process flag setting process finishes.</p><p id="p-0999" num="0998">(20-2) Process Flag Determination Process</p><p id="p-1000" num="0999">When the rewrite target ECU <b>19</b> is started from the sleep state or the stop state, and the process flag determination process is initiated, the rewrite target ECU <b>19</b> is started by the boot program (S<b>2011</b>), and reads the first process flag and the second process flag from the flash memory and determines the flags (S<b>2012</b> to S<b>2015</b>).</p><p id="p-1001" num="1000">When it is determined that the first process flag is set to &#x201c;NG&#x201d; and the second process flag is set to &#x201c;NG&#x201d; (S<b>2012</b>: YES), the rewrite target ECU <b>19</b> specifies a retry point at the beginning of the first process, notifies the CGW <b>13</b> of a retry request from the beginning of the first process (S<b>2016</b>; corresponding to a retry point specifying procedure), and finishes the retry point specifying process. That is, the rewrite target ECU <b>19</b> requests the CGW <b>13</b> to distribute the write data. In this case, the rewrite target ECU <b>19</b> also notifies the CGW <b>13</b> of the write completion address read from the flash memory, and thus the CGW <b>13</b> specifies which of the write data to be divided and distributed will be distributed. When it is determined that the first process flag is set to &#x201c;NG&#x201d; and the second process flag is set to &#x201c;OK&#x201d; (S<b>2013</b>: YES), also in this case, the rewrite target ECU <b>19</b> specifies a retry point at the beginning of the first process (S<b>2016</b>; corresponding to a retry point specifying procedure), notifies the CGW <b>13</b> of a retry request from the beginning of the first process (S<b>2017</b>), and finishes the process flag determination process.</p><p id="p-1002" num="1001">When it is determined that the first process flag is set to &#x201c;OK&#x201d; and the second process flag is set to &#x201c;NG&#x201d; (S<b>2014</b>: YES), the rewrite target ECU <b>19</b> specifies a retry point at the beginning of the second process (S<b>2018</b>; corresponding to a retry point specifying procedure), notifies the CGW <b>13</b> of a retry request from the beginning of the second process (S<b>2019</b>), and finishes the process flag determination process. The ECU <b>19</b> notifies the CGW <b>13</b> of, for example, up to which address the writing has been completed as the second process.</p><p id="p-1003" num="1002">When it is determined that the first process flag is set to &#x201c;OK&#x201d; and the second process flag is set to &#x201c;OK&#x201d; (S<b>2015</b>: YES), the rewrite target ECU <b>19</b> notifies the CGW <b>13</b> of the completion of the process related to rewriting of the application program (S<b>2020</b>), and finishes the process flag determination process. When the CGW <b>13</b> distributes divided write data, the rewrite target ECU <b>19</b> sets the above-described retry point in the unit of the divided write data.</p><p id="p-1004" num="1003">As described above, the rewrite target ECU <b>19</b> performs the retry point specifying process, thus sets the first process flag indicating whether or not the first process has been completed, sets the second process flag indicating whether or not the second process has been completed, and specifies a retry point according to the first process flag and the second process flag. For example, in a case where the first process has been completed, and the rewrite target ECU <b>19</b> is restarted in a state in which the second process is not completed, the same write data can be prevented from being written again.</p><p id="p-1005" num="1004">The rewrite target ECU <b>19</b> stores a data amount of the write data of which writing has been completed, that is, how many bytes of the write data have been written, and requests the CGW <b>13</b> to transmit the write data from the bytes in a case where writing of the write data is resumed. In a case where the rewrite target ECU <b>19</b> stores how many bytes of the write data have been written and resumes the writing, the rewrite target ECU <b>19</b> requests the CGW <b>13</b> to transmit the write data from the bytes. Therefore, at the time of resuming the writing, the CGW <b>13</b> can avoid waste of retransmitting the transmitted write data, and the rewrite target ECU <b>19</b> can write the write data from the next write area of a write area in which the write data has been written. The rewrite target ECU <b>19</b> that does not have the function of storing how many bytes of write data have been written requests the CGW <b>13</b> to transmit the write data from the leading write data in a case where writing of the write data is resumed.</p><p id="p-1006" num="1005">(21) Progress State Synchronization Control Process</p><p id="p-1007" num="1006">The progress state synchronization control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>198</b> to <b>203</b></figref>. The vehicle program rewriting system <b>1</b> performs a progress state synchronization control process in the CGW <b>13</b> and the center device <b>3</b>. The vehicle program rewriting system <b>1</b> includes the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> as the display terminal <b>5</b> that allows a user to perform an input operation. The in-vehicle display <b>7</b> displays a progress screen indicating the progress of rewriting in cooperation with the CGW <b>13</b>. The mobile terminal <b>6</b> is connected to the center device <b>3</b>, and thus displays a progress screen indicating the progress of rewriting provided by the center device <b>3</b>. The CGW <b>13</b> and the center device <b>3</b> perform the progress state synchronization control process such that information displayed on the mobile terminal <b>6</b> and information displayed on the in-vehicle display <b>7</b> are synchronized with each other.</p><p id="p-1008" num="1007">As illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref> described above, for example, when the rewrite target ECU <b>19</b> is the ECU <b>19</b> equipped with a double-bank memory, procedures related to rewriting of an application program are performed in accordance with the campaign notification phase in which a user is notified of rewriting of the application program, and the user's approval is obtained, the download phase in which write data is downloaded from the center device <b>3</b> to the DCM <b>12</b>, the installation phase in which the write data is distributed from the CGW <b>13</b> to the rewrite target ECU <b>19</b>, and the activation phase in which a start bank at the next start switches from an old bank to a new bank. That is, the user operates the mobile terminal <b>6</b> or the in-vehicle display <b>7</b>, and thus causes a series of procedures related to rewriting of the application program to progress, for example, by approving execution of each phase.</p><p id="p-1009" num="1008">As illustrated in <figref idref="DRAWINGS">FIG. <b>198</b></figref>, the CGW <b>13</b> includes a first progress state determination unit <b>88</b><i>a</i>, a first progress state transmission unit <b>88</b><i>b</i>, a second progress state acquisition unit <b>88</b><i>c</i>, and a first display instruction unit <b>88</b><i>d </i>in the progress state synchronization control unit <b>88</b>. The first progress state determination unit <b>88</b><i>a </i>determines a first progress state related to rewriting of a program, and determines progress states, for example, the campaign notification phase, the download phase, the installation phase, and the activation phase. The campaign notification phase is a phase in which a campaign is received, the screens illustrated in <figref idref="DRAWINGS">FIGS. <b>55</b> and <b>56</b></figref> are displayed, and the user's approval is obtained. The download phase is a phase in which the screens illustrated in <figref idref="DRAWINGS">FIGS. <b>57</b> to <b>60</b></figref> are displayed, the user's approval is obtained, and download is executed. The installation phase is a phase in which the download has been completed, the screens illustrated in <figref idref="DRAWINGS">FIGS. <b>60</b> to <b>65</b></figref> are displayed, and installation is performed by obtaining the user's approval. The activation phase is a phase in which the screen illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref> is displayed, the user's approval is obtained, and activation is executed.</p><p id="p-1010" num="1009">The first progress state determination unit <b>88</b><i>a </i>specifies an operation performed by the user on the in-vehicle display <b>7</b> and determines a first progress state by transmitting a user operation signal from the in-vehicle display <b>7</b> to the CGW <b>13</b> when the user is riding on the vehicle and the user selects &#x201c;approve execution of program update&#x201d; on the in-vehicle display <b>7</b> and performs an operation for progress to the next phase. In this case, selecting &#x201c;approve execution of program update&#x201d; corresponds to operating any one of the &#x201c;download initiation&#x201d; button <b>503</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>57</b></figref>, the &#x201c;immediate update&#x201d; button <b>506</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>62</b></figref>, the &#x201c;update reservation&#x201d; button <b>506</b><i>b</i>, and the &#x201c;OK&#x201d; button <b>508</b><i>b </i>illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref>. When the first progress state is determined, the first progress state determination unit <b>88</b><i>a </i>manages the determined first progress state as the current progress state.</p><p id="p-1011" num="1010">When the first progress state is determined by the first progress state determination unit <b>88</b><i>a</i>, the first progress state transmission unit <b>88</b><i>b </i>transmits the determined first progress state to the center device <b>3</b>, and also transmits the determined first progress state to each in-vehicle display device such as the in-vehicle display <b>7</b>. The second progress state acquisition unit <b>88</b><i>c </i>acquires a second progress state related to the rewriting of the program from the center device <b>3</b>. When the first progress state is determined by the first progress state determination unit <b>88</b><i>a </i>and the second progress state is acquired by the second progress state acquisition unit, the first display instruction unit <b>88</b><i>d </i>gives an instruction for creation of contents displayable on the in-vehicle display <b>7</b> on the basis of the determined first progress state and the acquired second progress state.</p><p id="p-1012" num="1011">Here, in a case where the second progress state acquisition unit <b>88</b><i>c </i>acquires the second progress state from the center device <b>3</b>, the first progress state determination unit <b>88</b><i>a </i>manages the second progress state as the current progress state when the second progress state is a phase earlier than the current progress state. That is, the first progress state is updated to a value of the second progress state. The first progress state transmission unit <b>88</b><i>b </i>transmits the first progress state that is the current progress state to the center device <b>3</b>. For example, in a case where the first progress state is a &#x201c;download waiting phase&#x201d; and a user approval operation is performed on the mobile terminal <b>6</b>, the second progress state acquisition unit <b>88</b><i>c </i>acquires a &#x201c;download-in-progress phase&#x201d; as the second progress state from the center device <b>3</b>. Since the &#x201c;download-in-progress phase&#x201d; acquired from the center device <b>3</b> is a phase earlier than the current progress state, the first progress state determination unit <b>88</b><i>a </i>updates the first progress state that is the current progress state to a value of the second progress state, transmits the updated first progress state to the center device <b>3</b>, and also transmits the updated first progress state to various in-vehicle display devices such as the in-vehicle display <b>7</b>. In addition to the &#x201c;download-in-progress phase&#x201d; as the first progress state, a &#x201c;download completion X %&#x201d; indicating the degree of progress of the download may be transmitted.</p><p id="p-1013" num="1012">In a case where a user operation signal is generated in the in-vehicle display <b>7</b>, the first display instruction unit <b>88</b><i>d </i>gives an instruction for creation of contents on the basis of the first progress state determined by the first progress state determination unit <b>88</b><i>a</i>. In a case where a user operation signal is generated in the mobile terminal <b>6</b>, the first display instruction unit <b>88</b><i>d </i>gives an instruction for creation of contents on the basis of the second progress state acquired by the second progress state acquisition unit <b>88</b><i>c</i>. In a configuration in which the first progress state determined by the first progress state determination unit <b>88</b><i>a </i>is managed to be the current progress state at all times, that is, the master device <b>11</b> manages the current progress state, the first display instruction unit <b>88</b><i>d </i>may give an instruction for creation of contents on the basis of the first progress state.</p><p id="p-1014" num="1013">As illustrated in <figref idref="DRAWINGS">FIG. <b>199</b></figref>, the center device <b>3</b> includes a second progress state determination unit <b>53</b><i>a</i>, a second progress state transmission unit <b>53</b><i>b</i>, a first progress state acquisition unit <b>53</b><i>c</i>, and a second display instruction unit <b>53</b><i>d </i>in the progress state synchronization control unit <b>53</b>. The second progress state determination unit <b>53</b><i>a </i>determines the second progress state related to rewriting of a program, and determines the progress states, for example, the campaign notification phase, the download phase, the installation phase, and the activation phase. When the user is getting off (parking), selects &#x201c;approve execution of program update&#x201d; on the mobile terminal <b>6</b>, and performs an operation or progress to the next phase, the second progress state determination unit <b>53</b><i>a </i>receives a user operation signal transmitted from the mobile terminal <b>6</b> in an environment in which the mobile terminal <b>6</b> and the center device <b>3</b> can perform data communication with each other.</p><p id="p-1015" num="1014">The second progress state determination unit <b>53</b><i>a </i>determines the second progress state on the basis of the current progress state that is the first progress state previously received from the master device <b>11</b> by the first progress state acquisition unit <b>53</b><i>c</i>, and the user operation signal. For example, when the current progress state is an &#x201c;installation waiting phase&#x201d; and the user operation signal indicating &#x201c;approval&#x201d; is received, the second progress state determination unit <b>53</b><i>a </i>determines that the second progress state is an &#x201c;installation-in-progress phase&#x201d;. The second progress state determination unit <b>53</b><i>a </i>may determine &#x201c;with user's approval in the installation waiting phase&#x201d;. The user operation signal in the mobile terminal <b>6</b> is transmitted from the center device <b>3</b> to the DCM <b>12</b> in an environment in which the DCM <b>12</b> and the center device <b>3</b> can perform data communication with each other. The user operation signal is transferred from the DCM <b>12</b> to the CGW <b>13</b>, and thus the CGW <b>13</b> can determine the operation performed by the user on the mobile terminal <b>6</b> to determine the progress state.</p><p id="p-1016" num="1015">When the second progress state is determined by the second progress state determination unit <b>53</b><i>a</i>, the second progress state transmission unit <b>53</b><i>b </i>transmits the determined second progress state to the master device <b>11</b>. The first progress state acquisition unit <b>53</b><i>c </i>acquires the first progress state related to rewrite of the program from the master device <b>11</b>, and manages the first progress state as the current progress state. As the current progress state, the second progress state may be updated to a value of the first progress state. When the second progress state is determined by the second progress state determination unit <b>53</b><i>a </i>and the first progress state is acquired by the first progress state acquisition unit <b>53</b><i>d</i>, the second display instruction unit <b>53</b><i>d </i>gives an instruction for creation of contents displayable on the mobile terminal <b>6</b> on the basis of the determined second progress state and the acquired first progress state.</p><p id="p-1017" num="1016">For example, in a case where there is only a user operation signal in the mobile terminal <b>6</b>, the second progress state determined by the second progress state determination unit <b>53</b><i>a </i>and the first progress state acquired by the first progress state acquisition unit <b>53</b><i>d </i>indicate the same progress state. Therefore, the second display instruction unit <b>53</b><i>d </i>may give an instruction for creation of the contents on the basis of the second progress state. Thereafter, when the user operation signal is generated in the in-vehicle display <b>7</b>, the second display instruction unit <b>53</b><i>d </i>gives an instruction for creation of the contents on the basis of the acquired first progress state.</p><p id="p-1018" num="1017">When an SMS is received as a progress state signal from the center device <b>3</b>, for example, the mobile terminal <b>6</b> is connected to the center device <b>3</b> when the user selects a URL described in the SMS, and displays a screen of a predetermined phase provided by the center device <b>3</b>.</p><p id="p-1019" num="1018">Next, with reference to <figref idref="DRAWINGS">FIGS. <b>200</b> to <b>203</b></figref>, a description will be made of operations performed by the progress state synchronization control unit <b>88</b> in the CGW <b>13</b> and the progress state synchronization control unit <b>53</b> in the center device <b>3</b>.</p><p id="p-1020" num="1019">As illustrated in <figref idref="DRAWINGS">FIG. <b>200</b></figref>, the master device <b>11</b> and the center device <b>3</b> transmit and receive a first progress state signal and a second progress state signal to cause synchronization in display of a progress state of a phase in the mobile terminal <b>6</b> and the in-vehicle display <b>7</b>. That is, when the first progress state that is the current progress state is updated, the master device <b>11</b> transmits the first progress state signal to the center device <b>3</b>, and also transmits the first progress state signal to various in-vehicle display devices such as the in-vehicle display <b>7</b>. The center device <b>3</b> transmits the first progress state signal as the current progress state to the mobile terminal <b>6</b>. Consequently, when the mobile terminal <b>6</b> can access the center device <b>3</b>, display of a progress state of a phase in the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> is in synchronization. The center device <b>3</b> transmits the second progress state signal to the master device <b>11</b> on the basis of a user approval operation on the mobile terminal <b>6</b>, and thus causes synchronization in the display of the progress state of the phase in the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> when the mobile terminal <b>6</b> can access the center device <b>3</b>.</p><p id="p-1021" num="1020">The master device <b>11</b> which has acquired the second progress state signal may update the first progress state that is the current progress state, and then may transmit the first progress state to the center device <b>3</b> and each in-vehicle display device such as the in-vehicle display <b>7</b>. That is, the master device <b>11</b> transmits the current progress state to the center device <b>3</b> and each in-vehicle display device such as the in-vehicle display <b>7</b>, and thus functions as a phase management device. Here, the second progress state signal transmitted from the mobile terminal <b>6</b>, the in-vehicle display <b>7</b>, and the center device <b>3</b> may be a notification indicating any phase, or may be a notification indicating that a user approval operation has been performed or a notification indicating the meaning of an operated button.</p><p id="p-1022" num="1021">When the progress state synchronization control process is initiated, the CGW <b>13</b> transmits distribution specification data to the in-vehicle display <b>7</b> (S<b>2101</b>). The distribution specification data includes text or contents to be displayed to the user by the in-vehicle display <b>7</b>. The CGW <b>13</b> determines whether or not the user has performed an operation on the in-vehicle display <b>7</b> or the mobile terminal <b>6</b> on the basis of a notification from the in-vehicle display <b>7</b> or the center device <b>3</b> (S<b>2102</b>). When it is determined that the user has performed the operation on the in-vehicle display <b>7</b> or the mobile terminal <b>6</b> (S<b>2102</b>: YES), the CGW <b>13</b> determines a phase corresponding to the operation on the basis of the first progress state (S<b>2103</b> to S<b>2106</b>; corresponding to a first progress state determination procedure).</p><p id="p-1023" num="1022">When the campaign notification phase is determined (S<b>2103</b>: YES), the CGW <b>13</b> performs a process in the campaign notification phase (S<b>2107</b>), and transmits a first progress state signal indicating a progress state of the process in the campaign notification phase to the in-vehicle display <b>7</b> and the center device <b>3</b> (S<b>2111</b>). The process in the campaign notification phase is, for example, a process of acquiring the user's input operation on the in-vehicle display <b>7</b> or the mobile terminal <b>6</b>.</p><p id="p-1024" num="1023">The CGW <b>13</b> acquires, from the in-vehicle display <b>7</b> or the mobile terminal <b>6</b> via the center device <b>3</b>, for example, conditions such as a date and a place where a program is permitted to be executed, in addition to an approval or disapproval for update of the program. When information indicating that there is the user's input operation for an approval on the mobile terminal <b>6</b> is acquired from the center device <b>3</b> via the DCM <b>12</b>, the CGW <b>13</b> notifies the in-vehicle display <b>7</b> of the progress such as completion of the approval. On the other hand, when information indicating that there is the user's input operation for an approval on the in-vehicle display <b>7</b> is acquired from the in-vehicle display <b>7</b>, the CGW <b>13</b> notifies the center device <b>3</b> of the progress such as completion of the approval.</p><p id="p-1025" num="1024">When the download phase is determined (S<b>2104</b>: YES), the CGW <b>13</b> performs a process in the download phase (S<b>2108</b>), and transmits a first progress state signal indicating a progress state of the process in the download phase to the in-vehicle display <b>7</b> and the center device (S<b>2111</b>). The process in the download phase is, for example, a process of calculating a percentage of completed download of a distribution package.</p><p id="p-1026" num="1025">The CGW <b>13</b> determines the percentage of the completed download on the basis of a notification from the center device <b>3</b>. The CGW <b>13</b> notifies the in-vehicle display <b>7</b> and the center device <b>3</b> of the progress indicating the percentage of the completed download. The CGW <b>13</b> repeatedly performs the process until download of the distribution package is completed. When the download has been completed, the CGW <b>13</b> notifies the in-vehicle display <b>7</b> and the center device <b>3</b> of the progress indicating completion of the download phase.</p><p id="p-1027" num="1026">When the installation phase is determined (S<b>2104</b>: YES), the CGW <b>13</b> performs a process in the installation phase (S<b>2108</b>), and transmits a progress state signal indicating a progress state of the process in the installation phase to the in-vehicle display <b>7</b> and the DCM <b>12</b> (S<b>2111</b>). The process in the installation phase is, for example, a process of calculating a percentage of completed installation in the rewrite target ECU <b>19</b>.</p><p id="p-1028" num="1027">The CGW <b>13</b> determines the percentage of the completed installation on the basis of a notification from the rewrite target ECU <b>19</b>. The CGW <b>13</b> notifies the in-vehicle display <b>7</b> and the center device <b>3</b> of the progress indicating the percentage of the completed installation. The CGW <b>13</b> repeatedly performs the process until installation is completed in all of the rewrite target ECUs <b>19</b>. When the installation in all of the rewrite target ECUs <b>19</b> has been completed, the CGW <b>13</b> notifies the in-vehicle display <b>7</b> and the center device <b>3</b> of the progress indicating completion of the installation phase.</p><p id="p-1029" num="1028">When the activation phase is determined (S<b>2104</b>: YES), the CGW <b>13</b> performs a process in the activation phase (S<b>2108</b>), and transmits a progress state signal indicating a progress state of the process in the activation phase to the in-vehicle display <b>7</b> and the DCM <b>12</b> (S<b>2111</b>; corresponding to a first progress state transmission procedure). The process in the activation phase is, for example, a process of calculating a percentage of completed activation in one or more rewrite target ECUs <b>19</b> belonging to the same group. The CGW <b>13</b> determines the percentage of the completed activation on the basis of a notification from the rewrite target ECU <b>19</b>. The CGW <b>13</b> notifies the in-vehicle display <b>7</b> and the center device of the progress indicating the percentage of the completed activation.</p><p id="p-1030" num="1029">It is determined whether or not the activation phase has been completed (S<b>2112</b>), and, when it is determined that the activation phase has been completed (S<b>2112</b>: YES), the CGW <b>13</b> finishes the progress state synchronization control process. When it is determined that the activation phase has not been completed (S<b>2112</b>: NO), the CGW <b>13</b> returns to S<b>2102</b>. The CGW <b>13</b> causes the process in each phase to progress and calculates a percentage of a completed process (S<b>2107</b> to S<b>2110</b>). The CGW <b>13</b> periodically transmits the phase and information indicating that X % of a completed phase as the first progress state to the center device <b>3</b> (S<b>2111</b>).</p><p id="p-1031" num="1030">When the distribution specification data is transmitted and the progress state synchronization control process is initiated, the center device <b>3</b> monitors reception of the first progress state signal transmitted from the DCM <b>12</b> (S<b>2121</b>). When it is determined that the first progress state signal has been received from the DCM <b>12</b> (S<b>2121</b>: YES), the center device <b>3</b> permits access from the mobile terminal <b>6</b> (S<b>2122</b>), determines a phase specified by the first progress state signal (S<b>2123</b> to S<b>2126</b>).</p><p id="p-1032" num="1031">When the campaign notification phase is determined (S<b>2123</b>: YES), the center device <b>3</b> performs the process in the campaign notification phase (S<b>2127</b>). That is, the center device <b>3</b> creates a campaign notification phase screen, transmits a display instruction signal for giving an instruction for display of the campaign notification phase screen to the mobile terminal <b>6</b>, and causes the mobile terminal <b>6</b> to display the campaign notification phase screen through connection to the center device <b>3</b>.</p><p id="p-1033" num="1032">When the download phase is determined (S<b>2124</b>: YES), the center device <b>3</b> performs a process in the download phase (S<b>2128</b>). That is, the center device <b>3</b> creates a download phase screen, transmits a display instruction signal for giving an instruction for display of the download phase screen to the mobile terminal <b>6</b>, and causes the mobile terminal <b>6</b> to display the download phase screen through connection to the center device <b>3</b>. When the center device <b>3</b> is notified of the progress indicating the percentage of the completed download from the DCM <b>12</b>, the center device <b>3</b> updates the download phase screen.</p><p id="p-1034" num="1033">When the installation phase is determined (S<b>2125</b>: YES), the center device <b>3</b> performs a process in the installation phase (S<b>2129</b>). That is, the center device <b>3</b> creates an installation phase screen, transmits a display instruction signal for giving an instruction for display of the installation phase screen to the mobile terminal <b>6</b>, and causes the mobile terminal <b>6</b> to display the installation phase screen through connection to the center device <b>3</b>. When the center device <b>3</b> is notified of the progress indicating the percentage of the completed installation from the DCM <b>12</b>, the center device <b>3</b> updates the installation phase screen.</p><p id="p-1035" num="1034">When the activation phase is determined (S<b>2126</b>: YES), the center device <b>3</b> performs a process in the activation phase (S<b>2130</b>). That is, the center device <b>3</b> creates an activation phase screen, transmits a display instruction signal for giving an instruction for display of the activation phase screen to the mobile terminal <b>6</b>, and causes the mobile terminal <b>6</b> to display the activation phase screen through connection to the center device <b>3</b>. When the center device <b>3</b> is notified of the progress indicating the percentage of the completed activation from the DCM <b>12</b>, the center device <b>3</b> updates the activation phase screen. When an operation such the user's approval is performed on the screens displayed in S<b>2127</b> to S<b>2130</b>, the center device <b>3</b> transmits a second progress state signal to the master device <b>11</b> (S<b>2131</b>), and finishes the progress state synchronization control process.</p><p id="p-1036" num="1035">When the distribution specification data is received from the CGW <b>13</b>, the in-vehicle display <b>7</b> initiates the progress display process, and monitors reception of the progress state signal transmitted from the CGW <b>13</b> (S<b>2141</b>). When it is determined that the progress state signal has been received from the CGW <b>13</b> (S<b>2141</b>: YES), the in-vehicle display <b>7</b> permits the user operation on the in-vehicle display <b>7</b> (S<b>2142</b>), determines a phase specified by the progress state signal (S<b>2143</b> to S<b>2146</b>).</p><p id="p-1037" num="1036">When the campaign notification phase is determined (S<b>2143</b>: YES), the in-vehicle display <b>7</b> displays a campaign notification phase screen by using text, contents, and the like included in the distribution specification data (S<b>2147</b>). When the download phase is determined (S<b>2144</b>: YES), the in-vehicle display <b>7</b> displays a download phase screen (S<b>2148</b>). The in-vehicle display <b>7</b> updates the download phase screen when notified of the progress indicating the percentage of completion of the download from the CGW <b>13</b>.</p><p id="p-1038" num="1037">When it is determined that the in-vehicle display <b>7</b> is in the installation phase (S<b>2145</b>: YES), the installation phase screen is displayed (S<b>2149</b>). When the in-vehicle display <b>7</b> is notified of the progress indicating the percentage of the completed installation from the CGW <b>13</b>, the in-vehicle display <b>7</b> updates the installation phase screen. When the activation phase is determined (S<b>2146</b>: YES), the in-vehicle display <b>7</b> displays an activation phase screen (S<b>2150</b>). When the in-vehicle display <b>7</b> is notified of the progress indicating the percentage of the completed activation from the CGW <b>13</b>, the in-vehicle display <b>7</b> updates the activation phase screen.</p><p id="p-1039" num="1038">As described above, the first progress state and the second progress state are transmitted and received between the master device <b>11</b> and the center device <b>3</b>. For example, even in a configuration in which the mobile terminal <b>6</b> is accessible to the center device <b>3</b> and the in-vehicle display <b>7</b> is inaccessible to the center device <b>3</b>, the first progress state and the second progress state are transmitted and received between the master device <b>11</b> and the center device <b>3</b>, and thus progress states or the like of rewriting of an application program can be appropriately synchronized among a plurality of display terminals.</p><p id="p-1040" num="1039">(22) Display Control Information Transmission Control Process and (23) Display Control Information Reception Control Process</p><p id="p-1041" num="1040">The display control information transmission control process in the center device <b>3</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>204</b> and <b>205</b></figref>, and the display control information reception control process in the master device <b>11</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>206</b> to <b>208</b></figref>.</p><p id="p-1042" num="1041">As illustrated in <figref idref="DRAWINGS">FIG. <b>204</b></figref>, the center device <b>3</b> includes a write data storage unit <b>54</b><i>a </i>(corresponding to an update data storage unit), a display control information storage unit <b>54</b><i>b</i>, and an information transmission unit <b>54</b><i>c </i>in the display control information transmission control unit <b>54</b>. The write data storage unit <b>54</b><i>a </i>stores write data for a plurality of rewrite target ECUs <b>19</b> with rewriting of application programs in the plurality of rewrite target ECUs <b>19</b> as a single campaign. The display control information storage unit <b>54</b><i>b </i>stores distribution specification data including display control information. The display control information is information required for display information related to rewriting of an application program in the rewrite target ECU <b>19</b> to be displayed on the in-vehicle display <b>7</b>, and is a display control program or property information.</p><p id="p-1043" num="1042">The display information is data configuring various screens (a campaign notification screen, an installation screen, and the like) related to rewriting of the application program. The display control program is a program for realizing a function equivalent to that of a web browser. The property information is information defining display characters, display positions, colors, and the like. The information transmission unit <b>54</b><i>c </i>transmits the write data stored in the write data storage unit <b>54</b><i>a </i>and the display control information stored in the display control information storage unit <b>54</b><i>b </i>to the master device <b>11</b>. The information transmission unit <b>54</b><i>c </i>transmits the write data for the plurality of rewrite target ECUs <b>19</b> to the master device <b>11</b> as a single package. Here, the display control information may include phase identification information indicating a phase in which information is displayed. For example, the phase identification information indicates a phase in which information is displayed among the campaign notification phase, the download phase, the installation phase, and the activation phase.</p><p id="p-1044" num="1043">Next, an operation performed by the display control information transmission control unit <b>54</b> in the center device <b>3</b> will be described with reference to <figref idref="DRAWINGS">FIG. <b>205</b></figref>. The center device <b>3</b> executes a display control information transmission control program and thus performs the display control information transmission control process.</p><p id="p-1045" num="1044">When the display control information transmission control process is initiated, the center device <b>3</b> transmits the distribution specification data to the CGW <b>13</b> via the DCM <b>12</b> (S<b>2201</b>; corresponding to a control information transmission procedure), and transmits the write data to the CGW <b>13</b> via the DCM <b>12</b> (S<b>2202</b>). The center device <b>3</b> transmits the display information to the CGW <b>13</b> via the DCM <b>12</b> (S<b>2203</b>; corresponding to a display information transmission procedure), and finishes the display control information transmission control process. In a case where the display control information corresponding to each of the campaign notification phase, the download phase, the installation phase, and the activation phase is transmitted, the center device <b>3</b> may transmit the display control information corresponding to each phase to the in-vehicle display <b>7</b> in a single file, or may transmit the display control information corresponding to the next phase to the in-vehicle display <b>7</b> each time the phase is finished. Here, the timing at which the center device <b>3</b> transmits the distribution specification data may be configured to be transmitted in response to a request from the master device <b>11</b>.</p><p id="p-1046" num="1045">As illustrated in <figref idref="DRAWINGS">FIG. <b>206</b></figref>, the CGW <b>13</b> includes an information receiving unit <b>89</b><i>a</i>, a rewrite instruction unit <b>89</b><i>b</i>, and a display instruction unit <b>89</b><i>c </i>in the display control information reception control unit <b>89</b>. The information receiving unit <b>89</b><i>a </i>receives the write data and the display control information from the center device <b>3</b>. When the write data is received from the center device <b>3</b> by the information receiving unit <b>89</b><i>a</i>, the rewrite instruction unit <b>89</b><i>b </i>instructs the rewrite target ECU <b>19</b> to write the received write data. The display instruction unit <b>89</b><i>c </i>instructs the in-vehicle display <b>7</b> to display information regarding a campaign by using the display control information before the rewrite instruction unit <b>89</b><i>b </i>instructs the rewrite target ECU <b>19</b> to write the write data. The display instruction unit <b>89</b><i>c </i>may give an instruction for displaying the information regarding the campaign as history information after the entire write data is written.</p><p id="p-1047" num="1046">Next, an operation performed by the display control information reception control unit <b>89</b> in the CGW <b>13</b> will be described with reference to <figref idref="DRAWINGS">FIG. <b>207</b></figref>. The CGW <b>13</b> executes ae display control information reception control program and thus performs the display control information reception control process. Consequently, in a case where the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> are provided as display terminals, these display aspects can be brought close to each other, and thus the user's convenience can be improved.</p><p id="p-1048" num="1047">When the display control information reception control process is initiated, the CGW <b>13</b> receives the distribution specification data from the center device <b>3</b> via the DCM <b>12</b> (S<b>2301</b>; corresponding to a control information reception procedure). The write data is received from the center device <b>3</b> via the DCM <b>12</b> (S<b>2302</b>). The CGW <b>13</b> receives the display information from the center device <b>3</b> via the DCM <b>12</b> (S<b>2303</b>; corresponding to a display information reception procedure). The CGW <b>13</b> determines whether or not to use the display control information included in the distribution specification data from the center device <b>3</b> (S<b>2304</b>). When it is determined that the display control information is to be used (S<b>2304</b>: YES), the CGW <b>13</b> instructs the in-vehicle display <b>7</b> to display the display information by using the display control information (S<b>2305</b>). That is, the CGW <b>13</b> instructs the in-vehicle display <b>7</b> to display screens related to rewriting of an application programs by using the display control information. The in-vehicle display <b>7</b> displays the display information by using the display control information in response to the instruction from the CGW <b>13</b>.</p><p id="p-1049" num="1048">When it is determined that the display control information is not to be used (S<b>2304</b>: NO), the CGW <b>13</b> instructs the in-vehicle display <b>7</b> to display the display information by using contents stored in advance (S<b>2306</b>). That is, the CGW <b>13</b> instructs the in-vehicle display <b>7</b> to display screens related to rewriting of the application program by using the contents stored in advance. The in-vehicle display <b>7</b> displays the display information by using the contents stored in advance in response to the instruction from the CGW <b>13</b>. In a case where the display information corresponding to each of the campaign notification phase, the download phase, the installation phase, and the activation phase is displayed, the in-vehicle display <b>7</b> may collectively receive the display control information corresponding to each phase from the center device <b>3</b>, or may receive the display control information corresponding to the next phase from the center device <b>3</b> each time the phase is finished.</p><p id="p-1050" num="1049">As illustrated in <figref idref="DRAWINGS">FIG. <b>208</b></figref>, when the in-vehicle display <b>7</b> does not have the function of a web browser, and the distribution specification data transmitted from the center device <b>3</b> to the in-vehicle display <b>7</b> via the DCM <b>12</b> and the CGW <b>13</b> includes property information but does not include a display control program, the in-vehicle display <b>7</b> displays the display information on a simple screen by using contents and frames stored in advance. The property information includes data such as text, its display position, its size, and the like, and is the same as the property information used in the screen created by the center device <b>3</b>. That is, although the screen image displayed on the in-vehicle display <b>7</b> differs from the screen image created by the center device <b>3</b> in terms of background, bit map, and the like, a display content is equivalent to that of the center device <b>3</b>.</p><p id="p-1051" num="1050">When the in-vehicle display <b>7</b> does not have the function of a web browser, and the distribution specification data transmitted from the center device <b>3</b> to the in-vehicle display <b>7</b> via the DCM <b>12</b> and the CGW <b>13</b> includes the display control program and the property information, the in-vehicle display <b>7</b> displays the display information on a screen equivalent to that of the center device <b>3</b>. Here, the display control program and the property information included in the distribution specification data are the same as those used in the screen created by the center device <b>3</b>.</p><p id="p-1052" num="1051">When the in-vehicle display <b>7</b> does not have the function of a web browser but stores the display control program, and the property information is included in the distribution specification data transmitted from the center device <b>3</b> to the in-vehicle display <b>7</b>, the in-vehicle display <b>7</b> displays the display information on a screen equivalent to that of the center device <b>3</b>. Here, the display control program stored in the in-vehicle display <b>7</b> is different in version from the display control program used in the screen created by the center device <b>3</b>, for example.</p><p id="p-1053" num="1052">When the in-vehicle display <b>7</b> has the function of a web browser, the in-vehicle display <b>7</b> displays the display information on the same screen as that of the center device <b>3</b> through connection to the center device.</p><p id="p-1054" num="1053">As described above, the center device <b>3</b> performs the display control information transmission control process, thus transmits the display control information to the in-vehicle display <b>7</b>, and displays the display information on the in-vehicle display <b>7</b> according to the display control information. Consequently, in a case where the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> are provided as display terminals, these display aspects can be brought close to each other, and thus the user's convenience can be improved. The CGW <b>13</b> performs the display control information reception control process, thus receives the display control information from the center device <b>3</b>, receives the display information from the center device <b>3</b>, and displays the display information according to the display control information.</p><p id="p-1055" num="1054">(24) Screen Display Control Process for Progress Display</p><p id="p-1056" num="1055">The progress display screen display control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>209</b> to <b>233</b></figref>. The vehicle program rewriting system <b>1</b> performs the progress display screen display control process in the CGW <b>13</b>.</p><p id="p-1057" num="1056">As illustrated in <figref idref="DRAWINGS">FIG. <b>222</b></figref>, the CGW <b>13</b> includes a mode determination unit <b>90</b><i>a </i>and a screen display instruction unit <b>90</b><i>b </i>in the progress display screen display control unit <b>90</b>.</p><p id="p-1058" num="1057">The mode determination unit <b>90</b><i>a </i>determines whether or not a customization mode is set by the user's customization operation. The mode determination unit <b>90</b><i>a </i>determines whether or not an external mode from the outside is set on the basis of scene information included in the rewrite specification data. That is, the mode determination unit <b>90</b><i>a </i>refers to the scene information included in the rewrite specification data illustrated in <figref idref="DRAWINGS">FIG. <b>44</b></figref>. As illustrated in <figref idref="DRAWINGS">FIGS. <b>31</b> and <b>210</b></figref>, scene information, expiration date information, and position information are stored in the rewrite specification data. The scene information indicates a scene (for example, the type or a view) of the main update, and also designates screen display of the main update. Specifically, there are a recall flag, a dealer flag, a factory flag, a function update notification flag, and a forced execution flag.</p><p id="p-1059" num="1058">The recall flag is a flag for designating screen display in a case where an application program is rewritten in response to a recall. The recall indicates implementation of measures such as repair, replacement, or recovery without charge due to the provisions of the regulations or at the discretion of a manufacturer or seller in a case where a defect in a product is found due to a design or manufacturing error, or the like.</p><p id="p-1060" num="1059">The dealer flag is a flag for designating screen display in a case where an application program is rewritten in a dealer. The factory flag is a flag for designating screen display in a case where the application program is rewritten in a factory. The function update notification flag is a flag for designating screen display in a case where the application program is rewritten in response to a function update notification. The function update notification is performed to update a specific function. For example, the function update notification flag is a flag for designating screen display in the program update for adding a new function for a fee (or for free).</p><p id="p-1061" num="1060">The forced execution flag is a flag for designating screen display in a case where the application program is rewritten in response to forced execution. The forced execution indicates that the application program is forced to be rewritten because campaign notifications are performed a predetermined number of times but the application program is not rewritten. For example, the forced execution flag is a flag for designating screen display in a case where a program is forced to be updated.</p><p id="p-1062" num="1061">The flags indicating the scene information are all set to 0 (flag is not established) in a case where there is no relevant item, and any thereof is set to 1 (flag is established) in a case where there is a relevant item. For example, the mode determination unit <b>90</b><i>a </i>determines that a recall mode is set when the dealer flag is established, determines that a dealer mode is set when the recall flag is established, determines that a factory mode is set when the factory flag is established, determines that a function update mode is set when the function update notification flag is established, and determines that a forced execution mode is set when the forced execution flag is established.</p><p id="p-1063" num="1062">The expiration date information is information indicating the expiration date, and is information serving as a criterion for determining whether or not rewrite of the application program is to be executed. The CGW <b>13</b> executes rewriting of the application program when the current time is within the expiration date indicated by the expiration date information, and does not execute rewriting of the application program when the current time exceeds the expiration date indicated by the expiration date information. That is, after a distribution package is downloaded, the CGW <b>13</b> refers to the expiration date information when installing the program, and does not execute installation of the program and discards the distribution package when the current time exceeds the expiration date.</p><p id="p-1064" num="1063">The position information is information indicating a position, is information serving as a criterion for determining whether or not rewriting of the application program is to be executed, and includes a permitted area and a prohibited area. In a case where the permitted area is designated as the position information, the CGW <b>13</b> executes rewriting of the application program when the current position of the vehicle is inside the permitted area indicated by the position information, and does not execute rewriting of the application program when the current position of the vehicle is outside the permitted area indicated by the position information. In a case where the prohibited area is designated as the position information, the CGW <b>13</b> executes rewriting of the application program when the current position of the vehicle is outside the prohibited area indicated by the position information, and does not execute rewriting of the application program when the current position of the vehicle is inside the prohibited area indicated by the position information. That is, after the distribution package is downloaded, the CGW <b>13</b> refers to the position information when installing a program, and does not execute installation of the program when the current position is outside the permitted area, and delays the installation until the vehicle enters the permitted area.</p><p id="p-1065" num="1064">The screen display instruction unit <b>90</b><i>b </i>instructs the display terminal <b>5</b> to display a screen corresponding to rewriting of the application program. The screen display instruction unit <b>90</b><i>b </i>instructs the display terminal <b>5</b> to display the screen by giving an instruction for whether or not the screen corresponding to a rewriting phase of the application program is displayed, giving an instruction for whether or not items of the screen are displayed, and giving an instruction for changing display contents of the items of the screen.</p><p id="p-1066" num="1065">A description will be made of the user's customization operation. Here, a screen displayed on the in-vehicle display <b>7</b> will be described, but the same applies to a screen displayed on the mobile terminal <b>6</b>. In a screen described later, a layout of the number, disposition, and the like of buttons may be other than the exemplified layout. When the user performs an operation of displaying a menu screen on the in-vehicle display <b>7</b>, the CGW <b>13</b> displays a menu selection screen <b>511</b> on the in-vehicle display <b>7</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>211</b></figref>. In the menu selection screen <b>511</b>, the CGW <b>13</b> displays a &#x201c;software update&#x201d; button <b>511</b><i>a</i>, an &#x201c;update result check&#x201d; button <b>511</b><i>b</i>, a &#x201c;software version list&#x201d; button <b>511</b><i>c</i>, an &#x201c;update history&#x201d; button <b>511</b><i>d</i>, a &#x201c;user information registration&#x201d; button <b>511</b><i>e</i>, and waits for the user operation.</p><p id="p-1067" num="1066">When the user operates the &#x201c;user information registration&#x201d; button <b>511</b><i>e </i>in this state, the CGW <b>13</b> displays a user selection screen <b>512</b> on the in-vehicle display <b>7</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>212</b></figref>. In the user selection screen <b>512</b>, the CGW <b>13</b> displays &#x201c;user&#x201d; buttons <b>512</b><i>a </i>to <b>512</b><i>c </i>and waits for the user operation.</p><p id="p-1068" num="1067">When the user operates the &#x201c;user&#x201d; button <b>512</b><i>a </i>in this state, the CGW <b>13</b> displays a user registration screen <b>513</b> on the in-vehicle display <b>7</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>214</b></figref>. In the user registration screen <b>513</b>, the CGW <b>13</b> displays input fields of an mail address and VIN information (individual vehicle identification information) for registration of personal information, displays input fields of a credit card number and the expiration date for registration of accounting information, displays the &#x201c;ON/OFF&#x201d; buttons <b>513</b><i>a </i>to <b>513</b><i>d </i>for campaign notification, download, installation, and activation in relation to settings of rewriting of an application program, displays a &#x201c;detailed information&#x201d; button <b>513</b><i>e</i>, and waits for the user operation.</p><p id="p-1069" num="1068">The &#x201c;ON/OFF&#x201d; buttons <b>513</b><i>a </i>to <b>513</b><i>d </i>for a campaign notification, download, installation, and activation are buttons for selecting whether or not to display screens for a campaign notification, download, installation, and activation. Specifically, when a campaign notification is received, download is initiated, installation is initiated, and activation is initiated, the buttons are buttons that allow the user to select in advance whether or not to display the contents for requesting the user's approval. The &#x201c;detailed information&#x201d; button <b>513</b><i>e </i>is a button for registering the above-described expiration date information and position information. The information set by the user is transmitted to the center device <b>3</b> via the DCM <b>12</b>. In a case where the user sets the pieces of information on the mobile terminal <b>6</b>, the CGW <b>13</b> acquires the pieces of information from the center device <b>3</b> via the DCM <b>12</b>.</p><p id="p-1070" num="1069">The user may set the corresponding &#x201c;ON/OFF&#x201d; buttons <b>513</b><i>a </i>to <b>513</b><i>d </i>to OFF in a case where the user feels the screens bothersome about a campaign notification, download, installation, and activation. The buttons are set to OFF, and display of the contents for requesting the user's approval is omitted. For example, in a case where the user does not feel bothersome about screen display of a campaign notification or activation, but feels bothersome about screen display of download or installation, the user may set the campaign notification to ON with the &#x201c;ON/OFF&#x201d; button <b>513</b><i>a</i>, set the download to OFF with the &#x201c;ON/OFF&#x201d; button <b>513</b><i>b</i>, set the installation to OFF with the &#x201c;ON/OFF&#x201d; button <b>513</b><i>c</i>, and set the activation to ON with the &#x201c;ON/OFF&#x201d; button <b>513</b><i>d. </i></p><p id="p-1071" num="1070">In this case, for example, when the campaign notification is set to ON, the download is set to OFF, the installation is set to OFF, and the activation is set to ON, the display terminal <b>5</b> displays a campaign notification screen, does not display a download approval screen and a download-in-progress screen, does not display an installation approval screen and the installation-in-progress screen, and displays an activation screen according to a rewriting phase of the application program. That is, in the campaign notification, download, installation, and activation phases, when a corresponding phase is set to ON, the user performs screen display of the phase set to ON, and, when a corresponding phase is set to OFF, the user does not perform screen display of the phase set to OFF. Therefore, screen display can be customized. The ON/OFF setting of the screen display may be set individually for each phase, or all phases may be collectively set at a time.</p><p id="p-1072" num="1071">In a case where the user wants to register the expiration date, the permitted area, and the prohibited area, the user may set the expiration date, the permitted area, and the prohibited area by operating the &#x201c;detailed information&#x201d; button <b>513</b><i>e</i>. The user can customize the expiration date for permitting rewriting of the application program as the expiration date information, and can customize the permitted area for permitting rewriting of the application program as the position information or the prohibited area for prohibiting the rewriting.</p><p id="p-1073" num="1072">Next, an operation of the above-described configuration will be described with reference to <figref idref="DRAWINGS">FIGS. <b>214</b> to <b>237</b></figref>. The CGW <b>13</b> executes a progress display screen display control program and thus performs the progress display screen display control process.</p><p id="p-1074" num="1073">When the progress display screen display control process is initiated, the CGW <b>13</b> determines whether or not the expiration date information is stored in the rewrite specification data and whether or not the expiration date information is set in the customization information (S<b>2401</b>). When it is determined that the expiration date information is stored in the rewrite specification data (S<b>2401</b>: YES), the CGW <b>13</b> determines whether the current time satisfies the expiration date information (S<b>2402</b>). In a case where the expiration date information stored in the rewrite specification data and the expiration date information set as the customization information are present, the CGW <b>13</b> determines whether both are satisfied. When it is determined that the current time exceeds the expiration date indicated by the expiration date information and the current time does not satisfy the expiration date information (S<b>2402</b>: NO), the CGW <b>13</b> finishes the progress display screen display control process.</p><p id="p-1075" num="1074">When it is determined that the current time is within the expiration date indicated by the expiration date information and the current time satisfies the expiration date information (S<b>2402</b>: YES), the CGW <b>13</b> determines whether or not the scene information is stored in the rewrite specification data (S<b>2403</b>). When it is determined that the scene information is stored in the rewrite specification data (S<b>2403</b>: YES), the CGW <b>13</b> determines that the external mode is set, proceeds to the display instruction process according to the set content in the scene information (S<b>2404</b>), and instructs the in-vehicle display <b>7</b> to perform screen display corresponding to rewriting of the application program according to a mode of an established flag. For example, when the recall flag is established, the CGW <b>13</b> instructs the in-vehicle display <b>7</b> to perform screen display according to the recall mode during rewriting of the application program. For example, when the dealer flag is established, the CGW <b>13</b> instructs the in-vehicle display <b>7</b> to perform screen display according to the dealer mode during rewrite of the application program.</p><p id="p-1076" num="1075">When it is determined that the scene information is not stored in the rewrite specification data (S<b>2403</b>: NO), the CGW <b>13</b> determines whether or not the customization mode is set through the user's customization operation (S<b>2405</b>; corresponding to a customization mode determination procedure). When it is determined that the customization mode is set (S<b>2405</b>: YES), the CGW <b>13</b> proceeds to a display instruction process according to the set content in the customization operation (S<b>2406</b>; corresponding to a screen display instruction procedure), and instructs the in-vehicle display <b>7</b> to perform screen display corresponding to rewriting of the application program according to the customization mode.</p><p id="p-1077" num="1076">When it is determined that the customization mode is not set (S<b>2405</b>: NO), the CGW <b>13</b> proceeds to a display instruction process according to a set content in the initial setting (S<b>2407</b>; corresponding to a screen display instruction procedure), and instructs the in-vehicle display <b>7</b> to perform screen display corresponding to rewriting of the application program according to the customization mode. That is, the CGW <b>13</b> preferentially applies the scene information stored in the rewrite specification data, and applies the customization mode when the scene information is not stored. When neither the scene information nor the customization mode is present, the initial setting is applied. Here, the initial setting is a preset value, and the initial setting is a setting of turning on all settings of, for example, a campaign notification, download, installation, and activation.</p><p id="p-1078" num="1077">Next, the screen display instruction processes in S<b>2404</b>, S<b>2406</b>, and S<b>2407</b> will be described with reference to <figref idref="DRAWINGS">FIG. <b>215</b></figref>. Here, the screen display instruction process in the installation phase is exemplified, but the same applies to the other phases. When the CGW <b>13</b> proceeds to the display instruction process, the CGW <b>13</b> sets whether or not to display the screen (S<b>2411</b>), sets whether or not to display items of a screen (S<b>2412</b>), and gives an instruction for changing display contents of the items of the screen (S<b>2413</b>). The CGW <b>13</b> transmits a screen display request notification to the DCM <b>12</b>, causes the DCM <b>12</b> to transmit a screen display request to the in-vehicle display <b>7</b> (S<b>2414</b>), and waits for reception of an operation result information from the DCM <b>12</b> (S<b>2415</b>). The operation result information is information indicating a button operated by the user. The CGW <b>13</b> may directly transmit the screen display request notification to the in-vehicle display <b>7</b> and receive the operation result information.</p><p id="p-1079" num="1078">When it is determined that the operation result information is received from the DCM <b>12</b> by transmitting an operation result from the in-vehicle display <b>7</b> to the DCM <b>12</b> (S<b>2415</b>: YES), the CGW <b>13</b> checks an approval on the basis of the operation result information, and determines whether or not the user has approved rewriting of the application program (S<b>2416</b>).</p><p id="p-1080" num="1079">When it is determined that the user has approved rewriting of the application program (S<b>2416</b>: YES), the CGW <b>13</b> determines whether or not the rewrite specification data stores the position information (S<b>2417</b>). When it is determined that the position information is stored in the rewrite specification data (S<b>2417</b>: YES), the CGW <b>13</b> determines whether or not the current position of the vehicle satisfies the position information (S<b>2418</b>). S<b>2417</b> and S<b>2418</b> may be omitted in phases other than the installation phase. In a case where the position information is the permitted area, when the current position of the vehicle is inside the permitted area, the CGW <b>13</b> determines that the current position of the vehicle satisfies the position information (S<b>2418</b>: YES), and continues the rewriting of the application program (S<b>2419</b>).</p><p id="p-1081" num="1080">On the other hand, when the current position of the vehicle is outside the permitted area, the CGW <b>13</b> determines that the current position of the vehicle does not satisfy the position information, does not continue and stops the rewriting of the application program, and finishes the screen display instruction process. In a case where the position information is the prohibited area, when the current position of the vehicle is outside the prohibited area, the CGW <b>13</b> determines that the current position of the vehicle satisfies the position information (S<b>2418</b>: YES), continues the rewriting of the application program (S<b>2419</b>), and finishes the screen display instruction process. When the current position of the vehicle is inside the prohibited area, the CGW <b>13</b> determines that the current position of the vehicle does not satisfy the position information, does not continue and stops the rewriting of the application program, and finishes the display instruction process.</p><p id="p-1082" num="1081">A description will be made of the screen display request notification transmitted from the CGW <b>13</b> to the DCM <b>12</b> and the operation result information transmitted from the DCM <b>12</b> to the CGW <b>13</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>216</b></figref>, the screen display request notification transmitted from the CGW <b>13</b> to the DCM <b>12</b> includes a phase ID, a scene ID, and screen configuration information. The Phase ID is an ID for identifying each phase such as a campaign notification, download, installation, and activation. The scene ID is an ID for identifying the scene information illustrated in <figref idref="DRAWINGS">FIG. <b>210</b></figref>. The operation result information transmitted from the DCM <b>12</b> to the CGW <b>13</b> includes transmission source information, a phase ID, a scene ID, an operation result, and additional information. The CGW <b>13</b> collates the phase ID and scene ID stored in the screen display request notification with the phase ID and scene ID stored in the operation result information, and checks deviation or arbitration.</p><p id="p-1083" num="1082">That is, when the phase ID and the scene ID stored in the screen display request notification transmitted to the DCM <b>12</b> matches the phase ID and the scene ID stored in the operation result information received from the DCM <b>12</b>, the CGW <b>13</b> determines that the screen display request notification and the operation result information are consistent with each other, the screen display request notification and the operation result information are not deviated from each other, and thus arbitration is not required to be performed. On the other hand, when the phase ID and the scene ID stored in the screen display request notification transmitted to the DCM <b>12</b> do not match the phase ID and the scene ID stored in the operation result information received from the DCM <b>12</b>, the CGW <b>13</b> determines that the screen display request notification and the operation result information are inconsistent with each other, the screen display request notification and the operation result information are deviated from each other, and thus arbitration is required to be performed. The CGW <b>13</b> arbitrates whether or not to perform a process according to the operation result information received from the DCM <b>12</b>.</p><p id="p-1084" num="1083">The screen configuration information is information indicating configuration elements of a screen, and, as illustrated in <figref idref="DRAWINGS">FIG. <b>217</b></figref>, for example, in the activation approval screen <b>514</b>, there are six items such as a &#x201c;campaign ID . . . &#x201d; button <b>514</b><i>a</i>, an &#x201c;update name A . . . &#x201d; button <b>514</b><i>b</i>, an &#x201c;update name B . . . &#x201d; button <b>514</b><i>c</i>, a &#x201c;details check&#x201d; button <b>514</b><i>d</i>, a &#x201c;back&#x201d; button <b>514</b><i>e</i>, and an &#x201c;OK&#x201d; button <b>514</b><i>f</i>. In this case, as illustrated in <figref idref="DRAWINGS">FIG. <b>218</b></figref>, when all of the six items of the screen configuration information are set to &#x201c;display&#x201d;, as illustrated in <figref idref="DRAWINGS">FIG. <b>217</b></figref>, all of the six items are displayed on the activation approval screen <b>514</b>. That is, the user can operate any of the &#x201c;campaign ID . . . &#x201d; button <b>514</b><i>a</i>, the &#x201c;update name A . . . &#x201d; button <b>514</b><i>b</i>, the &#x201c;update name B . . . &#x201d; button <b>514</b><i>c</i>, the &#x201c;details check&#x201d; button <b>514</b><i>d</i>, the &#x201c;back&#x201d; button <b>514</b><i>e</i>, and the &#x201c;OK&#x201d; button <b>514</b><i>f. </i></p><p id="p-1085" num="1084">On the other hand, as illustrated in <figref idref="DRAWINGS">FIG. <b>219</b></figref>, when the &#x201c;campaign ID . . . &#x201d; button <b>514</b><i>a</i>, the &#x201c;update name A . . . &#x201d; button <b>514</b><i>b</i>, the &#x201c;update name B . . . &#x201d; button <b>514</b><i>c</i>, the &#x201c;detailed information&#x201d; button <b>514</b><i>d</i>, and the &#x201c;OK&#x201d; button <b>514</b><i>f </i>are set to &#x201c;display&#x201d;, and the &#x201c;back&#x201d; button <b>514</b><i>e </i>is set to &#x201c;non-display&#x201d; among the six items of screen configuration information, the &#x201c;campaign ID . . . &#x201d; button <b>514</b><i>a</i>, the &#x201c;update name A . . . &#x201d; button <b>514</b><i>b</i>, the &#x201c;update name B . . . &#x201d; button <b>514</b><i>c</i>, the &#x201c;detailed information&#x201d; button <b>514</b><i>d</i>, and the &#x201c;OK&#x201d; button <b>514</b><i>f </i>are displayed and the &#x201c;back&#x201d; button <b>514</b><i>e </i>is not displayed on the activation approval screen <b>514</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>220</b></figref>. That is, the user can operate any of the &#x201c;campaign ID . . . &#x201d; button <b>514</b><i>a</i>, the &#x201c;update name A . . . &#x201d; button <b>514</b><i>b</i>, the &#x201c;update name B . . . &#x201d; button <b>514</b><i>c</i>, the &#x201c;details check&#x201d; button <b>514</b><i>d</i>, the &#x201c;OK&#x201d; button <b>514</b><i>f</i>, but the &#x201c;back&#x201d; button <b>514</b><i>e </i>is not displayed, and thus the &#x201c;back&#x201d; button <b>514</b><i>e </i>is not operable. For example, with respect to rewriting of an application program having a relatively high degree of importance or urgency due to a recall or the like, since it is not desirable to reject activation, setting can be made not to reject the activation by making the &#x201c;back&#x201d; button <b>514</b><i>e </i>inoperable as described above. In this case, the user approves the activation by operating the &#x201c;OK&#x201d; button <b>514</b><i>f. </i></p><p id="p-1086" num="1085">A description will be made of a message framework regarding screen display and a user operation transmitted and received among the CGW <b>13</b>, the DCM <b>12</b>, the in-vehicle display <b>7</b>, the center device <b>3</b>, and a meter device <b>45</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>221</b></figref>, the CGW <b>13</b> and the DCM <b>12</b> are connected to each other via CAN or Ethernet, and the DCM <b>12</b> and the in-vehicle display <b>7</b> are connected to each other via the USB.</p><p id="p-1087" num="1086">The CGW <b>13</b> performs data communication with the center device <b>3</b> via the DCM <b>12</b>. Data transmitted from the CGW <b>13</b> through diagnosis communication is subjected to protocol conversion by the DCM <b>12</b> and is received from the DCM <b>12</b> by the center device <b>3</b> through HTTP communication. For example, the CGW <b>13</b> transmits data indicating the current progress state such as the current phase or a progress ratio, to the center device <b>3</b> via the DCM <b>12</b>. The data transmitted from the center device <b>3</b> through HTTP communication is subjected to protocol conversion by the DCM <b>12</b> and is received from the DCM <b>12</b> by the CGW <b>13</b> through diagnosis communication.</p><p id="p-1088" num="1087">The CGW <b>13</b> performs data communication with the in-vehicle display <b>7</b> via the DCM <b>12</b>. The data transmitted from the CGW <b>13</b> through the diagnosis communication is subjected to protocol conversion by the DCM <b>12</b> and is received from the DCM <b>12</b> by the in-vehicle display <b>7</b> through USB communication. The data transmitted from the in-vehicle display <b>7</b> through the USB communication is subjected to protocol conversion by the DCM <b>12</b> and is received from the DCM <b>12</b> by the CGW <b>13</b> through the diagnosis communication. For example, the CGW <b>13</b> acquires information regarding the user operation on the in-vehicle display <b>7</b> via the DCM <b>12</b>. As described above, in the vehicle program rewriting system <b>1</b>, the DCM <b>12</b> is provided with the protocol conversion function, and the mobile terminal <b>6</b> and the in-vehicle display <b>7</b> are configured to be equally handled by the CGW <b>13</b>. Information regarding the user operation is aggregated into the CGW <b>13</b>, and thus the CGW <b>13</b> arbitrates user operation results from a plurality of operation terminals so as to manage the current progress state.</p><p id="p-1089" num="1088">A description will be made of a sequence of a message frame transmitted and received among the CGW <b>13</b>, the DCM <b>12</b>, and the in-vehicle display <b>7</b>. As illustrated in <figref idref="DRAWINGS">FIGS. <b>220</b> to <b>229</b></figref>, in the screen display request notification transmitted from the CGW <b>13</b> to the DCM <b>12</b> and the operation result information transmitted from the CGW <b>13</b> to the DCM <b>12</b>, the phase ID is set to &#x201c;03&#x201d; in the campaign notification, the phase ID is set to &#x201c;04&#x201d; in the download, the phase ID is set to &#x201c;05&#x201d; in the installation, and the phase ID is set to &#x201c;06&#x201d; in the activation. In each phase of the campaign notification, the download, the installation, and the activation, the order of transmission and reception of message frames is the same, and the phase IDs are different from each other such that the phases are differentiated from each other.</p><p id="p-1090" num="1089"><figref idref="DRAWINGS">FIG. <b>222</b></figref> exemplifies the campaign notification phase. The CGW <b>13</b> manages the current progress state, specifies the phase ID, the scene ID, and the screen configuration information, and transmits the screen display request notification to the DCM <b>12</b>. When the screen display request notification is received from the CGW <b>13</b>, the DCM <b>12</b> transmits a screen display request to the in-vehicle display <b>7</b>. When the screen display request is received from the DCM <b>12</b>, the in-vehicle display <b>7</b> displays a campaign notification screen, and, when the user performs an operation of checking the campaign notification, transmits the operation result to the DCM <b>12</b>., When the operation result is received from the in-vehicle display <b>7</b>, the DCM <b>12</b> transmits operation result information to the CGW <b>13</b>. The operation result information received by the CGW <b>13</b> includes transmission source information, a phase ID, a scene ID, the operation result, and additional information. The CGW <b>13</b> updates the current progress state on the basis of the operation result information received from the DCM <b>12</b>. Here, the CGW <b>13</b> updates the current progress state to the download phase when approval operations are performed in the campaign notification phase.</p><p id="p-1091" num="1090"><figref idref="DRAWINGS">FIG. <b>223</b></figref> exemplifies the download phase. The CGW <b>13</b> manages the current progress state, specifies the phase ID, the scene ID, and the screen configuration information, and transmits the screen display request notification to the DCM <b>12</b>. When the screen display request notification is received from the CGW <b>13</b>, the DCM <b>12</b> transmits a screen display request to the in-vehicle display <b>7</b>. When a screen display request is received from the DCM <b>12</b>, the in-vehicle display <b>7</b> displays a download approval screen, and, when the user performs a download approval operation, transmits the operation result to the DCM <b>12</b>. When the operation result is received from the in-vehicle display <b>7</b>, the DCM <b>12</b> transmits operation result information to the CGW <b>13</b>. The operation result information received by the CGW <b>13</b> includes transmission source information, a phase ID, a scene ID, the operation result, and additional information. The CGW <b>13</b> updates the current progress state on the basis of the operation result information received from the DCM <b>12</b>. Here, the CGW <b>13</b> updates the current progress state to the installation phase when there is an approval operation during the download phase.</p><p id="p-1092" num="1091"><figref idref="DRAWINGS">FIG. <b>224</b></figref> exemplifies the installation phase. The CGW <b>13</b> manages the current progress state, specifies the phase ID, the scene ID, and the screen configuration information, and transmits the screen display request notification to the DCM <b>12</b>. When the screen display request notification is received from the CGW <b>13</b>, the DCM <b>12</b> transmits a screen display request to the in-vehicle display <b>7</b>. When the screen display request is received from the DCM <b>12</b>, the in-vehicle display <b>7</b> displays an installation approval screen, and, when the user performs an installation approval operation, transmits the operation result to the DCM <b>12</b>. When the operation result is received from the in-vehicle display <b>7</b>, the DCM <b>12</b> transmits operation result information to the CGW <b>13</b>. The operation result information received by the CGW <b>13</b> includes transmission source information, a phase ID, a scene ID, the operation result, and additional information. The CGW <b>13</b> updates the current progress state on the basis of the operation result information received from the DCM <b>12</b>. Here, the CGW <b>13</b> updates the current progress state to the activation phase when there is an approval operation during the installation phase.</p><p id="p-1093" num="1092"><figref idref="DRAWINGS">FIG. <b>225</b></figref> exemplifies the activation phase. The CGW <b>13</b> manages the current progress state, specifies the phase ID, the scene ID, and the screen configuration information, and transmits the screen display request notification to the DCM <b>12</b>. When the screen display request notification is received from the CGW <b>13</b>, the DCM <b>12</b> transmits a screen display request to the in-vehicle display <b>7</b>. When the screen display request is received from the DCM <b>12</b>, the in-vehicle display <b>7</b> displays an activation approval screen, and, when the user performs an activation approval operation, transmits the operation result to the DCM <b>12</b>. When the operation result is received from the in-vehicle display <b>7</b>, the DCM <b>12</b> transmits operation result information to the CGW <b>13</b>. The operation result information received by the CGW <b>13</b> includes transmission source information, a phase ID, a scene ID, the operation result, and additional information. The CGW <b>13</b> updates the current progress state on the basis of the operation result information received from the DCM <b>12</b>.</p><p id="p-1094" num="1093">The screen display will be described with reference to <figref idref="DRAWINGS">FIGS. <b>226</b> to <b>233</b></figref>. In a case where the customization mode is not set and no flag is set in the scene information of the rewrite specification data, the CGW <b>13</b> instructs the display terminal <b>5</b> to perform screen display corresponding to rewriting of the application program according to a content of the initial setting (S<b>2407</b>). When the initial setting is a setting of turning on all of the campaign notification, the download, the installation, and the activations, the CGW <b>13</b> gives a screen display instruction to the display terminal <b>5</b> in order to sequentially display the navigation screen <b>501</b>, the campaign notification screen <b>502</b>, the download approval screen <b>503</b>, the download-in-progress screen <b>504</b>, the download completion notification screen <b>505</b>, the installation approval screen <b>506</b>, the installation-in-progress screen <b>507</b>, the activation approval screen <b>508</b>, the activation completion notification screen <b>509</b>, and the check operation screen <b>510</b>, as illustrated in <figref idref="DRAWINGS">FIGS. <b>54</b> to <b>69</b></figref>. In this case, the contents for obtaining the user's approval (OK) is displayed on the campaign notification screen <b>502</b>, the download approval screen <b>503</b>, the installation approval screen <b>506</b>, the activation approval screen <b>508</b>, and the check operation screen <b>510</b>.</p><p id="p-1095" num="1094">In a case where the user's customization mode is set, the CGW <b>13</b> instructs the display terminal <b>5</b> to perform screen display corresponding to the rewriting of the application program according to a content of the customization mode (S<b>2406</b>). However, this is limited to a case where scene information is not designated. For example, when the campaign notification is set to ON, the download is set to OFF, the installation is set to OFF, and the activation is set to ON in the customization mode, the CGW <b>13</b> gives a screen display instruction to the display terminal <b>5</b> in order not to display the download approval screen <b>503</b>, the download-in-progress screen <b>504</b>, the download completion notification screen <b>505</b>, the installation approval screen <b>506</b>, and the installation-in-progress screen <b>507</b> and to display the activation approval screen <b>508</b> after the campaign notification screen <b>502</b> is displayed.</p><p id="p-1096" num="1095">In a case where the recall flag is set in the scene information of the rewrite specification data, the CGW <b>13</b> instructs the display terminal <b>5</b> to perform screen display corresponding to the rewriting of the application program according to a content of the recall mode (S<b>2404</b>). In this case, as illustrated in <figref idref="DRAWINGS">FIG. <b>227</b></figref>, the CGW <b>13</b> does not display the &#x201c;later&#x201d; button <b>502</b><i>a </i>on the campaign notification screen <b>502</b>. As illustrated in <figref idref="DRAWINGS">FIGS. <b>228</b> and <b>229</b></figref>, the CGW <b>13</b> does not display the &#x201c;back&#x201d; button <b>503</b><i>c </i>on the download approval screen <b>503</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>230</b></figref>, the CGW <b>13</b> does not display the &#x201c;back&#x201d; button <b>504</b><i>b </i>on the download-in-progress screen <b>504</b>. As illustrated in <figref idref="DRAWINGS">FIGS. <b>231</b> and <b>232</b></figref>, the CGW <b>13</b> does not display the &#x201c;back&#x201d; button <b>505</b><i>b </i>on the installation approval screen <b>505</b>. Also, as illustrated in <figref idref="DRAWINGS">FIG. <b>233</b></figref>, the CGW <b>13</b> does not display the &#x201c;back&#x201d; button on the activation approval screen <b>518</b>.</p><p id="p-1097" num="1096">That is, in a case where the recall flag is set in the scene information of the rewrite specification data, as described above, the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button may be set to non-display such that the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button is not displayed. Alternatively, after the campaign notification screen <b>502</b> may be displayed and the user's approval is obtained on the download approval screen <b>503</b>, display of the installation approval screen <b>505</b> and the activation approval screen <b>518</b> may be omitted. Although a case where the recall flag is set in the scene information of the rewrite specification data has been described above, the same applies to a case where the dealer flag, the factory flag, the function update notification flag, and the forced execution flag are set in the scene information of the rewrite specification data, and an instruction may be given for availability of display of a screen corresponding to a phase, availability of display of an item of the screen, or changing of a display content of the item of the screen depending on a situation in which the application program is rewritten.</p><p id="p-1098" num="1097">Specifically, in a case where the dealer flag is set in the scene information of the rewrite specification data, since it is necessary to display a dedicated screen in the repair process in the dealer environment, a dedicated screen for a dealer may be displayed instead of a screen for a user. That is, since a user does not perform an operation related to rewriting of an application program, but a dealer's operator performs the operation related to the rewriting of the application program, the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button may be set to be displayed for the dealer's work, so that the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button is displayed. For example, a guidance such as &#x201c;please rewrite in dealer&#x201d; may be displayed to prompt the user to take the vehicle to the dealer.</p><p id="p-1099" num="1098">In a case where the factory flag is set in the scene information of the rewrite specification data, screen display is not required in the manufacturing process in the factory environment, and thus a screen may not be displayed.</p><p id="p-1100" num="1099">In a case where the function update notification flag is set in the scene information of the rewrite specification data, even when the user has customized the display unnecessary setting, a screen display for reliably notifying the user of the change content is required, so a screen for the user may be displayed regardless of the customized setting. That is, even in a case where the user determines that the approval is unnecessary, since it is desirable that the approval is forced to be obtained and an approval screen is forced to be displayed, as described above, the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button is set to display such that the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button is displayed.</p><p id="p-1101" num="1100">In a case where the forced execution flag is set in the scene information of the rewrite specification data, even when the user sets display to be required through customization, and thus the user does not give an approval, forced execution for reliably updating software of the vehicle is required. Therefore, a dedicated screen for the user may be displayed regardless of the customization setting. That is, since the user determines that the approval is necessary, but the application program is rewritten even when the approval is not given, the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button may be set to non-display as described above such that the &#x201c;later&#x201d; button or the &#x201c;back&#x201d; button is not displayed. Since the function is based on an approval being obtained, rewriting may be performed by obtaining the approval without displaying the screen itself.</p><p id="p-1102" num="1101">As described above, the CGW <b>13</b> performs the progress display screen display control process, and thus instructs the display terminal <b>5</b> to perform screen display corresponding to a setting content of a customization mode in a case where the customization mode is set. The user can customize screen display corresponding to the progress of rewriting.</p><p id="p-1103" num="1102">(25) Program Update Notification Control Process</p><p id="p-1104" num="1103">The program update notification control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>234</b> to <b>240</b></figref>. The vehicle program rewriting system <b>1</b> performs the program update notification control process in the CGW <b>13</b>.</p><p id="p-1105" num="1104">As illustrated in <figref idref="DRAWINGS">FIG. <b>234</b></figref>, the CGW <b>13</b> includes a phase specifying unit <b>91</b><i>a</i>, a display instruction unit <b>91</b><i>b</i>, an indicator display control unit <b>91</b><i>c</i>, an icon display control unit <b>91</b><i>d</i>, a detailed information display control unit <b>91</b><i>e</i>, and an invalidation instruction unit <b>91</b><i>f </i>in the program update notification control unit <b>91</b>. The phase specifying unit <b>91</b><i>a </i>specifies a phase as a progress situation of program update. The phase specifying unit <b>91</b><i>a </i>specifies campaign notification, download approval, download in progress, installation approval, installation in progress, activation approval, activation in progress, and update completion as phases of program update.</p><p id="p-1106" num="1105">When the phase of the program update is specified by the phase specifying unit <b>91</b><i>a</i>, the display instruction unit <b>91</b><i>b </i>gives an instruction for displaying an indicator in an aspect corresponding to the phase of the specified program update. When the instruction for displaying the indicator is given from the display instruction unit <b>91</b>, the indicator display control unit <b>91</b><i>c </i>controls display of the indicator in response to the instruction. Specifically, the indicator display control unit <b>91</b><i>c </i>controls lighting of an indicator <b>46</b> in the meter device <b>45</b>.</p><p id="p-1107" num="1106">The icon display control unit <b>91</b><i>d </i>controls display of an icon on the in-vehicle display <b>7</b> following the indicator display control unit <b>91</b><i>c </i>controlling display of the indicator. The detailed information display control unit <b>91</b><i>e </i>controls display of an icon and detailed information related to the program update on the in-vehicle display <b>7</b> or the mobile terminal <b>6</b> following the indicator display control unit <b>91</b><i>c </i>controlling display of the indicator. The icon is the campaign notification icon <b>501</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>55</b></figref>, and the detailed information is, for example, the campaign notification screen <b>502</b> displayed in a pop-up form illustrated in <figref idref="DRAWINGS">FIG. <b>56</b></figref>, or the download approval screen illustrated in <figref idref="DRAWINGS">FIGS. <b>57</b> and <b>58</b></figref>. The detailed information display control unit <b>91</b><i>e </i>gives an instruction for displaying the icon in the aspect corresponding to the phase of the program update specified by the phase specifying unit <b>91</b><i>a</i>, or gives an instruction for displaying the detailed information screen corresponding to the phase and the user operation.</p><p id="p-1108" num="1107">The invalidation instruction unit <b>91</b><i>f </i>instructs the power supply management ECU <b>20</b> and the respective ECUs <b>19</b> related to the user operation to invalidate reception of the user operation even in a case where the power supply management ECU <b>20</b> performs the power supply control by updating the programs during parking. For example, by instructing the engine ECU <b>47</b> (refer to <figref idref="DRAWINGS">FIG. <b>230</b></figref>) to invalidate reception of the user operation, in a case where a memory structure of the rewrite target ECU <b>19</b> is a single-bank memory and the installation is performed during parking, the reception is invalidated and the engine is suppressed not to be started even when the user performs an operation of starting the engine. By instructing the power supply management ECU <b>20</b> to invalidate the user operation, in a case where a memory structure of the rewrite target ECU <b>19</b> is a single-bank memory, the IG power is turned on, installation is performed during parking, the reception is invalidated and the IG power is suppressed not to be turned off even when the user performs an operation of turning off the IG power. In this case, the invalidation instruction unit <b>91</b><i>f </i>may instruct the in-vehicle display <b>7</b> to perform a notification that the reception of the user operation is invalidated.</p><p id="p-1109" num="1108">Next, an operation of the above-described configuration will be described with reference to <figref idref="DRAWINGS">FIGS. <b>235</b> to <b>240</b></figref>. The CGW <b>13</b> executes a program update notification control program and thus performs the program update notification control process.</p><p id="p-1110" num="1109">When the program update notification control process is initiated, the CGW <b>13</b> determines whether or not a campaign of program update has occurred (S<b>2501</b>). When it is determined that the campaign of the program update has occurred (S<b>2501</b>: YES), the CGW <b>13</b> specifies a phase of the program update and a memory configuration (S<b>2502</b>; corresponding to a phase specifying procedure). The CGW <b>13</b> instructs the meter device <b>45</b> to display the indicator <b>46</b> in an aspect corresponding to the specified phase of the program update (S<b>2503</b>; corresponding to a display instruction procedure). The in-vehicle display <b>7</b> is instructed to display an icon corresponding to the specified phase of the program update (S<b>2504</b>).</p><p id="p-1111" num="1110">It is determined whether or not a detailed display request is available (S<b>2505</b>), and, when it is determined that the detailed display request is available (S<b>2505</b>: YES), the CGW <b>13</b> determines whether or not data communication with the in-vehicle display <b>7</b> is possible (S<b>2506</b>). For example, when the user presses the campaign notification icon <b>501</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the &#x201c;check&#x201d; button <b>502</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>56</b></figref>, or the &#x201c;details check&#x201d; button <b>503</b><i>b </i>illustrated in <figref idref="DRAWINGS">FIG. <b>57</b></figref>, the CGW <b>13</b> determines that the detailed display request is available. When it is determined that data communication with the in-vehicle display <b>7</b> is possible (S<b>2506</b>: YES), the CGW <b>13</b> acquires detailed information (S<b>2507</b>), instructs the in-vehicle display <b>7</b> to display the detailed information (S<b>2508</b>), and instructs the center device <b>3</b> to display the detailed information (S<b>2509</b>).</p><p id="p-1112" num="1111">The CGW <b>13</b> acquires a notification content received along with the campaign notification and a notification content of the distribution specification data, and notifies the in-vehicle display <b>7</b> of the notification contents to be instructed to display the detailed information. The CGW <b>13</b> notifies the center device <b>3</b> of the phase and a content of the user operation as an instruction for displaying the detailed information such that the same content as that in the in-vehicle display <b>7</b> is also displayed on the mobile terminal <b>6</b>.</p><p id="p-1113" num="1112">The CGW <b>13</b> determines whether or not an event of the program updating event is finished (S<b>2510</b>).</p><p id="p-1114" num="1113">For example, when the user confirms that the activation has been completed and the program has been updated, the CGW <b>13</b> determines that the event is finished. When it is determined that the event of the program update is not finished (S<b>2510</b>: NO), the CGW <b>13</b> returns to step S<b>2502</b> and repeatedly performs step S<b>2502</b> and the subsequent steps. The CGW <b>13</b> repeatedly performs S<b>2502</b> and the subsequent steps in each phase of the campaign notification, the download approval, the download in progress, the installation approval, the installation in progress, the activation approval, the activation in progress, and the update completion.</p><p id="p-1115" num="1114">When it is determined that the event of the program update is finished (S<b>2510</b>: YES), the CGW <b>13</b> finishes the program update notification control process.</p><p id="p-1116" num="1115">In the meter device <b>45</b>, the indicator <b>46</b> is disposed at a predetermined position which can be recognized by the user, and, when a notification request notification is received from the CGW <b>13</b>, the indicator <b>46</b> is lighted or flashed as a notification during rewriting of the application program. Here, instead of the flashing, there may be the use of lighting display which is emphasized more than normal lighting display such as changing a color or increasing luminance of the indicator <b>46</b>. That is, any display may be used as long as the display is emphasized more than normal display. The indicator <b>46</b> related to program update is a single indicator and is formed of a single design.</p><p id="p-1117" num="1116">As illustrated in <figref idref="DRAWINGS">FIG. <b>236</b></figref>, the meter device <b>45</b> changes notification aspects of the indicator in each phase in a case where an application program rewrite target is a double-bank memory, in a case where the application program rewrite target is a single-bank suspend memory, and in a case where the application program rewrite target is a single-bank memory. Specifically, the meter device <b>45</b> specifies a notification aspect of the indicator <b>46</b> according to a phase and a memory configuration designated from the CGW <b>13</b>, and performs a notification according to the specified notification aspect. Instead of the meter device <b>45</b>, the indicator display control unit <b>91</b><i>c </i>may control a notification aspect of the indicator <b>46</b>. The indicator display control unit <b>91</b><i>c </i>may specify a notification aspect of the indicator <b>46</b>, and instruct the meter device <b>45</b> to control lighting of the indicator <b>46</b> in the notification aspect.</p><p id="p-1118" num="1117">As illustrated in <figref idref="DRAWINGS">FIG. <b>236</b></figref>, the indicator display control unit <b>91</b><i>c </i>flashes indicator <b>46</b> green, for example, in a phase where a restriction may occur in traveling of the vehicle, such as the installation or the activation. In a case where the rewrite target ECU <b>19</b> is a double-bank memory, the indicator display control unit <b>91</b><i>c </i>performs display in a flashing manner only in a phase in which activation is in progress. In a case where the rewrite target ECU <b>19</b> has a single-bank suspend memory, the indicator display control unit <b>91</b><i>c </i>displays the indicator in a flashing manner in the installation-in-progress phase during IG-off, the activation approval phase, and the activation-in-progress phase. In a case where the rewrite target ECU <b>19</b> has a single-bank memory, the indicator display control unit <b>91</b><i>c </i>displays the indicator in a flashing manner in the installation-in-progress phase, the activation approval phase, and the activation-in-progress phase. That is, the display of the indicator <b>46</b> in the campaign notification phase, the download phase, and the phase after the completion of activation (at IG-off, IG-on, and a check operation) is common regardless of memory configuration, but the display of the indicator <b>46</b> in the installation phase and the activation phase is performed in different aspects depending on a memory configuration. The IG-off time illustrated in <figref idref="DRAWINGS">FIG. <b>236</b></figref> is a display mode when the activation is executed during parking and the IG power is turned off due to completion of the activation, and the indicator <b>46</b> is lighted off when the IG power is turned off. Thereafter, when the IG power is turned on through the user operation, the indicator <b>46</b> is lighted. This is so that the user is notified of that the overall program update has been completed. When the user presses the &#x201c;OK&#x201d; button <b>510</b><i>b </i>on the check operation screen <b>510</b> illustrated in <figref idref="DRAWINGS">FIG. <b>68</b></figref>, it is determined that a check operation has been performed, and the indicator <b>46</b> is lighted off.</p><p id="p-1119" num="1118">Hereinafter, a case where the meter device <b>45</b> controls a notification aspect of the indicator <b>46</b> will be described below, but the indicator display control unit <b>91</b><i>c </i>may control a notification aspect of the indicator <b>46</b> as described above. <figref idref="DRAWINGS">FIG. <b>250</b></figref> illustrates a notification aspect of the indicator in a case where the memory type of the rewrite target ECU <b>19</b> is a double-bank memory. The meter device <b>45</b> lights the indicator <b>46</b> in the phases from the campaign notification to the activation approval, and flashes the indicator <b>46</b> in the activation-in-progress phase, on the basis of instructions from the CGW <b>13</b>. Thereafter, the meter device <b>45</b> lights off the indicator <b>46</b> at IG-off, lights the indicator <b>46</b> at IG-on, and lights off the indicator <b>46</b> when the user performs a check operation for completion of the update. That is, in a case of the double-bank memory, there is a probability that the traveling of the vehicle may be restricted only during execution of activation. Only the execution of the activation is performed during a period in which the vehicle cannot travel because the vehicle is in a parking state. Thus, the meter device <b>45</b> flashes the indicator <b>46</b> in the activation-in-progress phase. Here, the indicator is a predetermined design, and is displayed green in a case of normal progress.</p><p id="p-1120" num="1119"><figref idref="DRAWINGS">FIG. <b>238</b></figref> illustrates a notification aspect of the indicator in a case where the memory type of the rewrite target ECU <b>19</b> is a single-bank suspend memory. In a case where an application program rewrite target is a single-bank suspend memory, the meter device <b>45</b> lights the indicator <b>46</b> in the phases from the campaign notification to the installation approval, lights the indicator <b>46</b> at IG-on during execution of the installation, and flashes the indicator <b>46</b> at IG-off, on the basis of instructions from the CGW <b>13</b>. That is, the meter device <b>45</b> lights the indicator <b>46</b> because writing into the flash memory of the single-bank suspend memory ECU is not executed in an IG ON state, but flashes the indicator <b>46</b> because writing into the flash memory is executed in an IG OFF state. The meter device <b>45</b> flashes the indicator <b>46</b> in the phases from the activation approval to the activation in progress. Thereafter, the indicator <b>46</b> is lighted off at IG-off, the indicator <b>46</b> is lighted in IG-on, and the indicator <b>46</b> is lighted off when the user performs a check operation for completion of the update. That is, in a case of the single-bank suspend memory, there is a probability that the traveling of the vehicle may be restricted from the installation in progress in an IG ON state to the activation in progress. Thus, the meter device <b>45</b> flashes the indicator <b>46</b> in these phases. Here, in a case of the single-bank suspend memory, even during the execution of the installation in an inactive bank, it is possible to start an active bank and control traveling of the vehicle by stopping the installation. Thus, as in a case of the double-bank memory, flashing display may be performed only during execution of the activation in which the vehicle cannot travel.</p><p id="p-1121" num="1120"><figref idref="DRAWINGS">FIG. <b>239</b></figref> illustrates a notification aspect of the indicator when the memory type of the rewrite target ECU <b>19</b> is a single-bank memory. In a case where an application program rewrite target is a single-bank memory, the meter device <b>45</b> lights the indicator <b>46</b> in the phases from the campaign notification to the installation approval, and flashes the indicator <b>46</b> in the phases from the installation in progress to the activation in progress, on the basis of instructions from the CGW <b>13</b>. Thereafter, the indicator <b>46</b> is lighted off at IG-off, the indicator <b>46</b> is lighted in IG-on, and the indicator <b>46</b> is lighted off when the user performs a check operation for completion of the update. That is, in a case of the single-bank memory, there is a probability that the traveling of the vehicle may be restricted from the installation in progress to the activation in progress. Thus, the meter device <b>45</b> flashes the indicator <b>46</b> in these phases.</p><p id="p-1122" num="1121">In a case where the ECUs <b>19</b> having a double-bank memory, a single-bank suspend memory, and a single-bank memory are included as the program rewrite target ECUs <b>19</b> in one campaign notification, the meter device <b>45</b> performs rewriting of application programs on the ECUs <b>19</b> in an order of the double-bank memory, the single-bank suspend memory, and the single-bank memory. After the campaign notification, the CGW <b>13</b> performs the download approval to the installation in progress on the double-bank memory ECU <b>19</b>, and the meter device <b>45</b> lights the indicator <b>46</b> during this period. When the installation-in-progress phase on the double-bank memory ECU <b>19</b> is completed, the CGW <b>13</b> performs the download approval to the installation in progress on the single-bank suspend memory ECU <b>19</b>, and the meter device <b>45</b> lights the indicator <b>46</b> during this period. When the installation-in-progress phase on the single-bank suspend memory ECU <b>19</b> is completed, the CGW <b>13</b> performs the download approval to the installation approval on the single-bank memory ECU <b>19</b>, and the meter device <b>45</b> lights the indicator <b>46</b> during this period.</p><p id="p-1123" num="1122">The meter device <b>45</b> flashes the indicators <b>46</b> from the installation in progress in the single-bank memory to the activation in progress in three types of the ECUs <b>19</b> of which the memory types are different from each other. The meter device <b>45</b> lights off the indicator <b>46</b> at subsequent IG-off, lights the indicator <b>46</b> at IG-on, and lights off the indicator <b>46</b> when the user performs a check operation for completion of the update.</p><p id="p-1124" num="1123">The meter device <b>45</b> may perform the following control in a case where the ECUs <b>19</b> having a double-bank memory, a single-bank suspend memory, and a single-bank memory are included as the program rewrite target ECUs <b>19</b> in one campaign notification. The meter device <b>45</b> performs rewriting of application programs on the ECUs <b>19</b> in an order of the double-bank memory, the single-bank suspend memory, and the single-bank memory. After the campaign notification, the CGW <b>13</b> gives an instruction for lighting a predetermined green design as the indicator <b>46</b> in the download approval for download of a distribution package including update data of rewrite target ECUs <b>19</b> and the download in progress. Thereafter, the CGW <b>13</b> gives an instruction for lighting a predetermined green design as the installation approval indicator <b>46</b>. The installation approval here also serves as the activation approval for the convenience of including the single-bank memory ECU <b>19</b>. When the user's approval for the installation is obtained, the CGW <b>13</b> first performs installation on the double-bank memory ECU <b>19</b>. While the installation is performed in the double-bank memory ECU <b>19</b>, the meter device <b>45</b> lights the indicators <b>46</b>. When the CGW <b>13</b> completes the installation-in-progress phase for the double-bank memory ECU <b>19</b>, the CGW <b>13</b> performs installation on the single-bank suspend memory ECU <b>19</b>. While the installation is performed in the single-bank suspend memory ECU <b>19</b>, the meter device <b>45</b> lights the indicator <b>46</b>. When the CGW <b>13</b> completes the installation-in-progress phase for the single-bank suspend memory ECU <b>19</b>, the CGW <b>13</b> performs installation on the single-bank memory ECU <b>19</b>. While the installation is performed in the single-bank suspend memory ECU <b>19</b>, the meter device <b>45</b> flashes the indicator <b>46</b>. When the installation is completed in all of the rewrite target ECUs <b>19</b>, the CGW <b>13</b> performs activation in a state in which the indicator <b>46</b> is flashed. The CGW <b>13</b> instructs the meter device <b>45</b> to light off the indicator <b>46</b> at subsequent IG-off, instructs the meter device <b>45</b> to light the indicator <b>46</b> at IG-on, and instructs the meter device <b>46</b> to light off the indicator <b>46</b> when the user performs a check operation for completion of the update.</p><p id="p-1125" num="1124">In the respective phases illustrated in <figref idref="DRAWINGS">FIGS. <b>237</b> to <b>239</b></figref>, the CGW <b>13</b> also instructs the in-vehicle display <b>7</b> to display icons. The CGW <b>13</b> gives an instruction for displaying the campaign notification icon <b>501</b><i>a </i>illustrated in <figref idref="DRAWINGS">FIG. <b>55</b></figref> in the campaign notification phase. The CGW <b>13</b> continues to display the campaign notification icons <b>501</b><i>a </i>even in the download approval phase. The CGW <b>13</b> gives an instruction for displaying the download-in-progress icon <b>501</b><i>b </i>illustrated in <figref idref="DRAWINGS">FIG. <b>59</b></figref> in the download-in-progress phase. In the installation approval phase, the CGW <b>13</b> may continue to display the download-in-progress icon <b>501</b><i>b </i>or may give an instruction for displaying the campaign notification icon <b>501</b><i>a </i>again. The CGW <b>13</b> gives an instruction for displaying the installation-in-progress icon <b>501</b><i>c </i>illustrated in <figref idref="DRAWINGS">FIG. <b>64</b></figref> in the installation-in-progress phase. In the activation approval phase, the CGW <b>13</b> may continue to display the installation-in-progress icon <b>501</b><i>c </i>or may give an instruction for displaying the campaign notification icon <b>501</b><i>a </i>again. The CGW <b>13</b> does not display the icons in the activation-in-progress phase and at subsequent IG-off. At IG-on, the CGW <b>13</b> may give an instruction for displaying the campaign notification icon <b>501</b><i>a </i>again, or may display the activation completion notification screen <b>509</b> in a pop-up form as illustrated in <figref idref="DRAWINGS">FIG. <b>67</b></figref>. The CGW <b>13</b> does not display the icons when the user performs a check operation for completion of the update. There is only one icon display related to the program update, and the icon display is formed of a design corresponding to each phase.</p><p id="p-1126" num="1125">As described above, in a case where the CGW <b>13</b> gives an instruction for a notification that the application program is being rewritten by using the indicator <b>46</b>, when an abnormality occurs during rewriting of the application program, a notification aspect differs from that during the normal time. The CGW <b>13</b> gives an instruction for green lighting display or green flashing display, for example, when the rewriting of the application program is being performed normally, and gives an instruction for yellow or red lighting display or yellow or red flashing display, for example, when an abnormality occurs. The CGW <b>13</b> may change colors according to the degree of abnormality, give an instruction for red lighting display or red flashing display, for example, when the degree of abnormality is relatively high, and give an instruction for yellow lighting display or yellow flashing display when the degree of abnormality is relatively low. Here, the abnormality mentioned here includes a state in which a distribution package cannot be downloaded, a state in which write data cannot be installed, a state in which write data cannot be written in the rewrite target ECU <b>19</b>, a state in which write data is incorrect, and the like.</p><p id="p-1127" num="1126">The in-vehicle display <b>7</b> sequentially displays the campaign notification screen <b>502</b>, the download approval screen <b>503</b>, the download-in-progress screen <b>504</b>, the download completion notification screen <b>505</b>, the installation approval <b>506</b>, the installation-in-progress screen <b>507</b>, the activation approval screen <b>508</b>, the IG-on screen <b>509</b>, and the update completion check operation screen <b>510</b> as detailed display on the basis of the user operation. The same detailed display as in the in-vehicle display <b>7</b> may be performed in the mobile terminal <b>6</b> that is communicatively connected to the center device <b>3</b>. For example, in a vehicle in which the in-vehicle display <b>7</b> is not mounted, in a case where the user requests the detailed display by operating a steering wheel switch or the like, the CGW <b>13</b> requests the detailed display to the center device <b>3</b> via the DCM <b>12</b>. The center device <b>3</b> creates content of the detailed display, and the mobile terminal <b>6</b> displays the content such that the user can check the detailed information on the mobile terminal <b>6</b>.</p><p id="p-1128" num="1127">As illustrated in <figref idref="DRAWINGS">FIG. <b>240</b></figref>, in a case where an application program of a single-bank suspend memory or a single-bank memory of an IG ECU or an ACC ECU is rewritten during parking, the CGW <b>13</b> forcibly starts the power supply management ECU <b>20</b> to turn on the power of the vehicle. In this case, when the power supply management ECU <b>20</b> is forced to be started, the meter device <b>45</b> or the in-vehicle display <b>7</b> is started due to an operation of the power supply management ECU <b>20</b>. Thus, the CGW <b>13</b> instructs the meter device <b>45</b> or the in-vehicle display <b>7</b> to suppress a notification related to the program update. When the meter device <b>45</b> is instructed to suppress the notification of the update of the program from the CGW <b>13</b>, the meter device <b>45</b> does not light or flash the indicator <b>46</b>. When the in-vehicle display <b>7</b> is instructed to suppress the notification of the program update from the CGW <b>13</b>, the in-vehicle display <b>7</b> does not perform the above-described detailed display. That is, in a case of a situation in which the user is not riding in the installation or the activation performed during parking, since the notification related to the program update is unnecessary, the control is performed such that the notification is not performed.</p><p id="p-1129" num="1128">When the power supply management ECU <b>20</b> is forced to be started to turn on the vehicle power, engine control is possible by receiving an operation on a push switch from the user, but the CGW <b>13</b> instructs the power supply management ECU <b>20</b> to invalidate reception of the user operation, and instructs the meter device <b>45</b>, the in-vehicle display <b>7</b>, and the ECU <b>19</b> related to the user operation to perform a notification of the invalidation of the reception of the user operation. In a case where the meter device <b>45</b> is instructed to invalidate the reception of the user operation from the CGW <b>13</b>, the meter device <b>45</b> invalidates the reception of the operation even when the user performs the operation on the meter device <b>45</b>. Similarly, in a case where the in-vehicle display <b>7</b> is instructed to invalidate the reception of the user operation from the CGW <b>13</b>, the in-vehicle display <b>7</b> invalidates the reception of the operation even when the user performs the operation on the in-vehicle display <b>7</b>. In a case where the engine ECU <b>47</b> is instructed to invalidate the reception of the user operation from the CGW <b>13</b>, the engine ECU <b>47</b> invalidates the reception of the operation to prevent the engine from being started even when the user performs the operation of starting the engine with the push switch.</p><p id="p-1130" num="1129">As described above, the CGW <b>13</b> instructs the meter device <b>45</b> to perform a notification that an application program is being rewritten by performing the program update notification control process. Even in a situation where the user cannot be notified that an application program is being rewritten by using the mobile terminal <b>6</b> or the in-vehicle display <b>7</b>, the user can be appropriately notified that an application program is being rewritten by notifying the user that an application program is being rewritten by using the meter device <b>45</b>. The CGW <b>13</b> may change a notification aspect in accordance with a progress situation of rewriting of an application program.</p><p id="p-1131" num="1130">(26) Self-Retention Power Execution Control Process</p><p id="p-1132" num="1131">The self-retention power execution control process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>241</b> to <b>245</b></figref>. The vehicle program rewriting system <b>1</b> performs self-retention power execution control process in the CGW <b>13</b>, the ECU <b>19</b>, the in-vehicle display <b>7</b>, and the power supply management ECU <b>20</b>. In this case, the CGW <b>13</b> gives an instruction for self-retention power to the ECU <b>19</b>, the in-vehicle display <b>7</b>, and the power supply management ECU <b>20</b>. That is, the CGW <b>13</b> corresponds to a vehicle master device, and the ECU <b>19</b>, the in-vehicle display <b>7</b>, and the power supply management ECU <b>20</b> correspond to vehicle slave devices. The CGW <b>13</b> has a second self-retention power circuit, the vehicle slave device has a first self-retention power circuit.</p><p id="p-1133" num="1132">As illustrated in <figref idref="DRAWINGS">FIG. <b>241</b></figref>, the CGW <b>13</b> includes, in the self-retention power execution control unit <b>92</b>, a vehicle power determination unit <b>92</b><i>a</i>, a rewrite-in-progress determination unit <b>92</b><i>b</i>, a first self-retention power determination unit <b>92</b><i>c</i>, a self-retention power instruction unit <b>92</b><i>d</i>, a second self-retention power determination unit <b>92</b><i>e</i>, a second self-retention power enable unit <b>92</b><i>f</i>, a second stop condition establishment determination unit <b>92</b><i>g</i>, and a second self-retention power stop unit <b>92</b><i>h. </i></p><p id="p-1134" num="1133">The vehicle power determination unit <b>92</b><i>a </i>determines turning-on and turning-off of the vehicle power. The rewrite-in-progress determination unit <b>92</b><i>b </i>determines whether or not an application program is being rewritten. The rewrite-in-progress determination unit <b>95</b><i>b </i>also determines the rewrite target ECU <b>19</b> in which the application program is being rewritten. The first self-retention power enable unit <b>92</b><i>c </i>determines the necessity of self-retaining the power in the vehicle slave devices when it is determined by the vehicle power determination unit <b>92</b><i>a</i>, that the vehicle power is turned off and it is determined by the rewrite-in-progress determination unit <b>92</b><i>b </i>that the program is being rewritten. That is, the first self-retention power enable unit <b>92</b><i>c </i>refers to the rewrite specification data illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, and determines that the power needs to be self-retained when a rewrite method in the ECU information of the rewrite target ECU <b>19</b> is designated as the self-retention power method, and determines that the power does not need to be self-retained when the rewrite method is specified as the power supply control method.</p><p id="p-1135" num="1134">When it is determined by the first self-retention power determination unit <b>92</b><i>c </i>that the power needs to be self-retained in the vehicle slave device, the self-retention power instruction unit <b>92</b><i>d </i>instructs the vehicle slave device to enable the first self-retention power circuit. As an aspect in which the self-retention power instruction unit <b>92</b><i>d </i>gives an instruction for enabling the first self-retention power circuit, there is an aspect of designating a completion time of the self-retention power, an aspect of giving an instruction for an extension time of the self-retention power, and an aspect of continuing to periodically output a self-retention request to the vehicle slave device. The self-retention power instruction unit <b>92</b><i>d </i>refers to the rewrite specification data illustrated in <figref idref="DRAWINGS">FIG. <b>31</b></figref>, and instructs the vehicle slave device to enable the first self-retention power circuit according to a time designated in the self-retention power time of the ECU information of the rewrite target ECU <b>19</b>.</p><p id="p-1136" num="1135">That is, in the aspect of designating the completion time of the self-retention power, the self-retention power instruction unit <b>92</b><i>d </i>designates, as the completion time, the time obtained by adding the time designated in the rewrite specification data from the current time. In the case of designating the extension time of the self-retention power, the self-retention power instruction unit <b>92</b><i>d </i>designates the time specified in the rewrite specification data as the extension time. In the aspect of continuing to periodically output the self-retention request to the vehicle slave device, the self-retention power instruction unit <b>92</b><i>d </i>continues to periodically output the self-retention request to the vehicle slave device until the time specified in the rewrite specification data elapses.</p><p id="p-1137" num="1136">The second self-retention power determination unit <b>92</b><i>e </i>determines the necessity of self-retaining the power therein when it is determined by the vehicle power determination unit <b>92</b><i>a </i>that the vehicle power is turned off and it is determined by the rewrite-in-progress determination unit <b>92</b><i>b </i>that the program is being rewritten. That is, the necessity of self-retaining the power is determined in consideration of a configuration in which the CGW <b>13</b> is an IG power system or an ACC power system. When it is determined by the second self-retention power determination unit <b>92</b><i>e </i>that it is necessary to self-retain the power supply therein, the second self-retention power enable unit <b>92</b><i>f </i>enables the second self-retention power circuit.</p><p id="p-1138" num="1137">In this case, when the second self-retention power circuit is currently stopped, the second self-retention power enable unit <b>92</b><i>f </i>starts the second self-retention power circuit and thus enables the second self-retention power circuit. In a case where the second self-retention power circuit is currently started, the second self-retention power enable unit <b>92</b><i>f </i>extends an operation period of the second self-retention power circuit, and thus enables the self-retention power circuit.</p><p id="p-1139" num="1138">The second stop condition establishment determination unit <b>92</b><i>g </i>determines whether or not a stop condition for the self-retention power of the second self-retention power circuit is established. Specifically, the second stop condition establishment determination unit <b>92</b><i>g </i>monitors a remaining battery charge of the vehicle battery <b>40</b>, the occurrence of a timeout, and completion of rewriting in the rewrite target ECU <b>19</b>, and determines that the stop condition for the self-retention power of the second self-retention power circuit is estimated when it is determined that the remaining battery charge of the vehicle battery <b>40</b> is less than a predetermined capacity, the timeout occurs, or the rewriting in the rewrite target ECU <b>19</b> is completed. When it is determined by the second stop condition establishment determination unit <b>92</b><i>g </i>that the stop condition for the self-retention power of the second self-retention power circuit is established, the second self-retention power stop unit <b>92</b><i>h </i>stops the second self-retention power circuit.</p><p id="p-1140" num="1139">As illustrated in <figref idref="DRAWINGS">FIG. <b>242</b></figref>, the ECU <b>19</b> includes an instruction determination unit <b>108</b><i>a</i>, a first self-retention power enable unit <b>108</b><i>b</i>, a first stop condition establishment determination unit <b>108</b><i>c</i>, and a first self-retention power stop unit <b>108</b><i>d </i>in the self-retention power execution control unit <b>108</b>. The instruction determination unit <b>108</b><i>a </i>determines whether or not an instruction for enabling the first self-retention power circuit has been given from the CGW <b>13</b>.</p><p id="p-1141" num="1140">The first self-retention power enable unit <b>108</b><i>b </i>enables the first self-retention power circuit when it is determined by the instruction determination unit <b>108</b><i>a </i>that the instruction for enabling the first self-retention power circuit has been given. In a case where a completion time of the self-retention power is designated, the first self-retention power enable unit <b>108</b><i>b </i>enables the first self-retention power circuit until the designated completion time. In a case where an extension time of the self-retention power is designated, the first self-retention power enable unit <b>108</b><i>b </i>enables the first self-retention power circuit until the designated extension time elapses from the current time. In a case where a self-retention request is input from the CGW <b>13</b>, the first self-retention power enable unit <b>108</b><i>b </i>enables the first self-retention power circuit as long as the self-retention request is continuously input.</p><p id="p-1142" num="1141">In this case, when the first self-retention power circuit is currently stopped, the first self-retention power enable unit <b>108</b><i>b </i>starts the first self-retention power circuit and thus enables the first self-retention power circuit. In a case where the first self-retention power circuit is currently started, the first self-retention power enable unit <b>108</b><i>b </i>extends an operation period of the first self-retention power circuit, and thus enables the first self-retention power circuit. The first self-retention power enable unit <b>108</b><i>b </i>stores a default self-retention power time, and enables the first self-retention power circuit for the default self-retention power time even when an instruction for enabling the first self-retention power circuit is not given. That is, when the instruction for enabling the first self-retention power circuit is given, the first self-retention power enable unit <b>108</b><i>b </i>enables the first self-retention power circuit with priority to the longer time of the default self-retention power time and the self-retention power time based on the instruction from the CGW <b>13</b>.</p><p id="p-1143" num="1142">The first stop condition establishment determination unit <b>108</b><i>c </i>determines whether or not a stop condition for the self-retention power of the first self-retention power circuit is established. Specifically, when a self-retention power target is the rewrite target ECU <b>19</b>, the first stop condition establishment determination unit <b>108</b><i>c </i>monitors the occurrence of a timeout and a stop instruction from the CGW <b>13</b>, and determines that the stop condition for the self-retention power of the first self-retention power circuit is established when it is determined that the timeout has occurred or the stop instruction from the CGW <b>13</b> has been received, When a self-retention power target is the in-vehicle display <b>7</b>, the first stop condition establishment determination unit <b>108</b><i>c </i>monitors the occurrence of a timeout, the user's getting-off, and a stop instruction from the CGW <b>13</b>, and determines that the stop condition for the self-retention power of the first self-retention power circuit is established when it is determined that the timeout has occurred, the user has gotten off, or the stop instruction has been received from the CGW <b>13</b>. When a self-retention power target is the power supply management ECU <b>20</b>, the first stop condition establishment determination unit <b>108</b><i>c </i>monitors a stop instruction from the CGW <b>13</b>, and determines that the stop condition for the self-retention power of the first self-retention power circuit is established when it is determined that the stop instruction from the CGW <b>13</b> has been received. The first self-retention power stop unit <b>108</b><i>d </i>stops the first self-retention power circuit when it is determined by the second stop condition establishment determination unit <b>108</b><i>c </i>that the stop condition for the self-retention power of the first self-retention power circuit is established.</p><p id="p-1144" num="1143">Next, an operation of the above-described configuration will be described with reference to <figref idref="DRAWINGS">FIGS. <b>243</b> to <b>245</b></figref>. Here, a description will be made of a case where the vehicle slave device is the rewrite target ECU <b>19</b>. Each of the CGW <b>13</b> and the rewrite target ECU <b>19</b> executes a self-retention power execution control program and thus performs the self-retention power execution control process.</p><p id="p-1145" num="1144">When the self-retention power execution control process is initiated, the CGW <b>13</b> determines whether or not the vehicle power is turned off (S<b>2601</b>; corresponding to a vehicle power determination procedure). When it is determined that the vehicle power is turned off (S<b>2601</b>: YES), the CGW <b>13</b> determines whether or not the application program is being rewritten (S<b>2602</b>; corresponding to a rewrite-in-progress determination procedure). When it is determined that the application program is being rewritten (S<b>2602</b>: YES), the CGW <b>13</b> starts the second self-retention power circuit (S<b>2603</b>; corresponding to a second self-retention power enable procedure), and determines the necessity of self-retaining the power in the rewrite target ECU <b>19</b> (S<b>2604</b>; corresponding to a self-retention power determination procedure).</p><p id="p-1146" num="1145">When it is determined that it is necessary to self-retain the power in the rewrite target ECU <b>19</b> (S<b>2604</b>: YES), the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to enable the first self-retention power circuit (S<b>2605</b>; corresponding to a self-retention power instruction procedure). It is determined whether or not a stop condition for the self-retention power is established (S<b>2606</b>), and, when it is determined that the stop condition for the self-retention power is established (S<b>2606</b>: YES), the CGW <b>13</b> stops the second self-retention power circuit (S<b>2607</b>), and finishes the self-retention power execution control process.</p><p id="p-1147" num="1146">Although the CGW <b>13</b> is configured to start the self-retention power circuit when it is determined that an application program is being rewritten, the CGW <b>13</b> may be configured to start the self-retention power circuit when it is determined that the vehicle power is turned off, and to extend an operation period of the self-retention power circuit that is currently started when it is determined that the application program is being rewritten.</p><p id="p-1148" num="1147">When the self-retention power execution control process is initiated, the rewrite target ECU <b>19</b> determines whether or not the vehicle power is turned off (S<b>2611</b>). When it is determined that the vehicle power is turned off (S<b>2611</b>: YES), the rewrite target ECU <b>19</b> starts the self-retaining circuit (S<b>2612</b>), determines whether or not a stop condition for the self-retention power is established (S<b>2613</b>), and determines whether or not an instruction for enabling the self-retention power circuit has been given from the CGW <b>13</b> (S<b>2614</b>). When it is determined that the instruction for enabling the self-retention power circuit has been given from the CGW <b>13</b> (S<b>2614</b>: YES), the rewrite target ECU <b>19</b> extends an operation period of the self-retention power circuit that is currently started (S<b>2615</b>). When it is determined that the stop condition for the self-retention power is established (S<b>2613</b>: YES), the rewrite target ECU <b>19</b> stops the self-retention power circuit (S<b>2616</b>), and finishes the self-retention power execution control process.</p><p id="p-1149" num="1148">Although the rewrite target ECU <b>19</b> is configured to start the self-retention power circuit in a case where it is determined that the vehicle power is turned off, the rewrite target ECU <b>19</b> may be configured not to start the self-retention power circuit and to determine that the vehicle power is turned off in a case where it is determined that the vehicle power is turned off, and to start the self-retention power circuit that is currently stopped when it is determined that an instruction for enabling the self-retention power circuit is given from the CGW <b>13</b>.</p><p id="p-1150" num="1149">The above description relates to a case where a vehicle slave device is the rewrite target ECU <b>19</b>, but the same applies to a case where a vehicle slave device is the in-vehicle display <b>7</b> or the power supply management ECU <b>20</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>245</b></figref>, in the rewrite target ECU <b>19</b>, the operation of the self-retention power circuit is required in a period from the preparation for installation to the post-rewrite process, and, in the in-vehicle display <b>7</b>, the operation of the self-retention power circuit is required in periods of waiting for update approval, waiting for download approval, waiting for installation approval, and waiting for activation approval.</p><p id="p-1151" num="1150">As described above, by performing the self-retention power execution control process, when it is determined that the vehicle power is turned off and an application program is being rewritten, the CGW <b>13</b> determines the necessity of self-retaining the power in the rewrite target ECU <b>19</b>, and, when it is determined that it is necessary to self-retain the power, the CGW <b>13</b> instructs the rewrite target ECU <b>19</b> to enable the self-retention power circuit. When it is determined that an instruction for enabling the self-retention power circuit has been given from the CGW <b>13</b>, the rewrite target ECU <b>19</b> enables the self-retention power circuit. The self-retention power circuit is enabled such that operation power for rewriting the application program can be secured, and rewriting of the application program can be appropriately completed.</p><p id="p-1152" num="1151">The overall sequence of program update including the above-described characteristic processes (1) to (26) will now be described with reference to <figref idref="DRAWINGS">FIGS. <b>246</b> to <b>256</b></figref>. Here, a description will be made of an example in which application programs of the ECU (ID1), the ECU (ID2), and the ECU (ID3) connected to the first bus are rewritten, and application programs of the ECU (ID4), the ECU (ID5), and the ECU (ID6) connected to the second bus are not rewritten. The ECU (ID1) and the ECU (ID4) have single-bank memories, the ECU (ID5) has a single-bank suspend memory, and the ECU (ID2), the ECU (ID3), and the ECU (ID6) have double-bank memories. The ECU (ID1), the ECU</p><p id="p-1153" num="1152">(ID4), the ECU (ID5), and the ECU (ID6) are IG power ECUs, the ECU (ID2) is an ACC power ECU, and the ECU (ID3) is a +B power ECU.</p><p id="p-1154" num="1153">First, as a preliminary preparation, the user operates the mobile terminal <b>6</b> or the like, inputs personal information such as a vehicle number (an identification number of a vehicle) or a mobile telephone number, and registers an account in the center device <b>3</b> (S<b>5001</b>). Further, the user operates the mobile terminal <b>6</b> or the like, inputs execution conditions, and designates a vehicle position, a time period, or the like as conditions for permitting execution of program update. The center device <b>3</b> stores personal information or the like received via the mobile terminal <b>6</b> into a database (S<b>5002</b>).</p><p id="p-1155" num="1154">In the vehicle-side system <b>4</b>, the CGW <b>13</b> collects information regarding the vehicle (S<b>5011</b>), and uploads the information to the center device <b>3</b> via the DCM <b>12</b> (S<b>5012</b>). Specifically, the information includes a program version, a memory configuration of each ECU <b>19</b>, active bank information, electrical components mounted on the vehicle, a vehicle position, a vehicle power state, and the like. The center device <b>3</b> stores the information received from the vehicle-side system <b>4</b> into the database (S<b>5013</b>).</p><p id="p-1156" num="1155">When program update is necessary, the center device <b>3</b> generates the rewrite specification data illustrated in <figref idref="DRAWINGS">FIGS. <b>30</b> and <b>31</b></figref> including write data provided from a supplier that is a provider of an application program and the information stored in the database. The center device <b>3</b> generates reprogramming data including the write data, an authenticator thereof, and the rewrite specification data. The center device <b>3</b> packages the generated reprogramming data, the separately generated distribution specification data (<figref idref="DRAWINGS">FIG. <b>32</b></figref>), and a package authenticator into one file (i.e., a single file), and generates and registers a distribution package (S<b>5021</b>).</p><p id="p-1157" num="1156">After the distribution package is prepared, the center device <b>3</b> notifies the user of program update. The center device <b>3</b> refers to the personal information stored in the database, and transmits a short message service (SMS) to the mobile terminal <b>6</b> (S<b>5031</b>). The mobile terminal <b>6</b> is connected to a uniform resource locator (URL) described in the SMS through the user operation, and displays a notification content (S<b>5032</b>). The mobile terminal <b>6</b> notifies the center device <b>3</b> of an approval or disapproval for the program update through the user operation (S<b>5033</b>). The center device <b>3</b> registers the user's intention information (approval or disapproval) in the database (S<b>5034</b>). Here, instead of the mobile terminal <b>6</b>, the user may be notified by using the in-vehicle display <b>7</b>.</p><p id="p-1158" num="1157">The CGW <b>13</b> receives the distribution specification data transmitted from the center device <b>3</b> via the DCM <b>12</b>, and transfers the distribution specification data to the in-vehicle display <b>7</b> (S<b>5035</b>). The in-vehicle display <b>7</b> analyzes the distribution specification data and displays a display wording or the like that is the notification content (S<b>5036</b>). The in-vehicle display <b>7</b> displays image data such as icons and receives input as to whether or not the user approves the program update. The CGW <b>13</b> receives the user's intention information from the in-vehicle display <b>7</b> and notifies the center device <b>3</b> of the user's intention information via the DCM <b>12</b> (S<b>5037</b>).</p><p id="p-1159" num="1158">In a case where the approval for the program update is obtained from the user, the vehicle-side system <b>4</b> downloads the distribution package from the center device <b>3</b>. First, the center device <b>3</b> checks whether the execution conditions designated in advance for the user are satisfied (S<b>5041</b>). In a case where at least one of the execution conditions is not satisfied, the center device <b>3</b> does not transmit the distribution package to the DCM <b>12</b>. In a case where all the execution conditions are satisfied, the center device <b>3</b> transmits the distribution packages to the DCM <b>12</b> (S<b>5042</b>). When the distribution package is downloaded from the center device <b>3</b>, the DCM <b>12</b> stores the downloaded distribution package into the flash memory. The DCM <b>12</b> extracts the distribution package authenticator from the distribution package, and verifies the integrity of the reprogramming data and the distribution specification data (S<b>5043</b>).</p><p id="p-1160" num="1159">The DCM <b>12</b> calculates authenticators of the reprogramming data and the distribution specification data by using, for example, key information stored in the CGW <b>13</b>. The DCM <b>12</b> compares the calculated authenticators with the distribution package authenticator extracted from the distribution package, and determines that the verification is successful when the authenticators match each other, and determines that the verification fails when the authenticators do not match each other. When it is determined that the verification fails, the DCM <b>12</b> deletes the distribution package, and also notifies the CGW <b>13</b> and the center device <b>3</b> of the verification failure.</p><p id="p-1161" num="1160">In a case where it is determined that the verification of the distribution package is successful, the DCM <b>12</b> unpackages the reprogramming data included in the distribution package as illustrated in <figref idref="DRAWINGS">FIG. <b>33</b></figref>, and divides the unpackaged reprogramming data into write data and rewrite specification data for each rewrite target ECU <b>19</b> (S<b>5044</b>). The rewrite specification data is divided into DCM rewrite specification data and CGW rewrite specification data.</p><p id="p-1162" num="1161">The DCM <b>12</b> transmits the CGW rewrite specification data to the CGW <b>13</b> (S<b>5045</b>). The CGW <b>13</b> analyzes the CGW rewrite specification data received from the DCM <b>12</b>, extracts necessary information, and then authenticates the write data for each ECU <b>19</b> with the DCM <b>12</b> (S<b>5046</b>). For example, the CGW <b>13</b> calculates an authenticator of the write data (difference data) of the ECU (ID1) by using the key information of the ECU (ID1) stored therein. The CGW <b>13</b> compares the calculated authenticator with the authenticator extracted from the reprogramming data, and determines that the verification is successful in a case where the authenticators match each other, and determines that the verification fails in a case where the authenticators do not match each other. When it is determined that the verification fails, the CGW <b>13</b> deletes the distribution package, and notifies the DCM <b>12</b> and the center device <b>3</b> of the verification failure. Here, in a case where it is determined that verification of any one of the pieces of write data fails, the CGW <b>13</b> does not perform program update on all the ECUs <b>19</b>.</p><p id="p-1163" num="1162">When it is determined that all of the pieces of write data are successfully verified, the CGW <b>13</b> receives the distribution specification data from the DCM <b>12</b>, and transfers the received distribution specification data to the in-vehicle display <b>7</b> (S<b>5047</b>). The in-vehicle display <b>7</b> stores the distribution specification data transferred from the CGW <b>13</b>. When the download process described above is completed, the CGW <b>13</b> notifies the center device <b>3</b> of download completion via the DCM <b>12</b> (S<b>5048</b>).</p><p id="p-1164" num="1163">When the center device <b>3</b> is notified of the download completion from the vehicle-side system <b>4</b>, the center device <b>3</b> transmits an SMS to the mobile terminal <b>6</b> (S<b>5049</b>). The mobile terminal <b>6</b> is connected to a URL described in the SMS through the user operation, and displays an installation reservation screen (S<b>5050</b>). The mobile terminal <b>6</b> notifies the center device <b>3</b> of the installation date and time entered through the user operation (S<b>5051</b>). The center device <b>3</b> stores the installation date and time into the database in linking with the personal information (S<b>5052</b>). Here, the user may be caused to reserve the installation date and time by using the in-vehicle display <b>7</b> instead of the mobile terminal <b>6</b>. When the in-vehicle display <b>7</b> is notified of the download completion from the CGW <b>13</b> (S<b>5053</b>), the in-vehicle display <b>7</b> displays the installation reservation screen (S<b>5054</b>). The CGW <b>13</b> notifies the center device <b>3</b> of the install date and time received from the in-vehicle display <b>7</b>, via the DCM <b>12</b> (S<b>5055</b>).</p><p id="p-1165" num="1164">In a case where the current date and time reaches the installation date and time registered in the database, the center device <b>3</b> instructs the vehicle-side system <b>4</b> to initiate installation (S<b>5071</b>). When an instruction for the installation is given from the center device <b>3</b>, the DCM <b>12</b> checks installation execution conditions (S<b>5072</b>). The DCM <b>12</b> checks, for example, a vehicle position or a status of communication with the center device <b>3</b>. In a case where all of the execution conditions are satisfied, the DCM <b>12</b> uses the package authenticator to authenticate the distribution package (S<b>5073</b>). When the authentication is successful, the DCM <b>12</b> unpackages the distribution package (S<b>5074</b>), extracts the DCM rewrite specification data and the CGW rewrite specification data, divides the rewrite specification data into pieces of write data for the respective ECUs <b>19</b>, and notifies the CGW <b>13</b> of installation initiation (S<b>5075</b>).</p><p id="p-1166" num="1165">When the CGW <b>13</b> is notified of the installation initiation from the DCM <b>12</b>, the CGW <b>13</b> analyzes the CGW rewrite specification data acquired from the DCM <b>12</b>, and determines an order of performing rewriting on the ECUs <b>19</b> (S<b>5076</b>). Here, it is assumed that the ECU (ID1) is subjected to rewriting first, the ECU (ID2) is subjected to rewriting second, and the ECU (ID3) is subjected to rewriting third. The CGW <b>13</b> verifies all the pieces of write data for the respective rewrite target ECUs <b>19</b> stored in the DCM <b>12</b> by using the respective authenticators (S<b>5077</b>). Here, it is better to verify not only write data for version upgrade but also write data for rollback.</p><p id="p-1167" num="1166">When the verification of the write data is successful, the CGW <b>13</b> requests the power supply management ECU <b>20</b> to turn on the IG power (S<b>5078</b>). When installation is performed during parking (the IG switch <b>42</b> is turned off and the ACC switch <b>41</b> is turned off), in a case where the rewrite target ECU <b>19</b> is an IG ECU or an ACC ECU, power is required to be supplied to start the rewrite target ECU <b>19</b>. The power supply management ECU <b>20</b> requests the power supply control circuit <b>43</b> to provide the same power as in an ON state of the IG power (S<b>5079</b>). When the power is supplied to the IG power line <b>39</b> by the power supply control circuit <b>43</b>, the IG ECU and the ACC ECU are started (wake-up).</p><p id="p-1168" num="1167">Thereafter, the CGW <b>13</b> requests the ECU (ID5), the ECU (ID5), and the ECU (ID6), which are the non-rewrite target ECUs <b>19</b>, and the ECU (ID2) and the ECU (ID3), which are subjected to rewriting second and the subsequent order, to sleep (S<b>5080</b>). Here, the second rewrite target ECU <b>19</b> is subjected to rewriting after the first rewrite target ECU <b>19</b> is subjected to rewriting, but a plurality of rewrite target ECUs <b>19</b> may be subjected to rewriting simultaneously and in parallel. In this case, only the non-rewrite target ECU <b>19</b> is requested to sleep.</p><p id="p-1169" num="1168">The CGW <b>13</b> monitors a remaining battery charge (S<b>5081</b>) and monitors communication loads of the buses (S<b>5082</b>) in parallel with installation in each rewrite target ECU <b>19</b>. The CGW <b>13</b> refers to a value of a battery load and a value of a bus load (bus load table) extracted from the CGW rewrite specification data, and controls installation within a range that does not exceed an allowable value. For example, when the battery load reaches the allowable value in a parking state, the CGW <b>13</b> stops the installation at that time.</p><p id="p-1170" num="1169">For example, when the bus load of the first bus to which the rewrite target ECU (ID1) is connected reaches the allowable value, the CGW <b>14</b> reduces the frequency of transmitting the write data to the ECU (ID1). The monitoring is finished when installation in all of the rewrite target ECUs <b>19</b> is completed. In a case of a single-bank memory, since the installation cannot be finished in the middle of the installation, it is necessary to check that there is a sufficient remaining battery charge before initiation of the installation.</p><p id="p-1171" num="1170">The CGW <b>13</b> notifies the ECU (ID1) subjected to rewriting first to initiate installation (S<b>5101</b>). When the ECU (ID1) is notified of initiation of installation from the CGW <b>13</b>, the ECU (ID1) causes a state to transition to a wireless program update mode (S<b>5102</b>). Since the ECU (ID1) is a single-bank memory ECU, the ECU (ID1) cannot execute an application program or perform a diagnosis process using a tool in parallel, and enters a wireless program update only mode.</p><p id="p-1172" num="1171">When the CGW <b>13</b> performs installation on the ECU (ID1) subjected to rewriting first, the CGW <b>13</b> authenticates access by using a security access key (S<b>5103</b>). When authentication of access to the ECU (ID1) is successful, the CGW <b>13</b> transmits information of the entire data that is the write data to the ECU (ID1). The ECU (ID1) uses the information of the received entire data to determine whether or not the write data is consistent with the ECU (S<b>5104</b>). In a case where it is determined that the write data is consistent, the ECU (ID1) performs a write process.</p><p id="p-1173" num="1172">The CGW <b>13</b> acquires a divided file of a predetermined size (for example, 1k bytes) of the write data that is transmitted from the DCM <b>12</b> to the ECU (ID1) and distributes the divided file to the ECU (ID1) (S<b>5105</b>). The ECU (ID1) writes the divided file received from the CGW <b>13</b> into the flash memory <b>33</b><i>d </i>(S<b>5106</b>). When writing is completed, the ECU (ID1) stores a retry point indicating a flash memory address at which the divided file is written such that writing can be resumed from the middle (S<b>5107</b>). As the retry point, a flag indicating a process that has been executed among erasure, writing, and the subsequent processes on the flash memory may be stored. When the retry point is stored, the ECU (ID1) notifies the CGW <b>13</b> of write completion (S<b>5108</b>).</p><p id="p-1174" num="1173">When the write completion notification is received from the ECU (ID1), the CGW <b>13</b> notifies the center device <b>3</b> of rewrite status progress information via the DCM <b>12</b> (S<b>5109</b>). The progress information includes data such as the installation phase and the write data that has been written in terms of cumulative bytes in the ECU (ID1). The center device <b>3</b> updates a web screen that can be connected from the mobile terminal <b>6</b> on the basis of the progress information transmitted from the DCM <b>12</b> (S<b>5110</b>). The mobile terminal <b>6</b> is connected to the center device <b>3</b> and displays, for example, a percentage of currently completed installation as the updated progress situation (S<b>5111</b>). Consequently, even in a case where the vehicle is in the parking state and the user is outside the vehicle, the mobile terminal <b>6</b> can recognize a progress situation of the installation. Here, the progress may be displayed on the in-vehicle display <b>7</b> instead of the mobile terminal <b>6</b>. When a rewrite completion notification is received from the ECU (ID1), the CGW <b>13</b> notifies the in-vehicle display <b>7</b> of rewrite status progress information (S<b>5112</b>). The in-vehicle display <b>7</b> updates and displays a progress situation screen (S<b>5113</b>). In a case of a double-bank memory configuration such as the ECU (ID2) and the ECU (ID3), installation is possible even when the vehicle is in a traveling state. Thus, for example, when the vehicle is in an IG switch-on state, the in-vehicle display <b>7</b> may display the progress situation.</p><p id="p-1175" num="1174">When the write completion notification is received from the ECU (ID1), the CGW <b>13</b> acquires a second divided file as the next write data and distributes the divided file to the ECU (ID1). Thereafter, the processes in S<b>5105</b> to S<b>5113</b> are repeatedly performed up to an N-th divided file as the last write data. When writing up to the N-th divided file is completed, the ECU (ID1) verifies the integrity of the update program of the flash memory and checks whether or not the update program has been written correctly (S<b>5114</b>). When the CGW <b>13</b> is notified from the ECU (ID1) that all of the divided files have been written and the integrity verification has been successful, the CGW <b>13</b> requests the ECU (ID1) to sleep (S<b>5115</b>). The ECU (ID1) temporarily sleeps without being started by the installed update program.</p><p id="p-1176" num="1175">The CGW <b>13</b> requests the second rewrite ECU (ID2) to wake up (S<b>5201</b>). The CGW <b>13</b> notifies the ECU (ID2) that a program is to be updated wirelessly and installation is initiated (S<b>5202</b>). The ECU (ID2) causes a state to transition to a wireless program update mode as an internal state (S<b>5203</b>). The ECU (ID2) having a double-bank memory can execute an application program and diagnosis using tools during the wireless program update mode. The CGW <b>13</b> authenticates access to the ECU (ID2) (S<b>5204</b>). The ECU (ID2) determines whether or not difference data that is the write data is consistent with the ECU (S<b>5205</b>). Since the ECU (ID2) has a double-bank memory, the ECU (ID2) also determines whether or not the write data is consistent with an inactive bank of the flash memory. For example, assuming that the bank-A of the ECU (ID2) is an active bank and the bank-B is an inactive bank, in a case where the write data is an address that is not consistent with the bank-B, the CGW <b>13</b> notifies the center device <b>3</b> via the DCM <b>12</b> that the write data is erroneous without proceeding to the subsequent process. The CGW <b>13</b> performs a rollback process described later. In a case where it is determined that the write data is consistent with the ECU, a write process is performed on the ECU (ID2). Thereafter, processes in S<b>5206</b> to S<b>5216</b> related to the ECU (ID2) are the same as those in S<b>5105</b> to S<b>5115</b>. In S<b>5207</b>, when the difference data is written into the ECU (ID2) having a double-bank memory, as illustrated in <figref idref="DRAWINGS">FIG. <b>41</b></figref>, a difference is restored by using old data and the difference data to generate new data, and the new data is written into the flash memory <b>33</b><i>d. </i></p><p id="p-1177" num="1176">The CGW <b>13</b> requests the third rewrite ECU (ID3) to wake up when the entire installation is completed in the ECU (ID2) and the ECU (ID2) sleeps (S<b>5301</b>). The CGW <b>13</b> notifies the ECU (ID3) that the program is to be updated wirelessly and installation is initiated (S<b>5302</b>). The ECU (ID3) causes a state to transition to a wireless program update mode as an internal state (S<b>5303</b>). The CGW <b>13</b> authenticates access to the ECU (ID3) (S<b>5304</b>). The ECU (ID3) determines whether or not difference data that is the write data is consistent with the ECU (S<b>5305</b>). In a case where it is determined that the write data is consistent with the ECU, a write process is performed on the ECU (ID3). Thereafter, processes in S<b>5306</b> to S<b>5315</b> related to the ECU (ID3) are the same as those in S<b>5105</b> to S<b>5114</b>.</p><p id="p-1178" num="1177">When the entire installation in the ECUs (ID3) is completed, the CGW <b>13</b> finishes monitoring of the remaining battery charge and monitoring of the communication loads of the buses (S<b>5316</b> and S<b>5317</b>). The CGW <b>13</b> requests the ECU (ID1) and the ECU (ID2) to wake up (S<b>5401</b>).</p><p id="p-1179" num="1178">The CGW <b>13</b> requests each ECU to activate the updated program in order to start the ECU (ID1), the ECU (ID2), and the ECU (ID3) simultaneously with the updated programs (S<b>5402</b>). In a case of an ECU that does not cope with an activation request, it is preferable to notify the ECU of power-off and power-on instead of the activation request and thus to cause the ECU to be restarted.</p><p id="p-1180" num="1179">When an activation request is received from the CGW <b>13</b>, the ECU (ID1) restarts itself (S<b>5403</b>). Since the ECU (ID1) has a single-bank memory, the ECU (ID1) is started by the updated program when being restarted. When restarting after installation is completed, the ECU (ID1) notifies the CGW <b>13</b> of an updated program version along with activation completion (S<b>5404</b>).</p><p id="p-1181" num="1180">When an activation request is received from the CGW <b>13</b>, the ECU (ID2) updates the stored active bank information from the bank-A to the bank-B (S<b>5405</b>), and restarts itself (S<b>5406</b>). When the ECU (ID2) is started normally in the bank-B, the ECU (ID2) notifies the CGW <b>13</b> of activation completion along with an updated program version and the active bank information (S<b>5407</b>).</p><p id="p-1182" num="1181">When an activation request is received from the CGW <b>13</b>, the ECU (ID3) updates the stored active bank information from the bank-A to the bank-B (S<b>5408</b>), and restarts itself (S<b>5409</b>). When the ECU (ID3) is started normally in the bank-B, the ECU (ID3) notifies the CGW <b>13</b> of activation completion along with an updated program version and the active bank information (S<b>5410</b>).</p><p id="p-1183" num="1182">When the activation completion notifications are received from the ECU (ID1), the ECU (ID2), and the ECU (ID3), the CGW <b>13</b> notifies the center device <b>3</b> of the program update completion along with the updated program versions and the active bank information related to the rewrite targets ECU (ID1), ECU (ID2), and ECU (ID3) via the DCM <b>12</b> (S<b>5411</b>). The center device <b>3</b> registers the information of which the notification is sent from the DCM <b>12</b> into the database (S<b>5412</b>), and also updates the web screen to display indicating completion as a progress situation (S<b>5413</b>). The mobile terminal <b>6</b> is connected to the center device <b>3</b>, and displays a web screen indicating that the program update is completed (S<b>5414</b>). When the activation completion notifications are received from the ECU (ID1), the ECU (ID2), and the ECU (ID3), the CGW <b>13</b> notifies the in-vehicle display <b>7</b> of program update completion as a progress situation (S<b>5415</b>). The in-vehicle display <b>7</b> displays information indicating that the program update has been completed (S<b>5416</b>). In a case where progress display is not necessary, such as when the vehicle is in a parking state, the CGW <b>13</b> does not notify the in-vehicle display <b>7</b> of the progress.</p><p id="p-1184" num="1183">Finally, the CGW <b>13</b> requests the power supply management ECU <b>20</b> to turn off the IG power (S<b>5418</b>). The power supply management ECU <b>20</b> requests the power supply control circuit <b>43</b> to cut off the supply of power in order to return to a power supply state of IG switch-off before initiation of the installation. When the supply of power to the IG power line <b>39</b> and the ACC power line <b>38</b> is cut off by the power supply control circuit <b>43</b>, the ECU (ID1), the ECU (ID2), the ECU (ID4), the ECU (ID5), and the ECU (ID6) are brought into a stop state.</p><p id="p-1185" num="1184">In the above examples, a description has been made of a case where the ECU (ID1) having a single-bank memory is also subjected to program update, and thus when the processes from installation to activation are continuously performed when the vehicle is in a parking state. However, for example, in a case where all the rewrite target ECUs <b>19</b> have double-bank memories, installation can be performed on the background while the vehicle is traveling. There may be a configuration in which the mobile terminal <b>6</b> obtains an approval for activation from the user at the time at which installation in the rewrite target ECU <b>19</b> is completed.</p><p id="p-1186" num="1185">Next, a description will be made of a rollback sequence when cancellation of program update is selected by the user during installation of an application program with reference to <figref idref="DRAWINGS">FIGS. <b>253</b> to <b>256</b></figref>. Specifically, a description will be made of a case where installation is completed in the ECU (ID1), and cancellation is selected by the user during installation in the ECU (ID2).</p><p id="p-1187" num="1186">When the center device <b>3</b> is notified of cancellation of program update from the mobile terminal <b>6</b>, the center device <b>3</b> instructs the vehicle-side system <b>4</b> to cancel the program update (S<b>6001</b>). The center device <b>3</b> changes a web screen to a display aspect during rollback as a progress situation (S<b>6002</b>). Mobile terminal <b>6</b> displays a web screen indicating the progress situation during rollback (S<b>6003</b>).</p><p id="p-1188" num="1187">When the CGW <b>13</b> is instructed to cancel the program update from the center device <b>3</b> via the DCM <b>12</b>, the CGW <b>13</b> determines an ECU requiring a rollback process and a necessary rollback process on the basis of memory configurations and installation statuses of the rewrite targets ECU (ID1), ECU (ID2), and ECU (ID3) (S<b>6004</b>). In this example, it is determined that a rollback process of completing installation in the ECU (ID2) and returning the ECU (ID1) to an original version is necessary.</p><p id="p-1189" num="1188">The CGW <b>13</b> notifies the in-vehicle display <b>7</b> of rollback progress (S<b>6005</b>). When the in-vehicle display <b>7</b> is notified of the rollback progress from the CGW <b>13</b>, the in-vehicle display <b>7</b> changes a display aspect to a rollback display aspect, and displays the progress (S<b>6006</b>). The in-vehicle display <b>7</b> displays, for example, &#x201c;during rollback&#x201d;, and also displays the progress of the ECU (ID1) requiring rollback as 0% and the progress of the ECU (ID2) as 0%.</p><p id="p-1190" num="1189">The CGW <b>13</b> continues to install the write data as a rollback process for the ECU (ID2). Since the ECU (ID2) has a double-bank memory, the ECU (ID2) can stop the installation in the bank-B that is an inactive bank halfway, and can be continuously operated with the bank-A as an active bank. However, in a case where the write data is installed halfway in the bank-B which is thus in an incomplete state, a difference cannot be restored correctly at the next installation using difference data. Therefore, the installation is continuously performed in the ECU (ID2) to the end.</p><p id="p-1191" num="1190">Specifically, the CGW <b>13</b> acquires a divided file (for example, 1k bytes) of the write data that is transmitted to the ECU (ID2) from the DCM <b>12</b>, and distributes the divided file to the ECU (ID2) (S<b>6007</b>). The ECU (ID2) writes the divided file received from the CGW <b>13</b> into the flash memory <b>33</b><i>d </i>(S<b>6008</b>). When writing is completed, the ECU (ID2) stores a retry point (S<b>6009</b>) such that writing can be resumed from the middle, and notifies the CGW <b>13</b> of write completion (S<b>6010</b>).</p><p id="p-1192" num="1191">When the write completion notification is received from the ECU (ID2), the CGW <b>13</b> notifies the center device <b>3</b> of rollback status progress information via the DCM <b>12</b> (S<b>6011</b>). The rollback status progress information is, for example, data such as a data amount required to be written as rollback for the ECU (ID2), and a cumulative amount of written data of the required data amount. The center device <b>3</b> updates a web screen that can be connected from the mobile terminal <b>6</b> on the basis of the progress information transmitted from the DCM <b>12</b> (S<b>6012</b>). The mobile terminal <b>6</b> displays, for example, a web screen related to a percentage of currently completed rollback or the like as the updated progress situation (S<b>6013</b>). Here, the progress may be displayed on the in-vehicle display <b>7</b> instead of the mobile terminal <b>6</b>. When a rewrite completion notification is received from the ECU (ID2), the CGW <b>13</b> notifies the in-vehicle display <b>7</b> of rollback status progress information (S<b>6014</b>). The in-vehicle display <b>7</b> updates and displays a progress situation screen (S<b>6015</b>). Thereafter, the processes in S<b>6007</b> to S<b>6015</b> are repeatedly performed up to an N-th divided file as the last write data.</p><p id="p-1193" num="1192">When the N-th divided file is written, the ECU (ID2) verifies the integrity of the update program of the flash memory <b>33</b><i>d </i>(S<b>6016</b>). When an installation completion notification is received from the ECU (ID2), the CGW <b>13</b> requests the ECU (ID2) to sleep (S<b>6017</b>). The ECU (ID2) sleeps without being started by the update program installed in the bank-B that is an inactive bank.</p><p id="p-1194" num="1193">Subsequently, the CGW <b>13</b> requests the ECU (ID1) to wake up so as to perform a rollback process on the ECU (ID1) (S<b>6101</b>). The CGW <b>13</b> notifies the ECU (ID1) that installation for rollback is to be initiated (S<b>6102</b>). When the ECU (ID1) is notified of the installation initiation from the CGW <b>13</b>, the ECU (ID1) causes a state to transition to a wireless program update mode (S<b>6103</b>). The CGW <b>13</b> authenticates access to ECU (ID1) (S<b>6104</b>). When access authentication is successful, the ECU (ID1) determines whether or not rollback write data is consistent with the ECU (S<b>6105</b>). In a case where it is determined that the rollback write data is consistent with the ECU, a write process is performed on the ECU (ID1).</p><p id="p-1195" num="1194">The CGW <b>13</b> acquires a divided file of a predetermined size (for example, 1k bytes) of the rollback write data that is transmitted from the DCM <b>12</b> to the ECU (ID1), and distributes the divided file to the ECU (ID1) (S<b>6016</b>). The ECU (ID1) writes the divided file received from the CGW <b>13</b> into the flash memory <b>33</b><i>d </i>(S<b>6107</b>). When writing is completed, the ECU (ID1) stores a retry point indicating a flash memory address at which the divided file is written such that writing can be resumed from the middle (S<b>6108</b>). When the retry point is stored, the ECU (ID1) notifies the CGW <b>13</b> of write completion (S<b>6109</b>).</p><p id="p-1196" num="1195">When the write completion notification is received from the ECU (ID1), the CGW <b>13</b> notifies the center device <b>3</b> of rewrite status progress information via the DCM <b>12</b> (S<b>6110</b>). The center device <b>3</b> updates a web screen that can be connected from the mobile terminal <b>6</b> on the basis of the progress information transmitted from the DCM <b>12</b> (S<b>6111</b>). The mobile terminal <b>6</b> is connected to the center device <b>3</b> and displays, for example, a percentage of currently completed rollback as the updated progress situation (S<b>6112</b>). Here, the progress may be displayed on the in-vehicle display <b>7</b> instead of the mobile terminal <b>6</b>. When a write completion notification is received from the ECU (ID1), the CGW <b>13</b> notifies the in-vehicle display <b>7</b> of rewrite status progress information (S<b>6113</b>). The in-vehicle display <b>7</b> updates and displays a rollback progress situation screen (S<b>6114</b>). When the write completion notification is received from the ECU (ID1), the CGW <b>13</b> acquires a second divided file as the next write data and distributes the divided file to the ECU (ID1). Thereafter, he processes in S<b>6106</b> to S<b>6114</b> are repeatedly performed up to an N-th divided file as the last write data.</p><p id="p-1197" num="1196">When writing up to the N-th divided file is completed, the ECU (ID1) verifies the integrity of the rollback program of the flash memory and checks whether or not the rollback program has been written correctly (S<b>6115</b>). When the CGW <b>13</b> is notified from the ECU (ID1) that all of the divided files have been written and the integrity verification has been successful, the CGW <b>13</b> finishes monitoring of the remaining battery charge and monitoring of the communication loads of the buses (S<b>6116</b> and S<b>6117</b>).</p><p id="p-1198" num="1197">Subsequently, the CGW <b>13</b> requests the ECU (ID2) and the ECU (ID3) to wake up (S<b>6201</b>). The CGW <b>13</b> requests rollback activation tot the ECU (ID1), the ECU (ID2), and the ECU (ID3) to be started in an old version before the installation (S<b>6202</b>). The ECU (ID1) having a single-bank memory starts the old version program through restarting as in rewriting during the normal time. Unlike rewriting during the normal time, the ECU (ID2) and ECU (ID3) having double-bank memories start the programs in the bank-A that is the current active bank without changing the active bank.</p><p id="p-1199" num="1198">When the rollback activation request is received from the CGW <b>13</b>, the ECU (ID1) restarts itself (S<b>6203</b>). When the restart is completed, the ECU (ID1) notifies the CGW <b>13</b> of a program version along with rollback activation completion (S<b>6204</b>).</p><p id="p-1200" num="1199">When the rollback activation request is received from the CGW <b>13</b>, the ECU (ID2) restarts itself without updating the stored active bank information (S<b>6205</b>). When the ECU (ID2) is started normally in the bank-A that is still an active bank, the ECU (ID2) notifies the CGW <b>13</b> of a program version and active bank information along with rollback activation completion (S<b>6206</b>).</p><p id="p-1201" num="1200">When the rollback activation request is received from the CGW <b>13</b>, the ECU (ID3) restarts itself without updating the stored active bank information (S<b>6207</b>). When the ECU (ID3) is started normally in the bank-A that is still an active bank, the ECU (ID3) notifies the CGW <b>13</b> of a program version and active bank information along with rollback activation completion (S<b>6208</b>).</p><p id="p-1202" num="1201">When the rollback activation completion notifications are received from the ECU (ID1), the ECU (ID2), and the ECU (ID3), the CGW <b>13</b> notifies the center device <b>3</b> of the rollback completion via the DCM <b>12</b> (S<b>6209</b>). Here, the CGW <b>13</b> also sends a notification of the program version and the active bank information related to the ECU (ID1), the ECU (ID2), and the ECU (ID3). The center device <b>3</b> registers the information sent from the DCM <b>12</b> into the database (S<b>6210</b>) and also updates the web screen to display indicating cancellation completion as a progress situation (S<b>6211</b>). The mobile terminal <b>6</b> is connected to the center device <b>3</b>, and displays a web screen indicating that cancellation is completed (S<b>6212</b>).</p><p id="p-1203" num="1202">When the rollback activation completion notifications are received from the ECU (ID1), the ECU (ID2), and the ECU (ID3), the CGW <b>13</b> notifies the in-vehicle display <b>7</b> of rollback completion as a progress situation (S<b>6213</b>). The in-vehicle display <b>7</b> displays the fact that the rollback is completed (S<b>6214</b>).</p><p id="p-1204" num="1203">Finally, the CGW <b>13</b> requests the power supply management ECU <b>20</b> to turn off the IG power (S<b>6215</b>). The power supply management ECU <b>20</b> requests the power supply control circuit <b>43</b> to cut off the supply of power in order to return to a state of IG switch-off before initiation of the installation. When the supply of power to the IG power line <b>39</b> and the ACC power line <b>38</b> is cut off by the power supply control circuit <b>43</b>, the ECU (ID1), the ECU (ID2), the ECU (ID4), the ECU (ID5), and the ECU (ID6) are brought into a stop state.</p><p id="p-1205" num="1204">As described above, it is possible to perform program update on a plurality of the rewrite target ECUs <b>19</b> by using the CGW <b>13</b> as a reprogramming master. In the present embodiment, a description has been made of a case where an application program is rewritten with the ECU (ID1), the ECU (ID2), and the ECU (ID3) as one group, but the same applies to a case where the application program is rewritten in the ECU (ID4), the ECU (ID5), and the ECU (ID6) as a second group. In this case, installation and activation are performed on the ECUs <b>19</b> of the first group, and then installation and activation are performed on the ECUs <b>19</b> of the second group.</p><p id="p-1206" num="1205">Application programs in the DCM <b>12</b>, the CGW <b>13</b>, the in-vehicle display device <b>7</b>, the power supply management ECU <b>20</b>, alternatively can be rewritten in the same manner. However, since the application programs are required to be able to be operated during program update, these ECUs are configured to have double-bank memories.</p><heading id="h-0011" level="1">Other Embodiments</heading><p id="p-1207" num="1206">The functions executed by the center device <b>3</b> may be realized by hardware or software. The functions may be realized by hardware and software in cooperation.</p><p id="p-1208" num="1207">Although the present disclosure has been described in accordance with the examples, it is understood that the present disclosure is not limited to the examples or the structures. The present disclosure encompasses various modification examples or variations within the scope of equivalents. Various combinations or forms as well as other combinations or forms including only one element, one or more elements, or one or less elements, fall within the scope or the spirit of the present disclosure.</p><p id="p-1209" num="1208">The control unit and the method described in the present disclosure may be realized by a dedicated computer provided by configuring a processor and a memory programmed to execute one or more functions embodied by a computer program. Alternatively, the control unit and the method described in the present disclosure may be realized by a dedicated computer provided by configuring a processor with one or more dedicated hardware logic circuits. Alternatively, the control unit and the method described in the present disclosure may be realized by one or more dedicated computers configured by a combination of a processor and a memory programmed to execute one or more functions and a processor configured by one or more hardware logic circuits. The computer program may also be stored on a computer readable and non-transitory tangible recording medium as instructions executed by a computer.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A center device that manages data to be written into a plurality of electronic control units (ECU) mounted on each of vehicles, the center device comprising:<claim-text>a vehicle related information receiving unit that is configured to receive vehicle related information transmitted from the vehicles, the vehicle related information being related to device identification of each of the plurality of ECUs and data identification of data stored in each of the plurality of ECUs;</claim-text><claim-text>an update data storage unit that is configured to store update data for a target ECU that is a target in which data is to be updated among the plurality of ECUs;</claim-text><claim-text>a vehicle information storage unit that is configured to store the vehicle related information along with a plurality of types of the vehicles;</claim-text><claim-text>a device related information storage unit that is configured to store an attribute of the target ECU and update data related information that is related to the update data;</claim-text><claim-text>a specification data generation unit that is configured to, when the vehicle related information receiving unit receives the vehicle related information, generate specification data based on the information stored in the vehicle information storage unit and the device related information storage unit, the specification data including a device type of the target ECU, the attribute of the target ECU, the update data related information of the target ECU, and information indicating a rewrite environment related to data update in the target ECU;</claim-text><claim-text>a package generation unit that is configured to generate a distribution package including the update data acquired from the update data storage unit and the specification data; and</claim-text><claim-text>a package distribution unit that is configured to distribute the distribution package to the vehicles, wherein</claim-text><claim-text>the specification data generation unit is configured to generate the specification data regardless of whether a combination in the vehicle related information is approved.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>when the target ECU are a plurality of target ECUs, the specification data generation unit is configured to generate the specification data for the plurality of target ECUs as a single file, and</claim-text><claim-text>the package generation unit is configured to generate a single distribution package including the file.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the vehicle related information includes information in which some of the plurality of ECUs are grouped according to a type.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The center device according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein<claim-text>when the target ECU are a plurality of ECUs, the specification data generation unit is configured to generate a single specification data file for each of the plurality of grouped target ECUs, and</claim-text><claim-text>the package generation unit is configured to generate a single distribution package for each group of the plurality of target ECUs.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the information indicating the rewrite environment includes rewrite environment information for each of the vehicles and rewrite environment information for the target ECU.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the target ECU are a plurality of target ECUs, and</claim-text><claim-text>the specification data generation unit is configured to generate the specification data to have a predetermined data structure in which a plurality of information related to the plurality of target ECUs are arranged in an order from the information related to one of the plurality of target ECUs having an earliest rewrite order that has been set in advance.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the vehicle related information includes a configuration information list in which configuration information related to a configuration of each of the plurality of ECUs is listed, and</claim-text><claim-text>the center device further comprises:<claim-text>a configuration information storage unit that is configured to store a plurality of approved configuration information lists for the plurality of types of the vehicles; and</claim-text><claim-text>a configuration information determination unit that is configured to:<claim-text>compare the configuration information list received from one of the vehicles with a corresponding one of the plurality of approved configuration information lists stored in the configuration information storage unit; and</claim-text><claim-text>transmit, to the one of the vehicles, information indicating that the configuration information list is false upon determining that the received configuration information list does not match the corresponding approved configuration information list.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a distribution package storage unit that is configured to store the distribution package that is generated upon receiving a generation instruction for each of the plurality of types of the vehicles, wherein</claim-text><claim-text>the vehicle related information received by the vehicle related information receiving unit includes a dynamic generation flag indicating whether to generate the distribution package,</claim-text><claim-text>when the dynamic generation flag is not set, the package distribution unit is configured to read the distribution package from the distribution package storage unit and distribute the read distribution package, and</claim-text><claim-text>when the dynamic generation flag is set, the package generation unit is configured to generate the distribution package and the package distribution unit is configured to distribute the generated distribution package.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The center device according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein<claim-text>the dynamic generation flag is set when any one of the plurality of ECUs is replaced in the vehicles or when any one of the plurality of ECUs needs initialization.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>an individual vehicle information storage unit that is configured to store the vehicle related information related to an individual vehicle; and</claim-text><claim-text>a distribution package storage unit that is configured to store the distribution package generated upon receiving a generation instruction for each of the plurality of types of the vehicles, wherein</claim-text><claim-text>when a special flag indicating a special process related to update for the plurality of ECUs is set in the individual vehicle information storage unit, the package distribution unit is configured to read the distribution package from the distribution package storage unit and distribute the read distribution package, and</claim-text><claim-text>when the special flag indicating a special process related to update for the plurality of ECUs is not set in the individual vehicle information storage unit, the package generation unit is configured to generate the distribution package and the package distribution unit is configured to distribute the generated distribution package.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The center device according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the special flag is set when any one of the plurality of ECUs is replaced in the vehicles or when any one of the plurality of ECUs needs initialization.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The center device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>an individual vehicle information storage unit that is configured to store the vehicle related information related to an individual vehicle; and</claim-text><claim-text>an information update unit that is configured to, when the vehicle related information receiving unit receives the vehicle related information from one of the vehicles, update, to the received information, the vehicle related information of the one of the vehicles that is stored in the individual vehicle information storage unit.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A distribution package generation method, comprising:<claim-text>receiving vehicle related information transmitted from vehicles, the vehicle related information being related to device identification of each of a plurality of electronic control units (ECUs) and data identification of data stored in the device;</claim-text><claim-text>generating, regardless of whether a combination in the vehicle related information is approved, specification data including a device type of a target ECU, an attribute of the target ECU, update data related information of the target ECU, and information indicating a rewrite environment related to data update in the target ECU based on information stored in a vehicle information storage unit, an update data storage unit, and a device related information storage unit, the vehicle information storage unit storing the vehicle related information that is related to the device identification of each of the plurality of ECUs and the data identification of the data stored in each of the plurality of ECUs along with a plurality of types of the vehicles, the update data storage unit storing update data for the target ECU that is a target in which data is to be updated among the plurality of ECUs, and the device related information storage unit storing the attribute of the target ECU and the update data related information that is related to the update data; and</claim-text><claim-text>generating a distribution package including the update data and the specification data.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A non-transitory computer readable medium storing a distribution package generation program for a center device that is configured to manage data to be written in a plurality of electronic control units (ECUs) mounted on each of vehicles, the center device comprising:<claim-text>a vehicle related information receiving unit that is configured to receive vehicle related information transmitted from the vehicles, the vehicle related information being related to device identification of each of the plurality of ECUs and data identification of data stored in the device;</claim-text><claim-text>an update data storage unit that is configured to store update data for a target ECU that is a target in which data is to be updated among the plurality of ECUs;</claim-text><claim-text>a vehicle information storage unit that is configured to store the vehicle related information that is related to the device identification of each of the plurality of ECUs and the data identification of the data stored in each of the plurality of ECUs along with a plurality of types of the vehicles; and</claim-text><claim-text>a device related information storage unit that is configured to store an attribute of the target ECU and update data related information that is related to the update data, the program comprising instructions configured to, when executed by the center device, causing the center device to:</claim-text><claim-text>when the vehicle related information is received, generate, regardless of whether a combination in the vehicle related information is approved, specification data including a device type of the target ECU, the attribute of the target ECU, the update data related information of the target ECU, and information indicating a rewrite environment related to data update in the target ECU based on the information stored in the vehicle information storage unit, the update data storage unit, and the device related information storage unit, the vehicle information storage unit storing the vehicle related information that is related to the device identification of each of the plurality of ECUs and the data identification of the data stored in each of the plurality of ECUs along with the plurality of types of the vehicles, the update data storage unit storing update data for the target ECU that is a target in which data is to be updated among the plurality of ECUs, and the device related information storage unit storing the attribute of the target ECU and the update data related information that is related to the update data; and</claim-text><claim-text>generate a distribution package including the update data and the specification data.</claim-text></claim-text></claim></claims></us-patent-application>