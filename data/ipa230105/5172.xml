<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005173A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005173</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363085</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>7</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>11</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20170101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>7</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>11</main-group><subgroup>003</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>6262</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>2207</main-group><subgroup>30261</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>2207</main-group><subgroup>20084</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>2210</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CROSS-MODALITY ACTIVE LEARNING FOR OBJECT DETECTION</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Motional AD LLC</orgname><address><city>Boston</city><state>MA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Tan</last-name><first-name>Kok Seang</first-name><address><city>Serangoon</city><country>SG</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Caesar</last-name><first-name>Holger</first-name><address><city>Singapore</city><country>SG</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Beijbom</last-name><first-name>Oscar Olof</first-name><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Among other things, techniques are described for cross-modality active learning for object detection. In an example, a first set of predicted bounding boxes and a second set of predicted bounding boxes is generated. The first set of predicted bounding boxes and the second set of predicted bounding boxes are projected into a same representation. The projections are filtered, wherein predicted bounding boxes satisfying a maximum confidence score are selected for inconsistency calculations. Inconsistencies are calculated across the projected bounding boxes based on filtering the projections. An informative scene is extracted based on the calculated inconsistencies. A first object detection neural network or a second object detection neural network is trained using the informative scenes.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="100.84mm" wi="158.75mm" file="US20230005173A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="225.38mm" wi="168.91mm" file="US20230005173A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="235.37mm" wi="155.96mm" orientation="landscape" file="US20230005173A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="234.10mm" wi="152.06mm" orientation="landscape" file="US20230005173A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="242.40mm" wi="106.26mm" orientation="landscape" file="US20230005173A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="217.17mm" wi="130.73mm" orientation="landscape" file="US20230005173A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="229.70mm" wi="107.78mm" orientation="landscape" file="US20230005173A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="193.72mm" wi="155.28mm" orientation="landscape" file="US20230005173A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="225.89mm" wi="103.72mm" orientation="landscape" file="US20230005173A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="238.59mm" wi="126.83mm" orientation="landscape" file="US20230005173A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="220.81mm" wi="109.39mm" orientation="landscape" file="US20230005173A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="227.75mm" wi="152.40mm" orientation="landscape" file="US20230005173A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="229.28mm" wi="123.87mm" orientation="landscape" file="US20230005173A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="241.22mm" wi="119.21mm" orientation="landscape" file="US20230005173A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="204.30mm" wi="138.43mm" orientation="landscape" file="US20230005173A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="176.53mm" wi="148.17mm" file="US20230005173A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD OF THE INVENTION</heading><p id="p-0002" num="0001">This description relates to cross-modality active learning for object detection.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Active learning is a form of machine learning in which a system can query a teacher for labels that are applied to new data points. A large amount of unlabeled data is often available, but manual labeling of the data is costly. Through active learning, queries can be issued by the active learning system to obtain labels for the data. Thus, active learning is an iterative supervised leaning technique where input data is analyzed and labeled according to an inferred function, and the inferred function is used to label new data.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example of an autonomous vehicle (AV) having autonomous capability.</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an example &#x201c;cloud&#x201d; computing environment.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a computer system.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example architecture for an AV.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an example of inputs and outputs that can be used by a perception system.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an example of a LiDAR system.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows the LiDAR system in operation.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows the operation of the LiDAR system in additional detail.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a block diagram of the relationships between inputs and outputs of a planning system.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a directed graph used in path planning.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a block diagram of the inputs and outputs of a control system.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a block diagram of the inputs, outputs, and components of a controller.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a system <b>1300</b> that enables cross modality active learning for object detection.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>14</b>A</figref> is a front view representation of an environment.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>14</b>B</figref> is a bird's-eye view representation of an environment.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>14</b>C</figref> is a heatmap representation of the environment as a grid.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a process flow diagram of a process <b>1500</b> for cross-modality active learning for object detection.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0021" num="0020">In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It will be apparent, however, that the present disclosure can be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present disclosure.</p><p id="p-0022" num="0021">In the drawings, specific arrangements or orderings of schematic elements, such as those representing devices, modules, systems, instruction blocks, and data elements, are shown for ease of description. However, it should be understood by those skilled in the art that the specific ordering or arrangement of the schematic elements in the drawings is not meant to imply that a particular order or sequence of processing, or separation of processes, is required. Further, the inclusion of a schematic element in a drawing is not meant to imply that such element is required in all embodiments or that the features represented by such element may not be included in or combined with other elements in some embodiments.</p><p id="p-0023" num="0022">Further, in the drawings, where connecting elements, such as solid or dashed lines or arrows, are used to illustrate a connection, relationship, or association between or among two or more other schematic elements, the absence of any such connecting elements is not meant to imply that no connection, relationship, or association can exist. In other words, some connections, relationships, or associations between elements are not shown in the drawings so as not to obscure the disclosure. In addition, for ease of illustration, a single connecting element is used to represent multiple connections, relationships or associations between elements. For example, where a connecting element represents a communication of signals, data, or instructions, it should be understood by those skilled in the art that such element represents one or multiple signal paths (e.g., a bus), as may be needed, to affect the communication.</p><p id="p-0024" num="0023">Reference will now be made in detail to embodiments, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the various described embodiments. However, it will be apparent to one of ordinary skill in the art that the various described embodiments may be practiced without these specific details. In other instances, well-known methods, procedures, components, circuits, and networks have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.</p><p id="p-0025" num="0024">Several features are described hereafter that can each be used independently of one another or with any combination of other features. However, any individual feature may not address any of the problems discussed above or might only address one of the problems discussed above. Some of the problems discussed above might not be fully addressed by any of the features described herein. Although headings are provided, information related to a particular heading, but not found in the section having that heading, may also be found elsewhere in this description. Embodiments are described herein according to the following outline:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0025">1. General Overview</li>        <li id="ul0002-0002" num="0026">2. System Overview</li>        <li id="ul0002-0003" num="0027">3. AV Architecture</li>        <li id="ul0002-0004" num="0028">4. AV Inputs</li>        <li id="ul0002-0005" num="0029">5. AV Planning</li>        <li id="ul0002-0006" num="0030">6. AV Control</li>        <li id="ul0002-0007" num="0031">7. System for Cross Modality Active Learning</li>        <li id="ul0002-0008" num="0032">8. Process for Cross Modality Active Learning</li>    </ul>    </li></ul></p><heading id="h-0005" level="1">General Overview</heading><p id="p-0026" num="0033">A vehicle (such as an autonomous vehicle) typically has multiple sensors mounted at various locations on the vehicle. Data from these sensors is used for object detection. In object detection, sensor data is analyzed to label the sensor data with confidence scores that indicate the presence of a particular object class instance within an area of the data captured by a sensor. For example, the sensor data is be divided into one or more dimensional bounding boxes, and each box is labeled with the likelihood that the bounding box contains a particular class of object. The objects include, but are not limited to, a pedestrian, vehicle, bike, and the like. Active learning is implemented across a plurality of sensor modalities to determine informative data output by object detection techniques. Cross-modality inconsistencies in the output data are computed, and an inconsistency across modalities is used to identify the captured scene as an informative scene. The inconsistencies are weighted in accordance with the known strengths and weaknesses of the respective modality.</p><p id="p-0027" num="0034">Some of the advantages of these techniques include the generic implementation of a black box approach to determining which scenes are informative scenes and which scenes are not. The present techniques can be used as a compliment to existing engineered efforts in crash detection, generic object detection, anomaly detection, and sensor fault detection. Moreover, the present techniques include any network that performs two dimensional (2D) or three dimensional (3D) object detection, including but not limited to camera, radar, and LiDAR object detection networks. By virtue of the implementation of the systems and techniques described herein, datasets can be made more informative and, as a result, the systems they are used in can be operated more efficiently.</p><heading id="h-0006" level="1">System Overview</heading><p id="p-0028" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example of an AV having autonomous capability.</p><p id="p-0029" num="0036">As used herein, the term &#x201c;autonomous capability&#x201d; refers to a function, feature, or facility that enables a vehicle to be partially or fully operated without real-time human intervention, including without limitation fully AVs, highly AVs, and conditionally AVs.</p><p id="p-0030" num="0037">As used herein, an autonomous vehicle (AV) is a vehicle that possesses autonomous capability.</p><p id="p-0031" num="0038">As used herein, &#x201c;vehicle&#x201d; includes means of transportation of goods or people. For example, cars, buses, trains, airplanes, drones, trucks, boats, ships, submersibles, dirigibles, etc. A driverless car is an example of a vehicle.</p><p id="p-0032" num="0039">As used herein, &#x201c;trajectory&#x201d; refers to a path or route to navigate an AV from a first spatiotemporal location to second spatiotemporal location. In an embodiment, the first spatiotemporal location is referred to as the initial or starting location and the second spatiotemporal location is referred to as the destination, final location, goal, goal position, or goal location. In some examples, a trajectory is made up of one or more segments (e.g., sections of road) and each segment is made up of one or more blocks (e.g., portions of a lane or intersection). In an embodiment, the spatiotemporal locations correspond to real world locations. For example, the spatiotemporal locations are pick up or drop-off locations to pick up or drop-off persons or goods.</p><p id="p-0033" num="0040">As used herein, &#x201c;sensor(s)&#x201d; includes one or more hardware components that detect information about the environment surrounding the sensor. Some of the hardware components can include sensing components (e.g., image sensors, biometric sensors), transmitting and/or receiving components (e.g., laser or radio frequency wave transmitters and receivers), electronic components such as analog-to-digital converters, a data storage device (such as a RAM and/or a nonvolatile storage), software or firmware components and data processing components such as an ASIC (application-specific integrated circuit), a microprocessor and/or a microcontroller.</p><p id="p-0034" num="0041">As used herein, a &#x201c;scene description&#x201d; is a data structure (e.g., list) or data stream that includes one or more classified or labeled objects detected by one or more sensors on the AV vehicle or provided by a source external to the AV.</p><p id="p-0035" num="0042">As used herein, a &#x201c;road&#x201d; is a physical area that can be traversed by a vehicle, and may correspond to a named thoroughfare (e.g., city street, interstate freeway, etc.) or may correspond to an unnamed thoroughfare (e.g., a driveway in a house or office building, a section of a parking lot, a section of a vacant lot, a dirt path in a rural area, etc.). Because some vehicles (e.g., 4-wheel-drive pickup trucks, sport utility vehicles, etc.) are capable of traversing a variety of physical areas not specifically adapted for vehicle travel, a &#x201c;road&#x201d; may be a physical area not formally defined as a thoroughfare by any municipality or other governmental or administrative body.</p><p id="p-0036" num="0043">As used herein, a &#x201c;lane&#x201d; is a portion of a road that can be traversed by a vehicle. A lane is sometimes identified based on lane markings. For example, a lane may correspond to most or all of the space between lane markings, or may correspond to only some (e.g., less than 50%) of the space between lane markings. For example, a road having lane markings spaced far apart might accommodate two or more vehicles between the markings, such that one vehicle can pass the other without traversing the lane markings, and thus could be interpreted as having a lane narrower than the space between the lane markings, or having two lanes between the lane markings. A lane could also be interpreted in the absence of lane markings. For example, a lane may be defined based on physical features of an environment, e.g., rocks and trees along a thoroughfare in a rural area or, e.g., natural obstructions to be avoided in an undeveloped area. A lane could also be interpreted independent of lane markings or physical features. For example, a lane could be interpreted based on an arbitrary path free of obstructions in an area that otherwise lacks features that would be interpreted as lane boundaries. In an example scenario, an AV could interpret a lane through an obstruction-free portion of a field or empty lot. In another example scenario, an AV could interpret a lane through a wide (e.g., wide enough for two or more lanes) road that does not have lane markings. In this scenario, the AV could communicate information about the lane to other AVs so that the other AVs can use the same lane information to coordinate path planning among themselves.</p><p id="p-0037" num="0044">The term &#x201c;over-the-air (OTA) client&#x201d; includes any AV, or any electronic device (e.g., computer, controller, IoT device, electronic control unit (ECU)) that is embedded in, coupled to, or in communication with an AV.</p><p id="p-0038" num="0045">The term &#x201c;over-the-air (OTA) update&#x201d; means any update, change, deletion or addition to software, firmware, data or configuration settings, or any combination thereof, that is delivered to an OTA client using proprietary and/or standardized wireless communications technology, including but not limited to: cellular mobile communications (e.g., 2G, 3G, 4G, 5G), radio wireless area networks (e.g., WiFi) and/or satellite Internet.</p><p id="p-0039" num="0046">The term &#x201c;edge node&#x201d; means one or more edge devices coupled to a network that provide a portal for communication with AVs and can communicate with other edge nodes and a cloud based computing platform, for scheduling and delivering OTA updates to OTA clients.</p><p id="p-0040" num="0047">The term &#x201c;edge device&#x201d; means a device that implements an edge node and provides a physical wireless access point (AP) into enterprise or service provider (e.g., VERIZON, AT&#x26;T) core networks. Examples of edge devices include but are not limited to: computers, controllers, transmitters, routers, routing switches, integrated access devices (IADs), multiplexers, metropolitan area network (MAN) and wide area network (WAN) access devices.</p><p id="p-0041" num="0048">&#x201c;One or more&#x201d; includes a function being performed by one element, a function being performed by more than one element, e.g., in a distributed fashion, several functions being performed by one element, several functions being performed by several elements, or any combination of the above.</p><p id="p-0042" num="0049">It will also be understood that, although the terms first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first contact could be termed a second contact, and, similarly, a second contact could be termed a first contact, without departing from the scope of the various described embodiments. The first contact and the second contact are both contacts, but they are not the same contact.</p><p id="p-0043" num="0050">The terminology used in the description of the various described embodiments herein is for the purpose of describing particular embodiments only and is not intended to be limiting. As used in the description of the various described embodiments and the appended claims, the singular forms &#x201c;a,&#x201d; &#x201c;an&#x201d; and &#x201c;the&#x201d; are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will also be understood that the term &#x201c;and/or&#x201d; as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms &#x201c;includes,&#x201d; &#x201c;including,&#x201d; &#x201c;comprises,&#x201d; and/or &#x201c;comprising,&#x201d; when used in this description, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.</p><p id="p-0044" num="0051">As used herein, the term &#x201c;if&#x201d; is, optionally, construed to mean &#x201c;when&#x201d; or &#x201c;upon&#x201d; or &#x201c;in response to determining&#x201d; or &#x201c;in response to detecting,&#x201d; depending on the context. Similarly, the phrase &#x201c;if it is determined&#x201d; or &#x201c;if [a stated condition or event] is detected&#x201d; is, optionally, construed to mean &#x201c;upon determining&#x201d; or &#x201c;in response to determining&#x201d; or &#x201c;upon detecting [the stated condition or event]&#x201d; or &#x201c;in response to detecting [the stated condition or event],&#x201d; depending on the context.</p><p id="p-0045" num="0052">Some embodiments of the present disclosure are described herein in connection with a threshold. As described herein, satisfying a threshold can refer to a value being greater than the threshold, more than the threshold, higher than the threshold, greater than or equal to the threshold, less than the threshold, fewer than the threshold, lower than the threshold, less than or equal to the threshold, equal to the threshold, and/or the like.</p><p id="p-0046" num="0053">As used herein, an AV system refers to the AV along with the array of hardware, software, stored data, and data generated in real-time that supports the operation of the AV. In an embodiment, the AV system is incorporated within the AV. In an embodiment, the AV system is spread across several locations. For example, some of the software of the AV system is implemented on a cloud computing environment similar to cloud computing environment <b>200</b> described below with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0047" num="0054">In general, this document describes technologies applicable to any vehicles that have one or more autonomous capabilities including fully AVs, highly AVs, and conditionally AVs, such as so-called Level 5, Level 4 and Level 3 vehicles, respectively (see SAE International's standard J3016: Taxonomy and Definitions for Terms Related to On-Road Motor Vehicle Automated Driving Systems, which is incorporated by reference in its entirety, for more details on the classification of levels of autonomy in vehicles). The technologies described in this document are also applicable to partially AVs and driver assisted vehicles, such as so-called Level 2 and Level 1 vehicles (see SAE International's standard J3016: Taxonomy and Definitions for Terms Related to On-Road Motor Vehicle Automated Driving Systems). In an embodiment, one or more of the Level 1, 2, 3, 4 and 5 vehicle systems can automate certain vehicle operations (e.g., steering, braking, and using maps) under certain operating conditions based on processing of sensor inputs. The technologies described in this document can benefit vehicles in any levels, ranging from fully AVs to human-operated vehicles.</p><p id="p-0048" num="0055">AVs have advantages over vehicles that require a human driver. One advantage is safety. For example, in 2016, the United States experienced 6 million automobile accidents, 2.4 million injuries, 40,000 fatalities, and 13 million vehicles in crashes, estimated at a societal cost of $910+ billion. U.S. traffic fatalities per 100 million miles traveled have been reduced from about six to about one from 1965 to 2015, in part due to additional safety measures deployed in vehicles. For example, an additional half second of warning that a crash is about to occur is believed to mitigate 60% of front-to-rear crashes. However, passive safety features (e.g., seat belts, airbags) have likely reached their limit in improving this number. Thus, active safety measures, such as automated control of a vehicle, are the likely next step in improving these statistics. Because human drivers are believed to be responsible for a critical pre-crash event in 95% of crashes, automated driving systems are likely to achieve better safety outcomes, e.g., by reliably recognizing and avoiding critical situations better than humans; making better decisions, obeying traffic laws, and predicting future events better than humans; and reliably controlling a vehicle better than a human.</p><p id="p-0049" num="0056">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an AV system <b>120</b> operates the vehicle <b>100</b> along a trajectory <b>198</b> through an environment <b>190</b> to a destination <b>199</b> (sometimes referred to as a final location) while avoiding objects (e.g., natural obstructions <b>191</b>, vehicles <b>193</b>, pedestrians <b>192</b>, cyclists, and other obstacles) and obeying rules of the road (e.g., rules of operation or driving preferences).</p><p id="p-0050" num="0057">In an embodiment, the AV system <b>120</b> includes devices <b>101</b> that are instrumented to receive and act on operational commands from the computer processors <b>146</b>. We use the term &#x201c;operational command&#x201d; to mean an executable instruction (or set of instructions) that causes a vehicle to perform an action (e.g., a driving maneuver). Operational commands can, without limitation, including instructions for a vehicle to start moving forward, stop moving forward, start moving backward, stop moving backward, accelerate, decelerate, perform a left turn, and perform a right turn. In an embodiment, computing processors <b>146</b> are similar to the processor <b>304</b> described below in reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Examples of devices <b>101</b> include a steering control <b>102</b>, brakes <b>103</b>, gears, accelerator pedal or other acceleration control mechanisms, windshield wipers, side-door locks, window controls, and turn-indicators.</p><p id="p-0051" num="0058">In an embodiment, the AV system <b>120</b> includes sensors <b>121</b> for measuring or inferring properties of state or condition of the vehicle <b>100</b>, such as the AV's position, linear and angular velocity and acceleration, and heading (e.g., an orientation of the leading end of vehicle <b>100</b>). Example of sensors <b>121</b> are GPS, inertial measurement units (IMU) that measure both vehicle linear accelerations and angular rates, wheel speed sensors for measuring or estimating wheel slip ratios, wheel brake pressure or braking torque sensors, engine torque or wheel torque sensors, and steering angle and angular rate sensors.</p><p id="p-0052" num="0059">In an embodiment, the sensors <b>121</b> also include sensors for sensing or measuring properties of the AV's environment. For example, monocular or stereo video cameras <b>122</b> in the visible light, infrared or thermal (or both) spectra, LiDAR <b>123</b>, RADAR, ultrasonic sensors, time-of-flight (TOF) depth sensors, speed sensors, temperature sensors, humidity sensors, and precipitation sensors.</p><p id="p-0053" num="0060">In an embodiment, the AV system <b>120</b> includes a data storage unit <b>142</b> and memory <b>144</b> for storing machine instructions associated with computer processors <b>146</b> or data collected by sensors <b>121</b>. In an embodiment, the data storage unit <b>142</b> is similar to the ROM <b>308</b> or storage device <b>310</b> described below in relation to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. In an embodiment, memory <b>144</b> is similar to the main memory <b>306</b> described below. In an embodiment, the data storage unit <b>142</b> and memory <b>144</b> store historical, real-time, and/or predictive information about the environment <b>190</b>. In an embodiment, the stored information includes maps, driving performance, traffic congestion updates or weather conditions. In an embodiment, data relating to the environment <b>190</b> is transmitted to the vehicle <b>100</b> via a communications channel from a remotely located database <b>134</b>.</p><p id="p-0054" num="0061">In an embodiment, the AV system <b>120</b> includes communications devices <b>140</b> for communicating measured or inferred properties of other vehicles' states and conditions, such as positions, linear and angular velocities, linear and angular accelerations, and linear and angular headings to the vehicle <b>100</b>. These devices include Vehicle-to-Vehicle (V2V) and Vehicle-to-Infrastructure (V2I) communication devices and devices for wireless communications over point-to-point or ad hoc networks or both. In an embodiment, the communications devices <b>140</b> communicate across the electromagnetic spectrum (including radio and optical communications) or other media (e.g., air and acoustic media). A combination of Vehicle-to-Vehicle (V2V) Vehicle-to-Infrastructure (V2I) communication (and, in some embodiments, one or more other types of communication) is sometimes referred to as Vehicle-to-Everything (V2X) communication. V2X communication typically conforms to one or more communications standards for communication with, between, and among AVs.</p><p id="p-0055" num="0062">In an embodiment, the communication devices <b>140</b> include communication interfaces. For example, wired, wireless, WiMAX, Wi-Fi, Bluetooth, satellite, cellular, optical, near field, infrared, or radio interfaces. The communication interfaces transmit data from a remotely located database <b>134</b> to AV system <b>120</b>. In an embodiment, the remotely located database <b>134</b> is embedded in a cloud computing environment <b>200</b> as described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The communication devices <b>140</b> transmit data collected from sensors <b>121</b> or other data related to the operation of vehicle <b>100</b> to the remotely located database <b>134</b>. In an embodiment, communication devices <b>140</b> transmit information that relates to teleoperations to the vehicle <b>100</b>. In some embodiments, the vehicle <b>100</b> communicates with other remote (e.g., &#x201c;cloud&#x201d;) servers <b>136</b>.</p><p id="p-0056" num="0063">In an embodiment, the remotely located database <b>134</b> also stores and transmits digital data (e.g., storing data such as road and street locations). Such data is stored on the memory <b>144</b> on the vehicle <b>100</b>, or transmitted to the vehicle <b>100</b> via a communications channel from the remotely located database <b>134</b>.</p><p id="p-0057" num="0064">In an embodiment, the remotely located database <b>134</b> stores and transmits historical information about driving properties (e.g., speed and acceleration profiles) of vehicles that have previously traveled along trajectory <b>198</b> at similar times of day. In one implementation, such data can be stored on the memory <b>144</b> on the vehicle <b>100</b>, or transmitted to the vehicle <b>100</b> via a communications channel from the remotely located database <b>134</b>.</p><p id="p-0058" num="0065">Computer processors <b>146</b> located on the vehicle <b>100</b> algorithmically generate control actions based on both real-time sensor data and prior information, allowing the AV system <b>120</b> to execute its autonomous driving capabilities.</p><p id="p-0059" num="0066">In an embodiment, the AV system <b>120</b> includes computer peripherals <b>132</b> coupled to computer processors <b>146</b> for providing information and alerts to, and receiving input from, a user (e.g., an occupant or a remote user) of the vehicle <b>100</b>. In an embodiment, peripherals <b>132</b> are similar to the display <b>312</b>, input device <b>314</b>, and cursor controller <b>316</b> discussed below in reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The coupling is wireless or wired. Any two or more of the interface devices can be integrated into a single device.</p><p id="p-0060" num="0067">In an embodiment, the AV system <b>120</b> receives and enforces a privacy level of a passenger, e.g., specified by the passenger or stored in a profile associated with the passenger. The privacy level of the passenger determines how particular information associated with the passenger (e.g., passenger comfort data, biometric data, etc.) is permitted to be used, stored in the passenger profile, and/or stored on the cloud server <b>136</b> and associated with the passenger profile. In an embodiment, the privacy level specifies particular information associated with a passenger that is deleted once the ride is completed. In an embodiment, the privacy level specifies particular information associated with a passenger and identifies one or more entities that are authorized to access the information. Examples of specified entities that are authorized to access information can include other AVs, third party AV systems, or any entity that could potentially access the information.</p><p id="p-0061" num="0068">A privacy level of a passenger can be specified at one or more levels of granularity. In an embodiment, a privacy level identifies specific information to be stored or shared. In an embodiment, the privacy level applies to all the information associated with the passenger such that the passenger can specify that none of her personal information is stored or shared. Specification of the entities that are permitted to access particular information can also be specified at various levels of granularity. Various sets of entities that are permitted to access particular information can include, for example, other AVs, cloud servers <b>136</b>, specific third party AV systems, etc.</p><p id="p-0062" num="0069">In an embodiment, the AV system <b>120</b> or the cloud server <b>136</b> determines if certain information associated with a passenger can be accessed by the AV <b>100</b> or another entity. For example, a third-party AV system that attempts to access passenger input related to a particular spatiotemporal location must obtain authorization, e.g., from the AV system <b>120</b> or the cloud server <b>136</b>, to access the information associated with the passenger. For example, the AV system <b>120</b> uses the passenger's specified privacy level to determine whether the passenger input related to the spatiotemporal location can be presented to the third-party AV system, the AV <b>100</b>, or to another AV. This enables the passenger's privacy level to specify which other entities are allowed to receive data about the passenger's actions or other data associated with the passenger.</p><p id="p-0063" num="0070"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an example &#x201c;cloud&#x201d; computing environment. Cloud computing is a model of service delivery for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g. networks, network bandwidth, servers, processing, memory, storage, applications, virtual machines, and services). In typical cloud computing systems, one or more large cloud data centers house the machines used to deliver the services provided by the cloud. Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the cloud computing environment <b>200</b> includes cloud data centers <b>204</b><i>a, </i><b>204</b><i>b, </i>and <b>204</b><i>c </i>that are interconnected through the cloud <b>202</b>. Data centers <b>204</b><i>a, </i><b>204</b><i>b, </i>and <b>204</b><i>c </i>provide cloud computing services to computer systems <b>206</b><i>a, </i><b>206</b><i>b, </i><b>206</b><i>c, </i><b>206</b><i>d, </i><b>206</b><i>e, </i>and <b>206</b><i>f </i>connected to cloud <b>202</b>.</p><p id="p-0064" num="0071">The cloud computing environment <b>200</b> includes one or more cloud data centers. In general, a cloud data center, for example the cloud data center <b>204</b><i>a </i>shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, refers to the physical arrangement of servers that make up a cloud, for example the cloud <b>202</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, or a particular portion of a cloud. For example, servers are physically arranged in the cloud datacenter into rooms, groups, rows, and racks. A cloud datacenter has one or more zones, which include one or more rooms of servers. Each room has one or more rows of servers, and each row includes one or more racks. Each rack includes one or more individual server nodes. In some implementation, servers in zones, rooms, racks, and/or rows are arranged into groups based on physical infrastructure requirements of the datacenter facility, which include power, energy, thermal, heat, and/or other requirements. In an embodiment, the server nodes are similar to the computer system described in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The data center <b>204</b><i>a </i>has many computing systems distributed through many racks.</p><p id="p-0065" num="0072">The cloud <b>202</b> includes cloud data centers <b>204</b><i>a, </i><b>204</b><i>b, </i>and <b>204</b><i>c </i>along with the network and networking resources (for example, networking equipment, nodes, routers, switches, and networking cables) that interconnect the cloud data centers <b>204</b><i>a, </i><b>204</b><i>b, </i>and <b>204</b><i>c </i>and help facilitate the computing systems' <b>206</b><i>a</i>-<i>f </i>access to cloud computing services. In an embodiment, the network represents any combination of one or more local networks, wide area networks, or internetworks coupled using wired or wireless links deployed using terrestrial or satellite connections. Data exchanged over the network, is transferred using any number of network layer protocols, such as Internet Protocol (IP), Multiprotocol Label Switching (MPLS), Asynchronous Transfer Mode (ATM), Frame Relay, etc. Furthermore, in embodiments where the network represents a combination of multiple sub-networks, different network layer protocols are used at each of the underlying sub-networks. In some embodiments, the network represents one or more interconnected internetworks, such as the public Internet.</p><p id="p-0066" num="0073">The computing systems <b>206</b><i>a</i>-<i>f </i>or cloud computing services consumers are connected to the cloud <b>202</b> through network links and network adapters. In an embodiment, the computing systems <b>206</b><i>a</i>-<i>f </i>are implemented as various computing devices, for example servers, desktops, laptops, tablet, smartphones, Internet of Things (IoT) devices, AVs (including, cars, drones, shuttles, trains, buses, etc.) and consumer electronics. In an embodiment, the computing systems <b>206</b><i>a</i>-<i>f </i>are implemented in or as a part of other systems.</p><p id="p-0067" num="0074"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a computer system <b>300</b>. In an implementation, the computer system <b>300</b> is a special purpose computing device. The special-purpose computing device is hard-wired to perform the techniques or includes digital electronic devices such as one or more application-specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs) that are persistently programmed to perform the techniques, or can include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware, memory, other storage, or a combination. Such special-purpose computing devices can also combine custom hard-wired logic, ASICs, or FPGAs with custom programming to accomplish the techniques. In various embodiments, the special-purpose computing devices are desktop computer systems, portable computer systems, handheld devices, network devices or any other device that incorporates hard-wired and/or program logic to implement the techniques.</p><p id="p-0068" num="0075">In an embodiment, the computer system <b>300</b> includes a bus <b>302</b> or other communication mechanism for communicating information, and a processor <b>304</b> coupled with a bus <b>302</b> for processing information. The processor <b>304</b> is, for example, a general-purpose microprocessor. The computer system <b>300</b> also includes a main memory <b>306</b>, such as a random-access memory (RAM) or other dynamic storage device, coupled to the bus <b>302</b> for storing information and instructions to be executed by processor <b>304</b>. In one implementation, the main memory <b>306</b> is used for storing temporary variables or other intermediate information during execution of instructions to be executed by the processor <b>304</b>. Such instructions, when stored in non-transitory storage media accessible to the processor <b>304</b>, render the computer system <b>300</b> into a special-purpose machine that is customized to perform the operations specified in the instructions.</p><p id="p-0069" num="0076">In an embodiment, the computer system <b>300</b> further includes a read only memory (ROM) <b>308</b> or other static storage device coupled to the bus <b>302</b> for storing static information and instructions for the processor <b>304</b>. A storage device <b>310</b>, such as a magnetic disk, optical disk, solid-state drive, or three-dimensional cross point memory is provided and coupled to the bus <b>302</b> for storing information and instructions.</p><p id="p-0070" num="0077">In an embodiment, the computer system <b>300</b> is coupled via the bus <b>302</b> to a display <b>312</b>, such as a cathode ray tube (CRT), a liquid crystal display (LCD), plasma display, light emitting diode (LED) display, or an organic light emitting diode (OLED) display for displaying information to a computer user. An input device <b>314</b>, including alphanumeric and other keys, is coupled to bus <b>302</b> for communicating information and command selections to the processor <b>304</b>. Another type of user input device is a cursor controller <b>316</b>, such as a mouse, a trackball, a touch-enabled display, or cursor direction keys for communicating direction information and command selections to the processor <b>304</b> and for controlling cursor movement on the display <b>312</b>. This input device typically has two degrees of freedom in two axes, a first axis (e.g., x-axis) and a second axis (e.g., y-axis), that allows the device to specify positions in a plane.</p><p id="p-0071" num="0078">According to one embodiment, the techniques herein are performed by the computer system <b>300</b> in response to the processor <b>304</b> executing one or more sequences of one or more instructions contained in the main memory <b>306</b>. Such instructions are read into the main memory <b>306</b> from another storage medium, such as the storage device <b>310</b>. Execution of the sequences of instructions contained in the main memory <b>306</b> causes the processor <b>304</b> to perform the process steps described herein. In alternative embodiments, hard-wired circuitry is used in place of or in combination with software instructions.</p><p id="p-0072" num="0079">The term &#x201c;storage media&#x201d; as used herein refers to any non-transitory media that store data and/or instructions that cause a machine to operate in a specific fashion. Such storage media includes non-volatile media and/or volatile media. Non-volatile media includes, for example, optical disks, magnetic disks, solid-state drives, or three-dimensional cross point memory, such as the storage device <b>310</b>. Volatile media includes dynamic memory, such as the main memory <b>306</b>. Common forms of storage media include, for example, a floppy disk, a flexible disk, hard disk, solid-state drive, magnetic tape, or any other magnetic data storage medium, a CD-ROM, any other optical data storage medium, any physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, NV-RAM, or any other memory chip or cartridge.</p><p id="p-0073" num="0080">Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example, transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise the bus <b>302</b>. Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infrared data communications.</p><p id="p-0074" num="0081">In an embodiment, various forms of media are involved in carrying one or more sequences of one or more instructions to the processor <b>304</b> for execution. For example, the instructions are initially carried on a magnetic disk or solid-state drive of a remote computer. The remote computer loads the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to the computer system <b>300</b> receives the data on the telephone line and use an infrared transmitter to convert the data to an infrared signal. An infrared detector receives the data carried in the infrared signal and appropriate circuitry places the data on the bus <b>302</b>. The bus <b>302</b> carries the data to the main memory <b>306</b>, from which processor <b>304</b> retrieves and executes the instructions. The instructions received by the main memory <b>306</b> can optionally be stored on the storage device <b>310</b> either before or after execution by processor <b>304</b>.</p><p id="p-0075" num="0082">The computer system <b>300</b> also includes a communication interface <b>318</b> coupled to the bus <b>302</b>. The communication interface <b>318</b> provides a two-way data communication coupling to a network link <b>320</b> that is connected to a local network <b>322</b>. For example, the communication interface <b>318</b> is an integrated service digital network (ISDN) card, cable modem, satellite modem, or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, the communication interface <b>318</b> is a local area network (LAN) card to provide a data communication connection to a compatible LAN. In some implementations, wireless links are also implemented. In any such implementation, the communication interface <b>318</b> sends and receives electrical, electromagnetic, or optical signals that carry digital data streams representing various types of information.</p><p id="p-0076" num="0083">The network link <b>320</b> typically provides data communication through one or more networks to other data devices. For example, the network link <b>320</b> provides a connection through the local network <b>322</b> to a host computer <b>324</b> or to a cloud data center or equipment operated by an Internet Service Provider (ISP) <b>326</b>. The ISP <b>326</b> in turn provides data communication services through the world-wide packet data communication network now commonly referred to as the &#x201c;Internet&#x201d; <b>328</b>. The local network <b>322</b> and Internet <b>328</b> both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on the network link <b>320</b> and through the communication interface <b>318</b>, which carry the digital data to and from the computer system <b>300</b>, are example forms of transmission media. In an embodiment, the network <b>320</b> contains the cloud <b>202</b> or a part of the cloud <b>202</b> described above.</p><p id="p-0077" num="0084">The computer system <b>300</b> sends messages and receives data, including program code, through the network(s), the network link <b>320</b>, and the communication interface <b>318</b>. In an embodiment, the computer system <b>300</b> receives code for processing. The received code is executed by the processor <b>304</b> as it is received, and/or stored in storage device <b>310</b>, or other non-volatile storage for later execution.</p><heading id="h-0007" level="1">AV Architecture</heading><p id="p-0078" num="0085"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example architecture <b>400</b> for an AV (e.g., the vehicle <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). The architecture <b>400</b> includes a perception system <b>402</b> (sometimes referred to as a perception circuit), a planning system <b>404</b> (sometimes referred to as a planning circuit), a control system <b>406</b> (sometimes referred to as a control circuit), a localization system <b>408</b> (sometimes referred to as a localization circuit), and a database system <b>410</b> (sometimes referred to as a database circuit). Each system plays a role in the operation of the vehicle <b>100</b>. Together, the systems <b>402</b>, <b>404</b>, <b>406</b>, <b>408</b>, and <b>410</b> can be part of the AV system <b>120</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some embodiments, any of the systems <b>402</b>, <b>404</b>, <b>406</b>, <b>408</b>, and <b>410</b> is a combination of computer software (e.g., executable code stored on a computer-readable medium) and computer hardware (e.g., one or more microprocessors, microcontrollers, application-specific integrated circuits [ASICs]), hardware memory devices, other types of integrated circuits, other types of computer hardware, or a combination of any or all of these things). Each of the systems <b>402</b>, <b>404</b>, <b>406</b>, <b>408</b>, and <b>410</b> is sometimes referred to as a processing circuit (e.g., computer hardware, computer software, or a combination of the two). A combination of any or all of the systems <b>402</b>, <b>404</b>, <b>406</b>, <b>408</b>, and <b>410</b> is also an example of a processing circuit.</p><p id="p-0079" num="0086">In use, the planning system <b>404</b> receives data representing a destination <b>412</b> and determines data representing a trajectory <b>414</b> (sometimes referred to as a route) that can be traveled by the vehicle <b>100</b> to reach (e.g., arrive at) the destination <b>412</b>. In order for the planning system <b>404</b> to determine the data representing the trajectory <b>414</b>, the planning system <b>404</b> receives data from the perception system <b>402</b>, the localization system <b>408</b>, and the database system <b>410</b>.</p><p id="p-0080" num="0087">The perception system <b>402</b> identifies nearby physical objects using one or more sensors <b>121</b>, e.g., as also shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The objects are classified (e.g., grouped into types such as pedestrian, bicycle, automobile, traffic sign, etc.) and a scene description including the classified objects <b>416</b> is provided to the planning system <b>404</b>.</p><p id="p-0081" num="0088">The planning system <b>404</b> also receives data representing the AV position <b>418</b> from the localization system <b>408</b>. The localization system <b>408</b> determines the AV position by using data from the sensors <b>121</b> and data from the database system <b>410</b> (e.g., a geographic data) to calculate a position. For example, the localization system <b>408</b> uses data from a GNSS (Global Navigation Satellite System) sensor and geographic data to calculate a longitude and latitude of the AV. In an embodiment, data used by the localization system <b>408</b> includes high-precision maps of the roadway geometric properties, maps describing road network connectivity properties, maps describing roadway physical properties (such as traffic speed, traffic volume, the number of vehicular and cyclist traffic lanes, lane width, lane traffic directions, or lane marker types and locations, or combinations of them), and maps describing the spatial locations of road features such as crosswalks, traffic signs or other travel signals of various types. In an embodiment, the high-precision maps are constructed by adding data through automatic or manual annotation to low-precision maps.</p><p id="p-0082" num="0089">The control system <b>406</b> receives the data representing the trajectory <b>414</b> and the data representing the AV position <b>418</b> and operates the control functions <b>420</b><i>a</i>-<i>c </i>(e.g., steering, throttling, braking, ignition) of the AV in a manner that will cause the vehicle <b>100</b> to travel the trajectory <b>414</b> to the destination <b>412</b>. For example, if the trajectory <b>414</b> includes a left turn, the control system <b>406</b> will operate the control functions <b>420</b><i>a</i>-<i>c </i>in a manner such that the steering angle of the steering function will cause the vehicle <b>100</b> to turn left and the throttling and braking will cause the vehicle <b>100</b> to pause and wait for passing pedestrians or vehicles before the turn is made.</p><heading id="h-0008" level="1">AV Inputs</heading><p id="p-0083" num="0090"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an example of inputs <b>502</b><i>a</i>-<i>d </i>(e.g., sensors <b>121</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and outputs <b>504</b><i>a</i>-<i>d </i>(e.g., sensor data) that is used by the perception system <b>402</b> (<figref idref="DRAWINGS">FIG. <b>4</b></figref>). One input <b>502</b><i>a </i>is a LiDAR (Light Detection and Ranging) system (e.g., LiDAR <b>123</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). LiDAR is a technology that uses light (e.g., bursts of light such as infrared light) to obtain data about physical objects in its line of sight. A LiDAR system produces LiDAR data as output <b>504</b><i>a. </i>For example, LiDAR data is collections of 3D or 2D points (also known as a point clouds) that are used to construct a representation of the environment <b>190</b>.</p><p id="p-0084" num="0091">Another input <b>502</b><i>b </i>is a RADAR system. RADAR is a technology that uses radio waves to obtain data about nearby physical objects. RADARs can obtain data about objects not within the line of sight of a LiDAR system. A RADAR system produces RADAR data as output <b>504</b><i>b. </i>For example, RADAR data are one or more radio frequency electromagnetic signals that are used to construct a representation of the environment <b>190</b>.</p><p id="p-0085" num="0092">Another input <b>502</b><i>c </i>is a camera system. A camera system uses one or more cameras (e.g., digital cameras using a light sensor such as a charge-coupled device [CCD]) to obtain information about nearby physical objects. A camera system produces camera data as output <b>504</b><i>c. </i>Camera data often takes the form of image data (e.g., data in an image data format such as RAW, JPEG, PNG, etc.). In some examples, the camera system has multiple independent cameras, e.g., for the purpose of stereopsis (stereo vision), which enables the camera system to perceive depth. Although the objects perceived by the camera system are described here as &#x201c;nearby,&#x201d; this is relative to the AV. In some embodiments, the camera system is configured to &#x201c;see&#x201d; objects far, e.g., up to a kilometer or more ahead of the AV. Accordingly, in some embodiments, the camera system has features such as sensors and lenses that are optimized for perceiving objects that are far away.</p><p id="p-0086" num="0093">Another input <b>502</b><i>d </i>is a traffic light detection (TLD) system. A TLD system uses one or more cameras to obtain information about traffic lights, street signs, and other physical objects that provide visual navigation information. A TLD system produces TLD data as output <b>504</b><i>d. </i>TLD data often takes the form of image data (e.g., data in an image data format such as RAW, JPEG, PNG, etc.). A TLD system differs from a system incorporating a camera in that a TLD system uses a camera with a wide field of view (e.g., using a wide-angle lens or a fish-eye lens) in order to obtain information about as many physical objects providing visual navigation information as possible, so that the vehicle <b>100</b> has access to all relevant navigation information provided by these objects. For example, the viewing angle of the TLD system is about <b>120</b> degrees or more.</p><p id="p-0087" num="0094">In some embodiments, outputs <b>504</b><i>a</i>-<i>d </i>are combined using a sensor fusion technique. Thus, either the individual outputs <b>504</b><i>a</i>-<i>d </i>are provided to other systems of the vehicle <b>100</b> (e.g., provided to a planning system <b>404</b> as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>), or the combined output can be provided to the other systems, either in the form of a single combined output or multiple combined outputs of the same type (e.g., using the same combination technique or combining the same outputs or both) or different types type (e.g., using different respective combination techniques or combining different respective outputs or both). In some embodiments, an early fusion technique is used. An early fusion technique is characterized by combining outputs before one or more data processing steps are applied to the combined output. In some embodiments, a late fusion technique is used. A late fusion technique is characterized by combining outputs after one or more data processing steps are applied to the individual outputs.</p><p id="p-0088" num="0095"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an example of a LiDAR system <b>602</b> (e.g., the input <b>502</b><i>a </i>shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>). The LiDAR system <b>602</b> emits light <b>604</b><i>a</i>-<i>c </i>from a light emitter <b>606</b> (e.g., a laser transmitter). Light emitted by a LiDAR system is typically not in the visible spectrum; for example, infrared light is often used. Some of the light <b>604</b><i>b </i>emitted encounters a physical object <b>608</b> (e.g., a vehicle) and reflects back to the LiDAR system <b>602</b>. (Light emitted from a LiDAR system typically does not penetrate physical objects, e.g., physical objects in solid form.) The LiDAR system <b>602</b> also has one or more light detectors <b>610</b>, which detect the reflected light. In an embodiment, one or more data processing systems associated with the LiDAR system generates an image <b>612</b> representing the field of view <b>614</b> of the LiDAR system. The image <b>612</b> includes information that represents the boundaries <b>616</b> of a physical object <b>608</b>. In this way, the image <b>612</b> is used to determine the boundaries <b>616</b> of one or more physical objects near an AV.</p><p id="p-0089" num="0096"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows the LiDAR system <b>602</b> in operation. In the scenario shown in this figure, the vehicle <b>100</b> receives both camera system output <b>504</b><i>c </i>in the form of an image <b>702</b> and LiDAR system output <b>504</b><i>a </i>in the form of LiDAR data points <b>704</b>. In use, the data processing systems of the vehicle <b>100</b> compares the image <b>702</b> to the data points <b>704</b>. In particular, a physical object <b>706</b> identified in the image <b>702</b> is also identified among the data points <b>704</b>. In this way, the vehicle <b>100</b> perceives the boundaries of the physical object based on the contour and density of the data points <b>704</b>.</p><p id="p-0090" num="0097"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows the operation of the LiDAR system <b>602</b> in additional detail. As described above, the vehicle <b>100</b> detects the boundary of a physical object based on characteristics of the data points detected by the LiDAR system <b>602</b>. As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a flat object, such as the ground <b>802</b>, will reflect light <b>804</b><i>a</i>-<i>d </i>emitted from a LiDAR system <b>602</b> in a consistent manner. Put another way, because the LiDAR system <b>602</b> emits light using consistent spacing, the ground <b>802</b> will reflect light back to the LiDAR system <b>602</b> with the same consistent spacing. As the vehicle <b>100</b> travels over the ground <b>802</b>, the LiDAR system <b>602</b> will continue to detect light reflected by the next valid ground point <b>806</b> if nothing is obstructing the road. However, if an object <b>808</b> obstructs the road, light <b>804</b><i>e</i>-<i>f </i>emitted by the LiDAR system <b>602</b> will be reflected from points <b>810</b><i>a</i>-<i>b </i>in a manner inconsistent with the expected consistent manner. From this information, the vehicle <b>100</b> can determine that the object <b>808</b> is present.</p><heading id="h-0009" level="1">Path Planning</heading><p id="p-0091" num="0098"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a block diagram <b>900</b> of the relationships between inputs and outputs of a planning system <b>404</b> (e.g., as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>). In general, the output of a planning system <b>404</b> is a route <b>902</b> from a start point <b>904</b> (e.g., source location or initial location), and an end point <b>906</b> (e.g., destination or final location). The route <b>902</b> is typically defined by one or more segments. For example, a segment is a distance to be traveled over at least a portion of a street, road, highway, driveway, or other physical area appropriate for automobile travel. In some examples, e.g., if the vehicle <b>100</b> is an off-road capable vehicle such as a four-wheel-drive (4WD) or all-wheel-drive (AWD) car, SUV, pick-up truck, or the like, the route <b>902</b> includes &#x201c;off-road&#x201d; segments such as unpaved paths or open fields.</p><p id="p-0092" num="0099">In addition to the route <b>902</b>, a planning system also outputs lane-level route planning data <b>908</b>. The lane-level route planning data <b>908</b> is used to traverse segments of the route <b>902</b> based on conditions of the segment at a particular time. For example, if the route <b>902</b> includes a multi-lane highway, the lane-level route planning data <b>908</b> includes trajectory planning data <b>910</b> that the vehicle <b>100</b> can use to choose a lane among the multiple lanes, e.g., based on whether an exit is approaching, whether one or more of the lanes have other vehicles, or other factors that vary over the course of a few minutes or less. Similarly, in some implementations, the lane-level route planning data <b>908</b> includes speed constraints <b>912</b> specific to a segment of the route <b>902</b>. For example, if the segment includes pedestrians or un-expected traffic, the speed constraints <b>912</b> may limit the vehicle <b>100</b> to a travel speed slower than an expected speed, e.g., a speed based on speed limit data for the segment.</p><p id="p-0093" num="0100">In an embodiment, the inputs to the planning system <b>404</b> includes database data <b>914</b> (e.g., from the database system <b>410</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>), current location data <b>916</b> (e.g., the AV position <b>418</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>), destination data <b>918</b> (e.g., for the destination <b>412</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>), and object data <b>920</b> (e.g., the classified objects <b>416</b> as perceived by the perception system <b>402</b> as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>). In some embodiments, the database data <b>914</b> includes rules used in planning. Rules are specified using a formal language, e.g., using Boolean logic. In any given situation encountered by the vehicle <b>100</b>, at least some of the rules will apply to the situation. A rule applies to a given situation if the rule has conditions that are met based on information available to the vehicle <b>100</b>, e.g., information about the surrounding environment. Rules can have priority. For example, a rule that says, &#x201c;if the road is a freeway, move to the leftmost lane&#x201d; can have a lower priority than &#x201c;if the exit is approaching within a mile, move to the rightmost lane.&#x201d;</p><p id="p-0094" num="0101"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a directed graph <b>1000</b> used in path planning, e.g., by the planning system <b>404</b> (<figref idref="DRAWINGS">FIG. <b>4</b></figref>). In general, a directed graph <b>1000</b> like the one shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> is used to determine a path between any start point <b>1002</b> and end point <b>1004</b>. In real-world terms, the distance separating the start point <b>1002</b> and end point <b>1004</b> may be relatively large (e.g., in two different metropolitan areas) or may be relatively small (e.g., two intersections abutting a city block or two lanes of a multi-lane road).</p><p id="p-0095" num="0102">In an embodiment, the directed graph <b>1000</b> has nodes <b>1006</b><i>a</i>-<i>d </i>representing different locations between the start point <b>1002</b> and the end point <b>1004</b> that could be occupied by a vehicle <b>100</b>. In some examples, e.g., when the start point <b>1002</b> and end point <b>1004</b> represent different metropolitan areas, the nodes <b>1006</b><i>a</i>-<i>d </i>represent segments of roads. In some examples, e.g., when the start point <b>1002</b> and the end point <b>1004</b> represent different locations on the same road, the nodes <b>1006</b><i>a</i>-<i>d </i>represent different positions on that road. In this way, the directed graph <b>1000</b> includes information at varying levels of granularity. In an embodiment, a directed graph having high granularity is also a subgraph of another directed graph having a larger scale. For example, a directed graph in which the start point <b>1002</b> and the end point <b>1004</b> are far away (e.g., many miles apart) has most of its information at a low granularity and is based on stored data, but also includes some high granularity information for the portion of the graph that represents physical locations in the field of view of the vehicle <b>100</b>.</p><p id="p-0096" num="0103">The nodes <b>1006</b><i>a</i>-<i>d </i>are distinct from objects <b>1008</b><i>a</i>-<i>b </i>which cannot overlap with a node. In an embodiment, when granularity is low, the objects <b>1008</b><i>a</i>-<i>b </i>represent regions that cannot be traversed by automobile, e.g., areas that have no streets or roads. When granularity is high, the objects <b>1008</b><i>a</i>-<i>b </i>represent physical objects in the field of view of the vehicle <b>100</b>, e.g., other automobiles, pedestrians, or other entities with which the vehicle <b>100</b> cannot share physical space. In an embodiment, some or all of the objects <b>1008</b><i>a</i>-<i>b </i>are a static objects (e.g., an object that does not change position such as a street lamp or utility pole) or dynamic objects (e.g., an object that is capable of changing position such as a pedestrian or other car).</p><p id="p-0097" num="0104">The nodes <b>1006</b><i>a</i>-<i>d </i>are connected by edges <b>1010</b><i>a</i>-<i>c. </i>If two nodes <b>1006</b><i>a</i>-<i>b </i>are connected by an edge <b>1010</b><i>a, </i>it is possible for a vehicle <b>100</b> to travel between one node <b>1006</b><i>a </i>and the other node <b>1006</b><i>b, </i>e.g., without having to travel to an intermediate node before arriving at the other node <b>1006</b><i>b. </i>(When we refer to a vehicle <b>100</b> traveling between nodes, we mean that the vehicle <b>100</b> travels between the two physical positions represented by the respective nodes.) The edges <b>1010</b><i>a</i>-<i>c </i>are often bidirectional, in the sense that a vehicle <b>100</b> travels from a first node to a second node, or from the second node to the first node. In an embodiment, edges <b>1010</b><i>a</i>-<i>c </i>are unidirectional, in the sense that an vehicle <b>100</b> can travel from a first node to a second node, however the vehicle <b>100</b> cannot travel from the second node to the first node. Edges <b>1010</b><i>a</i>-<i>c </i>are unidirectional when they represent, for example, one-way streets, individual lanes of a street, road, or highway, or other features that can only be traversed in one direction due to legal or physical constraints.</p><p id="p-0098" num="0105">In an embodiment, the planning system <b>404</b> uses the directed graph <b>1000</b> to identify a path <b>1012</b> made up of nodes and edges between the start point <b>1002</b> and end point <b>1004</b>.</p><p id="p-0099" num="0106">An edge <b>1010</b><i>a</i>-<i>c </i>has an associated cost <b>1014</b><i>a</i>-<i>b. </i>The cost <b>1014</b><i>a</i>-<i>b </i>is a value that represents the resources that will be expended if the vehicle <b>100</b> chooses that edge. A typical resource is time. For example, if one edge <b>1010</b><i>a </i>represents a physical distance that is twice that as another edge <b>1010</b><i>b, </i>then the associated cost <b>1014</b><i>a </i>of the first edge <b>1010</b><i>a </i>may be twice the associated cost <b>1014</b><i>b </i>of the second edge <b>1010</b><i>b. </i>Other factors that affect time include expected traffic, number of intersections, speed limit, etc. Another typical resource is fuel economy. Two edges <b>1010</b><i>a </i>-<i>b </i>may represent the same physical distance, but one edge <b>1010</b><i>a </i>may require more fuel than another edge <b>1010</b><i>b, </i>e.g., because of road conditions, expected weather, etc.</p><p id="p-0100" num="0107">When the planning system <b>404</b> identifies a path <b>1012</b> between the start point <b>1002</b> and end point <b>1004</b>, the planning system <b>404</b> typically chooses a path optimized for cost, e.g., the path that has the least total cost when the individual costs of the edges are added together.</p><heading id="h-0010" level="1">AV Control</heading><p id="p-0101" num="0108"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a block diagram <b>1100</b> of the inputs and outputs of a control system <b>406</b> (e.g., as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>). A control system operates in accordance with a controller <b>1102</b> which includes, for example, one or more processors (e.g., one or more computer processors such as microprocessors or microcontrollers or both) similar to processor <b>304</b>, short-term and/or long-term data storage (e.g., memory random-access memory or flash memory or both) similar to main memory <b>306</b>, ROM <b>308</b>, and storage device <b>310</b>, and instructions stored in memory that carry out operations of the controller <b>1102</b> when the instructions are executed (e.g., by the one or more processors).</p><p id="p-0102" num="0109">In an embodiment, the controller <b>1102</b> receives data representing a desired output <b>1104</b>. The desired output <b>1104</b> typically includes a velocity, e.g., a speed and a heading. The desired output <b>1104</b> can be based on, for example, data received from a planning system <b>404</b> (e.g., as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>). In accordance with the desired output <b>1104</b>, the controller <b>1102</b> produces data usable as a throttle input <b>1106</b> and a steering input <b>1108</b>. The throttle input <b>1106</b> represents the magnitude in which to engage the throttle (e.g., acceleration control) of an vehicle <b>100</b>, e.g., by engaging the steering pedal, or engaging another throttle control, to achieve the desired output <b>1104</b>. In some examples, the throttle input <b>1106</b> also includes data usable to engage the brake (e.g., deceleration control) of the vehicle <b>100</b>. The steering input <b>1108</b> represents a steering angle, e.g., the angle at which the steering control (e.g., steering wheel, steering angle actuator, or other functionality for controlling steering angle) of the AV should be positioned to achieve the desired output <b>1104</b>.</p><p id="p-0103" num="0110">In an embodiment, the controller <b>1102</b> receives feedback that is used in adjusting the inputs provided to the throttle and steering. For example, if the vehicle <b>100</b> encounters a disturbance <b>1110</b>, such as a hill, the measured speed <b>1112</b> of the vehicle <b>100</b> is lowered below the desired output speed. In an embodiment, any measured output <b>1114</b> is provided to the controller <b>1102</b> so that the necessary adjustments are performed, e.g., based on the differential <b>1113</b> between the measured speed and desired output. The measured output <b>1114</b> includes a measured position <b>1116</b>, a measured velocity <b>1118</b> (including speed and heading), a measured acceleration <b>1120</b>, and other outputs measurable by sensors of the vehicle <b>100</b>.</p><p id="p-0104" num="0111">In an embodiment, information about the disturbance <b>1110</b> is detected in advance, e.g., by a sensor such as a camera or LiDAR sensor, and provided to a predictive feedback system <b>1122</b>. The predictive feedback system <b>1122</b> then provides information to the controller <b>1102</b> that the controller <b>1102</b> can use to adjust accordingly. For example, if the sensors of the vehicle <b>100</b> detect (&#x201c;see&#x201d;) a hill, this information can be used by the controller <b>1102</b> to prepare to engage the throttle at the appropriate time to avoid significant deceleration.</p><p id="p-0105" num="0112"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a block diagram <b>1200</b> of the inputs, outputs, and components of the controller <b>1102</b>. The controller <b>1102</b> has a speed profiler <b>1202</b> which affects the operation of a throttle/brake controller <b>1204</b>. For example, the speed profiler <b>1202</b> instructs the throttle/brake controller <b>1204</b> to engage acceleration or engage deceleration using the throttle/brake <b>1206</b> depending on, e.g., feedback received by the controller <b>1102</b> and processed by the speed profiler <b>1202</b>.</p><p id="p-0106" num="0113">The controller <b>1102</b> also has a lateral tracking controller <b>1208</b> which affects the operation of a steering controller <b>1210</b>. For example, the lateral tracking controller <b>1208</b> instructs the steering controller <b>1210</b> to adjust the position of the steering angle actuator <b>1212</b> depending on, e.g., feedback received by the controller <b>1102</b> and processed by the lateral tracking controller <b>1208</b>.</p><p id="p-0107" num="0114">The controller <b>1102</b> receives several inputs used to determine how to control the throttle/brake <b>1206</b> and steering angle actuator <b>1212</b>. A planning system <b>404</b> provides information used by the controller <b>1102</b>, for example, to choose a heading when the vehicle <b>100</b> begins operation and to determine which road segment to traverse when the vehicle <b>100</b> reaches an intersection. A localization system <b>408</b> provides information to the controller <b>1102</b> describing the current location of the vehicle <b>100</b>, for example, so that the controller <b>1102</b> can determine if the vehicle <b>100</b> is at a location expected based on the manner in which the throttle/brake <b>1206</b> and steering angle actuator <b>1212</b> are being controlled. In an embodiment, the controller <b>1102</b> receives information from other inputs <b>1214</b>, e.g., information received from databases, computer networks, etc.</p><heading id="h-0011" level="1">System for Cross Modality Active Learning</heading><p id="p-0108" num="0115"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a system <b>1300</b> that enables cross modality active learning for object detection. In the system <b>1300</b>, active learning is implemented across a plurality of sensor modalities to determine data that is informative. A vehicle (e.g., vehicle <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) can record large amounts of data through a plurality of sensors (e.g., sensor <b>121</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>). However, data storage space is finite and often limited. The active learning techniques described herein reduce the data being stored to informative data, enabling a reduction in the data storage space required while providing high quality data that is utilized to improve other vehicle functionality, such as crash detection, generic object detection, sensor fault detection, and so forth. Moreover, the reduction in data storage enables the present techniques to execute using vehicle hardware as opposed to dedicated servers in a datacenter.</p><p id="p-0109" num="0116">The system <b>1300</b> (e.g., system <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) includes at least one camera <b>1302</b> (e.g., camera <b>122</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and at least one LiDAR <b>1304</b> (e.g., LiDAR <b>123</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>). The camera <b>1302</b> outputs image data <b>1306</b> in the form of an image in an image format, such as RAW, JPEG, PNG (e.g., output <b>504</b><i>c </i>of <figref idref="DRAWINGS">FIG. <b>5</b></figref>). The LiDAR <b>1304</b> outputs LiDAR data in the form of a point cloud <b>1308</b> (e.g., output <b>504</b><i>a </i>of <figref idref="DRAWINGS">FIG. <b>5</b></figref>). The at least one camera <b>1302</b> and the at least one LiDAR <b>1304</b> are components of a perception system, such as the perception system <b>402</b> (<figref idref="DRAWINGS">FIG. <b>4</b></figref>). Accordingly, the camera <b>1302</b> and the LiDAR <b>1304</b> output data that identifies objects to be classified (e.g., classified objects <b>416</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>), such as a pedestrian, bicycle, automobile, traffic sign, and the like. For ease of explanation, particular sensor modalities such as camera, LiDAR, and radar are described in accordance with the present techniques. However, the present techniques may be implemented via any sensor modality with that captures data that is analyzed for object detection.</p><p id="p-0110" num="0117">The image data <b>1306</b> generally provides accurate measurements of edges, color, and lighting, which ultimately yields accurate object classification and localization (e.g., as determined by localization system <b>408</b>) on the image plane. However, 3D localization is often inaccurate when based solely on camera data. The point cloud <b>1308</b> typically contains less semantic information when compared to image data, and instead enables highly accurate 3D localization. Point clouds are generally sparse, and the range of point clouds is typically limited to 50-100 meters (m). The present techniques leverage the strengths of a plurality of sensor modalities to enable robust object detection across sensor modalities.</p><p id="p-0111" num="0118">The system <b>1300</b> includes two object detection networks, an image semantic segmentation network (ISN) <b>1310</b> and a LiDAR semantic segmentation network (LSN) <b>1312</b>. Generally, an object detection neural network is configured to receive sensor data and process the sensor data to detect at least one object (e.g., natural obstructions <b>191</b>, vehicles <b>193</b>, pedestrians <b>192</b>, of <figref idref="DRAWINGS">FIG. <b>1</b></figref>; cyclists, and other obstacles) in the 3D space surrounding the sensor. In an embodiment, an object detection neural network is a feed-forward convolutional neural network that, given the outputs <b>504</b><i>a</i>-<i>d </i>(e.g., sensor data), generates a set of bounding boxes for potential objects in the 3D space and confidence scores for the presence of object class instances (e.g., cars, pedestrians, or bikes) within the bounding boxes. The higher the classification score, the more likely the corresponding object class instance is present in a box. An example object detection neural network is described in detail in W. Liu, D. Anguelov, D. Erhan, C. Szegedy, S. Reed, C. Y. Fu, and A. C. Berg. SSD: Single Shot Multibox Detector. Springer, 201, available at https://arxiv.org/pdf/1512.02325.pdf.</p><p id="p-0112" num="0119">The ISN <b>1310</b> takes as input image data <b>1306</b> and outputs a set of predicted 3D bounding boxes <b>1314</b> for potential objects in the 3D space and corresponding confidence scores for the presence of object class instances within the bounding boxes. The 3D bounding boxes include information about the dimension, orientation and location of a 3D bounding box for the object in a format that can be projected a same data representation as described below. In particular, the ISN <b>1310</b> takes as input a set of images, predicts the class of each pixel in the images and outputs semantic segmentation data (e.g., a confidence score) for each pixel in the image. The ISN <b>1310</b> is trained using an image dataset that includes images where each image is augmented with bounding boxes and segmentation labels for classes in the image dataset. An example confidence score is a probability value that indicates the probability that the class of the pixel was correctly predicted.</p><p id="p-0113" num="0120">Similarly, the LSN <b>1312</b> takes as input at least one point cloud <b>1308</b> and outputs a set of predicted 3D bounding boxes <b>1316</b> for potential objects in the 3D space and confidence scores for the presence of object class instances within the bounding boxes. In an example, the LSN receives a plurality of data points that represent the 3D space. For example, each data point of the plurality of data points is a set of 3D spatial coordinates (e.g., x, y, z coordinates). The data is encoded into pillars and outputs a pseudo image, as described in &#x201c;PointPillars: Fast Encoders for Object Detection from Point Clouds,&#x201d; arXiv:1812.05784v2 [cs.LG] 7 May 2019. Generally, a pillar encoder takes as input one or more point clouds and estimates oriented 3D bounding boxes for cars, pedestrians and cyclists based on the point clouds. Similar to the ISN <b>1310</b>, the predicted 3D bounding boxes <b>1316</b> output by the LSN include information about the dimension, orientation and location of a 3D bounding box for the object in a format that can be projected a same data representation as described below. The predicted 3D set of bounding boxes also include confidence scores for the presence of object class instances within the bounding boxes.</p><p id="p-0114" num="0121">Post-processing is applied to project the predicted 3D boxes <b>1314</b> and <b>1316</b> onto a same representation. In the system <b>1300</b>, image data based predicted 3D bounding boxes <b>1314</b> are transmitted to post processing <b>1318</b>. The point cloud based predicted 3D bounding boxes <b>1316</b> are transmitted to post processing <b>1320</b>. As used herein, a representation is a transformation applied to the predicted 3D bounding boxes. The transformation results in an interpretation of the scene in a same format when applied to predicted 3D bounding boxes obtained from a plurality of object detection networks. In an embodiment, a representation is based, at least in part, on a camera angle. In an embodiment, a representation is a probability distribution applied to confidence scores associated with the predicted bounding boxes. For example, a representation can be a front view representation, a bird's-eye view representation, or a heatmap representation. Although particular representations are described, the present techniques are not limited to a single representation for the projections of the predicted 3D bounding boxes. Rather, the present techniques transform the predicted 3D bounding boxes to a same data representation that enables the comparison of a plurality of object detection networks.</p><p id="p-0115" num="0122">In an example, the predicted 3D bounding boxes are projected into a front view representation. A front view representation is view of the bounding boxes projected onto the image plane. <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> is a front view representation <b>1400</b>A of an environment <b>1402</b>A. As illustrated, the front view representation <b>1400</b>A includes a plurality of projected bounding boxes <b>1404</b>A. The bounding boxes <b>1404</b>A are predicted 3D bounding boxes from an object detection network projected onto the front view representation <b>1400</b>A. In the front view representation, the bounding boxes <b>1404</b>A are aligned along the x-axis of the coordinates <b>1406</b>A. Put another way, the bounding boxes do not rotate along the x-axis and have edges that are parallel in the y-z plane.</p><p id="p-0116" num="0123">In an example, the predicted 3D bounding boxes are projected into a bird's-eye view representation. Generally, a bird's-eye view representation is a rendering of the environment projected onto the ground plane. A bird's-eye view eliminates occlusions between detected objects and enables semantically and geometrically consistent relationships between the vehicle and obstacles. <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> is a bird's-eye view representation <b>1400</b>B of an environment <b>1402</b>B. As illustrated, the birds' eye view representation <b>1400</b>B includes a plurality of bounding boxes <b>1404</b>B. The bounding boxes <b>1404</b>B are predicted 3D bounding boxes from an object detection network projected onto the bird's-eye view representation <b>1400</b>B. In the bird's-eye view representation, the bounding boxes <b>1404</b>B are not aligned along the z-axis of the coordinates <b>1406</b>B. Put another way, the bounding boxes rotate along the z-axis and do not have edges that are parallel in the x-y plane. The projected bounding boxes <b>1404</b>B are non-axis aligned.</p><p id="p-0117" num="0124">In an example, a heatmap representation is generated. The heatmap representation is generated by transforming a bird's eye view representation based on confidence scores. Generally, the heatmap represents a magnitude as a color in two dimensions. The magnitudes are inserted into a matrix with one or more fixed cells. The columns and rows of the heatmap are discrete phenomena and categories. <figref idref="DRAWINGS">FIG. <b>14</b>C</figref> is a heatmap <b>1400</b>C of the environment as a grid <b>1402</b>C. The discrete phenomena and categories represented on the grid <b>1402</b>C are the classifications of objects detected in the bird's-eye view representation along with confidence scores. In the example of <figref idref="DRAWINGS">FIG. <b>14</b>C</figref>, each cell represents confidence scores of one or more projected bounding boxes (e.g., bounding boxes <b>1404</b>B of <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>) in a bird's-eye view. In an example, the areas for the background without a bounding box are assigned a confidence score of 1.0. Cells of the grid <b>1402</b>C are differentiated based on the confidence scores the associated projected bounding boxes.</p><p id="p-0118" num="0125">Referring again to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the predicted 3D bounding boxes <b>1314</b> and <b>1316</b> output by the ISN <b>1310</b> and the LSN <b>1312</b>, respectively, overlap when projected onto a same representation (e.g., overlap in the projected bounding boxes <b>1404</b>A and <b>1404</b>B of <figref idref="DRAWINGS">FIGS. <b>14</b>A and <b>14</b>B</figref>, respectively). Accordingly, post processing <b>1318</b> and post processing <b>1320</b> apply non-maximum suppression to filter redundant projected bounding boxes that belong to the same object. Filtering the redundant projected bounding boxes removes the bounding boxes from a list of proposed bounding boxes. Non-maximum suppression varies according to the selected same representation. As illustrated in <figref idref="DRAWINGS">FIGS. <b>14</b>A, <b>14</b>B, and <b>14</b>C</figref>, the same representation can be front view representation, a bird's-eye view representation, or a heatmap representation. Generally, during object detection confidence scores are created for each bounding box, resulting in many high-scores that are close to one another, thereby generating a large number of predicted 3D bounding boxes that ultimately creates a large number of projected bounding boxes with associated confidence scores in the same representation. Non-maximum suppression suppresses scores that are not the maximum within a local range.</p><p id="p-0119" num="0126">In an embodiment, post-processing <b>1318</b> and <b>1320</b> include filtering via non-maximum suppression where the intersection over union (IoU) is found for each set of overlapped boxes. The IoU is a ratio between the intersection and union of the projected bounding boxes and a bounding box with a highest confidence score. In an example, a front view representation includes a projected bounding box with a highest confidence score (e.g., box A). Bounding box A is selected and removed from a list of projected bounding boxes (e.g., list of B), and added to a final list of projected bounding boxes (e.g., list of F). The projected list of F is initially empty. Projected bounding box A with the highest confidence score is compared with all remaining projected bounding boxes in the list of B to determine the IoU between the box A and the list of B. If the IoU between A and each B is greater than an IoU threshold, the projected bounding box B is removed from the list of B. The IoU is a predetermined threshold that can tune the strength of the final predicted bounding boxes. The process is iteratively performed until no projected bounding boxes remain in the list of B. In particular, the projected bounding box with the next highest confidence (e.g., next box A) is again selected from the remaining projected bounding boxes (e.g., remaining list of B) and added to the final list of projected bounding boxes F. The IoU of the next box A with the remaining list of B is found, and again the boxes which have an IOU higher than the IoU threshold are removed. This process is repeated until there are no more proposals left in in the remaining list of proposed bounding boxes B. Accordingly, the redundant projected bounding boxes are removed.</p><p id="p-0120" num="0127">In an embodiment, post-processing <b>1318</b> and <b>1320</b> includes filtering via non-maximum suppression where the IoU calculation is modified due to non-axis aligned bounding boxes (e.g., bounding boxes <b>1404</b>B of <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>). In the bird's-eye view representation, projected bounding boxes can be non-axis aligned due to rotations along a z-axis. Non-maximum suppression as applied to the predicted 3D bounding boxes projected to a bird's eye view is modified to account for the rotations that occur.</p><p id="p-0121" num="0128">For example, the modification determines an IoU for convex polygons to account for rotations between the projected bounding boxes. In the modified IoU determination, the proposal with the highest confidence (e.g., box A) is iteratively selected from a list of projected bounding boxes (e.g., list of B) added to the final list of projections (e.g., list F). The IoU of box A with all the proposals in the list of B is found, and again the boxes which have an IoU higher than the IoU threshold are removed. This process is repeated until there are no more proposals left in in the list of projected bounding boxes (B). When determining the IoU between the box A and the bounding boxes in the list of B, all corners of box A that are contained in box B are found. All corners of box B that are contained in box A are found. Intersection points between box A and box B are found, and all points are sorted in a clockwise manner using arctan2.</p><p id="p-0122" num="0129">In an embodiment, post processing <b>1318</b> and post processing <b>1320</b> enable post-processing for a heatmap representation. If more than one box is assigned to the same cell of the heatmap, the box with the highest confidence score is selected as the final bounding box associated with that cell. In this manner, the projected bounding boxes that do not satisfy a threshold for the highest confidence score are removed.</p><p id="p-0123" num="0130">Generally, the post processing <b>1318</b> and post processing <b>1320</b> are configurable based on the same representation used for projection. The output of post processing <b>1318</b> and post processing <b>1320</b> is a final set of predicted bounding boxes projected onto a same representation and filtered to select the best projected bounding boxes for each sensor modality. The projected bounding boxes are associated with confidence scores that indicate the presence of object class instances within the bounding boxes. The object class instances are used to label the projected bounding box with a particular class. The output of post processing <b>1318</b> and post processing <b>1320</b> is used for an inconsistency computation <b>1322</b>. During the inconsistency computation <b>1322</b>, predictions of the ISN <b>1310</b> and LSN <b>1312</b> are compared. The comparison is error based or uncertainty based. In an embodiment, the inconsistencies derived from error-based or uncertainty based calculations are weighted in accordance with the known strengths and weaknesses of the respective modality.</p><p id="p-0124" num="0131">In an embodiment, the output of the inconsistency computation <b>1322</b> is an active learning score that estimates the inconsistency between sensor modalities. The projected bounding boxes that are inconsistent across modalities are used to determine if the scene is informative. As used herein, a scene refers to a portion of the environment or the entire environment. In an embodiment, the scene refers to a portion of the environment or the entire environment at a particular time instance. Generally, an inconsistency refers to a disagreement in corresponding information between a first sensor modality and a second sensor modality.</p><p id="p-0125" num="0132">The active learning score is used to rank the bounding boxes and the N most informative bounding boxes are selected as informative samples and designated as such within the scene. In some examples, the scene is determined to be an informative scene when the scene includes at least one active learning score that indicates inconsistencies between a same representation across sensor modalities. In an embodiment, a scene is informative when the inconsistencies occur for a portion of the scene above a predetermined threshold. For example, if a number of the calculated inconsistencies is greater than a predetermined threshold, a scene may be labeled as informative and used for training the object detection neural networks. If errors or uncertainties are discovered in more than 25% of the projected bounding boxes, a scene may be labeled as informative. If errors or uncertainties are discovered in projected bounding boxes within a predetermined distance of the vehicle, a scene is labeled as informative. For example, the scene is determined to be an informative scene when a location associated with the calculated inconsistency is within a predetermined distance of the vehicle. An informative scene provides additional or supplemental labeled data from which the object detection network can learn. Additionally, an informative scene provides additional or supplemental labeled data for which an object detection network is known to suffer due to inherent limitations.</p><p id="p-0126" num="0133">Error-based inconsistency computations are expressed as:</p><p id="p-0127" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>E</i>(ISN(<i>S</i><sub>i</sub>), LSN(<i>S</i><sub>l</sub>)&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0128" num="0134">where E is the function to compute the error between the ISN <b>1310</b> and the LSN <b>1312</b>, and S<sub>i </sub>and S<sub>l </sub>are a set of a first set of projected bounding boxes and a second set of projected bounding boxes. In embodiments, the function E is any one or more statistical classifications. Generally, the predictions of the object detection network for a plurality of modalities are compared. The predictions of an object detection network are the predicted 3D bounding boxes that have been projected to a same representation and post-processed. With respect to the inconsistency computation <b>1322</b>, the predicted 3D bounding boxes that have been projected to a same representation and post-processed are referred to generally as predictions.</p><p id="p-0129" num="0135">In an error-based inconsistency computation, the predictions of a first object detection network of a sensor modality are labeled as a pseudo-ground truth while the predictions of the remaining object detection network are labeled as predictions. The errors between the pseudo-ground truth and the predictions of the remaining object detection networks are determined. For example, the predictions of the ISN and the LSN are compared, and either the ISN predictions or the LSN predictions are labeled as the pseudo-ground truth, and a number of error types are counted.</p><p id="p-0130" num="0136">The bounding boxes are weighted when computing the error. In embodiments, a bounding box has a higher weight when the bounding box is closer to the vehicle. This gives higher importance to potentially informative scenes when the inconsistent areas occur closer to the vehicle when compared to inconsistent areas that are farther away from the ego vehicle. An exemplary linear weighting function is provided below:</p><p id="p-0131" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mi>weight</mi>     <mo>=</mo>     <mrow>      <mi>max</mi>      <mo>&#x2061;</mo>      <mo>(</mo>      <mrow>       <mrow>        <mn>0</mn>        <semantics definitionURL="">         <mo>,</mo>         <annotation encoding="Mathematica">TagBox[",", "NumberComma", Rule[SyntaxForm, "0"]]</annotation>        </semantics>        <mn>1</mn>       </mrow>       <mo>-</mo>       <mfrac>        <mi>distance</mi>        <mrow>         <mn>100</mn>         <mo>*</mo>         <mn>2</mn>        </mrow>       </mfrac>      </mrow>      <mo>)</mo>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>2</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0132" num="0137">In Equation (2), the distance is computed between the center of a bounding box and a position of the vehicle in a bird's-eye view representation. In an embodiment, no weighting function is applied, and the weight is assigned a value of one for every prediction.</p><p id="p-0133" num="0138">Machine learning statistical measures are implemented to determine error based uncertainties. Machine learning statistical measures include, but are not limited to, false positive false negative (FP+FN), precision, recall, and F1 score, or any combinations thereof. Generally, the machine learning statistical measures are based on a ground truth compared with a prediction. In evaluating the machine learning statistical measures, a false positive (FP) is an error that indicates a condition exists when it actually does not exist. A false negative (FN) is an error that incorrectly indicates that a condition does not exist. A true positive is a correctly indicated positive condition, and a true negative is a correctly indicated negative condition. Accordingly, for a FP+FN statistical measure, a false positive is a prediction that does not have a sufficiently high IOU with any ground truth box. When a confidence score of a detection that is to detect a ground-truth is lower than a predetermined threshold, a false negative occurs. The number of FP+FN errors are counted between the pseudo-ground truth modality predictions and other modality predictions.</p><p id="p-0134" num="0139">Generally, the precision is the number of true positives divided by the sum of true positives and false positives. Subtracting the precision from one results in an active learning score where the higher the precision, the lower the resulting inconsistency. A lower inconsistency computation indicates that the associated projections are consistent. Similarly, the recall is the number of true positives divided by the sum of true positives and false positives. Subtracting the recall from one results in an active learning score where the higher the recall, the lower the inconsistency computation. An F1 score is a balanced F-score and is the harmonic mean of precision and recall. In an embodiment, the F1 score is a measure of accuracy. Accuracy is the probability that a randomly chosen instance (positive or negative, relevant or irrelevant) will be correct. Similar to the precision and recall statistical measures, subtracting the F1 score from one results in an active learning score where the higher the F1 score, the lower the inconsistency computation. A lower inconsistency computation indicates the associated projections are consistent across modalities. In an example, a predetermined threshold is applied to the active learning score. In an example, if the score is above 0.5, the associated projections are determined to be inconsistent. To account for relationships across the full range of the confidence scores, an uncertainty based inconsistency computation is applied. Generally, the uncertainty based inconsistency computation computes a cross-modal inconsistency with probability distributions of each true positive pair from each object detection network. The uncertainty based inconsistency computations can be further divided two sub-groups: bounding box and heatmap.</p><p id="p-0135" num="0140">In an example, a first uncertainty based inconsistency computation computes a JS-divergence between each true positive pair. The Jensen-Shannon (JS) divergence measures the similarity between two probability distributions, such as those associated with bounding boxes. The JS-divergence is symmetric and always has a finite value. In embodiments, a maximum value is assigned to each false positive and false negative. In an example, the maximum value is 1.0.</p><p id="p-0136" num="0141">Alternatively, when the predicted 3D bounding boxes are mapped to a heatmap representation (probability map) an active learning score is computed using mutual information (MI). Generally, mutual information is a measure of the mutual dependence between two variables. In an embodiment, the two variables are two heatmaps. Mutual information quantifies the amount of information obtained about one random variable through observing the other random variable. The probabilities from two heatmaps in a class are averaged. In particular, mutual information for each cell by is computed by the following equation:</p><p id="p-0137" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>p</i>(<i>i</i>)=&#xbd;(<i>h</i><sub>ISN</sub>(<i>i</i>)+<i>h</i><sub>LSN</sub>(<i>i</i>))&#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0138" num="0142">Mutual information is computed for each cell as follows:</p><p id="p-0139" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MI(<i>i</i>)=<i>H</i>(<i>p</i>(<i>i</i>))&#x2212;&#xbd;(<i>H</i>(<i>h</i><sub>ISN</sub>(<i>i</i>))+<i>H</i>(<i>h</i><sub>LSN</sub>(<i>i</i>)))&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0140" num="0143">where H represents an entropy function. Lastly, the final mutual information of a heatmap is calculated as:</p><p id="p-0141" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MI=&#x3a3;<sub>i&#x2212;1</sub><sup>l</sup>MI(<i>i</i>)&#x2003;&#x2003;(5)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0142" num="0144">where I represents the total number of cells in a heatmap.</p><p id="p-0143" num="0145">The block diagram of <figref idref="DRAWINGS">FIG. <b>13</b></figref> is not intended to indicate that the active learning as described herein is to include all of the components shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>. Rather, the cross-modality active learning can include fewer or additional components not illustrated in <figref idref="DRAWINGS">FIG. <b>13</b></figref> (e.g., additional modalities, detection networks, post-processing, inconsistency computations, etc.). The active learning may include any number of additional components not shown, depending on the details of the specific implementation. Furthermore, any of the ISN, LSN, post processing, inconsistency computations, and other described functionalities may be partially, or entirely, implemented in hardware and/or in a processor. For example, the functionality may be implemented with an application specific integrated circuit, in logic implemented in a processor, in logic implemented in a specialized graphics processing unit, or in any other device.</p><p id="p-0144" num="0146">The block diagrams of <figref idref="DRAWINGS">FIGS. <b>14</b>A, <b>14</b>B, and <b>14</b>C</figref> are not intended to indicate that the representations as described herein is to include all of the components shown in <figref idref="DRAWINGS">FIGS. <b>14</b>A, <b>14</b>B</figref>, and <b>14</b>C. Rather, the representations can include fewer or additional components not illustrated in <figref idref="DRAWINGS">FIGS. <b>14</b>A, <b>14</b>B, and <b>14</b>C</figref> (e.g., objects, object classes, bounding boxes, etc.). The representations include any number of additional components not shown, depending on the details of the specific implementation. Furthermore, any of the described functionalities may be partially, or entirely, implemented in hardware and/or in a processor. For example, the functionality may be implemented with an application specific integrated circuit, in logic implemented in a processor, in logic implemented in a specialized graphics processing unit, or in any other device.</p><heading id="h-0012" level="1">Process for Cross Modality Active Learning</heading><p id="p-0145" num="0147"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a process flow diagram of a process <b>1500</b> for cross-modality active learning for object detection. At block <b>1502</b>, a first set of predicted bounding boxes and a second set of predicted bounding boxes are obtained. The predicted bounding boxes are generated by a respective sensor (e.g., sensors <b>121</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) that is communicatively coupled with an object detection neural network (e.g., ISN <b>1310</b>, LSN <b>1312</b>). Accordingly, a first sensor (e.g., camera <b>1302</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>) is communicatively coupled with a first object detection neural network (e.g., ISN <b>1310</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>) that generates a first set of predicted bounding boxes (e.g., predicted 3D boxes <b>1314</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>). Additionally, a second sensor (e.g., LiDARs <b>1304</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>) is communicatively coupled with a second object detection neural network (e.g., LSN <b>1312</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>) that generates a second set of predicted bounding boxes (e.g., predicted 3D boxes <b>1316</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>). Each respective bounding box of the first set of predicted bounding boxes and the second set of predicted bounding boxes is assigned a confidence score indicating the presence of an object class instance within the respective predicted bounding box.</p><p id="p-0146" num="0148">At block <b>1504</b>, the first set of predicted bounding boxes and the second set of predicted bounding boxes are projected into a same representation (e.g., front view representation <b>1400</b>A of <figref idref="DRAWINGS">FIG. <b>14</b>A</figref>, bird's-eye view representation <b>1400</b>B of <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, or a heatmap representation <b>1400</b>C of <figref idref="DRAWINGS">FIG. <b>14</b>C</figref>). The projection of the predicted bounding boxes onto a same representation is performed during post-processing (e.g., post-processing <b>1318</b> and post-processing <b>1320</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0147" num="0149">At block <b>1506</b>, the projections are filtered, wherein predicted bounding boxes satisfy a maximum confidence score are selected for inconsistency calculations. In an embodiment, the filtering is non-maximum suppression that is adapted based on a type of the same representation. Put another way, the form of non-maximum suppression can change based on the same representation to which the bounding boxes are projected. For example, for a front view representation, filtering via non-maximum suppression includes determining an intersection of union between each set of overlapped bounding boxes, and a bounding box with a maximum confidence score is selected as a final score. In another example, filtering via non-maximum suppression for a bird's-eye view includes determining an intersection of union between each set of overlapped bounding boxes, where the IoU calculation is modified to determine the intersection of convex polygons to account for rotations between the predicted boxes when projected to a bird's-eye view representation. A bounding box with a maximum confidence score is selected as a final score. In another example, filtering via non-maximum suppression is applied to a heatmap representation. For example, when more than one predicted bounding box is assigned to the same cell of the heatmap, the box with the highest confidence score is selected as the final bounding box associated with that cell.</p><p id="p-0148" num="0150">At block <b>1508</b>, inconsistencies are calculated across the filtered, projected bounding boxes based on filtering the projections. The inconsistency computations (e.g., <b>1322</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>) are error-based, uncertainty-based, or any combinations thereof. The inconsistencies are used to derive an active learning score. At block <b>1510</b>, an extracted scene is an informative scene based on the calculated inconsistencies. For example, a scene is informative when the scene includes at least one active learning score that indicates inconsistencies between a same representation across sensor modalities. In an embodiment, a scene is informative when the inconsistencies occur for a portion of the scene above a predetermined threshold. For example, if errors or uncertainties are discovered in more than 25% of the projected bounding boxes, a scene may be labeled as informative. If errors or uncertainties are discovered in projected bounding boxes within a predetermined distance of the vehicle, a scene may be labeled as informative. By determining if the scene is informative, only meaningful data is stored, thereby preventing the need to store all recorded data. As a result, the present techniques are operable within a limited storage space. Due to the reduction in storage space, the present techniques are executed on the vehicle.</p><p id="p-0149" num="0151">Annotated scenes are used in machine learning to train models and increase awareness of various environments. Annotations are often done by human operators, which is costly and is subject to human biases and error. Generally, the more exposure machine learning models have to labeled data sets, the more robust and complete the models become. The present techniques reduce an annotation budget by selecting and annotating interesting data based on model understanding. In embodiments, the present techniques mine raw data from logs by given a set of images and point clouds instead of a single input modality.</p><p id="p-0150" num="0152">The ability to automatically filter meaningless data creates a more efficient system with adequate storage ability, as all data is not required to be stored. Each object detection network uses active learning to select the data used to learn, enabling the core machine learning algorithms of the object detection network to reach high levels of accuracy.</p><p id="p-0151" num="0153">The process flow diagram of <figref idref="DRAWINGS">FIG. <b>15</b></figref> is not intended to indicate that the blocks of the example process <b>1500</b> are to be executed in any order, or that all of the blocks are to be included in every case. Further, any number of additional blocks not shown may be included within the example process <b>1500</b>, depending on the details of the specific implementation.</p><p id="p-0152" num="0154">In the foregoing description, embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The description and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention, and what is intended by the applicants to be the scope of the invention, is the literal and equivalent scope of the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. In addition, when we use the term &#x201c;further comprising,&#x201d; in the foregoing description or following claims, what follows this phrase can be an additional step or entity, or a sub-step/sub-entity of a previously-recited step or entity.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230005173A1-20230105-M00001.NB"><img id="EMI-M00001" he="5.67mm" wi="76.20mm" file="US20230005173A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>generating, by a processor, a first set of predicted bounding boxes and a second set of predicted bounding boxes, wherein a respective predicted bounding box of the first set of predicted bounding boxes and the second set of predicted bounding boxes is assigned a classification score indicating a presence of an object class instance within the respective predicted bounding box;</claim-text><claim-text>projecting, by the processor, the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same representation;</claim-text><claim-text>filtering, by the processor, the projections wherein predicted bounding boxes satisfying a maximum confidence score are selected for inconsistency calculations;</claim-text><claim-text>calculating, by the processor, inconsistencies across the projected bounding boxes based on filtering the projections;</claim-text><claim-text>extracting, by the processor, a scene that is informative based on the calculated inconsistencies; and</claim-text><claim-text>training, by the processor, a first object detection neural network or a second object detection neural network using the informative scenes.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising extracting the informative scene when a number of the calculated inconsistencies is greater than a predetermined threshold.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising weighting the calculated inconsistencies are according to a distance of the projected bounding boxes from a vehicle.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the same representation is one of a front view representation, bird's-eye view representation, or heatmap representation.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>projecting the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same front view representation;</claim-text><claim-text>filtering the projections using non-maximum suppression to eliminate redundant projections that belong to the same object; and</claim-text><claim-text>calculating inconsistencies in the confidence scores of the filtered projection via an error based inconsistency calculation.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>projecting the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same bird's-eye view representation;</claim-text><claim-text>filtering the projections using non-maximum suppression with a modified intersection over union to eliminate redundant projections that belong to the same object; and</claim-text><claim-text>calculating inconsistencies in the confidence scores of the filtered projection via an error based inconsistency calculation.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>projecting the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same heatmap representation;</claim-text><claim-text>filtering the projections by selecting a highest confidence score of a plurality of bounding boxes assigned a cell of the heatmap representation; and</claim-text><claim-text>calculating inconsistencies in the confidence scores of the filtered projection via an error based inconsistency calculation.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>projecting the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same front view representation;</claim-text><claim-text>filtering the projections using non-maximum suppression to eliminate redundant projections that belong to the same object; and</claim-text><claim-text>calculating inconsistencies in the confidence scores of the filtered projection via an uncertainty based inconsistency calculation.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>projecting the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same bird's-eye view representation;</claim-text><claim-text>filtering the projections using non-maximum suppression with a modified intersection over union to eliminate redundant projections that belong to the same object; and</claim-text><claim-text>calculating inconsistencies in the confidence scores of the filtered projection via an uncertainty based inconsistency calculation.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising extracting the informative scene when a location associated with the calculated inconsistency is within a predetermined distance of a vehicle.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A non-transitory computer-readable storage medium comprising at least one program for execution by at least one processor of a first device, the at least one program including instructions which, when executed by the at least one processor, carry out a method comprising:<claim-text>generating a first set of predicted bounding boxes and a second set of predicted bounding boxes, wherein a respective predicted bounding box of the first set of predicted bounding boxes and the second set of predicted bounding boxes is assigned a classification score indicating a presence of an object class instance within the respective predicted bounding box;</claim-text><claim-text>projecting the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same representation;</claim-text><claim-text>filtering the projections wherein predicted bounding boxes satisfying a maximum confidence score are selected for inconsistency calculations;</claim-text><claim-text>calculating inconsistencies across the projected bounding boxes based on filtering the proj ections;</claim-text><claim-text>extracting a scene that is informative based on the calculated inconsistencies; and</claim-text><claim-text>training a first object detection neural network or a second object detection neural network using the informative scenes.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising extracting the informative scene when a number of the calculated inconsistencies is greater than a predetermined threshold.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising weighting the calculated inconsistencies are according to a distance of the projected bounding boxes from a vehicle.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the same representation is one of a front view representation, bird's-eye view representation, or heatmap representation.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A vehicle, comprising:<claim-text>at least two sensors, wherein a first sensor is communicatively coupled with a first object detection neural network that generates a first set of predicted bounding boxes and a second sensor is communicatively coupled with a second object detection neural network that generates a second set of predicted bounding boxes, wherein respective predicted bounding box of the first set of predicted bounding boxes and the second set of predicted bounding boxes is assigned a classification score indicating a presence of an object class instance within the respective predicted bounding box;</claim-text><claim-text>at least one computer-readable medium storing computer-executable instructions;</claim-text><claim-text>at least one processor communicatively coupled to the at least two sensors and configured to execute the computer executable instructions, the execution carrying out operations including:<claim-text>projecting the first set of predicted bounding boxes and the second set of predicted bounding boxes into a same representation;</claim-text><claim-text>filtering the projections wherein predicted bounding boxes satisfying a maximum confidence score are selected for inconsistency calculations;</claim-text><claim-text>calculating inconsistencies across the projected bounding boxes based on filtering the projections;</claim-text><claim-text>extracting an informative scene based on the calculated inconsistencies; and</claim-text><claim-text>training the first object detection neural network or the second object detection neural network using the informative scenes.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The vehicle of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the operations further comprise that the informative scene is extracted when a number of the calculated inconsistencies is greater than a predetermined threshold.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The vehicle of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the same representation is one of a front view representation, bird's-eye view representation, or heatmap representation.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The vehicle of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the first object detection neural network is an image semantic segmentation network and the second object detection network is a LiDAR semantic segmentation network.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The vehicle of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the first sensor is an image sensor and the second sensor is a LiDAR.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The vehicle of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the operations further comprising weighting the calculated inconsistencies are according to a distance of the projected bounding boxes from the vehicle.</claim-text></claim></claims></us-patent-application>