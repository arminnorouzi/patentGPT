<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004590A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004590</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17854337</doc-number><date>20220630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>35</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>33</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>353</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>3347</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AI-AUGMENTED AUDITING PLATFORM INCLUDING TECHNIQUES FOR AUTOMATED ADJUDICATION OF COMMERCIAL SUBSTANCE, RELATED PARTIES, AND COLLECTABILITY</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217119</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217123</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217127</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217131</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217134</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>PricewaterhouseCoopers LLP</orgname><address><city>New York</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Chung-Sheng</first-name><address><city>Scarsdale</city><state>NY</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>CHENG</last-name><first-name>Winnie</first-name><address><city>West New York</city><state>NJ</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>FLAVELL</last-name><first-name>Mark John</first-name><address><city>Madison</city><state>NJ</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>HALLMARK</last-name><first-name>Lori Marie</first-name><address><city>Xenia</city><state>OH</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>LIZOTTE</last-name><first-name>Nancy Alayne</first-name><address><city>Saline</city><state>MI</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>LEONG</last-name><first-name>Kevin Ma</first-name><address><city>Randolph</city><state>NJ</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>PricewaterhouseCoopers LLP</orgname><role>02</role><address><city>New York</city><state>NY</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods for adjudicating AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents are provided, including adjudications as to whether the documents represent underlying data that meets one or more predefined or dynamically-determined criteria. Criteria for adjudication may include commercial-substance criteria, related-party-transaction criteria, and/or collectability criteria. A system may receive a plurality of documents and generate a plurality of feature vectors by applying natural language processing techniques. The system may apply one or more classification models to the plurality of feature vectors to generate output data classifying each of the feature vectors. The system may identify, for each feature vector, a subset of closest matching prior feature vectors. Based on the classification and based on the identified subset, the system may adjudicate each feature vector with respect to commercial substance, including an adjudication classification and an adjudication confidence score.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="131.91mm" wi="158.75mm" file="US20230004590A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="215.22mm" wi="154.69mm" orientation="landscape" file="US20230004590A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="154.18mm" wi="165.78mm" file="US20230004590A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="242.40mm" wi="129.79mm" orientation="landscape" file="US20230004590A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="223.69mm" wi="158.92mm" orientation="landscape" file="US20230004590A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="59.01mm" wi="90.51mm" file="US20230004590A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="235.12mm" wi="167.39mm" orientation="landscape" file="US20230004590A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="212.77mm" wi="154.43mm" orientation="landscape" file="US20230004590A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="183.64mm" wi="136.82mm" orientation="landscape" file="US20230004590A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="226.65mm" wi="150.28mm" orientation="landscape" file="US20230004590A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="224.20mm" wi="130.22mm" orientation="landscape" file="US20230004590A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="123.95mm" wi="143.93mm" orientation="landscape" file="US20230004590A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Application No. 63/217,119 filed Jun. 30, 2021; U.S. Provisional Application No. 63/217,123 filed Jun. 30, 2021; U.S. Provisional Application No. 63/217,127 filed Jun. 30, 2021; U.S. Provisional Application No. 63/217,131 filed Jun. 30, 2021; and U.S. Provisional Application No. 63/217,134, filed Jun. 30, 2021, the entire contents of each of which are incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">This related generally to AI-augmented automated analysis of documents, and more specifically to AI-augmented automated analysis of documents for use in auditing platforms to automated adjudication of commercial substance, related parties, and collectability.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Traditional methods for processing documents to evaluate commercial-substance criteria, related-party-transaction criteria, and/or collectability criteria rely on manual evaluation by humans reviewers.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">There is a need for improved methods for AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents, including adjudications as to whether the documents represent underlying data that meets one or more predefined or dynamically-determined criteria.</p><p id="p-0006" num="0005">Systems and methods for adjudicating AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents are disclosed herein, including adjudications as to whether the documents represent underlying data that meets one or more predefined or dynamically-determined criteria. Criteria for adjudication may comprise commercial-substance criteria, related-party-transaction criteria, and/or collectability criteria.</p><p id="p-0007" num="0006">In some embodiments, a first system is provided, the first being for classifying documents, the first system comprising one or more processors configured to cause the first system to: receive a plurality of documents; generate a plurality of feature vectors by, for each of the plurality of documents, applying one or more natural language processing techniques to generate a respective feature vector representing the document; apply one or more classification models to the plurality of feature vectors to generate output data classifying each of the feature vectors into a respective one or more of a plurality of classes; identify, based on the feature vectors, a subset of a second plurality of feature vectors that most closely matches each of the respective feature vectors of the plurality of feature vectors; determine, based on the output data classifying each of the feature vectors and based on the identification of the subset of the subset, a plurality of adjudications for each of the plurality of feature vectors representing the documents, wherein each of the plurality of adjudications comprises an adjudication classification and an adjudication confidence score.</p><p id="p-0008" num="0007">In some embodiments of the first system: the one or more processors are configured to apply one or more models to each of the plurality of feature vectors to compute a respective change for one or more characteristics; and wherein the determination of the plurality of adjudications is further based on the computed respective changes for the one or more characteristics.</p><p id="p-0009" num="0008">In some embodiments of the first system, the one or more characteristics comprise one or more of the following: a risk characteristic, a timing characteristic, and an amount characteristic.</p><p id="p-0010" num="0009">In some embodiments of the first system, determining the adjudication classification comprises determining whether the document meets commercial substance criteria.</p><p id="p-0011" num="0010">In some embodiments, a first non-transitory computer-readable storage medium is provided, the first non-transitory computer-readable storage medium storing instructions for classifying documents, the instructions configured to be executed by one or more processors to cause the system to: receive a plurality of documents; generate a plurality of feature vectors by, for each of the plurality of documents, applying one or more natural language processing techniques to generate a respective feature vector representing the document; apply one or more classification models to the plurality of feature vectors to generate output data classifying each of the feature vectors into a respective one or more of a plurality of classes; identify, based on the feature vectors, a subset of a second plurality of feature vectors that most closely matches each of the respective feature vectors of the plurality of feature vectors; determine, based on the output data classifying each of the feature vectors and based on the identification of the subset of the subset, a plurality of adjudications for each of the plurality of feature vectors representing the documents, wherein each of the plurality of adjudications comprises an adjudication classification and an adjudication confidence score.</p><p id="p-0012" num="0011">In some embodiments, a first method is provided, the first method being for classifying documents, wherein the first method is executed by a system comprising one or more processors, the first method comprising: receiving a plurality of documents; generating a plurality of feature vectors by, for each of the plurality of documents, applying one or more natural language processing techniques to generate a respective feature vector representing the document; applying one or more classification models to the plurality of feature vectors to generate output data classifying each of the feature vectors into a respective one or more of a plurality of classes; identifying, based on the feature vectors, a subset of a second plurality of feature vectors that most closely matches each of the respective feature vectors of the plurality of feature vectors; determining, based on the output data classifying each of the feature vectors and based on the identification of the subset of the subset, a plurality of adjudications for each of the plurality of feature vectors representing the documents, wherein each of the plurality of adjudications comprises an adjudication classification and an adjudication confidence score.</p><p id="p-0013" num="0012">In some embodiments, a second system is provided, the second system being for identifying related parties within a plurality of databases, the second system comprising one or more processors configured to cause the second system to: receive a data set indicating a first set of parties related to an entity; generate, based on the first set of parties, a graph data structure representing a first plurality of relationships between the entity and the first set of parties; submit one or more the parties of the first set of parties as one or more input queries to obtain, from a plurality of databases, a second set of parties related to the one or more input queries; update, based on the second set of parties, the graph data structure to represent a second plurality of relationships between the entity and the second set of parties.</p><p id="p-0014" num="0013">In some embodiments of the second system, the one or more processors are configured to apply one or more deambiguation models to the second set of parties before updating the graph data structure based on the second set of parties.</p><p id="p-0015" num="0014">In some embodiments, a second non-transitory computer-readable storage medium is provided, the second non-transitory computer-readable storage medium storing instructions for identifying related parties within a plurality of databases, the instructions configured to be executed by a system comprising one or more processors configured to cause the system to: receive a data set indicating a first set of parties related to an entity; generate, based on the first set of parties, a graph data structure representing a first plurality of relationships between the entity and the first set of parties; submit one or more the parties of the first set of parties as one or more input queries to obtain, from a plurality of databases, a second set of parties related to the one or more input queries; update, based on the second set of parties, the graph data structure to represent a second plurality of relationships between the entity and the second set of parties.</p><p id="p-0016" num="0015">In some embodiments, a second method is provided, the second method being for identifying related parties within a plurality of databases, wherein the second method is executed by a system comprising one or more processors, the second method comprising: receiving a data set indicating a first set of parties related to an entity; generating, based on the first set of parties, a graph data structure representing a first plurality of relationships between the entity and the first set of parties; submitting one or more the parties of the first set of parties as one or more input queries to obtain, from a plurality of databases, a second set of parties related to the one or more input queries; updating, based on the second set of parties, the graph data structure to represent a second plurality of relationships between the entity and the second set of parties.</p><p id="p-0017" num="0016">In some embodiments, a third system is provided, the third system being for anomaly recognition and analysis, the third system comprising one or more processors configured to cause the third system to: receive input data representing a plurality of interactions between a first entity and a plurality of respective entities; apply one or more anomaly-recognition models to generate anomaly data representing a first subset of the interactions as anomalous; identify a second subset of the interactions, wherein the second subset is a subset of the first subset, wherein identification of the second subset is based on the anomaly data and based on a data structure representing a plurality of relationships between the first entity and a set of entities related to the entity.</p><p id="p-0018" num="0017">In some embodiments of the third system, the input data comprises transaction data.</p><p id="p-0019" num="0018">In some embodiments of the third system, the second subset of interactions are identified as transactions for which there is an elevated risk of related-party anomalies.</p><p id="p-0020" num="0019">In some embodiments, a third non-transitory computer-readable storage medium is provided, the third non-transitory computer-readable storage medium storing instructions for anomaly recognition and analysis, the instructions configured to be executed by a system comprising one or more processors to cause the system to: receive input data representing a plurality of interactions between a first entity and a plurality of respective entities; apply one or more anomaly-recognition models to generate anomaly data representing a first subset of the interactions as anomalous; identify a second subset of the interactions, wherein the second subset is a subset of the first subset, wherein identification of the second subset is based on the anomaly data and based on a data structure representing a plurality of relationships between the first entity and a set of entities related to the entity.</p><p id="p-0021" num="0020">In some embodiments, a third method is provided, the third method being for anomaly recognition and analysis, wherein the third method is executed by a system comprising one or more processors, the third method comprising: receiving input data representing a plurality of interactions between a first entity and a plurality of respective entities; applying one or more anomaly-recognition models to generate anomaly data representing a first subset of the interactions as anomalous; identifying a second subset of the interactions, wherein the second subset is a subset of the first subset, wherein identification of the second subset is based on the anomaly data and based on a data structure representing a plurality of relationships between the first entity and a set of entities related to the entity.</p><p id="p-0022" num="0021">In some embodiments, a fourth system is provided, the fourth system being for behavioral modeling and analysis, the fourth system comprising one or more processors configured to cause the fourth system to: receive first input data comprising a data structure representing a relationships amongst a plurality of entities; receive second input data representing behavior of one or more of the entities represented in the data structure; apply one or more behavioral models to determine, based on the first input data and the second input data, a risk of related-party anomaly represented by the second input data.</p><p id="p-0023" num="0022">In some embodiments, a fourth non-transitory computer-readable storage medium is provided, the fourth non-transitory computer-readable storage medium storing instructions for behavioral modeling and analysis, the instructions configured to be executed by a system comprising one or more processors to cause the system to: receive first input data comprising a data structure representing a relationships amongst a plurality of entities; receive second input data representing behavior of one or more of the entities represented in the data structure; apply one or more behavioral models to determine, based on the first input data and the second input data, a risk of related-party anomaly represented by the second input data.</p><p id="p-0024" num="0023">In some embodiments, a fourth method is provided, the fourth method being for behavioral modeling and analysis, wherein the fourth method is executed by a system comprising one or more processors, the fourth method comprising: receive first input data comprising a data structure representing a relationships amongst a plurality of entities; receive second input data representing behavior of one or more of the entities represented in the data structure; apply one or more behavioral models to determine, based on the first input data and the second input data, a risk of related-party anomaly represented by the second input data.</p><p id="p-0025" num="0024">In some embodiments, a fifth system is provided, the fifth system being for predicting likelihood of collection, the fifth system comprising one or more processors configured to cause the fifth system to: receive a first data set comprising endogenous information pertaining to a transaction; receive a second data set comprising exogenous information related to one or more parties to the transaction; configure a collectability uncertainty model based on the first data set and to the second data; receive a third data set comprising information regarding the transaction; and provide the information regarding the interaction to the collectability uncertainty model to generate an output indicating a likelihood of collection for the transaction.</p><p id="p-0026" num="0025">In some embodiments of the fifth system, the endogenous information comprises one or more selected from the following: payment history information of a party to the transaction; credit assessment information conducted prior to the initiation of the transaction; and payment history information of one or more parties related to a party to the transaction.</p><p id="p-0027" num="0026">In some embodiments of the fifth system, exogenous information comprises one or more selected from the following: economic behavior information of an industry related to a party to the transaction; economic behavior information of a value chain of a party to the transaction; news information related to a party, a related industry, or a related value chain to the transaction; product review information, employee sentiment information; and consumer sentiment information.</p><p id="p-0028" num="0027">In some embodiments of the fifth system, the third data set comprises information regarding a prior dispute between a plurality of entities to the transaction.</p><p id="p-0029" num="0028">In some embodiments of the fifth system, applying the collectability uncertainty model comprises: generating an initial prediction of uncertainty based on the first data set comprising the endogenous information; and applying one or more predictive models based on the second data set comprising the exogenous information.</p><p id="p-0030" num="0029">In some embodiments of the fifth system, the collectability uncertainty model is validated following the occurrence of a rare event and based on its predictions in response to the rare event.</p><p id="p-0031" num="0030">In some embodiments, a fifth non-transitory computer-readable storage medium is provided, the fifth non-transitory computer-readable storage medium storing instructions for predicting likelihood of collection, the instructions configured to be executed by a system comprising one or more processors to cause the system to: receive a first data set comprising endogenous information pertaining to a transaction; receive a second data set comprising exogenous information related to one or more parties to the transaction; configure a collectability uncertainty model based on the first data set and to the second data; receive a third data set comprising information regarding the transaction; and provide the information regarding the interaction to the collectability uncertainty model to generate an output indicating a likelihood of collection for the transaction.</p><p id="p-0032" num="0031">In some embodiments, a fifth method is provided, the fifth method being for predicting likelihood of collection, wherein the fifth method is executed by a system comprising one or more processors, the fifth method comprising: receiving a first data set comprising endogenous information pertaining to a transaction; receiving a second data set comprising exogenous information related to one or more parties to the transaction; configuring a collectability uncertainty model based on the first data set and to the second data; receiving a third data set comprising information regarding the transaction; and providing the information regarding the interaction to the collectability uncertainty model to generate an output indicating a likelihood of collection for the transaction.</p><p id="p-0033" num="0032">In some embodiments, a sixth system is provided, the sixth system being for classifying documents, the sixth system comprising one or more processors configured to cause the sixth system to: receive data representing a document; apply one or more natural language processing techniques to the received data to generate a feature vector representing the document; identify, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector; apply a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and determine, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</p><p id="p-0034" num="0033">In some embodiments, a sixth non-transitory computer-readable storage medium is provided, the sixth non-transitory computer-readable storage medium storing instructions for classifying documents, the instructions configured to be executed by one or more processors to cause the system to: receive data representing a document; apply one or more natural language processing techniques to the received data to generate a feature vector representing the document; identify, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector; apply a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and determine, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</p><p id="p-0035" num="0034">In some embodiments, a sixth method is provided, the sixth method being for classifying documents, wherein the sixth method is executed by a system comprising one or more processors, the sixth method comprising: receiving data representing a document; applying one or more natural language processing techniques to the received data to generate a feature vector representing the document; identifying, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector; applying a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and determining, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</p><p id="p-0036" num="0035">In some embodiments, a seventh system is provided, the seventh system being for identifying relationships between entities represented within one or more data sets, the seventh system comprising one or more processors configured to cause the seventh system to: receive one or more data sets representing a plurality of entities; generate, based at least in part on the one or more data sets, a graph data structure representing entities amongst the plurality of entities as nodes and representing relationships between pairs of entities as edges between corresponding pairs of nodes; receive input data indicating a pair of query entities; and determine, based at least in part on the graph data structure, whether one or more related-entity criteria are satisfied for the pair of query entities.</p><p id="p-0037" num="0036">In some embodiments, a seventh non-transitory computer-readable medium is provided, the seventh non-transitory computer-readable medium storing instructions for identifying relationships between entities represented within one or more data sets, the instructions configured to be executed by a system comprising one or more processors to cause the system to: receive one or more data sets representing a plurality of entities; generate, based at least in part on the one or more data sets, a graph data structure representing entities amongst the plurality of entities as nodes and representing relationships between pairs of entities as edges between corresponding pairs of nodes; receive input data indicating a pair of query entities; and determine, based at least in part on the graph data structure, whether one or more related-entity criteria are satisfied for the pair of query entities.</p><p id="p-0038" num="0037">In some embodiments, a seventh method is provided, the seventh method being for identifying relationships between entities represented within one or more data sets, wherein the seventh method is executed by a system comprising one or more processors, the seventh method comprising: receiving one or more data sets representing a plurality of entities; generating, based at least in part on the one or more data sets, a graph data structure representing entities amongst the plurality of entities as nodes and representing relationships between pairs of entities as edges between corresponding pairs of nodes; receiving input data indicating a pair of query entities; determining, based at least in part on the graph data structure, whether one or more related-entity criteria are satisfied for the pair of query entities</p><p id="p-0039" num="0038">In some embodiments, any one or more of the features, characteristics, or aspects of any one or more of the above systems, methods, or non-transitory computer-readable storage media may be combined, in whole or in part, with one another and/or with any one or more of the features, characteristics, or aspects (in whole or in part) of any other embodiment or disclosure herein.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading><p id="p-0040" num="0039">Various embodiments are described with reference to the accompanying figures, in which:</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> shows an exemplary architecture for a system for extracting information from documents and rendering an overall adjudication of commercial substance, in accordance with some embodiments.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> shows an exemplary architecture for a transfer-of-title classification and adjudication module and associated system components, in accordance with some embodiments.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>1</b>C</figref> shows an exemplary architecture for an obligation classification and adjudication module and associated system components, in accordance with some embodiments.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>1</b>D</figref> shows an exemplary architecture for a transaction price classification and adjudication module and associated system components, in accordance with some embodiments.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>1</b>E</figref> shows an exemplary feature vector data structure for use in representing information extracted from documents and in adjudicating commercial substance, in accordance with some embodiments.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>1</b>F</figref> shows an exemplary architecture for a risk/timing/amount adjudication module and associated system components, in accordance with some embodiments.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>1</b>G</figref> shows an exemplary architecture for an overall adjudication module and associated system components, in accordance with some embodiments.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an exemplary method for generating a plurality of graph data structures representing relationships amongst entities.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> shows an exemplary logical architecture for a rendering an adjudication of collectability, in accordance with some embodiments.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> shows an exemplary method for applying a plurality of models to adjudicate collectability based on customer data and a plurality of data sources.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a computer, in accordance with some embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0052" num="0051">There is a need for improved methods for AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents, including adjudications as to whether the documents represent underlying data that meets one or more predefined or dynamically-determined criteria. In some embodiments, a set of documents (and/or other data) may be automatically ingested and evaluated to adjudicate whether the documents/data represent an arrangement or contract that meets criteria for commercial substance. In some embodiments, a set of documents (and/or other data) may be automatically ingested and evaluated to adjudicate whether the documents/data represent related parties, a transaction between related parties, and/or a transaction that complies with criteria/requirements regarding transactions between related parties. In some embodiments, a set of documents (and/or other data) may be automatically ingested and evaluated to adjudicate whether the documents/data represent a transaction and/or a party that satisfy collectability criteria, including by adjudicating a likelihood of collectability.</p><p id="p-0053" num="0052">Commercial Substance</p><p id="p-0054" num="0053">As explained above, there is a need for improved methods for AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents, including adjudications as to whether the documents represent transaction, agreement, contract, arrangement, or other interaction of commercial substance.</p><p id="p-0055" num="0054">Improved systems meeting these needs may have application in various use cases, including in quickly and accurately assessing compliance with revenue recognition standards (e.g., IFRS 15/ASC 606) under which one or more of the of the criteria requires that an agreement (e.g., contract, transaction, etc.) has commercial substance. A transaction, agreement, contract, arrangement, or other interaction may be said to have commercial substance when it is expected that future cash flows of an entity (e.g., a business) will change as a result of the interaction. A change in cash flows may be deemed to be present when there is a change (e.g., a change that is significant enough to meet one or more criteria) in any one or more of the following (not including tax considerations):<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0055">Risk: Such as experiencing an increase in the risk that inbound cash flows will not occur as the result of a transaction; for example, a business accepts junior secured status on a debt in exchange for a larger repayment amount.</li>        <li id="ul0002-0002" num="0056">Timing: Such as a change in the timing of cash inflows received as the result of a transaction; for example, a business agrees to a delayed payment in exchange for a larger amount.</li>        <li id="ul0002-0003" num="0057">Amount: Such as a change in the amount paid as the result of a transaction; for example, a business receives cash sooner in exchange for receiving a smaller amount.</li>    </ul>    </li></ul></p><p id="p-0056" num="0058">If monetary gains exist due to exchange transactions, the transaction may be said to have commercial substance, and if there is no change in monetary gains, the transaction may be said not to have commercial substance. In some embodiments, if commercial substance exists in a transaction, then the transaction is recorded at the fair value of an asset; while, if commercial substance does not exist in the transaction, then the transaction is recorded at a book value of the asset.</p><p id="p-0057" num="0059">One example of a transaction with no commercial substance is a sale of assets to the owner of a sole proprietorship, who immediately leases it back to the business. There is little distinction between a proprietorship and its owner, so it is likely that no real change of ownership occurred. Another example of a transaction with no commercial substance is the swapping of bandwidth capacity between different Internet and phone service providers. By doing so, both entities recognize revenue, when in fact no real revenue generation occurs that would result in a change in profits.</p><p id="p-0058" num="0060">Traditional methods for evaluation of commercial substance rely on human evaluation, which is introduces inaccuracy due to human error, inefficiencies, and the possibility of human-introduced biases. Furthermore, human adjudication according to known methods provides insufficient granularity (e.g., at the transaction level) and is difficult or impossible to scale (e.g., for full population testing). Thus, there is a need for systems and methods for performing automated adjudication of commercial substance based on processed documents or other data, so as to improve efficiency and accuracy and reduce human-introduced biases.</p><p id="p-0059" num="0061">Disclosed herein are systems configured for AI-augmented adjudication of commercial substance of an interaction (e.g., an arrangement, agreement, contract, transaction, or other underlying data) represented by one or more ingested documents (or other data). As explained herein, the systems disclosed herein may apply a plurality of AI techniques&#x2014;including, for example, developing feature vectors, clustering, classification, and adjudication&#x2014;to enable automated determination of whether one or more commercial substance criteria are satisfied. The systems disclosed herein may perform one or more automated assessments of risk, timing, and/or amount of cash flow evidenced by the documents being analyzed in order to make a determination as to whether the documents represent an interaction of commercial substance.</p><p id="p-0060" num="0062">As explained herein, adjudication of commercial substance by the systems disclosed herein may comprise using a feature vector to represent an interaction (e.g., a contract or transaction), wherein the feature vector may be used for clustering, classification, similarity search, and/or adjudication. As further explained herein, resulting data from multiple approaches may be integrated in order to generate an overall adjudication of commercial substance.</p><p id="p-0061" num="0063">In some embodiments, a system for automated adjudication of commercial substance is provided. The system may be configured to receive one or more documents (e.g., PDF documents, word processing documents, JPG documents, etc.) or other data and to automatically process the received documents in order to extract information from said documents. The extracted information may be assessed to determine whether the information represents one or more interactions, such as a contract or a transaction. The system may then evaluate the extracted information regarding those one or more interactions to determine whether the one or more interactions meet predefined (or dynamically determined) commercial substance criteria.</p><p id="p-0062" num="0064">In some embodiments, determining whether commercial substance criteria are met may be performed, at least in part, by generating and evaluating one or more feature vectors. The system may be configured to automatically generate a feature vector (which may be referred to as a &#x201c;case vector&#x201d;) that represents an identified interaction (e.g., an identified contract, transaction, or the like) in the received documents.</p><p id="p-0063" num="0065">Generating the feature vector may comprise perform structural, semantic, and/or linguistic analysis of the ingested documents (e.g., contract, purchase order, etc.) using Natural Language Processing (NLP) techniques. The analysis using NLP techniques may generate an output indicating a respective scope for each of one or more sections of a document being assessed; analysis using NLP techniques may generate an output indicating a respective topic for each of one or more sections of a document being assessed.</p><p id="p-0064" num="0066">In some embodiments, the feature vector may be configured to represent content, scope, party identity, timing, amounts, locations, terms, or the like, as extracted from one or more documents. In some embodiments, the feature vector may be configured to represent the &#x201c;what,&#x201d; &#x201c;when,&#x201d; and &#x201c;how&#x201d; of a contract, transaction, or the like. In some embodiments, one or more fields in a feature vector may represent (or may be associated with) a confidence value indicating a level of confidence for the feature vector field. In some embodiments, a feature vector may represent information indicating an obligation for one party to the other party in a contract. In some embodiments, a feature vector may represent information indicating consideration in a contract. In some embodiments, a feature vector may represent information indicating whether consideration comprises in-kind exchanges. In some embodiments, a feature vector may represent information indicating when an obligation and consideration will be fulfilled (e.g., a point in time, a window of time, and/or a schedule of various points/windows of time). In some embodiments, a feature vector may represent information indicating how consideration will be provided from one side to the other side in a contract. In some embodiments, a feature vector for represent information indicating entity names or identities of parties to the interaction. In some embodiments, a feature vector for represent information indicating duration (e.g., duration of an agreement or contract).</p><p id="p-0065" num="0067">In some embodiments, the system may generate or augment feature vector based in part on contextual data and/or metadata that is available to the system via one or more sources separate from the document or documents being analyzed. For example, the system may leverage metadata from a financial system and/or data from a contract management system to generate and/or augment a feature vector.</p><p id="p-0066" num="0068">In some embodiments, the system may generate a feature vector using feature engineering comprising one or more of the following:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0069">entity name of one or more parties to an interaction, potentially normalized with respect to data set of entity names</li>        <li id="ul0004-0002" num="0070">duration of an agreement</li>        <li id="ul0004-0003" num="0071">characteristics of transfer of title, obligations, transaction pricing, considerations, and/or whether it is an exchange</li>        <li id="ul0004-0004" num="0072">payment terms</li>        <li id="ul0004-0005" num="0073">shipping terms</li>        <li id="ul0004-0006" num="0074">additional data (e.g., metadata) from one or more other data sources (e.g., from a financial system and/or contract management system), such as valuation information (e.g., initial value, depreciation, fair value)</li>    </ul>    </li></ul></p><p id="p-0067" num="0075">In some embodiments, the system may generate a feature vector using document embedding (see Dai, A. M., Olah, C. and Le, Q. V., 2015. Document embedding with paragraph vectors. arXiv preprint arXiv:1507.07998) and/or autoencoder (see, e.g., Li, J., Luong, M. T. and Jurafsky, D., 2015. A hierarchical neural autoencoder for paragraphs and documents. arXiv preprint arXiv:1506.01057).</p><p id="p-0068" num="0076">Following creation of a feature vector representing an interaction (e.g., representing a transaction or contract), the system may use the feature vector to cluster and/or classify the interaction represented by the feature vector. In some embodiments, clustering may be performed such that feature vectors within the same cluster as one another are more similar to one another than they are to feature vectors belonging to other clusters. In some embodiments, the system may apply one or more classification models (e.g., machine-learning and/or AI classification models) to the feature vector. In some embodiments, a classification model may be configured to classify a feature vector as either representing (a) an interaction having commercial substance or (b) an interaction not having commercial substance. In some embodiments, the classification model may be configured to classify a feature vector into one or more of any suitable number of classifications. In some embodiments, a classification model may be configured to assign a respective confidence value to a classification of a feature vector. In some embodiments, the classification model may be a machine-learning model trained using training data based on previous interactions (e.g., previous contracts) that have been determined to be with or without commercial substance.</p><p id="p-0069" num="0077">In some embodiments, clustering analysis may be applied such that interactions with similar feature vectors may be adjudicated simultaneously to optimize computational speed for reasoning and adjudication. In some embodiments, the clustering analysis may comprise applying unsupervised clustering such as K-means, which may which enable similar documents to be clustered together. In some embodiments, the clustering analysis may comprise applying hierarchical clustering, which may reduce the number of dimensions through methods such as singular value decomposition. (See, e.g., Castelli, V., Thomasian, A. and Li, C. S., 2003. CSVD: Clustering and singular value decomposition for approximate similarity search in high-dimensional spaces. IEEE Transactions on knowledge and data engineering, 15(3), pp. 671-685.)</p><p id="p-0070" num="0078">In some embodiments, classification analysis may comprise classifying an interaction based on the feature vector (regardless, in some embodiments, of whether the feature vector is constructed based on feature engineering or through the use of document embedding and/or autoencoder techniques). In some embodiments the classification analysis may comprise use of one or more supervised machine learning models (e.g., SVM) and/or deep learning models (see, e.g., DistilBERT (Sanh, V., Debut, L., Chaumond, J. and Wolf, T., 2019. DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter. arXiv preprint arXiv:1910.01108.); MT-DNN (Liu, X., He, P., Chen, W. and Gao, J., 2019. Multi-task deep neural networks for natural language understanding. arXiv preprint arXiv:1901.11504)). In some embodiments, the classification analysis may be applied to classify feature vectors into a class indicating commercial substance or a class indicating lack of commercial substance. In some embodiments, the classification analysis may comprise generating one or more confidence levels associated with classification of a feature vector.</p><p id="p-0071" num="0079">In some embodiments, the system may be configured to identify, from a set of feature vectors representing a plurality of other interactions/contracts/transactions, a subset of feature vectors that are the most similar to the target feature vector for adjudication. For example, a respective similarity score between the target feature vector and each respective feature vector in the set of other feature vectors may be generated, and a subset of top feature vectors with the highest similarity scores may be selected. In some embodiments, the subset of all feature vectors with a similarity score over a predetermined or dynamically determined threshold similarity score value may be selected. In some embodiments, the subset of feature vectors with the top k similarity scores may be selected, where the value k may be determined in accordance with system settings, user input, and/or dynamic determination based on the processed documents or other information available to the system.</p><p id="p-0072" num="0080">In some embodiments, assessing similarity for the purpose of selecting a subset of similar feature vectors may comprise determining similarity based on any one or more of the following similarity metrics: L0, L1, L2, or Linfinity. L2 may also be referred to as Euclidean distance. In some embodiments, weighting for one or more parts of the feature vectors may be introduced in determining similarity between feature vectors. Weights may in some embodiments be learned through iterative refinement.</p><p id="p-0073" num="0081">In some embodiments, the function F=&#x3a3;ci Xi may be used, where: Xi=1 {i=1 . . . k}, if the interaction is considered to have commercial substance; Xi=(&#x2212;1) {i=1 . . . k} if the interaction is considered to not have commercial substance; and ci is the metric for the similarity measure of the feature vector for the interaction. The interaction may be considered to have commercial substance if the metric F for the interaction is higher than a threshold, where the threshold is between &#x2212;1 and 1.</p><p id="p-0074" num="0082">In some embodiments, the system may be configured to apply AI-augmented reasoning to determine a respective change for one or more characteristics, wherein the determination may be based on the feature vector and/or based on additional information available to the system (e.g., enterprise resource planning (ERP) data from one or more financial systems) available to the system and determined to be pertinent to the interaction. In some embodiments, the characteristics assessed for change via the interaction (e.g., under a contract) may comprise one or more of the following:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0083">a. Risk change&#x2014;an assessment of the risk of inbound cash flow before &#x26; after the interaction;</li>        <li id="ul0006-0002" num="0084">b. Timing change&#x2014;an assess of the timing of cash inflow before &#x26; after the interaction; and</li>        <li id="ul0006-0003" num="0085">c. Amount change&#x2014;an assessment of cash inflow amount before and after the interaction.</li>    </ul>    </li></ul></p><p id="p-0075" num="0086">In some embodiments, assessed change to each of the one or more characteristics may be quantified in terms of any suitable unit or any suitable score. In some embodiments, assessed change to each of the one or more characteristics may be classified as significant or as insignificant in accordance with whether the assessed change exceeds a threshold.</p><p id="p-0076" num="0087">In some embodiments, assessment of change to each of the one or more characteristics may be conducted entirely automatically by reasoning engine, or may be conducted with human augmentation based on user input.</p><p id="p-0077" num="0088">The inputs considered by the system in assessing change to each of the one or more characteristics may comprise the feature vector and an assessed impact on cash flow as a result of the result of the interaction represented by the feature vector. In some embodiments, the assessment may be performed in part based on the following:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0089">Risk&#x2014;adjudicating risk to the cash flow may be based on obligations of the interaction, for example obligations represented in a contract document being analyzed. As an example, accepting a junior debt as opposed to senior debt may introduces higher risk as junior debt is placed at less priority in receiving repayment when going through liquidation during a bankrupt proceeding.</li>        <li id="ul0008-0002" num="0090">Timing&#x2014;adjudicating whether there will be a change cash inflow as a result of the timing of the execution may be assessed in terms of obligations. Delay of payment in exchange for larger payment may be considered as constituting commercial substance.</li>        <li id="ul0008-0003" num="0091">Amount&#x2014;cash inflow amount before and after the interaction (e.g., before and after execution of a contract or other agreement) may be considered. As an example, a sales order with zero amount (such as for sending samples to potential customers) may not produce impact on the cash flow and hence may not be deemed to constitute commercial substance.</li>    </ul>    </li></ul></p><p id="p-0078" num="0092">After performing one or more of the preceding three analyses&#x2014;(a) the clustering/classification of the feature vector, (b) the subset of feature vectors that are the most similar to the target feature vector for adjudication, and (c) the changes for one or more characteristics&#x2014;the system may then render an overall adjudication as to whether or not the interaction represented by the feature vector satisfies one or more commercial substance criteria. The adjudication may be based on any one or more of the preceding analyses. In some embodiments, the overall determination as to whether commercial substance criteria are satisfied may be made based on calculating a commercial substance score based on the preceding analyses, and determining whether the commercial substance score satisfies a commercial substance score threshold.</p><p id="p-0079" num="0093">Rendering the overall adjudication as to whether or not the interaction represented by the feature vector satisfies one or more commercial substance criteria may comprise generating an indication as to whether or not the one or more commercial substance criteria are satisfied. Rendering the adjudication may also comprise generating a confidence score indicating a level of confidence in all or part of the adjudication (e.g., with respect to the overall adjudication, with respect to one or more of the underlying preceding analyses, and/or with respect to a specific commercial substance criteria from amongst a plurality of commercial substance criteria).</p><p id="p-0080" num="0094">In some embodiments, the overall adjudication may be based in part on the clustering/classification of the feature vector described above. A clustering/classification that classifies the feature vector as one representing commercial substance or that cluster the feature vector with other feature vectors representing commercial substance may weigh in favor of an overall adjudication in favor of commercial substance.</p><p id="p-0081" num="0095">In some embodiments, the overall adjudication may be based in part on the identification of the subset of feature vectors that are the most similar to the target feature vector described above. Identification of one or more similar feature vectors in the identified subset that themselves are associated with interactions of commercial substance may weigh in favor of an overall adjudication in favor of commercial substance.</p><p id="p-0082" num="0096">In some embodiments, the overall adjudication may be based in part on the assessed changes for one or more characteristics. More significant assessed changes for one or more of the characteristics may weigh in favor of an overall adjudication in favor of commercial substance.</p><p id="p-0083" num="0097">In some embodiments, the preceding analyses ((a) the clustering/classification of the feature vector, (b) the subset of feature vectors that are the most similar to the target feature vector for adjudication, and (c) the changes for one or more characteristics) may be assessed independently or in combination with one another to determine the overall adjudication. In some embodiments, a score for one or more of the preceding analyses may be calculated. In some embodiments, if any one of the preceding analyses satisfies overall adjudication criteria (e.g., a threshold), then the overall adjudication may be rendered in favor of a finding of commercial substance. In some embodiments, if any one of the preceding analyses fails to satisfy overall adjudication criteria (e.g., a threshold), then the overall adjudication may be rendered against a finding of commercial substance. In some embodiments, the scores or assessments of the preceding analyses may be combined with another and assessed collectively, for example by being used (weighted or unweighted) to compute an overall adjudication score as a sum or as a product, and the overall adjudication score may be compared to a threshold to determine the overall adjudication.</p><p id="p-0084" num="0098"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> shows an exemplary architecture for a system <b>100</b> for extracting information from documents and rendering an overall adjudication of commercial substance.</p><p id="p-0085" num="0099">As shown in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, system <b>100</b> may receive one or more input documents comprising contract documents and/or amendments documents.</p><p id="p-0086" num="0100">The input documents may be processed via one or more document understanding operations in order to extract information from the input documents.</p><p id="p-0087" num="0101">In some embodiments, processing the documents via one or more document understanding operations may comprise performing structural, semantic, and/or linguistic analysis of the documents. Structural analysis of the one or more documents may enable the identification of the one or more sections of one or more of the documents. For example, a contract contain one or more of the following sections, any one or more of which may be identified by the system:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0102">Preamble, Recital, Words of Agreement</li>        <li id="ul0010-0002" num="0103">Definitions</li>        <li id="ul0010-0003" num="0104">Action Section (Consideration)</li>        <li id="ul0010-0004" num="0105">Reps &#x26; Warranties</li>        <li id="ul0010-0005" num="0106">Covenants &#x26; Rights</li>        <li id="ul0010-0006" num="0107">Conditions to Obligations</li>        <li id="ul0010-0007" num="0108">Endgame Provisions &#x26; Remedies</li>        <li id="ul0010-0008" num="0109">General Provisions</li>        <li id="ul0010-0009" num="0110">Signatures</li>    </ul>    </li></ul></p><p id="p-0088" num="0111">In some embodiments, system <b>100</b> may be configured in accordance with the assumption that it is often in the &#x201c;action section(s)&#x201d; of a contract that obligations and considerations are set forth. The action section may contain the exchange of promises that is the subject matter of the agreement. It may specifically identify the value to be exchanged between the parties. For example, it may identify goods or services to be provided to the other party. It may indicate the total amount or unit rate of currency exchanged in the transaction. This section may sets the stage for other contractual terms that support this exchange.</p><p id="p-0089" num="0112">Duties of the parties may comprise:<ul id="ul0011" list-style="none">    <li id="ul0011-0001" num="0000">    <ul id="ul0012" list-style="none">        <li id="ul0012-0001" num="0113">Rights of each party</li>        <li id="ul0012-0002" num="0114">Relevant dates</li>        <li id="ul0012-0003" num="0115">Relevant prices or other dollar amounts</li>        <li id="ul0012-0004" num="0116">Relevant quantities</li>        <li id="ul0012-0005" num="0117">Payment terms</li>        <li id="ul0012-0006" num="0118">Lump sum, COD, installments</li>        <li id="ul0012-0007" num="0119">Payment due dates</li>        <li id="ul0012-0008" num="0120">Taxes</li>        <li id="ul0012-0009" num="0121">Interest</li>        <li id="ul0012-0010" num="0122">Late fees</li>    </ul>    </li></ul></p><p id="p-0090" num="0123">In some embodiments, performing semantic analysis comprises leveraging topic modeling in natural language processing (NLP) so that the intention of one or more sections, subsections, and/or paragraphs of a document is correctly identified. Linguistic analysis may classify sentences based on modality into either epistemic vs. deontic. Obligations in contracts are usually expressed in deontic modality.</p><p id="p-0091" num="0124">Natural language processing techniques may be used to identify one or more of the following within a contract, amendment, or other document(s) being analyzed:<ul id="ul0013" list-style="none">    <li id="ul0013-0001" num="0000">    <ul id="ul0014" list-style="none">        <li id="ul0014-0001" num="0125">Title transfer&#x2014;may be classified based on an action sections describing how title of goods are transferred at which point (in conjunction with delivery term).</li>        <li id="ul0014-0002" num="0126">Obligation for one party to the other party in the contract&#x2014;may be classified through the action section.</li>        <li id="ul0014-0003" num="0127">Pricing of transaction&#x2014;including both point in time and over time.</li>        <li id="ul0014-0004" num="0128">Consideration in return&#x2014;may be classified based on the action sections and may comprise fixed and variable considerations (e.g., consideration involving some form of discount).        <ul id="ul0015" list-style="none">            <li id="ul0015-0001" num="0129">One aspect that may be determined is whether the transaction involves in-kind exchanges as part of the considerations. In-kind exchange could be an exchange of an equipment in a manufacturing setting or retaining a portion of raw material as the payment in the oil and gas industry.</li>        </ul>        </li>        <li id="ul0014-0005" num="0130">Timing&#x2014;obligation and consideration to be fulfilled. This is to facilitate the classification of the contract to be point in time or over time.</li>        <li id="ul0014-0006" num="0131">Fulfillment of the contract&#x2014;for determining the payment term (e.g., &#x201c;net 30&#x201d; may indicate the payment is due 30 days after receiving the invoice) and shipping term (e.g., &#x201c;EXW&#x201d; may indicate transfer of title occurs at the point of origin).</li>    </ul>    </li></ul></p><p id="p-0092" num="0132">As shown in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, a feature vector may then be generated based on information extracted from the one or more received documents. As shown, the feature vector may be generated via classification and adjudication for transfer of title, classification and adjudication for obligation, and/or classification and adjudication for transaction price. The feature vector may then be used to assess three underlying analyses, for example as discussed above.</p><p id="p-0093" num="0133">First, the feature vector may be processed via a vector based clustering and classification operation, which may cluster and/or classify the target feature vector, including with reference to one or more other feature vectors available via a case library.</p><p id="p-0094" num="0134">Second, the feature vector may be subject to a similarity search operation (e.g., a selection of a subset of other feature vectors that are most similar to the target feature vector). This assessment may be made with reference to one or more other feature vectors available via a case library.</p><p id="p-0095" num="0135">Third, the feature vector may be processed via an adjudication engine for assessing changes to risk, timing, and amount. This processing may be based on the target feature vector itself and on other information such as ERP data.</p><p id="p-0096" num="0136">All three (or any one or more of the three) of these underlying analyses may then be used to generate an overall adjudication as to whether the contract satisfies commercial substance criteria, for example as described above.</p><p id="p-0097" num="0137">There is a need for improved methods for AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents, including adjudications as to whether the documents represent underlying data that meets one or more predefined or dynamically-determined criteria. In some embodiments, a set of documents (and/or other data) may be automatically ingested and evaluated to adjudicate whether the documents/data represent an arrangement or contract that meets criteria for commercial substance. In some embodiments, a set of documents (and/or other data) may be automatically ingested and evaluated to adjudicate whether the documents/data represent related parties, a transaction between related parties, and/or a transaction that complies with criteria/requirements regarding transactions between related parties. In some embodiments, a set of documents (and/or other data) may be automatically ingested and evaluated to adjudicate whether the documents/data represent a transaction and/or a party that satisfy collectability criteria, including by adjudicating a likelihood of collectability.</p><p id="p-0098" num="0138">As shown in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, system <b>100</b> may comprise contracts and amendments data source <b>101</b>, which may comprise any one or more computer storage devices such as databases, data stores, data repositories, live data feeds, or the like. Data source <b>101</b> may be communicatively coupled to one or more other components of system <b>100</b> and configured to provide contract data and/or amendment data to system <b>100</b>, such that the contract data and/or amendment data can be assessed to determine whether one or more commercial substance criteria and/or related criteria are met. In some embodiments, system <b>100</b> may receive data from documents source <b>101</b> on a scheduled basis, in response to a user input, in response to one or more trigger conditions being met, and/or in response to the documents being manually sent. Data received from data source <b>101</b> may be provided in any suitable electronic data format, for example as structured, unstructured, and/or semi-structured data. The data may comprise, for example, spreadsheets, word processing documents, image files, and/or PDFs.</p><p id="p-0099" num="0139">System <b>100</b> may comprise document understanding module <b>102</b>, which may comprise any one or more processors configured to perform one or more document processing operations on the contract data and/or amendment data provided by data source <b>101</b>. The document processing operations performed by module <b>102</b> may include information extraction and/or structural classification that recognizes and classifies different sections of a the document. Document understanding module <b>204</b> may generate data representing information extracted from the received contract data and/or amendment data. Document understanding module <b>204</b> may generate data representing recognized document/amendment sections/structure along with associated metadata that classifies or characterizes the recognized sections/structure.</p><p id="p-0100" num="0140">Downstream of document understanding module <b>102</b>, system <b>100</b> may comprise a plurality of adjudication modules configured to receive the output data generated by document understanding module <b>102</b> (optionally along with the contracts/amendments data received from data source <b>101</b>) and to process said received data to generate classification data and/or adjudication data. In the example shown, system <b>100</b> comprises transfer-of-title classification and adjudication module <b>103</b>, obligation classification and adjudication module <b>104</b>, and transaction price classification and adjudication module <b>105</b>.</p><p id="p-0101" num="0141">In some embodiments, one or more of the adjudication modules that generate data for inclusion in a feature vector may leverage active logic and/or passive logic. For example, a transfer-of-title adjudication module may apply an active logic by generating hypotheticals and evaluating evidence to determine whether said hypotheticals can be verified, while a transfer-of-title adjudication module may apply a passive logic by analyzing document data to identify sections (e., paragraphs) that include data indicating how title is or is not transferred.</p><p id="p-0102" num="0142">Transfer-of-title classification and adjudication module <b>103</b> may comprise any one or more processors configured to perform one or more data processing operations for classification and/or adjudication for transfer of title. (Any data processing operation referenced herein may include application of one or more models trained by machine-learning.) Module <b>103</b> may receive the output data generated by module <b>102</b> and may process the received data to generate output data representing a transfer-of-title classification and/or a transfer-of-title adjudication.</p><p id="p-0103" num="0143">Obligation classification and adjudication module <b>104</b> may comprise any one or more processors configured to perform one or more data processing operations for classification and/or adjudication for obligations. Module <b>104</b> may receive the output data generated by module <b>102</b> and may process the received data to generate output data representing an obligation classification and/or an obligation adjudication.</p><p id="p-0104" num="0144">Transaction price classification and adjudication module <b>105</b> may comprise any one or more processors configured to perform one or more data processing operations for classification and/or adjudication for transaction price. Module <b>105</b> may receive the output data generated by module <b>102</b> and may process the received data to generate output data representing a transaction price classification and/or a transaction price adjudication.</p><p id="p-0105" num="0145">The output data generated by one or more of transfer-of-title classification and adjudication module <b>103</b>, obligation classification and adjudication module <b>104</b>, and transaction price classification and adjudication module <b>105</b> may be used to create a feature vector <b>106</b>. Feature vector <b>106</b> may include an indication of a classification and/or adjudication for each of the upstream modules, and may optionally include a confidence level associated with one or more of the included classifications and/or adjudications.</p><p id="p-0106" num="0146">System <b>100</b> may comprise risk/timing/amount adjudication module <b>107</b>, which may comprise any one or more processors configured to perform one or more data processing operations for adjudication of risk, timing, and/or amount. Module <b>107</b> may receive feature vector <b>106</b> and may process feature vector <b>106</b> to generate output data representing an adjudication of risk, timing, and/or amount for the contract data and/or amendment data originally received from data source <b>101</b>. Output data generated by module <b>107</b> may be provided to overall adjudication module <b>112</b>, described in further detail below.</p><p id="p-0107" num="0147">In some embodiments, the data processing operations performed by module <b>107</b> may be further based on ERP data received from ERP data source <b>108</b>.</p><p id="p-0108" num="0148">ERP data source <b>108</b> may comprise any one or more computer storage devices such as databases, data stores, data repositories, live data feeds, or the like. ERP data source <b>108</b> may be communicatively coupled to one or more other components of system <b>100</b> and configured to provide ERP data to system <b>100</b>, such that the ERP data can be assessed used in generating data representing one or more adjudications regarding contract data and/or amendment data received from data source <b>101</b>. In some embodiments, one or more components of system <b>100</b> may receive ERP data from ERP data source <b>108</b> on a scheduled basis, in response to a user input, in response to one or more trigger conditions being met, and/or in response to the data being manually sent. ERP data received from ERP data source <b>108</b> may be provided in any suitable electronic data format.</p><p id="p-0109" num="0149">System <b>100</b> may comprise similarity search module <b>109</b>, which may comprise any one or more processors configured to perform one or more similarity search operations. A similarity search operation may use an input feature vector to compute a distance between the feature vector and one or more (e.g., a collection of) other feature vectors, for example feature vectors that are in a case library and that characterize respective cases. The distance calculate may, for example, be a Euclidean distance. A similarity search operation may comprise ranking distances from the smallest distance (most similar) to the greatest distance (least similar).</p><p id="p-0110" num="0150">Module <b>109</b> may receive feature vector <b>106</b> and may receive one or more additional feature vectors (e.g., feature vectors representing other source documents and generated in a same or similar manner as feature vector <b>106</b>) from case library <b>110</b> (described in further detail below). Similarity search module <b>109</b> may compare feature vector <b>106</b> to the one or more feature vectors received from case library <b>110</b> in order to generate output data representing a similarity between feature vector <b>106</b> and the one or more feature vectors received from case library <b>110</b>. Comparing feature vectors may comprise computing a distance (e.g., a weighted distance) between two feature vectors being compared. The output data may comprise a similarity score (e.g., including a distance metric such as a Euclidean stance) and/or an indication of one or more parameters that are similar or that are different between the compared vectors. In some embodiments, the system may search for the most-similar feature vector (or feature vectors) in case library <b>110</b> and may then look up stored adjudication results for the identified most-similar case(s). The adjudication results for the identified most-similar case(s) may be included in the output data generated by similarity search module <b>109</b>, for example such that the current case may be adjudicated by the system in a similar manner. Output data generated by module <b>109</b> may be provided to overall adjudication module <b>112</b>, described in further detail below.</p><p id="p-0111" num="0151">Case library <b>110</b> may comprise any one or more computer storage devices such as databases, data stores, data repositories, live data feeds, or the like. Case library <b>110</b> may be communicatively coupled to one or more other components of system <b>100</b> and configured to provide data regarding previously-assessed and/or previously adjudicated data to system <b>100</b>, such that the system may leverage the data regarding previous assessments/adjudications in rendering present assessments/adjudications. In some embodiments, case library <b>110</b> may store feature vectors representing previously-ingested contract data and/or amendment data that may have been generated in a same or similar manner as feature vector <b>107</b>. In some embodiments, one or more components of system <b>100</b> may receive data from case library <b>110</b> on a scheduled basis, in response to a user input, in response to one or more trigger conditions being met, and/or in response to the data being manually sent. Data received from case library <b>110</b> may be provided in any suitable electronic data format.</p><p id="p-0112" num="0152">System <b>100</b> may comprise case-vector clustering and classification module <b>111</b>, which may comprise any one or more processors configured to perform one or more case vector clustering and/or classification data processing operations. Module <b>111</b> may receive feature vector <b>106</b> as input data and may receive one or more feature vector clusters from case library <b>110</b> as input data. Module <b>111</b> may process feature vector <b>106</b> and the received one or more feature vector clusters to generate similarity metrics and/or an indication of the most-similar identified feature-vector clusters, similar to the manner described above with respect to module <b>109</b>. Module <b>111</b> may look up adjudication results for one or more feature vectors in the identified most-similar cluster(s), and said results may be included in the output data generated by module <b>111</b>, for example such that the current case may be adjudicated by the system in a similar manner. In some embodiments, the output data generated by module <b>111</b> may be provided to overall adjudication module <b>112</b>, described in further detail below.</p><p id="p-0113" num="0153">In some embodiments, module <b>111</b> may additionally perform clustering based on feature vector <b>106</b>, and may store feature vector <b>106</b> as part of one or more clusters in in case library <b>110</b>.</p><p id="p-0114" num="0154">System <b>100</b> may comprise overall adjudication module <b>112</b>, which may comprise any one or more processors configured to perform one or more overall adjudication data processing operations. Module <b>112</b> may receive output data generated from one or more of the following: risk/timing/amount adjudication module <b>107</b>, similarity search module <b>109</b>, and/or case-vector clustering and classification module <b>111</b>. Module <b>112</b> may process the received data to generate output data comprising an overall adjudication for the contract data and/or amendment data originally received from data source <b>101</b>. The overall adjudication output data generated by module <b>112</b> may include a binary indication of an adjudication (e.g., whether one or more criteria are met, such as to whether the data received meets one or more commercial-substance criteria, one or more related-party criteria, and/or one or more collectability criteria). In some embodiments, the overall adjudication output data may comprise a tuple (L, C) where L represents data indicating a likelihood that one or more criteria (e.g., commercial substance) are met and where C represents data indicating a confidence level for the adjudication. The output data generated by module <b>112</b> may be stored, transmitted, presented to a user, used to generate one or more visualizations, and/or used to trigger one or more automated system actions.</p><p id="p-0115" num="0155"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> shows an exemplary architecture for transfer-of-title classification and adjudication module <b>103</b> and associated system components, in accordance with some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, module <b>103</b> may receive input data (e.g., contract data <b>113</b> and/or section data derived therefrom) and may process said input data through a data-processing pipeline to generate output data including transfer-of-title classification data <b>118</b>(<i>a</i>).</p><p id="p-0116" num="0156">As shown, contract data <b>113</b>, which may be data received from data source <b>101</b> in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, may be processed by structural classification module <b>114</b>. Structural classification module <b>114</b> may be a part of document understanding module <b>102</b> in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. Structural classification module <b>114</b> may comprise any one or more processors configured to perform one or more structural classification data processing operations. Module <b>114</b> may receive contract data <b>113</b> as input data and may process the received contract data <b>113</b> to generate section data <b>115</b> representing structural classification information, for example including data indicating what sections of the contract data <b>113</b> include title-transfer language. Section data <b>115</b> may, for example, comprise an indication of a document page, document section, and/or contract section that is determined to (or is determined to not) include title-transfer language. Section data <b>115</b> may comprise an indication of a type of title-transfer language that is included in the identified section(s). Section data <b>115</b> may comprise an indication of a confidence level indicating a confidence of one or more of the determinations indicated in section data <b>115</b>.</p><p id="p-0117" num="0157">In some embodiments, module <b>114</b> may perform one or more document structure and layout analysis data processing operations including, for example, segmentation of a document into a plurality of different regions based on the layout of the document, and including, for example, classification of one or more of the regions into section classes such as title, section title, paragraphs, bullet list, number list, figures, tables, etc. Machine learning and deep learning techniques may be leveraged for this purpose.</p><p id="p-0118" num="0158">Structural classification module <b>114</b> may generate section data <b>115</b>, which may form all or part of the input for module <b>103</b>. The input data received by module <b>103</b> may be provided in any suitable structured, partially structured, and/or unstructured format.</p><p id="p-0119" num="0159">Module <b>103</b> may comprise sentence classification module <b>116</b>, which may comprise any one or more processors configured to perform one or more sentence classification data processing operations. In some embodiments, sentence classification module <b>116</b> may classify, for example using machine learning, each sentence in a document that is likely to include discussions of certain topics, such as transfer of title. Module <b>116</b> may receive section data <b>115</b> as input data, and/or may receive contract data <b>113</b> as input data, and may process the received data to generate sentence data <b>117</b> representing sentence classification information, for example including data indicating what sentences of the contract data <b>113</b> include title-transfer language. Sentence data <b>117</b> may, for example, comprise an indication of a sentence that is determined to (or is determined to not) include title-transfer language. Sentence data <b>117</b> may comprise an indication of a type of title-transfer language that is included in the identified sentence(s). Sentence data <b>115</b> may comprise an indication of a confidence level indicating a confidence of one or more of the determinations indicated in sentence data <b>117</b>.</p><p id="p-0120" num="0160">Module <b>103</b> may comprise transfer-of-title classification module <b>118</b>, which may comprise any one or more processors configured to perform one or more transfer-of-title classification operations. Module <b>118</b> may receive sentence data <b>117</b>, section data <b>115</b>, and/or contract data <b>113</b> as input data, and may process the received data to generate transfer-of-title classification data <b>118</b>(<i>a</i>). The transfer-of-title classification data <b>118</b>(<i>a</i>) may indicate a classification for the received data (and/or for the underlying contract data and/or amendment data received from data source <b>101</b>) indicating a transfer-of-title classification, for example by indicating whether the data represents a full transfer of title, a partial transfer of title, or no transfer of title. The transfer-of-title classification data may also include an indication of a confidence level indicating a confidence of one or more of the classifications. The transfer-of-title classification data <b>118</b>(<i>a</i>) may constitute, or may be comprised in, the output data representing a transfer-of-title classification and/or a transfer-of-title adjudication as generated by module <b>103</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. The transfer-of-title classification data <b>118</b>(<i>a</i>) may be included in feature vector <b>106</b>.</p><p id="p-0121" num="0161">Module <b>103</b> may be communicatively coupled to sample clause database <b>119</b>, which may comprise any one or more computer storage devices such as databases, data stores, data repositories, live data feeds, or the like. Sample clause database <b>119</b> may be communicatively coupled to transfer-of-title classification module <b>118</b> and configured to receive classification information pertaining to documents, amendments, document sections, and/or sentences from transfer-of-title classification module <b>118</b>. The clauses themselves may be stored in database <b>119</b> in association with classification results pertaining to said clauses. Transfer-of-title classification module <b>118</b> may be configured to receive data stored in sample clause database <b>119</b> and to use said received data to generate output data, for example by comparing sample clauses received from database <b>119</b> to clauses being analyzed.</p><p id="p-0122" num="0162">Module <b>103</b> may be communicatively coupled to continuous learning module <b>120</b>, which may comprise any one or more processors configured to perform one or more machine-learning operations based on clause data and/or clause classification data stored in sample clause database <b>119</b>. Continuous learning module <b>120</b> may be used to train one or more data processing operations applied by module <b>118</b> in order to improve performance of module <b>118</b>.</p><p id="p-0123" num="0163"><figref idref="DRAWINGS">FIG. <b>1</b>C</figref> shows an exemplary architecture for obligation classification and adjudication module <b>104</b> and associated system components, in accordance with some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>, module <b>104</b> may receive input data (e.g., contract data <b>113</b>) and may process said input data through a data-processing pipeline to generate output data including transfer-of-title classification data <b>127</b>, <b>128</b>, <b>129</b>, <b>130</b>, <b>131</b>, and/or <b>132</b>.</p><p id="p-0124" num="0164">Module <b>104</b> may receive input data comprising contract data <b>113</b>, which may be data received from data source <b>101</b> in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>.</p><p id="p-0125" num="0165">Module <b>104</b> may comprise linguistic modality classification module <b>121</b>, which may comprise any one or more processors configured to perform one or more linguistic modality data processing operations. Module <b>121</b> may receive contract data <b>113</b> and may process said received data to generate output data comprising an indication of one or more linguistic modalities, for example epistemic output data <b>123</b> and/or deontic output data <b>124</b>. Output data <b>123</b> and/or <b>124</b> may include an indication of a linguistic modality and/or an associated confidence level.</p><p id="p-0126" num="0166">Module <b>104</b> may comprise structural classification module <b>122</b>, which may share any one more characteristics in common with structural classification module <b>114</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>. Structural classification module <b>122</b> may receive contract data <b>113</b> and may process said received data to generate output data comprising an indication of one or more sections within the contracts and/or amendments represented by the contract data. In some embodiments, structural classification module <b>122</b> and linguistic modality classification module <b>121</b> may work together to generate linguistic modality data (e.g., output data <b>123</b> and/or <b>124</b>) that corresponds to one or more specific identified sections identified in the documents represented by contract data <b>113</b>.</p><p id="p-0127" num="0167">Module <b>104</b> may comprise promiser/promisee/beneficiary classifier module <b>125</b>, which may comprise any one or more processors configured to perform one or more promiser/promisee/beneficiary classifier data processing operations. Module <b>125</b> may receive linguistic modality classification data (e.g., data <b>123</b> and/or <b>124</b>), structural classification data (e.g., as generated by module <b>22</b>), and/or contract data <b>113</b>, and may process said received data to generate output data that classifies the received data according to whether said input data relates to a promiser, a promise, and/or a beneficiary. In some embodiment, module <b>125</b> may receive deontic data <b>124</b> as input, and may not receive epistemic data <b>123</b> as input.</p><p id="p-0128" num="0168">Module <b>104</b> may comprise obligation classifier module <b>126</b>, which may comprise any one or more processors configured to perform one or more obligation classifier data processing operations. Module <b>126</b> may receive linguistic modality classification data (e.g., data <b>123</b> and/or <b>124</b>), structural classification data (e.g., as generated by module <b>22</b>), and/or contract data <b>113</b>, and may process said received data to generate output data that classifies the received data according to whether said input data relates to a an obligation, a permission, and/or a prohibition. For example, module <b>126</b> may generate obligations output data <b>127</b> (identifying portions of the contracts represented by contract data <b>113</b> that relate to an obligation, and/or associated confidence level), permissions output data <b>128</b> (identifying portions of the contracts represented by contract data <b>113</b> that relate to a permission, and/or associated confidence level), and/or prohibitions output data <b>128</b> (identifying portions of the contracts represented by contract data <b>113</b> that relate to a prohibition, and/or associated confidence level). In some embodiment, module <b>126</b> may receive deontic data <b>124</b> as input, and may not receive epistemic data <b>123</b> as input.</p><p id="p-0129" num="0169">In some embodiments, module <b>125</b> and module <b>126</b> may work (alone and/or together) to generate output data that associates identified obligations (e.g., <b>127</b>), permissions (e.g., <b>128</b>) and/or prohibitions (e.g., <b>129</b>) with one or more identified promisers, promisees, and/or beneficiaries. Promiser output data <b>130</b> (identifying obligations, permissions, and/or associations associated with a promiser), promise output data <b>131</b> (identifying obligations, permissions, and/or associations associated with a promisee), and/or beneficiary output data <b>132</b> (identifying obligations, permissions, and/or associations associated with a beneficiary) may thereby be generated.</p><p id="p-0130" num="0170">Obligations classification data <b>127</b>, <b>128</b>, <b>129</b>, <b>130</b>, <b>131</b>, and/or <b>132</b>, as generated by module <b>104</b>, may constitute, or may be comprised in, the output data representing a obligations classifications and/or a obligations adjudication as generated by module <b>104</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. The obligations classification data may be included in feature vector <b>106</b>.</p><p id="p-0131" num="0171"><figref idref="DRAWINGS">FIG. <b>1</b>D</figref> shows an exemplary architecture for transaction price classification and adjudication module <b>105</b> and associated system components, in accordance with some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>D</figref>, module <b>105</b> may receive input data (e.g., contract data <b>113</b> and/or section data derived therefrom) and may process said input data through a data-processing pipeline to generate output data including transaction price classification data <b>142</b>-<b>144</b>.</p><p id="p-0132" num="0172">As shown, contract data <b>113</b>, which may be data received from data source <b>101</b> in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, may be processed by structural classification module <b>133</b>. Structural classification module <b>133</b> may be a part of document understanding module <b>102</b> in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. Structural classification module <b>133</b> may comprise any one or more processors configured to perform one or more structural classification data processing operations. Module <b>133</b> may receive contract data <b>113</b> as input data and may process the received contract data <b>113</b> to generate section data <b>134</b> representing structural classification information, for example including data indicating what sections of the contract data <b>113</b> include price or consideration language. Section data <b>134</b> may, for example, comprise an indication of a document page, document section, and/or contract section that is determined to (or is determined to not) include price or consideration language. Section data <b>134</b> may comprise an indication of a type of price or consideration language that is included in the identified section(s). Section data <b>134</b> may comprise an indication of a confidence level indicating a confidence of one or more of the determinations indicated in section data <b>134</b>.</p><p id="p-0133" num="0173">In some embodiments, module <b>134</b> may perform one or more document structure and layout analysis data processing operations including, for example, segmentation of a document into a plurality of different regions based on the layout of the document, and including, for example, classification of one or more of the regions into section classes such as title, section title, paragraphs, bullet list, number list, figures, tables, etc. Machine learning and deep learning techniques may be leveraged for this purpose.</p><p id="p-0134" num="0174">Structural classification module <b>133</b> may generate section data <b>134</b>, which may form all or part of the input for module <b>105</b>. The input data received by module <b>105</b> may be provided in any suitable structured, partially structured, and/or unstructured format.</p><p id="p-0135" num="0175">Module <b>105</b> may comprise sentence classification module <b>135</b>, which may comprise any one or more processors configured to perform one or more sentence classification data processing operations. In some embodiments, a sentence classification data processing operation may include segmentation of a document into a plurality of different sentences, and may include classification of one or more of the sentences into sentence classes. Machine learning and deep learning techniques may be leveraged for this purpose. Identification of sentences may be leveraged to identify certain content in certain types of sentences, as certain types of sentences may be known to include certain content relating to a specific focus of the sentence, for basic price (fixed consideration) and potential discount rules (variable considerations).</p><p id="p-0136" num="0176">Module <b>135</b> may receive section data <b>134</b> as input data, and/or may receive contract data <b>113</b> as input data, and may process the received data to generate sentence data <b>136</b> representing sentence classification information, for example including data indicating what sentences of the contract data <b>113</b> include title-transfer language. Sentence data <b>136</b> may, for example, comprise an indication of a sentence that is determined to (or is determined to not) include title-transfer language. Sentence data <b>136</b> may comprise an indication of a type of title-transfer language that is included in the identified sentence(s). Sentence data <b>136</b> may comprise an indication of a confidence level indicating a confidence of one or more of the determinations indicated in sentence data <b>136</b>.</p><p id="p-0137" num="0177">Module <b>105</b> may comprise considerations classification module <b>137</b>, which may comprise any one or more processors configured to perform one or more considerations classification operations. Module <b>137</b> may receive sentence data <b>136</b>, section data <b>134</b>, and/or contract data <b>113</b> as input data, and may process the received data to generate consideration classification data. The considerations classification data may indicate a classification for the received data (and/or for the underlying contract data and/or amendment data received from data source <b>101</b>) indicating a consideration classification. The consideration classification data may also include an indication of a confidence level indicating a confidence of one or more of the classifications.</p><p id="p-0138" num="0178">Module <b>105</b> may be communicatively coupled to sample clause database <b>138</b>, which may comprise any one or more computer storage devices such as databases, data stores, data repositories, live data feeds, or the like. Sample clause database <b>138</b> may be communicatively coupled to considerations classification module <b>137</b> and configured to receive classification information pertaining to documents, amendments, document sections, and/or sentences from considerations classification module <b>137</b>. The clauses themselves may be stored in database <b>138</b> in association with classification results pertaining to said clauses. Considerations classification module <b>137</b> may be configured to receive data stored in sample clause database <b>138</b> and to use said received data to generate output data, for example by comparing sample clauses received from database <b>138</b> to clauses being analyzed. In some embodiments, a single database may be used in place of sample clause database <b>138</b> and sample clause database <b>119</b>.</p><p id="p-0139" num="0179">Module <b>105</b> may be communicatively coupled to continuous learning module <b>139</b>, which may comprise any one or more processors configured to perform one or more machine-learning operations based on clause data and/or clause classification data stored in sample clause database <b>138</b>. Continuous learning module <b>139</b> may be used to train one or more data processing operations applied by module <b>137</b> in order to improve performance of module <b>137</b>.</p><p id="p-0140" num="0180">Module <b>105</b> may comprise dependency parsing module <b>140</b>, which may comprise any one or more processors configured to perform one or more dependency parsing data processing operations. A dependency parsing data processing operation may include determining dependencies between phrases of a sentence in order to determine the grammatical structure of the sentence. A sentence may be divided into sub-sections based on this determination. Dependency parsing may be based on an assumption that there is a direct relationship between each linguistic unit in a sentence. Module <b>140</b> may receive considerations classification data from module <b>137</b> and may process said considerations classification data to generate dependency parsing output data. Dependency parsing output data may comprise a dependency graph describing syntactic relationships between different part of a sentence.</p><p id="p-0141" num="0181">Module <b>105</b> may comprise mapping module <b>141</b>, which may comprise any one or more processors configured to perform one or more mapping data processing operations to map consideration data to obligation and/or duration data. Module <b>141</b> may accept input data from module <b>140</b>, module <b>137</b>, and/or module <b>126</b> in <figref idref="DRAWINGS">FIG. <b>1</b>C</figref>. Obligations identified by module <b>126</b> may include an indication of responsibilities from one party to another (e.g., permissions and/or prohibitions). Considerations (e.g., payment milestones, potential discount rules), e.g., as identified by module <b>137</b>, may be mapped to corresponding obligations (e.g., as identified by module <b>126</b>) based on output from dependency parsing module <b>140</b> for one or more sentences describing considerations.</p><p id="p-0142" num="0182">The output data generated by mapping module <b>141</b> may include data indicating a correspondence between (a) one or more considerations included in a contract and/or amendment represented by contracts data <b>113</b> and (b) one or more determined obligations and/or durations. The output data may further include one or more confidence levels (e.g., scores) associated with any determined mapping. Output data generated by mapping module <b>141</b> may include transaction price classification data <b>142</b>-<b>144</b>, which may indicate associations between identified obligations, respective fixed considerations, and respective variable considerations.</p><p id="p-0143" num="0183">Transaction price classification data <b>142</b>-<b>144</b> may include a list of obligations with fixed and variable considerations (e.g., fixed price, discount). For example, obligations may include:<ul id="ul0016" list-style="none">    <li id="ul0016-0001" num="0000">    <ul id="ul0017" list-style="none">        <li id="ul0017-0001" num="0184">1. sku_1, base price_1, volume_discount_1;</li>        <li id="ul0017-0002" num="0185">2. sku_2, base price_2, fiexed_discount_2;</li>        <li id="ul0017-0003" num="0186">3. sku_3, base price_3, complex discount rules.</li>    </ul>    </li></ul></p><p id="p-0144" num="0187">Transaction price classification data <b>142</b>-<b>144</b> may constitute, or may be comprised in, the output data representing a transaction price classification and/or a transaction price adjudication as generated by module <b>105</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. The transaction price classification data may be included in feature vector <b>106</b>.</p><p id="p-0145" num="0188"><figref idref="DRAWINGS">FIG. <b>1</b>E</figref> shows an exemplary feature vector data structure for use in representing information extracted from documents and in adjudicating commercial substance, in accordance with some embodiments. The data structure shown may be a data structure for feature vector <b>106</b>. As shown, the feature vector may include a component indicating transfer-of-title information, for example by indicating whether full transfer, partial transfer, or non-transfer were determined. The feature vector may include a plurality of components each indicating an obligation, a respective fixed consideration, and a respective variable consideration. Each component in the feature vector may be associated with one or more confidence levels that may be used to weight the associated feature vector component.</p><p id="p-0146" num="0189">In some embodiments, feature vector <b>107</b> may include one or more confidence values associated with a value in feature vector <b>107</b> and/or one or more values indicating a quantity, amount, or extent of evidence associated with a value in feature vector <b>107</b>. The confidence value and/or evidence value may be provided as a component weight (or a portion of a component weight) in feature vector <b>107</b>, and may be used when computing distances between different feature vectors.</p><p id="p-0147" num="0190">In some embodiments, feature vector <b>107</b> may be six-dimensional, having three components that each have two dimensions. A first component may include a first dimension representing the existence or absence of evidence for transfer-of-title, and a second dimension representing a confidence level and/or evidence level associated with the first component. A second component may include a first dimension representing the existence or absence of evidence for obligations, and a second dimension representing a confidence level and/or evidence level associated with the second component. And a third component may include a first dimension representing the existence or absence of evidence for consideration (e.g., transaction price), and a second dimension representing a confidence level and/or evidence level associated with the third component.</p><p id="p-0148" num="0191"><figref idref="DRAWINGS">FIG. <b>1</b>F</figref> shows an exemplary architecture for risk/timing/amount adjudication module <b>107</b> and associated system components, in accordance with some embodiments. As shown, module <b>107</b> may provide a data processing pipeline that accepts input data including feature vector <b>145</b> and ERP data from ERP data source <b>108</b> and processes said received data in order to generate output data representing respective changes in risk, timing, and amount (and associated confidence levels). Feature vector <b>145</b> may share any one or more characteristics in common with feature vector <b>106</b>, and may indicate, for example, (obligation_i, fixed consideration_i, variable consideration_i) for the ith obligation and allocated transaction price (consideration) and discount (variable consideration). As shown, ERP data source <b>108</b> may itself receive ERP data from any suitable data source for amendments for and/or reference to other (e.g., previous) contracts aside from the ones represented by the input data being analyzed.</p><p id="p-0149" num="0192">Module <b>107</b> may include three parallel classification modules <b>146</b>, <b>147</b>, and <b>148</b>, each of which may include any one more processors configured to perform respective data analysis operations based on the received input data.</p><p id="p-0150" num="0193">Risk classification module <b>146</b> may accept feature vector <b>145</b> (or <b>106</b>) as input and may generate output data indicating a risk value and an associated confidence level. The risk value may indicate whether and/or an extent to which an obligation indicated in the document data materially changed a profile of the risk (e.g., a future cash flow will no longer take place).</p><p id="p-0151" num="0194">Timing classification module <b>147</b> may accept feature vector <b>145</b> (or <b>106</b>) as input and may generate output data indicating a timing value and an associated confidence level. The output data generated by module <b>147</b> may indicate classifying whether and/or an extent to which an obligation indicated in the document data materially changed timing (e.g., the timing of the cash flow).</p><p id="p-0152" num="0195">Consideration classification module <b>148</b> may accept feature vector <b>145</b> (or <b>106</b>) as input and may generate output data indicating a consideration value (e.g., a value representing an amount) and an associated confidence level. The risk value may indicate whether and/or an extent to which an obligation indicated in the document data materially changed an amount paid amount paid as a result of a transaction.</p><p id="p-0153" num="0196">Module <b>107</b> may include three parallel classification modules <b>151</b>, <b>152</b>, and <b>153</b>, each of which may include any one or more processors configured to perform a respective comparison (a) values determined by classification modules <b>126</b>, <b>127</b>, and <b>148</b> respectively to (b) comparison ERP data.</p><p id="p-0154" num="0197">Risk comparison module <b>151</b> may compare the risk value determined by risk classification module <b>146</b> to ERP data representing a risk value, and may generate risk change data <b>154</b>, which may include a risk change value and a risk change confidence level associated with the determination of the risk change value.</p><p id="p-0155" num="0198">Timing comparison module <b>152</b> may compare the timing value determined by timing classification module <b>147</b> to ERP data representing a timing value, and may generate timing change data <b>155</b>, which may include a timing change value and a timing change confidence level associated with the determination of the timing change value.</p><p id="p-0156" num="0199">Consideration/amount comparison module <b>153</b> may compare the consideration/amount value determined by consideration/amount classification module <b>148</b> to ERP data representing a consideration/amount value, and may generate change data <b>154</b>, which may include a consideration/amount change value and a consideration/amount change confidence level associated with the determination of the consideration/amount change value.</p><p id="p-0157" num="0200">The change values (and associated confidence levels) <b>154</b>, <b>155</b>, and/or <b>156</b> may constitute, or may be comprised in, the output data generated by module <b>105</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>. The change values may be accepted as input by overall adjudication module <b>112</b>.</p><p id="p-0158" num="0201"><figref idref="DRAWINGS">FIG. <b>1</b>G</figref> shows an exemplary architecture for overall adjudication module <b>112</b> and associated system components, in accordance with some embodiments. As shown, overall adjudication module <b>112</b> provides a data processing pipeline that may accept similarity search output data from similarity search module <b>109</b> and may accept adjudication output data from adjudication module <b>107</b>. Overall adjudication module <b>112</b> may then process the received input data in order to generate output data comprising an overall adjudication for the contract data and/or amendment data originally received from data source <b>101</b>.</p><p id="p-0159" num="0202">As shown in <figref idref="DRAWINGS">FIG. <b>1</b>G</figref>, similarity search module <b>109</b> may use a case feature vector and data from case library <b>110</b> to generate similarity search output data, and the similarity search output data may be transmitted to module <b>112</b>. The similarity search output data may indicate one or more cases from case library <b>110</b> that are most similar (or sufficiently similar, e.g., in excess of a similarity threshold) to the subject case. The output from similarity search module <b>109</b> may be received by adjudication module <b>158</b>, which may apply one or more data processing operations to look up outcome data from the indicated similar cases and/or to process said outcome data from the indicated similar cases. Adjudication module <b>158</b> may generate output data indicating a risk change and associated confidence level, timing change and associated confidence level, and amount change and associated confidence level, as based on its analysis of the identified similar cases. The output data generated by module <b>158</b> may be forwarded to adjudication reconciliation engine <b>160</b>.</p><p id="p-0160" num="0203">Meanwhile, adjudication reconciliation engine <b>160</b> may also receive output data from adjudication module <b>107</b>. As discussed above, adjudication module <b>107</b> may generate output data indicating a risk change and associated confidence level, timing change and associated confidence level, and amount change and associated confidence level. In some embodiments, data received by engine <b>160</b> from module <b>107</b> and from module <b>158</b> may be in the same format; in some embodiments, data received by engine <b>160</b> from module <b>107</b> and from module <b>158</b> may be in different formats.</p><p id="p-0161" num="0204">Adjudication reconciliation engine <b>160</b> may apply one or more data processing operations to reconcile, combine, and/or otherwise process the received input data in order to generate output data as described above. Adjudication reconciliation engine <b>160</b> may, in some embodiments, average corresponding input values weighted according to confidence values and/or weighted according to one or more other weighting factors. Adjudication reconciliation engine <b>160</b> may, in some embodiments, select preferred values and/or discard non-preferred values. The overall adjudication output data generated by module <b>112</b> may include a binary indication of an adjudication (e.g., whether one or more criteria are met, such as to whether the data received meets one or more commercial-substance criteria, one or more related-party criteria, and/or one or more collectability criteria). In some embodiments, the overall adjudication output data may comprise a tuple (L, C) where L represents data indicating a likelihood that one or more criteria (e.g., commercial substance) are met and where C represents data indicating a confidence level for the adjudication. The output data generated by module <b>112</b> may be stored, transmitted, presented to a user, used to generate one or more visualizations, and/or used to trigger one or more automated system actions.</p><heading id="h-0007" level="2">Related Parties</heading><p id="p-0162" num="0205">As explained above, there is a need for improved methods for AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents, including adjudications as to whether the documents indicate that relationships amongst two or more parties and as to whether the documents represent transactions, agreements, contracts, arrangements, or other interactions amongst related parties.</p><p id="p-0163" num="0206">Improved systems meeting these needs may have application in various use cases, including in quickly and accurately assessing compliance with regulations and/or best practices regarding related-party transactions. For example, compliance with ASC 850 may require identification of related parties and adjudication as to whether one or more interactions constitute a related-party transaction.</p><p id="p-0164" num="0207">In some embodiments, compliance with regulations and/or best practices may require that financial statements disclose material related-party transactions other than compensation arrangements, expense allowances, or other similar items that occur in the ordinary course of business. For these purposes, a related party may be defined to include any party that controls or can significantly influence the management or operating policies of another entity to the extent that the other entity may be prevented from fully pursuing its own interests. Related parties may include affiliates, investees accounted for by the equity method, trusts for the benefit of employees, principal owners, management, and/or immediate family members of owners and/or management. In some embodiments, compliance and/or best practices may require that transactions with related parties be disclosed even if there is no accounting recognition made for such transactions (e.g., even if a service is performed without payment). In some embodiments, compliance and/or best practices may require that disclosures do not assert that the terms of related-party transactions were essentially equivalent to arm's-length dealings unless those claims can be substantiated. In some embodiments, compliance and/or best practices may require that, if the financial position or results of operations of the reporting entity could change significantly because of common control or common management, disclosure of the nature of the ownership or management control must be made, even if there were no transactions between the entities.</p><p id="p-0165" num="0208">Examples of related-party transactions (or other interactions) may include transactions (or other interactions) between: a parent entity and a subsidiary; two or more subsidiaries of a common parent entity; an entity and a trust for the benefit of employees of the entity (such as a pension trust or a profit-sharing trust that is managed by or under the trusteeship of the entity); an entity and its principal owners, management, and/or members of their immediate families; and/or affiliates.</p><p id="p-0166" num="0209">Transactions between related parties may occur in the normal course of business. Examples of common transactions between related parties may include: sales, purchases, and/or transfers of real and/or personal property; services received and/or furnished, such as accounting, management, engineering, and/or legal services; use of property and/or equipment by lease or otherwise; borrowings, lendings, and/or guarantees; maintenance of compensating bank balances for the benefit of a related party; intra-entity billings based on allocations of common costs; filings of consolidated tax returns.</p><p id="p-0167" num="0210">Thus, compliance with regulations and/or best practices may require accurate identification of which parties should be considered related parties to one another and of which interactions between parties should be considered related-party transactions (e.g., which interactions satisfy one or more related-party transaction criteria).</p><p id="p-0168" num="0211">Traditional methods for determination of relationships amongst parties and identification and assessment of related-party transactions rely on voluntary manual disclosure and human evaluation, which introduces inaccuracy due to human error, inefficiencies, incompleteness, and the possibility of human-introduced biases or dishonesty. Using traditional methods, it is difficult to identify undisclosed related parties from sampled transactions, and it is difficult to distinguish mere accounting mistakes from accounting fraud.</p><p id="p-0169" num="0212">Thus, there is a need for systems and methods for performing automated identification of related parties and automated identification and adjudication of related-party transactions based on processed documents or other data, so as to improve efficiency and accuracy and reduce human-introduced biases.</p><p id="p-0170" num="0213">Disclosed herein are systems configured for AI-augmented identification of related-parties and adjudication of whether an interaction (e.g., an arrangement, agreement, contract, transaction, or other underlying data) represented by one or more ingested documents (or other data) meets related-party criteria. As explained herein, the systems disclosed herein may automatically generate and iteratively/recursively augment data structures representing relationships amongst parties, such as a related party graph, based on received documents and/or interrogation of a plurality of data sources. The systems disclosed herein may further automatically adjudicate whether an interaction meets related-party criteria (e.g., whether a transaction constitutes a related-party transaction) based on the generated data structure representing related parties and/or based on anomaly detection and behavioral modeling of one or more parties to the an interaction.</p><p id="p-0171" num="0214">In some embodiments, a system for automated determination of relationships amongst parties and for automated adjudication of related-party transactions is provided. The system may be configured to receive one or more documents (e.g., PDF documents, word processing documents, JPG documents, etc.) or other data and to automatically process the received documents in order to extract information from said documents. The extracted information may be assessed to identify and characterize relationships amongst one or more parties, to identify additional relationships amongst parties based on querying additional da sources, and to determine whether the information represents one or more interactions, such as a contract or a transaction. The system may then evaluate the extracted information regarding those one or more interactions to determine whether the one or more interactions meet predefined (or dynamically determined) related-party-transaction criteria.</p><p id="p-0172" num="0215">In some embodiments, determining whether related-party-transaction criteria are met may be performed, at least in part, based on evaluating a data structure (which may be generated by the system) that represents relationships amongst parties, for example a graph data structure. determining whether related-party-transaction criteria are met may be performed, at least in part, based on behavioral modeling. In some embodiments, determining whether related-party-transaction criteria are met may be performed, at least in part, by generating and evaluating one or more feature vectors. The system may be configured to automatically generate a feature vector (which may be referred to as a &#x201c;case vector&#x201d;) that represents an identified interaction (e.g., an identified contract, transaction, or the like) in the received documents.</p><p id="p-0173" num="0216">In some embodiments, the system may initially identify one or more relationships amongst parties based on information extracted from one or more documents and/or based on information submitted by one or more users. For example, initial information about related parties may be automatically extracted, using one or more document-understanding techniques, from public disclosure documents and/or from documents provided during an audit process. The initial information may identify, for example, directors, shareholders, bond holders, investors, and/or other stakeholders as related to a corporate entity. This initial information may be used to generate a data structure, such as a graph data structure, representing an initial understanding of known relationships amongst a plurality of parties. In some embodiments, entities may be represented in the graph data structure as nodes, and relationships between entities may be represented in the graph data structure as edges linking sets of nodes together.</p><p id="p-0174" num="0217">After an initial version of the data structure representing relationships has been generated, the system may augment or otherwise update the data structure by building upon it to represent additional relationships (and/or to represent additional information about the already-depicted relationships) that were not disclosed in the initially-processed documents. In some embodiments, the system may augment or otherwise update the data structure by sending one or more queries to one or more entity databases, wherein the query inputs are based on the name/identity of the target entity and/or the name/identity of one or more entities that have been determined initially to be related to the target entity. New entities that are returned as results of these queries may be de-ambiguated and then added to the data structure representing related parties. A data structure representing related parties may be updated in response to a user request, in response to a triggering event, in response to receiving new data/documents, and/or in response to receiving a request to make an adjudication regarding a potential related-party-transaction involving an entity represented by the data structure.</p><p id="p-0175" num="0218">In some embodiments, the system may be additionally be configured to perform behavior modeling for one or more entities that are the subject of or are otherwise included in a data structure (e.g., a graph data structure) representing entity relationships. A system may, for example, analyze and assess a historical record of behaviors by one or more entities with respect to, for example, any one or more of the following behaviors:<ul id="ul0018" list-style="none">    <li id="ul0018-0001" num="0000">    <ul id="ul0019" list-style="none">        <li id="ul0019-0001" num="0219">Order-to-cash behaviors (e.g., on a per-entity basis, over an accounting period, evaluate and identify discrepancy between collectability and original credit evaluation);</li>        <li id="ul0019-0002" num="0220">Explicit &#x26; implicit discount given behaviors (e.g., as recorded in ERP data and/or as determined from actual payment data);</li>        <li id="ul0019-0003" num="0221">Collection activity behaviors (e.g., behaviors regarding treatment of overdue invoices, allowance/reserve (e.g., for writing off unpaid invoices after a certain number of days beyond invoice due date)); and/or</li>        <li id="ul0019-0004" num="0222">Management override behaviors.</li>    </ul>    </li></ul></p><p id="p-0176" num="0223">Behavioral modeling may, in some embodiments, be based on data that is extracted from the one or more documents that are received by the system and subject to one or more document-understanding processes, as described herein.</p><p id="p-0177" num="0224">Once a data structure representing related parties has been created and behavioral modeling has been performed for one or more parties represented in the data structure, the system may then use the data structure and the results of the behavioral modeling to determine any correlation between behaviors (per the behavioral models) of entities represented in a same data structure and indicated as related to one another. In some embodiments, the system may determine that a highly correlated behavior model (e.g., a correlation score exceeding a certain threshold value) and a related-party graph may indicate that there is a high risk of related-party anomaly. In some embodiments, the system may be configured to assign a score to quantify an assessed risk of related-party anomaly, as determined based on the behavior model and on the data structure representing related parties. For example, if behaviors of a transaction correlate highly with behavior models that are determined by the system to be indicative of related-party transactions, and if the data structure indicates that the parties to the transaction are related to one another, then the system may determine that there is a risk that the transaction is a &#x201c;related-party transaction&#x201d; that satisfies one or more related-party transaction criteria, for example requiring reporting or disclosure in order to comply with regulations or best practices.</p><p id="p-0178" num="0225">In some embodiments, the system may render an adjudication for an interaction, such as a transaction, represented by documents received by the system, wherein the adjudication determined whether the interaction satisfies one or more related-party-transaction criteria (e.g., according to ASC 850), for example requiring reporting or disclosure in order to comply with regulations or best practices.</p><p id="p-0179" num="0226"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> shows an exemplary method <b>200</b> for generating a plurality of graph data structures representing relationships amongst entities. The graph data structures generated in accordance with method <b>200</b> may be used, in some embodiments, in order to render one or more adjudications regarding related parties, for example by applying one or more data processing operations to the generated graph data structure(s) in order to automatically determine whether data representing two or more parties satisfies related party criteria, and/or by applying one or more data processing operations to the generated graph data structure(s) in order to automatically determine a quantification of a relationship (e.g., a relationship type and/or a relationship score) between two or more parties. In some embodiments, a system executing method <b>200</b> (e.g., a system comprising one or more processors configured to execute the method based on data received representing a plurality of parties) may store, transmit, display, and/or visualize output data comprising a graph data structure as generated by method <b>200</b> and/or comprising a determination made on the basis of automated analysis of one or more of said graph data structures. In some embodiments, the system may perform one or more automated system actions that are triggered based on the output data.</p><p id="p-0180" num="0227">As shown by block <b>201</b>, in some embodiments, the method steps shown downstream of block <b>201</b> may be performed for a given entity. An entity may comprise a person, corporation, partnership, organization, government, university, town, city, country, or the like. The system executing method <b>200</b> may receive data representing the given entity, for example including structured, unstructured, and/or partially structured data. In some embodiments, the system may extract data regarding the given entity from one or more documents, for example by applying one or more document understanding techniques. In some embodiments, the system may identity the given entity from among a plurality of entities represented in the received data. In some embodiments, the given entity may be specified by a user input received by the system.</p><p id="p-0181" num="0228">Turning first to blocks <b>202</b>-<b>208</b>, the system may generate a first graph data structure representing director relationships, parent relationships, and/or subsidiary relationships for the given entity.</p><p id="p-0182" num="0229">At block <b>202</b>, in some embodiments, the system may apply one or more data analysis operations to automatically identify, based on received documents and/or other data representing the given entity, one or more directors associated with the given entity. In some embodiments, persons or entities having a different specified role (other than director) may instead (or additionally) be identified at block <b>202</b>. In some embodiments, the system may store data and/or metadata, locally and/or remotely, representing the one or more directors identified as associated with the given entity. Data indicating the identity of the director may be stored, and metadata representing information about the director's role (e.g., time information, location information, etc.) may be stored in association therewith.</p><p id="p-0183" num="0230">At block <b>204</b>, in some embodiments, the system may apply one or more data analysis operations to automatically identify one or more entities associated with the identified director(s).</p><p id="p-0184" num="0231">The system may determine what entities are associated with the identified director(s) by analyzing received documents and/or other data representing the given entity, received documents and/or other data representing other entities, and/or any other data available to the system. The system may in some embodiments make the identification of related parties based solely on information already available to the system. In some embodiments, the system may actively seek and retrieve information associated with one or more of the identified directors, for example by scraping said information from publicly-available data sources, in order to identify entities related to the one or more directors.</p><p id="p-0185" num="0232">In some embodiments, the system may apply one or more relationship scoring algorithms to quantify an extent of a relationship between two entities in order to determine whether an entity should be designated as &#x201c;related to&#x201d; (e.g., &#x201c;associated with&#x201d;) a director. In some embodiments, a pair of entities may be designated as related only if their relationship score exceeds a predefined (or dynamically determined) threshold value.</p><p id="p-0186" num="0233">At block <b>206</b>, in some embodiments, the system may apply one or more data analysis operations to automatically identify, one or more parent entities and/or one or more subsidiary entities associated with the given entity. In some embodiments, entities having a different relationship (other than parent or subsidiary) may instead (or additionally) be identified at block <b>206</b>. In some embodiments, the system may store data and/or metadata, locally and/or remotely, representing the one or more entities identified as associated with the given entity. Data indicating the identity of the entity may be stored, and metadata representing information about the entity (e.g., time information, location information, etc.) may be stored in association therewith.</p><p id="p-0187" num="0234">The system may identify associated entities by analyzing received documents and/or other data representing the given entity, received documents and/or other data representing other entities, received documents and/or other data representing one or more of the identified directors, and/or any other data available to the system. The system may in some embodiments make the identification of related parties based solely on information already available to the system. In some embodiments, the system may actively seek and retrieve information associated with one or more of the identified directors, for example by scraping said information from publicly-available data sources, in order to identify entities related to the one or more directors.</p><p id="p-0188" num="0235">In some embodiments, the system may apply one or more relationship scoring algorithms to quantify an extent of a relationship between two entities in order to determine whether an entity should be designated as &#x201c;related to&#x201d; (e.g., &#x201c;associated with&#x201d;) the given entity. In some embodiments, a pair of entities may be designated as related only if their relationship score exceeds a predefined (or dynamically determined) threshold value.</p><p id="p-0189" num="0236">At block <b>208</b>, in some embodiments, the system may generate and store a graph data structure representing the given entity and one or more relationships between the given entity and other entities. The other entities in the graph data structure may include persons, corporations, partnerships, organizations, governments, universities, towns, cities, countries, or the like. In some embodiments, the other entities in the graph data structure may include one or more directors identified at block <b>202</b> and/or one or more subsidiary or parent organizations identified at block <b>206</b>. In some embodiments, identified entities may be included in the graph data structure only if they meet one or more criteria, such as a relationship score exceeding a threshold value.</p><p id="p-0190" num="0237">In some embodiments, the graph data structure may represent only certain kinds of relationships. For example, the graph data structure generated at block <b>202</b> may represent entities that are related to the given entity by (a) being a director of the given entity, (b) being a subsidiary of the given entity, or (c) being a parent of the given entity; while other kinds of relationships (e.g., being an employee of the given entity, being in a partnership with the given entity, etc.) may not be included.</p><p id="p-0191" num="0238">In some embodiments, the graph data structure may represent entities as nodes and may represent relationship information as edges linking pairs of nodes. The graph data structure may store identifying data and/or metadata in association with a node representing an entity. The graph data structure may store information identifying, quantifying, and/or otherwise characterizing a relationship between two entities as edges linking pairs of nodes. In some embodiments, edges may be weighted or otherwise configured in accordance with data indicating a type, strength, or other characteristic of a relationship between two nodes. For example, an edge may be weighted according to a relationship score such that an edge has a higher weight when two entities are more closely related. In some embodiments, all information available to the system about various relationship types (and various respective relationship strengths) between two entities may be combined and normalized into a single relationship-score quantification.</p><p id="p-0192" num="0239">Turning now to blocks <b>210</b>-<b>212</b>, the system may generate a second graph data structure representing one or more relationship types other than director relationships, parent relationships, and/or subsidiary relationships for the given entity.</p><p id="p-0193" num="0240">At block <b>210</b>, in some embodiments, the system may apply one or more data analysis operations to automatically identify, based on received documents and/or other data representing the given entity, one or more entities associated with the given entity (in a manner other than being a director thereof, being a parent thereof, or being a subsidiary thereof). In some embodiments, the system may store data and/or metadata, locally and/or remotely, representing the one or more entities identified as associated with the given entity. Data indicating the identity of the identified entity may be stored, and metadata representing information about the entity's relationship with the target entity (e.g., time information, location information, etc.) may be stored in association therewith.</p><p id="p-0194" num="0241">At block <b>212</b>, in some embodiments, the system may generate and store a second graph data structure, distinct from the graph data structure generated at block <b>208</b>, representing the given entity and one or more relationships between the given entity and other entities identified at block <b>210</b>. The process for generating the second graph data structure at block <b>212</b> may share one or more characteristics in common with the process for generating the second graph data structure at block <b>208</b>.</p><p id="p-0195" num="0242">As shown by the arrows from blocks <b>208</b> and <b>212</b> back to block <b>201</b>, all or part of method <b>200</b> may be performed iteratively. For example, after identifying one or more new entities that are related to the original given entity and generating an initial version of the graph data structure, a new entity may be selected (from among the nodes of the graph data structure) as the new given entity, and the process of identifying related entities may then be repeated. New nodes and/or new edges may thus be added to the previously-generated graph data structure based on newly-identified parties and/or newly-identified relationships.</p><p id="p-0196" num="0243">In some embodiments, iteration of method <b>200</b> may continue until one or more cessation conditions are met. For example, cessation conditions may include one or more of the following: a predetermined amount of time passing, a predetermined number of iterations being performed, a predetermined number of nodes being added to the graph, a predetermined number of edges being added to the graph, a predetermined number of iterations being executed with below a threshold number of edges and/or nodes being added to the graph, and/or a predetermined number of iterations being executed within a sliding window number of iterations with below a threshold number of edges and/or nodes being added to the graph in the sliding window.</p><p id="p-0197" num="0244">In some embodiments, the system may perform one or more new iterations of method <b>200</b> according to a predetermined schedule, according to a user input, and or automatically in response to one or more trigger conditions (e.g., the system detecting that new data is available for analysis).</p><p id="p-0198" num="0245">In some embodiments, the system may select a new given entity as the focus for an iteration of method <b>200</b> according to a random or quasi-random selection. In some embodiments, a new given entity for an iteration may be selected according to a user input. In some embodiments, a new given entity for an iteration may be selected based on the new given entity's proximity to (or distance from) a previously-analyzed entity. In some embodiments, a new given entity for an iteration may be selected based on the new given entity having been recently added to the graph, for example based on it being added in a previous iteration and/or based on it not being analyzed as a target entity yet.</p><p id="p-0199" num="0246">In some embodiments, after generating one or more graph data structures, the system may analyze the one or more graph data structures to determine whether a pair of entities meets related-party criteria. In some embodiments, related party criteria may include that a pair of entities are indicated as related by each being included in the same graph data structure. In some embodiments, related party criteria may include that a pair of entities are indicated as related by each being included in a minimum threshold number of the same graph data structures. In some embodiments, related party criteria may include that a pair of entities are indicated as related by appearing in the same graph data structure (or a threshold minimum number of the same graph data structures) within a certain distance of one another. For example, the system may calculate a distance by calculating a number of &#x201c;hops&#x201d; separating two nodes representing the two entities in a graph data structure, and if the number of hops falls below a threshold distance, then the two entities may be determined to meet related party criteria. In some embodiments, calculating the distance between two parties in a graph data structure may include calculating a weighted distance where the distance between nodes is calculated in accordance with the number the hops as weighted on a per-hop basis according to the weight assigned to the edge connecting the nodes for that particular hop. Thus, when a pathway between two entities includes edges that are weighted more heavily, the distance between the entities may be calculated as less (indicating that the entities are more closely related) than if the edges were assigned low weight values.</p><heading id="h-0008" level="2">Collectability</heading><p id="p-0200" num="0247">As explained above, there is a need for improved methods for AI-augmented automated analysis of documents in order to quickly and efficiently make various adjudications based on the documents, including adjudications as to whether the documents indicate a likelihood of collection (e.g., an adjudication of collectability).</p><p id="p-0201" num="0248">Improved systems meeting these needs may have application in various use cases, including in quickly and accurately assessing compliance with regulations and/or best practices regarding attesting/verifying that collection is probable. For example, compliance with ASC 606 requires that collection of a transaction price for providing services or goods to a customer must be probable, where &#x201c;probable&#x201d; means that the future event is likely to occur.</p><p id="p-0202" num="0249">Traditional methods for determination of collectability provide insufficient granularity for intent interpretation &#x26; behavior analysis. For example, an invoice may become overdue and eventually go into a collection process for a wide variety of reasons, such as the invoice not being received, the content or amount of the invoice being disputed, or the party to whom the invoice was issued holding payment as bargaining chip for additional concession. Existing approaches to determining collectability measure collectability at the customer level, rather than at the transaction/contract level. These existing approaches do not consider that a customer might postpone the payment for a specific contract and/or transaction because it is in dispute.</p><p id="p-0203" num="0250">Traditional methods for determination of collectability are limited by being unduly backward looking. Collectability intends to measure the capacity and intention of the customer to pay on time. Existing approaches are based on examining payment history (assisted by the some of the ERPs), and do not sufficiently take into account the current and future situations of parties, their value chains (both upstream or downstream), and broader economic circumstances. For example, a strike at a port could prevent the export of goods and import of parts, and the ripple effect on cash flow of an entity could be anticipated. Existing techniques fail to account for possibilities such as these.</p><p id="p-0204" num="0251">Traditional methods for determination of collectability do not account for &#x201c;black swan&#x201d; events (e.g., rare events). Existing approaches do not consider broader economic factors. For example, catastrophic events such as major terrorist attacks, major national/global financial crises, and/or pandemics may all incur sudden, substantial, and comprehensive disruption that cannot be forecast from past events alone. When such black swan events occur, it is likely that the many entities may attempt to preserve the cash, including drawing down credit lines, postponing payment, and/or pausing efforts that do not contribute to immediate cash flow. For collectability consideration, it is thus beneficial to consider fallout (in terms of collectability) from such black swan events, even though prediction of the actual occurrence of such events may not be needed.</p><p id="p-0205" num="0252">Thus, there is a need for systems and methods for performing automated adjudication of collectability that are more efficient and accurate than existing techniques. There is a need for systems that apply improved collectability adjudication techniques in such a way that provides greater granularity compared to existing systems, is not unduly/solely backward-looking, and adequately accounts for consequences of potential black swan events.</p><p id="p-0206" num="0253">Disclosed herein are systems configured for AI-augmented adjudication of collectability based on one or more ingested documents (or other data). As explained herein, the systems disclosed herein may receive one or more documents (or other data) representing one more parties and interactions (e.g., contracts, transactions, etc.) between the parties, and the system may automatically render an adjudication as to whether one or more of the parties and/or the interactions satisfy one or more collectability criteria. Collectability criteria may include a criteria that collection is more likely than not, and/or may include a criteria that the likelihood of collection meets a certain likelihood threshold (e.g., 75%, 90%, etc.).</p><p id="p-0207" num="0254">In order to determine whether collection is probable, a transaction price may first be determined before assessing collectability, where the determined transaction price accounts for any price concessions. Explicit concessions and implicit concessions may be considered; for example, an implicit concession may be supported by a vendor's history of providing a discount to a customer.</p><p id="p-0208" num="0255">In order to assess financial capacity of an entity (e.g., a customer), in order to attempt to assess likelihood of collection, any one or more of the following may be considered: credit risk, credit history, past experience with an entity, past experience with a class of entities into which an entity falls, current economic conditions of an entity's industry, and/or an entity's income.</p><p id="p-0209" num="0256">Collectability may be reassessed if significant changes in one or more facts or circumstances arise, for example in the event of one or more of the following: a party declares bankruptcy during a contract and/or party reports negative cash flow subsequent to the contract inception. If reassessment indicates that collectability is less than probable, then a vendor may stops recognizing revenue, but the vendor may not need to reverse previously recognized revenue.</p><p id="p-0210" num="0257">If partial payment is received but collectability for the entire payment (e.g., for the remaining portion of payment) is less than probable, then, in some embodiments, one or more of three events must occur for the payment to be treated as revenue: (1) the collecting party has no remaining obligations to the paying party, and all of the payment promised by the paying party has been received and is nonrefundable; (2) the contract/agreement has been terminated and the payment is nonrefundable; and/or (3) the party collecting payment has transferred control of goods or services to which the consideration that has been received relates, the party collecting payment has stopped transferring goods or services to the other party (if applicable) and has no obligation under the contract to transfer additional goods or services, and the consideration received from the other party is nonrefundable.</p><p id="p-0211" num="0258">In some embodiments, a system may receive one or more documents and may subject said received documents to one or more document-understanding techniques, for example as described herein, in order to extract data from said received documents. The data extracted from said documents may be used to render an adjudication as to collectability.</p><p id="p-0212" num="0259">In some embodiments, an adjudication as to collectability may be rendered on the basis, at least in part, of endogenous information (received by the system from one or more sources that is endogenous with respect to an interaction for which collectability is to be adjudicated). In some embodiments, an adjudication as to collectability may be rendered on the basis, at least in part, of exogenous information (received by the system from one or more sources that is exogenous with respect to an interaction for which collectability is to be adjudicated). In some embodiments, the system may receive endogenous information and exogenous information together and may subject the received information to one or more data processing operations (e.g., models) in order to identify the endogenous information and identify the exogenous information. In some embodiments, the system may receive an initial input indicating certain endogenous and/or exogenous information, and the system may locate and identify other endogenous and/or exogenous information based on the information received.</p><p id="p-0213" num="0260">In some embodiments, endogenous information that is received may include information and knowledge related to a contract (or other interaction) that can be used to determine a level of uncertainty for on-time payment (e.g., used to assess likelihood of collection). Endogenous information received may include, for example:<ul id="ul0020" list-style="none">    <li id="ul0020-0001" num="0000">    <ul id="ul0021" list-style="none">        <li id="ul0021-0001" num="0261">payment history, including differentiation for different products, services and/or product/service categories;</li>        <li id="ul0021-0002" num="0262">credit assessment (e.g., conducted when onboarding a customer, prior to initiation of a contract/interaction for which collectability is being assessed);</li>        <li id="ul0021-0003" num="0263">payment history of other entities (e.g., entities within the same sector/industry, to establish a benchmark);</li>        <li id="ul0021-0004" num="0264">payment history of other entities that are part of the value chain (upstream and/or downstream) of the target entity for which collectability is being assessed.</li>    </ul>    </li></ul></p><p id="p-0214" num="0265">In some embodiments, exogenous information that is received may include information and knowledge that can be used to determine a level of uncertainty for on-time payment (e.g., used to assess likelihood of collection). Exogenous information received may include, for example:<ul id="ul0022" list-style="none">    <li id="ul0022-0001" num="0000">    <ul id="ul0023" list-style="none">        <li id="ul0023-0001" num="0266">economic behavior of an industry related to the target entity;</li>        <li id="ul0023-0002" num="0267">economic behavior of a value chain (upstream and/or downstream) of the target entity;</li>        <li id="ul0023-0003" num="0268">information regarding news events related to the target entity, industry, and/or value chain of the target entity;</li>        <li id="ul0023-0004" num="0269">product review information;</li>        <li id="ul0023-0005" num="0270">employee sentiment information (e.g., sourced vis social media);</li>        <li id="ul0023-0006" num="0271">consumer sentiment information (e.g., sourced vis social media).</li>    </ul>    </li></ul></p><p id="p-0215" num="0272">In some embodiments, an adjudication as to collectability may be rendered on the basis, at least in part, of information relating to one or more disputes between two or more entities relevant to a contract or other interaction being assessed for collectability. This may include disputes involving the target contract/interaction and/or disputes involving other contracts/interactions. This information may be received as part of and/or in addition to the endogenous and/or exogenous information described above. In some embodiments, in the case of consignment agreement, disputes among entities may be included in consideration.</p><p id="p-0216" num="0273">Once the endogenous information and exogenous information (optionally, along with any other information) is received by the system and subject to any data processing operations (e.g., document-understanding models), the system may use the received information to generate a collectability uncertainty model. The collectability uncertainty model may be developed, at least in part, based on the endogenous information and/or the exogenous information. The collectability uncertainty model may be configured generate an output regarding collectability uncertainty&#x2014;e.g., predicting the uncertainty of the on-time payment behavior&#x2014;for a particular entity or group of entities and/or for a particular interaction/contract or group of interactions/contracts.</p><p id="p-0217" num="0274">A baseline uncertainty for the collectability uncertainty model may be derived from (e.g., determined on the basis of) previous payment behavior. Uncertainty may be increased for an entity with previous overdue payment, deteriorating payment behavior for the entity over time, ongoing disputes for the particular contract/interaction being assessed, and/or deteriorating payment behavior observed from one or more other entities in the same industry as the target entity.</p><p id="p-0218" num="0275">In addition to the baseline uncertainty, one or more predictive models may be used to predict cash flow for the target entity for a relevant period of time for the contract/interaction being assessed. In some embodiments, a predictive model may be based, at least in part, on the exogenous information received by the system such as information regarding economic behavior of an industry relevant to the target entity, economic behavior of the value chain of the target entity, previous financial performance of the target entity (e.g., which may be available in the case that the target company is a public company), and/or information regarding the broader (e.g., local, national, and/or global) economic environment.</p><p id="p-0219" num="0276">The system may be configured to apply one or more stress tests to the collectability uncertainty model (and/or to the one or more predictive models included therein) in order to assess performance of the model in response to black swan events. These stress tests may be used to validate the resiliency of the model in response to black swan events, for example in assessing the accuracy of behaviors predicted by the model in response to such events. This stress testing may be performed after the occurrence of a black swan event, when real-world data from the consequences of the event are available in order to assess the model's performance. In some embodiments, the model may be refined or otherwise updated in accordance with the results (e.g., output data regarding accuracy of the model) of one or more of said stress tests.</p><p id="p-0220" num="0277">The collectability uncertainty model may be configured to leverage information regarding product reviews, employee sentiment, and/or consumer sentiment in generating an output regarding collectability uncertainty (e.g., predicting the uncertainty of the on-time payment behavior).</p><p id="p-0221" num="0278">In some embodiments, the collectability uncertainty model may be configured to receive as inputs information regarding the specific contract/interaction to be adjudicated, and to use this information to adjudicate collectability. (In some embodiments, the system may consider this information in an alternative or additional manner aside from application of the collectability uncertainty model as described herein.) In some embodiments, the information regarding the specific contract/interaction to be adjudicated may include fine0grained information including due diligence information, correspondence with the entity since an invoice was created, any dispute information between entities on the contract/interaction to be adjudicated (whether regarding the contract/interaction to be adjudicated or regarding one or more other contracts/interactions). In some embodiments, in the case of a consignment agreement, disputes among entities may be included in consideration. After the collectability uncertainty model has been generated and optionally refined, the system may apply the collectability uncertainty model to adjudicate collectability for the target contract/interaction to be adjudicated. The system may receive information regarding the specific contract/interaction to be adjudicated, and may use this information to adjudicate collectability. Applying the collectability uncertainty model may include providing, as input, the information regarding the specific contract/interaction to be adjudicated (e.g., as described above), such that the collectability uncertainty model can generate output data indicating a metric for collectability. The output data may include a score for collectability, a classification for collectability (e.g., &#x201c;collectible&#x201d; versus &#x201c;not collectible&#x201d;), a predicted percentage likelihood that full collection will be made, a predicted percentage likelihood that partial payment will be made, and/or a predicted percentage likelihood that full or partial payment will be made by one or more particular points in time. The generated output data may be displayed to a user, transmitted to one or more other systems for storage, used as the basis for one or more visualizations, or used as a triggering event to applying one or more data processing operations to the generated graph data structure(s) in order to automatically determine.</p><p id="p-0222" num="0279"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> shows an exemplary logical architecture for a rendering an adjudication of collectability. All or part of the logical architecture shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> may be applied by the systems described herein, including by being applied as part of the collectability uncertainty model described above. As shown, the logical architecture in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> may identify a customer for whom collectability is to be evaluated and may determine whether available credit data indicates a low risk. If available credit data does not indicate a low risk, then the system may render an adjudication indicating that the interaction is not collectible. If available credit data does indicate a low risk, then the system may analyze available payment history data for the trailing 12-month time period. If the payment history data indicates a number of days for which sales were outstanding (DSO) and/or indicates delinquent invoice data that exceeds a threshold, then the system may render an adjudication indicating that the interaction is not collectible. If the payment history data does not cause an adjudication that the interaction is not collectible, then the system may analyze adverse events data to determine whether adverse events are likely to significantly impact the customer's cash flow. If a significant cash-flow impact is determined to be sufficiently likely, then the system may render an adjudication indicating that the interaction is not collectible. If the system determines that a significant cash-flow impact is not sufficiently likely, then the system may render an adjudication indicating that the interaction is collectible.</p><p id="p-0223" num="0280"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> shows an exemplary method <b>301</b> for applying a plurality of models to adjudicate collectability based on customer data and a plurality of data sources. Method <b>301</b> may be applied by a system comprising one or more processors. Method <b>301</b> may share any one or more characteristics in common with the methods described above with reference to the logical architecture for rendering an adjudication of collectability shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>.</p><p id="p-0224" num="0281">At block <b>302</b>, in some embodiments, the system may identify data representing an account receivable. In some embodiments, method <b>301</b> may be applied for each account receivable in an available dataset or across multiple datasets.</p><p id="p-0225" num="0282">At block <b>304</b>, in some embodiments, the system may identify an entity (e.g., a customer) indicated in the account receivable that was identified at block <b>302</b>. In some embodiments, method <b>301</b> may be applied for each entity in the identified account receivable.</p><p id="p-0226" num="0283">At block <b>306</b>, in some embodiments, the system may retrieve data, if available, indicating a third-party rating or quantification for the identified customer. This data may be retrieved from any suitable public or private data source. For example, the system may retrieve data relating to a D&#x26;B rating or a rating by any suitable agency that quantifies or characterizes payability or creditworthiness for the customer.</p><p id="p-0227" num="0284">At block <b>308</b>, in some embodiments, the system may retrieve data, if available, indicating industry benchmark data, industry trend data, or the like. This data may be retrieved from any suitable public or private data source. In some embodiments, industry trend data may be generated by the system based on data relating to a plurality of individual organizations in the same industry or sector. For example, the system may retrieve data regarding financial performance of other entities in a same industry as the identified entity.</p><p id="p-0228" num="0285">At block <b>310</b>, in some embodiments, the system may retrieve data, if available, indicating any news or current events that are related to the identified entity, are related to an industry or sector of the identified entity, and/or could otherwise be expected to impact the identified entity, for example by impacting cash flow. This data may be retrieved from any suitable public or private data source.</p><p id="p-0229" num="0286">At block <b>312</b>, in some embodiments, the system may retrieve data, if available, indicating past payment behavior for the identified entity. This data may be retrieved from any suitable public or private data source.</p><p id="p-0230" num="0287">At block <b>314</b>, following from block <b>302</b>, the system may identify an invoice associate with the identified account receivable. In some embodiments, method <b>301</b> may be applied for each invoice in the identified account receivable.</p><p id="p-0231" num="0288">At block <b>316</b>, in some embodiments, the system may retrieve data, if available, indicating one or more issues and/or disputes related between two or more entities relevant to the identified invoice, including disputes regarding the identified invoice and/or involving other invoices or other interactions.</p><p id="p-0232" num="0289">At block <b>318</b>, the data retrieved at blocks <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b>, and/or <b>316</b> may be processed via a collectability prediction model. In some embodiments, the collectability prediction model may be configured in accordance with the data retrieved at blocks <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b>, and/or <b>316</b>. If data from one or more of blocks <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b>, and/or <b>316</b> is not available, then the model may be configured based on the other data that is available.</p><p id="p-0233" num="0290">In some embodiments, the collectability prediction model may be configured to accept data regarding the invoice identified at block <b>314</b> (or another invoice involving the identified entity) and to process the received data to generate an output, wherein the output may include collectability due date <b>320</b> and associated confidence level 322. The output data may include a tuple indicating a likelihood of collection and an associated confidence for the collection prediction. As examples, (100%, 90%) may indicate full collection by the due date with 90% confidence on the prediction, while (50%, 65%) may indicate 50% collection by due date with 65% confidence on the prediction.</p><p id="p-0234" num="0291">At block <b>324</b>, in some embodiments, the system may receive data indicating a collection or payment event associated with the identified invoice for which the outputs of model <b>318</b> were previously generated. Based on the data indicating a collection or payment event (and, optionally, in response to receiving said data), the system may apply one or more continuous learning data processing techniques in order process the received data and to update collectability prediction model <b>318</b>, such that model <b>318</b> may be improved for future applications.</p><heading id="h-0009" level="2">Computer</heading><p id="p-0235" num="0292"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of a computer, according to some embodiments. Computer <b>400</b> can be a component of a system for providing an AI-augmented auditing platform and/or for performing AI-augmented adjudication of commercial substance, related parties, and/or collectability. In some embodiments, computer <b>400</b> may execute any one or more of the methods described herein.</p><p id="p-0236" num="0293">Computer <b>400</b> can be a host computer connected to a network. Computer <b>400</b> can be a client computer or a server. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, computer <b>400</b> can be any suitable type of microprocessor-based device, such as a personal computer, workstation, server, or handheld computing device, such as a phone or tablet. The computer can include, for example, one or more of processor <b>410</b>, input device <b>420</b>, output device <b>430</b>, storage <b>440</b>, and communication device <b>460</b>. Input device <b>420</b> and output device <b>430</b> can correspond to those described above and can either be connectable or integrated with the computer.</p><p id="p-0237" num="0294">Input device <b>420</b> can be any suitable device that provides input, such as a touch screen or monitor, keyboard, mouse, or voice-recognition device. Output device <b>430</b> can be any suitable device that provides an output, such as a touch screen, monitor, printer, disk drive, or speaker.</p><p id="p-0238" num="0295">Storage <b>440</b> can be any suitable device that provides storage, such as an electrical, magnetic, or optical memory, including a random access memory (RAM), cache, hard drive, CD-ROM drive, tape drive, or removable storage disk. Communication device <b>460</b> can include any suitable device capable of transmitting and receiving signals over a network, such as a network interface chip or card. The components of the computer can be connected in any suitable manner, such as via a physical bus or wirelessly. Storage <b>440</b> can be a non-transitory computer-readable storage medium comprising one or more programs, which, when executed by one or more processors, such as processor <b>410</b>, cause the one or more processors to execute methods described herein.</p><p id="p-0239" num="0296">Software <b>450</b>, which can be stored in storage <b>440</b> and executed by processor <b>410</b>, can include, for example, the programming that embodies the functionality of the present disclosure (e.g., as embodied in the systems, computers, servers, and/or devices as described above). In some embodiments, software <b>450</b> can include a combination of servers such as application servers and database servers.</p><p id="p-0240" num="0297">Software <b>450</b> can also be stored and/or transported within any computer-readable storage medium for use by or in connection with an instruction execution system, apparatus, or device, such as those described above, that can fetch and execute instructions associated with the software from the instruction execution system, apparatus, or device. In the context of this disclosure, a computer-readable storage medium can be any medium, such as storage <b>440</b>, that can contain or store programming for use by or in connection with an instruction execution system, apparatus, or device.</p><p id="p-0241" num="0298">Software <b>450</b> can also be propagated within any transport medium for use by or in connection with an instruction execution system, apparatus, or device, such as those described above, that can fetch and execute instructions associated with the software from the instruction execution system, apparatus, or device. In the context of this disclosure, a transport medium can be any medium that can communicate, propagate, or transport programming for use by or in connection with an instruction execution system, apparatus, or device. The transport-readable medium can include but is not limited to, an electronic, magnetic, optical, electromagnetic, or infrared wired or wireless propagation medium.</p><p id="p-0242" num="0299">Computer <b>400</b> may be connected to a network, which can be any suitable type of interconnected communication system. The network can implement any suitable communications protocol and can be secured by any suitable security protocol. The network can comprise network links of any suitable arrangement that can implement the transmission and reception of network signals, such as wireless network connections, T1 or T3 lines, cable networks, DSL, or telephone lines.</p><p id="p-0243" num="0300">Computer <b>400</b> can implement any operating system suitable for operating on the network. Software <b>450</b> can be written in any suitable programming language, such as C, C++, Java, or Python. In various embodiments, application software embodying the functionality of the present disclosure can be deployed in different configurations, such as in a client/server arrangement or through a Web browser as a Web-based application or Web service, for example.</p><p id="p-0244" num="0301">Following is a list of embodiments:<ul id="ul0024" list-style="none">    <li id="ul0024-0001" num="0000">    <ul id="ul0025" list-style="none">        <li id="ul0025-0001" num="0302">Embodiment 1. A system for classifying documents, the system comprising one or more processors configured to cause the system to:        <ul id="ul0026" list-style="none">            <li id="ul0026-0001" num="0303">receive data representing a document;</li>            <li id="ul0026-0002" num="0304">apply one or more natural language processing techniques to the received data to generate a feature vector representing the document;</li>            <li id="ul0026-0003" num="0305">identify, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector;</li>            <li id="ul0026-0004" num="0306">apply a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and</li>            <li id="ul0026-0005" num="0307">determine, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</li>        </ul>        </li>        <li id="ul0025-0002" num="0308">Embodiment 2. The system of embodiment 1, wherein:        <ul id="ul0027" list-style="none">            <li id="ul0027-0001" num="0309">the one or more processors are configured to identify, based on the feature vector, a cluster of feature vectors from the case library that has a highest level of similarity to the feature vector amongst feature vector clusters in the case library; and</li>            <li id="ul0027-0002" num="0310">wherein the determination of the adjudication is further based on the identified cluster of feature vectors.</li>        </ul>        </li>        <li id="ul0025-0003" num="0311">Embodiment 3. The system of any one of embodiments 1-2, wherein the plurality of characteristics comprises one or more of the following: a risk characteristic, a timing characteristic, and an amount characteristic.</li>        <li id="ul0025-0004" num="0312">Embodiment 4. The system of any one of embodiments 1-3, wherein applying the plurality of models to the feature vector comprises computing a plurality of characteristic and comparing the plurality of computed characteristics to corresponding baseline characteristics obtained from an ERP data source to compute the respective changes.</li>        <li id="ul0025-0005" num="0313">Embodiment 5. The system of any one of embodiments 1-4, wherein computing the respective changes comprises generating a plurality of respective change values and a plurality of respective change confidence levels.</li>        <li id="ul0025-0006" num="0314">Embodiment 6. The system of any one of embodiments 1-5, wherein applying the one or more natural language processing techniques to the received data to generate a feature vector comprises:        <ul id="ul0028" list-style="none">            <li id="ul0028-0001" num="0315">applying a plurality of sets of models in parallel to one another, wherein each of the sets of models is configured to process the received data to generate respective output data; and</li>            <li id="ul0028-0002" num="0316">storing the output data from each of the models in the feature vector.</li>        </ul>        </li>        <li id="ul0025-0007" num="0317">Embodiment 7. The system of embodiment 6, wherein a first set of models of the plurality of sets of models comprises a first sentence classification module and a classification module configured to generate output data relating to a first type of content of the document.</li>        <li id="ul0025-0008" num="0318">Embodiment 8. The system of any one of embodiments 6-7, wherein a second set of models of the plurality of sets of models comprises structural classification module, a linguistic modality classification module, and a classification module configured to generate output data relating to a second type of content of the document.</li>        <li id="ul0025-0009" num="0319">Embodiment 9. The system of any one of embodiments 6-8, wherein a third set of models of the plurality of sets of models comprises a second sentence classification module and a classification module configured to generate output data relating to a third type of content of the document.</li>        <li id="ul0025-0010" num="0320">Embodiment 10. The system of any one of embodiments 1-9, wherein determining the adjudication classification comprises determining whether the document meets commercial substance criteria.</li>        <li id="ul0025-0011" num="0321">Embodiment 11. The system of any one of embodiments 1-10, wherein determining the adjudication classification and the adjudication confidence score comprises applying an adjudication reconciliation data processing operation based on data associated with the identified second feature vector and based on the computed respective changes for the plurality of characteristics.</li>        <li id="ul0025-0012" num="0322">Embodiment 12. A non-transitory computer-readable storage medium storing instructions for classifying documents, the instructions configured to be executed by one or more processors to cause the system to:        <ul id="ul0029" list-style="none">            <li id="ul0029-0001" num="0323">receive data representing a document;</li>            <li id="ul0029-0002" num="0324">apply one or more natural language processing techniques to the received data to generate a feature vector representing the document;</li>            <li id="ul0029-0003" num="0325">identify, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector;</li>            <li id="ul0029-0004" num="0326">apply a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and</li>            <li id="ul0029-0005" num="0327">determine, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</li>        </ul>        </li>        <li id="ul0025-0013" num="0328">Embodiment 13. A method for classifying documents, wherein the method is executed by a system comprising one or more processors, the method comprising:        <ul id="ul0030" list-style="none">            <li id="ul0030-0001" num="0329">receiving data representing a document;</li>            <li id="ul0030-0002" num="0330">applying one or more natural language processing techniques to the received data to generate a feature vector representing the document;</li>            <li id="ul0030-0003" num="0331">identifying, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector;</li>            <li id="ul0030-0004" num="0332">applying a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and</li>            <li id="ul0030-0005" num="0333">determining, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</li>        </ul>        </li>        <li id="ul0025-0014" num="0334">Embodiment 14. A system for identifying related parties within a plurality of databases, the system comprising one or more processors configured to cause the system to:        <ul id="ul0031" list-style="none">            <li id="ul0031-0001" num="0335">receive a data set indicating a first set of parties related to an entity;</li>            <li id="ul0031-0002" num="0336">generate, based on the first set of parties, a graph data structure representing a first plurality of relationships between the entity and the first set of parties;</li>            <li id="ul0031-0003" num="0337">submit one or more the parties of the first set of parties as one or more input queries to obtain, from a plurality of databases, a second set of parties related to the one or more input queries; and</li>            <li id="ul0031-0004" num="0338">update, based on the second set of parties, the graph data structure to represent a second plurality of relationships between the entity and the second set of parties.</li>        </ul>        </li>        <li id="ul0025-0015" num="0339">Embodiment 15. The system of embodiment 14, wherein the one or more processors are configured to apply one or more deambiguation models to the second set of parties before updating the graph data structure based on the second set of parties.</li>        <li id="ul0025-0016" num="0340">Embodiment 16. A non-transitory computer-readable storage medium storing instructions for identifying related parties within a plurality of databases, the instructions configured to be executed by a system comprising one or more processors configured to cause the system to:        <ul id="ul0032" list-style="none">            <li id="ul0032-0001" num="0341">receive a data set indicating a first set of parties related to an entity;</li>            <li id="ul0032-0002" num="0342">generate, based on the first set of parties, a graph data structure representing a first plurality of relationships between the entity and the first set of parties;</li>            <li id="ul0032-0003" num="0343">submit one or more the parties of the first set of parties as one or more input queries to obtain, from a plurality of databases, a second set of parties related to the one or more input queries; and</li>            <li id="ul0032-0004" num="0344">update, based on the second set of parties, the graph data structure to represent a second plurality of relationships between the entity and the second set of parties.</li>        </ul>        </li>        <li id="ul0025-0017" num="0345">Embodiment 17. A method for identifying related parties within a plurality of databases, wherein the method is executed by a system comprising one or more processors, the method comprising:        <ul id="ul0033" list-style="none">            <li id="ul0033-0001" num="0346">receiving a data set indicating a first set of parties related to an entity;</li>            <li id="ul0033-0002" num="0347">generating, based on the first set of parties, a graph data structure representing a first plurality of relationships between the entity and the first set of parties;</li>            <li id="ul0033-0003" num="0348">submitting one or more the parties of the first set of parties as one or more input queries to obtain, from a plurality of databases, a second set of parties related to the one or more input queries; and</li>            <li id="ul0033-0004" num="0349">updating, based on the second set of parties, the graph data structure to represent a second plurality of relationships between the entity and the second set of parties.</li>        </ul>        </li>        <li id="ul0025-0018" num="0350">Embodiment 18. A system for anomaly recognition and analysis, the system comprising one or more processors configured to cause the system to:        <ul id="ul0034" list-style="none">            <li id="ul0034-0001" num="0351">receive input data representing a plurality of interactions between a first entity and a plurality of respective entities;</li>            <li id="ul0034-0002" num="0352">apply one or more anomaly-recognition models to generate anomaly data representing a first subset of the interactions as anomalous; and</li>            <li id="ul0034-0003" num="0353">identify a second subset of the interactions, wherein the second subset is a subset of the first subset, wherein identification of the second subset is based on the anomaly data and based on a data structure representing a plurality of relationships between the first entity and a set of entities related to the entity.</li>        </ul>        </li>        <li id="ul0025-0019" num="0354">Embodiment 19. The system of embodiment 18, wherein the input data comprises transaction data.</li>        <li id="ul0025-0020" num="0355">Embodiment 20. The system of any one of embodiments 18-19, wherein the second subset of interactions are identified as transactions for which there is an elevated risk of related-party anomalies.</li>        <li id="ul0025-0021" num="0356">Embodiment 21. A non-transitory computer-readable storage medium storing instructions for anomaly recognition and analysis, the instructions configured to be executed by a system comprising one or more processors to cause the system to:        <ul id="ul0035" list-style="none">            <li id="ul0035-0001" num="0357">receive input data representing a plurality of interactions between a first entity and a plurality of respective entities;</li>            <li id="ul0035-0002" num="0358">apply one or more anomaly-recognition models to generate anomaly data representing a first subset of the interactions as anomalous; and</li>            <li id="ul0035-0003" num="0359">identify a second subset of the interactions, wherein the second subset is a subset of the first subset, wherein identification of the second subset is based on the anomaly data and based on a data structure representing a plurality of relationships between the first entity and a set of entities related to the entity.</li>        </ul>        </li>        <li id="ul0025-0022" num="0360">Embodiment 22. A method for anomaly recognition and analysis, wherein the method is executed by a system comprising one or more processors, the method comprising:        <ul id="ul0036" list-style="none">            <li id="ul0036-0001" num="0361">receiving input data representing a plurality of interactions between a first entity and a plurality of respective entities;</li>            <li id="ul0036-0002" num="0362">applying one or more anomaly-recognition models to generate anomaly data representing a first subset of the interactions as anomalous; and</li>            <li id="ul0036-0003" num="0363">identifying a second subset of the interactions, wherein the second subset is a subset of the first subset, wherein identification of the second subset is based on the anomaly data and based on a data structure representing a plurality of relationships between the first entity and a set of entities related to the entity.</li>        </ul>        </li>        <li id="ul0025-0023" num="0364">Embodiment 23. A system for behavioral modeling and analysis, the system comprising one or more processors configured to cause the system to:        <ul id="ul0037" list-style="none">            <li id="ul0037-0001" num="0365">receive first input data comprising a data structure representing a relationships amongst a plurality of entities;</li>            <li id="ul0037-0002" num="0366">receive second input data representing behavior of one or more of the entities represented in the data structure; and</li>            <li id="ul0037-0003" num="0367">apply one or more behavioral models to determine, based on the first input data and the second input data, a risk of related-party anomaly represented by the second input data.</li>        </ul>        </li>        <li id="ul0025-0024" num="0368">Embodiment 24. A non-transitory computer-readable storage medium storing instructions for behavioral modeling and analysis, the instructions configured to be executed by a system comprising one or more processors to cause the system to:        <ul id="ul0038" list-style="none">            <li id="ul0038-0001" num="0369">receive first input data comprising a data structure representing a relationships amongst a plurality of entities;</li>            <li id="ul0038-0002" num="0370">receive second input data representing behavior of one or more of the entities represented in the data structure; and</li>            <li id="ul0038-0003" num="0371">apply one or more behavioral models to determine, based on the first input data and the second input data, a risk of related-party anomaly represented by the second input data.</li>        </ul>        </li>        <li id="ul0025-0025" num="0372">Embodiment 25. A method for behavioral modeling and analysis, wherein the method is executed by a system comprising one or more processors, the method comprising:        <ul id="ul0039" list-style="none">            <li id="ul0039-0001" num="0373">receive first input data comprising a data structure representing a relationships amongst a plurality of entities;</li>            <li id="ul0039-0002" num="0374">receive second input data representing behavior of one or more of the entities represented in the data structure; and</li>            <li id="ul0039-0003" num="0375">apply one or more behavioral models to determine, based on the first input data and the second input data, a risk of related-party anomaly represented by the second input data.</li>        </ul>        </li>        <li id="ul0025-0026" num="0376">Embodiment 26. A system for identifying relationships between entities represented within one or more data sets, the system comprising one or more processors configured to cause the system to:        <ul id="ul0040" list-style="none">            <li id="ul0040-0001" num="0377">receive one or more data sets representing a plurality of entities;</li>            <li id="ul0040-0002" num="0378">generate, based at least in part on the one or more data sets, a graph data structure representing entities amongst the plurality of entities as nodes and representing relationships between pairs of entities as edges between corresponding pairs of nodes;</li>            <li id="ul0040-0003" num="0379">receive input data indicating a pair of query entities; and</li>            <li id="ul0040-0004" num="0380">determine, based at least in part on the graph data structure, whether one or more related-entity criteria are satisfied for the pair of query entities.</li>        </ul>        </li>        <li id="ul0025-0027" num="0381">Embodiment 27. The system of embodiment 26, wherein generating the graph data structure comprises:        <ul id="ul0041" list-style="none">            <li id="ul0041-0001" num="0382">selecting a first target entity from amongst the plurality of entities;</li>            <li id="ul0041-0002" num="0383">identifying a first set of relationships between the target entity and one or more other entities within the plurality of entities; and</li>            <li id="ul0041-0003" num="0384">storing data in the graph data structure representing the first set of relationships.</li>        </ul>        </li>        <li id="ul0025-0028" num="0385">Embodiment 28. The system of embodiment 27, wherein generating the graph data structure comprises:        <ul id="ul0042" list-style="none">            <li id="ul0042-0001" num="0386">selecting a second target entity from amongst the one or more entities identified in the first set of relationships as related to the first target entity;</li>            <li id="ul0042-0002" num="0387">identifying a second set of relationships between the second entity and one or more other entities within the plurality of entities; and</li>            <li id="ul0042-0003" num="0388">storing data in the graph data structure representing the second set of relationships.</li>        </ul>        </li>        <li id="ul0025-0029" num="0389">Embodiment 29. The system of any one of embodiments 26-28, wherein generating the graph data structure comprises iteratively augmenting the graph data structure until one or more cessation conditions are satisfied.</li>        <li id="ul0025-0030" num="0390">Embodiment 30. The system of any one of embodiments 26-29, wherein edges of the graph data structure are weighted according to a relationship score representing a strength of a relationship between the entities represented by the linked nodes.</li>        <li id="ul0025-0031" num="0391">Embodiment 31. The system of any one of embodiments 26-30, wherein determining whether one or more related-entity criteria are satisfied for the pair of query entities comprises determining whether the query entities are both represented as nodes in the graph data structure.</li>        <li id="ul0025-0032" num="0392">Embodiment 32. The system of any one of embodiments 26-31, wherein determining whether one or more related-entity criteria are satisfied for the pair of query entities comprises determining whether the query entities are separated by a distance within the graph data structure that is less than a predetermined number of hops.</li>        <li id="ul0025-0033" num="0393">Embodiment 33. The system of any one of embodiments 26-32, wherein determining whether one or more related-entity criteria are satisfied for the pair of query entities comprises determining whether the query entities are separated by a weighted distance within the graph data structure that is less than a predetermined threshold distance, wherein the weighted distance is computed based on a number of hops between the query entities and based on weights for edges linking the one or more hops between the query entities.</li>        <li id="ul0025-0034" num="0394">Embodiment 34. The system of any one of embodiments 26-33, wherein determining whether one or more related-entity criteria are satisfied for the pair of query entities comprises applying a behavioral modeling algorithm to the query entities.</li>        <li id="ul0025-0035" num="0395">Embodiment 35. A non-transitory computer-readable medium storing instructions for identifying relationships between entities represented within one or more data sets, the instructions configured to be executed by a system comprising one or more processors to cause the system to:        <ul id="ul0043" list-style="none">            <li id="ul0043-0001" num="0396">receive one or more data sets representing a plurality of entities;</li>            <li id="ul0043-0002" num="0397">generate, based at least in part on the one or more data sets, a graph data structure representing entities amongst the plurality of entities as nodes and representing relationships between pairs of entities as edges between corresponding pairs of nodes;</li>            <li id="ul0043-0003" num="0398">receive input data indicating a pair of query entities; and</li>            <li id="ul0043-0004" num="0399">determine, based at least in part on the graph data structure, whether one or more related-entity criteria are satisfied for the pair of query entities.</li>        </ul>        </li>        <li id="ul0025-0036" num="0400">Embodiment 36. A method for identifying relationships between entities represented within one or more data sets, wherein the method is executed by a system comprising one or more processors, the method comprising:        <ul id="ul0044" list-style="none">            <li id="ul0044-0001" num="0401">receiving one or more data sets representing a plurality of entities;</li>            <li id="ul0044-0002" num="0402">generating, based at least in part on the one or more data sets, a graph data structure representing entities amongst the plurality of entities as nodes and representing relationships between pairs of entities as edges between corresponding pairs of nodes;</li>            <li id="ul0044-0003" num="0403">receiving input data indicating a pair of query entities; and</li>            <li id="ul0044-0004" num="0404">determining, based at least in part on the graph data structure, whether one or more related-entity criteria are satisfied for the pair of query entities.</li>        </ul>        </li>        <li id="ul0025-0037" num="0405">Embodiment 37. A system for predicting likelihood of collection, the system comprising one or more processors configured to cause the system to:        <ul id="ul0045" list-style="none">            <li id="ul0045-0001" num="0406">receive a first data set comprising endogenous information pertaining to a transaction;</li>            <li id="ul0045-0002" num="0407">receive a second data set comprising exogenous information related to one or more parties to the transaction;</li>            <li id="ul0045-0003" num="0408">configure a collectability uncertainty model based on the first data set and to the second data;</li>            <li id="ul0045-0004" num="0409">receive a third data set comprising information regarding the transaction; and</li>            <li id="ul0045-0005" num="0410">provide the information regarding the interaction to the collectability uncertainty model to generate an output indicating a likelihood of collection for the transaction.</li>        </ul>        </li>        <li id="ul0025-0038" num="0411">Embodiment 38. The system of embodiment 37, wherein the endogenous information comprises one or more selected from the following: payment history information of a party to the transaction; credit assessment information conducted prior to the initiation of the transaction; and payment history information of one or more parties related to a party to the transaction.</li>        <li id="ul0025-0039" num="0412">Embodiment 39. The system of any one of embodiments 37-38, wherein exogenous information comprises one or more selected from the following: economic behavior information of an industry related to a party to the transaction; economic behavior information of a value chain of a party to the transaction; news information related to a party, a related industry, or a related value chain to the transaction; product review information, employee sentiment information; and consumer sentiment information.</li>        <li id="ul0025-0040" num="0413">Embodiment 40. The system of any one of embodiments 37-39, wherein the third data set comprises information regarding a prior dispute between a plurality of entities to the transaction.</li>        <li id="ul0025-0041" num="0414">Embodiment 41. The system of any one of embodiments 37-40, wherein applying the collectability uncertainty model comprises:        <ul id="ul0046" list-style="none">            <li id="ul0046-0001" num="0415">generating an initial prediction of uncertainty based on the first data set comprising the endogenous information; and</li>            <li id="ul0046-0002" num="0416">applying one or more predictive models based on the second data set comprising the exogenous information.</li>        </ul>        </li>        <li id="ul0025-0042" num="0417">Embodiment 42. The system of any one of embodiments 37-41, wherein the collectability uncertainty model is validated following the occurrence of a rare event and based on its predictions in response to the rare event.</li>        <li id="ul0025-0043" num="0418">Embodiment 43. The system of any one of embodiments 37-42, wherein the collectability uncertainty model is configured to generate output data comprising a collectability due date and an associated confidence level.</li>        <li id="ul0025-0044" num="0419">Embodiment 44. The system of any one of embodiments 37-43, wherein the system is configured to:        <ul id="ul0047" list-style="none">            <li id="ul0047-0001" num="0420">receive data regarding a collection event associated with the transaction; and</li>            <li id="ul0047-0002" num="0421">apply a continuous learning feedback loop to update the collectability uncertainty model based on the data regarding the collection event.</li>        </ul>        </li>        <li id="ul0025-0045" num="0422">Embodiment 45. A non-transitory computer-readable storage medium storing instructions for predicting likelihood of collection, the instructions configured to be executed by a system comprising one or more processors to cause the system to:        <ul id="ul0048" list-style="none">            <li id="ul0048-0001" num="0423">receive a first data set comprising endogenous information pertaining to a transaction;</li>            <li id="ul0048-0002" num="0424">receive a second data set comprising exogenous information related to one or more parties to the transaction;</li>            <li id="ul0048-0003" num="0425">configure a collectability uncertainty model based on the first data set and to the second data;</li>            <li id="ul0048-0004" num="0426">receive a third data set comprising information regarding the transaction; and</li>            <li id="ul0048-0005" num="0427">provide the information regarding the interaction to the collectability uncertainty model to generate an output indicating a likelihood of collection for the transaction.</li>        </ul>        </li>        <li id="ul0025-0046" num="0428">Embodiment 46. A method for predicting likelihood of collection, wherein the method is executed by system comprising one or more processors, the method comprising:        <ul id="ul0049" list-style="none">            <li id="ul0049-0001" num="0429">receiving a first data set comprising endogenous information pertaining to a transaction;</li>            <li id="ul0049-0002" num="0430">receiving a second data set comprising exogenous information related to one or more parties to the transaction;</li>            <li id="ul0049-0003" num="0431">configuring a collectability uncertainty model based on the first data set and to the second data;</li>            <li id="ul0049-0004" num="0432">receiving a third data set comprising information regarding the transaction; and</li>            <li id="ul0049-0005" num="0433">providing the information regarding the interaction to the collectability uncertainty model to generate an output indicating a likelihood of collection for the transaction.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0245" num="0434">This application incorporates by reference the entire contents of the U.S. patent application titled &#x201c;AI-AUGMENTED AUDITING PLATFORM INCLUDING TECHNIQUES FOR AUTOMATED ASSESSMENT OF VOUCHING EVIDENCE&#x201d;, filed Jun. 30, 2022, Attorney Docket no. 13574-20068.00.</p><p id="p-0246" num="0435">This application incorporates by reference the entire contents of the U.S. patent application titled &#x201c;AI-AUGMENTED AUDITING PLATFORM INCLUDING TECHNIQUES FOR APPLYING A COMPOSABLE ASSURANCE INTEGRITY FRAMEWORK&#x201d;, filed Jun. 30, 2022, Attorney Docket no. 13574-20070.00.</p><p id="p-0247" num="0436">This application incorporates by reference the entire contents of the U.S. patent application titled &#x201c;AI-AUGMENTED AUDITING PLATFORM INCLUDING TECHNIQUES FOR AUTOMATED DOCUMENT PROCESSING&#x201d;, filed Jun. 30, 2022, Attorney Docket no. 13574-20071.00.</p><p id="p-0248" num="0437">This application incorporates by reference the entire contents of the U.S. patent application titled &#x201c;AI-AUGMENTED AUDITING PLATFORM INCLUDING TECHNIQUES FOR PROVIDING AI-EXPLAINABILITY FOR PROCESSING DATA THROUGH MULTIPLE LAYERS&#x201d;, filed Jun. 30, 2022, Attorney Docket no. 13574-20072.00.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system for classifying documents, the system comprising one or more processors configured to cause the system to:<claim-text>receive data representing a document;</claim-text><claim-text>apply one or more natural language processing techniques to the received data to generate a feature vector representing the document;</claim-text><claim-text>identify, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector;</claim-text><claim-text>apply a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and</claim-text><claim-text>determine, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the one or more processors are configured to identify, based on the feature vector, a cluster of feature vectors from the case library that has a highest level of similarity to the feature vector amongst feature vector clusters in the case library; and</claim-text><claim-text>wherein the determination of the adjudication is further based on the identified cluster of feature vectors.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of characteristics comprises one or more of the following: a risk characteristic, a timing characteristic, and an amount characteristic.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein applying the plurality of models to the feature vector comprises computing a plurality of characteristic and comparing the plurality of computed characteristics to corresponding baseline characteristics obtained from an ERP data source to compute the respective changes.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of any one of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein computing the respective changes comprises generating a plurality of respective change values and a plurality of respective change confidence levels.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein applying the one or more natural language processing techniques to the received data to generate a feature vector comprises:<claim-text>applying a plurality of sets of models in parallel to one another, wherein each of the sets of models is configured to process the received data to generate respective output data; and</claim-text><claim-text>storing the output data from each of the models in the feature vector.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein a first set of models of the plurality of sets of models comprises a first sentence classification module and a classification module configured to generate output data relating to a first type of content of the document.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The system of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein a second set of models of the plurality of sets of models comprises structural classification module, a linguistic modality classification module, and a classification module configured to generate output data relating to a second type of content of the document.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein a third set of models of the plurality of sets of models comprises a second sentence classification module and a classification module configured to generate output data relating to a third type of content of the document.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the adjudication classification comprises determining whether the document meets commercial substance criteria.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the adjudication classification and the adjudication confidence score comprises applying an adjudication reconciliation data processing operation based on data associated with the identified second feature vector and based on the computed respective changes for the plurality of characteristics.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A non-transitory computer-readable storage medium storing instructions for classifying documents, the instructions configured to be executed by one or more processors to cause the system to:<claim-text>receive data representing a document;</claim-text><claim-text>apply one or more natural language processing techniques to the received data to generate a feature vector representing the document;</claim-text><claim-text>identify, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector;</claim-text><claim-text>apply a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and</claim-text><claim-text>determine, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A method for classifying documents, wherein the method is executed by a system comprising one or more processors, the method comprising:<claim-text>receiving data representing a document;</claim-text><claim-text>applying one or more natural language processing techniques to the received data to generate a feature vector representing the document;</claim-text><claim-text>identifying, based on the feature vector, a second feature vector from a case library based on a similarity to the feature vector;</claim-text><claim-text>applying a plurality of models to the feature vector to compute respective changes for a plurality of characteristics represented by the document; and</claim-text><claim-text>determining, based on the identified second feature vector and based on the computed respective changes for the plurality of characteristics, an adjudication for the document, wherein the adjudication comprises an adjudication classification and an adjudication confidence score.</claim-text></claim-text></claim></claims></us-patent-application>