<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004331A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004331</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17902909</doc-number><date>20220905</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0802</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0688</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0802</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0604</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>2056</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0635</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0607</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0658</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0659</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">NAND RAID CONTROLLER</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17167040</doc-number><date>20210203</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11435959</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17902909</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16436080</doc-number><date>20190610</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10942685</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17167040</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15943616</doc-number><date>20180402</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10353639</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16436080</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>14187849</doc-number><date>20140224</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>9933980</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>15943616</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>KIOXIA CORPORATION</orgname><address><city>Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>LAW</last-name><first-name>Sie Pook</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An array controller for connection between a solid state drive controller and multiple non-volatile storage units is provided. The array controller comprises a plurality of enable outputs, each of which is connected to an enable input of one of the non-volatile storage units, and a buffer in which data to be written into or read from the non-volatile storage units is stored. The array controller further comprises a control unit configured to enable a communication path between the solid state drive controller and one of the non-volatile storage units according to an address received from the solid state drive controller.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="199.47mm" wi="128.10mm" file="US20230004331A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="226.40mm" wi="130.13mm" file="US20230004331A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="237.24mm" wi="172.89mm" orientation="landscape" file="US20230004331A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="231.39mm" wi="158.50mm" orientation="landscape" file="US20230004331A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="135.72mm" wi="148.34mm" file="US20230004331A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="222.50mm" wi="94.66mm" file="US20230004331A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="228.35mm" wi="169.59mm" file="US20230004331A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="165.78mm" wi="155.11mm" file="US20230004331A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="230.04mm" wi="102.19mm" file="US20230004331A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="228.43mm" wi="169.59mm" file="US20230004331A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/167,040, filed on Feb. 3, 2021, which application is a continuation of U.S. patent application Ser. No. 16/436,080, filed on Jun. 10, 2019, now U.S. Pat. No. 10,942,685, issued on Mar. 9, 2021, which application is a continuation of U.S. patent application Ser. No. 15/943,616, filed on Apr. 2, 2018, now U.S. Pat. No. 10,353,639, issued on Jul. 16, 2019, which application is a continuation of U.S. patent application Ser. No. 14/187,849, filed on Feb. 24, 2014, now U.S. Pat. No. 9,933,980, issued on Apr. 3, 2018, the entire contents of which are incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The storage capacity of solid state drives (SSDs) continues to increase. That is, SSDs are able to support an increasing number of storage units, such as NAND flash memory units. As the storage capacity of SSDs increases, it has become increasingly difficult to scale SSD controllers, which are typically implemented on integrated circuit chips, and which are used to store data to NAND flash memory units and to read data from NAND flash memory units through general-purpose input/output (or GPIO) pins and through chip enable (or CE) pins.</p><p id="p-0004" num="0003">As present-day drive storage devices support an increasing number of NAND flash memory units, (i.e., greater than 2 terabytes of storage capacity), a large number of connections from an SSD controller to the NAND flash memory units of the disk storage device is required. However, allocating additional GPIO and CE pins is disadvantageous, because allocating more pins increases the size of the die package required for manufacturing the SSD controller. Thus, the cost of manufacturing the SSD controller would increase dramatically. Further, laying out an SSD controller integrated circuit comprising additional NAND flash memory pin connections would also be costly and disruptive to current SSD controller manufacturing processes. Hence, it would be advantageous to provide a mechanism whereby existing SSD controllers can support drives that have NAND flash memory capacity in excess of 2 terabytes without allocating additional GPIO or CE pins for connection to a large number of NAND flash memory units.</p><heading id="h-0003" level="1">SUMMARY OF THE DISCLOSURE</heading><p id="p-0005" num="0004">An array controller for connection between a solid state drive controller and multiple non-volatile storage units, according to an embodiment, comprises a plurality of enable outputs, each of which is connected to an enable input of one of the non-volatile storage units and a buffer in which data to be written into or read from the non-volatile storage units is stored. The array controller further comprises a control unit configured to enable a communication path between the solid state drive controller and one of the non-volatile storage units according to an address received from the solid state drive controller.</p><p id="p-0006" num="0005">According to another embodiment, a method of performing read and write operations in a memory system is provided. The memory system includes a solid state drive controller connected to multiple non-volatile storage units by way of an array controller having a plurality of enable outputs, each of which is connected to an enable input of one of the non-volatile storage units. The array controller also includes a buffer in which data to be written into or read from the non-volatile storage units is stored. The method comprises the steps of receiving an address from the solid state drive controller and enabling a communication path between the solid state drive controller and one of the non-volatile storage units according to the received address.</p><p id="p-0007" num="0006">According to another embodiment, a memory system is provided. The memory system comprises a solid state drive controller configured with one or more chip enable outputs, and an array controller configured with a chip enable input that is connected to one of the chip enable outputs of the solid state drive controller. The array controller has multiple chip enable outputs and a buffer in which data to be written into or read from the non-volatile storage units is stored. The memory system further comprises multiple non-volatile storage units each configured with a chip enable input that is connected to one of the chip enable outputs of the array controller.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram that depicts a memory system according to one or more embodiments.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram that depicts a connection between an SSD controller and a plurality of NAND array controllers, according to one or more embodiments.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram that depicts a connection between a NAND array controller and a plurality of NAND storage devices, according to one or more embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a block diagram that depicts address components that are transmitted from an SSD controller to a NAND array controller, according to one or more embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a block diagram that depicts address components that are transmitted from a NAND array controller to a target NAND storage device, according to one or more embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a flow diagram that illustrates a method of enabling a communication path between an SSD controller and a target NAND storage device using a NAND array controller, according to a first embodiment.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is a signal diagram that depicts the timing of signals received by a NAND array controller in one or more embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is a block diagram that depicts an embodiment of a memory system that supports mirroring.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is a block diagram that depicts address components that are transmitted from an SSD controller to a NAND array controller in an embodiment that supports mirroring.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is a flow diagram that illustrates a method of enabling a communication path between an SSD controller <b>100</b> and a target NAND storage device using a NAND array controller, according to embodiments that support mirroring.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> is a signal diagram that depicts the timing of signals received by a NAND array controller in an embodiment that supports mirroring.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram that depicts a memory system according to one or more embodiments. The system depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref> comprises a solid state disk (SSD) controller <b>100</b>, a plurality of NAND array controllers <b>110</b>, and a plurality of NAND storage devices <b>120</b>. In embodiments, SSD controller <b>100</b> is an electronic device that provides a connected host computer access to NAND memory components. Typically, SSD controller <b>100</b> is a semiconductor processor that executes firmware-level code, and which performs various functions, including reading and writing data from and to NAND memory components, caching, error correction, data encryption, and garbage collection. SSD controller <b>100</b> communicates with other devices by way of electrical signals, which are typically received and transmitted through &#x201c;pin&#x201d; connections. Each pin is capable of transmitting or receiving an electrical signal which represents a binary 0 or 1 value (or bit value). Typically, a 0 value is represented by a low voltage signal, while a 1 value is represented by a high voltage signal. Pins may be categorized, in embodiments, as general purpose input/output (or GPIO) pins, which typically transmit and receive data to be read from or stored to memory. In addition, GPIO pins of SSD controller <b>100</b> transmit and receive address data that refers to storage locations within a NAND storage device <b>120</b>. SSD controllers <b>100</b> also include &#x201c;chip enable&#x201d; (or CE) pins. CE pins are typically used to activate one or more devices to which an SSD controller <b>100</b> is connected. For example, SSD controller <b>100</b> may be connected to an array of NAND storage devices <b>120</b>. In order to activate a communication path to one of the NAND storage devices <b>120</b>, SSD controller <b>100</b> transmits a particular value (either a 0 or 1) over a CE pin that is coupled to a corresponding CE pin of the target NAND storage device <b>120</b>. In some embodiments, transmitting a 0 value activates a communication path to a target NAND storage device <b>120</b>. In other embodiments, transmitting a 1 value activates a communication path to a target NAND storage device <b>120</b>. Once a communication path to the target NAND storage device <b>120</b> is activated (or &#x201c;enabled&#x201d;), SSD controller <b>100</b> may then transmit data to and read data from the target NAND storage device <b>120</b>. The transmission of a value over a CE pin in order to activate a communication path to a device to which SSD controller <b>100</b> is connected is referred to herein as &#x201c;asserting&#x201d; the CE pin.</p><p id="p-0020" num="0019">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, SSD controller <b>100</b> is connected to one or more NAND array controllers <b>110</b>. Each NAND array controller <b>110</b> is configured to be activated by SSD controller <b>100</b> (in embodiments, activation is achieved through assertion of a CE pin of the NAND array controller <b>110</b> that is connected to a corresponding CE pin of SSD controller <b>100</b>). According to one or more embodiments, each NAND array controller <b>110</b> is equipped with electronic circuitry, firmware, or software that enables it to select one or more NAND storage devices <b>120</b> in order to establish a communication path between SSD controller <b>100</b> and the selected NAND storage devices <b>120</b>. In embodiments, SSD controller <b>100</b> transmits a command, one or more addresses, and storage data to a NAND array controller <b>110</b>, where the transmitted command, addresses, and storage data are targeted to one of the NAND storage devices <b>120</b>. As will be described further herein, SSD controller <b>100</b> provides data to NAND array controller <b>110</b> that enables NAND array controller <b>110</b> to identify which of the NAND storage devices <b>120</b> that is to receive the transmitted command, addresses, and storage data. In embodiments, SSD controller <b>100</b> transmits additional address information to NAND array controller <b>110</b> that serves to identify one or more target NAND storage devices <b>120</b>. NAND array controller <b>110</b> uses this additional address information to enable a communication path to the target NAND storage device <b>120</b>. NAND array controller <b>110</b> subsequently transmits the command, addresses, and data to that target device.</p><p id="p-0021" num="0020">As is further shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, each NAND array controller <b>110</b> is connected to one or more NAND storage devices <b>120</b>. As previously mentioned, a NAND array controller <b>110</b> receives address information from SSD controller <b>110</b> that enables NAND array controller <b>110</b> to identify one or more NAND storage devices <b>120</b> to which the NAND array controller <b>110</b> is connected. After identifying a target NAND storage device <b>120</b>, NAND array controller <b>110</b> is enables a communication path between SSD controller <b>100</b> and the target NAND storage device <b>120</b>. Further, enablement of a communication may be performed, in one or more embodiments, by asserting an output CE pin of the NAND array controller <b>110</b> that is connected to a corresponding CE pin of the target NAND storage device <b>120</b>.</p><p id="p-0022" num="0021">In embodiments, each NAND storage device <b>120</b> is a non-volatile semiconductor memory device, where stored data persists even when the device is not electrically powered. Typically, each NAND storage device <b>120</b> includes transistors that are connected in groups to a word line, which allows for high-capacity data storage. Each NAND storage device <b>120</b> is equipped with a CE pin that allows a communication path to the device to be enabled, as well as GPIO pins that serve to transmit and receive commands, addresses, and I/O data to and from the device.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram that depicts a connection between an SSD controller <b>100</b> and a plurality of NAND array controllers <b>110</b>, according to one or more embodiments. As shown, SSD controller <b>100</b> includes a plurality of output pins, which are denoted in <figref idref="DRAWINGS">FIG. <b>2</b></figref> with the prefix &#x201c;Out.&#x201d; SSD controller <b>100</b> includes an Out_DQ pin, which, in embodiments, may comprise 1, 8, or more physical pins. The pins that comprise Out_DQ may be referred to as a &#x201c;data bus.&#x201d; Data is transmitted over Out_DQ, where the transmitted data may be I/O data to be stored at a storage location within a NAND storage device <b>120</b>. Further, data transmitted over Out_DQ may be a command to be executed by a NAND storage device <b>120</b>. In addition, data transmitted over Out_DQ may be address data, which, in embodiments, may refer to one of the NAND storage devices <b>120</b> that is connected to NAND array controller <b>110</b>, or, alternatively, to storage locations within a particular NAND storage device <b>120</b>. As is depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, Out_DQ is connected in parallel to each of four NAND array controllers <b>110</b><sub>1-4</sub>. Out_DQ of SSD controller <b>100</b> is connected to a corresponding DQ pin (or plurality of pins) of each NAND array controller <b>110</b>, which allows all data transmitted over the data bus to be received by each NAND array controller <b>110</b>, provided a communication path to the NAND array controller <b>110</b> is activated.</p><p id="p-0024" num="0023">In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, SSD controller <b>100</b> also includes Out_CLE and Out_ALE pins. These pins are connected to corresponding CLE and ALE pins of each NAND array controller <b>110</b>. The function of the Out_CLE and Out_ALE pins is to communicate the nature of data to be communicated to a target device (e.g., a NAND storage device <b>120</b> or a NAND array controller <b>110</b>) at some future time. In embodiments, pins are asserted and data is transmitted over a data bus at discrete points in time, referred to as &#x201c;clock cycles.&#x201d; In one or more embodiments, SSD controller <b>100</b> is equipped with a clock signal generator (not shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) which allows for the synchronization of pin assertions, data transmissions, command execution by target devices, and the like. Thus, during a given clock cycle, the Out_CLE and Out_ALE pins are asserted according to a pattern. Possible patterns are 00, 01, and 10, where the high-order bit corresponds to the assertion of the CLE pin and the low-order bit corresponds to the ALE pin assertion. This assertion communicates to a target device the type of data that is to be transmitted over the data bus (i.e, through Out_DQ to the DQ pins of the target device) in a subsequent clock cycle.</p><p id="p-0025" num="0024">For example, in one or more embodiments, SSD controller <b>100</b> asserts a 0 (or low voltage) on both the Out_CLE pin and Out_DQ pin. This assertion (i.e &#x201c;00&#x201d;) communicates to the target NAND device (NAND array controller <b>110</b><sub>1 </sub>in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) that, during a subsequent clock cycle, I/O data to be stored in a NAND storage device <b>120</b> is to be transmitted over the data bus.</p><p id="p-0026" num="0025">Continuing with the example, SSD controller <b>100</b> may also assert a 1 (or high voltage) on the Out_CLE pin and a 0 on the Out_ALE pin. In the depiction shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, this communicates to the target device (i.e. NAND array controller <b>110</b><sub>1</sub>) that a command to be executed by a target device is to be transmitted over the data bus during a future clock cycle. Indeed, &#x201c;CLE&#x201d; typically stands for Command Latch Enable, and signifies that a command is to be transmitted by a source device and is to be expected (and executed) by a target device.</p><p id="p-0027" num="0026">Further, in embodiments, SSD controller <b>100</b> may assert a 0 on the Out_CLE pin and a 1 on the Out_ALE pin. This pattern communicates to a target device that an address is to be transmitted on the data bus during a future clock cycle. Indeed, &#x201c;ALE&#x201d; typically stands for Address Latch Enable, which denotes that a target device is to receive the transmission of an address by a source device over the data bus. An example of an address is a storage location inside of a NAND storage device <b>120</b>. Further, in one or more embodiments, a transmitted address may also identify a NAND storage device <b>120</b> that is connected to a NAND array controller <b>110</b>.</p><p id="p-0028" num="0027">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, SSD controller <b>100</b> also includes Out_RE and Out_WE pins. An Out_RE pin is a &#x201c;read enable&#x201d; pin. The Out_RE pin is connected to a corresponding RE pin of a NAND array controller <b>110</b>. In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the Out_RE pin of SSD controller <b>100</b> is connected to the RE pin of NAND array controller <b>110</b><sub>1</sub>. In embodiments, the signal transmitted over the Out_RE pin communicates to a target device (typically a NAND storage device <b>120</b>) to output a data value located at a particular storage location within the target device, and to increment an internal address counter to reference a subsequent storage location within the target device. The Out_WE pin is a &#x201c;write enable&#x201d; pin. In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the Out_WE pin of SSD controller <b>100</b> is connected to the WE pin of NAND array controller <b>110</b><sub>1</sub>. In embodiments, the signal transmitted over the Out_WE pin triggers a target device (i.e., a NAND storage device <b>120</b> or NAND array controller <b>110</b>) to read data from the data bus (i.e., the data pins comprising DQ) in a subsequent clock cycle. This process may be referred to as &#x201c;clocking&#x201d; data into the target device (e.g., addresses, I/O data, or commands). In embodiments, a target NAND array controller <b>110</b> (or NAND storage device <b>120</b>) reads the data transmitted to it over the data bus at the rising edge of the signal transmitted over the Out_WE pin.</p><p id="p-0029" num="0028">In addition, SSD controller <b>100</b> includes a plurality of Out_CE pins. As previously mentioned, CE typically stands for &#x201c;chip enable.&#x201d; As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, SSD controller <b>100</b> includes four output CE pins, namely, Out_CE<b>0</b>, Out_CE<b>1</b>, Out_CE<b>2</b>, and Out_CE<b>3</b>. In other embodiments, SSD controller <b>100</b> may include greater or fewer output CE pins. As shown, each of the Out_CE pins of SSD controller <b>100</b> is connected to a corresponding CE pin of a NAND array controller <b>110</b>. Thus, in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, Out_CE<b>0</b> is connected to the CE pin of NAND array controller <b>110</b><sub>1</sub>, Out_CE<b>1</b> is connected to the CE pin of NAND array controller <b>1102</b>, Out_CE<b>2</b> is connected to the CE pin of NAND array controller <b>1103</b>, and Out_CE <b>3</b> is connected to the CE pin of NAND switch <b>1104</b>. In embodiments, SSD controller <b>100</b> asserts one or more Out_CE pins in order to activate (or enable) a communication path to the NAND array controllers <b>110</b> that are connected to the asserted Out_CE pins. For example, SSD controller <b>100</b> asserts Out_CE<b>0</b> in order to activate a communication path to NAND array controller <b>110</b><sub>1</sub>. It should be noted that, until a communication path to a NAND array controller <b>110</b> has been activated (or &#x201c;enabled&#x201d;) by way of assertion of a CE pin, such NAND array controller <b>110</b> will not recognize any data transmitted to it over the data bus (i.e., its corresponding DQ pins), nor will it recognize the assertion of its CLE, ALE, RE, or WE pins. Further, SSD controller <b>100</b> may also &#x201c;de-assert&#x201d; any or all of its Out_CE pins in order to deactivate an already active communication path to a NAND array controller <b>110</b>. In one or more embodiments, de-assertion of a NAND array controller <b>110</b> may be performed by asserting a 0 value (or low voltage) on the Out_CE pin that is connected to the CE pin of the NAND array controller <b>110</b> for which a communication path is to be deactivated.</p><p id="p-0030" num="0029">As was previously described, each of the NAND array controllers <b>110</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref> includes pins DQ, CLE, ALE, RE, WE, and CE, which are coupled to corresponding output pins of SSD controller <b>100</b>. Further, each of the NAND array controllers <b>110</b> includes output pins that transmit data to other devices that the NAND array controllers <b>110</b> are connected to. According to the embodiment depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, each NAND array controller <b>100</b> includes an Out_DQ pin (or set of pins, as the case may be), which is an output data bus for the switch. Thus, in embodiments, data that is received by a NAND array controller <b>110</b> over the data bus through pins DQ is subsequently transmitted to other devices over pins Out_DQ. Further, each NAND array controller <b>110</b> depicted includes four Out_CE pins, namely, Out_CE<b>0</b>, Out_CE<b>1</b>, Out_CE<b>2</b>, and Out_CE<b>3</b>. These CE pins perform a function that is similar that of the Out_CE pins of SSD controller <b>100</b>, namely, to activate a communication path to a device to which a particular Out_CE pin is connected. Such a device is typically a NAND storage device <b>120</b>, although connection from a NAND array controller <b>110</b> to other types of electronic devices is contemplated and is within the scope of the present invention. Further, although each NAND array controller <b>110</b> is depicted as having four Out_CE pins, it should be noted that other embodiments include more or fewer Out_CE pins than the embodiment depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Further, NAND array controllers <b>110</b> may also include other output pins (such as clock signal pins, as well as ALE and CLE pins), and it is noted that such embodiments are also within the scope of the present invention.</p><p id="p-0031" num="0030">In addition, each of the NAND array controllers <b>110</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref> includes an interface protocol (IP) <b>211</b>, a control unit <b>215</b>, and a buffer <b>212</b>. IP <b>211</b> receives data, addresses, and commands transmitted by SSD controller <b>100</b> over the data bus (which is connected to pins DQ of the NAND array controllers <b>110</b>). IP <b>211</b> converts the received data, addresses, and commands from a protocol format used by SSD controller <b>100</b> into a format that is used by control unit <b>215</b> of each NAND array controller <b>110</b>. In one or more embodiments, SSD controller <b>100</b> transmits using a specific protocol, such as Toggle/ONFI. According to such embodiments, IP <b>211</b> translates storage data, addresses, and commands from the Toggle/ONFI format into a format that enables control unit <b>215</b> to store and manipulate the transmitted data. In addition, embodiments of IP <b>211</b> are configured to receive the components of a transmission from SSD controller <b>100</b> (i.e., commands, addresses, and storage data) over multiple clock cycles. Once the transmission has been received and translated by IP <b>211</b>, IP <b>211</b> transmits the translated data to control unit <b>215</b>.</p><p id="p-0032" num="0031">Control unit <b>215</b> receives data from IP <b>211</b> and processes and stores that data in buffer <b>212</b>. The processing performed by control unit <b>215</b> is described in further detail below. Note that data also flows from control unit <b>215</b> into IP <b>211</b>. In this case, IP <b>211</b> translates the data received from control unit <b>215</b> into a protocol (e.g., Toggle/ONFI) and then transmits the data over the output data bus over pins Out_DQ.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram that depicts a connection between a NAND array controller <b>110</b> and a plurality of NAND storage devices <b>120</b>, according to one or more embodiments. In the embodiment depicted in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a single NAND array controller <b>110</b> is connected to four NAND storage devices <b>120</b><sub>1</sub>-<b>120</b><sub>4</sub>. As was also shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, NAND array controller <b>110</b> has an input CE pin (over which communication to NAND array controller <b>110</b> is activated), as well as CLE, ALE, RE, and WE pins. The functionality of each of these pins is the same as described previously with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In addition, NAND array controller <b>110</b> includes an Out_DQ pin (or set of pins), which serves as an output data bus for the switch. As shown, Out_DQ is connected in parallel to each of the NAND storage devices <b>120</b><sub>1-4</sub>. The data bus is connected to each of the NAND storage devices <b>120</b> at a corresponding DQ pin for each of the storage devices. The NAND array controller <b>110</b> also includes Out_CE pins that are each connected to a CE pin of the NAND storage devices <b>120</b>. Thus, as shown, Out_CE<b>0</b> is connected to the CE pin of NAND storage device <b>120</b><sub>1</sub>, Out_CE<b>1</b> is connected to the CE pin of NAND storage device <b>120</b><sub>2</sub>, Out_CE<b>2</b> is connected to the CE pin of NAND storage device <b>120</b><sub>3</sub>, and Out_CE<b>3</b> is connected to the CE pin of NAND storage device <b>120</b><sub>4</sub>.</p><p id="p-0034" num="0033">As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, NAND array controller <b>110</b> receives a transmission (i.e., storage data, addresses, and commands) from SSD controller <b>100</b> over the data bus through pins that comprise DQ. In embodiments, SSD controller <b>100</b> transmits this data according to a communication protocol. An example of such a protocol is Toggle/ONFI. According to the transmission protocol, SSD controller <b>100</b> notifies NAND array controller <b>110</b> as to the type of data that will be transmitted over DQ during a subsequent clock cycle. In embodiments, SSD controller <b>100</b> asserts the CLE and ALE pins of NAND array controller <b>110</b> in order to indicate the type of data that will be transmitted. For example, if SSD controller asserts the CLE pin and does not assert the ALE pin, then the data to be transmitted to NAND array controller <b>110</b> over DQ at a subsequent clock cycle is a command. If, on the other hand, SSD controller asserts the ALE pin and does not assert the CLE pin, then the data to be transmitted to NAND array controller <b>110</b> over DQ during a subsequent clock cycle is an address. Finally, if SSD controller asserts neither the ALE nor the CLE pin of NAND array controller <b>110</b>, then the data to be transmitted over DQ to NAND array controller <b>110</b> at a future clock cycle is data that is to be stored in a NAND storage device <b>120</b> that NAND array controller <b>110</b> is connected to.</p><p id="p-0035" num="0034">When data is received by NAND array controller <b>110</b> over DQ, the data flows to IP <b>211</b>, which converts the data from a communication protocol format (e.g., Toggle/ONFI), into a format that is used by control unit <b>215</b>. This conversion enables NAND array controller <b>110</b> to store the received commands storage data, and addresses, determine a destination NAND storage device <b>120</b> for the received data, enable a communication path to the destination NAND storage device <b>120</b>, and transmit the received data over Out_DQ to the destination NAND storage device <b>120</b>.</p><p id="p-0036" num="0035">After converting the received data, IP <b>211</b> then transmits the converted data to control unit <b>215</b>. Control unit <b>215</b> stores the data in buffer <b>212</b>. In embodiments, buffer <b>212</b> is an area of storage within NAND array controller <b>110</b> that is capable of storing a complete command transmission from SSD controller <b>100</b>. A complete command transmission as referred to herein is a command code (or &#x201c;op code&#x201d;), one or more addresses, and data that are transmitted to a NAND storage device <b>120</b> in order to cause the NAND storage device to perform a particular function. Such functions include, but are not limited to, reading data from storage, writing data to storage, or resetting a NAND storage device <b>120</b>. For example, SSD controller <b>100</b> transmits a series of data bytes in order to cause a NAND storage device <b>120</b> to write data to one or more of its storage locations. In such a case, SSD controller <b>100</b> first transmits a command code (or op code) over the data bus (after asserting Out_CLE and de-asserting Out_ALE). The command op code is typically a one- or two-byte sequence of bits that is recognized as a write command by a target NAND storage device <b>120</b>. In addition, SSD controller <b>100</b> transmits one or more addresses of storage locations to which a target NAND storage device is to write data. It is to be noted that SSD controller transmits such addresses after asserting pin ALE and de-asserting pin CLE. Finally, the complete command transmission includes storage data to be written to the aforementioned storage locations of the target NAND storage device <b>120</b>. Prior to transmitting the storage data, SSD controller <b>100</b> de-asserts both ALE and CLE pins. Thus, each of the aforementioned data transmissions (i.e., the write command op code, the one or more addresses, and the storage data) are transmitted by SSE controller <b>100</b>, received over DQ by IP <b>211</b>, and stored by control unit <b>215</b> into buffer <b>212</b>.</p><p id="p-0037" num="0036">Further, in embodiments, SSD controller <b>100</b> transmits an additional address, along with the addresses that reference storage locations in the target NAND storage device <b>120</b>. The additional address identifies a particular NAND storage device <b>120</b> that is connected to NAND array controller <b>110</b>. For example, in the embodiment depicted in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, SSD controller <b>100</b> asserts pin ALE and de-asserts pin CLE, to indicate that an address is to be transmitted on the data bus during a subsequent clock cycle. SSD controller then transmits a hexadecimal value (typically, one byte in length) that is used by NAND array controller <b>110</b> to identify a target NAND storage device <b>120</b>. It is to be noted that the additional address does not refer to any of the storage locations within any of the NAND storage devices <b>120</b> and, thus, would not be recognized by those devices. Rather, the additional address is used by NAND array controller <b>110</b> to select a target NAND storage device <b>120</b>.</p><p id="p-0038" num="0037">As previously mentioned, control unit <b>215</b> stores the complete command transmission, that is, the command op code, addresses, and storage data into buffer <b>212</b>. Next, control unit <b>215</b> processes the transmission saved to buffer <b>215</b> in order to determine which of the NAND storage devices <b>120</b> connected to NAND array controller <b>110</b> is to receive the transmission. To determine a target NAND storage device <b>120</b>, NAND array controller <b>110</b> examines the additional address that identifies a particular NAND storage device <b>120</b>, which, as previously mentioned, is stored in buffer <b>212</b>. For example, control unit <b>215</b> may determine that the additional address comprises a certain hexadecimal value (e.g., the hexadecimal value AA). In embodiments, control unit <b>215</b> is configured to associate such a value with a particular NAND storage device <b>120</b>. For example, control unit <b>215</b> may determine that the hexadecimal value AA identifies NAND storage device <b>120</b><sub>1</sub>. After making the determination, control unit <b>215</b> enables a communication path from NAND array controller <b>110</b> to the target NAND storage device <b>120</b> by asserting the appropriate Out_CE pin. In the example just described, NAND array controller <b>110</b> asserts Out_CE<b>1</b>, which is connected to the CE pin of NAND storage device <b>120</b><sub>1</sub>. Thus, a communication path from NAND array controller <b>110</b> to NAND storage device <b>120</b><sub>1 </sub>is thereby enabled.</p><p id="p-0039" num="0038">Next, after a communication path to a target NAND storage device <b>120</b> is enabled, control unit <b>215</b> reads the components of the complete command transmission received from SSD controller <b>100</b> (and stored in buffer <b>212</b>), with the exception of the additional address that identifies the target NAND storage device <b>120</b>. As previously mentioned, this identifying address is not recognized by a NAND storage device <b>120</b> as referring to any storage locations therein. Control <b>215</b> transmits the transmission data (except the additional address) from buffer <b>212</b> to IP <b>211</b>, where IP <b>211</b> converts the data into a format that is in accordance with the data protocol that SSD controller <b>100</b> uses to communicate with target NAND devices. As previously mentioned, one such protocol is the Toggle/ONFI protocol. Thus, IP <b>211</b> receives the data from control unit <b>215</b>, converts it, and transmits it over Out_DQ to the target NAND storage device <b>120</b>. In one embodiment, IP <b>211</b> performs this transmission in accordance with Toggle/ONFI. Data transmissions in accordance with the Toggle/ONFI protocol are performed in different types of cycles, depending on the type of data that is transmitted. For example, commands are transmitted in command cycles, addresses are transmitted in address cycles, and data is transmitted in data cycles. To transmit data, IP <b>211</b> appropriately asserts ALE and CLE pins (not shown) of the NAND array controller <b>110</b> (not shown), which are connected to corresponding ALE and CLE pins of a target NAND storage device <b>120</b>. Thus, after asserting the ALE and CLE pins, the target NAND storage device <b>120</b> is informed that a command, address, or storage data is to be transmitted over the data bus during a subsequent clock cycle. In one or more embodiments, IP <b>211</b> is configured to assert an output CLE pin of NAND array controller <b>110</b> and to de-assert an output ALE pin of NAND array controller <b>110</b> during a first clock cycle. During a second subsequent clock cycle, IP <b>211</b> transmits the write command op code (i.e., the write command op code transmitted by SSD controller <b>100</b> and stored in buffer <b>212</b>). It should be noted that a target NAND storage device <b>120</b> receives the transmitted command op code because control unit <b>215</b> previously asserted the CE pin of the target NAND storage device <b>120</b>.</p><p id="p-0040" num="0039">In like manner, after transmitting the command op code, IP <b>211</b> asserts the ALE pin and de-asserts the CLE pin of NAND array controller <b>110</b> during a first clock cycle and transmits addresses of storage locations within a target NAND storage device <b>120</b> to NAND storage device over Out_DQ. Finally, IP <b>211</b> is configured to de-assert both the ALE and CLE pins of NAND array controller <b>110</b> during a first clock cycle and to transmit storage data over Out_DQ in a subsequent clock cycle.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a block diagram that depicts address components that are transmitted from SSD controller <b>100</b> to NAND array controller <b>110</b>, according to one or more embodiments. As shown, address <b>400</b> is comprised of different segments, each of which is transmitted by SSD controller <b>100</b> during a separate clock cycle, each referred to as an address cycle. Note that an address cycle is preceded by SSD controller <b>100</b> asserting the Out_ALE pin and de-asserting the Out_CLE pin, which, according to data transmission protocols (such as Toggle/ONFI), communicates to a target device that an address is to be transmitted over the data bus during a subsequent clock cycle. In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the first segment of address <b>400</b> is referred to as a NAND address. A NAND address is the aforementioned additional address transmitted by SSD controller <b>100</b>, which identifies a particular NAND storage device <b>120</b> that is connected to a NAND array controller <b>110</b>. A NAND address is used by a NAND array controller <b>110</b> to enable a communication path to the target NAND storage device identified by the NAND address. Thus, for example, referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a hexadecimal value of AA may identify NAND storage device <b>120</b><sub>1</sub>, a value of BB may refer to NAND storage device <b>120</b><sub>2</sub>, a value of CC may refer to NAND storage device <b>120</b><sub>3</sub>, and a value of DD may refer to NAND storage device <b>120</b><sub>4</sub>. As mentioned earlier, the NAND address is stored in buffer <b>212</b> by control unit <b>215</b>. After storing the NAND address, control unit <b>215</b> examines the stored NAND address and enables the CE pin of the target NAND storage device <b>120</b> to which the NAND address corresponds. Thus, if the NAND address is AA, control unit <b>215</b> enables a communication path to (i.e., asserts the CE pin of) NAND storage device <b>120</b><i>i</i>. Similarly, if the NAND address is BB, control unit <b>215</b> enables a communication path to NAND storage device <b>120</b><sub>2</sub>, and so on.</p><p id="p-0042" num="0041">As shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, address <b>400</b> also comprises a LUN address, a block address, and a page address. Control unit <b>215</b> stores these address components, along with the NAND address, in buffer <b>212</b>. Typically, the page address, block address, and LUN address are collectively referred to as a row address. In embodiments, a row address may be combined with a column address (another address component) in order to form a complete address within a NAND storage device <b>120</b>. Typically, each of the components of address <b>400</b> is 8 bits long. Since there are 4 components in address <b>400</b>, up to 2<sup>32 </sup>unique row addresses may be used.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a block diagram that depicts the address components that are transmitted from NAND array controller <b>110</b> to a target NAND storage device <b>120</b>, according to one or more embodiments. As shown, address <b>410</b> comprises a LUN address, a block address, and a page address. As previously mentioned, the page, block, and LUN addresses comprise a row address for a NAND storage device <b>120</b>, and each of the components of address <b>410</b> is typically 8 bits in length. Thus, there are up to 2<sup>24 </sup>unique row addresses for address <b>410</b>. Address <b>410</b> is derived from address <b>400</b> by control unit <b>215</b>.</p><p id="p-0044" num="0043">As mentioned previously, control unit <b>215</b> stores a complete command transmission (comprising a command code, one or more addresses, and storage data) in buffer <b>212</b>. Thus, control unit <b>215</b> stores each of the components of address <b>400</b> in buffer <b>212</b>. After storing address <b>400</b>, control unit <b>215</b> examines the NAND address component of address <b>400</b> (i.e., the high-order bits depicted in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>) and determines which target NAND storage device <b>120</b> corresponds to the NAND address. After determining the target NAND storage device <b>120</b>, control unit <b>215</b> transmits the components of address <b>410</b> (which correspond to the LUN address, the block address, and the page address of address <b>400</b>) to IP <b>211</b>, which, in turn, converts and transmits the addresses according to the data protocol used by SSD controller <b>100</b>. By using addresses <b>400</b> and <b>410</b>, SSD controller <b>100</b> is able to access size 2<sup>32 </sup>row addresses by using a NAND array controller <b>110</b> and one or more NAND storage devices <b>120</b>, each of which may address 2<sup>24 </sup>rows.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a flow diagram that illustrates a method <b>500</b> of enabling a communication path between an SSD controller <b>100</b> and a target NAND storage device <b>120</b> using a NAND array controller <b>110</b>, according to a first embodiment. <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is described in conjunction with <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, which is a signal diagram that depicts the timing of signals received and transmitted by NAND array controller <b>110</b> at the various steps in method <b>500</b>.</p><p id="p-0046" num="0045">Method <b>500</b> begins at step <b>510</b>, where a NAND array controller <b>110</b> receives a command from SSD controller <b>100</b> for a target NAND storage device <b>120</b>. As previously mentioned, a command may be an op code that a target NAND storage device <b>120</b> executes, such as an op code for a read command or for a write command. In <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the command received at step <b>510</b> is received at time t<sub>1</sub>. Note that, prior to time t<sub>1</sub>, the CLE pin of NAND array controller <b>110</b> is asserted and the ALE pin of NAND array controller <b>110</b> is not asserted, indicating that a command is to be received at a subsequent clock cycle. Further, it should be noted that, at time t<sub>1</sub>, pin WE is asserted, thus triggering NAND array controller <b>110</b> to received data from the data bus.</p><p id="p-0047" num="0046">Next, at step <b>520</b>, NAND array controller <b>110</b> receives from SSD controller <b>100</b> one or more addresses for a target NAND device <b>120</b>. The receipt of the addresses is depicted in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> as occurring at times t<sub>2</sub>, t<sub>3</sub>, t<sub>4</sub>, and t<sub>5</sub>. It should be noted that, prior to time t<sub>2</sub>, pin CLE of NAND array controller <b>110</b> is de-asserted while pin ALE of NAND array controller <b>110</b> is asserted. As previously mentioned, this assertion pattern indicates that an address is to be transmitted over the data bus during a subsequent clock cycle. It should be noted that any number of addresses may be received during step <b>520</b> and that the receipt of the four addresses shown is for the purpose of illustration.</p><p id="p-0048" num="0047">In addition, at time t<sub>2</sub>, NAND array controller <b>110</b> receives a NAND address. A NAND address refers to a particular NAND storage device <b>120</b> that is connected to the NAND array controller <b>110</b>. In addition, at time t<sub>3 </sub>NAND array controller <b>110</b> receives a LUN address, at time t<sub>4 </sub>NAND array controller <b>110</b> receives a block address, and at time t<sub>5 </sub>NAND array controller <b>110</b> receives a page address. As previously mentioned, a LUN address, a block address, and a page address comprise the address of a row within a NAND storage device <b>120</b>.</p><p id="p-0049" num="0048">At step <b>525</b>, NAND array controller <b>110</b> receives from SSD controller <b>100</b> storage data that is to be stored in the target NAND storage device <b>120</b>. In embodiments, the data received at step <b>525</b> may be received during a single clock cycle. In other embodiments, the data received at step <b>525</b> may be received over multiple clock cycles. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the data is received over DQ at time t<sub>6</sub>. It is to be noted that, prior to receiving the data, both pins CLE and ALE are de-asserted, which indicates to NAND array controller <b>110</b> that data to be received over a subsequent clock cycle comprises storage data (i.e., data to be stored within a target NAND storage device <b>120</b>).</p><p id="p-0050" num="0049">After step <b>525</b>, method <b>500</b> proceeds to step <b>530</b>. At step <b>530</b>, having received a command for the target NAND storage device, a NAND address, one or more addresses of storage locations within the target NAND storage device <b>120</b>, and data to be stored at the storage locations within the target NAND storage device <b>120</b>, NAND array controller <b>110</b> stores the received data in buffer <b>212</b>.</p><p id="p-0051" num="0050">Next, at step <b>530</b>, NAND array controller <b>110</b> examines the NAND address stored in buffer <b>212</b> in order to determine the target NAND storage device <b>120</b> that is to receive the stored command, addresses, and data.</p><p id="p-0052" num="0051">Based on the determination performed at step <b>530</b>, NAND array controller <b>110</b>, at step <b>540</b>, enables a communication path to the target NAND device <b>120</b>. In embodiments, the enablement of a communication path to a target NAND device <b>120</b> is performed by asserting an Out_CE pin that is connected to a CE pin of the target NAND device <b>120</b>. For example, referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, if the NAND address received at step <b>520</b>, and stored in buffer <b>212</b> at step <b>530</b>, refers to NAND storage device <b>120</b><sub>1</sub>, then NAND array controller <b>110</b> asserts pin Out_CE<b>0</b>, which, as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, is connected to the CE pin of NAND storage device <b>120</b><sub>1</sub>.</p><p id="p-0053" num="0052">After a communication path to a target NAND storage device <b>120</b> is enabled at step <b>540</b>, method <b>500</b> proceeds to step <b>550</b>. At step <b>550</b>, NAND array controller <b>110</b> transmits the command, storage location addresses, and storage data to the target NAND storage device <b>120</b>. In embodiments, and with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, control unit <b>215</b> reads the command, storage location addresses, and storage data from buffer <b>212</b> and transmits this data to IP <b>211</b>. IP <b>211</b>, which is the protocol interface for NAND array controller <b>110</b>, converts and transmits the command, addresses, and storage data to the target NAND storage device <b>120</b> over the data bus through pins Out_DQ. It is to be noted that control unit <b>215</b> does not transmit the NAND address to IP <b>211</b>. The NAND address is only used by control unit <b>215</b> to determine the target NAND storage device <b>120</b> to which a communication path is to be enabled.</p><p id="p-0054" num="0053">Further, IP <b>211</b>, when transmitting the command, addresses, and storage data to the target NAND storage device <b>120</b>, does so according to the protocol that SSD controller <b>100</b> uses to communicate with NAND devices. For example, in an environment where SSD controller <b>100</b> communicates using the Toggle/ONFI protocol, IP <b>211</b> transmits the command (i.e., a command op code) during a &#x201c;command&#x201d; clock cycle, where, prior to transmitting the command, IP <b>211</b> asserts an output CLE pin and de-asserts an output ALE pin of NAND array controller <b>110</b>, which are connected to corresponding CLE and ALE pins of the target NAND storage device <b>120</b> (not shown). Similarly, IP <b>211</b> transmits the addresses during &#x201c;address&#x201d; clock cycles, where, prior to transmitting the addresses, IP <b>211</b> asserts an output ALE pin and de-asserts an output CLE pin of the NAND array controller <b>110</b>. Finally, in similar fashion, IP <b>211</b> transmits the storage data over &#x201c;data&#x201d; clock cycles. In this case, both output CLE and ALE pins of NAND array controller <b>110</b> are de-asserted prior to transmitting the storage data over the data bus.</p><p id="p-0055" num="0054">After NAND array controller <b>110</b>, through IP <b>211</b>, has transmitted the command, addresses, and data to the, method <b>500</b> terminates.</p><p id="p-0056" num="0055">The embodiments described in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>5</b>B</figref> may be referred to as &#x201c;non-mirroring&#x201d; embodiments. In such embodiments, NAND array controller <b>110</b> receives a complete command transmission for writing storage data to one or more storage locations in a target NAND storage device <b>120</b>. As previously shown, NAND array controller <b>110</b> determines a target NAND storage device <b>120</b> based on a received NAND address, enables a communication path to the target NAND storage device <b>120</b>, and then transmits the complete write command transmission (i.e., the write command op code, the addresses of storage locations within the target NAND storage device <b>120</b>, and the storage data) to the target NAND storage device <b>120</b>. The NAND address is not transmitted to the target NAND storage device <b>120</b>. In a non-mirroring embodiment, NAND array controller <b>110</b> transmits the aforementioned write command transmission to a single target NAND storage device <b>120</b>.</p><p id="p-0057" num="0056">However, other embodiments of the present invention are referred to as &#x201c;mirroring&#x201d; embodiments. In a mirroring embodiment, a command transmission (typically, a write command) is transmitted not to a single target NAND storage device <b>120</b>, but to two target NAND storage devices <b>120</b>. An example of a mirroring embodiment is depicted in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>. In <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, SSD controller <b>100</b> transmits commands in a similar manner as the SSD controller <b>100</b> depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. NAND array controller <b>110</b> receives the commands SSD controller <b>100</b> transmits and, in turn, transmits commands to one or more NAND storage devices <b>120</b>. In <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, NAND array controller <b>110</b> is schematically depicted as connected over a single data path to both NAND storage devices <b>120</b><sub>1 </sub>and <b>120</b><sub>2</sub>. Similarly, NAND array controller <b>110</b> is connected to over a single data path to both NAND storage devices <b>120</b><sub>3 </sub>and <b>120</b><sub>4</sub>. The connections of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> are shown in a manner to illustrate that write commands received for and transmitted to NAND storage device <b>120</b><sub>1 </sub>by NAND array controller <b>110</b> are also transmitted by NAND array controller <b>110</b> to NAND storage device <b>120</b><sub>2</sub>. In like manner, write commands that NAND array controller <b>110</b> receives for and transmits to NAND storage device <b>120</b><sub>3 </sub>are also transmitted to NAND storage device <b>120</b><sub>4</sub>. Thus, data that is stored at a particular storage location in one NAND storage device <b>120</b> is &#x201c;mirrored&#x201d; (i.e., the same data is stored at the same storage location in another (mirror) NAND storage device <b>120</b>).</p><p id="p-0058" num="0057">As an example, referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, NAND array controller <b>110</b> may receive a complete command transmission for NAND storage device <b>120</b><i>i</i>. That is, NAND array controller <b>110</b> receives from SSD controller <b>100</b>: a write command according to, for example, the Toggle/ONFI protocol, a NAND address identifying NAND storage device <b>120</b><sub>1</sub>, one or more addresses of storage locations within NAND storage device <b>120</b><sub>1</sub>, and storage data to be stored at the one or more storage locations within NAND storage device <b>120</b><sub>1</sub>. In a mirroring embodiment, NAND array controller <b>110</b> enables a communication path to both NAND storage device <b>120</b><sub>1 </sub>and to a mirror NAND storage device <b>120</b> (for example, in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, to NAND storage device <b>120</b><sub>2</sub>). The communication path to each NAND storage device <b>120</b> is enabled, in embodiments, through asserting the appropriate Out_CE pins of NAND array controller <b>110</b>. In this example, NAND array controller <b>110</b> asserts pin Out_CE<b>0</b>, which is connected to the CE pin of NAND storage device <b>120</b><sub>1</sub>, and asserts pin Out_CE<b>1</b>, which is connected to the CE pin of NAND storage device <b>120</b><sub>2</sub>. Since communication paths to each of NAND storage devices <b>120</b><sub>1 </sub>and <b>120</b><sub>2 </sub>are enabled, both of these devices receive commands, addresses, and storage data that NAND array controller <b>110</b> transmits over the data bus through pins Out_DQ.</p><p id="p-0059" num="0058">Further, in mirroring embodiments, NAND array controller <b>110</b> is configured to recognize a corresponding mirror NAND storage device <b>120</b> for a target NAND storage device <b>120</b> that is identified by the NAND address received from SSD controller <b>100</b>. For example, a NAND storage device <b>120</b> and its corresponding mirror NAND storage device <b>120</b> is defined in a hash table stored in memory within NAND array controller <b>110</b>. Thus, in such an embodiment, and referring to <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, NAND array controller <b>110</b> stores a hash table, where a first entry associates a NAND address for NAND storage device <b>120</b><sub>1 </sub>with a NAND address for NAND storage device <b>120</b><sub>2</sub>. In addition, a second hash table entry associates a NAND address for NAND storage device <b>120</b><sub>3 </sub>with a NAND address for NAND storage device <b>120</b><sub>4</sub>. Note that a hash table is one example of a way of associating NAND addresses for NAND and mirror storage devices <b>120</b>, and that other ways of associating NAND address, such as relational databases, text files, separate address transmissions, and the like, are within the scope of the present invention.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is a block diagram that depicts the address components that are transmitted from SSD controller <b>100</b> to NAND array controller <b>110</b>, according to mirroring embodiments. As shown, address <b>600</b> comprises different segments, each of which is transmitted by SSD controller <b>100</b> during a separate clock cycle, referred to as an address cycle. As is the case for non-mirroring embodiments, an address cycle is preceded by SSD controller <b>100</b> asserting an Out_ALE pin and by de-asserting an Out_CLE pin, which, according to data protocols such as Toggle/ONFI, indicates to a target device that an address is to be transmitted over the data bus during a subsequent clock cycle. The first segment of address <b>600</b> is a NAND address. As previously mentioned, a NAND address is an address that identifies a particular NAND storage device <b>120</b> that is connected to a NAND array controller <b>110</b>, and is used by a NAND array controller <b>110</b> to enable a communication path to the identified target NAND storage device <b>120</b>. However, in the mirroring embodiment depicted in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, a NAND address includes a &#x201c;copy&#x201d; field. Note that the copy field is a single bit. The copy field indicates to NAND array controller <b>110</b> whether a particular NAND storage device <b>120</b> or its mirror device is to be accessed when a read command is issued in a current command transmission received from SSD controller <b>100</b>. If the copy field is set to 0, then, in embodiments, a &#x201c;primary&#x201d; NAND storage device <b>120</b> is the target of the read command. If the copy field is set to 1, then the mirror device is the target of the read command. Since a NAND address is typically 8 bits in size, mirroring embodiments allow for 7 of the 8 bits in a NAND address to be used to identify a target NAND storage device <b>120</b>. In such embodiments, the most significant bit (i.e., the left-most bit) of the NAND address indicates the target (primary or mirror) NAND storage device <b>120</b> to be accessed in connection with a read command.</p><p id="p-0061" num="0060">For example, during a read operation, SSD controller <b>100</b> may transmit the hexadecimal address 8A as a NAND address in a mirroring embodiment. In this case, the bit pattern for the NAND address is 10001010. If a binary value of 1 in the most significant (i.e., the left-most) bit position indicates that a mirror device is to be the target of a read command, NAND array controller <b>110</b> determines the target NAND storage device <b>120</b> based on the lower-order 7 bits of the NAND address, namely, bits 0001010. In addition, NAND array controller <b>110</b> determines the mirror device that corresponds to the target NAND storage device <b>120</b>. As previously mentioned, the corresponding mirror device may be determined, for example, using a hash table stored in the memory of NAND array controller <b>110</b>.</p><p id="p-0062" num="0061">As shown in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, address <b>600</b> also comprises a LUN address, a block address, and a page address. As was pointed out for non-mirroring embodiments, control unit <b>215</b> stores these address components, along with the NAND address, in buffer <b>212</b>. Further, as previously mentioned, the page address, block address, and LUN address collectively comprise a row address, which, when combined with a column address, forms a complete address of a storage location within a NAND storage device <b>120</b>. Further, since only 7 of the 8 bits of a NAND address are used to address a target NAND device in mirroring embodiments, NAND array controller <b>110</b> may address only 2<sup>31 </sup>unique row addresses in such embodiments. This is half the number of unique addresses available in non-mirroring embodiments, which, as previously mentioned, provide for 2<sup>32 </sup>unique row addresses.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is a flow diagram that illustrates a method <b>700</b> of enabling a communication path between an SSD controller <b>100</b> and a target NAND storage device <b>120</b> using a NAND array controller <b>110</b>, according to mirroring embodiments. <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is described in conjunction with <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, which is a signal diagram that depicts the timing of signals received by NAND array controller <b>110</b> at various steps in method <b>700</b>.</p><p id="p-0064" num="0063">Method <b>700</b> begins at step <b>710</b>, where a NAND array controller <b>110</b> receives a command for a target NAND storage device <b>120</b> from SSD controller <b>100</b>. As was previously described, the received command may be an op code that a target NAND storage device <b>120</b> executes, such as a read command or write command. In <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, the command received at step <b>710</b> is received at time t<sub>1</sub>. Note that, prior to time t<sub>1</sub>, the CLE pin is of NAND array controller <b>110</b> is asserted and the ALE pin of NAND array controller <b>110</b> is not asserted, indicating that a command is to be received at a subsequent clock cycle. Further, it should be noted that, at time t<sub>1</sub>, pin WE of NAND array controller <b>110</b> is asserted, which triggers NAND array controller <b>110</b> to receive data from the data bus.</p><p id="p-0065" num="0064">Next, at step <b>720</b>, NAND array controller <b>110</b> receives from SSD controller <b>100</b> one or more addresses for a target NAND device <b>120</b>. The receipt of the addresses is depicted in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref> as occurring at times t<sub>2</sub>, t<sub>3</sub>, t<sub>4</sub>, and t<sub>5</sub>. It should be noted that, prior to time t<sub>2</sub>, pin CLE of NAND array controller <b>110</b> is de-asserted and pin ALE of NAND array controller <b>110</b> is asserted. As previously mentioned, this assertion pattern indicates to NAND array controller <b>110</b> that an address is to be transmitted over the data bus during a subsequent clock cycle. Further, at time t<sub>2</sub>, NAND array controller <b>110</b> receives a NAND address. In mirroring embodiments, a portion of the NAND address (typically, the lower order bits) identifies a particular NAND storage device <b>120</b> that is connected to the NAND array controller <b>110</b>. For example, where a NAND address is 8 bits in size, the lower-order 7 bits of the NAND address identifies a particular NAND storage device <b>120</b>. The highest order bit is a copy bit, which indicates the particular NAND storage device <b>120</b> or a mirror NAND storage device <b>120</b> is to be accessed when a read command is received at step <b>710</b>. In one or more embodiments, if the highest order bit of the NAND address is a 1, then the mirror NAND storage device <b>120</b> is accessed.</p><p id="p-0066" num="0065">As shown in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, at time t<sub>3 </sub>NAND array controller <b>110</b> receives a LUN address, at time t<sub>4 </sub>NAND array controller <b>110</b> receives a block address, and at time t<sub>5 </sub>NAND array controller <b>110</b> receives a page address. As previously mentioned, a LUN address, a block address, and a page address comprise the address of a row within a NAND storage device <b>120</b>.</p><p id="p-0067" num="0066">At step <b>725</b>, NAND array controller <b>110</b> receives data that is to be stored in the target NAND storage device <b>120</b>. In embodiments, the data received at step <b>725</b> may be received during a single clock cycle. In other embodiments, the data received at step <b>725</b> may be received over multiple clock cycles. As shown in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, the data is received during a single clock cycle at time t<sub>6</sub>. As was the case for non-mirroring embodiments, prior to receiving the data, both pins CLE and ALE of NAND array controller <b>110</b> are de-asserted. This indicates to NAND array controller <b>110</b> that data subsequently received over the data bus comprises data to be stored to a target NAND storage device <b>120</b>.</p><p id="p-0068" num="0067">Method <b>700</b> then proceeds to step <b>730</b>. Having received a command for the target NAND storage device, one or more addresses for the target NAND storage device <b>120</b>, and data to be stored at storage locations within the target NAND storage device <b>120</b>, NAND array controller <b>110</b>, at step <b>730</b>, stores the received data in buffer <b>212</b>.</p><p id="p-0069" num="0068">Next, at step <b>735</b>, NAND array controller <b>110</b> determines, in the event that a read command is received at step <b>710</b>, whether a NAND storage device <b>120</b> or a mirror storage device <b>120</b> is to be accessed. In embodiments, NAND array controller reads the NAND address stored in buffer <b>212</b> and makes the determination by examining the highest order bit of the NAND address.</p><p id="p-0070" num="0069">Method <b>700</b> then proceeds to step <b>740</b>. At step <b>740</b>, NAND array controller <b>110</b> determines the target NAND storage device <b>120</b> that is to receive the command, addresses, and storage data.</p><p id="p-0071" num="0070">At step <b>745</b>, NAND array controller <b>110</b> determines a mirror NAND storage device <b>120</b> based on the NAND address. As was previously described, a NAND storage device <b>120</b> and its corresponding mirror NAND storage device <b>120</b> may be defined in a hash table stored in memory within NAND array controller <b>110</b>.</p><p id="p-0072" num="0071">Based on the determinations made at steps <b>735</b>, <b>740</b>, and <b>745</b>, NAND array controller <b>110</b>, at step <b>750</b>, enables a communication path to the target NAND storage device <b>120</b> and/or to the mirror NAND storage device <b>120</b>. In the event that a write command is received at step <b>710</b>, NAND array controller <b>110</b> enables a communication path to both the target NAND storage device <b>120</b> and to the mirror NAND storage device <b>120</b>. In the event that a read command is received at step <b>710</b>, NAND array controller <b>110</b> enables a communication path to either of the target NAND storage device <b>120</b> or to the mirror NAND storage device <b>120</b>, based on the setting of the highest order bit of the NAND address determined in step <b>735</b>. In embodiments, the enablement of a communication path to the target NAND storage device <b>120</b> and/or to the mirror NAND storage device <b>120</b> is performed by asserting appropriate Out_CE pins that are each connected to the target and mirror NAND storage devices. For example, in view of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, assume the NAND address received over the data bus at step <b>720</b> identifies NAND storage device <b>120</b><i>i</i>. Further, assume that NAND array controller <b>110</b> associates (through, for example, a hash table entry) NAND storage device <b>120</b><sub>1 </sub>with a mirror NAND storage device <b>120</b><sub>2</sub>. Further, assume that a write command has been received by the NAND array controller <b>110</b>. In such a case, NAND array controller <b>110</b> asserts both pins Out_CE<b>0</b> and Out_CE<b>1</b>, which are connected, respectively to the CE pins of NAND storage devices <b>120</b><sub>1 </sub>and <b>120</b><sub>2</sub>.</p><p id="p-0073" num="0072">After communication paths to a target NAND storage device <b>120</b> and to a mirror NAND storage device <b>120</b> are enabled at step <b>750</b>, method <b>700</b> proceeds to step <b>760</b>. At step <b>760</b>, NAND array controller <b>110</b> transmits the command, addresses, and data to the target NAND storage device <b>120</b> and to the mirror NAND storage device <b>120</b>. Note that the command, addresses, and data are transmitted to both NAND and mirror storage devices <b>120</b> in the event that a write command has been received by NAND array controller <b>110</b>. In the event that a read command is received, NAND array controller <b>110</b> transmits to only one of either the NAND storage device <b>120</b> or the mirror NAND storage device <b>120</b>, based on the highest order bit of the NAND address. Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the transmission of the command, addresses, and storage data is performed by control unit <b>215</b> and IP <b>211</b>. Control unit <b>215</b> reads the command, addresses, and storage data from buffer <b>212</b> and transmits this data to IP <b>211</b>. IP <b>211</b>, which is the protocol interface for NAND array controller <b>110</b>, then transmits the command, addresses, and storage data to the target NAND storage device <b>120</b> over the data bus through pins Out_DQ. It is to be noted that control unit <b>215</b> does not transmit the NAND address to IP <b>211</b>. In this embodiment, the NAND address is only used by control unit <b>215</b> to determine whether a NAND storage device <b>120</b> or a mirror storage device <b>120</b> is a target of a read command (using the highest order bit), and to identify the target NAND storage device <b>120</b> to which a communication path is to be enabled (using the lower-order bits). Further, IP <b>211</b>, when transmitting the command, addresses, and storage data to either or both the target NAND storage device <b>120</b> and the mirror NAND storage device <b>120</b>, does so according to the protocol that SSD controller <b>100</b> uses to communicate with NAND devices, such as Toggle/ONFI. It is to be noted that when the command, addresses, and data are transmitted over Out_DQ, both the target NAND storage device <b>120</b> and the mirror NAND storage device <b>120</b> are configured to receive this data because communication paths to both storage devices are enabled at step <b>750</b>.</p><p id="p-0074" num="0073">After NAND array controller <b>110</b> transmits the command, addresses, and data to the target NAND storage device <b>120</b> and to the mirror NAND storage device, through IP <b>211</b>, method <b>700</b> terminates.</p><p id="p-0075" num="0074">While certain embodiments have been described, these embodiments have been presented by way of example only, and are not intended to limit the scope of the inventions. Indeed, the novel embodiments described herein may be embodied in a variety of other forms; furthermore, various omissions, substitutions and changes in the form of the embodiments described herein may be made without departing from the spirit of the inventions. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of the inventions.</p><p id="p-0076" num="0075">Many variations, modifications, additions, and improvements are possible. Plural instances may be provided for components, operations or structures described herein as a single instance. Boundaries between various components, operations and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the disclosure(s). In general, structures and functionality presented as separate components in exemplary configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements may fall within the scope of the appended claim(s).</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A controller connectable between a semiconductor processor and a plurality of memory devices including a first and a second memory devices, the controller comprising:<claim-text>an enable input configured to connect to an enable output of the semiconductor processor;</claim-text><claim-text>a data input configured to connect to a data output of the semiconductor processor;</claim-text><claim-text>a buffer configured to store write data to be written to at least the first or second memory devices, and information according to a storage location of the first or second memory devices to which the write data is to be written;</claim-text><claim-text>a data output configured to connect to a data input of each of the first and second memory devices;</claim-text><claim-text>a first enable output configured to connect to an enable input of the first memory device; and</claim-text><claim-text>a second enable output configured to connect to an enable input of the second memory device,</claim-text><claim-text>wherein in response to the enable input of the controller being asserted, the controller is configured to:</claim-text><claim-text>receive the information according to the storage location from the semiconductor processor,</claim-text><claim-text>store the received information into the buffer, and</claim-text><claim-text>assert one of the first and second enable outputs on the basis of the enable input being asserted and the stored information.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The controller according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the information according to the storage location identifies one of the first and second memory devices.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The controller according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the controller is further configured to:<claim-text>receive a command designating to write the write data from the semiconductor processor,</claim-text><claim-text>store the received command into the buffer, and</claim-text><claim-text>assert the one of the first and second enable outputs also on the basis of the stored command.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The controller according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the controller is further configured to transmit, to the one of the first and second memory devices identified by the stored information via the data output, a command and address information on the basis of the stored information and the stored command, the address information specifying the storage location of the one of the first and second memory devices identified by the stored information.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The controller according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the controller is further configured to:<claim-text>receive the write data from the semiconductor processor; and</claim-text><claim-text>store the received write data into the buffer.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The controller according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the controller is further configured to transmit, to the one of the first and second memory devices identified by the stored information via the data output, the write data stored in the buffer.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The controller according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the controller is further configured to:<claim-text>receive the write data from the semiconductor processor; and</claim-text><claim-text>store the received write data into the buffer.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The controller according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the controller is further configured to transmit, to the one of the first and second memory devices identified by the stored information via the data output, the write data stored in the buffer.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The controller according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the plurality of memory devices further includes a third memory device,</claim-text><claim-text>the controller further comprises a third enable output configured to connect to an enable input of the third memory device, and</claim-text><claim-text>the data output is configured to connect to a data input of the third memory device.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The controller according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein in response to the enable input of the controller being asserted, the controller is configured to assert two of the first, second, and third enable outputs on the basis of the enable input being asserted and the stored information.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method performed by a controller connectable between a semiconductor processor and a plurality of memory devices including a first and a second memory devices, the controller comprising:<claim-text>an enable input configured to connect to an enable output of the semiconductor processor;</claim-text><claim-text>a data input configured to connect to a data output of the semiconductor processor;</claim-text><claim-text>a buffer configured to store write data to be written to at least the first or second memory devices, and information according to a storage location of the first or second memory devices to which the write data is to be written;</claim-text><claim-text>a data output configured to connect to a data input of each of the first and second memory devices;</claim-text><claim-text>a first enable output configured to connect to an enable input of the first memory device; and</claim-text><claim-text>a second enable output configured to connect to an enable input of the second memory device,</claim-text><claim-text>the method comprising:</claim-text><claim-text>in response to the enable input of the controller being asserted,</claim-text><claim-text>receiving the information according to the storage location from the semiconductor processor;</claim-text><claim-text>storing the received information into the buffer; and</claim-text><claim-text>asserting one of the first and second enable outputs on the basis of the enable input being asserted and the stored information.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the information according to the storage location identifies one of the first and second memory devices.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>receiving a command designating to write the write data from the semiconductor processor;</claim-text><claim-text>storing the received command into the buffer; and</claim-text><claim-text>asserting the one of the first and second enable outputs also on the basis of the stored command.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>transmitting, to the one of the first and second memory devices identified by the stored information via the data output, a command and address information on the basis of the stored information and the stored command, the address information specifying the storage location of the one of the first and second memory devices identified by the stored information.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:<claim-text>receiving the write data from the semiconductor processor; and</claim-text><claim-text>storing the received write data into the buffer.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>transmitting, to the one of the first and second memory devices identified by the stored information via the data output, the write data stored in the buffer.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>receiving the write data from the semiconductor processor; and</claim-text><claim-text>storing the received write data into the buffer.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:<claim-text>transmitting, to the one of the first and second memory devices identified by the stored information via the data output, the write data stored in the buffer.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein<claim-text>the plurality of memory devices further includes a third memory device,</claim-text><claim-text>the controller further comprises a third enable output configured to connect to an enable input of the third memory device, and</claim-text><claim-text>the data output is configured to connect to a data input of the third memory device.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, further comprising:<claim-text>in response to the enable input of the controller being asserted, asserting two of the first, second, and third enable outputs on the basis of the enable input being asserted and the stored information.</claim-text></claim-text></claim></claims></us-patent-application>