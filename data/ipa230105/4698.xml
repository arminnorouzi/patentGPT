<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004699A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004699</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930081</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>31</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>367</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>392</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>398</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>31</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>367</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>392</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>398</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2119</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR DESIGNING A MODULE SEMICONDUCTOR PRODUCT</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17076072</doc-number><date>20201021</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11481533</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930081</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62923615</doc-number><date>20191021</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SEMICONDUCTOR COMPONENTS INDUSTRIES, LLC</orgname><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>VICTORY</last-name><first-name>James Joseph</first-name><address><city>Trabuco Canyon</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>NEUMAIER</last-name><first-name>Klaus</first-name><address><city>Erding</city><country>DE</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>XIAO</last-name><first-name>YunPeng</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>HARPER</last-name><first-name>Jonathan</first-name><address><city>Munich</city><country>DE</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>VALENTA</last-name><first-name>Vaclav</first-name><address><city>Brno</city><country>CZ</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>BENCZKOWSKI</last-name><first-name>Stanley</first-name><address><city>Bear Creek Township</city><state>PA</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>BORDIGNON</last-name><first-name>Thierry</first-name><address><city>Toulouse</city><country>FR</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>CHU</last-name><first-name>Wai Lun</first-name><address><city>Kowloon</city><country>HK</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>SEMICONDUCTOR COMPONENTS INDUSTRIES, LLC</orgname><role>02</role><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Implementations of a method of designing a module semiconductor product may include receiving a selection of a module type, one or more die, a placement of one or more wires, clips, or pins; and generating, using a processor, a module configuration file. The method may include generating a module bonding diagram using a build diagram system module; selecting one or more SPICE models corresponding with the die; and generating a product SPICE model and a three dimensional model for the module semiconductor product. The method may include generating one or more datasheet characteristics of the module semiconductor product with at least the product SPICE model and the product simulation module, generating a product datasheet for the module semiconductor product using the datasheet formation module, and providing access to at least the module bonding diagram, the product SPICE model, the three dimensional model, and the product datasheet to the user.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="193.38mm" wi="158.75mm" file="US20230004699A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="214.80mm" wi="162.56mm" file="US20230004699A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="245.62mm" wi="170.18mm" file="US20230004699A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="198.12mm" wi="170.26mm" file="US20230004699A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="207.52mm" wi="145.29mm" orientation="landscape" file="US20230004699A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="220.05mm" wi="145.20mm" orientation="landscape" file="US20230004699A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="192.28mm" wi="135.81mm" orientation="landscape" file="US20230004699A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="218.61mm" wi="132.93mm" orientation="landscape" file="US20230004699A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="205.99mm" wi="144.53mm" orientation="landscape" file="US20230004699A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="192.28mm" wi="135.72mm" orientation="landscape" file="US20230004699A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="214.04mm" wi="92.37mm" orientation="landscape" file="US20230004699A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="227.92mm" wi="145.37mm" orientation="landscape" file="US20230004699A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="186.18mm" wi="144.02mm" orientation="landscape" file="US20230004699A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation application of the earlier U.S. Utility Patent Application to Victory et al. entitled &#x201c;Systems and Methods for Designing a Module Semiconductor Product,&#x201d; application Ser. No. 17/076,072, filed Oct. 21, 2020, now pending, which application claims the benefit of the filing date of U.S. Provisional Patent Application 62/923,615, entitled &#x201c;System, Apparatus, and Methods for Custom and/or Automated Design of Semiconductor Devices&#x201d; to Victory et al. which was filed on Oct. 21, 2019, the disclosures of each of which are hereby incorporated entirely herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Aspects of this document relate generally to systems and methods, such as systems and methods for designing a discrete device product. More specific implementations involve systems and methods for automated electronic component design.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Electronic components include a wide variety of devices including transistors, resistors, capacitors, and other devices designed to manipulate/control electrical charge. Microprocessors include various electronic components assembled on a single integrated circuit design that are capable of performing various analog or digital calculations.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">Implementations of a system configured for designing a module semiconductor product, the system may include one or more hardware processors configured by machine-readable instructions to: use a first interface generated by a computing device to receive from a user a selection of a module type; use a first interface generated by a computing device to receive from a user a selection of one or more die; and use a first interface generated by a computing device to receive from a user a placement of one or more wires, one or more clips, or one or more pins. The one or more hardware processors may be configured to generate, using a processor, a module configuration file; generate, using a processor, a module bonding diagram using a build diagram system module with the module configuration file; select, using a processor, one or more SPICE models corresponding with the one or more die; and provide, using a processor, the module configuration file, the module bonding diagram, and the one or more SPICE models to a three dimensional simulation module. The one or more hardware processors may be configured to generate, using a processor, a product SPICE model and a three dimensional model for the module semiconductor product using the three dimensional simulation module; provide, using a processor, at least the product SPICE model to a product simulation module; generate, using a processor, one or more datasheet characteristics of the module semiconductor product with at least the product SPICE model and the product simulation module; and provide, using a processor, the one or more datasheet characteristics to a datasheet formation module. The one or more hardware processors may be configured to generate, using a processor, a product datasheet for the module semiconductor product using the datasheet formation module with at least the module configuration file, the module bonding diagram, and the one or more datasheet characteristics; and provide access to at least the module bonding diagram, the product SPICE model, the three dimensional model, and the product datasheet to the user by generating a second interface with the computing device.</p><p id="p-0006" num="0005">Implementations of a system configured for designing a module semiconductor product may include one, all, or any of the following:</p><p id="p-0007" num="0006">The product SPICE model may include die SPICE models, a module parasitic extraction model, and a thermal model.</p><p id="p-0008" num="0007">The one or more die may be power semiconductor die.</p><p id="p-0009" num="0008">The module configuration file may be a Java Script Object Notation file.</p><p id="p-0010" num="0009">The three dimensional simulation module may use a finite element modeling process to generate the product SPICE model of the module semiconductor product.</p><p id="p-0011" num="0010">The system may be configured to, after receiving from the user the selection of one or more die, retrieve a die SPICE model from a die SPICE modeling system.</p><p id="p-0012" num="0011">The system may be configured to, after receiving from the user the selection of one or more wires, use a processor to use one or more design rules to generate flight lines for the one or more wires in the first interface.</p><p id="p-0013" num="0012">The system may be configured to, after receiving from the user the selection of one or more pins, use a processor to indicate an acceptable location for the one or more pins in the first interface.</p><p id="p-0014" num="0013">The system may be configured to use a plurality of bonding design rules with the module configuration file.</p><p id="p-0015" num="0014">The system may be configured to provide access to a module schematic diagram with the second interface.</p><p id="p-0016" num="0015">Implementations of a method of designing a module semiconductor product may include, using a first interface generated by a computing device, receiving from a user a selection of a module type; using a first interface generated by a computing device, receiving from a user a selection of one or more die; using a first interface generated by a computing device, receiving from a user a placement of one or more wires, one or more clips, or one or more pins; and generating, using a processor, a module configuration file. The method may include generating, using a processor, a module bonding diagram using a build diagram system module with the module configuration file; selecting, using a processor, one or more SPICE models corresponding with the one or more die; providing, using a processor, the module configuration file, the module bonding diagram, and the one or more SPICE models to a three dimensional simulation module; and generating, using a processor, a product SPICE model and a three dimensional model for the module semiconductor product using the three dimensional simulation module. The method may include providing, using a processor, at least the product SPICE model to a product simulation module; generating, using a processor, one or more datasheet characteristics of the module semiconductor product with at least the product SPICE model and the product simulation module; providing, using a processor, the one or more datasheet characteristics to a datasheet formation module; generating, using a processor, a product datasheet for the module semiconductor product using the datasheet formation module with at least the module configuration file, the module bonding diagram, and the one or more datasheet characteristics; and providing access to at least the module bonding diagram, the product SPICE model, the three dimensional model, and the product datasheet to the user by generating a second interface with the computing device.</p><p id="p-0017" num="0016">Implementations of a method of designing a module semiconductor product may include one, all, or any of the following: the</p><p id="p-0018" num="0017">The product SPICE model may include die SPICE models, a module parasitic extraction model, and a thermal model.</p><p id="p-0019" num="0018">The one or more die may be power semiconductor die.</p><p id="p-0020" num="0019">The module configuration file may be a Java Script Object Notation file.</p><p id="p-0021" num="0020">The three dimensional simulation module uses a finite element modeling process to generate the product SPICE model of the module semiconductor product.</p><p id="p-0022" num="0021">Receiving from the user the selection of one or more die further may include retrieving a die SPICE model from a die SPICE modeling system.</p><p id="p-0023" num="0022">The receiving from the user the selection of one or more wires further may include, using a processor, using one or more design rules to generate flight lines for the one or more wires in the first interface.</p><p id="p-0024" num="0023">The receiving from the user the selection of one or more pins further may include, using a processor, indicating an acceptable location for the one or more pins in the first interface.</p><p id="p-0025" num="0024">Generating, using the processor, the module bonding diagram using the build diagram system module may further include using a plurality of bonding design rules with the module configuration file.</p><p id="p-0026" num="0025">Providing access to at least the module bonding diagram, the product SPICE model, the three dimensional model, and the product datasheet to the user by generating the second interface with the computing device may further include providing access to a module schematic diagram.</p><p id="p-0027" num="0026">The foregoing and other aspects, features, and advantages will be apparent to those artisans of ordinary skill in the art from the DESCRIPTION and DRAWINGS, and from the CLAIMS.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0028" num="0027">Implementations will hereinafter be described in conjunction with the appended drawings, where like designations denote like elements, and:</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an implementation of a system configured for designing a module semiconductor product;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates a first portion of a flowchart of a method for designing a module semiconductor product;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> illustrates a second portion of a flowchart of a method for designing a module semiconductor product;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a portion of a first interface that shows an initial floorplan view of a substrate for a module semiconductor product;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a portion of a first interface that shows a floorplan view of the substrate of <figref idref="DRAWINGS">FIG. <b>3</b></figref> during a wire placement operation;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a portion of a first interface that shows a module bonding diagram of the substrate of <figref idref="DRAWINGS">FIG. <b>3</b></figref> following generation of a module bonding diagram;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a portion of a first interface that shows a floorplan view of the substrate of <figref idref="DRAWINGS">FIG. <b>3</b></figref> during a pin placement operation;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a portion of a first interface that shows a floorplan view of another implementation of a substrate following die placement, wire placement, and pin placement operations;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a portion of a first interface shows a module bonding diagram for the substrate of <figref idref="DRAWINGS">FIG. <b>7</b></figref>;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an implementation of a module electrical schematic generated by the system;</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an implementation of a three-dimensional model generated by a three-dimensional simulation module; and</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a detailed view of an implementation of a three-dimensional model illustrating wire placement and wire sizes in the model.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0041" num="0040">This disclosure, its aspects and implementations, are not limited to the specific components, assembly procedures or method elements disclosed herein. Many additional components, assembly procedures and/or method elements known in the art consistent with the intended for designing a module semiconductor product will become apparent for use with particular implementations from this disclosure. Accordingly, for example, although particular implementations are disclosed, such implementations and implementing components may comprise any shape, size, style, type, model, version, measurement, concentration, material, quantity, method element, step, and/or the like as is known in the art for designing a module semiconductor product, and implementing components and methods, consistent with the intended operation and methods.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system <b>100</b> configured for designing a module semiconductor product, in accordance with one or more implementations. In some implementations, system <b>100</b> may include one or more computing platforms <b>102</b>. Computing platform(s) <b>102</b> may be configured to communicate with one or more remote platforms <b>104</b> according to a client/server architecture, a peer-to-peer architecture, and/or other architectures. Remote platform(s) <b>104</b> may be configured to communicate with other remote platforms via computing platform(s) <b>102</b> and/or according to a client/server architecture, a peer-to-peer architecture, and/or other architectures. Users may access system <b>100</b> via remote platform(s) <b>104</b>.</p><p id="p-0043" num="0042">Computing platform(s) <b>102</b> may be configured by machine-readable instructions <b>106</b>. Machine-readable instructions <b>106</b> may include one or more instruction modules. The instruction modules may include computer program modules. The instruction modules may include one or more of interface using module <b>108</b>, configuration generating module <b>110</b>, bonding generating module <b>112</b>, SPICE model selection module <b>114</b>, configuration file providing module <b>116</b>, three dimensional simulation module <b>118</b>, product simulation module <b>122</b>, datasheet characteristic providing module <b>124</b>, product datasheet formation module <b>126</b>, access providing module <b>128</b>, and/or other instruction modules.</p><p id="p-0044" num="0043">As described further herein, interface generating module <b>108</b> generates a first interface using a computing device in response to receiving from a user a selection of a module type. In various implementations, the module type may include one or more package configurations. A package configuration in particular implementations may include one or more lead frames and one or more direct bonded copper substrates. In various implementations, a particular package configuration may include multiple direct bonded copper substrate configurations. Following selection of a module type, interface generating module <b>108</b> generates a floorplan view of the substrate <b>300</b> of the module. Example of such a floorplan view of a module substrate is illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. As illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the floorplan view shows routing lines formed on the surface of the substrate <b>300</b> to which die, clips, wires, and pins will subsequently be affixed. <figref idref="DRAWINGS">FIG. <b>3</b></figref> also illustrates temperature sensing devices affixed to the surface of the substrate <b>300</b>. In various implementations, the modules may be dual side cooling modules.</p><p id="p-0045" num="0044">Interface generating module <b>108</b> also generates a first interface using a computing device after receiving from a user a selection of one or more die. The one or more die may be power semiconductor die in various implementations; however, in other implementations in the electronic device may be used, such as, by non-limiting example, integrated circuits (IC), active devices, passive devices, components, capacitors, transistors, resistors, gate drivers, temperature sensing devices, and any other electronic component type. Interface generating module <b>108</b> generates a first interface using computing device after receiving from a user a placement of one or more wires, one or more clips, and one or more pins/terminals. In various implementations, ribbons may also be used to make connections and may also be included for placement using the first interface by the user. Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a floorplan view of the substrate <b>300</b> is illustrated following placement of die <b>402</b> and wire <b>404</b>. In various system implementations, during selection of one or more wires or one or more clips the processor may use one or more design rules to generate flight lines by highlighting various locations on the substrate <b>300</b> which are acceptable for the one or more wires or one or more clips to be placed using the first interface so that the user can determine allowed locations for placement of an end of the one or more wires. In various system implementations, during selection of one or more pins/terminals the system may use the processor to indicate an acceptable location for the one or more pins in the first interface. Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the acceptable locations for the one or more pins/terminals may be indicated in dotted lines <b>600</b> on the substrate <b>300</b> during the pin placement portion of the process.</p><p id="p-0046" num="0045">Following placement of the pins/terminals, configuration generating module <b>110</b> generates, using a processor, a module configuration file. The module configuration file may be a Java Script Object Notation (JSON) file that, in various implementations, contains, in an ordered hierarchy, a description of the various objects and layers in which those objects are placed on the substrate. The various objects may include, by non-limiting example, ICs, die, wires, passive components, temperatures sensing devices, clips, bonding locations, routing metal lines, pins, terminals, connectors, input ports, output ports, ribbons, and any other substrate component. Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, an implementation of a first interface is illustrated following generation of the module configuration file for another substrate implementation <b>700</b>. As illustrated, all the pins, wires, and die are illustrated as placed in the allowed locations as determined by implementing design rules on the substrate <b>700</b>. While in the view of <figref idref="DRAWINGS">FIG. <b>7</b></figref> the routing of the wiring is illustrated, this routing still needs to be formally checked and a bonding diagram suitable for further simulation and ultimate use with wire bonders in production. In various implementations, the configuration generating module <b>110</b> may, during the generation process, using design rule checker invalidate the placement of all the components on the substrate <b>700</b>. In particular implementations, the reliability rule checker may also be implemented either in combination with the desirable checker or on its own. The reliability rule checker may utilize various reliability rules developed in addition to the design rules to ensure that various process marginalities identified as risks to reliability are avoided in the design. For example, a reliability rule may specify the proportions of current need to be carried by adjacent wires to ensure no wire melts or is bonded to any other wire by heat.</p><p id="p-0047" num="0046">Bonding generating module <b>112</b> generates, using a processor, a two-dimensional (2D) module bonding diagram using a build diagram system module with the module configuration file. <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>8</b></figref> illustrate a view of a substrate <b>500</b>, <b>800</b> in the first interface following generating of the module bonding diagram. As illustrated, the formal placement of each wire, pin, and die has been constructed by the build system diagram module using the module configuration file and the resulting output is now ready for further use in simulations. In various implementations, the module bonding diagram may be preliminary and may subsequently be adjusted by a user for a particular wire bonder or clip configuration or other tool processing requirement as part of production implementation. However, for the purposes of further design and simulation of the module, the module bonding diagram may be sufficiently accurate to allow for real simulation and product performance characteristics to be calculated as the changes needed in production may be only nominal for the bonding to be carried out. In those implementations where the module is a dual side cooling module, the 2D module bonding diagram may include multiple layers to account for each of the 2 or more direct bonded copper substrates included in the dual side cooling module.</p><p id="p-0048" num="0047">During the process where the user uses the first interface to select and place die, the system uses SPICE model selection module <b>114</b> to select, using a processor, one or more SPICE models corresponding with the one or more die. In various system implementations, during selection of one or more die by the user may further include using the first interface to retrieve a die SPICE model from a die SPICE modeling system. The die SPICE modeling system may include a database of die SPICE models that have been previously generated by a system that employs a technology computer aided design (TCAD) module that uses a wide variety of computer aided modeling techniques to create the product spice model such as, by non-limiting example, a finite element modeling process, electrical simulations, deep learning techniques, neural networks, engineering calculations numerical methods, any combination of the foregoing, and any other engineering modeling technique, to generate the product SPICE model of each die.</p><p id="p-0049" num="0048">In various system implementations, the first interface may include components that allow the user to select various variation limits for one, any, or all of the electrical parameters associated with a die and/or module. By non-limiting example, these variation limits may be set using the interface to select a minimum or a maximum allowed amount of variation for a particular parameter. In the interface, this selection may be done using a checkbox element. In various implementations, these variation limits may be referred to as corner limits. Non-limiting examples of electrical parameters that may employ corner limits may be threshold voltage (Vth), RDSon, capacitance, or Qg or any other or any other electrical parameter of the die/module in various system and method implementations. For module products, the ability to utilize corner limits/models may be particularly important because the various die in the module may not be all operating at the same process conditions during the operation of the module. In various implementations of, each die may be operating in an uncorrelated manner to the operation of each other die in the module. The ability to utilize corner limits/models may allow the user to make a module more robust to die specific failures during the development/simulation process. During system operation, the corner limits are used in the formation of the product SPICE model as the system simulates the corner limits by adjusting internal process parameters in the SPICE model(s) used by the system to create the product SPICE model. The resulting product SPICE model's ability to predict product performance is accordingly extended within the range of the corner limits. This adjusted product SPICE model then can be used by the product simulation module <b>122</b> as described hereafter to provide datasheet characteristics that show typical performance as well as performance according to the amount of particular corner limit for a given electrical parameter. These datasheet characteristics can then be included in a datasheet associated with the module semiconductor product using the processes and systems disclosed hereafter.</p><p id="p-0050" num="0049">Following completion of the generation of the module bonding diagram, configuration file providing module <b>116</b> provides, using a processor, the module configuration file, the module bonding diagram, and the one or more die SPICE models to a three dimensional simulation module <b>118</b>. In various system and method implementations, the three dimensional simulation module <b>118</b> can perform a variety of operations in a wide variety of orderings. While particular orderings of operations are disclosed in this document, these are merely for the exemplary purposes of this disclosure. For example, in a particular implementation, the three dimensional simulation model <b>118</b> may receive the two-dimensional module bonding diagram and a schematic showing the electrical connections between the various devices in the module, conduct three-dimensional modeling, then finite element method modeling and then SPICE model integration and generation into a product SPICE model. This is serial order of operations uses the results of each step to enable performing each other step. In other implementations however, one or more of these operations may be performed in a different order or in parallel with the other operations. However in various implementations disclosed in this document the various three-dimensional related operations are carried out by the three-dimensional simulation module <b>118</b>. In various implementations, separate modules for each operation may be employed, but in this document these modules are grouped together and referred to as the three-dimensional simulation module.</p><p id="p-0051" num="0050">In particular implementations, the three dimensional simulation module <b>118</b> first generates a three-dimensional model for the module semiconductor product. In generating the three-dimensional model, the three-dimensional simulation module <b>118</b> may employ Python or another scripting language to generate the three-dimensional model from the JSON file created by the bonding generating module <b>112</b> (using the 2D bonding diagram). In particular implementations, the three-dimensional model generation may be carried out using the simulation package marketed under the tradename SPACECLAIM by Ansys Inc of Canonsburg, Pa. Referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, a perspective view of an implementation of a three-dimensional model <b>1000</b> of a module product following three-dimensional modeling is illustrated. The detail view of the corner of the model <b>1000</b> illustrated in <figref idref="DRAWINGS">FIG. <b>11</b></figref> shows how the three-dimensional simulation module <b>118</b> took the inputs from the module bonding diagram to three-dimensional model each of the bondwires <b>1002</b>, <b>1004</b> down to the different wire thicknesses of the wires. In various implementations, the three-dimensional model may be provided to the user in either of the first interface or a 2<sup>nd </sup>interface in the form of a three-dimensional computer aided drawing (CAD) file format such as, by non-limiting example, an Initial Graphics Exchange (IGS) format, a Standard for the Exchange of Product model data (STEP) format, or any other computer aided drawing file format.</p><p id="p-0052" num="0051">In particular implementations, the three-dimensional simulation model <b>118</b> then takes the three-dimensional model and the module bonding diagram and performs a finite element method (FEM) simulation of various parasitic and thermal aspects presented by the three-dimensional model and the bonding implementation described in the module bonding diagram. In various implementations, the parasitics simulation may be carried out by the three dimensional simulation module using the simulation package marketed under the tradename Q3D by Ansys, Inc. of Canonsburg, Pa. In various implementations, the three-dimensional simulation model <b>118</b> performs solid and simulation modeling and modeling of electrical parasitics to form a parasitic network SPICE model. In various parasitic extraction modeling implementations, the modeling may include direct current (DC) self and mutual resistance modeling to capture static electrical conduction losses and alternating current (AC) self and mutual inductance and capacitance modeling to capture dynamic electrical behavior.</p><p id="p-0053" num="0052">Following FEM simulation, in various implementations, the three dimensional simulation module <b>118</b> may employ the simulation package marketed under the tradename ICEPAK by Ansys, Inc. to generate a thermal model for the module being designed. During thermal modeling, in various implementations the thermal power to be dissipated for each die may be retrieved from modeling data for each die previously determined by a discrete or die device product modeling system stored in a database. Thermal modeling may include transient sweep analysis for determining step response curves and setting various boundary conditions for use by the models (fixed temperatures, thermal resistances, heat transfer coefficients, etc.). The thermal modeling is summarized in a thermal SPICE model constructed using a distributed, coupled electro-thermal modeling approach employing a Cauer or Foster network synthesis process.</p><p id="p-0054" num="0053">In various implementations, the calling of the various modeling components carried out within the three dimensional simulation model may be done using scripting and other batch automation techniques. Following all of the modeling carried out by the three-dimensional simulation module <b>118</b>, the three-dimensional simulation module <b>118</b> may then generate the product SPICE model. In various implementations, the generation of the product spice model from the die, parasitic, and thermal models may be done using scripting and other batch automation techniques. By way of non-limiting example, the product SPICE model (overall) may include die SPICE models, a module parasitic extraction model/SPICE model, and a thermal model/SPICE model. The product SPICE model in particular implementations includes PORT definitions, a top level subcircuit, die SPICE models, a Q3D model, a thermal model, and schematic symbols. The resulting product SPICE model may be generated with a SPICE agnostic syntax such that any commercial SPICE simulator can be supported. Non-limiting example of commercial SPICE simulators may include the simulator marketed under the tradename PSPICE by Cadence Design Systems; the simulator marketed under the tradename LTSPICE by Analog Devices of Norwood Mass.; the simulator marketed under the tradename HSPICE by Synopsys, Inc. of Mountain View, Calif.; the simulator marketed under the tradename ELDO by Mentor Graphics of Wilsonville, Oreg.; the simulator marketed under the tradename SIMETRIX by SlMetrix Technologies LTD of Berkshire, UK; the simulator marketed under the tradename SPECTRE by Cadence Design Systems; the simulator marketed under the tradename ADS by Keysight Technologies Inc. of Santa Rosa, Calif.; the simulator marketed under the tradename SABER by Synopsys, Inc.; the simulator marketed under the tradename SIMPLORER by Ansys, Inc. of Canonsburg, Pa.; or the simulator marketed under the tradename MICROCAP by Spectrum Software. After generation, the product SPICE model may also, in some implementations, be transmitted for inclusion in a database of product SPICE models for later selection by a user.</p><p id="p-0055" num="0054">Following transmission of at least the product SPICE model to product simulation module, the product simulation module <b>122</b> generates, using a processor, one or more datasheet characteristics of the module semiconductor product with at least the product SPICE model. In particular implementations, the product simulation module <b>122</b> may utilize, by non-limiting example, ELDO or SIMETRIX or any other SPICE simulator disclosed in this document. By way of non-limiting example, the one or more datasheet characteristics may include maximum rating, thermal characteristics, or module outline. By way of non-limiting example, the one or more datasheet characteristics may include a module performance graph, a module pinout, or a product specification. Any of the various characteristics of the module (thermal, electrical, performance, mechanical, etc.) desired for disclosure in a datasheet may be simulated in various implementations. Non-limiting examples of datasheet characteristics that may be simulated may be current-voltage, RDSon, VCEsat, forward diode voltage, leakage currents, breakdown voltage, threshold voltage, capacitance, gate charge, energy losses, switching times, reverse recovery, thermal resistance and impedance, or safe operating area characteristics or any other module parameter. Following the generation of the one or more datasheet characteristics, datasheet characteristic providing module <b>124</b> provides, using a processor, the one or more datasheet characteristics to a product datasheet formation module.</p><p id="p-0056" num="0055">Product datasheet formation module <b>126</b> generates, using a processor, a product datasheet for the module semiconductor product with at least the module configuration file, the module bonding diagram, and the one or more datasheet characteristics. In various implementations the datasheet formation module <b>128</b> employs the document preparation system marketed the tradename LATEX by The LATEX Project. However, in other implementations, the data sheet formation module <b>128</b> may use many other document preparation systems, data formats, typefaces, and fonts as desired to generate the datasheet. In various implementations, the datasheet characteristics may be included in the product datasheet in tabular and/or plot formats. In various implementations, generating the module bonding diagram using the build diagram system module may include using a plurality of bonding design rules with the module configuration file. For example, a design rule may specify a minimum distance between 2 wirebonds. The product datasheet may be automatically submitted for inclusion in a product datasheet database. In various implementations, the product datasheet may be created in various implementations on the basis of the simulation results; several product datasheet revisions may be created using the simulation results later after further review; or, depending on the review/evaluation process, the product datasheet may be released after an actual module product has been physically built and tested.</p><p id="p-0057" num="0056">Access providing module <b>128</b> may be configured to provide access to at least the module bonding diagram, the product SPICE model, the three dimensional model, and the product datasheet. By way of non-limiting example, the access providing module <b>128</b> and/or a separate computing device may generate a second interface on the computing device that allows the user to access module bonding diagram, the product SPICE model, the three dimensional model, and the product datasheet. By way of non-limiting example, in various implementations, the second interface may also provide access to a module schematic diagram in addition to the other module information. Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an implementation of such a module schematic diagram is illustrated. In various implementations, the purpose of the module schematic diagram is to allow the user to review the overall electrical structure of the module following placement of all the wires and pins and die to ensure that the resulting circuit design is as desired and all of the needed routing and connections actually were made in the process. In various implementations, the generation of the modules committed diagram may be done using scripting and other batch automation techniques. This module schematic diagram may be provided in the second interface in some implementations, or may be provided in the first interface following completion of generating the module configuration file. In various implementations, the second interface may provide access to the various diagrams and models by providing links in the interface that allow the user to download corresponding files. In some implementations, the links may be permit encrypted and unencrypted versions of the files to be downloaded by the user using the computing device.</p><p id="p-0058" num="0057">In some implementations, computing platform(s) <b>102</b>, remote platform(s) <b>104</b>, and/or external resources <b>130</b> may be operatively linked via one or more electronic communication links. For example, such electronic communication links may be established, at least in part, via a network such as the Internet and/or other networks. It will be appreciated that this is not intended to be limiting, and that the scope of this disclosure includes implementations in which computing platform(s) <b>102</b>, remote platform(s) <b>104</b>, and/or external resources <b>130</b> may be operatively linked via some other communication media.</p><p id="p-0059" num="0058">A given remote platform <b>104</b> may include one or more processors configured to execute computer program modules. The computer program modules may be configured to enable an expert or user associated with the given remote platform <b>104</b> to interface with system <b>100</b> and/or external resources <b>130</b>, and/or provide other functionality attributed herein to remote platform(s) <b>104</b>. By way of non-limiting example, a given remote platform <b>104</b> and/or a given computing platform <b>102</b> may include one or more of a server, a desktop computer, a laptop computer, a handheld computer, a tablet computing platform, a NetBook, a Smartphone, a gaming console, and/or other computing platforms.</p><p id="p-0060" num="0059">External resources <b>130</b> may include sources of information outside of system <b>100</b>, external entities participating with system <b>100</b>, and/or other resources. In some implementations, some or all of the functionality attributed herein to external resources <b>130</b> may be provided by resources included in system <b>100</b>.</p><p id="p-0061" num="0060">Computing platform(s) <b>102</b> may include electronic storage <b>132</b>, one or more processors <b>134</b>, and/or other components. Computing platform(s) <b>102</b> may include communication lines, or ports to enable the exchange of information with a network and/or other computing platforms. Illustration of computing platform(s) <b>102</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is not intended to be limiting. Computing platform(s) <b>102</b> may include a plurality of hardware, software, and/or firmware components operating together to provide the functionality attributed herein to computing platform(s) <b>102</b>. For example, computing platform(s) <b>102</b> may be implemented by a cloud of computing platforms operating together as computing platform(s) <b>102</b>.</p><p id="p-0062" num="0061">Electronic storage <b>132</b> may comprise non-transitory storage media that electronically stores information. The electronic storage media of electronic storage <b>132</b> may include one or both of system storage that is provided integrally (i.e., substantially non-removable) with computing platform(s) <b>102</b> and/or removable storage that is removably connectable to computing platform(s) <b>102</b> via, for example, a port (e.g., a USB port, a firewire port, etc.) or a drive (e.g., a disk drive, etc.). Electronic storage <b>132</b> may include one or more of optically readable storage media (e.g., optical disks, etc.), magnetically readable storage media (e.g., magnetic tape, magnetic hard drive, floppy drive, etc.), electrical charge-based storage media (e.g., EEPROM, RAM, etc.), solid-state storage media (e.g., flash drive, etc.), and/or other electronically readable storage media. Electronic storage <b>132</b> may include one or more virtual storage resources (e.g., cloud storage, a virtual private network, and/or other virtual storage resources). Electronic storage <b>132</b> may store software algorithms, information determined by processor(s) <b>134</b>, information received from computing platform(s) <b>102</b>, information received from remote platform(s) <b>104</b>, and/or other information that enables computing platform(s) <b>102</b> to function as described herein.</p><p id="p-0063" num="0062">Processor(s) <b>134</b> may be configured to provide information processing capabilities in computing platform(s) <b>102</b>. As such, processor(s) <b>134</b> may include one or more of a digital processor, an analog processor, a digital circuit designed to process information, an analog circuit designed to process information, a state machine, and/or other mechanisms for electronically processing information. Although processor(s) <b>134</b> is shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as a single entity, this is for illustrative purposes only. In some implementations, processor(s) <b>134</b> may include a plurality of processing units. These processing units may be physically located within the same device, or processor(s) <b>134</b> may represent processing functionality of a plurality of devices operating in coordination. Processor(s) <b>134</b> may be configured to execute modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b>, and/or other modules. Processor(s) <b>134</b> may be configured to execute modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b>, and/or other modules by software; hardware; firmware; some combination of software, hardware, and/or firmware; and/or other mechanisms for configuring processing capabilities on processor(s) <b>134</b>. As used herein, the term &#x201c;module&#x201d; may refer to any component or set of components that perform the functionality attributed to the module. This may include one or more physical processors during execution of processor readable instructions, the processor readable instructions, circuitry, hardware, storage media, or any other components.</p><p id="p-0064" num="0063">It should be appreciated that although modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b> are illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as being implemented within a single processing unit, in implementations in which processor(s) <b>134</b> includes multiple processing units, one or more of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b> may be implemented remotely from the other modules. The description of the functionality provided by the different modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b> described below is for illustrative purposes, and is not intended to be limiting, as any of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b> may provide more or less functionality than is described. For example, one or more of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b> may be eliminated, and some or all of its functionality may be provided by other ones of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b>. As another example, processor(s) <b>134</b> may be configured to execute one or more additional modules that may perform some or all of the functionality attributed below to one of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>, <b>122</b>, <b>124</b>, <b>126</b>, and/or <b>128</b>.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIGS. <b>2</b>A and <b>2</b>B</figref> illustrate a flowchart of an implementation of a method <b>200</b> for designing a module semiconductor product. The operations of method <b>200</b> presented below are intended to be illustrative. In some implementations, method <b>200</b> may be accomplished with one or more additional operations not described, and/or without one or more of the operations discussed. Additionally, the order in which the operations of method <b>200</b> are illustrated in <figref idref="DRAWINGS">FIGS. <b>2</b>A and <b>2</b>B</figref> described below is not intended to be limiting.</p><p id="p-0066" num="0065">In some implementations, method <b>200</b> may be implemented in one or more processing devices (e.g., a digital processor, an analog processor, a digital circuit designed to process information, an analog circuit designed to process information, a state machine, and/or other mechanisms for electronically processing information). The one or more processing devices may include one or more devices executing some or all of the operations of method <b>200</b> in response to instructions stored electronically on an electronic storage medium. The one or more processing devices may include one or more devices configured through hardware, firmware, and/or software to be specifically designed for execution of one or more of the operations of method <b>200</b>.</p><p id="p-0067" num="0066">An operation <b>202</b> may include using a first interface generated by a computing device, receiving from a user a selection of a module type. Operation <b>202</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to interface using module <b>108</b>, in accordance with one or more implementations.</p><p id="p-0068" num="0067">An operation <b>204</b> may include using a first interface generated by a computing device, receiving from a user a selection of one or more die. Operation <b>204</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to interface using module <b>108</b>, in accordance with one or more implementations.</p><p id="p-0069" num="0068">An operation <b>206</b> may include using a first interface generated by a computing device, receiving from a user a placement of one or more wires, one or more clips, and/or one or more pins. Operation <b>206</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to interface using module <b>108</b>, in accordance with one or more implementations.</p><p id="p-0070" num="0069">An operation <b>208</b> may include generating, using a processor, a module configuration file. Operation <b>208</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to configuration generating module <b>110</b>, in accordance with one or more implementations.</p><p id="p-0071" num="0070">An operation <b>210</b> may include generating, using a processor, a module bonding diagram using a build diagram system module with the module configuration file. Operation <b>210</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to bonding generating module <b>112</b>, in accordance with one or more implementations.</p><p id="p-0072" num="0071">An operation <b>212</b> may include selecting, using a processor, one or more SPICE models corresponding with the one or more die. Operation <b>212</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to SPICE model selection module <b>114</b>, in accordance with one or more implementations.</p><p id="p-0073" num="0072">An operation <b>214</b> may include providing, using a processor, the module configuration file, the module bonding diagram, and the one or more SPICE models to a three dimensional simulation module. Operation <b>214</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to configuration file providing module <b>116</b>, in accordance with one or more implementations.</p><p id="p-0074" num="0073">An operation <b>216</b> may include generating, using a processor, a product SPICE model and a three dimensional model for the module semiconductor product using the three dimensional simulation module. The three dimensional simulation module may carry out any of the various simulation operations disclosed herein serially or in parallel in various implementations. Operation <b>216</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to three dimensional simulation module <b>118</b>, in accordance with one or more implementations.</p><p id="p-0075" num="0074">An operation <b>218</b> may include providing, using a processor, at least the product SPICE model to a product simulation module <b>122</b>. Operation <b>218</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to three dimensional simulation module <b>118</b>, in accordance with one or more implementations.</p><p id="p-0076" num="0075">An operation <b>220</b> may include generating, using a processor, one or more datasheet characteristics of the module semiconductor product with at least the product SPICE model and the product simulation module <b>122</b>. Operation <b>220</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product simulation module <b>122</b>, in accordance with one or more implementations.</p><p id="p-0077" num="0076">An operation <b>222</b> may include providing, using a processor, the one or more datasheet characteristics to a datasheet formation module. Operation <b>222</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product simulation module <b>122</b>, in accordance with one or more implementations.</p><p id="p-0078" num="0077">An operation <b>224</b> may include generating, using a processor, an product datasheet for the module semiconductor product using the datasheet formation module with at least the module configuration file, the module bonding diagram, and the one or more datasheet characteristics. Operation <b>224</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product datasheet formation module <b>126</b>, in accordance with one or more implementations.</p><p id="p-0079" num="0078">An operation <b>226</b> may include providing access to at least the module bonding diagram, the product SPICE model, the three dimensional model, and the product datasheet to the user via a second interface with the computing device. Operation <b>226</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to access providing module <b>128</b>, in accordance with one or more implementations.</p><p id="p-0080" num="0079">In places where the description above refers to particular implementations for designing a module semiconductor product and implementing components, sub-components, methods and sub-methods, it should be readily apparent that a number of modifications may be made without departing from the spirit thereof and that these implementations, implementing components, sub-components, methods and sub-methods may be applied to other techniques for designing a module semiconductor product.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system configured for designing a multi-chip module, the system comprising:<claim-text>one or more hardware processors configured by machine-readable instructions to:</claim-text><claim-text>use a first interface generated by a computing device to receive from a user a selection of a multi-chip module type;</claim-text><claim-text>use the first interface to receive from the user a selection of two or more die;</claim-text><claim-text>generate, using a processor, a module configuration file;</claim-text><claim-text>generate, using the processor, a module bonding diagram using a build diagram system module with the module configuration file;</claim-text><claim-text>select, using the processor, one or more SPICE models corresponding with the two or more die;</claim-text><claim-text>provide, using the processor, the module configuration file, the module bonding diagram, and the one or more SPICE models to a three dimensional simulation module;</claim-text><claim-text>generate, using the processor, a product SPICE model that includes module packaging and generate, using the processor, a three dimensional model for the multi-chip module using the three dimensional simulation module; and</claim-text><claim-text>provide access to at least the module bonding diagram, the product SPICE model including module packaging, and the three dimensional model to the user by generating a second interface with the computing device.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the product SPICE model including module packaging comprises die SPICE models, a module packaging parasitic extraction model, and a thermal model including the module packaging.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the two or more die are power semiconductor die.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the module configuration file is a Java Script Object Notation file.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the three dimensional simulation module uses a finite element modeling process to generate the product SPICE model including module packaging of the multi-chip module.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the system is configured to, after receiving from the user the selection of two or more die, retrieve a die SPICE model from a die SPICE modeling system.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the system is configured to, after receiving from the user a placement of one or more wires, use a processor to use one or more design rules to generate flight lines for the one or more wires in the first interface.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the system is configured to, after receiving from the user a placement of one or more pins, use a processor to indicate an acceptable location for the one or more pins in the first interface.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the system is configured to use a plurality of bonding design rules with the module configuration file.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the system is configured to provide access to a module schematic diagram with the second interface.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method of designing a module semiconductor product, the method comprising:<claim-text>using a first interface generated by a computing device, receiving from a user a selection of a multi-die module type;</claim-text><claim-text>using the first interface, receiving from the user a selection of two or more die;<claim-text>generating, using a processor, a module configuration file;</claim-text></claim-text><claim-text>generating, using the processor, a module bonding diagram using a build diagram system module with the module configuration file;</claim-text><claim-text>selecting, using the processor, one or more SPICE models corresponding with the one or more die;</claim-text><claim-text>providing, using the processor, the module configuration file, the module bonding diagram, and the one or more SPICE models to a three dimensional simulation module;</claim-text><claim-text>generating, using the processor, a product SPICE model including module packaging and generating a three dimensional model for the module semiconductor product using the three dimensional simulation module; and</claim-text><claim-text>providing access to at least the module bonding diagram, the product SPICE model including module packaging, and the three dimensional model to the user by generating a second interface with the computing device.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the product SPICE model including module packaging comprises die SPICE models, a module parasitic extraction model including packaging, and a thermal model including packaging.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the two or more die are power semiconductor die.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the module configuration file is a Java Script Object Notation file.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the three dimensional simulation module uses a finite element modeling process to generate the product SPICE model including module packaging of the module semiconductor product.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein receiving from the user the selection of two or more die further comprises retrieving a die SPICE model from a die SPICE modeling system.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein receiving from the user a placement of one or more wires comprises, using a processor, using one or more design rules to generate flight lines for the one or more wires in the first interface.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein receiving from the user a placement of one or more pins comprises, using a processor, indicating an acceptable location for the one or more pins in the first interface.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein generating, using the processor, the module bonding diagram using the build diagram system module further comprises using a plurality of bonding design rules with the module configuration file.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein providing access to at least the module bonding diagram, the product SPICE model including module packaging, and the three dimensional model to the user by generating the second interface with the computing device further comprises providing access to a module schematic diagram.</claim-text></claim></claims></us-patent-application>