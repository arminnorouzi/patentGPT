<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005530A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005530</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17939826</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>56</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>23</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>27</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>43</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>43</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>01</class><subclass>L</subclass><main-group>25</main-group><subgroup>065</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>5607</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>24</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>27</main-group><subgroup>224</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>43</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>43</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>161</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>1657</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>1659</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>1673</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>1675</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>25</main-group><subgroup>0657</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>2224</main-group><subgroup>08145</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>2225</main-group><subgroup>06506</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>2225</main-group><subgroup>06541</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>01</class><subclass>L</subclass><main-group>2225</main-group><subgroup>06562</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CONCURRENT MULTI-BIT ACCESS IN CROSS-POINT ARRAY</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17099030</doc-number><date>20201116</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11488662</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17939826</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SanDisk Technologies LLC</orgname><address><city>Addison</city><state>TX</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Franklin</last-name><first-name>Nathan</first-name><address><city>Belmont</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Parkinson</last-name><first-name>Ward</first-name><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Grobis</last-name><first-name>Michael</first-name><address><city>Campbell</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>O'Toole</last-name><first-name>James</first-name><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>SanDisk Technologies LLC</orgname><role>02</role><address><city>Addison</city><state>TX</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Concurrent access of multiple memory cells in a cross-point memory array is disclosed. In one aspect, a forced current approach is used in which, while a select voltage is applied to a selected bit line, an access current is driven separately through each selected word line to concurrently drive the access current separately through each selected memory cell. Hence, multiple memory cells are concurrently accessed. In some aspects, the memory cells are accessed using a self-referenced read (SRR), which improves read margin. Concurrently accessing more than one memory cell in a cross-point memory array improves bandwidth. Moreover, such concurrent accessing allows the memory system to be constructed with fewer, but larger cross-point arrays, which increases array efficiency. Moreover, concurrent access as disclosed herein is compatible with memory cells such as MRAM which require bipolar operation.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="137.67mm" wi="158.75mm" file="US20230005530A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="177.21mm" wi="153.92mm" orientation="landscape" file="US20230005530A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="227.25mm" wi="122.26mm" orientation="landscape" file="US20230005530A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="230.72mm" wi="162.39mm" orientation="landscape" file="US20230005530A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="226.65mm" wi="94.40mm" orientation="landscape" file="US20230005530A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="218.86mm" wi="167.64mm" file="US20230005530A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="210.23mm" wi="162.31mm" orientation="landscape" file="US20230005530A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="208.20mm" wi="177.46mm" file="US20230005530A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="206.16mm" wi="115.23mm" orientation="landscape" file="US20230005530A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="225.72mm" wi="136.40mm" file="US20230005530A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="227.75mm" wi="163.07mm" orientation="landscape" file="US20230005530A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="193.38mm" wi="95.50mm" file="US20230005530A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="167.13mm" wi="162.39mm" orientation="landscape" file="US20230005530A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="224.79mm" wi="134.96mm" file="US20230005530A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="177.38mm" wi="155.45mm" orientation="landscape" file="US20230005530A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="177.38mm" wi="155.45mm" orientation="landscape" file="US20230005530A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="221.32mm" wi="173.99mm" file="US20230005530A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="219.12mm" wi="137.50mm" file="US20230005530A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="217.76mm" wi="170.35mm" file="US20230005530A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="220.98mm" wi="176.78mm" file="US20230005530A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="217.09mm" wi="163.07mm" file="US20230005530A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="213.19mm" wi="176.61mm" file="US20230005530A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="145.03mm" wi="160.70mm" file="US20230005530A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="213.78mm" wi="162.98mm" file="US20230005530A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CLAIM OF PRIORITY</heading><p id="p-0002" num="0001">This application is a continuation application and claims priority from U.S. patent application Ser. No. 17/099,030, entitled &#x201c;CONCURRENT MULTI-BIT IN CROSS-POINT ARRAY&#x201d; by Franklin et al., filed Nov. 16, 2020, incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Memory is widely used in various electronic devices such as cellular telephones, digital cameras, personal digital assistants, medical electronics, mobile computing devices, non-mobile computing devices, and data servers. Memory may comprise non-volatile memory or volatile memory. A non-volatile memory allows information to be stored and retained even when the non-volatile memory is not connected to a source of power (e.g., a battery).</p><p id="p-0004" num="0003">In a memory array with a cross-point type architecture, a first set of conductive lines run across the surface of a substrate and a second set of conductive lines are formed over the first set of conductive lines, running over the substrate in a direction perpendicular to the first set of conductive lines. The memory cells are located at the cross-point junctions of the two sets of conductive lines. In some architectures, the memory system has multiple cross-point type arrays. In some architectures, the different cross-point type arrays can be read or written in parallel.</p><p id="p-0005" num="0004">However, it can be quite difficult to accurately access more than one memory cell at time in a single cross-point memory array. This limits the read/write bandwidth that can be achieved for a memory system built with a cross-point architecture. Maximum bandwidth is limited to the total number of cross-point arrays in the memory system divided by the time it takes to read or write a bit (e.g., memory cell), assuming that parallel operation of separate cross-point arrays is enabled. Thus, to achieve a higher bandwidth, the memory system could be constructed with a higher number of smaller cross-point arrays. However, this works against array efficiency, which is achieved by making the individual cross-point arrays larger.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWING</heading><p id="p-0006" num="0005">Like-numbered elements refer to common components in the different figures.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of one embodiment of a non-volatile memory system connected to a host.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of one embodiment of a Front End Processor Circuit.</p><p id="p-0009" num="0008">In some embodiments, the Front End Processor Circuit is part of a Controller.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of one embodiment of a Back End Processor Circuit.</p><p id="p-0011" num="0010">In some embodiments, the Back End Processor Circuit is part of a Controller.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of one embodiment of a memory package.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a block diagram of one embodiment of a memory die.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is a block diagram of one embodiment of an integrated memory assembly containing a control die and a memory structure die.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> depicts a side view of an embodiment of an integrated memory assembly stacked on a substrate.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> depicts a side view of an embodiment of an integrated memory assembly stacked on a substrate.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> depicts one embodiment of a portion of a memory array that forms a cross-point architecture in an oblique view.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIGS. <b>7</b>B and <b>7</b>C</figref> respectively present side and top views of the cross-point structure in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> depicts an embodiment of a portion of a two level memory array that forms a cross-point architecture in an oblique view.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an embodiment for the structure of an MRAM memory cell.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an embodiment for an MRAM memory cell design as it would be implemented in a cross-point array in more detail.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> illustrate the writing of an MRAM memory cell by use of a spin torque transfer (STT) mechanism.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIGS. <b>11</b>A and <b>11</b>B</figref> illustrate embodiments for the incorporation of threshold switching selectors into an MRAM memory array having a cross-point architecture.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts an embodiment of a memory array having a cross-point architecture, in which multiple memory cells are concurrently accessed.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts an embodiment of a memory array having a cross-point architecture, showing locations of contacts from drivers to bit lines and word lines.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a flowchart of one embodiment of a process of concurrently accessing multiple memory cells in a cross-point array.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart depicting one embodiment of a process of concurrently accessing multiple memory cells in a cross-point array that includes performing an SSR.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>16</b>A</figref> depicts current versus time for the access current that is driven through the selected word lines during a SRR.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>16</b>B</figref> depicts voltage versus time for the voltage across a selected MRAM cell during the SRR, and corresponds to <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>17</b></figref> depicts a flowchart of a process for writing back data to MRAM cells after a destructive SRR.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>18</b></figref> depicts a flowchart of a process of a second stage of writing data to MRAM cells.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>19</b>A</figref> depicts write current versus time for a write current that is provided to a selected word line.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>19</b>B</figref> depicts voltage across the MRAM cell versus time, and corresponds to <figref idref="DRAWINGS">FIG. <b>19</b>A</figref>.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a flowchart of a process of concurrently writing MRAM cells in which all selected MRAM cells are first written to one of the AP-state or the P-state.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a state diagram representing DRAM commands, showing how MRAM operations can be mapped to DRAM commands.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0036" num="0035">Technology is disclosed herein for concurrently accessing more than one memory cell in a cross-point memory array. In one embodiment, a control circuit concurrently accesses multiple selected memory cells in a cross-point array. In an embodiment, a forced current approach is used in which, while a select voltage is applied to a selected bit line, an access current is driven separately through each selected word line to concurrently drive the access current separately through each selected memory cell. Hence, multiple memory cells are concurrently accessed. Concurrently accessing more than one memory cell in a cross-point memory array improves bandwidth. Moreover, such concurrent accessing allows the memory system to be constructed with fewer, but larger cross-point arrays, which increases array efficiency. Moreover, concurrent access as disclosed herein is compatible with memory cells which require bipolar operation.</p><p id="p-0037" num="0036">In some embodiments, the memory cells in the cross-point array are magnetoresistive random access memory (MRAM) cells. Hence, multiple MRAM in the same cross-point array may be concurrently accessed. An MRAM cell uses magnetization to represent stored data, in contrast to some other memory technologies that use electronic charges to store data. A bit of data is written to an MRAM cell by changing the direction of magnetization of a magnetic element within the MRAM cell, and a bit is read by measuring the resistance of the MRAM cell (low resistance typically represents a &#x201c;0&#x201d; bit and high resistance typically represents a &#x201c;1&#x201d; bit). As used herein, direction of magnetization is the direction that the magnetic moment is oriented. In some embodiments, the low resistance is referred to as a parallel or P-state and the high resistance is referred to as an anti-parallel or AP-state. MRAM typically requires bipolar operation for writes. Embodiments of concurrent write allow for bipolar operation of MRAM cells in a cross-point array. The concepts herein apply well to other technologies requiring bipolar write such as resistive random access memory (ReRAM) and ferroelectric random access memory (FeRAM), or unipolar write such as phase change memory (PCM), as well as to other selector technologies other than Ovonic Threshold Switch (OTS) described herein, such as Metal-Insulator-Semiconductor (MIS) or back-to-back transistor or Schottky diodes.</p><p id="p-0038" num="0037">In one embodiment, multiple memory cells in a cross-point array are read concurrently. One challenge in concurrently reading multiple memory cells in a cross-point array is the read margin. For example, with an MRAM cell the read margin between the P-state and AP-state may be quite low. In one read technique, a voltage across the MRAM cell is sensed while a current is forced through the MRAM cell. The voltage difference between the P-state and AP-state might be only a few tenths of a volt. In some embodiments, the memory cells are accessed using a self-referenced read (SRR), which improves read margin. The improved read margin allows for accurate concurrent reading of multiple memory cells in a cross-point array. Note that read margin is a technical challenge for types of memory cells other than MRAM that may be used in cross-point arrays, and those challenges of other technologies can also be overcome with the techniques embodied herein.</p><p id="p-0039" num="0038">In one embodiment, multiple memory cells in a cross-point array are written concurrently. One challenge in concurrently writing multiple memory cells in a cross-point array is that some memory cells require a bipolar write operation. For example, MRAM cells are typically written to the AP-state with one polarity and written to the P-state with the opposite polarity. The challenges of bipolar write operations has led to a focus on memory technologies that permit unipolar write operations. Embodiments of concurrent write of multiple memory cells in a cross-point array permit use of bipolar write operations, and hence permit use of memory technologies such as MRAM.</p><p id="p-0040" num="0039">In one embodiment, in response to receiving a request to write data, a memory system identifies a first set of the MRAM cells in a cross-point array that are to store a first bit value (e.g., &#x201c;0&#x201d;) and a second set of the MRAM cells that are to store a second bit value (e.g., &#x201c;1&#x201d;) in order to store the data. The memory system concurrently places both the first set and the second set of MRAM cells into the AP-state. Then, the memory system concurrently places the first set of MRAM cells to the P-state while leaving the second set of MRAM cells in the AP-state. Alternatively the memory system could concurrently place both the first set and the second set of MRAM cells into the P-state, and then concurrently place the first set of MRAM cells to the AP-state while leaving the second set of MRAM cells in the P-state. Hence, concurrent write of multiple MRAM cells in a cross-point array is achieved.</p><p id="p-0041" num="0040">The terms &#x201c;top&#x201d; and &#x201c;bottom,&#x201d; &#x201c;upper&#x201d; and &#x201c;lower&#x201d; and &#x201c;vertical&#x201d; and &#x201c;horizontal,&#x201d; and forms thereof, as may be used herein are by way of example and illustrative purposes only, and are not meant to limit the description of the technology inasmuch as the referenced item can be exchanged in position and orientation. Also, as used herein, the terms &#x201c;substantially&#x201d; and/or &#x201c;about&#x201d; mean that the specified dimension or parameter may be varied within an acceptable tolerance for a given application. In one embodiment, the acceptable tolerance is &#xb1;5% of a given dimension. In one embodiment, the acceptable tolerance is &#xb1;5% of a given parameter.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of one embodiment of a non-volatile memory system (or more briefly &#x201c;memory system&#x201d;) <b>100</b> connected to a host <b>120</b>. Memory system <b>100</b> can implement the technology presented herein for concurrent multi-bit access (i.e., concurrent access of multiple memory cells) in a cross-point array. Many different types of memory systems can be used with the technology proposed herein. Example memory systems include solid state drives (&#x201c;SSDs&#x201d;), memory cards and embedded memory devices; however, other types of memory systems can also be used.</p><p id="p-0043" num="0042">Memory system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> comprises a controller <b>102</b>, non-volatile memory <b>104</b> for storing data, and local memory (e.g., DRAM/ReRAM/MRAM) <b>106</b>. In one embodiment, controller <b>102</b> provides for concurrent multi-bit access in a cross-point array in local memory <b>106</b>. For example, controller <b>102</b> may provide for concurrent multi-bit access in a cross-point array of MRAM cells in local memory <b>106</b>. The combination of the controller <b>102</b> and local memory <b>106</b> may be referred to herein as a memory system. Controller <b>102</b> comprises a Front End Processor (FEP) circuit <b>110</b> and one or more Back End Processor (BEP) circuits <b>112</b>. In one embodiment FEP circuit <b>110</b> is implemented on an ASIC. In one embodiment, each BEP circuit <b>112</b> is implemented on a separate ASIC. In other embodiments, a unified controller ASIC can combine both the front end and back end functions. The ASICs for each of the BEP circuits <b>112</b> and the FEP circuit <b>110</b> are implemented on the same semiconductor such that the controller <b>102</b> is manufactured as a System on a Chip (&#x201c;SoC&#x201d;). FEP circuit <b>110</b> and BEP circuit <b>112</b> both include their own processors. In one embodiment, FEP circuit <b>110</b> and BEP circuit <b>112</b> work as a master slave configuration where the FEP circuit <b>110</b> is the master and each BEP circuit <b>112</b> is a slave. For example, FEP circuit <b>110</b> implements a Flash Translation Layer (FTL) or Media Management Layer (MML) that performs memory management (e.g., garbage collection, wear leveling, etc.), logical to physical address translation, communication with the host, management of DRAM (local volatile memory) and management of the overall operation of the SSD (or other non-volatile storage system). The BEP circuit <b>112</b> manages memory operations in the memory packages/die at the request of FEP circuit <b>110</b>. For example, the BEP circuit <b>112</b> can carry out the read, erase, and programming processes. Additionally, the BEP circuit <b>112</b> can perform buffer management, set specific voltage levels required by the FEP circuit <b>110</b>, perform error correction (ECC), control the Toggle Mode interfaces to the memory packages, etc. In one embodiment, each BEP circuit <b>112</b> is responsible for its own set of memory packages.</p><p id="p-0044" num="0043">In one embodiment, non-volatile memory <b>104</b> comprises a plurality of memory packages. Each memory package includes one or more memory die. Therefore, controller <b>102</b> is connected to one or more non-volatile memory die. In one embodiment, each memory die in the memory packages <b>104</b> utilize NAND flash memory (including two dimensional NAND flash memory and/or three dimensional NAND flash memory). In other embodiments, the memory package can include other types of memory, such as storage class memory (SCM) based on resistive random access memory (such as ReRAM, MRAM, FeRAM or RRAM) or a phase change memory (PCM). In one embodiment, control logic provides for concurrent multi-bit access in a cross-point array in a memory package <b>104</b>. For example, control logic within a memory package <b>104</b> may provide for concurrent multi-bit access in a cross-point array of MRAM cells in a memory package <b>104</b>.</p><p id="p-0045" num="0044">Controller <b>102</b> communicates with host <b>120</b> via an interface <b>130</b> that implements a protocol like, for example, Compute Express Link (CXL). For working with memory system <b>100</b>, host <b>120</b> includes a host processor <b>122</b>, host memory <b>124</b>, and a PCIe interface <b>126</b> connected along bus <b>128</b>. Host memory <b>124</b> is the host's physical memory, and can be DRAM, SRAM, MRAM, non-volatile memory, or another type of storage. Host <b>120</b> is external to and separate from memory system <b>100</b>. In one embodiment, memory system <b>100</b> is embedded in host <b>120</b>. One embodiment includes concurrent multi-bit access in a cross-point array in host memory <b>124</b>. For example, host processor <b>122</b> may provide for concurrent multi-bit access in a cross-point array of MRAM cells in host memory <b>124</b>. The combination of the host processor <b>122</b> and host memory <b>124</b> may be referred to herein as a memory system.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of one embodiment of FEP circuit <b>110</b>. <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a PCIe interface <b>150</b> to communicate with host <b>120</b> and a host processor <b>152</b> in communication with that PCIe interface. The host processor <b>152</b> can be any type of processor known in the art that is suitable for the implementation. Host processor <b>152</b> is in communication with a network-on-chip (NOC) <b>154</b>. A NOC is a communication subsystem on an integrated circuit, typically between cores in a SoC. NOCs can span synchronous and asynchronous clock domains or use unclocked asynchronous logic. NOC technology applies networking theory and methods to on-chip communications and brings notable improvements over conventional bus and crossbar interconnections. NOC improves the scalability of SoCs and the power efficiency of complex SoCs compared to other designs. The wires and the links of the NOC are shared by many signals. A high level of parallelism is achieved because all links in the NOC can operate simultaneously on different data packets. Therefore, as the complexity of integrated subsystems keep growing, a NOC provides enhanced performance (such as throughput) and scalability in comparison with previous communication architectures (e.g., dedicated point-to-point signal wires, shared buses, or segmented buses with bridges). Connected to and in communication with NOC <b>154</b> is the memory processor <b>156</b>, SRAM <b>160</b> and a DRAM controller <b>162</b>. The DRAM controller <b>162</b> is used to operate and communicate with the DRAM (e.g., DRAM <b>106</b>). SRAM <b>160</b> is local RAM memory used by memory processor <b>156</b>. In one embodiment, there is an MRAM controller to operate and communicate with the MRAM (e.g., MRAM <b>106</b>). In one embodiment, the MRAM controller provides for concurrent multi-bit access in a cross-point array of MRAM cells in MRAM <b>106</b>. Memory processor <b>156</b> is used to run the FEP circuit and perform the various memory operations. Also, in communication with the NOC are two PCIe Interfaces <b>164</b> and <b>166</b>. In the embodiment of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the SSD controller will include two BEP circuits <b>112</b>; therefore, there are two PCIe Interfaces <b>164</b>/<b>166</b>. Each PCIe Interface communicates with one of the BEP circuits <b>112</b>. In other embodiments, there can be more or less than two BEP circuits <b>112</b>; therefore, there can be more than two PCIe Interfaces.</p><p id="p-0047" num="0046">FEP circuit <b>110</b> can also include a Media Management Layer (MML) <b>158</b> that performs memory management (e.g., garbage collection, wear leveling, load balancing, etc.), logical to physical address translation, communication with the host, management of DRAM (local volatile memory) and management of the overall operation of the SSD or other non-volatile storage system. The media management layer MML <b>158</b> may be integrated as part of the memory management that may handle memory errors and interfacing with the host. In particular, MML may be a module in the FEP circuit <b>110</b> and may be responsible for the internals of memory management. In particular, the MML <b>158</b> may include an algorithm in the memory device firmware which translates writes from the host into writes to the memory structure (e.g., <b>502</b> of <figref idref="DRAWINGS">FIGS. <b>5</b>A and <b>5</b>B</figref> below) of a die. The MML <b>158</b> may be needed because: 1) the memory may have limited endurance; 2) the memory structure may only be written in multiples of pages; and/or <b>3</b>) the memory structure may not be written unless it is erased as a block. The MML <b>158</b> understands these potential limitations of the memory structure which may not be visible to the host. Accordingly, the MML <b>158</b> attempts to translate the writes from host into writes into the memory structure.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of one embodiment of the BEP circuit <b>112</b>. <figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a PCIe Interface <b>200</b> for communicating with the FEP circuit <b>110</b> (e.g., communicating with one of PCIe Interfaces <b>164</b> and <b>166</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). PCIe Interface <b>200</b> is in communication with two NOCs <b>202</b> and <b>204</b>. In one embodiment the two NOCs can be combined into one large NOC. Each NOC (<b>202</b>/<b>204</b>) is connected to SRAM (<b>230</b>/<b>260</b>), a buffer (<b>232</b>/<b>262</b>), processor (<b>220</b>/<b>250</b>), and a data path controller (<b>222</b>/<b>252</b>) via an XOR engine (<b>224</b>/<b>254</b>) and an ECC engine (<b>226</b>/<b>256</b>). The ECC engines <b>226</b>/<b>256</b> are used to perform error correction, as known in the art. The XOR engines <b>224</b>/<b>254</b> are used to XOR the data so that data can be combined and stored in a manner that can be recovered in case there is a programming error. Data path controller <b>222</b> is connected to an interface module for communicating via four channels with memory packages. Thus, the top NOC <b>202</b> is associated with an interface <b>228</b> for four channels for communicating with memory packages and the bottom NOC <b>204</b> is associated with an interface <b>258</b> for four additional channels for communicating with memory packages. Each interface <b>228</b>/<b>258</b> includes four Toggle Mode interfaces (TM Interface), four buffers and four schedulers. There is one scheduler, buffer, and TM Interface for each of the channels. The processor can be any standard processor known in the art. The data path controllers <b>222</b>/<b>252</b> can be a processor, FPGA, microprocessor, or other type of controller. The XOR engines <b>224</b>/<b>254</b> and ECC engines <b>226</b>/<b>256</b> are dedicated hardware circuits, known as hardware accelerators. In other embodiments, the XOR engines <b>224</b>/<b>254</b> and ECC engines <b>226</b>/<b>256</b> can be implemented in software. The scheduler, buffer, and TM Interfaces are hardware circuits.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of one embodiment of a memory package <b>104</b> that includes a plurality of memory die <b>292</b> connected to a memory bus (data lines and chip enable lines) <b>294</b>. The memory bus <b>294</b> connects to a Toggle Mode Interface <b>296</b> for communicating with the TM Interface of a BEP circuit <b>112</b> (see e.g., <figref idref="DRAWINGS">FIG. <b>3</b></figref>). In some embodiments, the memory package can include a small controller connected to the memory bus and the TM Interface. The memory package can have one or more memory die. In one embodiment, each memory package includes eight or <b>16</b> memory die; however, other numbers of memory die can also be implemented. The technology described herein is not limited to any particular number of memory die.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a block diagram that depicts one example of a memory die <b>292</b> that can implement the technology described herein. Memory die <b>292</b> includes a memory array <b>502</b> that can include any of memory cells described in the following. The array terminal lines of memory array <b>502</b> include the various layer(s) of word lines organized as rows, and the various layer(s) of bit lines organized as columns. However, other orientations can also be implemented. Memory die <b>292</b> includes row control circuitry <b>520</b>, whose outputs <b>508</b> are connected to respective word lines of the memory array <b>502</b>. Row control circuitry <b>520</b> receives a group of M row address signals and one or more various control signals from System Control Logic circuit <b>560</b>, and typically may include such circuits as row decoders <b>522</b>, array terminal drivers <b>524</b>, and block select circuitry <b>526</b> for both reading and writing operations. Row control circuitry <b>520</b> may also include read/write circuitry. In an embodiment, row control circuitry <b>520</b> has sense amplifiers <b>528</b>, which each contain circuitry for sensing a condition (e.g., voltage) of a word line of the memory array <b>502</b>. In an embodiment, by sensing a word line voltage, a condition of a memory cell in a cross-point array is determined. Memory die <b>292</b> also includes column control circuitry <b>510</b> whose input/outputs <b>506</b> are connected to respective bit lines of the memory array <b>502</b>. Although only single block is shown for array <b>502</b>, a memory die can include multiple arrays or &#x201c;tiles&#x201d; that can be individually accessed. Column control circuitry <b>510</b> receives a group of N column address signals and one or more various control signals from System Control Logic <b>560</b>, and typically may include such circuits as column decoders <b>512</b>, array terminal receivers or drivers <b>514</b>, block select circuitry <b>516</b>, as well as read/write circuitry, and I/O multiplexers.</p><p id="p-0051" num="0050">System control logic <b>560</b> receives data and commands from a host and provides output data and status to the host. In other embodiments, system control logic <b>560</b> receives data and commands from a separate controller circuit and provides output data to that controller circuit, with the controller circuit communicating with the host. In some embodiments, the system control logic <b>560</b> can include a state machine <b>562</b> that provides die-level control of memory operations. In one embodiment, the state machine <b>562</b> is programmable by software. In other embodiments, the state machine <b>562</b> does not use software and is completely implemented in hardware (e.g., electrical circuits). In another embodiment, the state machine <b>562</b> is replaced by a micro-controller or microprocessor. The system control logic <b>560</b> can also include a power control module <b>564</b> controls the power and voltages supplied to the rows and columns of the memory <b>502</b> during memory operations and may include charge pumps and regulator circuit for creating regulating voltages. System control logic <b>560</b> includes storage <b>566</b>, which may be used to store parameters for operating the memory array <b>502</b>.</p><p id="p-0052" num="0051">Commands and data are transferred between the controller <b>102</b> and the memory die <b>292</b> via memory controller interface <b>568</b> (also referred to as a &#x201c;communication interface&#x201d;). Memory controller interface <b>568</b> is an electrical interface for communicating with memory controller <b>102</b>. Examples of memory controller interface <b>568</b> include a Toggle Mode Interface and an Open NAND Flash Interface (ONFI). Other I/O interfaces can also be used. For example, memory controller interface <b>568</b> may implement a Toggle Mode Interface that connects to the Toggle Mode interfaces of memory interface <b>228</b>/<b>258</b> for memory controller <b>102</b>. In one embodiment, memory controller interface <b>568</b> includes a set of input and/or output (I/O) pins that connect to the controller <b>102</b>. In another embodiment, the interface is JEDEC standard DDRn or LPDDRn, such as DDRS or LPDDRS, or a subset thereof with smaller page and/or relaxed timing.</p><p id="p-0053" num="0052">In some embodiments, all of the elements of memory die <b>292</b>, including the system control logic <b>560</b>, can be formed as part of a single die. In other embodiments, some or all of the system control logic <b>560</b> can be formed on a different die.</p><p id="p-0054" num="0053">In one embodiment, memory structure <b>502</b> comprises a three dimensional memory array of non-volatile memory cells in which multiple memory levels are formed above a single substrate, such as a wafer. The memory structure may comprise any type of non-volatile memory that are monolithically formed in one or more physical levels of memory cells having an active area disposed above a silicon (or other type of) substrate. In one example, the non-volatile memory cells comprise vertical NAND strings with charge-trapping.</p><p id="p-0055" num="0054">In another embodiment, memory structure <b>502</b> comprises a two dimensional memory array of non-volatile memory cells. In one example, the non-volatile memory cells are NAND flash memory cells utilizing floating gates. Other types of memory cells (e.g., NOR-type flash memory) can also be used.</p><p id="p-0056" num="0055">The exact type of memory array architecture or memory cell included in memory structure <b>502</b> is not limited to the examples above. Many different types of memory array architectures or memory technologies can be used to form memory structure <b>326</b>. No particular non-volatile memory technology is required for purposes of the new claimed embodiments proposed herein. Other examples of suitable technologies for memory cells of the memory structure <b>502</b> include ReRAM memories (resistive random access memories), magnetoresistive memory (e.g., MRAM, Spin Transfer Torque MRAM, Spin Orbit Torque MRAM), FeRAM, phase change memory (e.g., PCM), and the like. Examples of suitable technologies for memory cell architectures of the memory structure <b>502</b> include two dimensional arrays, three dimensional arrays, cross-point arrays, stacked two dimensional arrays, vertical bit line arrays, and the like.</p><p id="p-0057" num="0056">One example of a ReRAM cross-point memory includes reversible resistance-switching elements arranged in cross-point arrays accessed by X lines and Y lines (e.g., word lines and bit lines). In another embodiment, the memory cells may include conductive bridge memory elements. A conductive bridge memory element may also be referred to as a programmable metallization cell. A conductive bridge memory element may be used as a state change element based on the physical relocation of ions within a solid electrolyte. In some cases, a conductive bridge memory element may include two solid metal electrodes, one relatively inert (e.g., tungsten) and the other electrochemically active (e.g., silver or copper), with a thin film of the solid electrolyte between the two electrodes. As temperature increases, the mobility of the ions also increases causing the programming threshold for the conductive bridge memory cell to decrease. Thus, the conductive bridge memory element may have a wide range of programming thresholds over temperature.</p><p id="p-0058" num="0057">Magnetoresistive random access memory (MRAM) stores data by magnetic storage elements. The elements are formed from two ferromagnetic layers, each of which can hold a magnetization, separated by a thin insulating layer. One of the two layers is a permanent magnet set to a particular polarity; the other layer's magnetization can be changed to match that of an external field to store memory. A memory device is built from a grid of such memory cells. In one embodiment for programming, each memory cell lies between a pair of write lines arranged at right angles to each other, parallel to the cell, one above and one below the cell. When current is passed through them, an induced magnetic field is created. MRAM based memory embodiments will be discussed in more detail below.</p><p id="p-0059" num="0058">Phase change memory (PCM) exploits the unique behavior of chalcogenide glass. One embodiment uses a GeTe&#x2014;Sb2Te3 super lattice to achieve non-thermal phase changes by simply changing the co-ordination state of the Germanium atoms with a laser pulse (or light pulse from another source). The memory cells are programmed by current pulses that can change the co-ordination of the PCM material or switch it between amorphous and crystalline states. Note that the use of &#x201c;pulse&#x201d; in this document does not require a square pulse but includes a (continuous or non-continuous) vibration or burst of sound, current, voltage light, or other wave.</p><p id="p-0060" num="0059">A person of ordinary skill in the art will recognize that the technology described herein is not limited to a single specific memory structure, memory construction or material composition, but covers many relevant memory structures within the spirit and scope of the technology as described herein and as understood by one of ordinary skill in the art.</p><p id="p-0061" num="0060">The elements of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> can be grouped into two parts, the structure of memory structure <b>502</b> of the memory cells and the peripheral circuitry, including all of the other elements. An important characteristic of a memory circuit is its capacity, which can be increased by increasing the area of the memory die of memory die <b>292</b> that is given over to the memory structure <b>502</b>; however, this reduces the area of the memory die available for the peripheral circuitry. This can place quite severe restrictions on these peripheral elements. For example, the need to fit sense amplifier circuits within the available area can be a significant restriction on sense amplifier design architectures. With respect to the system control logic <b>560</b>, reduced availability of area can limit the available functionalities that can be implemented on-chip. Consequently, a basic trade-off in the design of a memory die <b>292</b> is the amount of area to devote to the memory structure <b>502</b> and the amount of area to devote to the peripheral circuitry.</p><p id="p-0062" num="0061">Another area in which the memory structure <b>502</b> and the peripheral circuitry are often at odds is in the processing involved in forming these regions, since these regions often involve differing processing technologies and the trade-off in having differing technologies on a single die. For example, when the memory structure <b>502</b> is NAND flash, this is an NMOS structure, while the peripheral circuitry is often CMOS based. For example, elements such sense amplifier circuits, charge pumps, logic elements in a state machine, and other peripheral circuitry in system control logic <b>560</b> often employ PMOS devices. Processing operations for manufacturing a CMOS die will differ in many aspects from the processing operations optimized for an NMOS flash NAND memory or other memory cell technologies.</p><p id="p-0063" num="0062">To improve upon these limitations, embodiments described below can separate the elements of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> onto separately formed dies that are then bonded together. <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> depicts an integrated memory assembly <b>570</b> having a memory structure die <b>580</b> and a control die <b>590</b>. The memory structure <b>502</b> is formed on the memory structure die <b>580</b> and some or all of the peripheral circuitry elements, including one or more control circuits, are formed on the control die <b>590</b>. For example, a memory structure die <b>580</b> can be formed of just the memory elements, such as the array of memory cells of flash NAND memory, MRAM memory, PCM memory, ReRAM memory, or other memory type. Some or all of the peripheral circuitry, even including elements such as decoders and sense amplifiers, can then be moved on to the control die. This allows each of the semiconductor dies to be optimized individually according to its technology. For example, a NAND memory die can be optimized for an NMOS based memory array structure, with a separate peripheral circuitry die (or &#x201c;control die&#x201d;) being optimized for CMOS elements and CMOS processing. This allows more space for the peripheral elements, which can now incorporate additional capabilities that could not be readily incorporated were they restricted to the margins of the same die holding the memory cell array. The two die can then be bonded together in a bonded multi-die integrated memory assembly, with the array on the one die connected to the periphery elements on the other die. Although the following will focus on an integrated memory assembly of one memory die and one control die, other embodiments can use additional dies, such as two memory dies and one control die, for example.</p><p id="p-0064" num="0063">As with <b>502</b> of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, the memory die <b>580</b> in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> can include multiple independently accessible arrays or &#x201c;tiles.&#x201d; It can be seen that system control logic <b>560</b>, row control circuitry <b>520</b>, and column control circuitry <b>510</b> are located in control die <b>590</b>. In some embodiments, all or a portion of the column control circuitry <b>510</b> and all or a portion of the row control circuitry <b>520</b> are located on the memory structure die <b>580</b>. In some embodiments, some of the circuitry in the system control logic <b>560</b> is located on the on the memory structure die <b>580</b>.</p><p id="p-0065" num="0064">System control logic <b>560</b>, row control circuitry <b>520</b>, and column control circuitry <b>510</b> may be formed by a common process (e.g., CMOS process), so that adding elements and functionalities more typically found on a memory controller <b>102</b> may require few or no additional process steps (i.e., the same process steps used to fabricate controller <b>102</b> may also be used to fabricate system control logic <b>560</b>, row control circuitry <b>520</b>, and column control circuitry <b>510</b>). Thus, while moving such circuits from a die such as memory die <b>292</b> may reduce the number of steps needed to fabricate such a die, adding such circuits to a die such as control die <b>590</b> may not require any additional process steps.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> shows column control circuitry <b>510</b> on the control die <b>590</b> coupled to memory structure <b>502</b> on the memory structure die <b>580</b> through electrical paths <b>592</b>. For example, electrical paths <b>592</b> may provide electrical connection between column decoder <b>512</b>, driver circuitry <b>514</b>, and block select <b>516</b> and bit lines of memory structure <b>502</b>. Electrical paths may extend from column control circuitry <b>510</b> in control die <b>590</b> through pads on control die <b>590</b> that are bonded to corresponding pads of the memory structure die <b>580</b>, which are connected to bit lines of memory structure <b>502</b>. Each bit line of memory structure <b>502</b> may have a corresponding electrical path in electrical paths <b>592</b>, including a pair of bond pads, which connects to column control circuitry <b>510</b>. Similarly, row control circuitry <b>520</b>, including row decoder <b>522</b>, array drivers <b>524</b>, block select <b>526</b>, and sense amplifiers <b>528</b> are coupled to memory structure <b>502</b> through electrical paths <b>594</b>. Each of electrical path <b>594</b> may correspond to a word line, dummy word line, or select gate line. Additional electrical paths may also be provided between control die <b>590</b> and memory die <b>580</b>.</p><p id="p-0067" num="0066">For purposes of this document, the phrase &#x201c;a control circuit&#x201d; can include one or more of controller <b>102</b>, system control logic <b>560</b>, column control circuitry <b>510</b>, row control circuitry <b>520</b>, a micro-controller, a state machine, host processor <b>122</b>, and/or other control circuitry, or other analogous circuits that are used to control non-volatile memory. The control circuit can include hardware only or a combination of hardware and software (including firmware). For example, a controller programmed by firmware to perform the functions described herein is one example of a control circuit. A control circuit can include a processor, FGA, ASIC, integrated circuit, or other type of circuit. Such control circuitry may include drivers such as direct drive via connection of a node through fully on transistors (gate to the power supply) driving to a fixed voltage such as a power supply. Such control circuitry may include a current source driver where a transistor in the path is partially on and controlled by a current mirror to limit current to fixed amount, such as a read current, or write forward or write reverse current.</p><p id="p-0068" num="0067">For purposes of this document, the term &#x201c;apparatus&#x201d; can include, but is not limited to, one or more of host <b>120</b>, the combination of host processor <b>122</b> and host memory <b>124</b>, memory system <b>100</b>, controller <b>102</b>, the combination of controller <b>102</b> and local memory <b>106</b>, memory package <b>104</b>, integrated memory assembly <b>570</b>, and/or control die <b>590</b>.</p><p id="p-0069" num="0068">In the following discussion, the memory array <b>502</b> of <figref idref="DRAWINGS">FIGS. <b>5</b>A and <b>5</b>B</figref> will be discussed in the context of a cross-point architecture. In a cross-point architecture, a first set of conductive lines or wires, such as word lines, run in a first direction relative to the underlying substrate and a second set of conductive lines or wires, such a bit lines, run in a second relative to the underlying substrate. The memory cells are sited at the intersection of the word lines and bit lines. The memory cells at these cross-points can be formed according to any of a number of technologies, including those described above. The following discussion will mainly focus on embodiments based on a cross-point architecture using MRAM memory cells, each in series with a selector such as Ovonic Threshold Switch (OTS) to comprise a selectable memory bit.</p><p id="p-0070" num="0069">In some embodiments, there is more than one control die <b>590</b> and more than one memory structure die <b>580</b> in an integrated memory assembly <b>570</b>. In some embodiments, the integrated memory assembly <b>570</b> includes a stack of multiple control dies <b>590</b> and multiple memory structure dies <b>580</b>. <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> depicts a side view of an embodiment of an integrated memory assembly <b>570</b> stacked on a substrate <b>602</b> (e.g., a stack comprising control dies <b>590</b> and memory structure dies <b>580</b>). The integrated memory assembly <b>570</b> has three control dies <b>590</b> and three memory structure dies <b>580</b>. In some embodiments, there are more than three memory structure dies <b>580</b> and more than three control dies <b>590</b>.</p><p id="p-0071" num="0070">Each control die <b>590</b> is affixed (e.g., bonded) to at least one of the memory structure dies <b>580</b>. Each control die <b>590</b> has a number of bond pads <b>674</b> on a major surface of the control die <b>590</b>. Each memory structure die <b>580</b> has a number of bond pads <b>670</b> on a major surface of the memory structure die <b>580</b>. Note that there are bond pad pairs <b>670</b>/<b>674</b>. In one embodiment, the pattern of bond pads <b>670</b> matches the pattern of bond pads <b>674</b>. In some embodiments, bond pads <b>670</b> and/or <b>674</b> are flip-chip bond pads. Thus, the bond pads <b>670</b>, <b>674</b> electrically and physically couple the memory die <b>580</b> to the control die <b>590</b>. Also, the bond pads <b>670</b>, <b>674</b> permit internal signal transfer between the memory die <b>580</b> and the control die <b>590</b>. Thus, the memory die <b>580</b> and the control die <b>590</b> are bonded together with bond pads.</p><p id="p-0072" num="0071">The bond pads <b>670</b>, <b>674</b> may be formed for example of copper, aluminum, and alloys thereof. There may be a liner <b>648</b> between the bond pads <b>670</b>, <b>674</b> and the major surfaces. The liner may be formed for example of a titanium/titanium nitride stack. The bond pads <b>670</b>, <b>674</b> and liner may be applied by vapor deposition and/or plating techniques. The bond pads and liners together may have a thickness of 720 nm, though this thickness may be larger or smaller in further embodiments.</p><p id="p-0073" num="0072">The bond pads allow for internal signal transfer. Herein, &#x201c;internal signal transfer&#x201d; means signal transfer between the control die <b>590</b> and the memory die <b>580</b>. The internal signal transfer permits the circuitry on the control die <b>590</b> to control memory operations in the memory die <b>580</b>. Therefore, the bond pads <b>670</b>, <b>674</b> may be used for memory operation signal transfer. Herein, &#x201c;memory operation signal transfer&#x201d; refers to any signals that pertain to a memory operation in a memory die <b>580</b>. A memory operation signal transfer could include, but is not limited to, providing a voltage, providing a current, receiving a voltage, receiving a current, sensing a voltage, and/or sensing a current.</p><p id="p-0074" num="0073">There may be many more bond pads than depicted in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>. A space between two dies <b>580</b>, <b>590</b> that are bonded together is filled with a solid layer <b>648</b>, which may be formed from epoxy or other resin or polymer. This solid layer <b>648</b> protects the electrical connections between the dies <b>580</b>, <b>590</b>, and further secures the dies together. Various materials may be used as solid layer <b>648</b>, but in embodiments, it may be Hysol epoxy resin from Henkel Corp., having offices in California, USA.</p><p id="p-0075" num="0074">The integrated memory assembly <b>570</b> may for example be stacked with a stepped offset, leaving the bond pads at each level uncovered and accessible from above. Wire bonds <b>606</b> connected to the bond pads connect the control die <b>590</b> to the substrate <b>602</b>. A number of such wire bonds may be formed across the width of each control die <b>590</b> (i.e., into the page of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>).</p><p id="p-0076" num="0075">A memory structure die through silicon via (TSV) <b>612</b> may be used to route signals through a memory structure die <b>580</b>. A control die through silicon via (TSV) <b>614</b> may be used to route signals through a control die <b>590</b>. The TSVs <b>612</b>, <b>614</b> may be formed before, during or after formation of the integrated circuits in the semiconductor dies <b>580</b>, <b>590</b>. The TSVs may be formed by etching holes through the wafers. The holes may then be lined with a barrier against metal diffusion. The barrier layer may in turn be lined with a seed layer, and the seed layer may be plated with an electrical conductor such as copper, although other suitable materials such as aluminum, tin, nickel, gold, doped polysilicon, and alloys or combinations thereof may be used.</p><p id="p-0077" num="0076">Solder balls <b>608</b> may optionally be affixed to contact pads <b>610</b> on a lower surface of substrate <b>602</b>. The solder balls <b>608</b> may be used to electrically and mechanically couple the integrated memory assembly <b>570</b> to a host device such as a printed circuit board. Solder balls <b>608</b> may be omitted where the integrated memory assembly <b>570</b> is to be used as an LGA package. The solder balls <b>608</b> may form a part of the interface between the integrated memory assembly <b>570</b> and the memory controller <b>102</b>.</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> depicts a side view of an embodiment of an integrated memory assembly <b>570</b> stacked on a substrate <b>602</b>. The integrated memory assembly <b>570</b> has three control dies <b>590</b> and three memory structure dies <b>580</b>. In some embodiments, there are many more than three memory structure dies <b>580</b> and many more than three control dies <b>590</b>. In this example, each control die <b>590</b> is bonded to at least one memory structure die <b>580</b>. Optionally, a control die <b>590</b> may be bonded to two memory structure die <b>580</b>.</p><p id="p-0079" num="0078">Some of the bond pads <b>670</b>, <b>674</b> are depicted. There may be many more bond pads. A space between two dies <b>580</b>, <b>590</b> that are bonded together is filled with a solid layer <b>648</b>, which may be formed from epoxy or other resin or polymer. In contrast to the example in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the integrated memory assembly <b>570</b> in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref> does not have a stepped offset. A memory structure die through silicon via (TSV) <b>612</b> may be used to route signals through a memory structure die <b>580</b>. A control die through silicon via (TSV) <b>614</b> may be used to route signals through a control die <b>590</b>.</p><p id="p-0080" num="0079">Solder balls <b>608</b> may optionally be affixed to contact pads <b>610</b> on a lower surface of substrate <b>602</b>. The solder balls <b>608</b> may be used to electrically and mechanically couple the integrated memory assembly <b>570</b> to a host device such as a printed circuit board. Solder balls <b>608</b> may be omitted where the integrated memory assembly <b>570</b> is to be used as an LGA package.</p><p id="p-0081" num="0080">As has been briefly discussed above, the control die <b>590</b> and the memory structure die <b>580</b> may be bonded together. Bond pads on each die <b>580</b>, <b>590</b> may be used to bond the two dies together. In some embodiments, the bond pads are bonded directly to each other, without solder or other added material, in a so-called Cu-to-Cu bonding process. In a Cu-to-Cu bonding process, the bond pads are controlled to be highly planar and formed in a highly controlled environment largely devoid of ambient particulates that might otherwise settle on a bond pad and prevent a close bond. Under such properly controlled conditions, the bond pads are aligned and pressed against each other to form a mutual bond based on surface tension. Such bonds may be formed at room temperature, though heat may also be applied. In embodiments using Cu-to-Cu bonding, the bond pads may be about 6 &#x3bc;m square and spaced from each other with a pitch of 6 &#x3bc;m to 6 &#x3bc;m. While this process is referred to herein as Cu-to-Cu bonding, this term may also apply even where the bond pads are formed of materials other than Cu.</p><p id="p-0082" num="0081">When the area of bond pads is small, it may be difficult to bond the semiconductor dies together. The size of, and pitch between, bond pads may be further reduced by providing a film layer on the surfaces of the semiconductor dies including the bond pads. The film layer is provided around the bond pads. When the dies are brought together, the bond pads may bond to each other, and the film layers on the respective dies may bond to each other. Such a bonding technique may be referred to as hybrid bonding. In embodiments using hybrid bonding, the bond pads may be about 6 &#x3bc;m square and spaced from each other with a pitch of 1 &#x3bc;m to 6 &#x3bc;m. Bonding techniques may be used providing bond pads with even smaller sizes and pitches.</p><p id="p-0083" num="0082">Some embodiments may include a film on surface of the dies <b>580</b>, <b>590</b>. Where no such film is initially provided, a space between the dies may be under filled with an epoxy or other resin or polymer. The under-fill material may be applied as a liquid which then hardens into a solid layer. This under-fill step protects the electrical connections between the dies <b>580</b>, <b>590</b>, and further secures the dies together. Various materials may be used as under-fill material, but in embodiments, it may be Hysol epoxy resin from Henkel Corp., having offices in California, USA.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> depicts one embodiment of a portion of a memory array that forms a cross-point architecture in an oblique view. Memory array <b>502</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is one example of an implementation for memory array <b>502</b> in <figref idref="DRAWINGS">FIG. <b>5</b>A or <b>5</b>B</figref>, where a memory die <b>292</b> or memory structure die <b>580</b> can include multiple such array structures. The bit lines BL<sub>1</sub>-BL<sub>5 </sub>are arranged in a first direction (represented as running into the page) relative to an underlying substrate (not shown) of the die and the word lines WL<sub>1</sub>-WL<sub>5 </sub>are arranged in a second direction perpendicular to the first direction. <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is an example of a horizontal cross-point structure in which word lines WL<sub>1</sub>-WL<sub>5 </sub>and BL<sub>1</sub>-BL<sub>5 </sub>both run in a horizontal direction relative to the substrate, while the memory cells, two of which are indicated at <b>701</b>, are oriented so that the current through a memory cell (such as shown at I<sub>cell</sub>) runs in the vertical direction. In a memory array with additional layers of memory cells, such as discussed below with respect to <figref idref="DRAWINGS">FIG. <b>7</b>D</figref>, there would be corresponding additional layers of bit lines and word lines.</p><p id="p-0085" num="0084">As depicted in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, memory array <b>502</b> includes a plurality of memory cells <b>701</b>. The memory cells <b>701</b> may include re-writeable memory cells, such as can be implemented using ReRAM, MRAM, PCM, or other material with a programmable resistance. The following discussion will focus on MRAM memory cells, although much of the discussion can be applied more generally. The current in the memory cells of the first memory level is shown as flowing upward as indicated by arrow I<sub>cell</sub>, but current can flow in either direction, as is discussed in more detail in the following.</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIGS. <b>7</b>B and <b>7</b>C</figref> respectively present side and top views of the cross-point structure in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>. The sideview of <figref idref="DRAWINGS">FIG. <b>7</b>B</figref> shows one bottom wire, or word line, WL<sub>1 </sub>and the top wires, or bit lines, BL<sub>1</sub>-BL<sub>n</sub>. At the cross-point between each top wire and bottom wire is an MRAM memory cell <b>701</b>, although PCM, ReRAM, FeRAM, or other technologies can be used. <figref idref="DRAWINGS">FIG. <b>7</b>C</figref> is a top view illustrating the cross-point structure for M bottom wires WL<sub>1</sub>-WL<sub>M </sub>and N top wires BL<sub>1</sub>-BL<sub>N</sub>. In a binary embodiment, the MRAM cell at each cross-point can be programmed into one of two resistance states: high and low. More detail on embodiments for an MRAM memory cell design and techniques for their programming are given below. In some embodiments, sets of these wires are arrayed continuously as a &#x201c;tile&#x201d;, and such tiles may be paired adjacently in the Word Line (WL) direction and in the Bit Line direction to create a module. Such a module may be composed of 2&#xd7;2 tiles to form a four tile combination wherein the WL drivers between the tiles is &#x201c;center driven&#x201d; between the tiles with the WL running continuously over the driver at center of the line. Similarly BL drivers may be located between the pair of tiles paired in the BL direction to be center driven, whereby the driver area is shared between a pair of tiles.</p><p id="p-0087" num="0086">The cross-point array of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> illustrates an embodiment with one layer of word lines and bits lines, with the MRAM or other memory cells sited at the intersection of the two sets of conducting lines. To increase the storage density of a memory die, multiple layers of such memory cells and conductive lines can be formed. A 2-layer example is illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>D</figref>.</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> depicts an embodiment of a portion of a two level memory array that forms a cross-point architecture in an oblique view. As in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, <figref idref="DRAWINGS">FIG. <b>7</b>D</figref> shows a first layer <b>718</b> of memory cells <b>701</b> of an array <b>502</b> connected at the cross-points of the first layer of word lines WL<sub>1,1</sub>-WL<sub>1,4 </sub>and bit lines BL<sub>1</sub>-BL<sub>5</sub>. A second layer of memory cells <b>720</b> is formed above the bit lines BL<sub>1</sub>-BL<sub>5 </sub>and between these bit lines and a second set of word lines WL<sub>2,1</sub>-WL<sub>2,4</sub>. Although <figref idref="DRAWINGS">FIG. <b>7</b>D</figref> shows two layers, <b>718</b> and <b>720</b>, of memory cells, the structure can be extended upward through additional alternating layers of word lines and bit lines. Depending on the embodiment, the word lines and bit lines of the array of <figref idref="DRAWINGS">FIG. <b>7</b>D</figref> can be biased for read or program operations such that current in each layer flows from the word line layer to the bit line layer or the other way around. The two layers can be structured to have current flow in the same direction in each layer for a given operation or to have current flow in the opposite directions by driver selection in the positive or negative direction.</p><p id="p-0089" num="0088">The use of a cross-point architecture allows for arrays with a small footprint and several such arrays can be formed on a single die. The memory cells formed at each cross-point can be a resistive type of memory cell, where data values are encoded as different resistance levels. Depending on the embodiment, the memory cells can be binary valued, having either a low resistance state or a high resistance state, or multi-level cells (MLCs) that can have additional resistance intermediate to the low resistance state and high resistance state. The cross-point arrays described here can be used in the memory die <b>292</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the local memory <b>106</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and/or the host memory <b>124</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Resistive type memory cells can be formed according to many of the technologies mentioned above, such as ReRAM, PCM, FeRAM, or MRAM. The following discussion is presented mainly in the context of memory arrays using a cross-point architecture with binary valued MRAM memory cells, although much of the discussion is more generally applicable.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an embodiment for the structure of an MRAM cell. The MRAM cell includes a bottom electrode <b>801</b>, a pair of magnetic layers (reference layer <b>803</b> and free layer <b>807</b>) separated by a separation or tunneling layer of, in this example, magnesium oxide (MgO) <b>805</b>, and then a top electrode <b>811</b> separated from the free layer <b>807</b> by a spacer <b>809</b>. In some embodiments, the bottom electrode <b>801</b> is referred to as a word line and the top electrode <b>811</b> is referred to as a bit line. The state of the memory cell is based on the relative orientation of the magnetizations of the reference layer <b>803</b> and the free layer <b>807</b>: if the two layers are magnetized in the same direction, the memory cell will be in a parallel (P) low resistance state (LRS); and if they have the opposite orientation, the memory cell will be in an anti-parallel (AP) high resistance state (HRS). An MLC embodiment would include additional intermediate states. The orientation of the reference layer <b>803</b> is fixed and, in the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, is oriented upward. Reference layer <b>803</b> is also known as a fixed layer or pinned layer.</p><p id="p-0091" num="0090">Data is written to an MRAM memory cell by programming the free layer <b>807</b> to either have the same orientation or opposite orientation. An array of MRAM memory cells may be placed in an initial, or erased, state by setting all of the MRAM memory cells to be in the low resistance state in which all of their free layers have a magnetic field orientation that is the same as the their reference layers. Each of the memory cells is then selectively programmed (also referred to as &#x201c;written&#x201d;) by placing its free layer <b>807</b> to be in the high resistance state by reversing the magnetic field to be opposite that of the reference layer <b>803</b>. The reference layer <b>803</b> is formed so that it will maintain its orientation when programming the free layer <b>807</b>. The reference layer <b>803</b> can have a more complicated design that includes synthetic anti-ferromagnetic layers and additional reference layers. For simplicity, the figures and discussion omit these additional layers and focus only on the fixed magnetic layer primarily responsible for tunneling magnetoresistance in the cell.</p><p id="p-0092" num="0091">In the embodiment of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a forced current approach is used to access the MRAM cell. The forced current approach may be used to read or write the MRAM cell. In the forced current approach, an access current (e.g., I<sub>read </sub>I<sub>write</sub>) is driven through the bottom electrode <b>801</b> by a current source <b>813</b>. The current source <b>813</b> is a part of the driver circuitry for the bottom electrode <b>801</b>. A voltage (e.g., V<sub>select</sub>) is provided to the top electrode <b>811</b>. Herein, the terms &#x201c;read current&#x201d; (I<sub>read</sub>) and &#x201c;write current&#x201d; (I<sub>write</sub>) will be used in connection with access currents that are driven through MRAM cells. A write current is a current that is driven through a first conductive line (e.g., word line) that, in combination with a voltage applied to a second conductive line (e.g., bit line), will change the state of the MRAM cell. As an example, a write current of about 30 uA may be used for an MRAM cell with a Critical Dimension (CD) of approximately 20 nanometers with RA10. Read currents may be about half the write current if applied for a limited time, such as &#x3c;30 ns. A write current that flows in one direction through the MRAM cell will change an AP-state MRAM cell from the AP-state to the P-state. A write current that flows in the other direction through the MRAM cell will change a P-state MRAM cell from the P-state to the AP-state. In general, a read current will preferably be set low enough so as not to change the state of an MRAM cell from the P-state to the AP-state or from the AP-state to the P-state.</p><p id="p-0093" num="0092">As defined herein, the access current may have a positive magnitude (or direction) or a negative magnitude. A positive magnitude access current that is driven through a first conductive line (e.g., word line) at a given point will flow in the opposite direction as a negative magnitude access current that is driven through the first conductive line at the given point. Hence, the access current may flow through the MRAM cell in either direction, depending on the whether the access current is defined as having has a positive or negative magnitude. <figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts the current flowing in a positive direction, but the current could flow in the opposite (negative) direction.</p><p id="p-0094" num="0093">As discussed more fully below in connection with <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, in some embodiments, a read current may be applied in an AP2P direction or, alternatively, in a P2AP direction. In some embodiments, the MRAM cell is read by performing an SRR. In one embodiment, an SRR has a first read (Read1 in the AP2P direction), a write to the P-state, and a second read (Read2 in the AP2P direction). The voltage level of the memory cell due to Read1 in the AP2P direction is recorded. The voltage level due to Read2 in the AP2P direction is compared with the voltage level due to Read1 in the AP2P direction. A change in the voltage level indicates that the MRAM cell was originally in the AP-state. Alternatively, the SRR has a first read (Read1 in the P2AP direction), a write to the AP-state, and a second read (Read2 in the P2AP direction). The voltage level of the memory cell due to Read1 in the P2AP direction is recorded. The voltage level due to Read2 in the P2AP direction is compared with the voltage level due to Read1 in the P2AP direction. A change in the voltage level indicates that the MRAM cell was originally in the P-state.</p><p id="p-0095" num="0094">In one embodiment, the MRAM cell is read by applying, for example, 0V to the top electrode <b>811</b>, while driving a current of, for example, 15 micro Amperes (&#x3bc;A) through the bottom electrode <b>801</b>. This read current will flow from the bottom electrode <b>801</b> to the top electrode <b>811</b>. Note that the read may be Read1 or Read2 in the P2AP direction. In some embodiments, data is written to the MRAM cell using a bipolar write operation. In one embodiment, the MRAM cell is written from the AP-state to the P-state by applying, for example, 3V to the top electrode <b>811</b>, while driving a write current of, for example, &#x2212;30 &#x3bc;A through the bottom electrode <b>801</b>. This write current will flow from the top electrode <b>811</b> to the bottom electrode <b>801</b>. In one embodiment, the MRAM cell is written from the P-state to the AP-state by applying, for example, 0V to the top electrode <b>811</b>, while driving a current of, for example, 30 &#x3bc;A through the bottom electrode <b>801</b>. This write current will flow from the bottom electrode <b>801</b> to the top electrode <b>811</b>.</p><p id="p-0096" num="0095">As an alternative to the approach in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the select voltage can be applied to the bottom electrode <b>801</b>, with the access current applied through the top electrode <b>811</b>. In one such embodiment, the MRAM cell is read by applying, for example, 3V to the bottom electrode <b>801</b>, while driving a read current of, for example, &#x2212;15 &#x3bc;A through the top electrode <b>811</b>. This read current will flow from the bottom electrode <b>801</b> to the top electrode <b>811</b>.</p><p id="p-0097" num="0096">In one embodiment, the MRAM cell is written from the AP-state to the P-state by applying, for example, &#x2212;3V to the bottom electrode <b>801</b>, while driving a write current of, for example, 30 &#x3bc;A through the top electrode <b>811</b>. This write current will flow from the bottom electrode <b>801</b> to the top electrode <b>811</b>. In one embodiment, the MRAM cell is written from the P-state to the AP-state by applying, for example, 0V to the bottom electrode <b>801</b>, while driving a current of, for example, &#x2212;30 &#x3bc;A through the top electrode <b>811</b>. This write current will flow from the top electrode <b>811</b> to the bottom electrode <b>801</b>.</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an embodiment for an MRAM memory cell design as it may be implemented in a cross-point array in more detail. When placed in a cross-point array, the top and bottom electrodes of the MRAM memory cells will be the top and bottom wires of the array. In the embodiment shown here, the bottom electrode is the word line <b>901</b> and the top electrode is the bit line <b>911</b> of the memory cell, but these can be reversed in some embodiments. Between the word line <b>901</b> and bit line <b>911</b> are the reference layer <b>903</b> and free layer <b>907</b>, which are again separated MgO barrier <b>905</b>. In the embodiment shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an MgO cap <b>908</b> is also formed on top of the free layer <b>907</b> and a conductive spacer <b>909</b> is formed between the bit line <b>911</b> and the MgO cap <b>908</b>. The reference layer <b>903</b> is separated from the word line <b>901</b> by another conductive spacer <b>902</b>. On either side of the memory cell structure is a liner <b>921</b> and <b>923</b>, where these can be part of the same structure, but appear separate in the cross-section of <figref idref="DRAWINGS">FIG. <b>9</b></figref>. To either side of the liner <b>921</b>, <b>923</b> is shown some of fill material <b>925</b>, <b>927</b> used to fill in the otherwise empty regions of the cross-point structure.</p><p id="p-0099" num="0098">With respect to the free layer design <b>907</b>, embodiments include CoFe or CoFeB Alloy with a thickness on the order &#x2dc;1-2 nm, where an Ir layer can be interspersed in the free layer close to MgO barrier <b>905</b> and the free layer <b>907</b> can be doped with Ta, W, or Mo. Embodiments for the reference layer <b>903</b> can include a bilayer of CoFeB and CoPt multilayer coupled with an Ir or Ru spacer <b>902</b>. The MgO cap <b>908</b> is optional, but can be used to increase anisotropy of free layer <b>907</b>. The conductive spacers can be conductive metals such as Ta, W, Ru, CN, TiN, and TaN, among others.</p><p id="p-0100" num="0099">The following discussion will mainly be discussed with respect to a perpendicular spin transfer torque MRAM memory cell, where the free layer <b>807</b>/<b>907</b> of <figref idref="DRAWINGS">FIGS. <b>8</b> and <b>9</b></figref> comprises a switchable direction of magnetization that is perpendicular to the plane of the free layer. Spin transfer torque (&#x201c;STT&#x201d;) is an effect in which the orientation of a magnetic layer in a magnetic tunnel junction can be modified using a spin-polarized current. Charge carriers (such as electrons) have a property known as spin which is a small quantity of angular momentum intrinsic to the carrier. An electric current is generally unpolarized (e.g., consisting of 50% spin-up and 50% spin-down electrons). A spin polarized current is one with more electrons of either spin (e.g., a majority of spin-up electrons or a majority of spin-down electrons). By passing a current through a thick magnetic layer (the reference layer), a spin-polarized current can be produced. If this spin-polarized current is directed into a second magnetic layer (the free layer), angular momentum can be transferred to this second magnetic layer, changing the direction of magnetization of the second magnetic layer. This is referred to as spin transfer torque. <figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> illustrate the used of spin transfer torque to program or write to MRAM memory. Spin transfer torque magnetic random access memory (STT MRAM) has the advantages of lower power consumption and better scalability over other MRAM variations. Compared to other MRAM implementations, such as toggle MRAM, the STT switching technique requires relatively low power, virtually eliminates the problem of adjacent bit disturbs, and has more favorable scaling for higher memory cell densities (reduced MRAM cell size). The latter issue also favors STT MRAM where the free and reference layer magnetizations are orientated perpendicular to the film plane, rather than in-plane.</p><p id="p-0101" num="0100">As the STT phenomenon is more easily described in terms electron behavior, <figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> and their discussion is given in terms of electron current, where the direction of the write current is defined as the direction of the electron flow. Therefore, the term write current in reference to <figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> refers to an electron current. As electrons are negatively charged, the electron current will be in the opposite direction from the conventionally defined current, so that an electron current will flow from a lower voltage level towards a higher voltage level instead the conventional current flow of from a higher voltage level to a lower voltage level.</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> illustrate the writing of an MRAM memory cell by use the STT mechanism, depicting a simplified schematic representation of an example of an STT-switching MRAM memory cell <b>1000</b> in which both the reference and free layer magnetization are in a perpendicular direction. Memory cell <b>1000</b> includes a magnetic tunnel junction (MTJ) <b>1002</b> comprising an upper ferromagnetic layer <b>1010</b>, a lower ferromagnetic layer <b>1012</b>, and a tunnel barrier (TB) <b>1014</b> as an insulating layer between the two ferromagnetic layers. In this example, upper ferromagnetic layer <b>1010</b> is the free layer FL and the direction of its magnetization can be switched. Lower ferromagnetic layer <b>1012</b> is the reference (or fixed) layer RI, and the direction of its magnetization cannot be switched. When the magnetization in free layer <b>1010</b> is parallel to the magnetization in reference layer RL <b>1012</b>, the resistance across the memory cell <b>1000</b> is relatively low. When the magnetization in free layer FL <b>1010</b> is anti-parallel to the magnetization in reference layer RL <b>1012</b>, the resistance across memory cell <b>1000</b> is relatively high. The data (&#x201c;0&#x201d; or &#x201c;1&#x201d;) in memory cell <b>1000</b> is read by measuring the resistance of the memory cell <b>1000</b>. In this regard, electrical conductors <b>1006</b>/<b>1008</b> attached to memory cell <b>1000</b> are utilized to read the MRAM data. By design, both the parallel and antiparallel configurations remain stable in the quiescent state and/or during a read operation (at sufficiently low read current).</p><p id="p-0103" num="0102">For both the reference layer RL <b>1012</b> and free layer FL <b>1010</b>, the direction of magnetization is in the perpendicular direction (i.e. perpendicular to the plane defined by the free layer and perpendicular to the plane defined by the reference layer). <figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> show the direction of magnetization of reference layer RL <b>1012</b> as up and the direction of magnetization of free layer FL <b>1010</b> as switchable between up and down, which is perpendicular to the plane.</p><p id="p-0104" num="0103">In one embodiment, tunnel barrier <b>1014</b> is made of Magnesium Oxide (MgO); however, other materials can also be used. Free layer <b>1010</b> is a ferromagnetic metal that possess the ability to change/switch its direction of magnetization. Multilayers based on transition metals like Co, Fe and their alloys can be used to form free layer <b>1010</b>. In one embodiment, free layer <b>1010</b> comprises an alloy of Cobalt, Iron and Boron. Reference layer <b>1012</b> can be many different types of materials including (but not limited to) multiple layers of Cobalt and Platinum and/or an alloy of Cobalt and Iron.</p><p id="p-0105" num="0104">To &#x201c;set&#x201d; the MRAM memory cell bit value (i.e., choose the direction of the free layer magnetization), an electron write current <b>1050</b> is applied from conductor <b>1008</b> to conductor <b>1006</b>, as depicted in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>. To generate the electron write current <b>1050</b>, the top conductor <b>1006</b> is placed at a higher voltage level than bottom conductor <b>1008</b>, due the negative charge of the electron. The electrons in the electron write current <b>1050</b> become spin-polarized as they pass through reference layer <b>1012</b> because reference layer <b>1012</b> is a ferromagnetic metal. When the spin-polarized electrons tunnel across the tunnel barrier <b>1014</b>, conservation of angular momentum can result in the imparting of a spin transfer torque on both free layer <b>1010</b> and reference layer <b>1012</b>, but this torque is inadequate (by design) to affect the magnetization direction of the reference layer <b>1012</b>. Contrastingly, this spin transfer torque is (by design) sufficient to switch the magnetization orientation in the free layer <b>1010</b> to become parallel (P) to that of the reference layer <b>1012</b> if the initial magnetization orientation of the free layer <b>1010</b> was anti-parallel (AP) to the reference layer <b>1012</b>, referred to as an anti-parallel-to-parallel (AP2P) write. The parallel magnetizations will then remain stable before and after such electron write current is turned off.</p><p id="p-0106" num="0105">In contrast, if free layer <b>1010</b> and reference layer <b>1012</b> magnetizations are initially parallel, the direction of magnetization of free layer <b>1010</b> can be switched to become antiparallel to the reference layer <b>1012</b> by application of an electron write current of opposite direction to the aforementioned case. For example, electron write current <b>1052</b> is applied from conductor <b>1006</b> to conductor <b>1008</b>, as depicted in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, by placing the higher voltage level on the lower conductor <b>1008</b>. This will write a free layer <b>1010</b> in a P state to an AP state, referred to as a parallel-to-anti-parallel (P2AP) write. Thus, by way of the same STT physics, the direction of the magnetization of free layer <b>1010</b> can be deterministically set into either of two stable orientations by judicious choice of the electron write current direction (polarity).</p><p id="p-0107" num="0106">The data (&#x201c;0&#x201d; or &#x201c;1&#x201d;) in memory cell <b>1000</b> can read by measuring the resistance of the memory cell <b>1000</b>. Low resistance typically represents a &#x201c;0&#x201d; bit and high resistance typically represents a &#x201c;1&#x201d; bit, although sometimes the alternate convention occurs. A read current can being applied across the memory cell (e.g., across the magnetic tunnel junction <b>1002</b>) by applying an electron read current from conductor <b>1008</b> to conductor <b>1006</b>, flowing as shown for <b>1050</b> in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref> (the &#x201c;AP2P direction&#x201d;); alternatively, the electron read current can be applied from conductor <b>1006</b> to conductor <b>1008</b>, flowing as shown for <b>1052</b> in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> (the &#x201c;P2AP direction&#x201d;). In a read operation, if the electron current is too high, this can disturb data stored in a memory cell and change its state. For example, if electron read current uses the P2AP direction of <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, too high of a current or voltage level can switch any memory cells in the low resistance P state into the high resistance AP state. Consequently, although the MRAM memory cell can be read in either direction, the directional nature of the write operation may make one read direction preferable over the other in various embodiments.</p><p id="p-0108" num="0107">Although the discussion of <figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> was in the context of electron current for the read and write currents, the subsequent discussion will be in the context of conventional current unless otherwise specified.</p><p id="p-0109" num="0108">Whether to read or write selected memory cells in the array structures of <figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>D</figref>, the bit line and word line corresponding a selected memory cell is biased to place a voltage across the selected memory cell and induce the flow of electrons as illustrated with respect to <figref idref="DRAWINGS">FIG. <b>10</b>A or <b>10</b>B</figref>. Note that in some embodiments, the word line is biased by driven a current through the word line. This will also apply a voltage across non-selected memory cells of the array, which can induce currents in non-selected memory cells. Although this wasted power consumption can be mitigated to some degree by designing the memory cells to have relatively high resistance levels for both high and low resistance states, this will still result in increased current and power consumption as well as placing additional design constraints on the design of the memory cells and the array. Note that herein, a &#x201c;selected memory cell&#x201d; means that the memory cell is selected for access (e.g., read access, write access). An &#x201c;unselected memory cell&#x201d; means that the memory cell is not selected for access. A given process may result in write currents that are about the same for forward versus reverse write of the MRAM, or it may be that writing from low resistance state (LRS) to high resistance state (HRS) requires about 20% more current for CD of approximately 20 nm and RA10.</p><p id="p-0110" num="0109">One approach to address this unwanted current leakage is to place a selector element in series with each MRAM or other resistive (e.g., ReRAM, PCM) memory cell. For example, a select transistor can be placed in series with each resistive memory cell element in <figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>D</figref> so that the memory cells <b>701</b> is now a composite of a select transistor and a programmable resistance. Use of a select transistor, however, requires the introduction of additional control lines to be able to turn on the corresponding transistor of a selected memory cell. Additionally, transistors will often not scale in the same manner as the resistive memory element, so that as memory arrays move to smaller sizes the use of transistor based selectors can be a limiting factor.</p><p id="p-0111" num="0110">An alternate approach to select transistors is the use of a threshold switching selector in series with the programmable resistive element. A threshold switching selector has a high resistance (in an off or non-conductive state) when it is biased to a voltage lower than its threshold voltage, and a low resistance (in an on or conductive state) when it is biased to a voltage higher than its threshold voltage. The threshold switching selector remains on until its current is lowered below a holding current, or the voltage is lowered below a holding voltage. When this occurs, the threshold switching selector returns to the off state. Accordingly, to program a memory cell at a cross-point, a voltage is applied which is sufficient to turn on the associated threshold switching selector and set or reset the memory cell; and to read a memory cell, the threshold switching selector similarly must be activated by being turned on before the resistance state of the memory cell can be determined. One set of examples for a threshold switching selector is an ovonic threshold switching material of an Ovonic Threshold Switch (OTS). Example threshold switching materials include Ge&#x2014;Se, Ge&#x2014;Se&#x2014;N, Ge&#x2014;Se&#x2014;As, Ge&#x2014;Se&#x2014;Sb&#x2014;N, Ge58Se42, GeTe6, Si&#x2014;Te, Zn&#x2014;Te, C&#x2014;Te, B&#x2014;Te, Ge&#x2014;As&#x2014;Te&#x2014;Si&#x2014;N, Ge&#x2014;As&#x2014;Se&#x2014;Te&#x2014;Si and Ge&#x2014;Se&#x2014;As&#x2014;Te, with atomic percentages ranging from a few percent to more than 90 percent for each element.</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIGS. <b>11</b>A and <b>11</b>B</figref> illustrate embodiments for the incorporation of threshold switching selectors into an MRAM memory array having a cross-point architecture. The examples of <figref idref="DRAWINGS">FIGS. <b>11</b>A and <b>11</b>B</figref> show two MRAM cells (Layer 1 Cell, Layer 2 Cell) in a two layer cross-point array, such as shown in <figref idref="DRAWINGS">FIG. <b>7</b>D</figref>, but in a side view. <figref idref="DRAWINGS">FIGS. <b>11</b>A and <b>11</b>B</figref> show a lower first conducting line of word line 1 <b>1100</b>, an upper first conducting line of word line 2 <b>1120</b>, and an intermediate second conducting line of bit line <b>1110</b>. In these figures, all of these lines are shown running left to right across the page for ease of presentation, but in a cross-point array they would be more accurately represented as represented in the oblique view of <figref idref="DRAWINGS">FIG. <b>7</b>D</figref> where the word lines, or first conducting lines or wires, run in one direction parallel to the surface of the underlying substrate and the bit lines, or second conducting lines or wires, run in a second direction parallel to the surface to the substrate that is largely orthogonal to the first direction. The MRAM memory cells are also represented in a simplified form, showing only the reference layer, free layer, and the intermediate tunnel barrier, but in an actual implementation would typically include the additional structure described above with respect to <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0113" num="0112">An MRAM element <b>1102</b> including free layer <b>1101</b>, tunnel barrier <b>1103</b>, and reference layer <b>1105</b> is formed above the threshold switching selector <b>1109</b>, where this series combination of the MRAM element <b>1102</b> and the threshold switching selector <b>1109</b> together form the layer 1 cell between the bit line <b>1110</b> and word line 1 <b>1100</b>. The series combination of the MRAM element <b>1102</b> and the threshold switching selector <b>1109</b> operate as largely as described above with respect to <figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref> when the threshold switching selector <b>1109</b> is turned on, aside from some voltage drop across the threshold switching selector <b>1109</b>. Initially, though, the threshold switching selector <b>1109</b> needs to be turned on by applying a voltage above the threshold voltage Vin of the threshold switching selector <b>1109</b>, and then the biasing current or voltage needs to be maintained high enough above the holding current or holding voltage of the threshold switching selector <b>1109</b> so that it stays on during the subsequent read or write operation.</p><p id="p-0114" num="0113">On the second layer, an MRAM element <b>1112</b> includes free layer <b>1111</b>, tunnel barrier <b>1113</b>, and reference layer <b>1115</b> is formed above the threshold switching selector <b>1119</b>, with the series combination of the MRAM element <b>1112</b> and the threshold switching selector <b>1119</b> together forming the layer 2 cell between the bit line <b>1110</b> and word line 2 <b>1120</b>. The layer 2 cell will operate as for the layer 1 cell, although the lower conductor now corresponds to a bit line <b>1110</b> and the upper conductor is now a word line, word line 2 <b>1120</b>.</p><p id="p-0115" num="0114">In the embodiment of <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, the threshold switching selector <b>1109</b>/<b>1119</b> is formed below the MRAM element <b>1102</b>/<b>1112</b>, but in alternate embodiments the threshold switching selector can be formed above the MRAM element for one or both layers. As discussed with respect to <figref idref="DRAWINGS">FIGS. <b>10</b>A and <b>10</b>B</figref>, the MRAM memory cell is directional. In <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, the MRAM elements <b>1102</b> and <b>1112</b> have the same orientation, with the free layer <b>1101</b>/<b>1111</b> above (relative to the unshown substrate) the reference layer <b>1105</b>/<b>1115</b>. Forming the layers between the conductive lines with the same structure can have a number of advantages, particularly with respect to processing as each of the two layers, as well as subsequent layers in embodiments with more layers, can be formed according to the same processing sequence.</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>11</b>B</figref> illustrates an alternate embodiment that is arranged similarly to that of <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, except that in the layer 2 cell the locations of the reference layer and free layer are reversed. More specifically, between word line 1 <b>1150</b> and bit line <b>1160</b>, as in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> the layer cell <b>1</b> includes an MRAM element <b>1</b> having a free layer <b>1151</b> formed over tunnel barrier <b>1153</b>, that is turn formed over the reference layer <b>1155</b>, with the MRAM element <b>1152</b> formed over the threshold switching selector <b>1159</b>. The second layer of the embodiment of <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> again has an MRAM element <b>1162</b> formed over a threshold switching selector <b>1169</b> between the bit line <b>1160</b> and word line 2 <b>1170</b>, but, relative to <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, with the MRAM element <b>1162</b> inverted, having the reference layer <b>1161</b> now formed above the tunnel barrier <b>1163</b> and the free layer <b>1165</b> now under the tunnel barrier <b>1163</b>.</p><p id="p-0117" num="0116">Although the embodiment of <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> requires a different processing sequence for the forming of layers, in some embodiments it can have advantages. In particular, the directionality of the MRAM structure can make the embodiment of <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> attractive since when writing or reading in the same direction (with respect to the reference and free layers) the bit line will be biased the same for both the lower layer and the upper layer, and both word lines will be biased the same. For example, if both layer 1 and layer 2 memory cells are sensed in the P2AP direction (with respect to the reference and free layers), the bit line layer <b>1160</b> will be biased such as in the P2AP direction, the bit line <b>1160</b> is biased low (e.g., 0V) for both the upper and lower cell, with word line 1 <b>1150</b> and word line 2 <b>1170</b> both biased to a higher voltage level. Similarly, with respect to writing, for writing to the high resistance AP state the bit line <b>1160</b> is biased low (e.g., 0V) for both the upper and lower cell, with word line 1 <b>1150</b> and word line 2 <b>1170</b> both biased to a higher voltage level; and for writing to the low resistance P state the bit line <b>1160</b> is biased to the high voltage level, with word line 1 <b>1150</b> and word line 2 <b>1170</b> both biased to the low voltage level. In contrast, for the embodiment of <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, the bit lines and word lines would need to have their bias levels reversed for performing any of these operations on the upper level relative to the lower level. Note that in one embodiment of a forced current approach the word lines are biased to a target voltage by driving a current through the word line.</p><p id="p-0118" num="0117">To either read data from or write data to an MRAM memory cell involves passing a current through the memory cell. In embodiments where a threshold switching selector is placed in series with the MRAM element, before the current can pass through the MRAM element the threshold switching selector needs to be turned on by applying a sufficient voltage across the series combination of the threshold switching selector and the MRAM element.</p><p id="p-0119" num="0118">It can be quite difficult to concurrently access more than one bit in a cross-point memory array. Techniques are disclosed herein for concurrently accessing multiple memory cells in a cross-point array. In one embodiment, multiple memory cells in a cross-point array are read concurrently. In one embodiment, multiple memory cells in a cross-point array are written concurrently.</p><p id="p-0120" num="0119"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts an embodiment of a memory array <b>292</b> having a cross-point architecture, in which multiple memory cells are concurrently accessed. The array <b>292</b> has a set of first conductive lines <b>1206</b><i>a</i>-<b>1206</b><i>h </i>and a set of second conductive lines <b>1208</b><i>a</i>-<b>1208</b><i>d</i>. In one embodiment, the set of first conductive lines <b>1206</b><i>a</i>-<b>1206</b><i>h </i>are word lines and the set of second conductive lines <b>1208</b><i>a</i>-<b>1208</b><i>b </i>are bit lines. For ease of discussion, the set of first conductive lines <b>1206</b><i>a</i>-<b>1206</b><i>h </i>may be referred to as word lines and the set of second conductive lines <b>1208</b><i>a</i>-<b>1208</b><i>b </i>may be referred to as bit lines. However, the set of first conductive lines <b>1206</b><i>a</i>-<b>1206</b><i>h </i>could be bit lines and the set of second conductive lines <b>1208</b><i>a</i>-<b>1208</b><i>b </i>could be word lines.</p><p id="p-0121" num="0120">The array <b>292</b> has a number of memory cells <b>701</b>. Each memory cell <b>701</b> is connected between one of the first conductive lines <b>1206</b> and a corresponding one of the second conductive lines <b>1208</b>. Each memory cell <b>701</b> has a magnetoresistive random access memory (MRAM) element <b>1202</b> in series with a threshold switching selector element <b>1204</b>. Hence, each memory cell (&#x201c;bit&#x201d;) <b>701</b> may be referred to as an MRAM cell or bit. The threshold switching selector <b>1204</b> is configured to become conductive in response to application of a voltage level exceeding a threshold voltage of the threshold switching selector <b>1204</b>.</p><p id="p-0122" num="0121">Each first conductive line <b>1206</b> is driven by one of the current drivers <b>1210</b><i>a</i>-<b>1210</b><i>h</i>. For example, first conductive line <b>1206</b><i>a </i>is driven by current driver <b>1210</b><i>a</i>, first conductive line <b>1206</b><i>b </i>is driven by current driver <b>1210</b><i>b</i>, etc. Each second conductive line <b>1208</b> is driven by one of the voltage drivers <b>1212</b><i>a</i>-<b>1212</b><i>d</i>. For example, first conductive line <b>1208</b><i>a </i>is driven by voltage driver <b>1212</b><i>a</i>, second conductive line <b>1208</b><i>b </i>is driven by voltage driver <b>1212</b><i>b</i>, etc. Current driver <b>1210</b><i>b </i>drives an access current (I<sub>access</sub>) through selected word line <b>1206</b><i>b</i>. Likewise, current driver <b>1210</b><i>g </i>drives I<sub>access </sub>through selected word line <b>1206</b><i>g</i>. In some embodiments, the current drivers <b>1210</b> each comprise a transistor that is operated to be partially on and controlled by a current mirror to limit I<sub>access </sub>to a target current. The current drivers <b>1210</b> are configured to either source a current or sink a current. Thus, I<sub>access </sub>could flow in either direction through the selected word line. By convention used herein, when a current driver <b>1210</b> is used as a current source the magnitude of the access current is positive. By convention used herein, when a current driver <b>1210</b> is used as a current sink the magnitude of the access current is negative. Whether a current driver <b>1210</b> sources or sinks a current, herein this will be referred to as driving the current through the word line. In one embodiment, no current is driven through unselected word lines (e.g., <b>1206</b><i>a</i>, <b>1206</b><i>c</i>, <b>1206</b><i>d</i>, <b>1206</b><i>e</i>, <b>1206</b><i>f</i>, and <b>1206</b><i>h</i>). Note that herein, a &#x201c;selected word line&#x201d; means that the word line is connected to a selected memory cell. A selected word line may also be connected to unselected memory cells. An &#x201c;unselected word line&#x201d; means that the word line is connected to only unselected memory cells. In other words, all memory cells that connect to an unselected word line are unselected memory cells. Note that herein, a &#x201c;selected bit line&#x201d; means that the bit line is connected to at least one selected memory cell. An &#x201c;unselected bit line&#x201d; means that the bit line is connected to only unselected memory cells. In other words, all memory cells that connect to an unselected bit line are unselected memory cells. As noted above, a selected memory cell is a memory cell that is selected for access. A selected memory cell is connected between a selected word line and a selected bit line.</p><p id="p-0123" num="0122">Two of the memory cells <b>701</b><i>a</i>, <b>701</b><i>b </i>are selected for concurrent access. Selected memory cell <b>701</b><i>a </i>is at the cross-point of selected word line <b>1206</b><i>b </i>and selected bit line <b>1208</b><i>b</i>. The other memory cells not selected for access (i.e., are unselected memory cells). Selected memory cell <b>701</b><i>b </i>is at the cross-point of selected word line <b>1206</b><i>g </i>and selected bit line <b>1208</b>. All other word lines and all other bit lines are unselected. To select a memory cell <b>701</b>, a select voltage (V<sub>select</sub>) is provided to the selected bit line (e.g., bit line <b>1208</b><i>b</i>) and an access current is driven through a selected word line (e.g., word lines <b>1206</b><i>b</i>, <b>1206</b><i>g</i>). An unselect voltage (V<sub>unsel</sub>) is provided to the unselected bit lines (e.g., bit lines <b>1208</b><i>a</i>, <b>1208</b><i>c</i>, <b>1208</b><i>d</i>). In one embodiment, V<sub>select </sub>has a magnitude such that the threshold switching selector <b>1204</b> in a selected memory cell will turn on. On the other hand, V<sub>unsel </sub>has a magnitude such that the threshold switching selector <b>1204</b> in an unselected memory cell will not turn on. It may be that the driver for the selected BL is located more towards the center of the BL shown, for example between WL <b>1206</b><i>d </i>and <b>1206</b><i>e</i>. In one embodiment, one selected WL is on one side of the BL driver (e.g., one or WLs <b>1206</b><i>a</i>-<b>1206</b><i>d</i>) and the other selected WL is on the other side of the BL driver (e.g., one of WLs <b>1206</b><i>e</i>-<b>1206</b><i>h</i>). Therefore, the IR drop (i.e., the voltage drop between two points along a conductor due to product of the current flowing through the conductor and the resistance between the two points along the conductor) along the selected BL may be reduced.</p><p id="p-0124" num="0123">One of the sense amplifiers (SA) <b>528</b><i>a</i>-<b>528</b><i>h </i>is connected to each word line. For example, SA <b>528</b><i>a </i>is connected to word line <b>1206</b><i>a</i>, SA <b>528</b><i>b </i>is connected to word line <b>1206</b><i>b</i>, etc. Each sense amplifier is configured to sense a voltage on the word line <b>1206</b> to which the SA is connected. In the alternative, a decoder selects the WL <b>1206</b> to be driven, and the current source and sense amplifier are connected to a global decoded line passing through the selection decode circuitry (not shown but apparent to one reasonably skilled).</p><p id="p-0125" num="0124">In the example of <figref idref="DRAWINGS">FIG. <b>12</b></figref> there are more word lines than bit lines in the cross-point array. In one embodiment, there are more bit lines than word lines in the cross-point array. In one embodiment, the number of bit lines equals the number of word lines in the cross-point array. In the example of <figref idref="DRAWINGS">FIG. <b>12</b></figref> there are twice as many word lines as bit lines in the cross-point array; however, a different ratio could be used. Thereby, different tile sizes may be realized. For example, a tile may have 1024 BL by 2048 WL, which may be composed into a module of 2048&#xd7;4096 cells by center driving the WL and BL between the four tiles. In this example, each module accesses two bits per Activate.</p><p id="p-0126" num="0125">In some embodiments, the voltage drivers <b>1212</b> connect to the respective bit lines <b>1208</b> at strategic locations. In some embodiments, the current drivers <b>1210</b> connect to the respective word lines <b>1206</b> at strategic locations. <figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts an embodiment of a memory array <b>292</b> having a cross-point architecture, showing locations of contacts from drivers to bit lines and word lines. The memory array <b>292</b> in <figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts the same word lines <b>1206</b><i>a</i>-<b>1206</b><i>h </i>and bit lines <b>1208</b><i>a</i>-<b>1208</b><i>d</i>, as the array in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. However, the memory cells <b>701</b> are not depicted in <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0127" num="0126">Each current driver <b>1210</b><i>a</i>-<b>1210</b><i>h </i>is connected to one of the word lines <b>1206</b> by a corresponding one of the word line contacts <b>1302</b><i>a</i>-<b>1302</b><i>h</i>. In one embodiment, a current driver connects to its corresponding word line by way of a via. Thus, the current driver could reside at a different level of the cross-point array than the word line it drives. The current drivers <b>1210</b> could be located outside of the cross-point array, such as on control die <b>590</b>. Each word line contact <b>1302</b> connects to a word line <b>1206</b> at a location that divides the respective word line <b>1206</b> into a first portion and a second portion. For example, word line contact <b>1302</b><i>c </i>connects to word line <b>1206</b><i>c </i>at a location that divides word line <b>1206</b><i>c </i>into a first portion <b>1312</b><i>a </i>and a second portion <b>1312</b><i>b</i>. In some embodiments, half of the bit lines <b>1208</b> are located such that they cross the word lines <b>1206</b> somewhere in the respective first portions and the other half of the bit lines are located such that they cross the word lines somewhere in the respective second portions. For example, bit lines <b>1208</b><i>a </i>and <b>1208</b><i>b </i>cross the first portion <b>1312</b><i>a </i>of word line <b>1206</b><i>c</i>, whereas bit lines <b>1208</b><i>c </i>and <b>1208</b><i>d </i>cross the second portion <b>1312</b><i>b </i>of word line <b>1206</b><i>c</i>. In some embodiments, the word line contacts <b>1302</b> at located at the approximate midpoint of the respective word lines <b>1206</b>. Thus, in some embodiments, the first and second portions of the respective word lines are about the same length.</p><p id="p-0128" num="0127">Each voltage driver <b>1212</b><i>a</i>-<b>1212</b><i>h </i>is connected to one of the bit lines <b>1208</b> by a corresponding one of the bit line contacts <b>1304</b><i>a</i>-<b>1304</b><i>h</i>. In one embodiment, a voltage driver connects to its corresponding bit line by way of a via. Thus, the voltage driver could reside at a different level of the cross-point array than the bit line it drives. The voltage drivers <b>1212</b> could be located outside of the cross-point array, such as on control die <b>590</b>. Each bit line contact <b>1304</b> connects to a bit line <b>1208</b> at a location that divides the respective bit line <b>1208</b> into a first portion and a second portion. For example, bit line contact <b>1304</b><i>a </i>connects to bit line <b>1208</b><i>a </i>at a location that divides bit line <b>1208</b><i>a </i>into a first portion <b>1314</b><i>a </i>and a second portion <b>1314</b><i>b</i>. In some embodiments, half of the word lines <b>1206</b> are located such that they cross the bit lines somewhere in the respective first portions and the other half of the word lines <b>1206</b> are located such that they cross the bit lines somewhere in the respective second portions. For example, word lines <b>1206</b><i>a</i>-<b>1206</b><i>d </i>cross the first portion <b>1314</b><i>a </i>of bit line <b>1208</b><i>a </i>whereas word lines <b>1206</b><i>e</i>-<b>1206</b><i>h </i>cross the second portion <b>1314</b><i>b </i>of bit line <b>1208</b><i>a</i>. In some embodiments, the bit line contacts <b>1304</b> at located at a midpoint of the respective bit lines <b>1208</b>. Thus, in some embodiments, the first and second portions of the respective bit lines <b>1208</b> are about the same length.</p><p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a flowchart of one embodiment of a process <b>1400</b> of concurrently accessing multiple memory cells in a cross-point array. In an embodiment, the memory cells are MRAM cells. In one embodiment, the process <b>1400</b> is performed to concurrently read multiple memory cells in a cross-point array. In one embodiment, the process <b>1400</b> is performed to concurrently write multiple memory cells in a cross-point array. In one embodiment, the process <b>1400</b> is performed by a control circuit in the memory die <b>292</b>. In one embodiment, the process <b>1400</b> is performed by a control circuit in the control die <b>590</b>. In one embodiment, the process <b>1400</b> is performed by a control circuit (e.g., host processor <b>122</b>) in the host <b>122</b>. Reference will be made to the cross-point array depicted on <figref idref="DRAWINGS">FIG. <b>13</b></figref> to discuss process <b>1400</b>; however, process <b>1400</b> is not limited to the array depicted in <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0130" num="0129">Step <b>1402</b> includes applying a select voltage to a selected second conductive line <b>1208</b>. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, V<sub>select </sub>is applied by voltage driver <b>1212</b><i>b </i>to second conductive line <b>1208</b><i>b</i>. Step <b>1402</b> may also include applying an unselect voltage to unselected second conductive lines <b>1208</b>. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, V<sub>unsel </sub>is applied by voltage driver <b>1212</b><i>a </i>to second conductive line <b>1208</b><i>a</i>, by voltage driver <b>1212</b><i>c </i>to second conductive line <b>1208</b><i>c</i>, and by voltage driver <b>1212</b><i>d </i>to second conductive line <b>1208</b><i>d</i>. In some embodiments, the second conductive lines are bit lines.</p><p id="p-0131" num="0130">Step <b>1404</b> includes driving an access current separately through each selected first conductive line <b>1206</b> to concurrently drive the access current separately through each selected memory cell. Note that the access current could flow in either direction through the first conductive line <b>1206</b>, depending on whether the access current is defined as having a positive or a negative magnitude. The access current is driven through the memory cells while the select voltage is applied to the selected second conductive line. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, I<sub>access </sub>is driven by current driver <b>1210</b><i>b </i>through selected first conductive line <b>1206</b><i>b </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>a</i>. At about the same time, I<sub>access </sub>is driven by current driver <b>1210</b><i>g </i>through selected first conductive line <b>1206</b><i>g </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>b</i>. Thus, I<sub>access </sub>is currently driven separately through multiple selected memory cells in the cross-point array.</p><p id="p-0132" num="0131">In one embodiment, the access current in step <b>1404</b> is used to concurrently read the memory cells. Hence, the access current may be referred to as a read current. In this case, process <b>1500</b> may further include sensing a voltage on each respective selected first conductive line <b>1206</b> in order to concurrently read each memory cell.</p><p id="p-0133" num="0132">In one embodiment, the access current in step <b>1404</b> is used to concurrently write the memory cells. Hence, the access current may be referred to as a write current. In one embodiment, the access current will change an MRAM cell from the P-state to the AP-state. Hence, multiple MRAM cells in the cross-point array may be concurrently programmed from the P-state to the AP-state. In one embodiment, the access current will change an MRAM cell from the AP-state to the P-state. Hence, multiple MRAM cells in the cross-point array may be concurrently programmed from the AP-state to the P-state. In some embodiments, the write operation is a two stage operation. In one embodiment, of an MRAM two stage write operation, a first stage places all selected memory cell into the AP-state. The second stage writes the appropriate MRAM cells from the AP-state to the P-state. Alternatively, the first stage could program to the P-state, and the second stage to the AP-state. As a further alternative, more than two WLs may be selected for the selected BL; thereby providing more than two bits per module. In one embodiment, four WLs are selected for the selected BL. In one embodiment, eight WLs are selected for the selected BL. Bandwidth may be increased by accessing more word lines per module, which may be facilitated by lowering the resistance of the tile wires through use of copper or by thickening or widening the tile wires.</p><p id="p-0134" num="0133">Process <b>1400</b> may be used to concurrently access multiple memory cells in a cross-point array. In one embodiment, process <b>1400</b> is used to concurrently access two memory cells in a cross-point array. In one embodiment, process <b>1400</b> is used to concurrently access more than two memory cells in a cross-point array. In one embodiment, process <b>1400</b> is used to concurrently access more than pairs of memory cells in a cross-point array, where one member of a pair (e.g., memory cell <b>701</b><i>a</i>) is on one side of a bit line driver and another member of the pair is on the other side of the bit line driver (e.g., memory cell <b>701</b><i>b</i>). A number of different strategies may be used to select which memory cells in the cross-point array are concurrently accessed. With reference again to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, in some embodiments, the selected memory cells are selected with respect to their locations relative to the bit line contact <b>1304</b>. In one embodiment of concurrent access, there is one selected bit line and one or more pairs of selected word lines. For purpose of illustration, some examples in which there is one selected bit line and one pair of selected word lines will be discussed. In one embodiment, the pair of selected word lines are chosen based on the distance from the bit line contact <b>1304</b> of the selected bit line to the point at which the selected word line crosses the selected bit line. In one embodiment, the distance from the bit line contact <b>1304</b> of the selected bit line to the aforementioned crossing point is about the same for both members of the pair of selected word lines. Stated another way, the two members of the pair of selected word lines are equidistant from the connection point of the bit line contact to the respective points at which each member crosses the selected bit line. Herein, &#x201c;equidistant&#x201d; means &#x201c;about the same distance.&#x201d; In one embodiment, the difference of distances is less than five percent. For example, with reference to <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the pair could include word lines <b>1206</b><i>b </i>and <b>1206</b><i>g</i>. Alternatively, the pair could include word lines <b>1206</b><i>d </i>and <b>1206</b><i>e</i>. This strategy results in about the same IR drop between where the bit line contact <b>1304</b> connects to the selected bit line and where the selected bit line will connect to each respective selected memory cell.</p><p id="p-0135" num="0134">A similar strategy to the aforementioned distance based example is based on the number of word lines between the selected word line and where the bit line contact <b>1304</b> connects to the selected bit line. In one embodiment, each member of the pair of word lines is &#x201c;n&#x201d; word lines away from the connection point at which the bit line contact <b>1304</b> connects to the selected bit line. For example, word lines <b>1206</b><i>b </i>and <b>1206</b><i>g </i>are each three word lines away from where the bit line contacts <b>1304</b> connect to the bit lines <b>1208</b> (this example counts the word lines <b>1206</b><i>b </i>and <b>1206</b><i>g </i>as one of the three word lines). Note that in some embodiments the word lines may be symmetrically spaced with respect to the location of the bit line contacts such that this strategy also leads to about the same IR drop between where the bit line contact <b>1304</b> connects to the selected bit line and where the selected bit line will connect to each respective selected memory cell.</p><p id="p-0136" num="0135">In another distance based embodiment, the locations of the selected word lines are chosen in order to keep about the same total distance between where the bit line contact <b>1304</b> connects to the selected bit line and where the respective selected word lines cross the selected bit line. This will be explained by way of an example. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the word line pairs may be word lines <b>1206</b><i>a </i>and <b>1206</b><i>e</i>; word lines <b>1206</b><i>b </i>and <b>1206</b><i>f</i>; word lines <b>1206</b><i>c </i>and <b>1206</b><i>f</i>; and word lines <b>1206</b><i>d </i>and <b>1206</b><i>h</i>. This strategy may reduce the probability of shorts between WL used in the same codeword for error correction. In some cases, the location of the selected memory cell (and hence the location of the selected word line) impacts the reliability of the data stored in the memory cell. As one example, it may be that data stored in memory cells along word line <b>1206</b><i>a </i>is less reliable than data stored in memory cells along word line <b>1206</b><i>d</i>. Likewise, it may be that data stored in memory cells along word line <b>1206</b><i>h </i>is less reliable than data stored in memory cells along word line <b>1206</b><i>e</i>. This strategy may read lower bit error rate cells concurrently with higher bit error rate cells. In some embodiments, both of these bits of data are part of the same ECC codeword. If, instead, a memory cell along word line <b>1206</b><i>a </i>and a memory cell along word line <b>1206</b><i>b </i>were read concurrently, then two higher error rate bits may be read together, which increases the chances that decoding the codeword would fail. However, by mixing higher with lower error rate bits, a codeword is less likely to fail the error correction process. Hence, this strategy may improve decoding errors of codewords stored in the memory cells.</p><p id="p-0137" num="0136">A similar strategy to the aforementioned total distance based example is based on the total number of word lines between the respective members of a pair of selected word lines and where the bit line contact <b>1304</b> connects to the selected bit line. In one embodiment, the total number of word lines is the same for each pair of selected word lines. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, if the word line pairs are word lines <b>1206</b><i>a </i>and <b>1206</b><i>e</i>, word lines <b>1206</b><i>b </i>and <b>1206</b><i>f</i>, word lines <b>1206</b><i>c </i>and <b>1206</b><i>f</i>, and word lines <b>1206</b><i>d </i>and <b>1206</b><i>h</i>, then in each case there are a total of three word lines between the respective members of the pair of selected word lines and where the bit line contact <b>1304</b> connects to the selected bit line (this example does not count the selected word lines as one of the word lines that are &#x201c;between&#x201d; the respective members of a pair of selected word lines and where the bit line contact <b>1304</b> connects to the selected bit line).</p><p id="p-0138" num="0137">In some embodiments, concurrent access of multiple memory cells in a cross-point array includes performing a self-referenced read (SRR). In one embodiment, a SRR read is used during a concurrent read of multiple memory cells in a cross-point array. In one embodiment, a SRR read is used during a concurrent write of multiple memory cells in a cross-point array. In one embodiment, the SRR read is used to concurrently place multiple MRAM cells into an AP-state.</p><p id="p-0139" num="0138"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart depicting one embodiment of a process <b>1500</b> of concurrently accessing multiple memory cells in a cross-point array that includes performing an SSR. The SRR may be referred to as a destructive SRR, which means that the original state of the memory cell may be changed during the SRR. In one embodiment, the process <b>1500</b> is performed to concurrently read multiple memory cells in a cross-point array. In one embodiment, the process <b>1500</b> is performed during a concurrent write of multiple memory cells in a cross-point array. In one embodiment, the process <b>1500</b> is performed by a control circuit in the memory die <b>292</b>. In one embodiment, the process <b>1500</b> is performed by a control circuit in the control die <b>590</b>. In one embodiment, the process <b>1500</b> is performed by a control circuit (e.g., host processor <b>122</b>) in the host <b>122</b>.</p><p id="p-0140" num="0139">Reference will be made to the cross-point array depicted on <figref idref="DRAWINGS">FIG. <b>13</b></figref> to discuss process <b>1500</b>; however, process <b>1500</b> is not limited to the array depicted in <figref idref="DRAWINGS">FIG. <b>13</b></figref>. In process <b>1500</b>, the memory cells are described as MRAM cells. However, the process <b>1500</b> may be used with other types of memory cells in cross-point arrays. Process <b>1500</b> will be discussed with reference to <figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref>. <figref idref="DRAWINGS">FIG. <b>16</b>A</figref> depicts current versus time for the access current that is driven through the selected word lines. <figref idref="DRAWINGS">FIG. <b>16</b>B</figref> depicts voltage versus time for the voltage across a selected MRAM cell.</p><p id="p-0141" num="0140">Step <b>1502</b> includes driving a first read current through each selected word line while applying a select voltage to a selected bit line in order to drive the first access current through each selected MRAM cell. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, I<sub>access </sub>is driven by current driver <b>1210</b><i>b </i>through selected first conductive line <b>1206</b><i>b </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>a </i>using a current of, for example, 15ua. At about the same time, I<sub>access </sub>is driven by current driver <b>1210</b><i>g </i>through selected first conductive line <b>1206</b><i>g </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>b</i>. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, V<sub>select </sub>is applied by voltage driver <b>1212</b><i>b </i>to second conductive line <b>1208</b><i>b</i>. In one embodiment, I<sub>access </sub>is 15 &#x3bc;A and V<sub>select </sub>is 0V.</p><p id="p-0142" num="0141"><figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> will now be discussed with respect to one MRAM cell <b>701</b> to further elaborate on step <b>1502</b>. With reference to <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>, the access current is increased to I<sub>read </sub>at time t<b>1</b> and is held at I<sub>read </sub>until t<b>3</b>. With reference to <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>, the voltage across the memory cell <b>701</b> increases from t<b>1</b> to t<b>2</b>. The threshold switching selector <b>1204</b> is off between t<b>1</b> and t<b>2</b>. Between t<b>1</b> and t<b>2</b>, the access current causes the word line voltage to increase. The access current also supports any leakage in the path. Once the voltage across threshold switching selector <b>1204</b> reaches the threshold voltage V<sub>th </sub>of the threshold switching selector <b>1204</b>, it will turn on and switch to a low resistance state (at t<b>2</b>). Thus, the voltage across the series combination of the threshold switching selector <b>1204</b> and the resistive MRAM element <b>1202</b> ramps up as the threshold switching selector is in an off state.</p><p id="p-0143" num="0142">Once the threshold switching selector <b>1204</b> is in the on state (at t<b>2</b>), the I<sub>read </sub>current will flow through the selected memory cell <b>701</b>. As the access current is held fixed at I<sub>read</sub>, the voltage across the memory cell will drop to a level dependent upon the series resistance of the MRAM element <b>1202</b> and the on-state resistance of the threshold switching selector <b>1204</b>. For a binary embodiment, the memory cell will have a high resistance, AP-state, and a low resistance, P-state. The resultant voltage across the series connected MRAM element <b>1202</b> and threshold switching selector <b>1204</b> in response to the I<sub>read </sub>current for the high resistance state (HRS) and low resistance state (LRS) are respectively shown as lines <b>1610</b> and <b>1612</b>. Although the discussion here is in the context of an MRAM based memory cell being placed in series with the threshold switching selector, this read technique can similarly be applied to other programmable resistance memory cells, such as PCM or ReRAM devices.</p><p id="p-0144" num="0143">Returning again to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, step <b>1504</b> includes driving a write current through each selected word line while applying a select voltage to the selected bit line to concurrently drive the write current through each selected MRAM cell. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, I<sub>access </sub>is driven by current driver <b>1210</b><i>b </i>through selected first conductive line <b>1206</b><i>b </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>a</i>. At about the same time, I<sub>access </sub>is driven by current driver <b>1210</b><i>g </i>through selected first conductive line <b>1206</b><i>g </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>b</i>. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, V<sub>select </sub>is applied by voltage driver <b>1212</b><i>b </i>to second conductive line <b>1208</b><i>b</i>. In one embodiment, I<sub>access </sub>to write is 30 &#x3bc;A and V<sub>select </sub>is 0V.</p><p id="p-0145" num="0144"><figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> will now be discussed with respect to one MRAM cell <b>701</b> to further elaborate on step <b>1504</b>. With reference to <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>, the access current is increased to I<sub>write </sub>at time t<b>3</b> and is held at I<sub>write </sub>until t<b>5</b>. With reference to <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>, at t<b>3</b> the voltage across the MRAM cell <b>701</b> increases at t<b>3</b>. If the MRAM cell <b>701</b> was in the HRS (line <b>1610</b>), then the voltage across the MRAM cell will increase to the level indicated by line <b>1620</b> at t<b>3</b> and stay there until t<b>5</b>. Recall that the HRS is the AP-state. Thus, this MRAM cell will stay in the AP-state.</p><p id="p-0146" num="0145">If the MRAM cell <b>701</b> was in the LRS (line <b>1612</b>), then the voltage across the MRAM cell will increase to the level indicated by line <b>1622</b> at t<b>3</b>. Recall that the LRS is the P-state. If the MRAM cell <b>701</b> was in the P-state, it will switch to the AP-state. <figref idref="DRAWINGS">FIG. <b>16</b>B</figref> shows line <b>1622</b> increases at t<b>4</b> to meet with line <b>1620</b>. This represents the MRAM cell has switched from the P-state (LRS) to the AP-state (HRS).</p><p id="p-0147" num="0146">Returning again to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, step <b>1506</b> includes driving a second read current through each selected word line while applying a select voltage to the selected bit line in order to drive the second access current through each selected MRAM cell. In one embodiment, the second access current has the same direction and substantially the same magnitude as the first access current. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, I<sub>access </sub>is driven by current driver <b>1210</b><i>b </i>through selected first conductive line <b>1206</b><i>b </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>a</i>. At about the same time, I<sub>access </sub>is driven by current driver <b>1210</b><i>g </i>through selected first conductive line <b>1206</b><i>g </i>to drive I<sub>access </sub>through memory cell <b>701</b><i>b</i>. With reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, V<sub>select </sub>is applied by voltage driver <b>1212</b><i>b </i>to second conductive line <b>1208</b><i>b</i>. In one embodiment, I<sub>access </sub>is 15 &#x3bc;A and V<sub>select </sub>is 0V.</p><p id="p-0148" num="0147"><figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> will now be discussed with respect to one MRAM cell <b>701</b> to further elaborate on step <b>1506</b>. With reference to <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>, the access current is decreased from I<sub>write </sub>to I<sub>read </sub>at time t<b>5</b> and is held at I<sub>read </sub>until t<b>6</b>. With reference to <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>, the voltage across the memory cell <b>701</b> decreases at t<b>5</b> to the level indicated by <b>1630</b> and holds at that level until t<b>6</b>. Note that line <b>1630</b> is at the HRS level. Also recall that regardless of the initial state of the MRAM cell, the MRAM cell was placed into the HRS state (AP-state) in step <b>1504</b>.</p><p id="p-0149" num="0148">Returning again to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, step <b>1508</b> includes determining a pre-read state of each selected MRAM cell based on a comparison of a first voltage on each selected word line from driving the first read current through the selected word line to a second voltage on each selected word line from driving the second read current through the selected word line.</p><p id="p-0150" num="0149"><figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> will now be discussed with respect to one MRAM cell <b>701</b> to further elaborate on step <b>1508</b>. The first voltage on the selected word line from applying the first read current will be the voltage between t<b>2</b> and t<b>3</b>. Hence, the first voltage is either the HRS level <b>1610</b> or the LRS level <b>1612</b>. Note that this first voltage may be stored in step <b>1504</b> by, for example, charging a sense capacitor using the word line voltage. The second voltage on the selected word line from applying the second read current will be the voltage between t<b>5</b> and t<b>6</b>. This second voltage will typically be at about the HRS level <b>1610</b>. However, the second voltage could be slightly different from the HRS level <b>1610</b>. Comparing the first voltage with the second voltage may thus be used to determine whether the MRAM cell was at the HRS level <b>1610</b> or the LRS level <b>1612</b> between t<b>2</b> and t<b>3</b>. To facilitate comparison, the level generated by the Read1 current to AP is stored and bumped positive by about half the voltage difference between HRS and LRS. Alternatively, the level may be bumped negative if Read1 current is to P. These choices may be reversed depending on MRAM cell orientation as will be apparent to one reasonably skilled in the art.</p><p id="p-0151" num="0150">Returning again to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, after step <b>1508</b> the process <b>1500</b> has two options. Step <b>1510</b><i>a </i>is a read option. Step <b>1510</b><i>a </i>includes driving a write current through selected word lines <b>1206</b> to write back the original state of the memory cell, if needed. Recall that step <b>1504</b> placed all MRAM cells in the AP-state. Hence, all MRAM cells that were originally in the P-state are written back to the P-state, in step <b>1510</b><i>a</i>. All MRAM cells that were originally in the AP-state are left in the AP-state, in step <b>1510</b><i>a. </i></p><p id="p-0152" num="0151">Step <b>1510</b><i>b </i>is a write option. Step <b>1510</b><i>b </i>includes driving a write current through selected word lines <b>1206</b> to write the new state of the memory cell, if needed. As noted, step <b>1504</b> placed all MRAM cells in the AP-state. Hence, all MRAM cells that are to be written to the P-state, regardless of their original state, are written to the P-state, in step <b>1510</b><i>b</i>. All MRAM cells that are to be written to the AP-state are left in the AP-state, in step <b>1510</b><i>b. </i></p><p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. <b>17</b></figref> depicts a flowchart of a process <b>1700</b> for writing back data to MRAM cells after a destructive SRR. Process <b>1700</b> provides further details for one embodiment of step <b>1510</b><i>a</i>. Step <b>1702</b> includes performing ECC on data that was read from the MRAM cells. Process <b>1500</b> may concurrently read multiple bits of a codeword from a single cross-point array. In some cases, other bits of the codeword are stored in other cross-point arrays. In one embodiment, system control logic <b>560</b> on either memory die <b>292</b> or control die <b>590</b> reads multiple cross-point arrays in order to obtain all of the bits of the codeword. In one embodiment, system control logic <b>560</b> sends the bits of the codeword to the memory controller <b>102</b>, which decodes the codeword. In some embodiments, the control die <b>590</b> decodes the codeword. Regardless of where the decoding is performed, any errors in the data are corrected.</p><p id="p-0154" num="0153">Step <b>1704</b> includes identifying a set of the MRAM cells that were in the P-state prior to the destructive SRR. In one embodiment, step <b>1704</b> is performed by system control logic <b>560</b> on either memory die <b>292</b> or control die <b>590</b>. This identification may be made based on results of step <b>1508</b> of process <b>1500</b>.</p><p id="p-0155" num="0154">Step <b>1706</b> includes applying a select voltage to the selected bit line. Step <b>1708</b> includes driving a write current through word lines connected to the identified set of MRAM cells. In one embodiment, I<sub>access </sub>is &#x2212;30 &#x3bc;A and V<sub>select </sub>is 0V. In step <b>1708</b>, the current flows through the MRAM cells in the opposite direction as the current flowed in step <b>1504</b> of process <b>1500</b>. Thus, whereas step <b>1504</b> was used to place MRAM cells into the AP-state, step <b>1708</b> is used to place MRAM cells into the P-state.</p><p id="p-0156" num="0155"><figref idref="DRAWINGS">FIG. <b>18</b></figref> depicts a flowchart of a process <b>1800</b> of a second stage of writing data to MRAM cells. Process <b>1800</b> provides further details for one embodiment of step <b>1510</b><i>b</i>. Step <b>1802</b> includes identifying a set of the MRAM cells that are to be programmed to the P-state after the destructive SRR. In one embodiment, step <b>1802</b> is performed by system control logic <b>560</b> on either memory die <b>292</b> or control die <b>590</b>. This identification may be made based on data that is sent to the system control logic <b>560</b> by the memory controller <b>102</b>. For example, the system control logic <b>560</b> may determine that MRAM cells to store a &#x201c;0&#x201d; are to be programmed to the AP-state and that memory cells to store a &#x201c;1&#x201d; are to be programmed to the P-state.</p><p id="p-0157" num="0156">Step <b>1804</b> includes applying a select voltage to the selected bit line. Step <b>1806</b> includes driving a write current through word lines connected to the identified set of MRAM cells. In one embodiment, I<sub>access </sub>is &#x2212;30 &#x3bc;A and V<sub>select </sub>is 0V. In step <b>1806</b>, the current flows through the MRAM cells in the opposite direction as the current flowed in step <b>1504</b> of process <b>1500</b>. Thus, whereas step <b>1504</b> was used to place MRAM cells into the AP-state, step <b>1806</b> is used to place MRAM cells into the P-state.</p><p id="p-0158" num="0157"><figref idref="DRAWINGS">FIGS. <b>19</b>A and <b>19</b>B</figref> depict timing diagrams used during a write of MRAM cells. The timing diagrams can be applied to either process <b>1700</b> or <b>1800</b>. <figref idref="DRAWINGS">FIG. <b>19</b>A</figref> depicts current versus time for the current that is driven through a selected word line. <figref idref="DRAWINGS">FIG. <b>19</b>B</figref> depicts voltage across the MRAM cell versus time. The timing diagrams are similar to those of <figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> and, in some embodiments, represent the timing that follows the timing diagrams for the SRR. Thus, for <figref idref="DRAWINGS">FIGS. <b>19</b>A and <b>19</b>B</figref> is assumed that the MRAM cell is in the AP-state at time t<b>1</b>. At time t<b>1</b>, the current provided to the selected word line drops from OA to the I<sub>write </sub>level. In <figref idref="DRAWINGS">FIG. <b>19</b>A</figref>, I<sub>write </sub>is represented as a negative value. For example, whereas I<sub>write </sub>may be 30 &#x3bc;A in <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>, I<sub>write </sub>may be &#x2212;30 &#x3bc;A in <figref idref="DRAWINGS">FIG. <b>19</b>A</figref>. The access current is held at I<sub>write </sub>from t<b>1</b> until t<b>5</b>. Note that, as defined herein, this negative magnitude access current may flow from the selected word line <b>1206</b> to the current driver <b>1210</b>. In other words, the current driver <b>1210</b> sinks the access current in the example of <figref idref="DRAWINGS">FIG. <b>19</b>A</figref>. As defined herein, this is an example of driving a negative current through the word line.</p><p id="p-0159" num="0158">With reference to <figref idref="DRAWINGS">FIG. <b>19</b>B</figref>, between t<b>1</b> and t<b>3</b>, the voltage across the MRAM drops from 0V to V<sub>ss</sub>. The threshold switching selector <b>1204</b> is off between t<b>1</b> and t<b>2</b>. Once the voltage across threshold switching selector <b>1204</b> reaches the threshold voltage V<sub>th </sub>of the threshold switching selector <b>1204</b>, it will turn on and switch to a low resistance state (at t<b>2</b>). After the threshold switching selector <b>1204</b> turns on the voltage across the MRAM cell may continue to decrease. By time t<b>3</b>, the voltage across the MRAM cell is at a steady state value (V<sub>ss</sub>). Also, after time t<b>2</b>, all of I<sub>write </sub>passes through the MRAM cell. At time t<b>4</b> the MRAM cell switched from the AP-state to the P-state. Because the P-state is a lower resistance state than the AP-state, the absolute magnitude of the voltage across the MRAM cell drops at t<b>4</b>. In other words, the voltage across the MRAM cell moves closer to 0V at t<b>4</b>.</p><p id="p-0160" num="0159">In one embodiment, MRAM cells in a cross-point array are concurrently written by first concurrently writing all selected MRAM cells in the cross-point array to the AP-state. Then, a set of the selected MRAM cells are concurrently written from the AP-state to the P-state. This technique can be modified to first concurrently write all selected MRAM cells in the cross-point array to the P-state. Then, a set of the selected MRAM cells are concurrently written from the P-state to the AP-state.</p><p id="p-0161" num="0160"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a flowchart of a process <b>2000</b> of concurrently writing MRAM cells in which all selected MRAM cells are first written to one of the AP-state or the P-state. In one embodiment, the process <b>2000</b> is performed by a control circuit in the memory die <b>292</b>. In one embodiment, the process <b>2000</b> is performed by a control circuit in the control die <b>590</b>. In one embodiment, the process <b>2000</b> is performed by a control circuit (e.g., host processor <b>122</b>) in the host <b>120</b>.</p><p id="p-0162" num="0161">Step <b>2002</b> includes receiving, on a communication interface <b>568</b>, data to be stored in the non-volatile storage device. In one embodiment, the memory die <b>292</b> receives the data from the memory controller <b>102</b>. In one embodiment, the control die <b>590</b> receives the data from the memory controller <b>102</b>.</p><p id="p-0163" num="0162">Step <b>2004</b> includes identifying a first set of MRAM cells <b>701</b> in the cross-point array to store a first bit value and a second set of MRAM cells <b>701</b> in the cross-point array to store a second bit value in order to store the data. The first set of MRAM cells <b>701</b> and the second set of MRAM cells <b>701</b> represent all selected MRAM cells <b>701</b> in the cross-point array. In one embodiment, the first bit value is a &#x201c;1&#x201d; and the second bit value is a &#x201c;0&#x201d;. In one embodiment, the first bit value is represented by the AP-state and the second bit value is represented by the P-state. Thus, a &#x201c;1&#x201d; may be represented by the AP-state and a &#x201c;0&#x201d; may be represented by the P-state; however, this mapping can be reversed.</p><p id="p-0164" num="0163">Step <b>2006</b> includes placing all MRAM cells <b>701</b> in first and second sets into one of the AP-state or the P-state. Thus, either all selected MRAM cells <b>701</b> in the cross-point array are placed into one of the AP-state or the P-state. By this it is meant that either all selected MRAM cells <b>701</b> in the cross-point array are placed into the AP-state or, alternatively, all selected MRAM cells <b>701</b> in the cross-point array are placed into the P-state. In one embodiment, step <b>2006</b> includes performing at least a portion of an SRR. For example, step <b>2006</b> may include performing at least steps <b>1502</b>-<b>1504</b> of process <b>1500</b>. In one embodiment, steps <b>1502</b>-<b>1506</b> are performed. In one embodiment, steps <b>1502</b>-<b>1508</b> are performed.</p><p id="p-0165" num="0164">Step <b>2008</b> includes concurrently placing the first set of MRAM cells to the other of the AP-state or the P-state while leaving the second set MRAM cells in the one of the AP-state or the P-state. In one embodiment, the first set of MRAM cells has two of more cells, and the second set of MRAM cells has zero or more cells. In one embodiment, the first set of MRAM cells has zero of more cells, and the second set of MRAM cells has two or more cells. In one embodiment, the first set of MRAM cells has one of more cells, and the second set of MRAM cells has one or more cells.</p><p id="p-0166" num="0165">The following two examples will be used to expand on steps <b>2006</b> to <b>2008</b>. As one example, both the first and second sets of MRAM cells <b>701</b> in the cross-point array are placed into the AP-state in step <b>2006</b>. In step <b>2008</b> of the first example, the first set of MRAM cells are written from the AP-state to the P-state, while leaving the second set of MRAM cells in the AP-state. As a second example, both the first and second sets of MRAM cells <b>701</b> in the cross-point array are placed into the P-state in step <b>2006</b>. In step <b>2008</b> of the second example, the first set of MRAM cells are written from the P-state to the AP-state, while leaving the second set of MRAM cells in the P-state.</p><p id="p-0167" num="0166">In some embodiments, concurrent access of MRAM cells is implemented in a cross-point array used in DRAM/ReRAM/MRAM <b>106</b>. In some embodiments, MRAM operations can be mapped to DRAM commands. In particular, MRAM operations of concurrent read or concurrent write in a cross-point array can be mapped to DRAM commands.</p><p id="p-0168" num="0167"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a state diagram representing DRAM commands, showing how MRAM operations can be mapped to DRAM commands. DRAM command sequences are depicted by solid arrows. DRAM automatic sequences are depicted by dashed arrows. The diagram is somewhat simplified by omitting actions such as ZQ calibration and power downs. A mapping between MRAM operations and the DRAM commands is represented by ovals <b>2102</b>, <b>2104</b>, <b>2106</b>, and <b>2108</b>.</p><p id="p-0169" num="0168">Oval <b>2102</b> is a DRAM activate. In one embodiment, the oval <b>2102</b> corresponds to at least a portion of an SRR. Note that this could be an SRR in an MRAM read operation or an SRR in an MRAM write operation, as discussed herein. With reference to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, oval <b>2102</b> may correspond to steps <b>1502</b>-<b>1508</b>. If this is a read operation, ECC may be performed on the data (see step <b>1702</b> in process <b>1700</b>). In one embodiment, the MRAM read or write places all selected memory cells into the AP-state. In one embodiment, the current applied to the selected word line(s) is as depicted in <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>. In one embodiment, the voltage that appears across the selected MRAM cell(s) is as depicted in <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>.</p><p id="p-0170" num="0169">Oval <b>2104</b> is a DRAM read. In one embodiment, this corresponds to MRAM operations of sending the ECC corrected data from the memory controller <b>102</b> to either the memory die <b>292</b> or control die <b>590</b>.</p><p id="p-0171" num="0170">Oval <b>2106</b> is a DRAM write. In one embodiment, this corresponds to MRAM operations of either the memory die <b>292</b> or control die <b>590</b> reading in data that was sent from the memory controller <b>102</b>.</p><p id="p-0172" num="0171">Oval <b>2108</b> is a DRAM pre-charge. This may correspond to either an MRAM read operation or an MRAM write operation. If this is an MRAM read operation, this may correspond to the write back (see step <b>1510</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). If this is an MRAM write operation, this may correspond to the write (see step <b>1510</b><i>b </i>in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). In one embodiment, the MRAM read or write (corresponding to the DRAM pre-charge) operates only on memory cells that need to be in the P-state. Note that there is no need to perform any P-state to AP-state writing at this stage, as the MRAM cells were placed into the AP-state in the DRAM activate discussed above (oval <b>2102</b>). In one embodiment, the current applied to the selected word line(s) is as depicted in <figref idref="DRAWINGS">FIG. <b>19</b>A</figref>. In one embodiment, the voltage that appears across the selected MRAM cell(s) is as depicted in <figref idref="DRAWINGS">FIG. <b>19</b>B</figref>.</p><p id="p-0173" num="0172">According to a first aspect, an apparatus comprises a control circuit configured to connect to a cross-point array. The cross-point array comprises a plurality of first conductive lines, a plurality of second conductive lines, and a plurality of non-volatile memory cells each connected between one of the first conductive lines and a corresponding one of the second conductive lines. The control circuit is configured to concurrently access selected memory cells in the cross-point array. Each selected memory cell is connected between a selected second conductive line and a different selected first conductive line. Concurrently accessing the selected memory cells comprises the control circuit applying a select voltage to the selected second conductive line, and while the select voltage is applied to the selected second conductive line, driving an access current separately through each selected first conductive line to concurrently drive the access current separately through each selected memory cell.</p><p id="p-0174" num="0173">In a second aspect, and in furtherance of the first aspect, the memory cells each comprise a magnetoresistive random access memory (MRAM) element.</p><p id="p-0175" num="0174">In a third aspect, and in furtherance of the second aspect, the apparatus further comprises the further comprises the cross-point array. Each respective memory cell further comprises a threshold switching selector configured to become conductive in response to application of a voltage level exceeding a threshold voltage of the threshold switching selector, the threshold switching selector connected in series with the MRAM element of the respective memory cell. The control circuit is further configured to drive the access current through each selected first conductive line to turn on the threshold switching selector in each respective selected memory cell to thereby concurrently drive the access current through the MRAM element in each respective selected memory cell.</p><p id="p-0176" num="0175">In a fourth aspect, and in furtherance of the second or third aspects, the control circuit concurrently accessing the selected memory cells in the cross-point array comprises the control circuit performing a concurrent write by: identifying a set of the selected memory cells to be programmed to one of an anti-parallel state or a parallel state; performing a destructive self-referenced read that concurrently places the MRAM element in all selected memory cells into the other of the anti-parallel state or the parallel state; and concurrently placing the MRAM element in the identified set of the selected memory cells to the one of the anti-parallel state or the parallel state after performing the destructive self-referenced read.</p><p id="p-0177" num="0176">In a fifth aspect, and in furtherance of the any of the second to fourth aspects, the control circuit concurrently accessing the selected memory cells in the cross-point array comprises the control circuit performing a concurrent read by: performing a destructive self-referenced read that concurrently places the MRAM element in all selected memory cells into one of an anti-parallel state or a parallel state; identifying a set of the selected memory cells that were in the other of the anti-parallel state or the parallel state prior to the destructive self-referenced read; and concurrently placing the MRAM element in the set of the selected memory cells to the other of the anti-parallel state or the parallel state after performing the destructive self-referenced read.</p><p id="p-0178" num="0177">In a sixth aspect, and in furtherance of the any of the first to fifth aspects, the apparatus further comprises the further comprises the cross-point array and a voltage driver connected to the selected second conductive line by a contact that is located at a connection point that divides the selected second conductive line into a first portion and a second portion. The voltage driver is configured to provide the select voltage to the selected second conductive line, the plurality of first conductive lines having a first set of first conductive lines that cross the first portion of the selected second conductive line and a second set of first conductive lines that cross the second portion of the selected second conductive line. The first conductive lines include one or more pairs of first conductive lines each having a first member that crosses the first portion of the selected second conductive line and a second member that crosses the second portion of the selected second conductive line.</p><p id="p-0179" num="0178">In a seventh aspect, and in furtherance of the sixth aspect, a first number of the first conductive lines cross the first portion of the selected second conductive line and a second number of the first conductive lines cross the second portion of the selected second conductive line, the first number is equal to the second number. The first member of each pair of first conductive lines is &#x201c;n&#x201d; word lines away from the connection point and the second member of each pair of first conductive lines is &#x201c;n&#x201d; word lines away from the connection point.</p><p id="p-0180" num="0179">In an eighth aspect, and in furtherance of the sixth aspect, the first member and the second member of each of the one or more pairs of the first conductive lines are equidistant from the connection point to respective points at which the first member and the second member cross the selected second conductive line.</p><p id="p-0181" num="0180">In a ninth aspect, and in furtherance of the sixth aspect, the apparatus further comprises a communication configured to receive requests from a memory controller to access the cross-point array. The control circuit is further configured to select other pairs of the first conductive lines in response to the requests received on the communication interface, each other pair of the first conductive lines are connected to memory cells to be concurrently accessed in response to one of the requests. The control circuit is further configured to select the pair for each request such that a sum of a first distance from the connection point to a first point at which the first member crosses the selected second conductive line and a second distance from the connection point to a second point at which the second member crosses the selected second conductive line is substantially the same for all of the other pairs of the first conductive lines.</p><p id="p-0182" num="0181">In a tenth aspect, and in furtherance of any of the first to ninth aspects, the plurality of second conductive lines comprise bit lines. The plurality of first conductive lines comprise a first set of word lines in a first layer of the cross-point array and a second set of word lines in a second layer of the cross-point array, wherein the selected first conductive lines comprise a first word line in the first layer and a second word line in the second layer.</p><p id="p-0183" num="0182">In additional aspects, a method of multi-bit access of magnetoresistive random access memory (MRAM) cells in a cross-point array comprises driving a first read current through each of selected word lines in the cross-point array while applying a first select voltage to a selected bit line in the cross-point array to concurrently and separately drive the first read current through a plurality of selected MRAM cells. Each selected MRAM cell resides between the selected bit line and a corresponding one of the selected word lines. The method comprises driving a write current separately through each selected word line while applying a second select voltage to the selected bit line to concurrently and separately drive the write current through the plurality of selected MRAM cells to place each selected MRAM cell into one of an anti-parallel state or a parallel state. The method comprises driving a second read current through each selected word line while applying the first select voltage to the selected bit line to concurrently and separately drive the second read current through the plurality of selected MRAM cells. The method comprises determining a pre-read state of each selected MRAM cell based on a comparison of a first voltage on each selected word line that results from driving the first read current through each selected MRAM cell to a second voltage on each selected word line that results from driving the second read current through each selected MRAM cell.</p><p id="p-0184" num="0183">In another set of aspects, a memory system comprises a communication interface, a cross-point array, and a control circuit coupled to the communication interface and the cross-point array. The cross-point array comprises a plurality of word lines, a plurality of bit lines, and a plurality of magnetoresistive random access memory (MRAM) cells. Each MRAM cell resides between a cross-point of one of the plurality word lines and a corresponding one of the plurality of bit lines. The control circuit is configured to receive, on the communication interface, data to be stored in the memory system. The control circuit is configured to identify a first set of two or more the MRAM cells to store a first bit value and a second set of zero or more of the MRAM cells to store a second bit value in order to store at least a portion of the data. The control circuit is configured to concurrently place both the first set of the MRAM cells and the second set of the MRAM cells into one of an anti-parallel state or a parallel state. The control circuit is configured to concurrently place the first set of the MRAM cells to the other of the anti-parallel state or the parallel state while leaving the second set of the MRAM cells in the one of the anti-parallel state or the parallel state.</p><p id="p-0185" num="0184">For purposes of this document, reference in the specification to &#x201c;an embodiment,&#x201d; &#x201c;one embodiment,&#x201d; &#x201c;some embodiments,&#x201d; or &#x201c;another embodiment&#x201d; may be used to describe different embodiments or the same embodiment.</p><p id="p-0186" num="0185">For purposes of this document, a connection may be a direct connection or an indirect connection (e.g., via one or more other parts). In some cases, when an element is referred to as being connected or coupled to another element, the element may be directly connected to the other element or indirectly connected to the other element via intervening elements. When an element is referred to as being directly connected to another element, then there are no intervening elements between the element and the other element. Two devices are &#x201c;in communication&#x201d; if they are directly or indirectly connected so that they can communicate electronic signals between them.</p><p id="p-0187" num="0186">For purposes of this document, the term &#x201c;based on&#x201d; may be read as &#x201c;based at least in part on.&#x201d;</p><p id="p-0188" num="0187">For purposes of this document, without additional context, use of numerical terms such as a &#x201c;first&#x201d; object, a &#x201c;second&#x201d; object, and a &#x201c;third&#x201d; object may not imply an ordering of objects, but may instead be used for identification purposes to identify different objects.</p><p id="p-0189" num="0188">The foregoing detailed description has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. The described embodiments were chosen in order to best explain the principles of the proposed technology and its practical application, to thereby enable others skilled in the art to best utilize it in various embodiments and with various modifications as are suited to the particular use contemplated. It is intended that the scope be defined by the claims appended hereto.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus, comprising:<claim-text>a cross-point array comprising a plurality of first conductive lines, a plurality of second conductive lines, and a plurality of programmable resistance memory cells each connected at a cross-point junction between one of the first conductive lines and a corresponding one of the second conductive lines; and</claim-text><claim-text>one or more control circuits in communication with the cross-point array, wherein the the one or more control circuits are configured to concurrently force access currents separately through selected programmable resistance memory cells to perform a self-referenced read.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the self-referenced read is a destructive self-referenced read.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each programmable resistance memory cell comprises a magnetic tunnel junction (MTJ) comprising a free magnetic layer and a reference magnetic layer.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein each programmable resistance memory cell further comprises a threshold switching selector in series with the MTJ, wherein the threshold switching selector is configured to become conductive in response to application of a voltage level exceeding a threshold voltage of the threshold switching selector.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein each programmable resistance memory cell further comprises an Ovonic Threshold Switch (OTS) in series with the MTJ.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a plurality of current drivers, wherein the control circuit is further configured to control the plurality of current drivers to concurrently force access currents separately through the selected programmable resistance memory cells to perform the self-referenced read.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>each programmable resistance memory cell comprises a magnetoresistive random access memory (MRAM) element;</claim-text><claim-text>the access currents comprise first read currents and second read currents; and</claim-text><claim-text>the one or more control circuits are configured to compare a first voltage across each respective selected programmable resistance memory cell that results from the first read currents with a second voltage across each respective selected programmable resistance memory cell that results from the second read currents to determine a state of the MRAM element in each respective selected programmable resistance memory cell.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the self-referenced read comprises a first read, a write, and a second read; and</claim-text><claim-text>the access currents comprise concurrent first read currents for the first read, concurrent write currents for the write, and concurrent second read currents for the second read.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:<claim-text>each programmable resistance memory cell comprises a magnetic tunnel junction (MTJ) comprising a free magnetic layer and a reference magnetic layer;</claim-text><claim-text>the first read currents are concurrently applied in an anti-parallel-to-parallel (AP2P) direction;</claim-text><claim-text>the write currents concurrently write the MTJs to a parallel state (P-state); and</claim-text><claim-text>the second read currents are concurrently applied in the AP2P direction.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:<claim-text>each programmable resistance memory cell comprises a magnetic tunnel junction (MTJ) comprising a free magnetic layer and a reference magnetic layer;</claim-text><claim-text>the first read currents are concurrently applied in a parallel-to-anti-parallel (P2AP) direction;</claim-text><claim-text>the write currents concurrently write the MTJs to an anti-parallel state (AP-state); and</claim-text><claim-text>the second read currents are concurrently applied in the P2AP direction.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the selected programmable resistance memory cells are each connected to a same selected first conductive line and a different selected second conductive line.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the one or more control circuits are further configured to:<claim-text>apply a select voltage to the selected first conductive line; and</claim-text><claim-text>apply the access currents separately to the different selected second conductive lines while the select voltage is applied to the selected first conductive line to concurrently force the access currents separately through the selected programmable resistance memory cells to perform the self-referenced read.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein:<claim-text>each respective programmable resistance memory cell comprises magnetic tunnel junction (MTJ) in series with a threshold switching selector, wherein the threshold switching selector is configured to become conductive in response to application of a voltage level exceeding a threshold voltage of the threshold switching selector; and</claim-text><claim-text>the one or more control circuits are further configured to concurrently drive the access currents separately through each selected second conductive line while the select voltage is applied to the selected first conductive line to turn on the threshold switching selector in each respective selected programmable resistance memory cell to thereby concurrently drive the access currents separately through the MTJ in each respective selected programmable resistance memory cell.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a first semiconductor die that comprises the cross-point array; and</claim-text><claim-text>a second semiconductor die affixed to the first semiconductor die, wherein the second semiconductor die comprises the one or more control circuits.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a semiconductor die that comprises the cross-point array and the one or more control circuits.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A method of multi-bit read of memory cells in a cross-point array, comprising:<claim-text>driving first read currents separately and concurrently through each respective memory cell selected to be read, each memory cell having a magnetic tunnel junction (MTJ) comprising a free magnetic layer and a reference magnetic layer, wherein each selected memory cell resides between a same selected bit line and a corresponding different selected word line;</claim-text><claim-text>driving write currents separately and concurrently through each respective selected memory cell to place each selected MTJ into one of an anti-parallel state or a parallel state;</claim-text><claim-text>driving second read currents separately and concurrently through each respective selected memory cell; and</claim-text><claim-text>determining a pre-read state of each selected memory cell based on a comparison of a first voltage across each respective selected memory cell that results from driving the first read currents separately through each respective selected memory cell to a second voltage on across each respective selected memory cell that results from driving the second read currents separately through each respective selected memory cell.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A memory system, comprising:<claim-text>a cross-point array comprising a plurality of word lines, a plurality of bit lines, and a plurality of magnetoresistive random access memory (MRAM) cells, wherein each MRAM cell resides between a cross-point of one of the plurality of word lines and a corresponding one of the plurality of bit lines, wherein each MRAM cell comprises a magnetic tunnel junction (MTJ) in series with a threshold switching selector; and</claim-text><claim-text>a control circuit in communication with the cross-point array, wherein the control circuit is configured to:<claim-text>drive first fixed magnitude read currents concurrently and separately through each of a plurality of selected MRAM cells;</claim-text><claim-text>drive fixed magnitude write currents concurrently and separately through each of the plurality of selected MRAM cells after driving the first fixed magnitude read currents separately through each of the plurality of selected MRAM cells;</claim-text><claim-text>drive second fixed magnitude read currents concurrently and separately through each of the plurality of selected MRAM cells after driving the fixed magnitude write currents separately through each of the plurality of selected MRAM cells; and</claim-text><claim-text>determine a state of each of the selected MRAM cells based on a comparison of respective first voltages across each respective selected MRAM cell in response to the first fixed magnitude read currents and respective second voltages across each respective selected MRAM cell in response to the second fixed magnitude read currents.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The memory system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the control circuit is configured to:<claim-text>determine which of the selected MRAM cells incurred a change of magnetic state due to the write current; and</claim-text><claim-text>drive a write-back current through any selected MRAM cell that incurred the change of magnetic state to thereby write the selected MRAM cell back to its original magnetic state.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The memory system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein:<claim-text>the write-back current has an opposite polarity as the write current that changed the magnetic state of the selected MRAM cell; and</claim-text><claim-text>the first fixed magnitude read currents and the second fixed magnitude read currents have the same polarity.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The memory system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein each threshold switching selector comprises an Ovonic Threshold Switch (OTS).</claim-text></claim></claims></us-patent-application>