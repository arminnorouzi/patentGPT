<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004929A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004929</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943924</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20120101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20120101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>30</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20120101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>087</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>0832</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>30</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>0833</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>203</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>0836</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>0838</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>0835</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">LOAD TRACKING COMPUTING PLATFORM AND USER INTERFACE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16696577</doc-number><date>20191126</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11455594</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943924</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Target Brands, Inc.</orgname><address><city>Minneapolis</city><state>MN</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Helvie</last-name><first-name>Eric Christopher</first-name><address><city>Eagan</city><state>MN</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Hollenbeck</last-name><first-name>Adam Lee</first-name><address><city>Blaine</city><state>MN</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Rockers</last-name><first-name>Justine</first-name><address><city>Minneapolis</city><state>MN</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Young</last-name><first-name>Thomas</first-name><address><city>Minneapolis</city><state>MN</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Target Brands, Inc.</orgname><role>02</role><address><city>Minneapolis</city><state>MN</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The systems and methods described herein relate to managing transportation of loads of items within a retail supply chain. A unified load tracking system aggregates information from multiple supply chain computing systems for presentation on a user interface accessible by multiple users. One user interface provide access to a multitude of information that is interconnected by a common, unique identifier for each movement of a load between an origin and destination. A load board is also provided which automates the spot market auction process and load tender process between carriers and a retail enterprise transportation management system.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="187.37mm" wi="158.75mm" file="US20230004929A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="227.41mm" wi="162.56mm" orientation="landscape" file="US20230004929A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="221.32mm" wi="154.77mm" orientation="landscape" file="US20230004929A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="211.84mm" wi="160.78mm" file="US20230004929A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="225.30mm" wi="158.92mm" orientation="landscape" file="US20230004929A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="177.63mm" wi="98.55mm" file="US20230004929A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="167.30mm" wi="99.31mm" file="US20230004929A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="201.68mm" wi="92.54mm" file="US20230004929A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="243.59mm" wi="91.78mm" file="US20230004929A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="231.14mm" wi="162.31mm" orientation="landscape" file="US20230004929A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="223.10mm" wi="122.94mm" orientation="landscape" file="US20230004929A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="226.23mm" wi="79.33mm" orientation="landscape" file="US20230004929A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="220.81mm" wi="163.58mm" orientation="landscape" file="US20230004929A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="226.91mm" wi="119.30mm" orientation="landscape" file="US20230004929A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="220.73mm" wi="114.05mm" orientation="landscape" file="US20230004929A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 16/696,577, filed Nov. 26, 2019, entitled &#x201c;LOAD TRACKING COMPUTING PLATFORM AND USER INTERFACE,&#x201d; which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure is directed to methods and systems for tracking loads of items within a supply chain. More particularly, the present disclosure describes a load tracking computing platform for tracking freight shipments within a supply chain and aggregating information from multiple supply chain management systems using one user interface.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Managing movement of items within a supply chain for a large enterprise requires the use of multiple software tools. Different computing systems handle operations for transportation, inventory, and warehouse management. Each system requires a different login and utilizes a different user interface to access information. Additionally, each system uses different identifiers to track items, trailers, and loads. In order to accurately determine the status of various shipments of items, multiple applications are often required to be accessed and/or carriers are required to be contacted manually.</p><p id="p-0005" num="0004">Still further, although enterprises often have contracts with carriers on particular shipping lanes, those carriers may not have capacity to take on a given load, or may be unwilling to take on a given load based on then-current prices for the load. In such circumstances, some software applications exist that allow organizations to present a load board at which carriers may bid on loads. Such bids on loads may result in higher or lower prices for a given load than is agreed to with a designated, or pre-contracted carrier. This introduces additional burdens for enterprises that manage item transportation within their respective supply chains, because it may be difficult to arrange for alternate carriers, and may be difficult to predict the price that may be required to be paid to such an alternative carrier.</p><p id="p-0006" num="0005">Additionally, in this context, for primary and alternative contracted carriers, as well as auction-winning carriers, it can be difficult to determine the status of loads, and more specifically goods within a given load, within an organization's supply chain. This is exacerbated by the fact that carriers may have electronic or paper records, and may or may not be well-integrated and utilize EDI transaction flows. Still further, in some instances a record associated with a warehouse may remain static, but the associated record identifying a transportation load may change, for example due to logistical changes or changes in carrier. It can be difficult, therefore, to maintain complete records of the location of an item throughout an enterprise supply chain that utilizes such a wide variety of carriers and software systems for record management in different contexts.</p><p id="p-0007" num="0006">It is against this background that the present disclosure is made. Techniques and improvements are provided herein.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0008" num="0007">In general terms, the present disclosure relates to methods and systems for tracking loads of items within a supply chain. In particular, a unique identifier is used to aggregate information about load movements from multiple different supply chain management systems to present a unified view of load tracking information on a user interface. Additionally, a load board provides access to secondary markets for carriers to ship loads for a retailer.</p><p id="p-0009" num="0008">According to at least one aspect of the present disclosure, a computing system for tracking freight movements within a retail supply chain comprises: an edge layer application programming interface (API) configured to aggregate and correlate load tracking data from a plurality of supply chain management computing systems; a user interface configured to communicate visual representations of the load tracking data to a plurality of computing devices for display; a load board tool configured to: automatically identify eligible loads for spot market auction; send information about the eligible loads to a virtual board accessible by carrier computing devices; receive one or more bids from one or more of the carrier computing devices for the spot market auction; automatically determine winning bids for the spot market auction; and automatically create and send load tenders for the winning bids and the eligible loads; and a load tracking tool configured to: generate visualizations of planned virtual movements and executed physical movements within the retail supply chain based on the aggregated and correlated load tracking data; and automatically generate alerts and status events.</p><p id="p-0010" num="0009">In another aspect, a computer-implemented method of tracking movements of loads of items within a retail supply chain comprises: aggregating and correlating load tracking data received from a plurality of different supply chain management computing systems through an edge layer; generating visual representations of virtual movements and physical movements, load statuses, and locations of loads in near real-time, based on the aggregated and correlated load tracking data; generating status updates and alerts based on the aggregated and correlated load tracking data; and communicating the visual representations, status updates, and alerts to a plurality of computing devices through a single graphical user interface (GUI) accessible through an application programming interface (API).</p><p id="p-0011" num="0010">In another aspect, a computer-implemented method of managing a load board comprises: identifying, with a transportation management system, one or more loads of items eligible for spot market auction; posting information about the one or more loads on the load board, the load board accessible by a plurality of carrier computing devices through an application programming interface (API); receiving one or more bids from one or more of the carrier computing devices in the spot market auction; automatically determining winning bids for each of the loads; and automatically creating and sending, with the transportation management system, load tenders for the winning bids and corresponding loads to the carrier computing devices associated with the winning bids.</p><p id="p-0012" num="0011">In yet another aspect, a computer-implemented method of tracking movement of loads of items within a retail supply chain comprises: scheduling a delivery of a load of one or more items from an origin to a destination within the retail supply chain, the delivery having a schedule ID; creating a movement identifier (ID) comprising an alphanumeric having at least <b>4</b> characters; linking the movement ID with the schedule ID of the delivery in a record; assigning the load to a trailer; linking a trailer ID for the trailer with the movement ID in the record; before a trailer close event occurs associated with the trailer, assigning a manifest ID to the movement ID based on the scheduled delivery of the load; and publishing the movement ID and linked schedule ID, trailer ID, and manifest ID to a messaging system, the messaging system being accessible by a plurality of computing systems through an application programming interface (API).</p><p id="p-0013" num="0012">In another aspect, a supply chain management computing system comprises: a processor; and a memory communicatively coupled to the processor, the memory storing instructions which when executed by the processor, causes the computing system to: schedule a delivery of a load of one or more items from an origin to a destination within the retail supply chain, the delivery having a schedule ID provided by a node transportation application (NTA); create a movement identifier (ID) comprising an alphanumeric having at least <b>4</b> characters; link, using a movement ID service, the movement ID with the schedule ID in a table in a data store; assign, using a transportation management (TM) system, the load to a trailer; linking a trailer ID for the trailer with the movement ID in the table; before a trailer close event associated with the trailer occurs at the origin, assign a manifest ID generated by a warehouse management system (WMS) to the movement ID based on the scheduled delivery; link the manifest ID to the movement ID in the table; publish the movement ID and linked schedule ID, trailer ID, and manifest ID to a messaging system; and generate a graphical user interface (GUI) displaying information from the manifest alongside information linked to the trailer ID to show a near-current location of specific items shipped from a warehouse location during shipment by a third-party carrier.</p><p id="p-0014" num="0013">In yet another aspect, a method of linking data from different retail supply chain management systems comprises: receiving, at a computing device, a schedule ID generated by a node transportation application (NTA) to represent a scheduled delivery of a load of items from an origin to a destination on a delivery date; generating a movement ID to be associated with the schedule ID; storing the movement ID and schedule ID together in a table; receiving, at the computing device from a transportation management system, a load ID, carrier name, and standard carrier alpha code (SCAC) for a planned trailer movement between the origin and the destination; storing the load ID, carrier name, and SCAC with the movement ID and schedule ID in the table; prior to trailer close at the origin, receiving at the computing device a request from a warehouse management system (WMS) for a movement ID, the request including an origin identifier, a destination identifier, a manifest ID, and a trailer number; storing the origin identifier, destination identifier, manifest ID, and trailer number with the movement ID, schedule ID, load ID, carrier name, and SCAC in the table; sending the movement ID to the WMS; and publishing the movement ID and associated schedule ID, load ID, carrier name, SCAC, origin identifier, destination identifier, manifest ID, and trailer number to a messaging system.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a schematic diagram of a supply chain management system.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a schematic diagram of a load tracking system usable within the supply chain management system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a schematic diagram of an example supply chain for a retail enterprise.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example block diagram of a computing device useable to implement aspects of the supply chain management system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a flow diagram of an example method of managing loads within a supply chain.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a flow diagram of an example method of managing a load board.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a flow diagram of an example method of tracking loads within a retail supply chain.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a flow diagram of an example method of tracking load movements within a retail supply chain.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an example of a load tracking view of a graphical user interface.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates examples of movement ID tables.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates examples of movement ID tables.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates examples of movement ID tables.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>13</b>A</figref> illustrates examples of movement ID tables.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>13</b>B</figref> illustrates examples of movement ID tables.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0029" num="0028">Various embodiments will be described in detail with reference to the drawings, wherein like reference numerals represent like parts and assemblies through the several views. Reference to various embodiments does not limit the scope of the claims attached hereto. Additionally, any examples set forth in this specification are not intended to be limiting and merely set forth the many possible embodiments for the appended claims.</p><p id="p-0030" num="0029">Whenever appropriate, terms used in the singular also will include the plural and vice versa. The use of &#x201c;a&#x201d; herein means &#x201c;one or more&#x201d; unless stated otherwise or where the use of &#x201c;one or more&#x201d; is clearly inappropriate. The use of &#x201c;or&#x201d; means &#x201c;and/or&#x201d; unless stated otherwise. The use of &#x201c;comprise,&#x201d; &#x201c;comprises,&#x201d; &#x201c;comprising,&#x201d; &#x201c;include,&#x201d; &#x201c;includes,&#x201d; and &#x201c;including&#x201d; are interchangeable and not intended to be limiting. The term &#x201c;such as&#x201d; also is not intended to be limiting. For example, the term &#x201c;including&#x201d; shall mean &#x201c;including, but not limited to.&#x201d;</p><p id="p-0031" num="0030">The systems and methods described herein relate to managing transportation of loads of items within a retail supply chain. A unified load tracking system aggregates information from multiple supply chain computing systems to present that information on a user interface accessible by multiple users. One user interface provides access to a multitude of information that is interconnected by a common, unique identifier for each movement. A load board also provides carriers with easy access to information about available loads and provides retailers with easy access to bids from carriers for their loads. The load board manages automated auctions and automated load tendering. The load board information can also be accessed with the single user interface.</p><p id="p-0032" num="0031">An edge layer connects all of the supply chain management systems for a retail enterprise. Data is aggregated from the supply chain management systems and is presented at a single user interface. This simplifies the process of determining the status of shipments by eliminating the need to contact carriers or access various computing systems via separate user interfaces.</p><p id="p-0033" num="0032">A great deal of manual interactions with supply chain management computing systems were required previously. In one particular example, to change a load from a regional distribution center to a store which is paired to a backhaul, a user would have to access 9 separate applications and services, such as a transportation logistics management application, an electronic data interchange (EDI) message management application, a warehouse management system, a load tracking application, a store inventory application, and a global inventory application. Even when using those applications, it may be difficult, if not impossible, to determine the exact location of a particular item, given that the warehouse management system (which may track by carton of items) may track items differently than the to load tracking application (which may track by load), which may in turn track items differently from a store inventory application (which may track items on a per-item basis). This would take about 14 minutes to execute. In another example, to determine whether or not a load was correctly tendered to a carrier, a user would have had to access four separate applications. With the load tracking system described herein, a user can view, execute, and configure various operations with a single user interface.</p><p id="p-0034" num="0033">The system described herein allows internal and external users to conduct a variety of operations within one solution which orchestrates a user's experience and data aggregation across multiple platforms. One synergistic experience allows a user to access a single platform, replacing the multiple interactions within multiple interfaces required previously. This solution also enables a framework to allow for future scalability for domestic operations and an opportunity to create systemic interactions between domestic transportation operations, a transportation command center and carriers in one seamless experience. Additional advantages are achieved, as further explained below.</p><heading id="h-0007" level="2">Load Board</heading><p id="p-0035" num="0034">As mentioned above, in some aspects of the present disclosure, an integrated load board is provided that presents carriers various loads for bidding to secondary carriers. Historical data regarding load pricing may be analyzed to determine an optimal carrier strategy when selecting between a contracted carrier and submission of a load to the load board for auction. Carrier near-real-time pricing analytics are used to compare market rates with contracted rates for carriers. Data can be analyzed at a granular level to determine an optimum sourcing strategy. A common load board has the ability to automate auction eligible loads. Loads that are eligible for auction are identified. Information regarding the load is sent and received through the API. The load tender process is also automated for the carrier through an API.</p><p id="p-0036" num="0035">The load board system includes both traditional load board capability as well as enabling an automated dynamic rating capability. The automated capability reduces the manual workload required to obtain supplemental capacity within a constrained capacity landscape. Near real-time pricing analytics are employed to obtain market rates vs. contracted rates at a more granular level to influence sourcing strategies for the retailer. Still further, the load board may include one or more automated rules that can be implemented to ensure that carriers having contracted rates for a given shipping route are unable to decline a pre-contracted rate and instead bid on the same load (in cases where the bid amount would be less than the contracted rate).</p><heading id="h-0008" level="2">Load Tracking</heading><p id="p-0037" num="0036">In addition, in example embodiments, a data structure is provided that allows for linking of load and warehouse data across various software systems. Accordingly, data from multiple sources is correlated and aggregated automatically. All carrier status events are aggregated at the load tracking system. Updates can be viewed using a graphical user interface (GUI) to provide real-time visibility of events occurring through the supply chain. Alerts are automated for particular events and exceptions. The GUI allows for visualization of both virtual planned movements and actual physical movements of items and trailers.</p><p id="p-0038" num="0037">Using the GUI, loads can be filtered in various user-defined configurations to access particular load information. Through the use of a unique movement ID, available metadata such as Node Transportation Application (NTA) schedule ID, Vendor Ready to Ship (VRS) shipment ID, Transportation Manager (TM) load ID, TM trip ID, associated shipment windows, associated computed departure and arrival windows, EDI 204 tender timing, EDI 990 status, EDI 214 segment statuses, DCI or OSN (manifest ID), trailer number, Bill of Lading (BOL) and yard time stamps can be correlated. Accordingly, in accordance with the present disclosure, the unique movement ID acts as a link across heterogeneous transportation management and tracking systems for accurate joinder of shipment status information, while providing a common identifier across first, middle, and last mile freight movements for visualization and reporting.</p><p id="p-0039" num="0038">In addition to receiving shipment updates and tracking, the load tracking system can manage information relating to carrier reason codes for late or missed pickups. The load tracking system can also handle root cause delineation information received from free form text fields.</p><p id="p-0040" num="0039">Through use of the data structure, an identifier for a particular load at a warehouse may be linked to another identifier for the same particular load as managed by a carrier, despite the fact that the relationship between the warehouse identifier and carrier identifier may change, e.g., due to changed transportation conditions. Additionally, use of such an identifier avoids having to modify each database associated with each application that is otherwise used within a supply chain, and provides a single point from which a load of data may then be accessed by utilizing the related identifiers managed within that data structure.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example supply chain management system <b>100</b>. The supply chain management system <b>100</b> operates within a retail enterprise, and can be implemented across a variety of heterogeneous computer-implemented systems that are each usable to manage and operate various functions within a retail supply chain. The supply chain management system <b>100</b> includes a load tracking system <b>102</b>, a load board system <b>104</b>, and a movement ID service <b>128</b>. The supply chain management system <b>100</b> also includes a warehouse management system <b>106</b>, a transportation management system <b>108</b>, and an inventory management system <b>110</b>. The supply chain management system <b>100</b> communicates with one or more computing devices <b>116</b> via a network <b>114</b>.</p><p id="p-0042" num="0041">The load tracking system <b>102</b> operates to gather information about load movements within the supply chain and present that information on a unified user interface accessible by multiple types of users. The loading tracking system <b>102</b> includes a data aggregator <b>124</b> and a graphical user interface (GUI) <b>126</b>. The data aggregator <b>124</b> operates to aggregate and correlate information from various supply chain management computing systems such as the warehouse management system <b>106</b>, transportation management system <b>108</b>, NTA <b>138</b>, and VRS <b>140</b>. In some embodiments, the load tracking system <b>102</b> aggregates information received from electronic data interchange (EDI) messages sent from multiple different computing systems. Different computing systems refers to independent computing systems that utilize different data formats or handle separate functions and are not designed to integrate with one another. The EDI messages could include EDI 204 (Motor Carrier Load Tender), EDI 213 (Motor Carrier Shipment Status Inquiry), EDI 216 (Motor Carrier Shipment Pick-up Notification), and EDI 990 (Accept or Decline the 204 Shipment), just to name a few. In some embodiments, the EDI messages include EDI 204 (tender timing), EDI 990 (status), and EDI 214 (segment statuses). In the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the warehouse management system <b>106</b> and transportation management system <b>108</b> could be completely independent systems that operate using different data formats that cannot communicate with each other directly.</p><p id="p-0043" num="0042">The GUI <b>126</b> generates visualizations of the information aggregated by the data aggregator <b>124</b>. The visualizations represent current locations of loads, planned movements, position of loads on trailers, and status of loads. In some embodiments, the visualizations present the load information in a table format, as illustrated in the example GUI of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, described below. In response to queries, the GUI <b>126</b> can present information about particular trailers or loads. In some embodiments, the GUI <b>126</b> is accessible by a plurality of other computing devices through an API.</p><p id="p-0044" num="0043">The movement ID service <b>128</b> operates to provide a unified identifier that links warehouse management system <b>106</b> information to transportation management system <b>108</b> information. In some embodiments, information from the NTA <b>138</b> and VRS <b>140</b> can be linked to a movement identifier (ID) by the movement ID service as well. In example embodiments, the movement ID service <b>128</b> generates a unique identifier as part of a data structure that also stores information identifying a load in other systems such as the NTA <b>138</b> and VRS <b>140</b>. Through use of such a data structure, an enterprise user may more readily be able to view movement of a load from end to end within a supply chain. In some embodiments, the data structure is a record. In some embodiments, the data structure is a table. In some embodiments, the data structure is stored in a data store <b>142</b> in communication with the movement ID service <b>12</b>. In some embodiments, the movement ID service <b>128</b> further operates to link additional IDs with the movement ID in the data structure as they become available from other systems.</p><p id="p-0045" num="0044">The load board system <b>104</b> operates to generate and maintain a load board accessible by carriers and the retail enterprise. The load board system <b>104</b> includes an application programming interface (API) <b>130</b>, a graphical user interface (GUI) <b>132</b>, and an automated auction manager <b>134</b>. Information about loads eligible for spot market auction can be uploaded to the load board system <b>104</b> by the transportation management system <b>108</b>. Carriers <b>118</b> can access the load board through the API <b>130</b> and view available loads using the GUI <b>132</b>.</p><p id="p-0046" num="0045">The automated auction manager <b>134</b> determines winning bids for loads posted to the load board. In some embodiments, the automated auction manager <b>134</b> will initiate the load tender process by communicating with the transportation management system <b>108</b>. In some embodiments, this could be accomplished by sending an EDI 204 to the winning carrier's computing system. The automated auction manager <b>134</b> will apply one or more rules to control the carriers who may bid for a given load posted to the load board. Details regarding the load board, and rules, are provided below in conjunction with <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0047" num="0046">The warehouse management system <b>106</b> manages all events that occur at nodes (warehouse, distribution center, or storage at retail store) in the process of moving inventory through the supply chain. Warehouse operations differ between receive centers, distribution centers, and storage in retail stores. Inbound processing typically occurs at receive centers and distribution centers as items are shipped in from vendors or are transferred in from other nodes within the supply chain. The incoming items are put into storage at the node or are prepared for further shipment within the supply chain. The warehouse management system <b>106</b> functions to confirm various events as items are moved from node to node, such as trailer close or receipt of items at a node. The warehouse management system <b>106</b> tracks the physical movements of items within the warehouse environment, e.g., from the point of receipt through the trailer's release from the warehouse node. For example, the warehouse management system <b>106</b> may track items based on a predetermined unit volume, and will monitor which items are to be received, routed, and repacked for transport from the warehouse to one or more retail locations.</p><p id="p-0048" num="0047">The transportation management system <b>108</b> receives instructions from the inventory management system <b>110</b> to transport items between nodes of the supply chain. This generally involves communicating with carriers <b>118</b> to ship loads on trailers from node to node. Typically, the transportation management system <b>108</b> operates separately from the warehouse management system <b>106</b> and utilizes different computing systems to implement its functions. The transportation management system <b>108</b> functions to plan future movements of items within the supply chain.</p><p id="p-0049" num="0048">The inventory management system <b>110</b> operates to oversee the amount and location of every item in stock at different nodes within a supply chain. The inventory management system <b>110</b> determines whether additional inventory is needed within the supply chain and issues purchase orders to vendors <b>120</b>. The inventory management <b>110</b> system can also determine when items need to be redistributed within the supply chain. If more stock of a particular item is needed at a different node, the inventory management system <b>110</b> issues a transfer order to the transportation management system <b>108</b>.</p><p id="p-0050" num="0049">The node transportation application (NTA) <b>138</b> operates to generate delivery schedules. NTA <b>138</b> handles virtual planning of movements of loads of items. NTA <b>138</b> generates schedule IDs for each delivery.</p><p id="p-0051" num="0050">The Vendor Ready to Ship (VRS) application <b>140</b> integrates notifications from a vendor indicating that the vendor is prepared to ship requested items. The VRS <b>140</b> may, for example, receive notifications from vendors, and based on invoice information, initiate logistics fora load via the NTA <b>138</b>.</p><p id="p-0052" num="0051">As described herein, the various applications and inventories management systems present throughout the supply chain <b>100</b> represent different applications that store heterogeneous data, for example tracking items at different volumes, or in different combinations, tracking loads in different ways or at different points in time, and otherwise being uncoordinated other than through EDI transactions which occur at transition points in a supply chain (e.g., from warehouse to trailer, or trailer to retail location). Through use of a data structure including a movement ID, data may be associated with the movement ID as it becomes available from the various applications, thereby building a larger picture of movement of the item throughout the supply chain.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a more detailed schematic diagram <b>200</b> of selected components of the supply chain management system <b>100</b>, showing integration of the load tracking system and load board system with various other applications in an enterprise supply chain environment in a way that allows visibility to item movements and positioning throughout the supply chain. The diagram <b>200</b> illustrates an event based real time supply chain management infrastructure that provides visibility across the various warehouse, load/carrier, and enterprise inventory tracking systems despite possible changes to relationships between loads and warehouse inventories (e.g., due to changes in load/carrier schedules, carriers, changes in quantity or collections of items tracked, etc.).</p><p id="p-0054" num="0053">The scheduler <b>202</b> operates to match loads of items with trailers to transport those items from an origin to a destination within the supply chain. The scheduler <b>202</b> communicates information for loads that need to be transported to the core API <b>204</b>. The core API <b>204</b> manages persisted data and decides auction winners. When a load is put on a spot market auction, carriers can bid on the available loads using the load board. Information from the core API <b>204</b> is communicated through an edge API <b>206</b> to an application user interface (UI) <b>208</b>. Computing devices can access the application UI <b>208</b> to access information fetched through the edge API <b>206</b>.</p><p id="p-0055" num="0054">The transportation manager (TM) API <b>214</b> makes information from the core API <b>204</b> available to the load balancer <b>216</b>. The load balancer <b>216</b> manages the execution of load tender events in accordance with the results of the spot market auctions. Instructions are communicated to the transportation manager (TM) <b>218</b> to execute tender events. The TM event publisher <b>222</b> receives updates about item movement events that are occurring to transport loads and communicates tender events to a Kafka topic <b>224</b>. In some embodiments, the item movement events are communicated from the transportation manager <b>218</b> to the TM event publisher <b>222</b> via extensible markup language (XML) network attached storage (NAS) <b>220</b>. The tender consumer <b>226</b> accesses the Kafka topic <b>224</b> to process messages about tender events and communicate information from the messages to the core API <b>204</b>. Information from the core API <b>204</b> can be stored in and retrieved from a data store <b>230</b>.</p><p id="p-0056" num="0055">The dynamic rating API <b>232</b> receives requests for quotes or bids from the core API <b>204</b>. The requests are communicated to carriers <b>118</b><i>a, </i><b>118</b><i>b, </i><b>118</b><i>c. </i>The carriers <b>118</b> receive information about the available loads and can access that information through a load board. Bids or quotes from the carriers <b>118</b> are communicated through the dynamic rating API <b>232</b> to the core API <b>204</b>, where the winning bid is determined for each load.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a schematic diagram <b>300</b> of an example supply chain for a retail enterprise. This is just one simplified example of a supply chain in which the present systems and methods can operate. The diagram <b>300</b> illustrates the flow of inventory from vendor <b>302</b> to store <b>308</b>. The inventory moves through various nodes to arrive at the stores <b>308</b>. In this example, the nodes include a receive center <b>304</b>, two distribution centers <b>306</b><i>a, </i><b>306</b><i>b, </i>and four retail stores <b>308</b><i>a, </i><b>308</b><i>b, </i><b>308</b><i>c, </i><b>308</b><i>d. </i>In practice, the supply chain could include many more nodes in different proportions. In some embodiments, there are not separate receive centers and distribution centers. Instead, there may be one type of warehouse for holding inventory before distributing to stores. Arrows in the diagram indicate movement of inventory. Inventory will typically flow downward through the supply chain, but in some instances inventory may move between distribution centers <b>306</b> or between retail stores <b>308</b>. In some embodiments, inventory may even move from a distribution center <b>306</b> to a receive center <b>304</b> or from a retail store <b>308</b> to a distribution center <b>306</b>.</p><p id="p-0058" num="0057">Vendors <b>302</b> produce/provide the items or products that will be sold by the retail enterprise. A purchase order is typically placed to request products from a vendor. In some instances, the vendor <b>302</b> will transport the ordered products to a receive center <b>304</b>. In other instances, the retail entity arranges for the products to be picked up from the vendor <b>302</b> and transported to the receive center <b>304</b>. Once at the receive center <b>304</b>, the products are prepared for transportation to one or more distribution centers <b>306</b>. The products may arrive from the vendors in large groupings that need to be broken down into individual units for distribution to distribution centers <b>306</b> and/or stores <b>308</b>. Accordingly, once received into the supply chain of the enterprise, each individual unit can be tracked and shipped among the various nodes of the supply chain.</p><p id="p-0059" num="0058">A variety of products are prepared for shipment to one or more distribution centers <b>306</b>. The distribution centers <b>306</b> are typically positioned to enable quick shipment to one or more retail stores <b>308</b>. Each distribution center <b>306</b> may supply inventory to multiple retail stores <b>308</b>. In some instances, more than one distribution center <b>306</b> will send inventory to a retail store <b>308</b>. For example, in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, distribution center <b>306</b><i>a </i>distributes inventory to stores <b>308</b><i>a, </i><b>308</b><i>b </i>, and <b>308</b><i>c. </i>Distribution center <b>306</b><i>b </i>distributes to stores <b>308</b><i>b, </i><b>308</b><i>c, </i>and <b>308</b><i>d. </i>In some instances, to the extent products received at a distribution center <b>306</b> are not already broken down into individual units, the products may be broken down into individual units in order to distribute individual items to stores <b>308</b>, or optionally to fill online orders that will be delivered directly to customers from the distribution center <b>306</b> or store <b>308</b>.</p><p id="p-0060" num="0059">Once products arrive at the retail stores <b>308</b>, they are either stored in a back room or displayed on shelves. This inventory is available for in-store purchases, pick-up orders, or local delivery. Depending on the location of a customer ordering products online, the shipments of products could come from one or more retail stores <b>308</b>, or distribution centers <b>306</b>. For instance, a customer could receive shipments of products from either store <b>308</b><i>b </i>or store <b>308</b><i>c, </i>or both (in the instance of a multi-item purchase).</p><p id="p-0061" num="0060">It is noted that, between receive centers <b>304</b>, distribution centers <b>306</b>, and stores <b>308</b>, there may be preexisting, predetermined delivery routes established. For example, there may be daily or weekly transit routes between a receive center and one or more distribution centers. The receive center <b>308</b> can provide to the distribution centers <b>306</b> the selection of individual items that are needed by stores <b>308</b> serviced by the one or more distribution centers <b>306</b> proximate to and/or servicing those stores <b>308</b>. The distribution centers <b>306</b> can also have daily or other periodic transportation routes established to stores <b>308</b> that are serviced, thereby ensuring prompt replenishment of items at stores in response to item sales.</p><p id="p-0062" num="0061">It is in this general supply chain retail environment that the following systems and methods operate. While the methods and systems are described in a retail environment having brick-and-mortar stores as well as online sales, additional applications are possible. For example, the systems and methods could operate in a supply chain of warehouses that only distribute products to customers in fulfillment of online orders. In other embodiments, the systems and methods could operate for distribution channels that distribute supplies to multiple locations within a business rather than selling to individual customers.</p><p id="p-0063" num="0062">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an example block diagram of a computing device <b>400</b> is shown that is useable to implement aspects of the supply chain management system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, the computing device <b>400</b> can be used to access the supply chain management system <b>100</b> through the network <b>114</b> as computing device <b>116</b>.</p><p id="p-0064" num="0063">In the embodiment shown, the computing device <b>400</b> includes at least one central processing unit (&#x201c;CPU&#x201d;) <b>402</b>, a system memory <b>408</b>, and a system bus <b>422</b> that couples the system memory <b>408</b> to the CPU <b>402</b>. The system memory <b>408</b> includes a random access memory (&#x201c;RAM&#x201d;) <b>410</b> and a read-only memory (&#x201c;ROM&#x201d;) <b>412</b>. A basic input/output system that contains the basic routines that help to transfer information between elements within the computing device <b>400</b>, such as during startup, is stored in the ROM <b>412</b>. The computing system <b>400</b> further includes a mass storage device <b>414</b>. The mass storage device <b>414</b> operates to store software instructions and data.</p><p id="p-0065" num="0064">The mass storage device <b>414</b> is connected to the CPU <b>402</b> through a mass storage controller (not shown) connected to the system bus <b>422</b>. The mass storage device <b>414</b> and its associated computer-readable storage media provide non-volatile, non-transitory data storage for the computing device <b>400</b>. Although the description of computer-readable storage media contained herein refers to a mass storage device, such as a hard disk or solid state disk, it should be appreciated by those skilled in the art that computer-readable data storage media can include any available tangible, physical device or article of manufacture from which the CPU <b>402</b> can read data and/or instructions. In certain embodiments, the computer-readable storage media comprises entirely non-transitory media.</p><p id="p-0066" num="0065">Computer-readable storage media include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable software instructions, data structures, program modules or other data. Example types of computer-readable data storage media include, but are not limited to, RAM, ROM, EPROM, EEPROM, flash memory or other solid state memory technology, CD-ROMs, digital versatile discs (&#x201c;DVDs&#x201d;), other optical storage media, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computing device <b>400</b>.</p><p id="p-0067" num="0066">According to various embodiments, the computing device <b>400</b> can operate in a networked environment using logical connections to remote network devices through a network <b>421</b>, such as a wireless network, the Internet, or another type of network. The computing device <b>400</b> may connect to the network <b>421</b> through a network interface unit <b>404</b> connected to the system bus <b>422</b>. It should be appreciated that the network interface unit <b>404</b> may also be utilized to connect to other types of networks and remote computing systems. The computing device <b>400</b> also includes an input/output controller <b>406</b> for receiving and processing input from a number of other devices, including a touch user interface display screen, or another type of input device. Similarly, the input/output controller <b>406</b> may provide output to a touch user interface display screen or other type of output device.</p><p id="p-0068" num="0067">As mentioned briefly above, the mass storage device <b>414</b> and the RAM <b>410</b> of the computing device <b>400</b> can store software instructions and data. The software instructions include an operating system <b>418</b> suitable for controlling the operation of the computing device <b>400</b>. The mass storage device <b>414</b> and/or the RAM <b>410</b> also store software instructions, that when executed by the CPU <b>402</b>, cause the computing device <b>400</b> to provide the functionality discussed in this document. For example, the mass storage device <b>414</b> and/or the RAM <b>410</b> can store software instructions that, when executed by the CPU <b>402</b>, cause the computing system <b>400</b> to operate a load board.</p><p id="p-0069" num="0068">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a flow chart depicting an example method <b>500</b> of managing loads within a supply chain is described. The method <b>500</b> can be performed by the systems described in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>.</p><p id="p-0070" num="0069">At operation <b>502</b>, load tracking information is aggregated from multiple different computing systems in the supply chain. A movement ID can be utilized to link different identifiers used by warehouse management systems, transportation management systems, and other systems. The movement ID ties together information about virtual planned movements of items with actual physical movements of items.</p><p id="p-0071" num="0070">At operation <b>504</b>, loads eligible for spot market auction are identified and posted to a load board. Information about the loads is uploaded to the load board and can be accessed by multiple carriers. The carriers can submit bids on the loads to transport them from an origin to a destination.</p><p id="p-0072" num="0071">At operation <b>506</b>, loads are tendered to the carriers that had the winning bid on the spot market auction. In some embodiments, the automated auction manager <b>134</b> communicates to the transportation management system <b>108</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> (or <b>218</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) instructions to automatically issue a load tender to the carrier.</p><p id="p-0073" num="0072">At operation <b>508</b>, information tracking loads within the supply chain is used to generate visualizations. These are prepared to present information about movements of loads including, for example, which trailer each load is on, the origin and destination of the load, the carrier handling the load, and the current status of the load.</p><p id="p-0074" num="0073">At operation <b>510</b>, the visualizations of load tracking information are presented on a graphical user interface (GUI) that can be accessed by various computing devices through an API. The load tracking information can be accessed by both the retail enterprise and the carriers so that all parties have a unified view of the status of the loads through one user interface.</p><p id="p-0075" num="0074">Referring now to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a method <b>600</b> of managing a load board is described. In some embodiments, the method <b>600</b> can be performed by the supply chain management system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and more specifically the load board system <b>104</b>.</p><p id="p-0076" num="0075">At operation <b>602</b>, loads eligible for spot market auctions are identified. In some embodiments, this is performed by a transportation management system such as the transportation management system <b>108</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Loads eligible for spot market auctions may be determined based on one or more primary or contracted carriers declining to accept a given load (e.g., due to capacity constraints). This may occur automatically, for example, based on receipt of an Electronic Data Interchange (EDI) 990 (Response to a Load Tender) message received by the enterprise that declines the load. Accordingly, such loads may be designated as available for bid by non-contracted and contracted carriers. In some instances, and as made advantageous by the present disclosure, loads may be designated for spot market auctions based on a belief by an enterprise that an auction price for a given load may be lower than a contracted price, and that contracted load quotas (e.g., a predetermined number of loads agreed to be provided to a given carrier at the contracted rate within a given month/week/year) will otherwise be met or have been met. In accordance with the present disclosure, by utilizing the load board system described herein, an enterprise may be better able to track load prices and predict future load prices that are paid at auction, so the enterprise may more intelligently select whether to provide a load to a contracted carrier or to make the load eligible for a spot market option.</p><p id="p-0077" num="0076">At operation <b>604</b>, information about the eligible loads is uploaded to a virtual load board. The load board could be accessible by carriers and retailers through the API <b>130</b> and information about available loads could be viewed using the GUI <b>132</b>.</p><p id="p-0078" num="0077">At operation <b>606</b>, bids are received from carriers for the spot market auctions. Bids can be communicated through the API <b>130</b>.</p><p id="p-0079" num="0078">At operation <b>608</b>, the winning bids are automatically determined for each load. In some embodiments, the automated auction manager <b>134</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> determines the winners. In some embodiments, winning bids are accepted based on one or more rules that are predefined by the enterprise. In some instances, a rule may indicate that a particular carrier is ineligible to bid on a load, and so is disqualified from having a winning bid for that load. This may be due to the carrier being a contracted carrier for the given load and the carrier having previously declined to accept the load at the contracted rate. Accordingly, a situation where a carrier can decline a load at a contracted rate to attempt to obtain a higher price for the same load may be avoided.</p><p id="p-0080" num="0079">At operation <b>610</b>, loads are automatically tendered to the winning bidder. In some embodiments, the automated auction manager <b>134</b> communicates the winning bid information to the transportation management system <b>108</b> to issue the load tender.</p><p id="p-0081" num="0080">In addition to the above, regardless of whether a load is tendered to a contracted carrier or to a carrier holding a winning bid, the price of the load, type of agreement (contract or bid), carrier, and load details (time, date, load size, other parameters) are captured to allow the enterprise to perform further analysis and predict future prices for similarly-situated loads.</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a flow chart of an example method <b>700</b> of tracking loads within a retail supply chain. In some embodiments, the method <b>700</b> could be implemented by the load tracking system <b>102</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0083" num="0082">At operation <b>702</b>, load tracking data is aggregated and correlated from multiple supply chain management computing systems through an edge layer. In some embodiments, this operation is performed by the data aggregator <b>124</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> which receives information from the warehouse management system <b>106</b>, the transportation management system <b>108</b>, the movement ID service <b>128</b>, the NTA <b>138</b>, and the VRS <b>140</b>. Such load tracking data may be received at the various systems due to those systems being configured to receive various types of Electronic Data Interchange (EDI) events and/or other status updates. For example, an EDI 204 message (Motor Carrier Load Tender) message may be issued by a transportation management system <b>108</b> to a carrier, and the EDI 990 message previously described may be returned to that system, either accepting or rejecting the load. The transportation management system <b>108</b> may then transfer an identifier of that load to the automated auction manager <b>134</b> for auction of the load. An accepted load may result in communication of an EDI 211 (Bill of Lading) or EDI 212 (Trailer Manifest) message.</p><p id="p-0084" num="0083">At operation <b>704</b>, visual representations are generated of virtual movements and physical movements of loads within the supply chain. Load statuses and locations are also included in the visual representations. In some embodiments, the representations are provided as tables of information that can be queried for particular loads, trailers, or locations.</p><p id="p-0085" num="0084">At operation <b>706</b>, carrier status events are received from carrier computing systems in near real-time. Periodic messages regarding various statuses or locations of the load may also be received at the load tracking system <b>102</b> and/or transportation management system <b>108</b> from the carrier via an EDI 214 (Transportation Carrier Shipment Status Message) message. Status events can include loading, trailer close, in transit (with specific location, if available), arrival at destination, and unloaded. Carrier status events can be communicated to the load tracking system directly through an API or indirectly through communications with the transportation management system <b>108</b>.</p><p id="p-0086" num="0085">At operation <b>708</b>, status updates and alerts are generated based on the load tracking data and carrier status updates that are received. Alerts can be automatically generated when exceptions occur with shipments. Status updates are generated in response to information updates received from other supply chain management computing systems indicating a change in location or status of a load.</p><p id="p-0087" num="0086">At operation <b>710</b>, the visual representations, status updates, and alerts are communicated to computing devices. In some embodiments, the load tracking system <b>102</b> communicates status updates to an API that can be accessed by other computing systems within the supply chain management system <b>100</b> as well as carrier computing systems. The computing systems can access the visual representations through a graphical user interface (GUI) such as the GUI <b>126</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0088" num="0087">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a method <b>800</b> of tracking movements of loads within a supply chain is described. In some embodiments, the movement ID service <b>128</b> performs many of the operations in the method <b>800</b>.</p><p id="p-0089" num="0088">At operation <b>802</b>, delivery of a load from an origin to a destination is scheduled. A schedule ID is generated for the delivery.</p><p id="p-0090" num="0089">At operation <b>804</b>, movement ID is created for the delivery. The movement ID is an alphanumeric ID that is unique to each load movement. The movement ID can be generated at the time movement of a load is scheduled, e.g., at the time the schedule ID is generated, or even prior to generation of the schedule ID. The movement ID is communicated to a Kafka topic so it can be accessed by other systems through an API.</p><p id="p-0091" num="0090">At operation <b>806</b>, the movement ID is linked to the schedule ID. A systematic data join between the movement ID and schedule ID is created and saved to a data structure. The linked information can be communicated to the Kafka topic.</p><p id="p-0092" num="0091">At operation <b>808</b>, the load manifest is assigned to a trailer for delivery. The trailer ID is determined as well as a delivery estimate.</p><p id="p-0093" num="0092">At operation <b>810</b>, the movement ID is linked with the manifest and trailer ID. In some embodiments, a load ID, carrier name, and standard carrier alpha code is also linked to the movement ID.</p><p id="p-0094" num="0093">At operation <b>812</b>, a manifest ID and movement ID are assigned based on the scheduled delivery. In some embodiments, the manifest ID could be an OLE ship number (OSN) or a distribution center invoice (DCI). The manifest ID is assigned based on the next available NTA schedule. The manifest ID identifies a particular load including a collection of items that are to be transported between a distribution center, or warehouse, and another location, such as a retail location.</p><p id="p-0095" num="0094">At operation <b>814</b>, the movement ID and its linked IDs (schedule ID, trailer ID, manifest ID, etc.) are published to a messaging system accessible through an API. In some embodiments, the messaging system is a Kafka topic. The API can be used by carrier, vendor, and retailer computing devices to access information linked with the movement identifier.</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an example view of the GUI <b>126</b> for the load tracking system <b>102</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. A header <b>902</b> includes options for &#x201c;Home,&#x201d; &#x201c;Load Board,&#x201d; and &#x201c;Load Tracking.&#x201d; Selecting the &#x201c;Load Board&#x201d; option would bring the display to a view of a load board, while the current view is that of &#x201c;Load Tracking.&#x201d; A selection menu <b>904</b> provides options to filter the loads.</p><p id="p-0097" num="0096">A series of entries <b>906</b> describing loads are displayed in a table. A box selector <b>910</b> is provided to select one or more of the entries <b>906</b>. The table includes columns to describe &#x201c;Load ID&#x201d; <b>912</b>, &#x201c;Load Date&#x201d; <b>914</b>, &#x201c;Delivery Date&#x201d; <b>916</b>, &#x201c;Status&#x201d; <b>918</b>, &#x201c;Origin&#x201d; <b>920</b>, &#x201c;Origin Address&#x201d; <b>922</b>, &#x201c;Destination&#x201d; <b>924</b>, &#x201c;Destination Address&#x201d; <b>926</b>, and &#x201c;Weight&#x201d; <b>928</b>.</p><p id="p-0098" num="0097">In use, as noted above, the GUI <b>126</b> may be presented by the enterprise as automatically including entries <b>906</b> that correspond to loads for which bids may be accepted. The entries <b>906</b> may be viewable by third party carriers who are granted access to the GUI, e.g., via a set of carrier-specific credentials issued by the enterprise. Through interaction with the GUI <b>126</b>, the carriers may be awarded loads based on winning bids driven by rules governing each auction, as dictated by the load board system <b>104</b>.</p><heading id="h-0009" level="2">Movement Identifiers</heading><p id="p-0099" num="0098">Updates to the movement identifiers (movement IDs) are published to Kafka topics as they occur. In some embodiments, there is a landing table that receives the updates. An API provides access to the updates published to the Kafka topics. Pulls to the API can include inputs such as movement ID, manifest ID (DCI), or other transportation or warehouse related identifier.</p><p id="p-0100" num="0099">The movement ID makes it so that an overall picture of the location of trailers and the loads of items within those trailers can be accessed easily and quickly. Previously, trailer and load information was not linked and so it could be difficult to ascertain which items were loaded onto which trailers. Often, to check on the status of a load or trailer, calls would have to be made to carriers.</p><p id="p-0101" num="0100">Trailers are scheduled such that the orders contained within are expected to be unloaded in the order that they arrive at a destination. In other words, the so-called &#x201c;oldest&#x201d; trailers should be unloaded first so that the items within arrive when expected. However, existing systems did not have a good way to tie the trailer identity to the identity of the orders contained within. Thus, multiple trailers could be sitting in a yard waiting to be unloaded and employees at a node would not know which trailers to prioritize for unloading. This resulted in orders/items being unloaded out of sequence and items won't get to where they need to be when they need to be there. There was a need for virtual and physical movements of containers to be associated with a persisted unique identifier.</p><p id="p-0102" num="0101">This system generates and maintains a container referred to as a movement ID for a movement within a supply chain. The movement ID captures a plurality of data fields, populates identifiers into those data fields as they become available throughout (or after) a carrier move. The movement ID acts to link physical and virtual systems of supply chain management so that middle mile and last mile movements can be monitored to ensure that items are arriving at their intended destinations on time. The movement ID can be utilized in conjunction with the load tracking system <b>102</b> to access updated and aggregated information about load movements through a supply chain from multiple different computing systems. A warehouse management system (WMS) is provided a unique identifier for each origin/destination pair that is matched to a trailer and manifest. Information is shared using Kafka topics and APIs so that it does not need to be replicated and stored in databases of other systems. This system provides a holistic view of a supply chain network at the granular level for inventory movements. Freight can be tracked so that stores and other nodes know when certain items will be arriving.</p><p id="p-0103" num="0102">In some embodiments, the movement ID service <b>128</b> stores information in a data structure. In some embodiments, the data structure is a single database with two to three tables. These tables list the associations between movement IDs and identifiers used with other supply chain management systems. The primary table includes movement IDs and their associated manifest IDs. Associations made between movement IDs and manifest IDs cannot be changed once established. Another table lists movement IDs with corresponding NTA and transportation management (TM) information. There is also a table for recording dates and times. In some embodiments, there is also a separate table for transportation information. Transportation information can change so this table remains separate from those containing fixed relationships. Other data storage structures and arrangements could be used to store movement IDs and related information. As new or updated information becomes available, the movement ID service <b>128</b> stores the information with the pertinent movement ID in the data structure.</p><p id="p-0104" num="0103">An example of a movement ID table is shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. The table includes a movement ID, manifest ID, schedule ID, load ID, trailer number, carrier name, standard carrier alpha code (SCAC), origin T-number, and destination T-number. Depending on the systems utilized by a retail entity for supply chain management there may be more or less fields and the combination of tracked fields may differ.</p><p id="p-0105" num="0104">In example embodiments, a new movement ID is created when a scheduled delivery is created in NTA. The schedule ID is tied to the movement ID in the table. However, the schedule ID could change later. Table B shows the fields for movement ID filled in with P05G22V and the schedule ID filled in with <b>2846</b> for a new entry.</p><p id="p-0106" num="0105">After the transportation manager has completed optimizing the NTA schedule <b>2846</b>, the load ID, carrier name, and SCAC are assigned to the movement ID and recorded in the table. In the example table C, the load ID is 16597036, the carrier name is FedEx, and the SCAC is XPOL.</p><p id="p-0107" num="0106">Just before trailer close at a warehouse, the warehouse management system (WMS) <b>106</b> requests the movement ID via Kafka by sending a request message including an origin T-number, destination T-number, manifest ID, and trailer number. The movement ID service <b>128</b> assigns the manifest ID to the movement ID with the next available NTA schedule based on scheduled delivery date. The movement ID is published via Kafka for the WMS <b>106</b> to complete the trailer close process. In table D, the manifest ID is shown as <b>2985</b>, the trailer number is 512, the origin t-number is 101, and the destination T-number is 89. The next scheduled delivery is whichever schedule ID that has not yet been assigned to a manifest ID. The movement ID and manifest ID are now locked and changes cannot be made. However, other fields may be updated as necessary, as is described below. Completed movement ID details are now published to Kafka and are accessible by other computing systems via the Kafka topic or API pulls.</p><p id="p-0108" num="0107">Situations can arise where the warehouse requests a movement ID and there is not already a scheduled delivery between the origin and destination. <figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates example movement ID tables showing one such situation. The WMS requests the movement ID via Kafka by sending an origin, destination, manifest ID, and trailer number. These are recorded as shown in table A.</p><p id="p-0109" num="0108">If there are not any available schedules in NTA for the origin/destination (O/D) pair, a new movement ID will be created, as shown in table B. The movement ID is locked in with the manifest ID, but no NTA or TM data is tied to the movement ID at this point. The movement ID details are published via the Kafka topic and are available to be pulled via an API (for example, the Core API <b>204</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0110" num="0109">Generally, a newly scheduled delivery that is added to NTA <b>138</b> will trigger the creation of a new movement ID and link the new schedule ID with the movement ID. However, if the delivery schedule date falls before an existing NTA delivery schedule that is already tied to a movement ID and manifest ID, the system will make updates. An example of this situation is shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. Table A shows four movement IDs and the accompanying details tied to those movement IDs.</p><p id="p-0111" num="0110">The newly added NTA schedule ID will be inserted chronologically and overwrite the existing NTA schedule ID for that movement ID. In the example of Table B, schedule ID <b>2847</b> is added and overwrite schedule ID <b>2848</b>.</p><p id="p-0112" num="0111">The NTA schedule ID which was previously attached moves to the next movement ID with the manifest ID having the next trailer close date. This ensures proper chronology of schedule IDs and trailer closings in WMS without breaking the associations between movement ID and manifest IDs. Schedule ID updates continue to cascade to maintain the chronology of existing movement ID. In the example of Table C, schedule ID <b>2848</b> moves down to replace <b>2848</b>, and <b>2849</b> moves down to replace <b>2851</b>.</p><p id="p-0113" num="0112">Once existing movement IDs are exhausted a new movement ID is created for the NTA schedule ID that was previously attached to the last one. In the example table D, schedule ID <b>2851</b> is matched with the new movement ID of P90L31L.</p><p id="p-0114" num="0113"><figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref> show an example situation of an NTA schedule ID being cancelled. Cancellation of an NTA schedule results in removing the schedule ID from the movement ID. Table A shows the schedule ID for movement ID G88T42E being removed.</p><p id="p-0115" num="0114">The schedule ID is replaced with the next chronological schedule ID, based on delivery date. The example Table B shows schedule ID moving up to match with movement ID G88T42E, leaving movement ID P90L31L without a schedule ID.</p><p id="p-0116" num="0115">The schedule IDs are moved up chronologically to fill in for movement IDs missing schedule IDs until all of the schedule IDs are updated to the most recent movement ID. This ensures proper chronology of both schedule IDs and trailer closings without breaking the associations between movement IDs and manifest IDs. In example Table C of <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, the schedule ID <b>2852</b> is shown moving up to movement ID P90L31L from movement ID Y87X89Z.</p><p id="p-0117" num="0116">Leftover movement IDs are deleted. In Table D, the leftover movement ID Y87X89Z is deleted.</p><p id="p-0118" num="0117">In this example, all adds and cancels must be captured in NTA <b>138</b>. Any adjustment in the physical world (actual trailer movement) that is not captured in NTA will cause data to be out of sync for that trailer as well as all trailers for the same Origin/Destination pair until an adjustment is made. For example, if an additional trailer gets filled and closed without a corresponding schedule being added as an adjustment in NTA, the manifest ID will simply attach to the next available NTA schedule and all subsequent matching will be off by one. Clear procedures and process discipline in NTA can help control these exception scenarios, but if process is not followed, adjustments will need to be made.</p><p id="p-0119" num="0118">Errors can occur with the movement ID system can occur in various scenarios. These can include when additional physical trailers are added without adding a corresponding schedule ID in NTA. Skipping a scheduled delivery without cancelling the corresponding schedule ID in NTA will cause an error. Another situation can occur if the trailer closed and delivered to store, but the store does not accept the trailer and sends it back to the distribution center. This will only cause a problem if the original NTA schedule ID is not canceled and a new NTA schedule ID is added. If either the original schedule ID gets canceled in NTA, or the distribution center can deliver to the store without adding a new schedule ID, the net result will keep equal counts of NTA schedules to actual trailers and no further adjustments will be necessary.</p><p id="p-0120" num="0119">The use of an edge layer and single user interface provides many advantages over other supply chain management systems. The edge layer aggregates information from multiple different systems that operate independently from one another with different data formats and identifiers. This aggregated information is presented with a single user interface, allowing for a user to access the information from multiple systems at one point. Thus, a user only needs to log into one system and make one query to determine the status of a load instead of logging into multiple systems and making multiple queries to access the same information. This provides efficiency, not just for the user but for the many computing systems associated with the supply chain management system. Fewer computing transactions are required to access the needed information.</p><p id="p-0121" num="0120">The load board provides additional advantages in that many of the steps required to post a load to the secondary market are automated. Rules are established to automatically determine some loads that will be posted to the load board for bids. Other additional loads can be posted if it is determined that the expected bids are less expensive that contracted carrier rates. Historical secondary market rates are recorded and aggregated automatically and later accessed to inform this decision. This results in cost savings to a retailer without requiring additional effort to obtain the information. The automated load tendering process also reduces the number of interactions that a retailer has to make with the load board and with carriers. Further, fewer communications are required between the retailer and carrier to carry out the deliveries.</p><p id="p-0122" num="0121">The movement ID acts to link physical and virtual systems of supply chain management so that middle mile and last mile movements can be monitored to ensure that items are arriving at their intended destinations on time. The movement ID can be used in conjunction with a load tracking system to provide a holistic view of a supply chain network at the granular level for inventory movements. The movement ID allows for location of items in transit or in a warehouse without importing all WMS records into a larger transportation management system. This is advantageous because synchronization problems between WMS and other transportation management systems can be avoided.</p><p id="p-0123" num="0122">The description and illustration of one or more embodiments provided in this application are not intended to limit or restrict the scope of the invention as claimed in any way. The embodiments, examples, and details provided in this application are considered sufficient to convey possession and enable others to make and use the best mode of claimed invention. The claimed invention should not be construed as being limited to any embodiment, example, or detail provided in this application. Regardless of whether shown and described in combination or separately, the various features (both structural and methodological) are intended to be selectively included or omitted to produce an embodiment with a particular set of features. Having been provided with the description and illustration of the present application, one skilled in the art may envision variations, modifications, and alternate embodiments falling within the spirit of the broader aspects of the general inventive concept embodied in this application that do not depart from the broader scope of the claimed invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computing system for managing a load board, the computing system comprising:<claim-text>at least one processor;</claim-text><claim-text>a memory storing instruction which, when executed by the at least one processor, cause the computing system to:<claim-text>identify eligible loads associated with a retailer for spot market auction;</claim-text><claim-text>post information about the eligible loads for the spot market auction on the load board, the load board being accessible by a plurality of carrier computing devices through an application programming interface (API);</claim-text><claim-text>receive, through the API, one or more bids for the spot market auction from one or more of the plurality of carrier computing devices;</claim-text><claim-text>determine winning bids for the spot market auction; and</claim-text><claim-text>create and send load tenders for the winning bids and the eligible loads,</claim-text></claim-text><claim-text>wherein at least one eligible load is automatically identified for the spot market auction based on an expected auction price of the at least one eligible load being less than a contracted rate between the retailer and a carrier contracted for the at least one eligible load.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the load board is further configured to access near real-time pricing analytics to compare market rates with contracted rates for shipping loads to automatically determine whether to make one or more loads eligible for the spot market auction.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computing system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the near real-time pricing analytics are derived from historical load price information.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein to identify the eligible loads for the spot market auction further includes to:<claim-text>compare contracted rates between the retailer and a corresponding carrier contracted for each load with historical spot market auction rates; and</claim-text><claim-text>determine whether to post each load to the load board based on a prediction that spot market auction rates will be lower than the contracted rates.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least one other eligible load of the eligible loads for the spot market auction is identified for the spot market auction based a contracted carrier declining to accept the at least one other eligible load.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computing system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the at least one other eligible load is automatically identified based on an electronic data interchange message (EDI).</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein to determine the winning bids for the spot market auction is based at least in part on predefined rules.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein bids for an eligible load will not be accepted from carrier computing devices associated with contracted carriers that denied the eligible load.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the information about the eligible loads comprises one or more of origin, destination, weight, volume, delivery date, and status.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the load tenders for the winning bids are sent to a transportation management system to issue the load tenders.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, generate a graphical user interface (GUI) for the load board accessible to the plurality of carrier computing devices using the API.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A computer-implemented method of managing a load board, the method being executed by at least one processor and comprising:<claim-text>identifying eligible loads associated with a retailer for spot market auction;</claim-text><claim-text>posting information about the eligible loads for the spot market auction on the load board, the load board being accessible by a plurality of carrier computing devices through an application programming interface (API);</claim-text><claim-text>receiving, through the API, one or more bids for the spot market auction from one or more of the plurality of carrier computing devices;</claim-text><claim-text>determining winning bids for the spot market auction; and</claim-text><claim-text>creating and sending load tenders for the winning bids and the eligible loads,</claim-text><claim-text>wherein at least one eligible load is automatically identified for the spot market auction based on an expected auction price of the at least one eligible load being less than a contracted rate between a retailer and a carrier contracted for the at least one eligible load.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer-implemented method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein at least one other eligible load of the eligible loads for the spot market auction is identified automatically by detecting that a response denying the at least one other eligible load was received from a carrier computing device.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer-implemented method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the response denying the at least one other eligible load is an electronic data interchange (EDI) message.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer-implemented method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein identifying the eligible loads for the spot market auction further comprises:<claim-text>comparing contracted rates between the retailer and a corresponding carrier contracted for each load with historical spot market auction rates; and</claim-text><claim-text>determining whether to post each load to the load board based on a prediction that spot market auction rates will be lower than the contracted rates.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-implemented method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein determining winning bids for the spot market auction is based at least in part on predefined rules.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-implemented method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein bids for an eligible load will not be accepted from carrier computing devices associated with contracted carriers that denied the eligible load.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. A supply chain management computing system comprising:<claim-text>at least one processor;</claim-text><claim-text>a memory storing instruction which, when executed by the at least one processor, cause the supply chain management computing system to:<claim-text>identify eligible loads associated with a retailer for spot market auction;</claim-text><claim-text>publish a load board tool accessible by a plurality of carrier computing devices through an application programming interface (API), wherein the load board tool is configured to:<claim-text>post information about the eligible loads for the spot market auction;</claim-text><claim-text>receive one or more bids for the spot market auction from one or more of the plurality of carrier computing devices;</claim-text><claim-text>determine winning bids for the spot market auction; and</claim-text><claim-text>create and send load tenders for the winning bids and the eligible loads,</claim-text></claim-text></claim-text><claim-text>wherein at least one eligible load is automatically identified for the spot market auction based on an expected auction price of the at least one eligible load being less than a contracted rate between a retailer and a carrier contracted for the at least one eligible load.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The supply chain management computing system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the load board tool determines the winning bids for the spot market auction based at least in part on predefined rules.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The supply chain management computing system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the load board tool will not accept bids for an eligible load from carrier computing devices associated with contracted carriers that denied the eligible load.</claim-text></claim></claims></us-patent-application>