<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007159A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007159</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363581</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>235</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>232</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>2354</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>23216</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>23219</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>2353</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">ADAPTIVE FRONT FLASH VIEW</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Snap Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Al Majid</last-name><first-name>Newar Husam</first-name><address><city>New York</city><state>NY</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Barron</last-name><first-name>Christine</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Chan</last-name><first-name>Ryan</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Saint-Preux</last-name><first-name>Bertrand</first-name><address><city>Hollywood</city><state>FL</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Sternstein</last-name><first-name>Shoshana</first-name><address><city>Great Neck</city><state>NY</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The technical problem of enhancing the quality of an image captured in low light conditions by a front facing camera is addressed by providing an adaptive front flash system. An adaptive front flash system automatically adjusts configuration parameters of an overlaid view that operates in lieu of a front flash, termed a front flash view. The configuration parameters are adjusted based on characteristics of the output of the digital image sensor of the front facing camera. Examples of configuration parameters of the front flash view include one or more of brightness of the display, color temperature of the front flash view, and transparency of the front flash view.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="224.28mm" wi="156.04mm" file="US20230007159A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="240.28mm" wi="158.07mm" file="US20230007159A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="213.53mm" wi="155.11mm" file="US20230007159A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="185.76mm" wi="159.68mm" file="US20230007159A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="231.39mm" wi="149.94mm" file="US20230007159A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="235.03mm" wi="154.26mm" file="US20230007159A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="236.22mm" wi="119.04mm" file="US20230007159A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="244.94mm" wi="128.78mm" file="US20230007159A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="244.94mm" wi="128.78mm" file="US20230007159A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="244.94mm" wi="128.78mm" file="US20230007159A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="244.94mm" wi="130.98mm" file="US20230007159A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="244.94mm" wi="130.98mm" file="US20230007159A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="245.03mm" wi="169.84mm" file="US20230007159A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present disclosure relates generally to creating and manipulating digital content.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The popularity of computer-implemented programs that permit users to access and interact with content and other users online continues to grow. Various computer-implemented applications exist that permit users to share content with other users through messaging clients. Some of such computer-implemented applications, termed apps, can be designed to run on a mobile device such as a phone, a tablet, or a wearable device, while having a backend service provided on a server computer system to perform operations that may require resources greater than is reasonable to perform at a client device (for example, storing large amounts of data or performing computationally expensive processing). The input/output I/O components of a client device often include one or more cameras (with still image/photograph and video capabilities) including a front camera (also referred to as a front facing camera) on a front surface of the client device and a rear camera on a rear surface of the client device. An application executing at a client device may provide a user interface (UI) that allows a user to capture a photo of themselves (termed, informally, a selfie) using a front facing camera of the client device, and to share the captured image to other devices. Users often take selfies in low light during the night time or early morning, which may produce images that are not shared with others or even discarded.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS</heading><p id="p-0004" num="0003">In the drawings, which are not necessarily drawn to scale, like numerals may describe similar components in different views. To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the figure number in which that element is first introduced. Some embodiments are illustrated by way of example, and not limitation, in the figures of the accompanying drawings in which:</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagrammatic representation of a networked environment in which an adaptive front flash system may be deployed, in accordance with some examples.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagrammatic representation of a messaging system, in accordance with some examples, that has both client-side and server-side functionality, and that includes an adaptive front flash system.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagrammatic representation of a data structure as maintained in a database, in accordance with some examples.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagrammatic representation of a message, in accordance with some examples.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart for an access-limiting process, in accordance with some examples.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of a method for enhancing users' experience of utilizing a camera of a client device, in accordance with some examples.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a front flash view, in accordance with some examples.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a front flash view with configuration parameters adjusted by increasing transparency of the front flash view, in accordance with some examples.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a front flash view with configuration parameters adjusted by changing the color warmth of the front flash view, in accordance with some examples.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates a camera view user interface that includes a ring flash view, in accordance with some examples.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates an image captured using an adaptive front flash view, in accordance with some examples.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a diagrammatic representation of a machine in the form of a computer system within which a set of instructions may be executed for causing the machine to perform any one or more of the methodologies discussed herein, in accordance with some examples.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">Embodiments of the present disclosure improve the functionality of electronic software and systems by enhancing users' experience of utilizing a camera of a client device. As mentioned above, taking photos in low light may produce images that may be deemed by a user as not worth saving or sharing with others. A rear camera can be used with a flash device, e.g., a light emitting diode (LED) flash that uses a semiconductor device to illuminate a scene. A front facing camera is often provided at a mobile device without a flash device. In order to compensate, at least to a degree, for the lack of a flash device, a mobile device may execute a front flash camera application that can illuminate the scene, the user's face for example, by displaying an overlaid view and increasing the brightness of the display of the associated client device, also referred to as the screen brightness.</p><p id="p-0018" num="0017">The technical problem of enhancing the quality of an image captured in low light conditions by a front facing camera, which may be provided without a hardware flash device such as a LED flash, is addressed by automatically adjusting configuration parameters of an overlaid view that operates in lieu of a front flash in that it provides increased illumination of a scene being detected by a digital image sensor of the front facing camera. For the purposes of this description, an overlaid view that operates in lieu of a front flash is referred to as a front flash view. A front flash view that can be adapted to make the scene appear in the best light by automatically adjusting the configuration parameters of the front flash view based on characteristics of the output of the digital image sensor of the front facing camera is referred to as an adaptive front flash view, for the purposes of this description. An example of a front flash view is shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, which illustrates a camera view UI <b>700</b>. For the purposes of this description, a camera view UI is a UI that displays the output of the digital image sensor of a camera and that may also display various user selectable elements, such as, for example, a user selectable element actionable to capture the output of the digital image sensor of the camera, that can be activated by touching the area of the screen that displays the user selectable element. In <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the camera view UI <b>700</b> is shown with the adaptive front flash view activated, and the output of the digital image sensor of the camera is overlaid by a front flash view, which is shown in area <b>710</b> with a diagonal lines pattern.</p><p id="p-0019" num="0018">Examples of configuration parameters of the front flash view include brightness of the screen, color temperature of the front flash view, transparency of the front flash view, and other parameters. Transparency of the front flash view controls the intensity of the illumination of the subject, where lower transparency of the front flash view results in greater illumination of the subject. For example, in <figref idref="DRAWINGS">FIG. <b>7</b></figref> the transparency of the front flash view is high, which results in the output of the digital image sensor of the camera&#x2014;a face shown in the area <b>710</b>&#x2014;being barely visible. <figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a camera view UI <b>800</b>, in which the adaptive front flash view has greater transparency, in which case the output of the digital image sensor of the camera is more visible in area <b>810</b>, as compared to a face shown in the are <b>710</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, while the output of the digital image sensor of the camera is overlaid by the front flash view.</p><p id="p-0020" num="0019">Color temperature is a way to describe the light appearance provided by a light source. For example, cool colors are more bluish, while warm colors are more yellowish. In <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the overlaid front flash view is shown in the area <b>910</b> with a crossing diagonal lines pattern to indicate a different color warmth of the front flash view as compared to the color warmth of the front flash view shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> and <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0021" num="0020">The characteristics of the output of the digital image sensor of the front facing camera that are used to automatically adjust the configuration parameters of the front flash view include the histogram of the image corresponding to the output of the digital image sensor of the front facing camera, which indicates the number of pixels of each brightness value in the image. In an image where dark tones dominate, the histogram is skewed to the left, indicating that the image is underexposed. Underexposure occurs when not enough light is hitting the camera sensor. Underexposed images appear too dark. In an image where light tones dominate, the histogram is skewed to the right. Overexposure occurs when not enough light is hitting the camera sensor. Overexposed images appear too light. Another example of the characteristics of the output of the digital image sensor of the front facing camera that are used to automatically adjust the configuration parameters of the front flash view is a set of respective values, assigned to pixels, that represent respective colors.</p><p id="p-0022" num="0021">To automatically adjust the configuration parameters of the front flash view, the characteristics of the output of the digital image sensor of the front facing camera that can be used as follows. For example, if the histogram of the image corresponding to the output of the digital image sensor of the front facing camera indicates underexposure, the configuration parameters of the front flash view can be adjusted by increasing the brightness of the screen and/or decreasing transparency of the front flash view. The degree to which the brightness of the screen is increased and the degree to which the transparency of the front flash view is decreased, as well as whether one or both of these configuration parameters are adjusted, may be made dependent on the degree of the detected underexposure. In another example, if the histogram of the image corresponding to the output of the digital image sensor of the front facing camera indicates overexposure, the configuration parameters of the front flash view can be adjusted by decreasing the brightness of the screen and/or increasing transparency of the front flash view. The degree to which the brightness of the screen is decreased and the degree to which the transparency of the front flash view is increased, as well as whether one or both of these configuration parameters are adjusted, may be made dependent on the degree of the detected overexposure.</p><p id="p-0023" num="0022">A system configured to provide an adaptive front flash view may be referred to as an adaptive front flash system. In some examples, the adaptive front flash system is configured to detect a person's face in the image that corresponds to the output of the digital image sensor and adjust the configuration parameters of the front flash view based on the characteristics of the portion of the image that represents the detected face. The adaptive front flash system may request a permission from a user to detect a face and proceed to detect a face only after obtaining the permission.</p><p id="p-0024" num="0023">In some examples, the adaptive front flash system uses characteristics of the output of the digital image sensor of the front facing camera to automatically adjust the configuration parameters of the front flash view by determining the color tone of the detected face based on respective values of pixels of the image corresponding to the face portion of the output of the digital image sensor of the front facing camera. The respective values of pixels of the face may indicate predominance of a blue color tone in the face, which may result from the face being illuminated by a computer screen, for example. In response to detecting predominance of a blue color tone in the face, the adaptive front flash system increases the color temperature of the front flash view to make it more yellow or orange. In response to detecting predominance of a yellow color tone in the face, which may result from having a navy blue wallpaper in the background, for example, the adaptive front flash system decreases the color temperature of the front flash view to make it less yellow or to make it white or even light blue.</p><p id="p-0025" num="0024">An adaptive front flash view, in some examples, is a view, which is displayed as overlaid over a camera view UI at the same time as when a user selectable element actionable to capture the output of the digital image sensor of the camera is activated. As mentioned above, in this example, the front flash view may have the brightness and transparency that results in obscuring the output of the digital image sensor of the camera in the camera view UI. A front flash view that is displayed as overlaid substantially over the entire area of the camera view UI, including the central area of the camera view UI, when a user selectable element actionable to capture the output of the digital image sensor of the camera is activated, is referred to as a blanket front flash view.</p><p id="p-0026" num="0025">An example of an adaptive front flash view is an illuminating border added to the camera view UI. The illuminating border that acts as a ring flash for the front facing camera is termed a ring flash view for the purposes of this description. A ring flash view can be provided in the form of a predetermined area along the perimeter of the camera view UI, as can be seen in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, which is described in more detail further below. In some examples, a ring flash view is constructed as a single view overlaid over the camera view UI that displays the output of the digital image sensor of a camera, where such view is transparent (and therefore allows a user to see the output of the digital image sensor) except for in the certain area along the perimeter of the camera view UI. In another example, a ring flash view is constructed as several views, such as one for each side of the camera view UI, where each view is overlaid over a respective area along the perimeter of the camera view UI. A ring flash view may be automatically generated and presented in the camera view UI when the digital sensor of a front facing camera detects a low light indication based on intensity of incident light detected by the digital image sensor of the camera. While a blanket front flash view is displayed when a user selectable element actionable to capture the output of the digital image sensor of the camera is activated, a ring flash view is displayed and is viewable by a user before a user selectable element actionable to capture the output of the digital image sensor of the camera is activated, such that the output of the digital image sensor of the camera reflects the additional illumination provided by the ring flash view.</p><p id="p-0027" num="0026">In some examples, an adaptive front flash view is used in the context of a messaging system that hosts a backend service for an associated messaging client. A messaging system is described further below with reference to <figref idref="DRAWINGS">FIG. <b>1</b>-<b>5</b></figref>. While the adaptive front flash view is described below in the context of a messaging system, the methodologies described herein can be used advantageously in various computer implemented applications that permit the use of a camera of the associated client device</p><p id="p-0028" num="0027">Networked Computing Environment</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example messaging system <b>100</b> for exchanging data (e.g., messages and associated content) over a network. The messaging system <b>100</b> includes multiple instances of a client device <b>102</b>, each of which hosts a number of applications, including a messaging client <b>104</b>. Each messaging client <b>104</b> is communicatively coupled to other instances of the messaging client <b>104</b> and a messaging server system <b>108</b> via a network <b>106</b> (e.g., the Internet).</p><p id="p-0030" num="0029">A messaging client <b>104</b> is able to communicate and exchange data with another messaging client <b>104</b> and with the messaging server system <b>108</b> via the network <b>106</b>. The data exchanged between messaging client <b>104</b>, and between a messaging client <b>104</b> and the messaging server system <b>108</b>, includes functions (e.g., commands to invoke functions) as well as payload data (e.g., text, audio, video or other multimedia data).</p><p id="p-0031" num="0030">The messaging server system <b>108</b> provides server-side functionality via the network <b>106</b> to a particular messaging client <b>104</b>. While certain functions of the messaging system <b>100</b> are described herein as being performed by either a messaging client <b>104</b> or by the messaging server system <b>108</b>, the location of certain functionality either within the messaging client <b>104</b> or the messaging server system <b>108</b> may be a design choice. For example, it may be technically preferable to initially deploy certain technology and functionality within the messaging server system <b>108</b> but to later migrate this technology and functionality to the messaging client <b>104</b> where a client device <b>102</b> has sufficient processing capacity.</p><p id="p-0032" num="0031">The messaging server system <b>108</b> supports various services and operations that are provided to the messaging client <b>104</b>. Such operations include transmitting data to, receiving data from, and processing data generated by the messaging client <b>104</b>. This data may include, as examples, message content, client device information, geolocation information, media augmentation and overlays, message content persistence conditions, social network information, live event information, as well as images and video captured with a front facing camera of an associated client device using an adaptive front flash view. Data exchanges within the messaging system <b>100</b> are invoked and controlled through functions available via user interfaces (UIs) of the messaging client <b>104</b>. The messaging client <b>104</b> presents a camera view UI that displays the output of a digital image sensor of a camera provided with the client device <b>102</b>, and, also, displays various user selectable elements that can be activated by touching the area of the screen that displays the user selectable element. The messaging client <b>104</b>, in some examples, includes an adaptive front flash view system that automatically adjusts configuration parameters of a front flash view based on characteristics of the output of the digital image sensor of the front facing camera. The messaging client <b>104</b> provides functionality permitting a user to communicate, to another client device, an image captured while the front flash view is displayed with the adjusted configuration parameters as an overlay in the camera view UI.</p><p id="p-0033" num="0032">Turning now specifically to the messaging server system <b>108</b>, an Application Program Interface (API) server <b>110</b> is coupled to, and provides a programmatic interface to, application servers <b>112</b>. The application servers <b>112</b> are communicatively coupled to a database server <b>118</b>, which facilitates access to a database <b>120</b> that stores data associated with messages processed by the application servers <b>112</b>. Similarly, a web server <b>124</b> is coupled to the application servers <b>112</b>, and provides web-based interfaces to the application servers <b>112</b>. To this end, the web server <b>124</b> processes incoming network requests over the Hypertext Transfer Protocol (HTTP) and several other related protocols.</p><p id="p-0034" num="0033">The Application Program Interface (API) server <b>110</b> receives and transmits message data (e.g., commands and message payloads) between the client device <b>102</b> and the application servers <b>112</b>. Specifically, the Application Program Interface (API) server <b>110</b> provides a set of interfaces (e.g., routines and protocols) that can be called or queried by the messaging client <b>104</b> in order to invoke functionality of the application servers <b>112</b>. The Application Program Interface (API) server <b>110</b> exposes various functions supported by the application servers <b>112</b>, including account registration, login functionality, the sending of messages, via the application servers <b>112</b>, from a particular messaging client <b>104</b> to another messaging client <b>104</b>, the sending of media files (e.g., images or video) from a messaging client <b>104</b> to a messaging server <b>114</b>, and for possible access by another messaging client <b>104</b>, the settings of a collection of media data (e.g., story), the retrieval of a list of friends of a user of a client device <b>102</b>, the retrieval of such collections, the retrieval of messages and content, the addition and deletion of entities (e.g., friends) to an entity graph (e.g., a social graph), the location of friends within a social graph, and opening an application event (e.g., relating to the messaging client <b>104</b>).</p><p id="p-0035" num="0034">The application servers <b>112</b> host a number of server applications and subsystems, including for example a messaging server <b>114</b>, an image processing server <b>116</b>, and a social network server <b>122</b>. The messaging server <b>114</b> implements a number of message processing technologies and functions, particularly related to the aggregation and other processing of content (e.g., textual and multimedia content) included in messages received from multiple instances of the messaging client <b>104</b>. As will be described in further detail, the text and media content from multiple sources may be aggregated into collections of content (e.g., called stories or galleries). These collections are then made available to the messaging client <b>104</b>. Other processor and memory intensive processing of data may also be performed server-side by the messaging server <b>114</b>, in view of the hardware requirements for such processing.</p><p id="p-0036" num="0035">The application servers <b>112</b> also include an image processing server <b>116</b> that is dedicated to performing various image processing operations, typically with respect to images or video within the payload of a message sent from or received at the messaging server <b>114</b>. Some of the various image processing operations may be performed by various AR components, which can be hosted or supported by the image processing server <b>116</b>.</p><p id="p-0037" num="0036">The social network server <b>122</b> supports various social networking functions and services and makes these functions and services available to the messaging server <b>114</b>. To this end, the social network server <b>122</b> maintains and accesses an entity graph <b>306</b> (as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) within the database <b>120</b>. Examples of functions and services supported by the social network server <b>122</b> include the identification of other users of the messaging system <b>100</b> with which a particular user has a &#x201c;friend&#x201d; relationship or is &#x201c;following,&#x201d; and also the identification of other entities and interests of a particular user.</p><p id="p-0038" num="0037">System Architecture</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating further details regarding the messaging system <b>100</b>, according to some examples. Specifically, the messaging system <b>100</b> is shown to comprise the messaging client <b>104</b> and the application servers <b>112</b>. The messaging system <b>100</b> embodies a number of subsystems, which are supported on the client-side by the messaging client <b>104</b>, and on the sever-side by the application servers <b>112</b>. These subsystems include, for example, an ephemeral timer system <b>202</b>, a collection management system <b>204</b>, an augmentation system <b>206</b>, a camera view UI system <b>208</b>, and an adaptive front flash system <b>210</b>.</p><p id="p-0040" num="0039">The camera view UI system <b>208</b> is configured to cause presentation of a camera view UI, which displays the output of a digital image sensor of a camera provided with an associated client device, as well as user selectable elements that permit users to invoke various functionality related to the operation of the camera. For example, the camera view UI system <b>208</b> generates user selectable elements that can be engaged to capture the output of the digital image sensor of a camera as an image, to start and stop a video recording, to switch between a rear camera and a front facing camera, as well as other user selectable elements.</p><p id="p-0041" num="0040">The adaptive front flash system <b>210</b>, which is included in or cooperates with the camera view UI system <b>208</b>, is configured to receive or generate an image corresponding to the output of a digital image sensor of a camera provided with an associated client device, determine one or more characteristics of the output of the digital image sensor of the front facing camera, and, based on the derived characteristics, adjust configuration parameters of the front flash view.</p><p id="p-0042" num="0041">The ephemeral timer system <b>202</b> is responsible for enforcing the temporary or time-limited access to content by the messaging client <b>104</b> and the messaging server <b>114</b>. The ephemeral timer system <b>202</b> incorporates a number of timers that, based on duration and display parameters associated with a message, or collection of messages (e.g., a story), selectively enable access (e.g., for presentation and display) to messages and associated content via the messaging client <b>104</b>. Further details regarding the operation of the ephemeral timer system <b>202</b> are provided below.</p><p id="p-0043" num="0042">The collection management system <b>204</b> is responsible for managing sets or collections of media (e.g., collections of text, image, video, and audio data). A collection of content (e.g., messages, including images, video, text, and audio) may be organized into an &#x201c;event gallery&#x201d; or an &#x201c;event story.&#x201d; Such a collection may be made available for a specified time period, such as the duration of an event to which the content relates. For example, content relating to a music concert may be made available as a &#x201c;story&#x201d; for the duration of that music concert. In a further example, a collection may include content, which was generated using one or more AR components. The collection management system <b>204</b> may also be responsible for publishing an icon that provides notification of the existence of a particular collection to the user interface of the messaging client <b>104</b>.</p><p id="p-0044" num="0043">The collection management system <b>204</b> furthermore includes a curation interface <b>212</b> that allows a collection manager to manage and curate a particular collection of content. For example, the curation interface <b>212</b> enables an event organizer to curate a collection of content relating to a specific event (e.g., delete inappropriate content or redundant messages). Additionally, the collection management system <b>204</b> employs machine vision (or image recognition technology) and content rules to automatically curate a content collection. In certain examples, compensation may be paid to a user for the inclusion of user-generated content into a collection. In such cases, the collection management system <b>204</b> operates to automatically make payments to such users for the use of their content.</p><p id="p-0045" num="0044">The augmentation system <b>206</b> provides various functions that enable a user to augment (e.g., annotate or otherwise modify or edit) media content, which may be associated with a message. For example, the augmentation system <b>206</b> provides functions related to the generation and publishing of media overlays for messages processed by the messaging system <b>100</b>. The media overlays may be stored in the database <b>120</b> and accessed through the database server <b>118</b>.</p><p id="p-0046" num="0045">In some examples, the augmentation system <b>206</b> is configured to provide access to AR components that can be implemented using a programming language suitable for application development, such as, e.g., JavaScript or Java and that are identified in the messaging server system by respective AR component identifiers. An AR component may include or reference various image processing operations corresponding to an image modification, filter, media overlay, transformation, and the like. These image processing operations can provide an interactive experience of a real-world environment, where objects, surfaces, backgrounds, lighting etc., captured by a digital image sensor or a camera, are enhanced by computer-generated perceptual information. In this context an AR component comprises the collection of data, parameters, and other assets needed to apply a selected augmented reality experience to an image or a video feed.</p><p id="p-0047" num="0046">In some embodiments, an AR component includes modules configured to modify or transform image data presented within a graphical user interface (GUI) of a client device in some way. For example, complex additions or transformations to the content images may be performed using AR component data, such as adding rabbit ears to the head of a person in a video clip, adding floating hearts with background coloring to a video clip, altering the proportions of a person's features within a video clip, or many numerous other such transformations. This includes both real-time modifications that modify an image as it is captured using a camera associated with a client device and then displayed on a screen of the client device with the AR component modifications, as well as modifications to stored content, such as video clips in a gallery that may be modified using AR components.</p><p id="p-0048" num="0047">Various augmented reality functionality that may be provided by an AR component include detection of objects (e.g. faces, hands, bodies, cats, dogs, surfaces, objects, etc.), tracking of such objects as they leave, enter, and move around the field of view in video frames, and the modification or transformation of such objects as they are tracked. In various embodiments, different methods for achieving such transformations may be used. For example, some embodiments may involve generating a 3D mesh model of the object or objects, and using transformations and animated textures of the model within the video to achieve the transformation. In other embodiments, tracking of points on an object may be used to place an image or texture, which may be two dimensional or three dimensional, at the tracked position. In still further embodiments, neural network analysis of video frames may be used to place images, models, or textures in content (e.g. images or frames of video). AR component data thus refers to both to the images, models, and textures used to create transformations in content, as well as to additional modeling and analysis information needed to achieve such transformations with object detection, tracking, and placement.</p><p id="p-0049" num="0048">Data Architecture</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram illustrating data structures <b>300</b>, which may be stored in the database <b>120</b> of the messaging server system <b>108</b>, according to certain examples. While the content of the database <b>120</b> is shown to comprise a number of tables, it will be appreciated that the data could be stored in other types of data structures (e.g., as an object-oriented database).</p><p id="p-0051" num="0050">The database <b>120</b> includes message data stored within a message table <b>302</b>. This message data includes, for any particular one message, at least message sender data, message recipient (or receiver) data, and a payload. The payload of a message may include content generated using an adaptive front flash view. Further details regarding information that may be included in a message, and included within the message data stored in the message table <b>302</b> is described below with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0052" num="0051">An entity table <b>304</b> stores entity data, and is linked (e.g., referentially) to an entity graph <b>306</b> and profile data <b>308</b>. Entities for which records are maintained within the entity table <b>304</b> may include individuals, corporate entities, organizations, objects, places, events, and so forth. Regardless of entity type, any entity regarding which the messaging server system <b>108</b> stores data may be a recognized entity. Each entity is provided with a unique identifier, as well as an entity type identifier (not shown).</p><p id="p-0053" num="0052">The entity graph <b>306</b> stores information regarding relationships and associations between entities. Such relationships may be social, professional (e.g., work at a common corporation or organization) interested-based or activity-based, merely for example. With reference to the functionality provided by the AR component, the entity graph <b>306</b> stores information that can be used, in cases where the AR component is configured to permit using a portrait image of a user other than that of the user controlling the associated client device for modifying the target media content object, to determine a further profile that is connected to the profile representing the user controlling the associated client device. As mentioned above, the portrait image of a user may be stored in a user profile representing the user in the messaging system.</p><p id="p-0054" num="0053">The profile data <b>308</b> stores multiple types of profile data about a particular entity. The profile data <b>308</b> may be selectively used and presented to other users of the messaging system <b>100</b>, based on privacy settings specified by a particular entity. Where the entity is an individual, the profile data <b>308</b> includes, for example, a user name, telephone number, address, settings (e.g., notification and privacy settings), as well as a user-selected avatar representation (or collection of such avatar representations). A particular user may then selectively include one or more of these avatar representations within the content of messages communicated via the messaging system <b>100</b>, and on map interfaces displayed by messaging clients <b>104</b> to other users. The collection of avatar representations may include &#x201c;status avatars,&#x201d; which present a graphical representation of a status or activity that the user may select to communicate at a particular time.</p><p id="p-0055" num="0054">The database <b>120</b> also stores augmentation data in an augmentation table <b>310</b>. The augmentation data is associated with and applied to videos (for which data is stored in a video table <b>314</b>) and images (for which data is stored in an image table <b>316</b>). In some examples, the augmentation data is used by various AR components, including the AR component. An example of augmentation data is a target media content object, which may be associated with an AR component and used to generate an AR experience for a user, as described above.</p><p id="p-0056" num="0055">Another example of augmentation data is augmented reality (AR) tools that can be used in AR components to effectuate image transformations. Image transformations include real-time modifications, which modify an image (e.g., a video frame) as it is captured using a digital image sensor of a client device <b>102</b>. The modified image is displayed on a screen of the client device <b>102</b> with the modifications. AR tools may also be used to apply modifications to stored content, such as video clips or still images stored in a gallery. In a client device <b>102</b> with access to multiple AR tools, a user can apply different AR tools (e.g., by engaging different AR components configured to utilize different AR tools) to a single video clip to see how the different AR tools would modify the same video clip. For example, multiple AR tools that apply different pseudorandom movement models can be applied to the same captured content by selecting different AR tools for the same captured content. Similarly, real-time video capture may be used with an illustrated modification to show how video images currently being captured by a digital image sensor of a camera provided with a client device <b>102</b> would modify the captured data. Such data may simply be displayed on the screen and not stored in memory, or the content captured by digital image sensor may be recorded and stored in memory with or without the modifications (or both). A messaging client <b>104</b> can be configured to include a preview feature that can show how modifications produced by different AR tools will look, within different windows in a display at the same time. This can, for example, permit a user to view multiple windows with different pseudorandom animations presented on a display at the same time.</p><p id="p-0057" num="0056">In some examples, when a particular modification is selected along with content to be transformed, elements to be transformed are identified by the computing device, and then detected and tracked if they are present in the frames of the video. The elements of the object are modified according to the request for modification, thus transforming the frames of the video stream. Transformation of frames of a video stream can be performed by different methods for different kinds of transformation. For example, for transformations of frames mostly referring to changing forms of object's elements characteristic points for each element of an object are calculated (e.g., using an Active Shape Model (ASM) or other known methods). Then, a mesh based on the characteristic points is generated for each of the at least one element of the object. This mesh used in the following stage of tracking the elements of the object in the video stream. In the process of tracking, the mentioned mesh for each element is aligned with a position of each element. Then, additional points are generated on the mesh. A first set of first points is generated for each element based on a request for modification, and a set of second points is generated for each element based on the set of first points and the request for modification. Then, the frames of the video stream can be transformed by modifying the elements of the object on the basis of the sets of first and second points and the mesh. In such method, a background of the modified object can be changed or distorted as well by tracking and modifying the background.</p><p id="p-0058" num="0057">In some examples, transformations changing some areas of an object using its elements can be performed by calculating characteristic points for each element of an object and generating a mesh based on the calculated characteristic points. Points are generated on the mesh, and then various areas based on the points are generated. The elements of the object are then tracked by aligning the area for each element with a position for each of the at least one element, and properties of the areas can be modified based on the request for modification, thus transforming the frames of the video stream. Depending on the specific request for modification properties of the mentioned areas can be transformed in different ways. Such modifications may involve changing color of areas; removing at least some part of areas from the frames of the video stream; including one or more new objects into areas which are based on a request for modification; and modifying or distorting the elements of an area or object. In various embodiments, any combination of such modifications or other similar modifications may be used. For certain models to be animated, some characteristic points can be selected as control points to be used in determining the entire state-space of options for the model animation.</p><p id="p-0059" num="0058">A story table <b>312</b> stores data regarding collections of messages and associated image, video, or audio data, which are compiled into a collection (e.g., a story or a gallery). The creation of a particular collection may be initiated by a particular user (e.g., each user for which a record is maintained in the entity table <b>304</b>). A user may create a &#x201c;personal story&#x201d; in the form of a collection of content that has been created and sent/broadcast by that user. To this end, the user interface of the messaging client <b>104</b> may include an icon that is user-selectable to enable a sending user to add specific content to his or her personal story. In some examples, the story table <b>312</b> stores one or more images or videos that were created using an adaptive front flash view.</p><p id="p-0060" num="0059">A collection may also constitute a &#x201c;live story,&#x201d; which is a collection of content from multiple users that is created manually, automatically, or using a combination of manual and automatic techniques. For example, a &#x201c;live story&#x201d; may constitute a curated stream of user-submitted content from varies locations and events. Users whose client devices have location services enabled and are at a common location event at a particular time may, for example, be presented with an option, via a user interface of the messaging client <b>104</b>, to contribute content to a particular live story. The live story may be identified to the user by the messaging client <b>104</b>, based on his or her location. The end result is a &#x201c;live story&#x201d; told from a community perspective.</p><p id="p-0061" num="0060">A further type of content collection is known as a &#x201c;location story,&#x201d; which enables a user whose client device <b>102</b> is located within a specific geographic location (e.g., on a college or university campus) to contribute to a particular collection. In some examples, a contribution to a location story may require a second degree of authentication to verify that the end user belongs to a specific organization or other entity (e.g., is a student on the university campus).</p><p id="p-0062" num="0061">As mentioned above, the video table <b>314</b> stores video data that, in some examples, is associated with messages for which records are maintained within the message table <b>302</b>. Similarly, the image table <b>316</b> stores image data associated with messages for which message data is stored in the entity table <b>304</b>. The entity table <b>304</b> may associate various augmentations from the augmentation table <b>310</b> with various images and videos stored in the image table <b>316</b> and the video table <b>314</b>.</p><p id="p-0063" num="0062">Data Communications Architecture</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram illustrating a structure of a message <b>400</b>, according to some examples, generated by a messaging client <b>104</b> for communication to a further messaging client <b>104</b> or the messaging server <b>114</b>. The content of a particular message <b>400</b> is used to populate the message table <b>302</b> stored within the database <b>120</b>, accessible by the messaging server <b>114</b>. Similarly, the content of a message <b>400</b> is stored in memory as &#x201c;in-transit&#x201d; or &#x201c;in-flight&#x201d; data of the client device <b>102</b> or the application servers <b>112</b>. The content of a message <b>400</b>, in some examples, includes an image or a video that was created using the AR component. A message <b>400</b> is shown to include the following example components:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0064">message identifier <b>402</b>: a unique identifier that identifies the message <b>400</b>.</li>        <li id="ul0002-0002" num="0065">message text payload <b>404</b>: text, to be generated by a user via a user interface of the client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0003" num="0066">message image payload <b>406</b>: image data, captured by a camera component of a client device <b>102</b> or retrieved from a memory component of a client device <b>102</b>, and that is included in the message <b>400</b>. Image data for a sent or received message <b>400</b> may be stored in the image table <b>316</b>. The image data may include content generated using an adaptive front flash view.</li>        <li id="ul0002-0004" num="0067">message video payload <b>408</b>: video data, captured by a camera component or retrieved from a memory component of the client device <b>102</b>, and that is included in the message <b>400</b>. Video data for a sent or received message <b>400</b> may be stored in the video table <b>314</b>. The video data may include content generated using an adaptive front flash view.</li>        <li id="ul0002-0005" num="0068">message audio payload <b>410</b>: audio data, captured by a microphone or retrieved from a memory component of the client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0006" num="0069">message augmentation data <b>412</b>: augmentation data (e.g., filters, stickers, or other annotations or enhancements) that represents augmentations to be applied to message image payload <b>406</b>, message video payload <b>408</b>, message audio payload <b>410</b> of the message <b>400</b>. Augmentation data for a sent or received message <b>400</b> may be stored in the augmentation table <b>310</b>.</li>        <li id="ul0002-0007" num="0070">message duration parameter <b>414</b>: parameter value indicating, in seconds, the amount of time for which content of the message (e.g., the message image payload <b>406</b>, message video payload <b>408</b>, message audio payload <b>410</b>) is to be presented or made accessible to a user via the messaging client <b>104</b>.</li>        <li id="ul0002-0008" num="0071">message geolocation parameter <b>416</b>: geolocation data (e.g., latitudinal and longitudinal coordinates) associated with the content payload of the message. Multiple message geolocation parameter <b>416</b> values may be included in the payload, each of these parameter values being associated with respect to content items included in the content (e.g., a specific image into within the message image payload <b>406</b>, or a specific video in the message video payload <b>408</b>).</li>        <li id="ul0002-0009" num="0072">message story identifier <b>418</b>: identifier values identifying one or more content collections (e.g., &#x201c;stories&#x201d; identified in the story table <b>312</b>) with which a particular content item in the message image payload <b>406</b> of the message <b>400</b> is associated. For example, multiple images within the message image payload <b>406</b> may each be associated with multiple content collections using identifier values.</li>        <li id="ul0002-0010" num="0073">message tag <b>420</b>: each message <b>400</b> may be tagged with multiple tags, each of which is indicative of the subject matter of content included in the message payload. For example, where a particular image included in the message image payload <b>406</b> depicts an animal (e.g., a lion), a tag value may be included within the message tag <b>420</b> that is indicative of the relevant animal. Tag values may be generated manually, based on user input, or may be automatically generated using, for example, image recognition.</li>        <li id="ul0002-0011" num="0074">message sender identifier <b>422</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the Client device <b>102</b> on which the message <b>400</b> was generated and from which the message <b>400</b> was sent.</li>        <li id="ul0002-0012" num="0075">message receiver identifier <b>424</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the client device <b>102</b> to which the message <b>400</b> is addressed.</li>    </ul>    </li></ul></p><p id="p-0065" num="0076">The contents (e.g., values) of the various components of message <b>400</b> may be pointers to locations in tables within which content data values are stored. For example, an image value in the message image payload <b>406</b> may be a pointer to (or address of) a location within an image table <b>316</b>. Similarly, values within the message video payload <b>408</b> may point to data stored within a video table <b>314</b>, values stored within the message augmentations <b>412</b> may point to data stored in an augmentation table <b>310</b>, values stored within the message story identifier <b>418</b> may point to data stored in a story table <b>312</b>, and values stored within the message sender identifier <b>422</b> and the message receiver identifier <b>424</b> may point to user records stored within an entity table <b>304</b>.</p><p id="p-0066" num="0077">Time-Based Access Limitation Architecture</p><p id="p-0067" num="0078"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram illustrating an access-limiting process <b>500</b>, in terms of which access to content (e.g., an ephemeral message <b>502</b>, and associated multimedia payload of data) or a content collection (e.g., an ephemeral message group <b>504</b>) may be time-limited (e.g., made ephemeral). The content of an ephemeral message <b>502</b>, in some examples, includes an image or a video that was created using an adaptive front flash view.</p><p id="p-0068" num="0079">An ephemeral message <b>502</b> is shown to be associated with a message duration parameter <b>506</b>, the value of which determines an amount of time that the ephemeral message <b>502</b> will be displayed to a receiving user of the ephemeral message <b>502</b> by the messaging client <b>104</b>. In some examples, an ephemeral message <b>502</b> is viewable by a receiving user for up to a maximum of 10 seconds, depending on the amount of time that the sending user specifies using the message duration parameter <b>506</b>.</p><p id="p-0069" num="0080">The message duration parameter <b>506</b> and the message receiver identifier <b>424</b> are shown to be inputs to a message timer <b>512</b>, which is responsible for determining the amount of time that the ephemeral message <b>502</b> is shown to a particular receiving user identified by the message receiver identifier <b>424</b>. In particular, the ephemeral message <b>502</b> will only be shown to the relevant receiving user for a time period determined by the value of the message duration parameter <b>506</b>. The message timer <b>512</b> is shown to provide output to a more generalized ephemeral timer system <b>202</b>, which is responsible for the overall timing of display of content (e.g., an ephemeral message <b>502</b>) to a receiving user.</p><p id="p-0070" num="0081">The ephemeral message <b>502</b> is shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to be included within an ephemeral message group <b>504</b> (e.g., a collection of messages in a personal story, or an event story). The ephemeral message group <b>504</b> has an associated group duration parameter <b>508</b>, a value of which determines a time duration for which the ephemeral message group <b>504</b> is presented and accessible to users of the messaging system <b>100</b>. The group duration parameter <b>508</b>, for example, may be the duration of a music concert, where the ephemeral message group <b>504</b> is a collection of content pertaining to that concert. Alternatively, a user (either the owning user or a curator user) may specify the value for the group duration parameter <b>508</b> when performing the setup and creation of the ephemeral message group <b>504</b>.</p><p id="p-0071" num="0082">Additionally, each ephemeral message <b>502</b> within the ephemeral message group <b>504</b> has an associated group participation parameter <b>510</b>, a value of which determines the duration of time for which the ephemeral message <b>502</b> will be accessible within the context of the ephemeral message group <b>504</b>. Accordingly, a particular ephemeral message group <b>504</b> may &#x201c;expire&#x201d; and become inaccessible within the context of the ephemeral message group <b>504</b>, prior to the ephemeral message group <b>504</b> itself expiring in terms of the group duration parameter <b>508</b>. The group duration parameter <b>508</b>, group participation parameter <b>510</b>, and message receiver identifier <b>424</b> each provide input to a group timer <b>514</b>, which operationally determines, firstly, whether a particular ephemeral message <b>502</b> of the ephemeral message group <b>504</b> will be displayed to a particular receiving user and, if so, for how long. Note that the ephemeral message group <b>504</b> is also aware of the identity of the particular receiving user as a result of the message receiver identifier <b>424</b>.</p><p id="p-0072" num="0083">Accordingly, the group timer <b>514</b> operationally controls the overall lifespan of an associated ephemeral message group <b>504</b>, as well as an individual ephemeral message <b>502</b> included in the ephemeral message group <b>504</b>. In some examples, each and every ephemeral message <b>502</b> within the ephemeral message group <b>504</b> remains viewable and accessible for a time period specified by the group duration parameter <b>508</b>. In a further example, a certain ephemeral message <b>502</b> may expire, within the context of ephemeral message group <b>504</b>, based on a group participation parameter <b>510</b>. Note that a message duration parameter <b>506</b> may still determine the duration of time for which a particular ephemeral message <b>502</b> is displayed to a receiving user, even within the context of the ephemeral message group <b>504</b>. Accordingly, the message duration parameter <b>506</b> determines the duration of time that a particular ephemeral message <b>502</b> is displayed to a receiving user, regardless of whether the receiving user is viewing that ephemeral message <b>502</b> inside or outside the context of an ephemeral message group <b>504</b>.</p><p id="p-0073" num="0084">The ephemeral timer system <b>202</b> may furthermore operationally remove a particular ephemeral message <b>502</b> from the ephemeral message group <b>504</b> based on a determination that it has exceeded an associated group participation parameter <b>510</b>. For example, when a sending user has established a group participation parameter <b>510</b> of 24 hours from posting, the ephemeral timer system <b>202</b> will remove the relevant ephemeral message <b>502</b> from the ephemeral message group <b>504</b> after the specified 24 hours. The ephemeral timer system <b>202</b> also operates to remove an ephemeral message group <b>504</b> when either the group participation parameter <b>510</b> for each and every ephemeral message <b>502</b> within the ephemeral message group <b>504</b> has expired, or when the ephemeral message group <b>504</b> itself has expired in terms of the group duration parameter <b>508</b>.</p><p id="p-0074" num="0085">In certain use cases, a creator of a particular ephemeral message group <b>504</b> may specify an indefinite group duration parameter <b>508</b>. In this case, the expiration of the group participation parameter <b>510</b> for the last remaining ephemeral message <b>502</b> within the ephemeral message group <b>504</b> will determine when the ephemeral message group <b>504</b> itself expires. In this case, a new ephemeral message <b>502</b>, added to the ephemeral message group <b>504</b>, with a new group participation parameter <b>510</b>, effectively extends the life of an ephemeral message group <b>504</b> to equal the value of the group participation parameter <b>510</b>.</p><p id="p-0075" num="0086">Responsive to the ephemeral timer system <b>202</b> determining that an ephemeral message group <b>504</b> has expired (e.g., is no longer accessible), the ephemeral timer system <b>202</b> communicates with the messaging system <b>100</b> (and, for example, specifically the messaging client <b>104</b>) to cause an indicium (e.g., an icon) associated with the relevant ephemeral message group <b>504</b> to no longer be displayed within a user interface of the messaging client <b>104</b>. Similarly, when the ephemeral timer system <b>202</b> determines that the message duration parameter <b>506</b> for a particular ephemeral message <b>502</b> has expired, the ephemeral timer system <b>202</b> causes the messaging client <b>104</b> to no longer display an indicium (e.g., an icon or textual identification) associated with the ephemeral message <b>502</b>.</p><p id="p-0076" num="0087">Process Flow and User Interfaces</p><p id="p-0077" num="0088"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of a method <b>600</b> for enhancing users' experience of utilizing a camera of a client device, in accordance with some examples. The method <b>600</b> may be performed by processing logic that may comprise hardware (e.g., dedicated logic, programmable logic, microcode, etc.), software, or a combination of both. In some examples, the processing logic resides at the messaging client <b>104</b> and/or the application servers <b>112</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0078" num="0089">Although the described flowchart can show operations as a sequential process, many of the operations can be performed in parallel or concurrently. In addition, the order of the operations may be re-arranged. A process is terminated when its operations are completed. A process may correspond to a method, a procedure, an algorithm, etc. The operations of methods may be performed in whole or in part, may be performed in conjunction with some or all of the operations in other methods, and may be performed by any number of different systems, such as the systems described herein, or any portion thereof, such as a processor included in any of the systems. The method <b>600</b> commences with operation <b>610</b>.</p><p id="p-0079" num="0090">At operation <b>610</b>, the camera view UI system <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> causes presentation of a camera view UI on a display device. As explained above, the camera view UI comprises an output of a digital image sensor of a camera and a user selectable element actionable to capture the output of the digital image sensor of the camera. At operation <b>620</b>, the adaptive front flash system <b>210</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, which is included in or cooperates with the camera view UI system <b>208</b>, determines characteristics of the output of the digital image sensor of the front facing camera. At operation <b>630</b>, the adaptive front flash system <b>210</b> adjusts configuration parameters of a front flash view based on the determined characteristics. At operation <b>640</b>, the camera view UI system <b>208</b> causes display of the front flash view with the selected configuration parameters on the display of the client device, in the camera view UI.</p><p id="p-0080" num="0091">Examples of the configuration parameters are the brightness of the display, the color temperature of the front flash view, and the transparency of the front flash view. Examples of the characteristics of the output of the digital image sensor of the front facing camera include the histogram of the image corresponding to the output of the digital image sensor of the front facing camera. When the adaptive front flash system <b>210</b> determines that the histogram indicates underexposure, the adaptive front flash system <b>210</b> adjusts the configuration parameters of the front flash view by increasing the brightness of the display and/or decreasing the transparency of the front flash view. As explained above, examples of a front flash view are a blanket front flash view and a ring flash view. A front flash view is displayed as an overlay in the camera view UI when the user selectable element actionable to capture the output of the digital image sensor of the camera is activated. A ring flash view is a view included along a perimeter of the camera view UI.</p><p id="p-0081" num="0092">In some examples, a method for enhancing users' experience of utilizing a camera of a client device includes obtaining permission from a user to perform face detection, detecting a face in an image corresponding to the output of the digital image sensor, and adjusting the configuration parameters of the front flash view based on characteristics a portion of the image that represents the face.</p><p id="p-0082" num="0093">As explained above, in some examples the camera view UI is provided by a messaging system that provides a messaging client executing at the client device, the method comprising communicating where the image captured while the front flash view is displayed with the adjusted configuration parameters as an overlay in the camera view UI is communicated to another client device. The messaging client causes capturing of an image while the front flash view is displayed with the adjusted configuration parameters as an overlay in the camera view UI in response to the detecting activation of the user selectable element actionable to capture the output of the digital image sensor of the camera.</p><p id="p-0083" num="0094"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a camera view UI <b>700</b> that includes the adaptive front flash view. The camera view UI <b>700</b> is shown with the adaptive front flash view activated, and the output of the digital image sensor of the camera is overlaid by a front flash view, which is shown in area <b>710</b> with a diagonal lines pattern.</p><p id="p-0084" num="0095"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a camera view UI <b>800</b>, in which the adaptive front flash view has greater transparency, in which case the output of the digital image sensor of the camera is more visible in area <b>810</b>, as compared to a face shown in the are <b>710</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0085" num="0096">As explained above, color temperature is a way to describe the light appearance provided by a light source, cool colors being more bluish, while warm colors being more yellowish. <figref idref="DRAWINGS">FIG. <b>9</b></figref>, illustrates a camera view UI <b>900</b>, in which the adaptive front flash view is shown in area <b>910</b> with a crossing diagonal lines pattern to indicate a different color warmth of the front flash view as compared to the color warmth of the front flash view shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> and <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0086" num="0097"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates a camera view UI <b>1000</b> that includes a ring flash view depicted as area <b>1010</b> along a perimeter of area along a perimeter of area <b>1020</b>. The camera view UI <b>1000</b> also displays a user selectable element <b>1030</b>, which is actionable to capture the output of the digital image sensor of the camera.</p><p id="p-0087" num="0098"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a view <b>1100</b> that includes, in area <b>1110</b>, an image captured using an adaptive front flash view. As mentioned above, the camera view UI may be provided by a messaging system that provides a messaging client. An image, shown in the area <b>1110</b>, which was captured while the camera view UI displayed the adaptive front flash view, may be communicated to another client device using a user selectable element <b>1120</b>.</p><p id="p-0088" num="0099">Machine Architecture</p><p id="p-0089" num="0100"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a diagrammatic representation of the machine <b>1200</b> within which instructions <b>1208</b> (e.g., software, a program, an application, an applet, an app, or other executable code) for causing the machine <b>1200</b> to perform any one or more of the methodologies discussed herein may be executed. For example, the instructions <b>1208</b> may cause the machine <b>1200</b> to execute any one or more of the methods described herein. The instructions <b>1208</b> transform the general, non-programmed machine <b>1200</b> into a particular machine <b>1200</b> programmed to carry out the described and illustrated functions in the manner described. The machine <b>1200</b> may operate as a standalone device or may be coupled (e.g., networked) to other machines. In a networked deployment, the machine <b>1200</b> may operate in the capacity of a server machine or a client machine in a server-client network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine <b>1200</b> may comprise, but not be limited to, a server computer, a client computer, a personal computer (PC), a tablet computer, a laptop computer, a netbook, a set-top box (STB), a personal digital assistant (PDA), an entertainment media system, a cellular telephone, a smartphone, a mobile device, a wearable device (e.g., a smartwatch), a smart home device (e.g., a smart appliance), other smart devices, a web appliance, a network router, a network switch, a network bridge, or any machine capable of executing the instructions <b>1208</b>, sequentially or otherwise, that specify actions to be taken by the machine <b>1200</b>. Further, while only a single machine <b>1200</b> is illustrated, the term &#x201c;machine&#x201d; shall also be taken to include a collection of machines that individually or jointly execute the instructions <b>1208</b> to perform any one or more of the methodologies discussed herein. The machine <b>1200</b>, for example, may comprise the client device <b>102</b> or any one of a number of server devices forming part of the messaging server system <b>108</b>. In some examples, the machine <b>1200</b> may also comprise both client and server systems, with certain operations of a particular method or algorithm being performed on the server-side and with certain operations of the particular method or algorithm being performed on the client-side.</p><p id="p-0090" num="0101">The machine <b>1200</b> may include processors <b>1202</b>, memory <b>1204</b>, and input/output I/O components <b>1238</b>, which may be configured to communicate with each other via a bus <b>1240</b>. In an example, the processors <b>1202</b> (e.g., a Central Processing Unit (CPU), a Reduced Instruction Set Computing (RISC) Processor, a Complex Instruction Set Computing (CISC) Processor, a Graphics Processing Unit (GPU), a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Radio-Frequency Integrated Circuit (RFIC), another processor, or any suitable combination thereof) may include, for example, a processor <b>1206</b> and a processor <b>1210</b> that execute the instructions <b>1208</b>. The term &#x201c;processor&#x201d; is intended to include multi-core processors that may comprise two or more independent processors (sometimes referred to as &#x201c;cores&#x201d;) that may execute instructions contemporaneously. Although <figref idref="DRAWINGS">FIG. <b>12</b></figref> shows multiple processors <b>1202</b>, the machine <b>1200</b> may include a single processor with a single-core, a single processor with multiple cores (e.g., a multi-core processor), multiple processors with a single core, multiple processors with multiples cores, or any combination thereof.</p><p id="p-0091" num="0102">The memory <b>1204</b> includes a main memory <b>1212</b>, a static memory <b>1214</b>, and a storage unit <b>1216</b>, both accessible to the processors <b>1202</b> via the bus <b>1240</b>. The main memory <b>1204</b>, the static memory <b>1214</b>, and storage unit <b>1216</b> store the instructions <b>1208</b> embodying any one or more of the methodologies or functions described herein. The instructions <b>1208</b> may also reside, completely or partially, within the main memory <b>1212</b>, within the static memory <b>1214</b>, within machine-readable medium <b>1218</b> within the storage unit <b>1216</b>, within at least one of the processors <b>1202</b> (e.g., within the Processor's cache memory), or any suitable combination thereof, during execution thereof by the machine <b>1200</b>.</p><p id="p-0092" num="0103">The I/O components <b>1238</b> may include a wide variety of components to receive input, provide output, produce output, transmit information, exchange information, capture measurements, and so on. The specific I/O components <b>1238</b> that are included in a particular machine will depend on the type of machine. For example, portable machines such as mobile phones may include a touch input device or other such input mechanisms, while a headless server machine will likely not include such a touch input device. It will be appreciated that the I/O components <b>1238</b> may include many other components that are not shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. In various examples, the I/O components <b>1238</b> may include user output components <b>1224</b> and user input components <b>1226</b>. The user output components <b>1224</b> may include visual components (e.g., a display such as a plasma display panel (PDP), a light-emitting diode (LED) display, a liquid crystal display (LCD), a projector, or a cathode ray tube (CRT)), acoustic components (e.g., speakers), haptic components (e.g., a vibratory motor, resistance mechanisms), other signal generators, and so forth. The user input components <b>1226</b> may include alphanumeric input components (e.g., a keyboard, a touch screen configured to receive alphanumeric input, a photo-optical keyboard, or other alphanumeric input components), point-based input components (e.g., a mouse, a touchpad, a trackball, a joystick, a motion sensor, or another pointing instrument), tactile input components (e.g., a physical button, a touch screen that provides location and force of touches or touch gestures, or other tactile input components), audio input components (e.g., a microphone), and the like.</p><p id="p-0093" num="0104">In further examples, the I/O components <b>1238</b> may include biometric components <b>1228</b>, motion components <b>1230</b>, environmental components <b>1232</b>, or position components <b>1234</b>, among a wide array of other components. For example, the biometric components <b>1228</b> include components to detect expressions (e.g., hand expressions, facial expressions, vocal expressions, body gestures, or eye-tracking), measure biosignals (e.g., blood pressure, heart rate, body temperature, perspiration, or brain waves), identify a person (e.g., voice identification, retinal identification, facial identification, fingerprint identification, or electroencephalogram-based identification), and the like. The motion components <b>1230</b> include acceleration sensor components (e.g., accelerometer), gravitation sensor components, rotation sensor components (e.g., gyroscope).</p><p id="p-0094" num="0105">The environmental components <b>1232</b> include, for example, one or cameras (with still image/photograph and video capabilities), illumination sensor components (e.g., photometer), temperature sensor components (e.g., one or more thermometers that detect ambient temperature), humidity sensor components, pressure sensor components (e.g., barometer), acoustic sensor components (e.g., one or more microphones that detect background noise), proximity sensor components (e.g., infrared sensors that detect nearby objects), gas sensors (e.g., gas detection sensors to detection concentrations of hazardous gases for safety or to measure pollutants in the atmosphere), or other components that may provide indications, measurements, or signals corresponding to a surrounding physical environment.</p><p id="p-0095" num="0106">With respect to cameras, the client device <b>102</b> may have a camera system comprising, for example, front cameras on a front surface of the client device <b>102</b> and rear cameras on a rear surface of the client device <b>102</b>. The front cameras may, for example, be used to capture still images and video of a user of the client device <b>102</b> (e.g., &#x201c;selfies&#x201d;), which may then be augmented with augmentation data (e.g., filters) described above. The rear cameras may, for example, be used to capture still images and videos in a more traditional camera mode, with these images similarly being augmented with augmentation data. In addition to front and rear cameras, the client device <b>102</b> may also include a 360&#xb0; camera for capturing 360&#xb0; photographs and videos.</p><p id="p-0096" num="0107">Further, the camera system of a client device <b>102</b> may include dual rear cameras (e.g., a primary camera as well as a depth-sensing camera), or even triple, quad or penta rear camera configurations on the front and rear sides of the client device <b>102</b>. These multiple cameras systems may include a wide camera, an ultra-wide camera, a telephoto camera, a macro camera and a depth sensor, for example.</p><p id="p-0097" num="0108">The position components <b>1234</b> include location sensor components (e.g., a GPS receiver component), altitude sensor components (e.g., altimeters or barometers that detect air pressure from which altitude may be derived), orientation sensor components (e.g., magnetometers), and the like.</p><p id="p-0098" num="0109">Communication may be implemented using a wide variety of technologies. The I/O components <b>1238</b> further include communication components <b>1236</b> operable to couple the machine <b>1200</b> to a network <b>1220</b> or devices <b>1222</b> via respective coupling or connections. For example, the communication components <b>1236</b> may include a network interface Component or another suitable device to interface with the network <b>1220</b>. In further examples, the communication components <b>1236</b> may include wired communication components, wireless communication components, cellular communication components, Near Field Communication (NFC) components, Bluetooth&#xae; components (e.g., Bluetooth&#xae; Low Energy), Wi-Fi&#xae; components, and other communication components to provide communication via other modalities. The devices <b>1222</b> may be another machine or any of a wide variety of peripheral devices (e.g., a peripheral device coupled via a USB).</p><p id="p-0099" num="0110">Moreover, the communication components <b>636</b> may detect identifiers or include components operable to detect identifiers. For example, the communication components <b>636</b> may include Radio Frequency Identification (RFID) tag reader components, NFC smart tag detection components, optical reader components (e.g., an optical sensor to detect one-dimensional bar codes such as Universal Product Code (UPC) bar code, multi-dimensional bar codes such as Quick Response (QR) code, Aztec code, Data Matrix, Dataglyph, MaxiCode, PDF417, Ultra Code, UCC RSS-2D bar code, and other optical codes), or acoustic detection components (e.g., microphones to identify tagged audio signals). In addition, a variety of information may be derived via the communication components <b>1236</b>, such as location via Internet Protocol (IP) geolocation, location via Wi-Fi&#xae; signal triangulation, location via detecting an NFC beacon signal that may indicate a particular location, and so forth.</p><p id="p-0100" num="0111">The various memories (e.g., main memory <b>1212</b>, static memory <b>1214</b>, and memory of the processors <b>1202</b>) and storage unit <b>1216</b> may store one or more sets of instructions and data structures (e.g., software) embodying or used by any one or more of the methodologies or functions described herein. These instructions (e.g., the instructions <b>1208</b>), when executed by processors <b>1202</b>, cause various operations to implement the disclosed examples.</p><p id="p-0101" num="0112">The instructions <b>1208</b> may be transmitted or received over the network <b>1220</b>, using a transmission medium, via a network interface device (e.g., a network interface component included in the communication components <b>1236</b>) and using any one of several well-known transfer protocols (e.g., hypertext transfer protocol (HTTP)). Similarly, the instructions <b>608</b> may be transmitted or received using a transmission medium via a coupling (e.g., a peer-to-peer coupling) to the devices <b>1222</b>.</p><heading id="h-0005" level="1">Glossary</heading><p id="p-0102" num="0113">&#x201c;Carrier signal&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible media to facilitate communication of such instructions. Instructions may be transmitted or received over a network using a transmission medium via a network interface device.</p><p id="p-0103" num="0114">&#x201c;Client device&#x201d; refers to any machine that interfaces to a communications network to obtain resources from one or more server systems or other client devices. A client device may be, but is not limited to, a mobile phone, desktop computer, laptop, portable digital assistants (PDAs), smartphones, tablets, ultrabooks, netbooks, laptops, multi-processor systems, microprocessor-based or programmable consumer electronics, game consoles, set-top boxes, or any other communication device that a user may use to access a network.</p><p id="p-0104" num="0115">&#x201c;Communication network&#x201d; refers to one or more portions of a network that may be an ad hoc network, an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a wireless WAN (WWAN), a metropolitan area network (MAN), the Internet, a portion of the Internet, a portion of the Public Switched Telephone Network (PSTN), a plain old telephone service (POTS) network, a cellular telephone network, a wireless network, a Wi-Fi&#xae; network, another type of network, or a combination of two or more such networks. For example, a network or a portion of a network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access (CDMA) connection, a Global System for Mobile communications (GSM) connection, or other types of cellular or wireless coupling. In this example, the coupling may implement any of a variety of types of data transfer technology, such as Single Carrier Radio Transmission Technology (1&#xd7;RTT), Evolution-Data Optimized (EVDO) technology, General Packet Radio Service (GPRS) technology, Enhanced Data rates for GSM Evolution (EDGE) technology, third Generation Partnership Project (3GPP) including 3G, fourth generation wireless (4G) networks, Universal Mobile Telecommunications System (UMTS), High Speed Packet Access (HSPA), Worldwide Interoperability for Microwave Access (WiMAX), Long Term Evolution (LTE) standard, others defined by various standard-setting organizations, other long-range protocols, or other data transfer technology.</p><p id="p-0105" num="0116">&#x201c;Component&#x201d; refers to a device, physical entity, or logic having boundaries defined by function or subroutine calls, branch points, APIs, or other technologies that provide for the partitioning or modularization of particular processing or control functions. Components may be combined via their interfaces with other components to carry out a machine process. A component may be a packaged functional hardware unit designed for use with other components and a part of a program that usually performs a particular function of related functions. Components may constitute either software components (e.g., code embodied on a machine-readable medium) or hardware components. A &#x201c;hardware component&#x201d; is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various example embodiments, one or more computer systems (e.g., a standalone computer system, a client computer system, or a server computer system) or one or more hardware components of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware component that operates to perform certain operations as described herein. A hardware component may also be implemented mechanically, electronically, or any suitable combination thereof. For example, a hardware component may include dedicated circuitry or logic that is permanently configured to perform certain operations. A hardware component may be a special-purpose processor, such as a field-programmable gate array (FPGA) or an application specific integrated circuit (ASIC). A hardware component may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example, a hardware component may include software executed by a general-purpose processor or other programmable processor. Once configured by such software, hardware components become specific machines (or specific components of a machine) uniquely tailored to perform the configured functions and are no longer general-purpose processors. It will be appreciated that the decision to implement a hardware component mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software), may be driven by cost and time considerations. Accordingly, the phrase &#x201c;hardware component&#x201d; (or &#x201c;hardware-implemented component&#x201d;) should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. Considering embodiments in which hardware components are temporarily configured (e.g., programmed), each of the hardware components need not be configured or instantiated at any one instance in time. For example, where a hardware component comprises a general-purpose processor configured by software to become a special-purpose processor, the general-purpose processor may be configured as respectively different special-purpose processors (e.g., comprising different hardware components) at different times. Software accordingly configures a particular processor or processors, for example, to constitute a particular hardware component at one instance of time and to constitute a different hardware component at a different instance of time. Hardware components can provide information to, and receive information from, other hardware components. Accordingly, the described hardware components may be regarded as being communicatively coupled. Where multiple hardware components exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) between or among two or more of the hardware components. In embodiments in which multiple hardware components are configured or instantiated at different times, communications between such hardware components may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware components have access. For example, one hardware component may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware component may then, at a later time, access the memory device to retrieve and process the stored output. Hardware components may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information). The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented components that operate to perform one or more operations or functions described herein. As used herein, &#x201c;processor-implemented component&#x201d; refers to a hardware component implemented using one or more processors. Similarly, the methods described herein may be at least partially processor-implemented, with a particular processor or processors being an example of hardware. For example, at least some of the operations of a method may be performed by one or more processors <b>1202</b> or processor-implemented components. Moreover, the one or more processors may also operate to support performance of the relevant operations in a &#x201c;cloud computing&#x201d; environment or as a &#x201c;software as a service&#x201d; (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), with these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., an API). The performance of certain of the operations may be distributed among the processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processors or processor-implemented components may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other example embodiments, the processors or processor-implemented components may be distributed across a number of geographic locations.</p><p id="p-0106" num="0117">&#x201c;Computer-readable storage medium&#x201d; refers to both machine-storage media and transmission media. Thus, the terms include both storage devices/media and carrier waves/modulated data signals. The terms &#x201c;machine-readable medium,&#x201d; &#x201c;computer-readable medium&#x201d; and &#x201c;device-readable medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><p id="p-0107" num="0118">&#x201c;Machine storage medium&#x201d; refers to a single or multiple storage devices and media (e.g., a centralized or distributed database, and associated caches and servers) that store executable instructions, routines and data. The term shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media, including memory internal or external to processors. Specific examples of machine-storage media, computer-storage media and device-storage media include non-volatile memory, including by way of example semiconductor memory devices, e.g., erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), FPGA, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks The terms &#x201c;machine-storage medium,&#x201d; &#x201c;device-storage medium,&#x201d; &#x201c;computer-storage medium&#x201d; mean the same thing and may be used interchangeably in this disclosure. The terms &#x201c;machine-storage media,&#x201d; &#x201c;computer-storage media,&#x201d; and &#x201c;device-storage media&#x201d; specifically exclude carrier waves, modulated data signals, and other such media, at least some of which are covered under the term &#x201c;signal medium.&#x201d;</p><p id="p-0108" num="0119">&#x201c;Non-transitory computer-readable storage medium&#x201d; refers to a tangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine.</p><p id="p-0109" num="0120">&#x201c;Signal medium&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine and includes digital or analog communications signals or other intangible media to facilitate communication of software or data. The term &#x201c;signal medium&#x201d; shall be taken to include any form of a modulated data signal, carrier wave, and so forth. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a matter as to encode information in the signal. The terms &#x201c;transmission medium&#x201d; and &#x201c;signal medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>causing presentation of a camera view user interface (UI) on a display of a client device, the camera view UI comprising an output of a digital image sensor of a camera and a user selectable element actionable to capture the output of the digital image sensor of the camera, wherein the camera is a front facing camera of the client device;</claim-text><claim-text>determining characteristics of the output of the digital image sensor of the front facing camera;</claim-text><claim-text>adjusting a transparency of the front flash view based on the determined characteristics; and</claim-text><claim-text>on the display of the client device, causing display of the front flash view overlaid over the camera view UI, the front flash view displayed with the selected configuration parameters to adjust a brightness level of the output of the digital image sensor that is presented in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the configuration parameters of the front flash view include one or more of brightness of the display, color temperature of the front flash view, and the transparency of the front flash view.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the determined characteristics include a histogram of an image corresponding to the output of the digital image sensor of the front facing camera, the method comprising:<claim-text>determining that the histogram of the image corresponding to the output of the digital image sensor of the front facing camera indicates underexposure, wherein adjusting the transparency of the front flash view comprises decreasing the transparency of the front flash view to cause an increase to the brightness level of the output of the digital image sensor that is presented in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. (canceled)</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>detecting a face in an image corresponding to the output of the digital image sensor; and</claim-text><claim-text>adjusting the transparency of the front flash view based on characteristics a portion of the image that represents the face.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:<claim-text>obtaining permission from a user to perform face detection, prior to the detecting of the face in the image corresponding to the output of the digital image sensor.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the front flash view is a blanket front flash view, the blanket front flash view is displayed as an overlay in the camera view UI when the user selectable element actionable to capture the output of the digital image sensor of the camera is activated, the method further comprising:<claim-text>detecting activation of the user selectable element actionable to capture the output of the digital image sensor of the camera; and</claim-text><claim-text>in response to the detecting, displaying the blanket front flash view as an overlay in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. (canceled)</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>detecting activation of the user selectable element actionable to capture the output of the digital image sensor of the camera; and</claim-text><claim-text>in response to the detecting activation of the user selectable element actionable to capture the output of the digital image sensor of the camera, causing capturing of an image while the front flash view is displayed as an overlay in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the camera view UI is provided by a messaging system that provides a messaging client executing at the client device, the method further comprising:<claim-text>communicating to another client device the image captured while the front flash view is displayed as an overlay in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-11-20" num="11-20"><claim-text><b>11</b>-<b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A client device comprising:<claim-text>one or more computer processors; and</claim-text><claim-text>one or more computer-readable mediums storing instructions that, when executed by the one or more computer processors, cause the client device to perform operations comprising:</claim-text><claim-text>causing presentation of a camera view user interface (UI) on a display of the client device, the camera view UI comprising an output of a digital image sensor of a camera and a user selectable element actionable to capture the output of the digital image sensor of the camera, wherein the camera is a front facing camera of the client device;</claim-text><claim-text>determining characteristics of the output of the digital image sensor of the front facing camera;</claim-text><claim-text>adjusting a transparency of the front flash view based on the determined characteristics; and</claim-text><claim-text>on the display of the client device, causing display of the front flash view overlaid over the camera view UI, the front flash view displayed with the selected configuration parameters to adjust a brightness level of the output of the digital image sensor that is presented in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The client device of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the configuration parameters of the front flash view include one or more of brightness of the display, color temperature of the front flash view, and the transparency of the front flash view.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The client device of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the determined characteristics include a histogram of an image corresponding to the output of the digital image sensor of the front facing camera, the operations further comprising:<claim-text>determining that the histogram of the image corresponding to the output of the digital image sensor of the front facing camera indicates underexposure, wherein adjusting the transparency of the front flash view comprises decreasing the transparency of the front flash view to cause an increase to the brightness level of the output of the digital image sensor that is presented in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The client device of <claim-ref idref="CLM-00021">claim 21</claim-ref>, the operations further comprising:<claim-text>detecting a face in an image corresponding to the output of the digital image sensor; and</claim-text><claim-text>adjusting the transparency of the front flash view based on characteristics a portion of the image that represents the face.</claim-text></claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The client device of <claim-ref idref="CLM-00024">claim 24</claim-ref>, the operations further comprising:<claim-text>obtaining permission from a user to perform face detection, prior to the detecting of the face in the image corresponding to the output of the digital image sensor.</claim-text></claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The client device of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the front flash view is a blanket front flash view, the blanket front flash view is displayed as an overlay in the camera view UI when the user selectable element actionable to capture the output of the digital image sensor of the camera is activated, the operations further comprising:<claim-text>detecting activation of the user selectable element actionable to capture the output of the digital image sensor of the camera; and</claim-text><claim-text>in response to the detecting, displaying the blanket front flash view as an overlay in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The client device of <claim-ref idref="CLM-00021">claim 21</claim-ref>, the operations further comprising:<claim-text>detecting activation of the user selectable element actionable to capture the output of the digital image sensor of the camera; and</claim-text><claim-text>in response to the detecting activation of the user selectable element actionable to capture the output of the digital image sensor of the camera, causing capturing of an image while the front flash view is displayed as an overlay in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The client device of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the camera view UI is provided by a messaging system that provides a messaging client executing at the client device, the operations further comprising:<claim-text>communicating to another client device the image captured while the front flash view is displayed as an overlay in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. A non-transitory computer-readable medium storing instructions that, when executed by one or more computer processors of a client device, cause the client device to perform operations comprising:<claim-text>causing presentation of a camera view user interface (UI) on a display of the client device, the camera view UI comprising an output of a digital image sensor of a camera and a user selectable element actionable to capture the output of the digital image sensor of the camera, wherein the camera is a front facing camera of the client device;</claim-text><claim-text>determining characteristics of the output of the digital image sensor of the front facing camera;</claim-text><claim-text>adjusting a transparency of the front flash view based on the determined characteristics; and</claim-text><claim-text>on the display of the client device, causing display of the front flash view overlaid over the camera view UI, the front flash view displayed with the selected configuration parameters to adjust a brightness level of the output of the digital image sensor that is presented in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein the configuration parameters of the front flash view include one or more of brightness of the display, color temperature of the front flash view, and the transparency of the front flash view.</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00030">claim 30</claim-ref>, wherein the determined characteristics include a histogram of an image corresponding to the output of the digital image sensor of the front facing camera, the operations further comprising:<claim-text>determining that the histogram of the image corresponding to the output of the digital image sensor of the front facing camera indicates underexposure, wherein adjusting the transparency of the front flash view comprises decreasing the transparency of the front flash view to cause an increase to the brightness level of the output of the digital image sensor that is presented in the camera view UI.</claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00029">claim 29</claim-ref>, the operations further comprising:<claim-text>detecting a face in an image corresponding to the output of the digital image sensor; and</claim-text><claim-text>adjusting the transparency of the front flash view based on characteristics a portion of the image that represents the face.</claim-text></claim-text></claim></claims></us-patent-application>