<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004700A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004700</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930091</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>31</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>367</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>392</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>398</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>31</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>367</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>392</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>30</main-group><subgroup>398</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2119</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR DESIGNING A DISCRETE DEVICE PRODUCT</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17076039</doc-number><date>20201021</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11481532</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930091</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62923615</doc-number><date>20191021</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SEMICONDUCTOR COMPONENTS INDUSTRIES, LLC</orgname><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>VICTORY</last-name><first-name>James Joseph</first-name><address><city>Trabuco Canyon</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>NEYER</last-name><first-name>Thomas</first-name><address><city>Munich</city><country>DE</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>XIAO</last-name><first-name>YunPeng</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>JANG</last-name><first-name>Hyeongwoo</first-name><address><city>Bucheon-Si</city><country>KR</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>DINGENEN</last-name><first-name>Peter</first-name><address><city>Oudenaarde</city><country>BE</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>VALENTA</last-name><first-name>Vaclav</first-name><address><city>Brno</city><country>CZ</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>BAGHAIE YAZDI</last-name><first-name>Mehrdad</first-name><address><city>Munich</city><state>DE</state><country>US</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>REXER</last-name><first-name>Christopher Lawrence</first-name><address><city>Scottsdale</city><state>AZ</state><country>US</country></address></addressbook></inventor><inventor sequence="08" designation="us-only"><addressbook><last-name>BENCZKOWSKI</last-name><first-name>Stanley</first-name><address><city>Bear Creek Township</city><state>PA</state><country>US</country></address></addressbook></inventor><inventor sequence="09" designation="us-only"><addressbook><last-name>BORDIGNON</last-name><first-name>Thierry</first-name><address><city>Toulouse</city><country>FR</country></address></addressbook></inventor><inventor sequence="10" designation="us-only"><addressbook><last-name>CHU</last-name><first-name>Wai Lun</first-name><address><city>Kowloon</city><country>HK</country></address></addressbook></inventor><inventor sequence="11" designation="us-only"><addressbook><last-name>SICKARUK</last-name><first-name>Roman</first-name><address><city>Nezamyslice</city><country>CZ</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>SEMICONDUCTOR COMPONENTS INDUSTRIES, LLC</orgname><role>02</role><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Implementations disclosed herein may include receiving from a user a selection of at least one die, a package type, and at least one test condition; generating, using a processor, a product die configuration and a product package configuration using a predictive modeling module and the at least one die and the package type; generating a graphic design system file; generating a package bonding diagram; generating a product spice model of the discrete device product using a technology computer aided design module; generating, using a processor, one or more datasheet characteristics of the discrete device product with the product SPICE model; generating a product datasheet for the discrete device product using the graphic design system file; and using a second interface generated by a computing device to provide access to the graphic design system file, the package bonding diagram, the product datasheet, and the product SPICE model.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="187.62mm" wi="158.75mm" file="US20230004700A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="218.19mm" wi="162.22mm" file="US20230004700A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="217.51mm" wi="170.77mm" file="US20230004700A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="168.32mm" wi="170.86mm" file="US20230004700A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="214.04mm" wi="171.87mm" file="US20230004700A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="239.44mm" wi="171.87mm" file="US20230004700A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="214.04mm" wi="171.87mm" file="US20230004700A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation application of the earlier U.S. Utility patent application to Victory et al. entitled &#x201c;Systems and Methods for Designing a Discrete Device Product,&#x201d; application Ser. No. 17/076,039, filed Oct. 21, 2020, now pending, which application claims the benefit of the filing date of U.S. Provisional Patent Application 62/923,615, entitled &#x201c;System, Apparatus, and Methods for Custom and/or Automated Design of Semiconductor Devices&#x201d; to Victory et al. which was filed on Oct. 21, 2019, the disclosures of each of which are hereby incorporated entirely herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Aspects of this document relate generally to systems and methods, such as systems and methods for designing a discrete device product. More specific implementations involve systems and methods for automated electronic component design.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Electronic components include a wide variety of devices including transistors, resistors, capacitors, and other devices designed to manipulate/control electrical charge. Microprocessors include various electronic components assembled on a single integrated circuit design that are capable of performing various analog or digital calculations.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">Implementations of a system configured for designing a discrete device product may include one or more hardware processors configured by machine-readable instructions to: using a first interface generated by a computing device, receive from a user a selection of at least one die and at least one test condition; generate, using a processor, a product die configuration using a predictive modeling module and the at least one die; generate, using a processor, a graphic design system file using a graphic design system module with the product die configuration; and generate, using a processor, a package bonding diagram using a build diagram system module with the graphic design system file. In various system implementations, the system may be configured to generate, using a processor, a product SPICE model corresponding with the product die configuration with a product SPICE model generating module; provide, using a processor, the product SPICE model to a product simulation module; generate, using a processor, one or more datasheet characteristics of the discrete device product with the product SPICE model using the product simulation module; provide, using a processor, the one or more datasheet characteristics to a datasheet formation module; and generate, using a processor, product datasheet for the discrete device product using the graphic design system file, the package bonding diagram, and the one or more datasheet characteristics. In various system implementations, the system may use a second interface generated by a computing device to provide access to the graphic design system file, the package bonding diagram, the product SPICE model, and the product datasheet to the user.</p><p id="p-0006" num="0005">Implementations of a system for designing a discrete device product may include one, all, or any of the following:</p><p id="p-0007" num="0006">The system may be further configured to: receive a selection of a package type, include the package in the product die configuration, select a die SPICE model corresponding with the one or more die, and select a package SPICE model corresponding with the package type for generating the product SPICE model with the product SPICE model generating module.</p><p id="p-0008" num="0007">The predictive modeling module may include a back propagated model and the back propagated model may be used to predict one or more electrical performance parameters of the discrete device product.</p><p id="p-0009" num="0008">The predictive modeling module may include a back propagated model and the back propagated model may be used to predict a die dimension, gate pad location, or gate runner.</p><p id="p-0010" num="0009">The predictive modeling module may include a back propagated model generated by fitting data from previous discrete device products.</p><p id="p-0011" num="0010">The predictive modeling module may include a back propagated model generated by a neural network training using data from previous discrete device products.</p><p id="p-0012" num="0011">The neural network may include two input neurons, three densely connected hidden layers including rectified linear network unit neurons, and an output layer of linearly activated neurons.</p><p id="p-0013" num="0012">The graphic design system module may use a native parameterized layout cell (PCELL).</p><p id="p-0014" num="0013">The graphic design system module may use a generic parameterized layout cell (PCELL).</p><p id="p-0015" num="0014">The build diagram system module may use a virtual clip to generate the package bonding diagram.</p><p id="p-0016" num="0015">Implementations of a method of designing a discrete device product may include using a first interface generated by a computing device, receiving from a user a selection of at least one die and at least one test condition; generating, using a processor, a product die configuration and a product package configuration using a predictive modeling module and the at least one die; generating, using a processor, a graphic design system file using a graphic design system module with the product die configuration; and generating, using a processor, a package bonding diagram using a build diagram system module with the graphic design system file. In various method implementations, the method may include generating, using a processor, a product SPICE model corresponding with the product die configuration using a product SPICE model generating module; providing, using a processor, the product SPICE model to a product simulation module; generating, using a processor, one or more datasheet characteristics of the discrete device product with the product SPICE model; providing, using a processor, the one or more datasheet characteristics to a datasheet formation module; and generating, using a processor, a product datasheet for the discrete device product using the graphic design system file, the package bonding diagram, and the one or more datasheet characteristics. In various method implementations, the method may include using a second interface generated by a computing device to providing access to the graphic design system file, the package bonding diagram, the package SPICE model, and the product datasheet to the user</p><p id="p-0017" num="0016">Various implementations of a method of designing a discrete device product may include one, all, or any of the following:</p><p id="p-0018" num="0017">The method may include: receiving a selection of a package type, including the package in the product die configuration, selecting a die SPICE model corresponding with the one or more die, and selecting a package SPICE model corresponding with the package type for generating the product SPICE model with the product SPICE model generating module.</p><p id="p-0019" num="0018">The predictive modeling module may include a back propagated model and the back propagated model may be used to predict one or more electrical performance parameters of the discrete device product.</p><p id="p-0020" num="0019">The predictive modeling module may include a back propagated model and the back propagated model may be used to predict a die dimension, gate pad location, or gate runner.</p><p id="p-0021" num="0020">The predictive modeling module may include a back propagated model generated by fitting data from previous discrete device products.</p><p id="p-0022" num="0021">The predictive modeling module may include a back propagated model generated by a neural network training using data from previous discrete device products.</p><p id="p-0023" num="0022">The neural network may include two input neurons, three densely connected hidden layers including rectified linear network unit neurons, and an output layer of linearly activated neurons.</p><p id="p-0024" num="0023">The graphic design system module may use a native parameterized layout cell (PCELL).</p><p id="p-0025" num="0024">The graphic design system module may use a generic parameterized layout cell (PCELL).</p><p id="p-0026" num="0025">The build diagram system module may use a virtual clip to generate the package bonding diagram.</p><p id="p-0027" num="0026">The foregoing and other aspects, features, and advantages will be apparent to those artisans of ordinary skill in the art from the DESCRIPTION and DRAWINGS, and from the CLAIMS.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0028" num="0027">Implementations will hereinafter be described in conjunction with the appended drawings, where like designations denote like elements, and:</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system configured for designing a discrete device product;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates a first portion of a flowchart of an implementation of a method for designing a discrete device product;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> illustrates a second portion of a flowchart of an implementation of a method for designing a discrete device product;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram of an implementation of a first computer generated interface;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram of an implementation of a second computer generated interface; and</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram of another implementation of a first computer generated interface.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0035" num="0034">This disclosure, its aspects and implementations, are not limited to the specific components, assembly procedures or method elements disclosed herein. Many additional components, assembly procedures and/or method elements known in the art consistent with the intended for designing a discrete device product will become apparent for use with particular implementations from this disclosure. Accordingly, for example, although particular implementations are disclosed, such implementations and implementing components may comprise any shape, size, style, type, model, version, measurement, concentration, material, quantity, method element, step, and/or the like as is known in the art for designing a discrete device product, and implementing components and methods, consistent with the intended operation and methods.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system <b>100</b> configured for designing a discrete device product, in accordance with one or more implementations. As used herein, a discrete device is a device that is not a microprocessor but is a combination of one or more electronic devices such as, by non-limiting example, a power semiconductor device, a diode, a transistor, a metal oxide field effect transistor (MOSFET), a rectifier, an active component, a passive component, or any other electronic device type, whether in the form of a bare die or a die incorporated in a package. In some implementations, system <b>100</b> may include one or more computing platforms <b>102</b>. Computing platform(s) <b>102</b> may be configured to communicate with one or more remote platforms <b>104</b> according to a client/server architecture, a peer-to-peer architecture, and/or other architectures. Remote platform(s) <b>104</b> may be configured to communicate with other remote platforms via computing platform(s) <b>102</b> and/or according to a client/server architecture, a peer-to-peer architecture, and/or other architectures. Users may access system <b>100</b> via remote platform(s) <b>104</b>. Examples of remote platforms <b>104</b> that may be used by users include, by nonliving example, desktop computers, server computers, laptop computers, smart phones, tablets, or any other portable electronic device.</p><p id="p-0037" num="0036">Computing platform(s) <b>102</b> may be configured by machine-readable instructions <b>106</b>. Machine-readable instructions <b>106</b> may include one or more instruction modules. The instruction modules may include computer program modules. The instruction modules may include one or more of interface generating module <b>108</b>, product generating module <b>110</b>, design system file generating module <b>112</b>, package bonding diagram generating module <b>114</b>, design system file providing module <b>118</b>, product SPICE model generating module <b>120</b>, product SPICE model providing module <b>122</b>, product datasheet generating module <b>128</b>, and/or other instruction modules.</p><p id="p-0038" num="0037">Interface generating module <b>108</b> is designed to generate a first interface and receive from a user a selection of at least one die and at least one test condition. The die may be selected from at least one technology type, or semiconductor processing flow type used to make the die. In various implementations where the discrete product includes both a die and a package, the first interface may allow the user to select a package type as well. Examples of the first interface will be further described in this document. In the first interface however, a wide variety of product related items may be selected, such as, by non-limiting example, device voltage rating, die width, die height, width the scribe line, width of the gate pad, height of gate pad, number of internal gate runners, location of the gate on a die, die thickness, source metal resistance, lead frame type, gate wire material, gate wire diameter, number of gate wires, source wire material, source wire diameter, number of source wires, emitter wire material, emitter wire diameter, number of source wires, number of emitter wires, single wire stitching, double wire stitching, anode wire material, anode wire diameter, number of anode wires, kelvin wire material, kelvin wire diameter, number of kelvin wires, any combination thereof, and any other die or package parameter. Examples of test conditions that may be selected using the first interface may include, by non-limiting example, varying temperature levels, current at which the threshold voltage is measured, currents at which the RDS<sub>on </sub>or VCE<sub>sat </sub>are measured, capacitance values, voltage for capacitance and gate charge, drain current, collector current, drain voltage, collector voltage, switching tests type, load voltage used for resistive and/or inductive switching, external gate resistance used for resistive and/or inductive switching, any combination thereof, and any other desired test parameter. Interface generating module <b>108</b> is also designed to generate a second interface and provide access to graphic design system files created by the system. The graphic design system file (GDS file) includes the die layout image and detailed layer geometry file which is used for mask making and further manufacturing steps. By way of non-limiting example, the user may have access to the graphic design system file, the package bonding diagram, the product SPICE model, and the product datasheet through the second interface. The product datasheet may be an initial one or may be a fully finalized product datasheet ready for distribution to customers in various implementations.</p><p id="p-0039" num="0038">While the use of a first interface to select information relating to the discrete product to be developed is disclosed in this document, in particular implementations, a first interface may simply include an interface sufficient to upload a file that contains the desired information. The format of the file being uploaded may be, by non-limiting example, American Standard Code for Information Interchange (ASCII), xml, Java Script Object Notation (JSON), flat file, text file, binary file, or any other file format. In some implementations, the first interface may be implemented using a LINUX terminal session window where the file is selected at the command line and the various modules and methods implemented are implemented in a batch processing mode using the file. In other implementations, a command entered at a command line may bring up a graphical user interface used to select the file and implement the various modules and methods in a batch processing mode using the file. In other implementations, the first interface may be generated using a standalone graphical user interface (form window) generated by the computing system that allows for selecting of the file and execution of the various modules and methods in batch mode. In still other implementations, the first interface may be generated by a web browser or web application with the computing system which allows the user to select the file and then begin execution of the various modules and methods in batch mode. A wide variety of computer interfaces may be employed that allow for batch execution of the various modules and methods disclosed herein using a file.</p><p id="p-0040" num="0039">Product generating module <b>110</b> is configured to generate, using a processor, a product die configuration and a product package configuration using a predictive modeling module and the at least one die and the package type if a package type was selected. The predictive modeling module includes a back propagated model and the back propagated model is used to predict one or more electrical performance parameters of the discrete device product. Based on the electrical performance parameter(s) the predictive modeling module and back propagated model are also able to, where a package type was selected, determine package size as well as determine die size, and or die characteristic information in various implementations. By way of non-limiting example, the predictive modeling module may include a back propagated model and the back propagated model is used to predict a die dimension, gate pad location, or gate runner based on desired electrical/performance characteristics for the product (Rds<sub>on</sub>, etc.). The predictive modeling module may include a back propagated model generated by fitting data collected from previous discrete device products. The predictive modeling module may include a back propagated module generated by/from a previously generated scalable product SPICE model like those disclosed herein. By scalable is meant a SPICE model that comprehends changes in electrical, thermal, and/or magnetic performance of the discrete device product due to changes in die and/or package parameters. In various implementations the discrete device products would include either the same type of product being designed, related discrete products, or all products being designed. As used herein, &#x201c;product&#x201d; means at least one die and, where a package is included, a corresponding package which is ultimately marketed under a specific part number by a semiconductor device manufacturer. In various implementations, the back propagated model generated by fitting data from measurements or previously generated scalable SPICE models may be created by performing various statistical operations for the various die in packages that are included in the products being compared. In some implementations, data transforms for the data being considered in the model may be utilized. The data transform may be used in normalize the data in such a way that it can be fitted using a regression or other statistical analysis.</p><p id="p-0041" num="0040">In other system implementations, however, the back propagated model may not rely on any statistical analysis of prior products when generating scalable SPICE models. Instead, the use of deep learning/machine learning techniques may be used to develop functions that allow for optimization of particular electrical parameters for the package and/or die. The use of deep learning/machine learning techniques may allow the back propagated model to handle situations beyond the scope of any particular data set and may be helpful in situations where new products are being proposed for the first time. The predictive modeling module may include a back propagated model generated by a neural network trained using data from previous discrete device products.</p><p id="p-0042" num="0041">A wide variety of deep learning solutions may be employed in various supplementations. By deep learning is meant the use of at least 3 layers of densely connected neurons. A wide variety of machine learning techniques have may be utilized to help the network learn including, by non-limiting example, drop out, batch size, stochastic gradient descent, forward propagation, backward propagation, the number of hidden layers, the number of neurons, gradient descent, cross entropy cost, and any other machine learning technique for refining the network. By way of non-limiting example, the neural network in particular and limitations may include two input neurons, three densely connected hidden layers including rectified linear network unit neurons, and an output layer of linearly activated neurons. However, more layers and more neurons or fewer layers and fewer neurons may be used in other limitations.</p><p id="p-0043" num="0042">In various implementations, various die parameters selected by the user in the first interface may affect the electrical/process conditions of the die itself. By non-limiting example, the user may select a particular value for die thickness, normalized peak channel doping, normalized gate oxide thickness, or any other die parameter that affects the electrical/process performance of the die. In various system and method implementations, the system may adjust the scalable SPICE model to correspond with the selected values. Also, in various system and method implementations, the system may adjust a die SPICE model itself to comprehend the effects of the values and continue the various method steps using the various modules disclosed herein. In various implementations, the effects of the various values for the die parameters may be accounted for using, by non-limiting example, a correlation, a look up table, a derived mathematical relationship, a back propagated model, or any other method or system for adjusting SPICE model parameters for a die.</p><p id="p-0044" num="0043">In various system implementations, the first interface may include components that allow the user to select various variation limits for one, any, or all of the electrical parameters associated with the die and/or package. By non-limiting example, these variation limits may be set using the interface to select a minimum or a maximum allowed amount of variation for a particular parameter. In the interface, this selection may be done using a checkbox element. In various implementations, these variation limits may be referred to as corner limits. Non-limiting examples of electrical parameters that may employ corner limits may be threshold voltage (Vth),RDSon, capacitance, or Qg or any other or any other electrical parameter of the package in various system and method implementations. During system operation, the corner limits are used in the formation of the scalable SPICE model as the system simulates the corner limits by adjusting internal process parameters in the SPICE model(s) used by the system to create the scalable SPICE model. The resulting scalable SPICE model's ability to predict product performance is accordingly extended within the range of the corner limits. This adjusted scalable SPICE model then can be used by the product simulation model as described hereafter to provide datasheet characteristics that show typical performance as well as performance according to the amount of particular corner limit for a given electrical parameter. These datasheet characteristics can then be included in a datasheet associated with the discrete device product using the processes and systems disclosed hereafter.</p><p id="p-0045" num="0044">Design system generating module <b>112</b> may be configured to generate, using a processor, a graphic design system file (GDS file) using a graphic design system module with the product die configuration and the product package configuration. The graphic design system module may use a native parameterized layout cell (PCELL). Where the graphic design system module uses a native PCELL, the settlor includes the full technology device design, layers, and corresponding design rules. The graphic design system module may use a generic PCELL. Where the graphic design system module uses a generic PCELL, the sole only contains the top-level layers of the device that include, by non-limiting example, metal, passivation, or other boundary materials. In either case, in a particular implementation, the graphic design system file is generated by invoking the software marketed under the tradename CADENCE by Cadence Design Systems of San Jose, Calif., and the native PCELL or generic PCELL in batch mode. Many other software products could be used, however, that include PCELLS as part of the development process.</p><p id="p-0046" num="0045">Package bonding generating module <b>114</b> generates, using a processor, a package bonding diagram using a build diagram system module with the graphic design system file. In particular implementations, the package bonding generating module <b>114</b> may generate the bonding diagram by invoking a particular tool in batch mode using the generated graphic design system file as an input. By way of non-limiting example, the build diagram system module may utilize any of the die and/or package parameters selected that were previously disclosed. In particular and limitations, these parameters may include package type, package lead frame, number of gate runners, gate position, wire type, wire stitching type, number of source wires, die attach material, or a virtual clip to generate the package bonding diagram.</p><p id="p-0047" num="0046">With respect to the use of a virtual clip, ordinarily, clip type, shape, and structure are selected from a library of previously physically manufactured and tested clip designs. A challenge with modeling a discrete product like those disclosed herein is that the clip designs available in the library simply are not numerous enough to be able to correspond with all of the possible combinations of die size, gate pad position, package size, etc. that could be encountered/considered by a user designing the discrete product. In order to enable the creation of scalable SPICE models for the die and/or package, the use of virtual clips whose sizes, materials, and coverage of the die are determined using various predetermined parameters may be utilized in various implementations. For example, a virtual clip may be selected by the user for inclusion in a particular product design using the first interface and the various system modules (predictive modeling module, build diagram system module, or package bonding generating module in various implementations) may then calculate the shape of an ideal clip for the particular dimensions of the die that was selected by the user. If the user then changes the size of the die (either manually or automatically through input/output of the predictive modeling module), the system then correspondingly resizes the clip. In various implementations, the system may determine the size of the clip using, by non-limiting example, a correlation between clip size and die size (rectangular, etc.), a maximum die coverage model, machine learning, statistical modeling, or any other factors affecting clip performance. In various virtual clip implementations, additional factors may be taken into account to attempt to ensure that the virtual clip as closely approximates the performance of the actual physical clip when the physical clip is made. These additional factors may include, in various implementations, a clip percent coverage reduction factor designed to reduce the coverage of the die by the clip by a percentage intended to mimic non-uniformities in a physical clip, such as but not limited to openings or holes in the clip needed in real life for mechanical/bonding considerations. These factors may also include, by non-limiting example, clip thickness, which allows the system to alter the thickness of the clip to reflect what the actual real world mechanical design of the particular clip may require. The goal of the virtual clip and the various factors is to closely enough approximate the physical and electrical performance of the actual physical clip to ensure the scalable SPICE models developed for the die and/or package create a design that reflects the ultimate electrical/thermal/magnetic performance of the discrete product. The use of virtual clips in various implementations may be an enabler that permits the system to carry out effective modeling of the discrete products so that the results correlate with the actual physical builds.</p><p id="p-0048" num="0047">Once the virtual clip's dimensions have been determined, the package bonding generating module <b>114</b> utilizes it for the purposes of developing the bonding diagram. The virtual clip may then be taken to an external vendor for production after the package design is completed. The package bonding generating module <b>114</b> may additionally consider other factors including, by non-limiting example, gate restrictions, die rotation, ribbon bonding, stitching orientation, multi-die packages, and any other parameter relevant to die attach, package structure, or die bonding.</p><p id="p-0049" num="0048">Initially, the die SPICE models used in the system are selected by selecting the die technology type and package SPICE models are selected by selecting the package technology/type from which the product will be built. These die SPICE models and package SPICE models are then used to generate a composite scalable SPICE model. The die SPICE models or the package SPICE models may be those that have been previously developed/derived during the process development cycle for use in the discrete product development system.</p><p id="p-0050" num="0049">Design system file providing module <b>118</b> may be configured to provide, using a processor, the graphic design system file, the package bonding diagram, and the die SPICE model parameters (and package SPICE model parameters, if a package was selected) to the product SPICE model generating module. Product SPICE model generating module <b>120</b> then generates, using a processor, a product SPICE model of the discrete device product using the die and package parameters and the scalable SPICE model for the die and scalable SPICE model for the package (if a package was selected). The product SPICE model generating module may also use a wide variety of computer aided modeling techniques to create the product spice model such as, by non-limiting example, a finite element modeling process, electrical simulations, deep learning techniques, neural networks, engineering calculations numerical methods, any combination of the foregoing, and any other engineering modeling technique capable of creating parameters that can be included in a SPICE model. The resulting product SPICE model is generated with a SPICE agnostic syntax such that any commercial SPICE simulator can be supported. Non-limiting example of commercial SPICE simulators may include the simulator marketed under the tradename PSPICE by Cadence Design Systems; the simulator marketed under the tradename LTSPICE by Analog Devices of Norwood Mass.; the simulator marketed under the tradename HSPICE by Synopsys, Inc. of Mountain View, Calif.; the simulator marketed under the tradename ELDO by Mentor Graphics of Wilsonville, Oreg.; the simulator marketed under the tradename SIMETRIX by SIMetrix Technologies LTD of Berkshire, UK; the simulator marketed under the tradename SPECTRE by Cadence Design Systems; the simulator marketed under the tradename ADS by Keysight Technologies Inc. of Santa Rosa, Calif.; the simulator marketed under the tradename SABER by Synopsys, Inc.; the simulator marketed under the tradename SIMPLORER by Ansys, Inc. of Canonsburg, Pa.; or the simulator marketed under the tradename MICROCAP by Spectrum Software.</p><p id="p-0051" num="0050">The product SPICE model may be transmitted for inclusion in a database of die or package SPICE models for later selection by a user. In various implementations, a package SPICE model included in the product SPICE model may be provided to a technology computer aided design (TCAD) module during mixed mode, capacitance, current-voltage, or other simulations that involve both finite element analysis and SPICE elements and analysis to enable the TCAD module to carry out such simulations. The output of the TCAD module can be stored in a database of that can be subsequently used by the system to generate new product SPICE models and further SPICE product models, using the methods disclosed herein</p><p id="p-0052" num="0051">In various implementations, product simulation module <b>122</b> receives, using a processor, the product SPICE model. The product simulation module <b>122</b> then uses the product SPICE model and the at least one test conditions specified to generate a set of data sheet characteristics for the product. In particular implementations the product simulation module may utilize any of the simulation software products disclosed in this document to conduct the simulations. Product simulation module <b>122</b> generates, using a processor, one or more datasheet characteristics of the discrete device product with the product SPICE model. By way of non-limiting example, the one or more datasheet characteristics may include maximum rating, thermal characteristics, package outline, current-voltage characteristics, capacitance and gate charge characteristics, dynamic switching and reverse recovery characteristics, safe operating area characteristics or any other desired discrete product parameter desired for inclusion in a datasheet. By way of non-limiting example, the one or more datasheet characteristics may include a product performance graph, a product performance table, a product pinout, a package outline, or a product specification.</p><p id="p-0053" num="0052">Product simulation module <b>122</b> then provides, using a processor, the one or more datasheet characteristics to a datasheet formation module <b>128</b>. Product datasheet generating module <b>128</b> generates, using a processor, a product datasheet for the discrete device product using the graphic design system file, the package bonding diagram, and the one or more datasheet characteristics. The product datasheet may be automatically submitted for inclusion in a product datasheet database. In various implementations the datasheet formation module <b>128</b> employs the document preparation system marketed the tradename LATEX by The LATEX Project. However, in other implementations, the data sheet formation module <b>128</b> may use many other document preparation systems, data formats, typefaces, and fonts as desired to generate datasheet. Once the product datasheet has been generated, the second interface is used to provide access for the user to the graphic design system file, the package bonding diagram, the product SPICE model, and the product datasheet as will be described hereafter.</p><p id="p-0054" num="0053">In various implementations, the use of the product simulation module and datasheet formation module may not be used during at least an initial phase of design. In such implementations, the system may be used iteratively by the user to find a die size and/or package size that can provide a desired electrical/performance characteristics with each simulation run taking seconds. Once the die size and/or package size has been identified, the user may then indicate (either through selecting a different mode of operation or selecting each module individually) that the product simulation module and datasheet formation module are to participate in the simulation flow of the system. In such implementations, this may allow the user to speed the process of finding key product parameters up front and then allow for in depth verification/checking of the full electrical/thermal performance of the product design afterward with the product simulation module and datasheet formation module. In various implementations, the first interface may have an indicator button or other selector to allow the user to leave out or include the product simulation module and datasheet formation module in the simulation process/flow.</p><p id="p-0055" num="0054">In some implementations, computing platform(s) <b>102</b>, remote platform(s) <b>104</b>, and/or external resources <b>130</b> may be operatively linked via one or more electronic communication links. For example, such electronic communication links may be established, at least in part, via a network such as the Internet and/or other networks. It will be appreciated that this is not intended to be limiting, and that the scope of this disclosure includes implementations in which computing platform(s) <b>102</b>, remote platform(s) <b>104</b>, and/or external resources <b>130</b> may be operatively linked via some other communication media.</p><p id="p-0056" num="0055">A given remote platform <b>104</b> may include one or more processors configured to execute computer program modules. The computer program modules may be configured to enable an expert or user associated with the given remote platform <b>104</b> to interface with system <b>100</b> and/or external resources <b>130</b>, and/or provide other functionality attributed herein to remote platform(s) <b>104</b>. By way of non-limiting example, a given remote platform <b>104</b> and/or a given computing platform <b>102</b> may include one or more of a server, a desktop computer, a laptop computer, a handheld computer, a tablet computing platform, a NetBook, a Smartphone, a gaming console, and/or other computing platforms.</p><p id="p-0057" num="0056">External resources <b>130</b> may include sources of information outside of system <b>100</b>, external entities participating with system <b>100</b>, and/or other resources. In some implementations, some or all of the functionality attributed herein to external resources <b>130</b> may be provided by resources included in system <b>100</b>.</p><p id="p-0058" num="0057">Computing platform(s) <b>102</b> may include electronic storage <b>132</b>, one or more processors <b>134</b>, and/or other components. Computing platform(s) <b>102</b> may include communication lines, or ports to enable the exchange of information with a network and/or other computing platforms. Illustration of computing platform(s) <b>102</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is not intended to be limiting. Computing platform(s) <b>102</b> may include a plurality of hardware, software, and/or firmware components operating together to provide the functionality attributed herein to computing platform(s) <b>102</b>. For example, computing platform(s) <b>102</b> may be implemented by a cloud of computing platforms operating together as computing platform(s) <b>102</b>.</p><p id="p-0059" num="0058">Electronic storage <b>132</b> may include non-transitory storage media that electronically stores information. The electronic storage media of electronic storage <b>132</b> may include one or both of system storage that is provided integrally (i.e., substantially non-removable) with computing platform(s) <b>102</b> and/or removable storage that is removably connectable to computing platform(s) <b>102</b> via, for example, a port (e.g., a USB port, a firewire port, etc.) or a drive (e.g., a disk drive, etc.). Electronic storage <b>132</b> may include one or more of optically readable storage media (e.g., optical disks, etc.), magnetically readable storage media (e.g., magnetic tape, magnetic hard drive, floppy drive, etc.), electrical charge-based storage media (e.g., EEPROM, RAM, etc.), solid-state storage media (e.g., flash drive, etc.), and/or other electronically readable storage media. Electronic storage <b>132</b> may include one or more virtual storage resources (e.g., cloud storage, a virtual private network, and/or other virtual storage resources). Electronic storage <b>132</b> may store software algorithms, information determined by processor(s) <b>134</b>, information received from computing platform(s) <b>102</b>, information received from remote platform(s) <b>104</b>, and/or other information that enables computing platform(s) <b>102</b> to function as described herein.</p><p id="p-0060" num="0059">Processor(s) <b>134</b> may be configured to provide information processing capabilities in computing platform(s) <b>102</b>. As such, processor(s) <b>134</b> may include one or more of a digital processor, an analog processor, a digital circuit designed to process information, an analog circuit designed to process information, a state machine, and/or other mechanisms for electronically processing information. Although processor(s) <b>134</b> is shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as a single entity, this is for illustrative purposes only. In some implementations, processor(s) <b>134</b> may include a plurality of processing units. These processing units may be physically located within the same device, or processor(s) <b>134</b> may represent processing functionality of a plurality of devices operating in coordination. Processor(s) <b>134</b> may be configured to execute modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b>, and/or other modules. Processor(s) <b>134</b> may be configured to execute modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b>, and/or other modules by software; hardware; firmware; some combination of software, hardware, and/or firmware; and/or other mechanisms for configuring processing capabilities on processor(s) <b>134</b>. As used herein, the term &#x201c;module&#x201d; may refer to any component or set of components that perform the functionality attributed to the module. This may include one or more physical processors during execution of processor readable instructions, the processor readable instructions, circuitry, hardware, storage media, or any other components.</p><p id="p-0061" num="0060">It should be appreciated that although modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b> are illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as being implemented within a single processing unit, in implementations in which processor(s) <b>134</b> includes multiple processing units, one or more of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b> may be implemented remotely from the other modules. The description of the functionality provided by the different modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b> described below is for illustrative purposes, and is not intended to be limiting, as any of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b> may provide more or less functionality than is described. For example, one or more of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b> may be eliminated, and some or all of its functionality may be provided by other ones of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b>. As another example, processor(s) <b>134</b> may be configured to execute one or more additional modules that may perform some or all of the functionality attributed below to one of modules <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>118</b>, <b>120</b>, <b>122</b>, and/or <b>128</b>.</p><p id="p-0062" num="0061">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, an implementation of a first interface or product data entry interface <b>300</b> is illustrated. As illustrated, in this implementation, the interface <b>300</b> includes a die type drop down <b>302</b> that allows the user to select between different die/device types. Also as illustrated, interface <b>300</b> includes a package type drop down <b>304</b> which allows the user to select between different package types, lead frame types, or package and lead frame types. As illustrated, the interface <b>300</b> includes a technology drop down <b>308</b> that allows the user to select a technology type either for the die, the package, or both the die or package. As illustrated, the interface <b>300</b> also includes a test condition drop down <b>306</b> which is designed to allow the user to select one or more test parameters for use by the product simulation module later in the process flow. While the use of drop-down menus has been illustrated in the interface implementation <b>300</b> illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, radio buttons or other control types may be used in other interface applications. Also as illustrated, the interface <b>300</b> includes a button <b>310</b> that allows the user to execute a simulation run that does not include the product simulation module and datasheet generating module (LITE) and a button <b>312</b> that allows the user to execute a simulation run that does include all of the modules in the flow (FULL).</p><p id="p-0063" num="0062">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an implementation of an output interface <b>400</b> is illustrated. In the output interface <b>400</b> the output of the various modules is displayed. For example, in the interface implementation <b>400</b> illustrated, various product characteristics <b>402</b> of the product that has been designed are illustrated in the interface. As illustrated, these product characteristics can include the name of the device, the technology, the voltage range of the device, the die size in X, the die size in Y, the scribe width, or any other desired product characteristic. In another portion of the interface <b>400</b> various package characteristics <b>404</b> may be included. As illustrated, these package characteristics may include the package name, number of source wires, source wire diameter, gate wire diameter, wire material, or any other characteristic of the package. The interface <b>400</b> also includes a section where that user can access via various links the graphics design system file, the bonding diagram, the data sheet, and the product SPICE model. The product SPICE model may be provided in encrypted and unencrypted form in various implementations and may be provided to be executable using any of the simulator types disclosed herein. Also included in various implementations may be a system progress report <b>410</b> which allows the user to see though color coding the progress of the system through predictive modeling, graphic design system file generation, bonding diagram generation, data sheet generation, and any other system module. In various implementations, the system may be able to show the user via the system progress report <b>410</b> whether any one of the modules encountered a fault so that the user can then take appropriate action. In very simple notations the fault may be by changing the color surrounding the text of the appropriate module from green to red or to any other desired color.</p><p id="p-0064" num="0063">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, following the completion of the output of the various modules, a die performance characteristics table <b>412</b> may be included in various interface implementations. In various interface implementations a Download button <b>414</b> may be included which may allow the user to download a file that contains the various die performance characteristics in various file formats which may be any disclosed in this document. Also in various implementations, a Recall button <b>416</b> may be used to allow the user to take the calculated die size, package characteristics, die performance characteristics, or any other calculated parameter from the output of the various modules and transfer them to a new version of the first interface for future and/or iterative processing by the user.</p><p id="p-0065" num="0064">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a second implementation of a first interface <b>500</b> is illustrated. In this implementation the user may select a die type using a die type selection dialog <b>504</b>, and a technology type using technology type selection dialog <b>506</b>. At this point the user then enters the particular electrical parameter(s) desired for the die and/or package optimization, in this case RDSon or Qg. Once the electrical parameter type has been selected via the electrical parameter dialog <b>508</b>, the user enters the desired value of the electrical parameter in dialog <b>510</b>. The user then presses the Enable Synthesizer button <b>502</b> to begin the work of the predictive modeling module with the die, technology, and electrical parameter information. In various implementations the predictive modeling module may be any disclosed in this document and may use any method of predictive modeling disclosed in this document. This includes using a back propagated model using fitted data, a back propagated model generated by a neural network, or a scalable SPICE model. Following work by the predictive modeling module, the interface may be updated to include a set of initial die parameters in the form of initial die parameters table <b>512</b>. These initial die parameters are those calculated to meet the particular electrical parameter value entered by the user. For example if the electrical parameter was RDSon, the goal of the predictive modeling module would be to find the smallest die area possible that would yield a device that produces the entered value for RDSon.</p><p id="p-0066" num="0065">Following simulation, if the product is a bare die, then these initial die parameters are those desired by the user as calculated by the predictive modeling module. However in those implementations where the system is being asked to model a discrete device product that includes both a die and the package, the predictive modeling module needs to take the electrical/thermal/magnetic effects of the package into account to design a product that meets the desired electrical parameter value. In such implementations, the user then uses package parameters dialog <b>514</b>. These package parameters may be any disclosed in this document for a package. Following entry of the package type and package parameters the user may then presses the Rerun With Package Information button <b>516</b> to send the package information to the predictive modeling module. In various implementations, the predictive modeling module uses a scalable SPICE model for the package like those disclosed herein in its calculations with the existing previously calculated initial die parameters to then recalculate the die parameters needed to meet the electrical parameter value target entered by the user. The initial die parameters table <b>512</b> then may be updated with the newly calculated die parameters. For example, the effect of adding the package may result in increasing die size from the originally calculated die size to enable the resulting product to reach the desired RDSon target.</p><p id="p-0067" num="0066">At this point, the user may then select the LITE button <b>518</b> or the FULL button <b>520</b> to carry out the work of the remaining modules disclosed in the system. In various implementations, the LITE button <b>518</b> may carry out the various simulation activities without producing a datasheet as previously disclosed in this document. In various implementations, the full button <b>520</b> may be used to carry out the various simulation activities and also generate a datasheet as previously disclosed in this document. Also in various implementations a recall button could be used to send die parameters, technology parameters, and/or electrical parameters to this implementation of the first interface <b>500</b> as disclosed in this document.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIGS. <b>2</b>A and <b>2</b>B</figref> illustrate an implementation of a method <b>200</b> for designing a discrete device product, in accordance with one or more implementations. The operations of method <b>200</b> presented below are intended to be illustrative. In some implementations, method <b>200</b> may be accomplished with one or more additional operations not described, and/or without one or more of the operations discussed. Additionally, the order in which the operations of method <b>200</b> are illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> and described below is not intended to be limiting.</p><p id="p-0069" num="0068">In some implementations, method <b>200</b> may be implemented in one or more processing devices (e.g., a digital processor, an analog processor, a digital circuit designed to process information, an analog circuit designed to process information, a state machine, and/or other mechanisms for electronically processing information). The one or more processing devices may include one or more devices executing some or all of the operations of method <b>200</b> in response to instructions stored electronically on an electronic storage medium. The one or more processing devices may include one or more devices configured through hardware, firmware, and/or software to be specifically designed for execution of one or more of the operations of method <b>200</b>.</p><p id="p-0070" num="0069">An operation <b>202</b> includes, using a first interface generated by a computing device, receiving from a user a selection of at least one die, a package type (if a package is to be selected), and at least one test condition. Operation <b>202</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to interface using module <b>108</b>, in accordance with one or more implementations. In various implementations the first interface may resemble interface <b>300</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0071" num="0070">An operation <b>204</b> includes generating, using a processor, a product die configuration (and a product package configuration, if a package was selected) using a predictive modeling module and the at least one die and the package type. Operation <b>204</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product generating module <b>110</b>, in accordance with one or more implementations. Any of the model types disclosed herein may be employed in the generation process.</p><p id="p-0072" num="0071">An operation <b>206</b> includes generating, using a processor, a graphic design system file using a graphic design system module with the product die configuration (and the product package configuration if a package was selected). Operation <b>206</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to design system generating module <b>112</b>, in accordance with one or more implementations.</p><p id="p-0073" num="0072">An operation <b>208</b> includes generating, using a processor, a package bonding diagram using a build diagram system module with the graphic design system file. Operation <b>208</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to package bonding generating module <b>114</b>, in accordance with one or more implementations.</p><p id="p-0074" num="0073">An operation <b>212</b> includes providing, using a processor, the graphic design system file, the package bonding diagram (if a package was selected), and a die SPICE model (along with a package SPICE model if a package was selected) to a product SPICE model generating module. Operation <b>212</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to design system file providing module <b>118</b>, in accordance with one or more implementations.</p><p id="p-0075" num="0074">An operation <b>214</b> includes generating, using a processor, a product SPICE model of the discrete device product using the product SPICE model generating module. Operation <b>214</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product SPICE model generating module <b>120</b>, in accordance with one or more implementations.</p><p id="p-0076" num="0075">An operation <b>216</b> includes providing, using a processor, the product SPICE model to a product simulation module. Operation <b>216</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product simulation module <b>122</b>, in accordance with one or more implementations.</p><p id="p-0077" num="0076">An operation <b>218</b> includes generating, using a processor, one or more datasheet characteristics of the discrete device product with the product SPICE model and the product simulation module <b>122</b>. Operation <b>218</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product simulation module <b>122</b>, in accordance with one or more implementations.</p><p id="p-0078" num="0077">An operation <b>220</b> includes providing, using a processor, the one or more datasheet characteristics to a datasheet formation module <b>128</b>. Operation <b>220</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to datasheet characteristic formation module <b>128</b> or product simulation module <b>122</b>, in accordance with one or more implementations.</p><p id="p-0079" num="0078">An operation <b>222</b> includes generating, using a processor, a product datasheet for the discrete device product using the graphic design system file, the package bonding diagram, and the one or more datasheet characteristics. Operation <b>222</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to product datasheet generating module <b>128</b>, in accordance with one or more implementations.</p><p id="p-0080" num="0079">An operation <b>224</b> includes using a second interface generated by a computing device, providing access to the graphic design system file. Access to the package bonding diagram, the package SPICE model, and the product datasheet are provided to the user via the second interface. Operation <b>224</b> may be performed by one or more hardware processors configured by machine-readable instructions including a module that is the same as or similar to interface generating module <b>108</b>, in accordance with one or more implementations. This interface may look, and various implementations, like the interface illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0081" num="0080">In places where the description above refers to particular implementations for designing a discrete device product and implementing components, sub-components, methods and sub-methods, it should be readily apparent that a number of modifications may be made without departing from the spirit thereof and that these implementations, implementing components, sub-components, methods and sub-methods may be applied to other techniques for designing a discrete device product.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system configured for designing a discrete device product, the system comprising:<claim-text>one or more hardware processors configured by machine-readable instructions to:</claim-text><claim-text>use a first interface generated by a computing device;</claim-text><claim-text>receive from a user a selection of at least one discrete device die and a selection of at least one test condition;</claim-text><claim-text>generate, using the one or more processors, a product die configuration using the at least one discrete device die and a predictive modeling module;</claim-text><claim-text>generate, using the one or more processors, a graphic design system file using a graphic design system module with the product die configuration;</claim-text><claim-text>generate, using the one or more processors, a package bonding diagram using a build diagram system module with the graphic design system file;</claim-text><claim-text>generate, using the one or more processors, a product SPICE model corresponding with the product die configuration with a product SPICE model generating module;</claim-text><claim-text>provide, using the one or more processors, the product SPICE model to a product simulation module;</claim-text><claim-text>generate, using the one or more processors, one or more datasheet characteristics of the discrete device product with the product SPICE model using the product simulation module;</claim-text><claim-text>provide, using the one or more processors, the one or more datasheet characteristics to a datasheet formation module;</claim-text><claim-text>generate, using the one or more processors, product datasheet for the discrete device product using the graphic design system file, the package bonding diagram, and the one or more datasheet characteristics; and</claim-text><claim-text>using a second interface generated by a computing device, provide access to the graphic design system file, the package bonding diagram, the product SPICE model, and the product datasheet to the user.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the system is further configured to: receive a selection of a package type, include the package type in the product die configuration, select a die SPICE model corresponding with the at least one discrete device die, and select a package SPICE model corresponding with the package type for generating the product SPICE model with the product SPICE model generating module.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the predictive modeling module comprises a back propagated model and the back propagated model is used to predict one or more electrical performance parameters of the discrete device product.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the graphic design system module uses one of a native parameterized layout cell (PCELL) or a generic parameterized layout cell (PCELL).</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the predictive modeling module comprises a back propagated model generated by fitting data from previous discrete device products.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the back propagated model is used to predict a die dimension, gate pad location, or gate runner.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the build diagram system module uses a virtual clip to generate the package bonding diagram.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system configured for designing a discrete device product, the system comprising:<claim-text>one or more hardware processors configured by machine-readable instructions to:</claim-text><claim-text>use a first interface generated by a computing device;</claim-text><claim-text>receive from a user a selection of at least one discrete device die and a selection of at least one test condition;</claim-text><claim-text>generate, using the one or more processors, a product die configuration the at least one discrete device die and a predictive modeling module comprising a back propagated model generated by fitting data from previous discrete device products;</claim-text><claim-text>generate, using the one or more processors, a graphic design system file using a graphic design system module with the product die configuration;</claim-text><claim-text>generate, using the one or more processors, a package bonding diagram using a build diagram system module with the graphic design system file;</claim-text><claim-text>generate, using the one or more processors, a product SPICE model corresponding with the product die configuration with a product SPICE model generating module;</claim-text><claim-text>provide, using the one or more processors, the product SPICE model to a product simulation module;</claim-text><claim-text>generate, using the one or more processors, one or more datasheet characteristics of the discrete device product with the product SPICE model using the product simulation module;</claim-text><claim-text>provide, using the one or more processors, the one or more datasheet characteristics to a datasheet formation module;</claim-text><claim-text>generate, using the one or more processors, product datasheet for the discrete device product using the graphic design system file, the package bonding diagram, and the one or more datasheet characteristics; and</claim-text><claim-text>using a second interface generated by a computing device, provide access to the graphic design system file, the package bonding diagram, the product SPICE model, and the product datasheet to the user;</claim-text></claim-text><claim-text>wherein the build diagram system module uses a virtual clip to generate the package bonding diagram.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, where the system is further configured to: receive a selection of a package type, include the package type in the product die configuration, select a die SPICE model corresponding with the at least one discrete device die, and select a package SPICE model corresponding with the package type for generating the product SPICE model with the product SPICE model generating module.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the back propagated model is used to predict one or more electrical performance parameters of the discrete device product.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the back propagated model is used to predict a die dimension, gate pad location, or gate runner.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the graphic design system module uses a native parameterized layout cell (PCELL).</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the graphic design system module uses a generic parameterized layout cell (PCELL).</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A method of designing a discrete device product, the method comprising:<claim-text>using a first interface generated by a computing device, receiving from a user a selection of at least one discrete device die and a selection of at least one test condition;</claim-text><claim-text>generating, using a processor, a product die configuration and a product package configuration using a predictive modeling module and the at least one discrete device die, the predictive modeling module comprising a back propagated model;</claim-text><claim-text>generating, using the processor, a graphic design system file using a graphic design system module with the product die configuration;</claim-text><claim-text>generating, using the processor, a package bonding diagram using a build diagram system module with the graphic design system file;</claim-text><claim-text>generating, using the processor, a product SPICE model corresponding with the product die configuration using a product SPICE model generating module;</claim-text><claim-text>providing, using the processor, the product SPICE model to a product simulation module;</claim-text><claim-text>generating, using the processor, one or more datasheet characteristics of the discrete device product with the product SPICE model;</claim-text><claim-text>providing, using the processor, the one or more datasheet characteristics to a datasheet formation module;</claim-text><claim-text>generating, using the processor, a product datasheet for the discrete device product using the graphic design system file, the package bonding diagram, and the one or more datasheet characteristics; and</claim-text><claim-text>using a second interface generated by a computing device, providing access to the graphic design system file, the package bonding diagram, the product SPICE model, and the product datasheet to the user.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising: receiving a selection of a package type, including the package type in the product die configuration, selecting a die SPICE model corresponding with the at least one discrete device die, and selecting a package SPICE model corresponding with the package type for generating the product SPICE model with the product SPICE model generating module.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the predictive modeling module comprises a back propagated model and the back propagated model is used to predict one or more electrical performance parameters of the discrete device product.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the back propagated model is used to predict a die dimension, gate pad location, or gate runner.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the graphic design system module uses a native parameterized layout cell (PCELL) or a generic parameterized layout cell (PCELL).</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the predictive modeling module comprises a back propagated model generated by fitting data from previous discrete device products.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the build diagram system module uses a virtual clip to generate the package bonding diagram.</claim-text></claim></claims></us-patent-application>