<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007252A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007252</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17780429</doc-number><date>20201125</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="regional"><country>EP</country><doc-number>19211643.2</doc-number><date>20191126</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>12</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>129</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>12</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>129</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">Coding Concepts for a Transformed Representation of a Sample Block</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Fraunhofer-Gesellschaft Zur F&#xf6;rderung derangewandten Forschung e.V.</orgname><address><city>Munchen</city><country>DE</country></address></addressbook><residence><country>DE</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Bross</last-name><first-name>Benjamin</first-name><address><city>Berlin</city><country>DE</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>De Lux&#xe1;n Hern&#xe1;ndez</last-name><first-name>Santiago</first-name><address><city>Berlin</city><country>DE</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Schwarz</last-name><first-name>Heiko</first-name><address><city>Berlin</city><country>DE</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Marpe</last-name><first-name>Detlev</first-name><address><city>Berlin</city><country>DE</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Wiegand</last-name><first-name>Thomas</first-name><address><city>Berlin</city><country>DE</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/EP2020/083440</doc-number><date>20201125</date></document-id><us-371c12-date><date>20220526</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Decoder for decoding a transformed representation of a sample block from a data stream. If a first coded coefficient is located inside a predetermined subarea of the transform coefficient block and if the underlying transform is within a first set of available transforms, the decoder decodes coefficients along a first coefficient scan order. If the transform is within a second set of In available transforms, the decoder decodes coefficients located within the predetermined subarea along a second coefficient scan order, and infers that coefficients located outside the predetermined subarea are zero. The first coefficient scan order is so that coefficients outside the predetermined subarea are scanned between two transform coefficients located inside the predetermined subarea. The second coefficient scan order does not scan any coefficient outside the predetermined subarea between scanning the coefficients within the predetermined subarea.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="74.17mm" wi="158.75mm" file="US20230007252A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="243.92mm" wi="135.13mm" orientation="landscape" file="US20230007252A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="228.85mm" wi="133.69mm" orientation="landscape" file="US20230007252A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="241.05mm" wi="135.72mm" orientation="landscape" file="US20230007252A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="235.63mm" wi="156.04mm" orientation="landscape" file="US20230007252A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="235.63mm" wi="132.84mm" orientation="landscape" file="US20230007252A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="234.87mm" wi="160.53mm" orientation="landscape" file="US20230007252A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="253.41mm" wi="173.65mm" orientation="landscape" file="US20230007252A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="251.88mm" wi="159.26mm" file="US20230007252A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="242.23mm" wi="173.06mm" orientation="landscape" file="US20230007252A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="228.01mm" wi="139.45mm" orientation="landscape" file="US20230007252A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="259.00mm" wi="172.72mm" orientation="landscape" file="US20230007252A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="206.59mm" wi="105.58mm" file="US20230007252A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="254.51mm" wi="172.72mm" orientation="landscape" file="US20230007252A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="252.48mm" wi="165.52mm" orientation="landscape" file="US20230007252A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="226.06mm" wi="166.54mm" orientation="landscape" file="US20230007252A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL</heading><p id="p-0002" num="0001">Embodiments according to the invention related to Decoder for decoding a transformed representation of a sample block from a data stream, Encoder for encoding a transformed representation of a sample block into a data stream, corresponding methods, Computer programs having a program code for performing, when running on a computer, a method for decoding/encoding a transformed representation of a sample block from/into a data stream and a data stream.</p><heading id="h-0002" level="1">INTRODUCTION</heading><p id="p-0003" num="0002">Hybrid video compression schemes, such as AVC and HEVC, rely on block-based prediction followed by transform of the prediction residual, quantization of the transform coefficients, and entropy coding of the quantization indices. The latter is also referred to as transform coefficient coding or residual coding. The following description uses the term transform also for integer approximations of transforms as implemented in practical hybrid video compression schemes.</p><p id="p-0004" num="0003">Conventionally, a fixed transform is specified in a video coding standard for each potential block size N&#xd7;N. For example, the HEVC standard specifies the usage of a DCT-II, except for intra-picture predicted 4&#xd7;4 blocks, for which a DST-VI is used. Higher compression efficiency can be achieved by enabling a choice between multiple pre-defined transform types. The current draft for Versatile Video Coding (VVC) specifies a set of five different horizontal and vertical transform type combinations (including the DCT-II, DST-VII, and DCT-VIII). The bitstream includes a syntax by which the transform type selected by the encoder is signaled to the decoder. The coding of transform coefficient levels is independent of and signaled before the selected transform type. For complexity reasons, non-DCT-II transform types are applied only to rows and columns that contain no more than 16 non-zero coefficients. In this case, the blocks to be transformed (transform blocks) can have a width and height greater than 16 but all coefficients outside the top-left 16&#xd7;16 area are required to be zero. Furthermore, the transforms are applied to the complete transform block greater than 16&#xd7;16 so that the resulting block of residual samples is also greater than 16&#xd7;16. This way of reducing the implementation logic of transforms is further referred to as zero-out.</p><p id="p-0005" num="0004">Furthermore, the current VVC draft specifies an additional low frequency non-separable transform (LFNST), which can be applied after the transform at the encoder and its inverse at the decoder before the inverse transform. For this LFNST multiple transform kernels can be selected at the encoder and signaled to the decoder using an LFNST index. For complexity reason, the LFNST can only be combined with the DCT-II in the current VVC draft.</p><heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading><p id="p-0006" num="0005">Current state-of-the-art video coding technologies, including the VVC development, specify means to signal one of multiple pre-defined transform types. The transform coefficient levels are coded before the syntax indicating the selected transform, e.g. a multiple transform selection (MTS) index.</p><p id="p-0007" num="0006">The transform coefficient levels are coded in subblocks or coefficient groups. The subblocks are processed in using one scan pattern and the coefficient inside the subblocks are processed using a scan pattern as well. As in the current VVC draft 7, both scan patterns can be a backward/reverse diagonal scan. However, other scan pattern and directions can be employed as well. <figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a 32&#xd7;32 transform block <b>104</b>, which is subdivided into 64 4&#xd7;4 subblocks <b>117</b>. In this example, the subblocks <b>117</b> are processed reverse diagonal scan <b>115</b>, i.e. from bottom-right <b>103</b> to top-left corner <b>101</b>). <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a backwards/inverse diagonal scanning of 4&#xd7;4 subblocks <b>117</b> inside a 32&#xd7;32 transform block <b>104</b>. DCT-based transforms tend to concentrate the energy in the top left corner <b>101</b> and thus, quantized coefficient values tend to become zero in the bottom-right corner <b>103</b> of the block, i.e. the transform block <b>104</b>, after quantization. To prevent coding and decoding a sequence of zeros before the first non-zero coefficient <b>102</b> in scan order <b>115</b>, the position of the first (last) non-zero or significant coefficient <b>102</b> in (inverse) scan order <b>115</b> is signaled before processing the subblock. Knowing that, only the subblock <b>117</b> that contains this first significant coefficient, i.e. the first non-zero coefficient <b>102</b>, and all subsequent subblocks <b>117</b> in scan order <b>115</b> are processed, as shown on the right side of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0008" num="0007">Longer transforms, e.g. with 32 coefficients in one direction, require more logic and memory in implementations. As already mentioned before, this motivated the zero-out design in the current VVC draft. In this design, all transform types can be applied to 32 coefficients in each direction, but for the non-DCT-II types, the last 16 coefficients in each direction are required to be equal to 0. <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates this process where a 32&#xd7;32 block, e.g. a sample block <b>84</b>, of reconstructed residual samples is generated by applying a transform on a 32&#xd7;32 transform block <b>104</b> where only the first 16&#xd7;16 coefficients can be non-zero. <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a transform coefficient level zero-out of a 32&#xd7;32 transform block <b>104</b> before inverse transform <b>40</b>/<b>54</b>.</p><p id="p-0009" num="0008">The information of which transform is selected, e.g. an MTS index, is signaled after the transform coefficients. Consequently, the position of the first or last significant coefficient <b>102</b> is known. When this coefficient is outside the 16&#xd7;16 non-zero area, i.e. the predetermined subarea <b>106</b>, there is no need to signal the transform selection because the only allowed transform in this case is the DCT-II. However, in this current design, it cannot be guaranteed that all coefficients outside the 16&#xd7;16 area are equal to zero. This can be seen in the example on the right-hand side in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, where the last position, i.e. the first or last coded coefficient position <b>102</b>, is located inside the 16&#xd7;16 non-zero area but subsequent subblocks in scan pattern <b>110</b> are outside this area. In case that these non-zero coefficients exist, an encoder constraint has to ensure that the signaled transform is the DCT-II, e.g. by always signaling an MTS index equal to 0. This produces a signaling overhead because the DCT-II is explicitly signaled although always required to be equal to 0. In the following a non-zero requirement might define that all non-zero transform coefficients are located inside the non-zero area, i.e. the predetermined subarea <b>106</b>, and that all transform coefficients outside the non-zero area have to be zero. In the following two approaches are described to tackle this aspect. <figref idref="DRAWINGS">FIG. <b>3</b></figref> shows on the left-hand side a modified diagonal scanning <b>110</b> of subblocks for zero-out, according to an embodiment of the invention.</p><p id="p-0010" num="0009">When the multiple transform selection is combined with an additional transform, such as the aforementioned LFNST, the combination can also be restricted to reduce implementation logic. In the current VVC draft, e.g., the LFSNT can only be combined with the DCT-II and an LFNST index, indicating whether LFNST is applied and if applied which kernel, is signaled before the MTS index. When the LFNST index indicates the use of an LFNST kernel, the MTS index is not signaled and inferred to be equal to 0, i.e. DCT-II. A simplified syntax diagram is illustrated on the left-hand side of <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0011" num="0010">Therefore, it is desired to provide concepts for rendering picture coding and/or video coding more efficient to support choosing between multiple pre-defined transform types for a block of a picture.</p><p id="p-0012" num="0011">Additionally, or alternatively, it is desired to reduce a bit stream and thus a signalization cost, e.g., reducing signaling overhead.</p><p id="p-0013" num="0012">This is achieved by the subject matter of the independent claims of the present application.</p><p id="p-0014" num="0013">Further embodiments according to the invention are defined by the subject matter of the dependent claims of the present application.</p><heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0015" num="0014">In accordance with a first aspect of the present invention, the inventors of the present application realized that one problem encountered when trying to enable a selection of a transform for a block of a picture stems from the fact that for some transforms, e.g., transforms within a second set of transforms, like non-DCT-II transforms, it is required that non-zero coefficients of a transform coefficient block are only allowed/located in a predetermined subarea of the transform coefficient block. Depending on a position of a first coded coefficient position, i.e. a first non-zero coefficient, inside the predetermined subarea of the transform coefficient block, it is possible that zero coefficients outside the predetermined subarea are decoded/encoded along a coefficient scan order. The transform coefficients might be scanned according to the coefficient scan order from the first coded coefficient position onwards to a last scanning position, e.g., the coefficient in the top-left corner, i.e. a DC coefficient, or from a coefficient in the top-left corner of the transform coefficient block onwards to the first coded coefficient position, which might be understood as a last coded coefficient position in this latter case. According to the first aspect of the present application, this difficulty of decoding/encoding zero coefficients is overcome by using a different scanning order for transform coefficient blocks associated with transforms within a first set of one or more available transforms of a set of available transforms than for transform coefficient blocks associated with transforms within a second set of one or more available transforms of the set of available transforms. In case the transform coefficient block is associated with a transform within the first set of one or more available transforms, the transform coefficient block comprises non-zero coefficients outside the predetermined subarea of the transform coefficient block, and in case the transform coefficient block is associated with a transform within the second set of one or more available transforms, the transform coefficient block comprises non-zero coefficients only inside the predetermined subarea of the transform coefficient block. The inventors found, that using different coefficient scan orders dependent on a transform underlying the respective transform coefficient block is advantageous in terms of improving coding efficiency and reducing signaling overhead. This is based on the idea that the transform can indicate whether all non-zero coefficients are located inside the predetermined subarea of the transform coefficient block or not, whereby the scan order can be chosen such that only non-zero transform coefficients are decoded/encoded along the chosen scan order. If the transform underlying the transform coefficient block is within the first set of one or more available transforms, values of the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located from the first coded coefficient position onwards to a last scanned position, are decoded/encoded and a decoder infers that transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position, are zero. If the transform underlying the transform coefficient block is within the second set of one or more available transforms, values of transform coefficients of the transform coefficient block which are located within the predetermined subarea and are, along a second coefficient scan order, located from the first coded coefficient position onwards to the last scanned position, are decoded/encoded and a decoder infers that transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position and transform coefficients of the transform coefficient block which are located outside the predetermined subarea are zero. Thus it can be prevented to decode/encode zero coefficients improving the coding efficiency, since less transform coefficients might be needed to scan.</p><p id="p-0016" num="0015">Accordingly, in accordance with a first aspect of the present application, a decoder/encoder for decoding/encoding a transformed representation of a sample block from/into a data stream, is configured to decode/encode a coefficient position information from/into the data stream. The coefficient position information is indicative of a first coded coefficient position within a transform coefficient block. The first coded coefficient position might either indicate a position of a first non-zero transform coefficient in coefficient scan order or a position of a last non-zero transform coefficient in an inverse coefficient scan order. The decoder/encoder is configured to check whether the first coded coefficient position is located within a predetermined subarea of the transform coefficient block. The predetermined subarea might define a subarea of the transform coefficient block, inside which subarea transform coefficients can be non-zero and outside of which subarea all transform coefficients have to be zero for certain transforms. According to an embodiment, the transform coefficient block can comprise non-zero transform coefficients outside the predetermined subarea, in case the transform underlying the transform coefficient block is within a first set of one or more available transforms of a set of available transforms, and the transform coefficients outside the predetermined subarea are zero, in case the transform underlying the transform coefficient block is within a second set of one or more available transforms of the set of available transforms. The predetermined subarea might consist of 16&#xd7;16 transform coefficients. The predetermined subarea might be located in the top-left of the transform coefficient block. If the first coded coefficient position is located inside the predetermined subarea of the transform coefficient block, it is checked whether the transform underlying the transform coefficient block is within the first set of one or more available transforms of the set of available transforms or the second set of one or more available transforms of the set of available transforms. The decoder is configured to perform this check, using transformation information transmitted in the data stream. If the transform underlying the transform coefficient block is within the first set of one or more available transforms, the decoder/encoder is configured to decode/encode the values of the transform coefficients of the transform coefficient block which are, along a first coefficient scan order, located from the first coded coefficient position onwards to a last scanned position, wherein transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position are zero. If the transform underlying the transform coefficient block is within the first set of one or more available transforms, the decoder is configured to infer that the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position are zero. If the transform underlying the transform coefficient block is within the second set of one or more available transforms, the decoder/encoder is configured to decode/encode values of transform coefficients of the transform coefficient block which are located within the predetermined subarea and are, along a second coefficient scan order, located from the first coded coefficient position onwards to the last scanned position, wherein transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position and transform coefficients of the transform coefficient block which are located outside the predetermined subarea are zero. If the transform underlying the transform coefficient block is within the second set of one or more available transforms, the decoder is configured to infer that transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position and transform coefficients of the transform coefficient block which are located outside the predetermined subarea are zero. The transform underlying the transform coefficient block along with the transform coefficient block defines the transformed representation. The second coefficient scan order scans the transform coefficients within the predetermined subarea without scanning any transform coefficient outside the predetermined subarea between the transform coefficients within the predetermined subarea, and the first coefficient scan order scans the transform coefficients in a manner so that there are one or more transform coefficients outside the predetermined subarea which are scanned by the first coefficient scan order between two transform coefficients located inside the predetermined subarea.</p><p id="p-0017" num="0016">According to an embodiment, the decoder/encoder is configured to, if the first coded coefficient position is located outside the predetermined subarea of the transform coefficient block, reduce a set of available transforms to the first set of one or more available transforms by removing from the set of available transforms the second set of one or more available transforms and determine the transform underlying the transform coefficient block out of the first set of one or more available transforms. The decoder/encoder is configured to decode/encode the values of the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located from the first coded coefficient position onwards to a last scanned position, wherein the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position are zero. The decoder is configured to infer that the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position are zero. Thus, in case the first coded coefficient position is located outside the predetermined subarea of the transform coefficient block, it is possible for the decoder to infer the transform underlying the transform coefficient block and it is not necessary for the encoder to encode transformation information related to the transform coefficient block into the data stream, whereby the bitstream can be reduced and a high coding efficiency can be achieved.</p><p id="p-0018" num="0017">According to an embodiment, the decoder/encoder is configured to decode/encode the transformation information from/into the data stream using context-adaptive entropy decoding/encoding, e.g. context adaptive binary arithmetic coding, using a predetermined probability model, e.g., an estimated probability for a certain, e.g., LPS (least probable symbol), binary value as updated for a certain context. The decoder/encoder is configured to determine the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block. The decoder/encoder might be configured to determine the predetermined probability model via determining the, e.g., continuously updated, context depending on where the first coded coefficient position is located within the transform coefficient block.</p><p id="p-0019" num="0018">According to an embodiment, the decoder/encoder is configured to, in determining the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block, set the predetermined probability model to a first probability model, e.g., first context, if the first coded coefficient position coincides with the last scanned position, set the predetermined probability model to a second probability model, e.g., second context, if the first coded coefficient position is, along the first coefficient scan order, no more than a predetermined number of transform coefficients away from the last scanned position, and set the predetermined probability model to a third probability model, e.g., third context, if the first coded coefficient position is, along the first coefficient scan order, more than the predetermined number of transform coefficients away from the last scanned position. The first and second coefficient scan orders coincide in the last scanned position and the predetermined number of transform coefficients upstream the last scanned position. In other words, up until that predetermined number, both scans are the same, or in even other words, both scans end at the last scanned position and are equal in the predetermined number of coefficients upstream the last scanned position. In other words, upstream the last scanned position up until that predetermined number, both scans are the same. The predetermined probability model might be set to the first probability model, if the transform coefficient block comprises only one non-zero transform coefficient. This single non-zero transform coefficient is located at the first coded coefficient position.</p><p id="p-0020" num="0019">According to another embodiment, the decoder/encoder is configured to, in determining the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block, set the predetermined probability model to a first probability model, if the first coded coefficient position is, along the first coefficient scan order, no more than a predetermined number of transform coefficients away from, or coincides with the last scanned position and set the predetermined probability model to a second probability model, if the first coded transform coefficient position is, along the first coefficient scan order, more than the predetermined number of coefficients away from the last scanned position. The first and second coefficient scan orders coincide in the last scanned position and the predetermined number of transform coefficients upstream the last scanned position.</p><p id="p-0021" num="0020">According to an embodiment, the set of available transforms comprises one or more multi-stage transforms which correspond to a concatenation of a primary transform and a secondary transform within the predetermined subarea and consist of the primary transform outside the predetermined subarea, and which are contained in the second set of one or more available transforms. In other words, the second set of one or more available transforms of the set of available transforms comprises the one or more multi-stage transforms. Additionally, the set of available transforms comprises a set of primary-only transforms comprising one or more first primary-only transforms out of which the first set of one or more available transforms consists, and one or more second primary-only transforms which are contained in the second set of one or more available transforms. The decoder/encoder is configured to decode/encode a secondary transform indicator from/into the data stream, the secondary transform indicator indicating whether the transform underlying the transform coefficient block is a multi-stage transform, i.e. within the second set of one or more available transforms, and which one out of the one or more multi-stage transforms, or whether the transform underlying the transform coefficient block is a primary-only transform. If the secondary transform indicator indicates that the transform underlying the transform coefficient block is a primary-only transform, the decoder/encoder is configured to decode/encode a transform indicator, e.g., a primary transform indicator, from/into the data stream which identifies the primary-only transform out of the set of primary-only transforms. Only the secondary transform indicator has to be decoded/encoded from/into the data stream in case the transform underlying the transform coefficient block is a multi-stage transform, since the secondary transform indicator already indicates the primary transform and the secondary transform. Thus, a high coding efficiency can be achieved, since the additional transform indicator might only be necessary in case the transform underlying the transform coefficient block is not a multi-stage transform.</p><p id="p-0022" num="0021">According to an embodiment, the set of available transforms comprises a set of one or more multi-stage transforms which correspond to a concatenation of a primary transform and a secondary transform within the predetermined subarea and consist of the primary transform outside the predetermined subarea, and which are contained in the second set of one or more available transforms. Additionally, the set of available transforms comprises a set of primary-only transforms comprising one or more first primary-only transforms out of which the first set of one or more available transforms consists, and one or more second primary-only transforms which are contained in the second set of one or more available transforms. The decoder/encoder is configured to decode/encode a secondary transform indicator from/into the data stream. The secondary transform indicator indicates whether the transform underlying the transform coefficient block is a multi-stage transform, and, if yes, the secondary transform of the multi-stage transform, or whether the transform underlying the transform coefficient block is a primary-only transform. In other words, the secondary transform indicator indicates whether the transform underlying the transform coefficient block is a multi-stage transform or a primary-only transform. The decoder/encoder is configured to decode/encode a primary transform indicator from/into the data stream which identifies, in case of the secondary transform indicator indicating that the transform underlying the transform coefficient block is a primary-only transform, the primary-only transform out of the set of primary-only transforms, and, in case of the secondary transform indicator indicating that the transform underlying the transform coefficient block is a multi-stage transform, and if the set of one or more multi-stage transforms comprises more than one multi-stage transform with mutually different primary transforms, the primary transform of the multi-stage transform. Thus a high variability and flexibility in the selection of the transform underlying the transform coefficient block, especially in terms of multi-stage transforms, can be achieved, resulting in a high coding efficiency. In case all multi-stage transforms are associated with the same primary transform, i.e. the multi-stage transforms do not have mutually different primary transforms, it is not necessary to decode/encode the primary transform indicator.</p><p id="p-0023" num="0022">According to an embodiment, the set of available transforms comprises multi-stage transforms, e.g., a set of two or more multi-stage transforms, each of which corresponds to a concatenation of a primary transform and a secondary transform within the predetermined subarea and consists of the primary transform outside the predetermined subarea, and which is contained in the second set of one or more available transforms. The second set of one or more available transforms might comprise all multi-stage transforms. Additionally, the set of available transforms comprises a set of primary-only transforms comprising a first primary-only transform, e.g., a DCT-II transform, out of which the first set of one or more available transforms consists, and to which the primary transform for all of the one or more multi-stage transforms is equal, and one or more second primary-only transforms, e.g. non-DCT-II transforms, which are contained in the second set of one or more available transforms. The decoder/encoder is configured to decode/encode a primary transform indicator from/into the data stream, the primary transform indicator indicating a first transform out of a set, e.g. the set of primary-only transforms, including the first primary-only transform and the one or more second primary-only transforms. If the first transform is the first primary-only transform, the decoder/encoder is configured to decode/encode a secondary transform indicator from/into the data stream which identifies the transform underlying the transform coefficient block out of a set including the first primary-only transform and the multi-stage transforms, wherein the transform underlying the transform coefficient block is, in case of the first transform being one of the one or more second primary-only transforms, the one second primary-only transform. In other words, if the primary transform indicator indicates that the first transform is one out of the one or more second primary-only transforms, the transform underlying the transform coefficient block is the indicated second primary-only transform, and if the primary transform indicator indicates that the first transform is the first primary-only transform, the transform underlying the transform coefficient block is, depending on the secondary transform indicator, either the first primary-only transform or a multi-stage transform corresponding to a concatenation of the first primary-only transform and a secondary transform. In the latter case, the secondary transform indicator might directly indicate/point to the transform underlying the transform coefficient block. Thus, the transform underlying the transform coefficient block can be selected and indicated in the data stream very efficiently resulting in a high coding efficiency.</p><p id="p-0024" num="0023">According to an embodiment, the set of available transforms comprises a set of multi-stage transforms each of which corresponds to a concatenation of a primary transform and a secondary transform within the predetermined subarea and consists of the primary transform outside the predetermined subarea, and which is contained in the second set of one or more available transforms. Additionally, the set of available transforms comprises a set of primary-only transforms comprising one or more first primary-only transforms out of which the first set of one or more available transforms consists, and one or more second primary-only transforms which are contained in the second set of one or more available transforms. The decoder/encoder is configured to decode/encode a primary transform indicator from/into the data stream. The primary transform indicator indicates a first transform out of a set, e.g., out of the set of primary-only transforms, including the one or more first primary-only transforms and the one or more second primary-only transforms. If the first transform is a first primary-only transform which is equal to a primary transform of one or more of the multi-stage transforms, the decoder/encoder is configured to decode/encode a secondary transform indicator from/into the data stream which identifies the transform underlying the transform coefficient block out of a set including the first primary-only transform and the one or more multi-stage transforms whose primary transform equals the first primary-only transform. The special primary transform indicator and secondary transform indicator result in a high coding efficiency enabling, among other things, a great choice between different first primary-only transforms and between different multi-stage transforms with different primary transforms for a selection of the transform underlying the transform coefficient block. By enabling such a choice, it is possible to achieve a high compression efficiency.</p><p id="p-0025" num="0024">According to an embodiment, the decoder/encoder is configured to perform the decoding/encoding of the primary transform indicator from/into the data stream using context-adaptive entropy decoding/encoding using a predetermined probability model. The decoder/encoder is configured to determine the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block.</p><p id="p-0026" num="0025">According to an embodiment, the decoder/encoder is configured to, in determining the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block, set the predetermined probability model to a first probability model, if the first coded coefficient position coincides with the last scanned position, set the predetermined probability model to a second probability model, if the first coded coefficient position is, along the first coefficient scan order, no more than a predetermined number of transform coefficients away from the last scanned position, and set the predetermined probability model to a third probability model, if the first coded coefficient position is, along the first coefficient scan order, more than the predetermined number of transform coefficients away from the last scanned position. The first and second coefficient scan orders coincide in the last scanned position and the predetermined number of transform coefficients upstream the last scanned position.</p><p id="p-0027" num="0026">According to an embodiment, the decoder/encoder is configured to, in determining the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block, set the predetermined probability model to a first probability model, if the first coded coefficient position is, along the first coefficient scan order, no more than a predetermined number of transform coefficients away from, or coincides with the last scanned position, and set the predetermined probability model to a second probability model, if the first coded transform coefficient position is, along the first coefficient scan order, more than the predetermined number of coefficients away from the last scanned position. The first and second coefficient scan orders coincide in the last scanned position and the predetermined number of transform coefficients upstream the last scanned position.</p><p id="p-0028" num="0027">According to an embodiment, the primary transform is equal for all of the one or more multi-stage transforms and is also equal to one of the one or more first primary-only transforms.</p><p id="p-0029" num="0028">According to an embodiment, there is only one first primary-only transform.</p><p id="p-0030" num="0029">According to an embodiment, the encoder is configured to subject the sample block to the transform underlying the transform coefficient block so as to obtain the transform coefficient block.</p><p id="p-0031" num="0030">According to an embodiment, the decoder is configured to subject the transform coefficient block to a reverse transformation which reverses the transform underlying the transform coefficient block so as to obtain the sample block. According to an embodiment, the encoder comprises a feedback loop configured to subject the transform coefficient block to a reverse transformation which reverses the transform underlying the transform coefficient block so as to obtain the sample block.</p><p id="p-0032" num="0031">According to an embodiment, the encoder is configured to derive a prediction residual of a prediction signal gained by intra-picture or inter-picture prediction and determine the sample block, e.g. including a quantization, to represent the prediction residual.</p><p id="p-0033" num="0032">According to an embodiment, the decoder is configured to use the sample block to correct a prediction signal gained by intra-picture or inter-picture prediction. According to an embodiment, the encoder comprises a feedback loop configured to use the sample block to correct a prediction signal gained by intra-picture or inter-picture prediction.</p><p id="p-0034" num="0033">In accordance with a second aspect of the present invention, the inventors of the present application realized that one problem encountered when trying to enable a selection of a transform for a block of a picture stems from the fact that for some transforms, like non-DCT-II transforms, it is required that non-zero coefficients of a transform coefficient block are only allowed in a predetermined subarea of the transform coefficient block. Currently, a signaling overhead is produced to indicate the transform underlying the transform coefficient block, when transforms with the above described non-zero requirement can also be chosen. According to the second aspect of the present application, this difficulty is overcome by checking whether all transform coefficients of the transform coefficient block which are, along a predetermined coefficient scan order, located from a first coded coefficient position onwards to a last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero. The inventors found that it is advantageous to check whether non-zero transform coefficients are located outside the predetermined subarea, since even if the first coded coefficient position is located inside the predetermined subarea, it is still possible that non-zero transform coefficients are located along the predetermined scan order outside the predetermined subarea. This is based on the idea that the check enables to automatically identify, whether the transform underlying the transform coefficient block is a transform with the above described non-zero requirement or not. Thus it is not necessary, for each transform coefficient block, to select the transform underlying the respective transform coefficient block out of a set of all available transforms. Instead it is, with this feature, possible to reduce the set of all available transforms to the relevant transforms, whereby a high coding efficiency can be achieved. Furthermore, a high compression can be achieved, since it is not necessary to indicate by an additional syntax element whether the transform underlying the transform coefficient block is one out of transforms with the non-zero requirement or one out of transforms without the non-zero requirement.</p><p id="p-0035" num="0034">Accordingly, in accordance with a second aspect of the present application, a decoder/encoder for decoding/encoding a transformed representation of a sample block from/into a data stream, is configured to decode/encode a coefficient position information from/into the data stream. The coefficient position information is indicative of a first coded coefficient position within a transform coefficient block. The first coded coefficient position might either indicate a position of a first non-zero transform coefficient in coefficient scan order or a position of a last non-zero transform coefficient in an inverse coefficient scan order. Furthermore, the decoder/encoder is configured to decode/encode values of transform coefficients of the transform coefficient block which are, along a predetermined coefficient scan order, located from the first coded coefficient position onwards to a last scanned position, and infer that transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located upstream the first coded coefficient position are zero. The transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position, might either comprise only transform coefficients with a value being non-zero or transform coefficients with a value being zero and transform coefficients with a value being non-zero. The decoder/encoder is configured to check whether all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within a predetermined subarea of the transform coefficient block, zero. The predetermined subarea might define a subarea of the transform coefficient block, inside which subarea transform coefficients can be non-zero and outside of which subarea all transform coefficients have to be zero for certain transforms. According to an embodiment, the transform coefficient block can comprise non-zero transform coefficients outside the predetermined subarea, in case the transform underlying the transform coefficient block is within a first set of one or more available transforms of a set of available transforms, and the transform coefficients outside the predetermined subarea are zero, in case the transform underlying the transform coefficient block is within a second set of one or more available transforms of the set of available transforms. The predetermined subarea might consist of 16&#xd7;16 transform coefficients. The predetermined subarea might be located in the top-left of the transform coefficient block. If all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero, the decoder/encoder is configured to decode/encode a transformation information from/into the data stream and identify, using the transformation information, a transform underlying the transform coefficient block out of a set of available transforms, e.g., out of the second set of one or more available transforms of the set of available transforms. If not all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero, the decoder/encoder is configured to reduce the set of available transforms to the first set of one or more available transforms by removing from the set of available transforms the second set of one or more available transforms and determine the transform underlying the transform coefficient block out of the first set of one or more available transforms. The transform underlying the transform coefficient block along with the transform coefficient block defines the transformed representation. The predetermined coefficient scan order scans the transform coefficients in a manner so that there are one or more transform coefficients outside the predetermined subarea which are scanned by the predetermined coefficient scan order between two transform coefficients located inside the predetermined subarea.</p><p id="p-0036" num="0035">According to an embodiment, the decoder/encoder is configured to check whether the first coded coefficient position is located within the predetermined subarea of the transform coefficient block, and check whether all transform coefficients which are located outside the predetermined subarea of the transform coefficient block and are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are zero. The latter check is optionally merely performed if the first coded coefficient position is located within the predetermined subarea of the transform coefficient block. In case, the first coded coefficient position is located outside the predetermined subarea of the transform coefficient block, the decoder/encoder might be configured to infer that not all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero.</p><p id="p-0037" num="0036">According to an embodiment, the decoder/encoder can comprise features and or functionalities as described with regard to the decoder/encoder according to the first aspect, if the first coded coefficient position is located within the predetermined subarea of the transform coefficient block.</p><p id="p-0038" num="0037">According to an embodiment, the decoder/encoder is configured to perform the decoding/encoding of the transformation information from/into the data stream using context-adaptive entropy decoding/encoding using a predetermined probability model and determine the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block.</p><p id="p-0039" num="0038">According to an embodiment, the decoder/encoder is configured to, in determining the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block, set the predetermined probability model to a first probability model, if the first coded coefficient position coincides with the last scanned position, set the predetermined probability model to a second probability model, if the first coded coefficient position is, along the predetermined coefficient scan order, no more than a predetermined number of transform coefficients away from the last scanned position, and set the predetermined probability model to a third probability model, if the first coded coefficient position is, along the predetermined coefficient scan order, more than the predetermined number of transform coefficients away from the last scanned position.</p><p id="p-0040" num="0039">According to another embodiment, the decoder/encoder is configured to, in determining the predetermined probability model depending on where the first coded coefficient position is located within the transform coefficient block, set the predetermined probability model to a first probability model, if the first coded coefficient position is, along the predetermined coefficient scan order, no more than a predetermined number of transform coefficients away from, or coincides with the last scanned position, and set the predetermined probability model to a second probability model, if the first coded transform coefficient position is, along the predetermined coefficient scan order, more than the predetermined number of coefficients away from the last scanned position.</p><p id="p-0041" num="0040">According to an embodiment, the set of available transforms comprises multi-stage transforms, e.g., a set of multi-stage transforms, each of which corresponds to a concatenation of a primary transform and a secondary transform within the predetermined subarea and consists of the primary transform outside the predetermined subarea, and which is contained in the second set of one or more available transforms. In other words, the second set of one or more available transforms of the set of available transforms comprises the two or more multi-stage transforms. Additionally, the set of available transforms comprises a set of primary-only transforms comprising a first primary-only transform out of which the first set of one or more available transforms consists, and to which the primary transform for all of the one or more multi-stage transforms is equal, and one or more second primary-only transforms which are contained in the second set of one or more available transforms. The decoder/encoder is configured to, if all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero,<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0041">decode/encode a secondary transform indicator from/into the data stream, the secondary transform indicator indicating whether the transform underlying the transform coefficient block is a multi-stage transform, and which one out of the one or more multi-stage transforms, or whether the transform underlying the transform coefficient block is a primary-only transform, i.e. whether same belongs to the set of primary-only transforms or to the set of multi-stage transforms, and</li>        <li id="ul0002-0002" num="0042">check whether the secondary transform indicator indicates that the transform underlying the transform coefficient block is a primary-only transform. If the secondary transform indicator indicates that the transform underlying the transform coefficient block is a primary-only transform, the decoder/encoder is configured to decode/encode a transform indicator, e.g., a primary transform indicator, from/into the data stream which identifies the primary-only transform out of the set of primary-only transforms.</li>    </ul>    </li></ul></p><p id="p-0042" num="0043">If not all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero, the transform underlying the transform coefficient block is the first primary-only transform. With this embodiment, it is possible to infer that the transform underlying the transform coefficient block is the first primary-only transform, if the transform coefficient block comprises non-zero transform coefficients outside the predetermined subarea. Thus, for such transform coefficient blocks, the data stream does not need to comprise transformation information, whereby a high compression can be achieved. Furthermore, it is possible to explicitly indicate a multi-stage transform as the transform underlying the transform coefficient block using the secondary transform indicator and by using additionally to the secondary transform indicator the primary transform indicator, it is possible to unambiguously indicate a primary-only transform as the transform underlying the transform coefficient block. It is to be noted that, with this special transform selection, it is possible to also indicate the first primary-only transform as the transform underlying the transform coefficient block for blocks with all non-zero transform coefficients inside the predetermined subarea, whereby a great choice of transforms is provided achieving a high compression efficiency.</p><p id="p-0043" num="0044">According to an embodiment, the set of available transforms comprises multi-stage transforms, e.g., a set of multi-stage transforms, each of which corresponds to a concatenation of a primary transform and a secondary transform within the predetermined subarea and consists of the primary transform outside the predetermined subarea, and which is contained in the second set of one or more available transforms. Additionally, the set of available transforms comprises a set of primary-only transforms comprising a first primary-only transform out of which the first set of one or more available transforms consists, and to which the primary transform for all of the one or more multi-stage transforms is equal, and one or more second primary-only transforms which are contained in the second set of one or more available transforms. The decoder/encoder is configured to, if all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero,<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0045">decode/encode a primary transform indicator from/into the data stream, the primary transform indicator indicating a first transform out of a set, e.g., the set of primary-only transforms, including the first primary-only transform and the one or more second primary-only transforms,        <ul id="ul0005" list-style="none">            <li id="ul0005-0001" num="0046">if the first transform is the first primary-only transform, decode/encode a secondary transform indicator from/into the data stream which identifies the transform underlying the transform coefficient block out of a set including the first primary-only transform and the multi-stage transforms, and</li>            <li id="ul0005-0002" num="0047">in case of the first transform being one of the one or more second primary-only transforms, the transform underlying the transform coefficient block is, the one second primary-only transform.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0044" num="0048">If not all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero, the transform underlying the transform coefficient block is the first primary-only transform.</p><p id="p-0045" num="0049">According to an embodiment, the primary transform is equal for all of the one or more multi-stage transforms and is also equal to one of the one or more first primary-only transforms.</p><p id="p-0046" num="0050">According to an embodiment, there is only one first primary-only transform,</p><p id="p-0047" num="0051">According to an embodiment, the encoder is configured to subject the sample block to the transform underlying the transform coefficient block so as to obtain the transform coefficient block.</p><p id="p-0048" num="0052">According to an embodiment, the decoder is configured to subject the transform coefficient block to a reverse transformation which reverses the transform underlying the transform coefficient block so as to obtain the sample block. According to an embodiment, the encoder comprises a feedback loop configured to subject the transform coefficient block to a reverse transformation which reverses the transform underlying the transform coefficient block so as to obtain the sample block.</p><p id="p-0049" num="0053">According to an embodiment, the encoder is configured to derive a prediction residual of a prediction signal gained by intra-picture or inter-picture prediction and determine the sample block, e.g., including a quantization, to represent the prediction residual.</p><p id="p-0050" num="0054">According to an embodiment, the decoder/encoder is configured to use the sample block to correct a prediction signal gained by intra-picture or inter-picture prediction. According to an embodiment, the encoder comprises a feedback loop configured to use the sample block to correct a prediction signal gained by intra-picture or inter-picture prediction.</p><p id="p-0051" num="0055">An embodiment is related to a method for decoding/encoding a transformed representation of a sample block from/into a data stream, comprising decoding/encoding a coefficient position information from/into the data stream, wherein the coefficient position information is indicative of a first coded coefficient position within a transform coefficient block. The method comprises checking whether the first coded coefficient position is located within a predetermined subarea of the transform coefficient block. If the first coded coefficient position is located inside the predetermined subarea of the transform coefficient block, the method comprises checking whether a transform underlying the transform coefficient block is within a first set of one or more available transforms of a set of available transforms or a second set of one or more available transforms of the set of available transforms. The method for decoding can perform the check using transformation information transmitted in the data stream. If the transform underlying the transform coefficient block is within the first set of one or more available transforms, the method comprises decoding/encoding the values of the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located from the first coded coefficient position onwards to a last scanned position, wherein transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position are zero. The method for decoding comprises inferring that the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position are zero. If the transform underlying the transform coefficient block is within the second set of one or more available transforms, the method comprises decoding/encoding values of transform coefficients of the transform coefficient block which are located within the predetermined subarea and are, along a second coefficient scan order, located from the first coded coefficient position onwards to the last scanned position, wherein the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position and transform coefficients of the transform coefficient block which are located outside the predetermined subarea are zero. The method for decoding comprises inferring that the transform coefficients of the transform coefficient block which are, along the first coefficient scan order, located upstream the first coded coefficient position and transform coefficients of the transform coefficient block which are located outside the predetermined subarea are zero. The transform underlying the transform coefficient block along with the transform coefficient block define the transformed representation. The second coefficient scan order scans the transform coefficients within the predetermined subarea without scanning any transform coefficient outside the predetermined subarea between the transform coefficients within the predetermined subarea, and the first coefficient scan order scans the transform coefficients in a manner so that there are one or more transform coefficients outside the predetermined subarea which are scanned by the first coefficient scan order between two transform coefficients located inside the predetermined subarea.</p><p id="p-0052" num="0056">An embodiment is related to a method for decoding/encoding a transformed representation of a sample block from/into a data stream, comprising decoding/encoding a coefficient position information from/into the data stream, wherein the coefficient position information is indicative of a first coded coefficient position within a transform coefficient block. The method comprises decoding/encoding values of transform coefficients of the transform coefficient block which are, along a predetermined coefficient scan order, located from the first coded coefficient position onwards to a last scanned position, wherein transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located upstream the first coded coefficient position are zero. The method for decoding comprises inferring that the transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located upstream the first coded coefficient position are zero. Furthermore, the method comprises checking whether all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within a predetermined subarea of the transform coefficient block, zero. If all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero, the method comprises decoding/encoding a transformation information from/into the data stream and identifying a transform underlying the transform coefficient block out of a set of available transforms. The method for decoding might perform the identification using the transformation information. If not all transform coefficients of the transform coefficient block which are, along the predetermined coefficient scan order, located from the first coded coefficient position onwards to the last scanned position are, if not located within the predetermined subarea of the transform coefficient block, zero, the method comprises reducing the set of available transforms to a first set of one or more available transforms by removing from the set of available transforms a second set of one or more available transforms and determining the transform underlying the transform coefficient block out of the first set of one or more available transforms. The transform underlying the transform coefficient block along with the transform coefficient block defines the transformed representation. The predetermined coefficient scan order scans the transform coefficients in a manner so that there are one or more transform coefficients outside the predetermined subarea which are scanned by the predetermined coefficient scan order between two transform coefficients located inside the predetermined subarea.</p><p id="p-0053" num="0057">The methods as described above are based on the same considerations as the above-described encoder/decoder. The methods can, by the way, be completed with all features and functionalities, which are also described with regard to the encoder/decoder,</p><p id="p-0054" num="0058">An embodiment is related to a data stream having a picture or a video encoded thereinto using a herein described method for encoding.</p><p id="p-0055" num="0059">An embodiment is related to a computer program having a program code for performing, when running on a computer, a herein described method.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0056" num="0060">The drawings are not necessarily to scale, emphasis instead generally being placed upon illustrating the principles of the invention. In the following description, various embodiments of the invention are described with reference to the following drawings, in which:</p><p id="p-0057" num="0061"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example of a 32&#xd7;32 transform block which is subdivided into 64 4&#xd7;4 subblocks;</p><p id="p-0058" num="0062"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a reconstruction of a 32&#xd7;32 block, where only the first 16&#xd7;16 coefficients can be non-zero;</p><p id="p-0059" num="0063"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an unmodified scan of a transform block, according to a current design, and a modified scan of a transform block, according to an embodiment;</p><p id="p-0060" num="0064"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an apparatus for predictively encoding a picture or a video;</p><p id="p-0061" num="0065"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an apparatus for predictively decoding a picture or a video;</p><p id="p-0062" num="0066"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a relationship between a reconstructed signal and a combination of a prediction residual signal and a prediction signal;</p><p id="p-0063" num="0067"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a decoder which is able to change the scanning order, according to an embodiment;</p><p id="p-0064" num="0068"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a selection of a transform underlying a transform coefficient block in case of a first coded coefficient position being located outside a predetermined subarea, according to an embodiment;</p><p id="p-0065" num="0069"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a CABAC coding of transformation information, according to an embodiment;</p><p id="p-0066" num="0070"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows transform coefficient blocks with different number of non-zero transform coefficients, according to an embodiment;</p><p id="p-0067" num="0071"><figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>shows a set of available transforms, according to a first embodiment;</p><p id="p-0068" num="0072"><figref idref="DRAWINGS">FIG. <b>11</b><i>b </i></figref>shows a set of available transforms, according to a second embodiment;</p><p id="p-0069" num="0073"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a decoder checking whether transform coefficients outside a predetermined subarea are zero, according to an embodiment;</p><p id="p-0070" num="0074"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows a first simplified syntax diagram; and</p><p id="p-0071" num="0075"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows a second simplified syntax diagram.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0072" num="0076">Equal or equivalent elements or elements with equal or equivalent functionality are denoted in the following description by equal or equivalent reference numerals even if occurring in different figures.</p><p id="p-0073" num="0077">In the following description, a plurality of details is set forth to provide a more throughout explanation of embodiments of the present invention. However, it will be apparent to those skilled in the art that embodiments of the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring embodiments of the present invention. In addition, features of the different embodiments described herein after may be combined with each other, unless specifically noted otherwise.</p><p id="p-0074" num="0078">Further, it is to be noted that herein non-zero transform coefficients define transform coefficients with non-zero values and zero transform coefficients define transform coefficients with zero values.</p><p id="p-0075" num="0079">In the following, various examples are described which may assist in achieving a more effective compression by using Transform Type Signaling for Coefficient Level Coding Zero-out. Embodiments presented herein describe a signaling concept that restricts the area of coded transform coefficients that can be non-zero within a block depending on the selection of specific transform types with the aim of reducing signaling overhead and simplifying the encoding/decoding logic for hybrid video compression applications.</p><p id="p-0076" num="0080">In order to ease the understanding of the following embodiments of the present application, the description starts with a presentation of a description of video encoder and video decoder of a block-based predictive codec for coding pictures of a video in order to form an example for a coding framework into which embodiments for coding and decoding a transformed representation of a sample block may be built in. The video encoder and video decoder are described with respect to <figref idref="DRAWINGS">FIGS. <b>4</b> to <b>6</b></figref>. The herein described embodiments of the present application, may be readily built into the video encoder and decoder of <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, respectively, although the embodiments of the present application, may also be used to form video encoder and video decoders not operating according to the coding framework underlying the video encoder and video decoder of <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>.</p><p id="p-0077" num="0081"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an apparatus for predictively coding a picture <b>12</b> or a video composed of a sequence of pictures <b>12</b> into a data stream <b>14</b>. Block-wise predictive coding is used to this end. Further, transform-based residual coding is exemplarily used. The apparatus, or encoder, is indicated using reference sign <b>10</b>. <figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a corresponding decoder <b>20</b>, i.e. an apparatus <b>20</b> configured to predictively decode the picture <b>12</b>&#x2032; or the video composed of pictures <b>12</b>&#x2032; in picture blocks from the data stream <b>14</b>, also here exemplarily using transform-based residual decoding, wherein the apostrophe has been used to indicate that the pictures <b>12</b>&#x2032;as reconstructed by decoder <b>20</b> deviate from pictures <b>12</b> originally encoded by apparatus <b>10</b> in terms of coding loss introduced by a quantization of the prediction residual signal. <figref idref="DRAWINGS">FIG. <b>4</b></figref> and <figref idref="DRAWINGS">FIG. <b>5</b></figref> exemplarily use transform based prediction residual coding, although embodiments of the present application are not restricted to this kind of prediction residual coding. This is true for other details described with respect to <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, too, as will be outlined hereinafter.</p><p id="p-0078" num="0082">The encoder <b>10</b> is configured to subject the prediction residual signal to spatial-to-spectral transformation and to encode the prediction residual signal, thus obtained, into the data stream <b>14</b>. Likewise, the decoder <b>20</b> is configured to decode the prediction residual signal from the data stream <b>14</b> and subject the prediction residual signal thus obtained to spectral-to-spatial transformation.</p><p id="p-0079" num="0083">Internally, the encoder <b>10</b> may comprise a prediction residual signal former <b>22</b> which generates a prediction residual <b>24</b> so as to measure a deviation of a prediction signal <b>26</b> from the original signal, i.e. video or a current picture <b>12</b>. The prediction residual signal former <b>22</b> may, for instance, be a subtractor which subtracts the prediction signal from the original signal, i.e. current picture <b>12</b>. The encoder <b>10</b> then further comprises a transformer <b>28</b> which subjects the prediction residual signal <b>24</b> to a spatial-to-spectral transformation to obtain a spectral-domain prediction residual signal <b>24</b>&#x2032; which is then subject to quantization by a quantizer <b>32</b>, also comprised by encoder <b>10</b>. The thus quantized prediction residual signal <b>24</b>&#x2033; is coded into bitstream <b>14</b>. To this end, encoder <b>10</b> may optionally comprise an entropy coder <b>34</b> which entropy codes the prediction residual signal as transformed and quantized into data stream <b>14</b>. The prediction signal <b>26</b> is generated by a prediction stage <b>36</b> of encoder <b>10</b> on the basis of the prediction residual signal <b>24</b>&#x2033; decoded into, and decodable from, data stream <b>14</b>. To this end, the prediction stage <b>36</b> may internally, as is shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, comprise a dequantizer <b>38</b> which dequantizes prediction residual signal <b>24</b>&#x2033; so as to gain spectral-domain prediction residual signal <b>24</b>&#x2033;&#x2033;, which corresponds to signal <b>24</b>&#x2032; except for quantization loss, followed by an inverse transformer <b>40</b> which subjects the latter prediction residual signal <b>24</b>&#x2033;&#x2033; to an inverse transformation, i.e. a spectral-to-spatial transformation, to obtain prediction residual signal <b>24</b>&#x2033;&#x2033;, which corresponds to the original prediction residual signal <b>24</b> except for quantization loss. A combiner <b>42</b> of the prediction stage <b>36</b> then recombines, such as by addition, the prediction signal <b>26</b> and the prediction residual signal <b>24</b>&#x2033;&#x2033; so as to obtain a reconstructed signal <b>46</b>, i.e. a reconstruction of the original signal <b>12</b>. Reconstructed signal <b>46</b> may correspond to signal <b>12</b>&#x2032;.</p><p id="p-0080" num="0084">A prediction module <b>44</b> of prediction stage <b>36</b> then generates the prediction signal <b>26</b> on the basis of signal <b>46</b> by using, for instance, spatial prediction, i.e. intra-prediction, and/or temporal prediction, i.e. inter-prediction. Details in this regard are described in the following.</p><p id="p-0081" num="0085">Likewise, decoder <b>20</b> may be internally composed of components corresponding to, and interconnected in a manner corresponding to, prediction stage <b>36</b>. In particular, entropy decoder <b>50</b> of decoder <b>20</b> may entropy decode the quantized spectral-domain prediction residual signal <b>24</b>&#x2033; from the data stream, whereupon dequantizer <b>52</b>, inverse transformer <b>54</b>, combiner <b>56</b> and prediction module <b>58</b>, interconnected and cooperating in the manner described above with respect to the modules of prediction stage <b>36</b>, recover the reconstructed signal on the basis of prediction residual signal <b>24</b>&#x2033; so that, as shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the output of combiner <b>56</b> results in the reconstructed signal, namely the video or a current picture <b>12</b>&#x2032; thereof.</p><p id="p-0082" num="0086">Although not specifically described above, it is readily clear that the encoder <b>10</b> may set some coding parameters including, for instance, prediction modes, motion parameters and the like, according to some optimization scheme such as, for instance, in a manner optimizing some rate and distortion related criterion, i.e. coding cost, and/or using some rate control. As described in more details below, encoder <b>10</b> and decoder <b>20</b> and the corresponding modules <b>44</b>, <b>58</b>, respectively, support different prediction modes such as intra-coding modes and inter-coding modes which form a kind of set or pool of primitive prediction modes based on which the predictions of picture blocks are composed in a manner described in more detail below. The granularity at which encoder and decoder switch between these prediction compositions may correspond to a subdivision of the pictures <b>12</b> and <b>12</b>&#x2032;, respectively, into blocks. Note that some of these blocks may be blocks being solely intra-coded and some blocks may be blocks solely being inter-coded and, optionally, even further blocks may be blocks obtained using both intra-coding and inter-coding, but details are set-out hereinafter. According to intra-coding mode, a prediction signal for a block is obtained on the basis of a spatial, already coded/decoded neighborhood of the respective block. Several intra-coding sub-modes may exist the selection among which, quasi, represents a kind of intra-prediction parameter. There may be directional or angular intra-coding sub-modes according to which the prediction signal for the respective block is filled by extrapolating the sample values of the neighborhood along a certain direction which is specific for the respective directional intra-coding sub-mode, into the respective block. The intra-coding sub-modes may, for instance, also comprise one or more further sub-modes such as a DC coding mode, according to which the prediction signal for the respective block assigns a DC value to all samples within the respective block, and/or a planar intra-coding mode according to which the prediction signal of the respective block is approximated or determined to be a spatial distribution of sample values described by a two-dimensional linear function over the sample positions of the respective block with deriving tilt and offset of the plane defined by the two-dimensional linear function on the basis of the neighboring samples. Compared thereto, according to inter-prediction mode, a prediction signal for a block may be obtained, for instance, by temporally predicting the block inner. For parametrization of an inter-prediction mode, motion vectors may be signaled within the data stream, the motion vectors indicating the spatial displacement of the portion of a previously coded picture of the video at which the previously coded/decoded picture is sampled in order to obtain the prediction signal for the respective block. This means, in addition to the residual signal coding comprised by data stream <b>14</b>, such as the entropy-coded transform coefficient levels representing the quantized spectral-domain prediction residual signal <b>24</b>&#x2033;, data stream <b>14</b> may have encoded thereinto prediction related parameters for assigning to the blocks prediction modes, prediction parameters for the assigned prediction modes, such as motion parameters for inter-prediction modes, and, optionally, further parameters which control a composition of the final prediction signal for the blocks using the assigned prediction modes and prediction parameters as will be outlined in more detail below. Additionally, the data stream may comprise parameters controlling and signaling the subdivision of picture <b>12</b> and <b>12</b>&#x2032;, respectively, into the blocks. The decoder <b>20</b> uses these parameters to subdivide the picture in the same manner as the encoder did, to assign the same prediction modes and parameters to the blocks, and to perform the same prediction to result in the same prediction signal.</p><p id="p-0083" num="0087"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates the relationship between the reconstructed signal, i.e. the reconstructed picture <b>12</b>&#x2032;, on the one hand, and the combination of the prediction residual signal <b>24</b>&#x2033;&#x2033; as signaled in the data stream, and the prediction signal <b>26</b>, on the other hand. As already denoted above, the combination may be an addition. The prediction signal <b>26</b> is illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref> as a subdivision of the picture area into blocks <b>80</b> of varying size, although this is merely an example. The subdivision may be any subdivision, such as a regular subdivision of the picture area into rows and columns of blocks, or a multi-tree subdivision of picture <b>12</b> into leaf blocks of varying size, such as a quadtree subdivision or the like, wherein a mixture thereof is illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref> where the picture area is firstly subdivided into rows and columns of tree-root blocks which are then further subdivided in accordance with a recursive multi-tree subdivisioning to result into blocks <b>80</b>.</p><p id="p-0084" num="0088">The prediction residual signal <b>24</b>&#x2033;&#x2033; in <figref idref="DRAWINGS">FIG. <b>6</b></figref> is also illustrated as a subdivision of the picture area into blocks <b>84</b>. These blocks might be called transform blocks or transform coefficient blocks in order to distinguish same from the coding blocks <b>80</b>. In effect, <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates that encoder <b>10</b> and decoder <b>20</b> may use two different subdivisions of picture <b>12</b> and picture <b>12</b>&#x2032;, respectively, into blocks, namely one subdivisioning into coding blocks <b>80</b> and another subdivision into blocks <b>84</b>. Both subdivisions might be the same, i.e. each block <b>80</b>, may concurrently form a transform block <b>84</b> and vice versa, but <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates the case where, for instance, a subdivision into transform blocks <b>84</b> forms an extension of the subdivision into blocks <b>80</b> so that any border between two blocks <b>80</b> overlays a border between two blocks <b>84</b>, or alternatively speaking each block <b>80</b> either coincides with one of the transform blocks <b>84</b> or coincides with a cluster of transform blocks <b>84</b>. However, the subdivisions may also be determined or selected independent from each other so that transform blocks <b>84</b> could alternatively cross block borders between blocks <b>80</b>. As far as the subdivision into transform blocks <b>84</b> is concerned, similar statements are thus true as those brought forward with respect to the subdivision into blocks <b>80</b>, i.e. the blocks <b>84</b> may be the result of a regular subdivision of picture area into blocks, arranged in rows and columns, the result of a recursive multi-tree subdivisioning of the picture area, or a combination thereof or any other sort of segmentation. Just as an aside, it is noted that blocks <b>80</b> and <b>84</b> are not restricted to being quadratic, rectangular or any other shape. Further, the subdivision of a current picture <b>12</b> into blocks <b>80</b> at which the prediction signal is formed, and the subdivision of a current picture <b>12</b> into blocks <b>84</b> at which the prediction residual is coded, may not the only subdivision used for coding/decoding. These subdivisions from a granularity at which prediction signal determination and residual coding is performed, but firstly, the residual coding may alternatively be done without subdivisioning, and secondly, at other granularities than these subdivisions, encoder and decoder may set certain coding parameters which might include some of the aforementioned parameters such as prediction parameters, prediction signal composition control signals and the like.</p><p id="p-0085" num="0089"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates that the combination of the prediction signal <b>26</b> and the prediction residual signal <b>24</b>&#x2033;&#x2033; directly results in the reconstructed signal <b>12</b>&#x2032;. However, it should be noted that more than one prediction signal <b>26</b> may be combined with the prediction residual signal <b>24</b>&#x2033;&#x2033; to result into picture <b>12</b>&#x2032; in accordance with alternative embodiments such as prediction signals obtained from other views or from other coding layers which are coded/decoded in a separate prediction loop with separate DPB, for instance.</p><p id="p-0086" num="0090">In <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the transform blocks <b>84</b> shall have the following significance. Transformer <b>28</b> and inverse transformer <b>54</b> perform their transformations in units of these transform blocks <b>84</b>. For instance, many codecs use some sort of DST or DCT for all transform blocks <b>84</b>. Some codecs allow for skipping the transformation so that, for some of the transform blocks <b>84</b>, the prediction residual signal is coded in the spatial domain directly. However, in accordance with embodiments described herein, encoder <b>10</b> and decoder <b>20</b> are configured in such a manner that they support several transforms namely the set of available transforms <b>130</b>, as described with respect to one or more of the following <figref idref="DRAWINGS">FIGS. <b>7</b> to <b>12</b></figref>.</p><p id="p-0087" num="0091">In the following, embodiments will be described by which the coding efficiency for transform type signaling can be improved and/or by which the compression efficiency can be improved by enabling a choice between multiple transform types. The embodiments in the following will mostly illustrate the features and functionalities in view of a decoder. However, it is clear that the same or similar features and functionalities can be comprised by an encoder, e.g., a decoding performed by a decoder can correspond to an encoding by the encoder. Furthermore, the encoder might comprise the same features as described with regard to the decoder in a feedback loop, e.g., in the prediction stage <b>36</b>.</p><p id="p-0088" num="0092"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a decoder <b>20</b> for decoding a transformed representation of a sample block <b>84</b> from a data stream <b>14</b>. According to an embodiment, an encoder is configured to subject the sample block <b>84</b> to a transform underlying a transform coefficient block <b>104</b> so as to obtain the transform coefficient block <b>104</b>. The transform coefficient block <b>104</b> along with the transform <b>131</b> underlying the transform coefficient block <b>104</b> define the transformed representation.</p><p id="p-0089" num="0093">The decoder <b>20</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> is configured to decode a coefficient position information <b>100</b> from the data stream <b>14</b>. The coefficient position information <b>100</b> is indicative of a first coded coefficient position <b>102</b> within the transform coefficient block <b>104</b>. The first coded coefficient position <b>102</b> might indicate a position of a first non-zero transform coefficient in scan order, e.g. in a first coefficient scan order <b>110</b> or in a second coefficient scan order <b>114</b>. In case of a reverse/inverse scan order, the first coded coefficient position <b>102</b> might indicate a position of a last non-zero transform coefficient along the reverse/inverse scan order. A non-zero transform coefficient defines herein a transform coefficient with a value unequal to zero and a zero transform coefficient defines a transform coefficient with a value equal to zero.</p><p id="p-0090" num="0094">The decoder <b>20</b> is configured to check <b>107</b> whether the first coded coefficient position <b>102</b> is located within a predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>.</p><p id="p-0091" num="0095">If the first coded coefficient position <b>102</b> is located inside the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, the decoder <b>20</b> is configured to check <b>111</b>, using transformation information <b>108</b> transmitted in the data stream <b>14</b>, whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> is within a first set <b>132</b> of one or more available transforms of a set <b>130</b> of available transforms or a second set <b>134</b> of one or more available transforms of the set <b>130</b> of available transforms. According to an embodiment, the first set <b>132</b> of one or more available transforms comprises transforms for transform coefficient blocks <b>104</b> with non-zero transform coefficients outside the predetermined subarea, like the transform coefficients <b>118</b>. According to an embodiment, the second set <b>134</b> of one or more available transforms comprises transforms for transform coefficient blocks <b>104</b> without any non-zero transform coefficients outside the predetermined subarea <b>106</b>. In other words, the one or more transforms out of the second set <b>134</b> of one or more available transforms might have the requirement, i.e. a non-zero requirement, that all transform coefficients outside the predetermined subarea have values equal to zero and that the non-zero transform coefficients are only located inside the predetermined subarea <b>106</b>. The transforms out of the first set <b>132</b> of one or more available transforms might not have to meet this non-zero requirement.</p><p id="p-0092" num="0096">If the transform <b>131</b> underlying the transform coefficient block <b>104</b> is within the first set <b>132</b> of one or more available transforms, the decoder <b>20</b> is configured to decode <b>109</b> the values of the transform coefficients of the transform coefficient block <b>104</b> which are, along the first coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to a last scanned position <b>101</b>, and infer that transform coefficients <b>112</b> of the transform coefficient block <b>104</b> which are, along the first coefficient scan order <b>110</b>, located upstream the first coded coefficient position <b>102</b> are zero. As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, for this first condition, the decoder <b>20</b> might be configured to infer that all transform coefficients <b>112</b> in the shaded area of the transform coefficient block <b>104</b> are zero. The first coefficient scan order <b>110</b> scans the transform coefficients of the transform coefficient block <b>104</b> in a manner so that there are one or more transform coefficients <b>118</b> outside the predetermined subarea <b>106</b> which are scanned by the first coefficient scan order <b>110</b> between two transform coefficients <b>120</b> located inside the predetermined subarea <b>106</b>. As shown in the embodiment of <figref idref="DRAWINGS">FIG. <b>7</b></figref> exemplarily, the transform coefficients <b>118</b><sub>1</sub>-<b>118</b><sub>3 </sub>outside the predetermined subarea <b>106</b> are scanned by the first coefficient scan order <b>110</b> between the two transform coefficients <b>120</b><sub>1 </sub>and <b>120</b><sub>2 </sub>located inside the predetermined subarea <b>106</b> and the transform coefficient <b>118</b><sub>4 </sub>outside the predetermined subarea <b>106</b> is scanned by the first coefficient scan order <b>110</b> between the two transform coefficients <b>120</b><sub>3 </sub>and <b>120</b><sub>4 </sub>located inside the predetermined subarea <b>106</b>.</p><p id="p-0093" num="0097">If the transform <b>131</b> underlying the transform coefficient block <b>104</b> is within the second set <b>134</b> of one or more available transforms, the decoder <b>20</b> is configured to decode <b>113</b> values of transform coefficients of the transform coefficient block <b>104</b> which are located within the predetermined subarea <b>106</b> and are, along a second coefficient scan order <b>114</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b>, and infer that transform coefficients <b>116</b> of the transform coefficient block <b>104</b> which are, along the first coefficient scan order <b>110</b>, located upstream the first coded coefficient position <b>102</b> and transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are located outside the predetermined subarea <b>106</b> are zero. The second coefficient scan order <b>114</b> scans the transform coefficients <b>120</b> within the predetermined subarea <b>106</b> without scanning any transform coefficient <b>118</b> outside the predetermined subarea <b>106</b> between the transform coefficients <b>120</b> within the predetermined subarea <b>106</b>.</p><p id="p-0094" num="0098">According to an embodiment, the check <b>107</b>, whether the first coded coefficient position <b>102</b> is located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b> can result in realizing that the first coded coefficient position <b>102</b> is not located within the predetermined subarea <b>106</b>. Such a negative case <b>210</b> is shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. The positive case <b>200</b> of realizing that the first coded coefficient position <b>102</b> is located within the predetermined subarea <b>106</b> is only indicated in <figref idref="DRAWINGS">FIG. <b>8</b></figref> by three dots, since the positive case is already described with regard to <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0095" num="0099">If the first coded coefficient position <b>102</b> is located outside the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, the decoder <b>20</b> is configured to reduce <b>220</b> the set <b>130</b> of available transforms to the first set <b>132</b> of one or more available transforms by removing from the set <b>130</b> of available transforms the second set <b>134</b> of one or more available transforms and determine the transform <b>131</b> underlying the transform coefficient block <b>104</b> out of the first set <b>132</b> of one or more available transforms. This determination might either be performed by using the transformation information <b>108</b> transmitted in the data stream <b>14</b> or, if the first set <b>132</b> of one or more available transforms consists of only one transform, by inferring that the transform <b>131</b> underlying the transform coefficient block <b>104</b> is the one transform. Additionally, the decoder <b>20</b> is configured to decode <b>109</b> the values of the transform coefficients of the transform coefficient block <b>104</b> which are, along the first coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to a last scanned position <b>101</b>, and infer that the transform coefficients <b>112</b> of the transform coefficient block <b>104</b> which are, along the first coefficient scan order <b>110</b>, located upstream the first coded coefficient position <b>102</b> are zero. As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the decoder <b>20</b> might be configured to infer that all transform coefficients <b>112</b> in the shaded area of the transform coefficient block <b>104</b> are zero.</p><p id="p-0096" num="0100">The features and/or functionalities described with regard to <figref idref="DRAWINGS">FIG. <b>8</b></figref> are optional for the decoder <b>20</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0097" num="0101">According to an embodiment, the decoder <b>20</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> is configured to decode the transformation information <b>108</b> from the data stream <b>14</b> using context-adaptive entropy decoding <b>230</b>, e.g., context adaptive binary arithmetic coding, as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. The decoder <b>20</b> might use a predetermined probability model <b>232</b>, e.g., an estimated probability for a certain binary value as updated for a certain context. The decoder might be configured to determine <b>234</b> the predetermined probability model <b>232</b> depending on where the first coded coefficient position <b>102</b> is located within the transform coefficient block <b>104</b>, see <figref idref="DRAWINGS">FIG. <b>9</b></figref> and <figref idref="DRAWINGS">FIG. <b>10</b></figref> with the respective description.</p><p id="p-0098" num="0102">According to an embodiment, e.g., a first embodiment, shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the decoder <b>20</b> is configured to, in determining <b>234</b> the predetermined probability model <b>232</b> depending on where the first coded coefficient position <b>102</b> is located within the transform coefficient block <b>104</b>, set the predetermined probability model <b>232</b> to a first probability model <b>236</b><sub>1</sub>, if the first coded coefficient position <b>102</b> coincides with the last scanned position <b>101</b>, set the predetermined probability model <b>232</b> to a second probability model <b>236</b><sub>2</sub>, if the first coded coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, no more than a predetermined number <b>240</b> of transform coefficients away from the last scanned position <b>101</b>, and set the predetermined probability model <b>232</b> to a third probability model <b>236</b><sub>3</sub>, if the first coded coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, more than the predetermined number <b>240</b> of transform coefficients away from the last scanned position <b>101</b>. The predetermined number <b>240</b> for this embodiment can be set to ten transform coefficients and the last possible transform coefficient which is, along the first coefficient scan order <b>110</b>, no more than the predetermined number <b>240</b> of transform coefficients away from the last scanned position <b>101</b>, is indicated by the reference sign <b>240</b>. However, it is clear that also a different predetermined number <b>240</b> of transform coefficients can be chosen.</p><p id="p-0099" num="0103">According to an alternative embodiment, e.g., a second embodiment, shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the decoder <b>20</b> is configured to, in determining <b>234</b> the predetermined probability model <b>232</b> depending on where the first coded coefficient position <b>102</b> is located within the transform coefficient block <b>104</b>, set the predetermined probability model <b>232</b> to a first probability model <b>238</b><sub>1</sub>, if the first coded coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, no more than a predetermined number <b>240</b> of transform coefficients away from, or coincides with the last scanned position <b>101</b>, and set the predetermined probability model <b>232</b> to a second probability model <b>238</b><sub>2</sub>, if the first coded transform coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, more than the predetermined number <b>240</b> of coefficients away from the last scanned position <b>101</b>. The predetermined number <b>240</b> for this embodiment can be set to eight transform coefficients and the last possible transform coefficient which is, along the first coefficient scan order <b>110</b>, no more than the predetermined number <b>240</b> of transform coefficients away from the last scanned position <b>101</b>, is indicated by the reference sign <b>240</b>. However, as already described above, it is clear that also a different predetermined number <b>240</b> of transform coefficients can be chosen.</p><p id="p-0100" num="0104">For both embodiments described above, the first and second coefficient scan orders <b>110</b> and <b>114</b> coincide in the last scanned position <b>101</b> and the predetermined number <b>240</b> of transform coefficients upstream the last scanned position <b>101</b>. In case of superimposing the first and second coefficient scan orders <b>110</b> and <b>114</b>, shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> (see the decoding <b>109</b> for the first coefficient scan order <b>110</b> and see the decoding <b>113</b> for the second coefficient scan order <b>114</b>), there exist transform coefficients up to which both scans are the same upstream the last scanned position <b>101</b>. In case of the transform coefficient blocks <b>104</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, there exist ten transform coefficients up to which both scans are the same upstream the last scanned position <b>101</b>. The predetermined number <b>240</b> of transform coefficients might be set to a number in the range of three transform coefficients to the maximum number of transform coefficients up to which the first and second coefficient scan orders <b>110</b> and <b>114</b> coincide upstream the last scanned position <b>101</b>. The predetermined number <b>240</b> of transform coefficients might be set to a number in the range of three to ten transform coefficient or three to nine transform coefficient, like eight transform coefficients.</p><p id="p-0101" num="0105">It is to be noted that the first probability model <b>236</b><sub>1 </sub>and the second probability model <b>236</b><sub>2 </sub>of the above described first embodiment might be different to the first probability model <b>238</b><sub>1 </sub>and the second probability model <b>238</b><sub>2 </sub>of the above described second embodiment.</p><p id="p-0102" num="0106"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows on the left-hand side a transform coefficient block coefficient <b>104</b> for which transform coefficient block <b>104</b> the predetermined number <b>240</b> is set to eight transform coefficients and for which transform coefficient block <b>104</b> the first coded transform coefficient position <b>102</b> equals the eights transform coefficient. Additionally, <figref idref="DRAWINGS">FIG. <b>10</b></figref> shows on the right-hand side a transform coefficient block <b>104</b> with the first coded transform coefficient position <b>102</b> being equal to the aforementioned last scanned position <b>101</b>.</p><p id="p-0103" num="0107">According to an embodiment, shown in <figref idref="DRAWINGS">FIGS. <b>11</b><i>a </i>and <b>11</b><i>b</i></figref>, the set <b>130</b> of available transforms, shown and described with regard to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, comprises one or more multi-stage transforms <b>136</b> which correspond to a concatenation of a primary transform <b>136</b><i>a </i>and a secondary transform <b>136</b><i>b </i>within the predetermined subarea <b>106</b> and consist of the primary transform <b>136</b><i>a </i>outside the predetermined subarea <b>106</b>. In other words, at a forward transform, e.g. performed by an encoder, the primary transform <b>136</b><i>a </i>is applied to the whole sample block <b>84</b>, i.e. within the predetermined subarea <b>106</b> and outside the predetermined subarea <b>106</b>, to determine a processed coefficient block <b>84</b>&#x2032; and the secondary transform is applied only to the predetermined subarea <b>106</b> of the processed coefficient block <b>84</b>&#x2032; to determine the transform coefficient block <b>104</b>, as shown on the top right of <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>. At an inverse transform, e.g. performed by the decoder, the inverse of the secondary transform <b>136</b><i>b </i>is applied to the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b> to determine the processed coefficient block <b>84</b>&#x2032; and the inverse of the primary transform <b>136</b><i>a </i>is applied to the whole processed coefficient block <b>84</b>&#x2032; to determine the sample block <b>84</b>. Alternatively, as shown on the top left of <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>it is also possible to apply the primary transform and the secondary transform in one transform step, wherein the secondary transform <b>136</b><i>b </i>is only applied within the predetermined subarea <b>106</b> and the primary transform <b>136</b><i>a </i>is applied within the predetermined subarea <b>106</b> and outside the predetermined subarea <b>106</b>. The one or more multi-stage transforms <b>136</b> are contained in the second set <b>134</b> of one or more available transforms.</p><p id="p-0104" num="0108">Additionally, the set <b>130</b> of available transforms comprises a set <b>138</b> of primary-only transforms comprising one or more first primary-only transforms out of which the first set <b>132</b> of one or more available transforms consists, and one or more second primary-only transforms which are contained in the second set <b>134</b> of one or more available transforms. <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>shows a first set <b>132</b> of one or more available transforms consisting of one first primary-only transform T<sub>0 </sub>and <figref idref="DRAWINGS">FIG. <b>11</b><i>b </i></figref>shows a first set <b>132</b> of one or more available transforms consisting of N<sub>1 </sub>first primary-only transforms T<sub>1 </sub>to T<sub>N1</sub>. The one or more second primary-only transforms in <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>are referenced by T<sub>1 </sub>. . . T<sub>N1 </sub>and the one or more second primary-only transforms in <figref idref="DRAWINGS">FIG. <b>11</b><i>b </i></figref>are referenced by T<sub>N1+1 </sub>. . . T<sub>N2</sub>.</p><p id="p-0105" num="0109">Although the following embodiments are described with regard to <figref idref="DRAWINGS">FIG. <b>11</b></figref><i>b, </i>it is clear that it is also possible to use the introduced signaling of the transform <b>131</b> underlying the transform coefficient block <b>104</b> also for a set <b>130</b> as shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref><i>a. </i></p><p id="p-0106" num="0110">According to an embodiment shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, the decoder is configured to decode a secondary transform indicator <b>124</b> from the data stream. The secondary transform indicator <b>124</b> indicates whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a multi-stage transform, i.e. a transform within set <b>136</b>, and which one out of the one or more multi-stage transforms <b>136</b>, or whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a primary-only transform, i.e. a transform of the set <b>138</b>. If the secondary transform indicator <b>124</b> indicates that the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a primary-only transform, the decoder is configured to decode a transform indicator <b>126</b>, e.g. a primary transform indicator, from the data stream which identifies the primary-only transform out of the set <b>138</b> of primary-only transforms.</p><p id="p-0107" num="0111">According to an additional or alternative embodiment, shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, the decoder is configured to decode the secondary transform indicator <b>124</b> from the data stream, the secondary transform indicator <b>124</b> indicating whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a multi-stage transform <b>136</b>, and, if yes, the secondary transform <b>136</b><i>b </i>of the multi-stage transform, i.e. T<sup>(s) </sup>of the transform <b>131</b> underlying the transform coefficient block <b>104</b>, or whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a primary-only transform, i.e. a transform within set <b>138</b>. Additionally, the decoder is configured to decode the primary transform indicator <b>126</b> from the data stream which identifies, in case of the secondary transform indicator <b>124</b> indicating that the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a primary-only transform, the primary-only transform out of the set <b>138</b> of primary-only transforms, i.e. one of set <b>138</b>, and, in case of the secondary transform indicator <b>124</b> indicating that the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a multi-stage transform, i.e. a transform of the set <b>136</b>, and if the set <b>136</b> of one or more multi-stage transforms comprises more than one multi-stage transform with mutually different primary transforms <b>136</b><i>a, </i>the primary transform <b>136</b><i>a </i>of the multi-stage transform. Thus, in this case the primary transform indicator <b>126</b> is configured to indicate a primary-only transform out of the set <b>138</b> of primary-only transforms or to indicate the primary transform <b>136</b><i>a </i>for a multi-stage transform dependent on what the secondary transform indicator <b>124</b> indicates.</p><p id="p-0108" num="0112">According to an additional or alternative embodiment, shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, the decoder is configured to decode the primary transform indicator <b>126</b> from the data stream. The primary transform indicator <b>126</b> indicates a first transform out of the set <b>138</b> of primary-only transforms including the one or more first primary-only transform T<sub>1 </sub>. . . T<sub>N1</sub>, i.e. a primary transform of the first set <b>132</b> of transforms, and the one or more second primary-only transforms T<sub>N1+1 </sub>. . . T<sub>N2</sub>, i.e. a primary transform of the second set <b>134</b> of transforms. If the first transform is one of the first primary-only transforms T<sub>1 </sub>. . . T<sub>N1</sub>, the decoder is configured to decode the secondary transform indicator <b>124</b> from the data stream which identifies the transform <b>131</b> underlying the transform coefficient block <b>104</b> out of a set including the one or more first primary-only transforms T<sub>1 </sub>. . . T<sub>N1 </sub>and the multi-stage transforms <b>136</b>, e.g. one out of the set <b>130</b> of available transforms without the one or more second primary-only transforms TN<sub>1+1 </sub>. . . T<sub>N2</sub>. Alternatively, in case of the first transform being one of the first primary-only transforms T<sub>1 </sub>. . . T<sub>N1</sub>, the transform <b>131</b> underlying the transform coefficient block <b>104</b> might be identified out of a set including the one or more first primary-only transforms T<sub>1</sub>, . . . T<sub>N1 </sub>and the one or more primary transforms T<sub>1</sub><sup>(p) </sup>to T<sub>N</sub><sub><sub2>(3)</sub2></sub><sup>(p) </sup>of the multi-stage transforms <b>136</b>, among which set some transforms may be equal to each other. The transform <b>131</b> underlying the transform coefficient block <b>104</b> is, in case of the first transform being a primary transform of one of the multi-stage transforms, the one multi-stage transform. In case of the first transform being one of the one or more second primary-only transforms T<sub>N1+1 </sub>. . . T<sub>N2</sub>, the one second primary-only transform indicated by the primary transform indicator <b>126</b>. Thus, in case of the first transform being one of the one or more first primary-only transforms T<sub>1 </sub>. . . T<sub>N1</sub>, the secondary transform indicator <b>124</b> indicates the transform <b>131</b> underlying the transform coefficient block <b>104</b> and in case of the first transform being one of the one or more second primary-only transforms T<sub>N1+1 </sub>. . . T<sub>N2</sub>, the primary transform indicator <b>126</b> indicates the transform <b>131</b> underlying the transform coefficient block <b>104</b>.</p><p id="p-0109" num="0113">According to an additional or alternative embodiment, shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, the decoder is configured to decode the primary transform indicator <b>126</b> from the data stream. The primary transform indicator <b>126</b> indicates a first transform out of a set including the one or more first primary-only transforms T<sub>1 </sub>. . . T<sub>N1 </sub>and the one or more second primary-only transforms T<sub>N1+1 </sub>. . . T<sub>N2</sub>. If the first transform is a first primary-only transform T<sub>1 </sub>. . . T<sub>N1 </sub>which is equal to a primary transform T<sub>1</sub><sup>(p) </sup>to T<sub>N</sub><sub><sub2>3</sub2></sub><sup>(p) </sup>of one or more of the multi-stage transforms <b>136</b>, the decoder is configured to decode the secondary transform indicator <b>124</b> from the data stream which identifies the transform <b>131</b> underlying the transform coefficient block <b>104</b> out of a set including the first primary-only transform and the one or more multi-stage transforms whose primary transform equals the first primary-only transform, e.g., the first primary-only transform indicated by the primary transform indicator <b>126</b>.</p><p id="p-0110" num="0114">According to an embodiment, the decoder <b>20</b> is configured to perform the decoding of the primary transform indicator <b>126</b> from the data stream using context-adaptive entropy decoding using a predetermined probability model, and determine the predetermined probability model depending on where the first coded coefficient position <b>102</b> is located within the transform coefficient block <b>104</b>.</p><p id="p-0111" num="0115">According to an embodiment, the decoder <b>20</b> is configured to in determining the predetermined probability model depending on where the first coded coefficient position <b>102</b> is located within the transform coefficient block <b>104</b>,<ul id="ul0006" list-style="none">    <li id="ul0006-0001" num="0000">    <ul id="ul0007" list-style="none">        <li id="ul0007-0001" num="0116">set the predetermined probability model to a first probability model, if the first coded coefficient position <b>102</b> coincides with the last scanned position <b>101</b>,</li>        <li id="ul0007-0002" num="0117">set the predetermined probability model to a second probability model, if the first coded coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, no more than a predetermined number <b>240</b> of transform coefficients <b>120</b> away from the last scanned position <b>101</b>, and</li>        <li id="ul0007-0003" num="0118">set the predetermined probability model to a third probability model, if the first coded coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, more than the predetermined number <b>240</b> of transform coefficients away from the last scanned position <b>101</b>.</li>    </ul>    </li></ul></p><p id="p-0112" num="0119">The first <b>110</b> and second <b>114</b> coefficient scan orders coincide in the last scanned position <b>101</b> and the predetermined number <b>240</b> of transform coefficients <b>120</b> upstream the last scanned position <b>101</b>.</p><p id="p-0113" num="0120">According to an alternative embodiment, the decoder <b>20</b> is configured to in determining the predetermined probability model depending on where the first coded coefficient position <b>102</b> is located within the transform coefficient block <b>104</b>,<ul id="ul0008" list-style="none">    <li id="ul0008-0001" num="0000">    <ul id="ul0009" list-style="none">        <li id="ul0009-0001" num="0121">set the predetermined probability model to a first probability model, if the first coded coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, no more than a predetermined number <b>240</b> of transform coefficients away from, or coincides with the last scanned position <b>101</b>, and</li>        <li id="ul0009-0002" num="0122">set the predetermined probability model to a second probability model, if the first coded transform coefficient position <b>102</b> is, along the first coefficient scan order <b>110</b>, more than the predetermined number <b>240</b> of coefficients away from the last scanned position <b>101</b>.</li>    </ul>    </li></ul></p><p id="p-0114" num="0123">The first <b>110</b> and second <b>114</b> coefficient scan orders coincide in the last scanned position <b>101</b> and the predetermined number <b>240</b> of transform coefficients upstream the last scanned position <b>101</b>.</p><p id="p-0115" num="0124">The above described setting of the predetermined probability model for the context-adaptive entropy decoding of the primary transform indicator <b>126</b> from the data stream might comprise features and/or functionalities as described for the setting of the predetermined probability model <b>232</b> for the context-adaptive entropy decoding <b>230</b> of the transformation information <b>108</b> from the data stream <b>14</b>, as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. The first, the second and the optional third probability models for the context-adaptive entropy decoding of the primary transform indicator <b>126</b> might be different to the first, the second and the optional third probability models for the context-adaptive entropy decoding of the transformation information <b>108</b>.</p><p id="p-0116" num="0125">According to an embodiment, the primary transform is equal for all of the one or more multi-stage transforms <b>136</b> and is also equal to one of the one or more first primary-only transforms T<sub>0 </sub>or T<sub>1</sub>-T<sub>N1</sub>.</p><p id="p-0117" num="0126">According to an embodiment, there is only one first primary-only transform T<sub>0</sub>, as shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref><i>a. </i></p><p id="p-0118" num="0127">According to an embodiment, the decoder <b>20</b> is configured to subject the transform coefficient block <b>104</b> to a reverse transformation, e.g., an inverse transform, which reverses the transform <b>131</b> underlying the transform coefficient block <b>104</b> so as to obtain the sample block <b>84</b>.</p><p id="p-0119" num="0128">According to an embodiment, the decoder <b>20</b> is configured to use the sample block <b>84</b> to correct a prediction signal gained by intra-picture or inter-picture prediction.</p><p id="p-0120" num="0129"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a decoder <b>20</b> for decoding a transformed representation of a sample block <b>84</b> from a data stream <b>14</b>. The decoder <b>20</b> is configured to decode a coefficient position information <b>150</b> from the data stream <b>14</b>. The coefficient position information <b>150</b> is indicative of a first coded coefficient position <b>102</b> within a transform coefficient block <b>104</b>. The coefficient position information <b>150</b> might have the same features and/or functionalities as described with regard to the coefficient position information <b>100</b> of the decoder shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0121" num="0130">The decoder <b>20</b> is configured to decode values of transform coefficients <b>120</b> of the transform coefficient block <b>104</b> which are, along a predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to a last scanned position <b>101</b>, and infer that transform coefficients <b>112</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located upstream the first coded coefficient position <b>102</b> are zero. As shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the transform coefficients <b>112</b> in the shaded area of the transform coefficient block <b>104</b> are inferred to be zero.</p><p id="p-0122" num="0131">The decoder is configured to check <b>152</b> whether all transform coefficients <b>118</b>, i.e. the transform coefficients indicated by the x in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within a predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero. This check is performed in the subsequent explained embodiments in a manner where the coefficients are checked for their zeroness individually based on the corresponding significance flags, for instance. However, alternatives exist. For instance, it might be that this check <b>152</b> might be performed subblockwise and that the predetermined subarea <b>106</b> encompasses all subblocks except some subblocks of lowest spectral components, e.g. the n&#xd7;m subblocks at the upper left corner of block <b>104</b> which contain the DC subblock comprising the DC coefficient, as well as the subblock containing the last scanned position <b>101</b>. n might be equal to m, for instance. n might be 4 and m might be 4, for instance. To be more precise, the transform coefficient block might be subdivided into subblocks with each subblock, for example, being 4&#xd7;4 transform coefficients large, so that the upper left subblock is the subblock of lowest spectral components. Each subblock, for example, can be indicated by an index or by coordinates, e.g. xS and yS, defining the position of the respective subblock in the transform coefficient block <b>104</b>, wherein xS indicates the subblock column and yS the subblock row of the respective subblock with the indexing starting at zero, respectively, i.e. subblock (xS,yS)=(0,0) being the DC subblock. The predetermined coefficient scan order <b>110</b> may traverse the coefficients of block <b>104</b> subblockwise, i.e. all coefficients within a subblock are traversed before proceeding to the next subblock. The subblocks might be traversed in a manner similar to the scan within each subblock, namely diagonally. For each subblock except the subblock of lowest spectral components as well as the subblock containing the last scanned position <b>101</b>, a subblock flag may be transmitted in the data stream, i.e. decoded by decoder and encoded thereinto by the encoder, the subblock indicating for the respective subblock whether any significant coefficient is contained within the respective subblock. The decoder might check based on these subblock flags whether significant values are present in any subblock outside the predetermined area, i.e. within any subblock between the n&#xd7;n lowest spectral-component subblocks and the subblock containing the last coded coefficient. By this measure, it is tested, whether all transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero, namely in case of all coded subblock flags for subblocks between the nxn subblocks and the subblock containing the last coded coefficient being zero. For example, in case of the predetermined area being 16&#xd7;16 transform coefficients large, i.e. 4 subblocks in width and 4 subblocks in height, it is checked <b>152</b> whether a subblock outside the predetermined subarea <b>106</b>, e.g. a subblock indicated with coordinates xS&#x3e;3 or yS&#x3e;3, comprises one or more significant transform coefficients. Let's resume the description.</p><p id="p-0123" num="0132">If all transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero, the decoder <b>20</b> is configured to decode <b>153</b> a transformation information <b>154</b> from the data stream <b>14</b> and identify <b>155</b>, using the transformation information <b>154</b>, a transform <b>131</b> underlying the transform coefficient block <b>104</b> out of a set <b>130</b> of available transforms, e.g. out of a second set <b>134</b> of one or more available transforms out of the set <b>130</b> of available transforms.</p><p id="p-0124" num="0133">If not all transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero, the decoder is configured to reduce the set <b>130</b> of available transforms to a first set <b>132</b> of one or more available transforms by removing from the set <b>130</b> of available transforms the second set <b>134</b> of one or more available transforms and determine the transform <b>131</b> underlying the transform coefficient block <b>104</b> out of the first set <b>132</b> of one or more available transforms. This can also be described in the following way: If a subblock is located outside the predetermined area, e.g., the top-left 16&#xd7;16 coefficients, and it is significant, that is, for example, the respective subblock contains at least one non-zero coefficient, then it follows that only a restricted set of transforms, e.g. only the transforms of the first set <b>132</b> of one or more available transforms, can be utilized. If this set <b>132</b> contains only one transform, for example, only the DCT-II, then the value of mts_idx can be inferred to be 0.</p><p id="p-0125" num="0134">According to an embodiment, the set <b>130</b> of available transforms might be a set <b>138</b> of primary-only transforms as, for example, shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>or <b>11</b><i>b</i>, including one or more first primary-only transform T<sub>1 </sub>. . . T<sub>N1</sub>, e.g., comprised in the first set <b>132</b> of one or more available transforms, and one or more second primary-only transforms T<sub>N1+1 </sub>. . . T<sub>N2</sub>, e.g., comprised in the second set <b>134</b> of one or more available transforms. Preferably the set <b>130</b> of available transforms consists of one first primary-only transform T<sub>0 </sub>and one or more second primary-only transforms T<sub>1 </sub>. . . T<sub>N </sub>as, for example, shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>. Thus, in the second case of not all transform coefficients <b>118</b>, indicated by the x in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, of the transform coefficient block <b>104</b> outside the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b> being zero, the decoder might determine the one first primary-only transform T<sub>0 </sub>as the transform <b>131</b> underlying the transform coefficient block <b>104</b>. In the other case of all transform coefficients <b>118</b>, indicated by the x in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, of the transform coefficient block <b>104</b> outside the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b> being zero, the decoder might determine the transform <b>131</b> underlying the transform coefficient block <b>104</b> out of set <b>130</b> by way of an index transmitted in the data stream for block <b>104</b>, i.e. decoded from the data stream by the decoder and encoded thereinto by the encoder in this other case. The set <b>130</b> of available transforms might comprise five different options, the one transform T<sub>0 </sub>might be a DCTII-DCTII transformation. The latter example might be combined, for instance, with the aforementioned example of checking the zeroness outside the predetermined area subblockwise. Additionally, in this example, it might optionally be that coding options for block <b>104</b> exist according to which the transform <b>131</b> underlying block <b>104</b> is a combination of the primary transform determined as just-outlined with a secondary transform. For instance, it might be that, if the position of the last coded transform coefficient fulfills a certain condition, that a further index selects a secondary transform out of a set of secondary transforms. This set might comprise, as one option, no secondary transform, i.e. an identity transform effectively leaving the primary transform as primary only transform. If the certain condition is not met, no secondary transform would be used, too.</p><p id="p-0126" num="0135">The transform <b>131</b> underlying the transform coefficient block <b>104</b> along with the transform coefficient block <b>104</b> defines the transformed representation and the predetermined coefficient scan order <b>110</b> scans the transform coefficients <b>120</b> in a manner so that there are one or more transform coefficients <b>118</b>, i.e. the transform coefficients indicated by the x, outside the predetermined subarea <b>106</b> which are scanned by the predetermined coefficient scan order <b>110</b> between two transform coefficients <b>120</b> located inside the predetermined subarea <b>106</b>.</p><p id="p-0127" num="0136">According to an embodiment, the decoder is configured to check whether the first coded coefficient position <b>102</b> is located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, and check <b>152</b> whether all transform coefficients <b>118</b> which are located outside the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b> and are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are zero. Optionally, the check <b>152</b> is merely performed if the first coded coefficient position <b>102</b> is located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>. This is due to the fact, that the transform coefficients outside the predetermined subarea <b>106</b> should not be zero in case of the first coded coefficient position <b>102</b> being located outside the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>.</p><p id="p-0128" num="0137">According to an embodiment, the decoder <b>20</b> is configured to perform the decoding <b>153</b> of the transformation information <b>154</b> from the data stream <b>14</b> using context-adaptive entropy decoding using a predetermined probability model, and determine the predetermined probability model depending on where the first coded coefficient position <b>102</b> is located within the transform coefficient block <b>104</b>. Optionally, the predetermined probability model for the context-adaptive entropy decoding of the transformation information <b>154</b> from the data stream <b>14</b> might be set as described with regard to the predetermined probability model <b>232</b> for the context-adaptive entropy decoding <b>230</b> of the transformation information <b>108</b> from the data stream, as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. However, it is clear that the first, the second and the optional third probability models for the context-adaptive entropy decoding of the transformation information <b>154</b> might be different to the first, the second and the optional third probability models for the context-adaptive entropy decoding of the transformation information <b>108</b>.</p><p id="p-0129" num="0138">According to an embodiment, the set <b>130</b> of available transforms comprises, as shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>, multi-stage transforms <b>136</b> each of which corresponds to a concatenation of a primary transform T<sub>1</sub><sup>(p)</sup>&#x2212;T<sub>N2</sub><sup>(p) </sup>and a secondary transform T<sub>1</sub><sup>(s)</sup>&#x2212;T<sub>N2</sub><sup>(s) </sup>within the predetermined subarea <b>106</b> and consists of the primary transform T<sub>1</sub><sup>(s)</sup>&#x2212;T<sub>N2</sub><sup>(s) </sup>outside the predetermined subarea <b>106</b>. The multi-stage transforms <b>136</b> are contained in the second set <b>134</b> of one or more available transforms. A set <b>138</b> of primary-only transforms comprising a first primary-only transform T<sub>0 </sub>out of which the first set <b>132</b> of one or more available transforms consists, and to which the primary transform T<sub>1</sub><sup>(p)</sup>&#x2212;T<sub>N2</sub><sup>(p) </sup>for all of the one or more multi-stage transforms <b>136</b> is equal, and one or more second primary-only transforms T<sub>1</sub>-T<sub>N1 </sub>which are contained in the second set <b>134</b> of one or more available transforms.</p><p id="p-0130" num="0139">According to an embodiment, the set <b>130</b> of available transforms described above and shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>is used. The decoder <b>20</b> is configured to, if all transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero, decode a secondary transform indicator <b>156</b> from the data stream <b>14</b>, the secondary transform indicator <b>156</b> indicating whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a multi-stage transform <b>136</b>, and which one out of the one or more multi-stage transforms <b>136</b>, or whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a primary-only transform <b>138</b>.</p><p id="p-0131" num="0140">In other words, the secondary transform indicator <b>156</b> indicates whether the transform <b>131</b> underlying the transform coefficient block <b>104</b> belongs to the multi-stage transforms <b>136</b> or to the primary-only transforms <b>138</b>, wherein the transform <b>131</b> underlying the transform coefficient block <b>104</b> is directly indicated by the secondary transform indicator <b>156</b>, if the transform <b>131</b> belongs to the multi-stage transforms <b>136</b>. Additionally, it is in this first case <b>157</b> checked whether the secondary transform indicator <b>156</b> indicates that the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a primary-only transform <b>138</b>, and if the secondary transform indicator <b>156</b> indicates that the transform <b>131</b> underlying the transform coefficient block <b>104</b> is a primary-only transform <b>138</b>, the decoder <b>20</b> is configured to decode a transform indicator <b>160</b>, e.g., a primary transform indicator, from the data stream <b>14</b> which identifies the primary-only transform out of the set <b>138</b> of primary-only transforms. In the second case <b>159</b>, if not all transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero, the transform underlying the transform coefficient block is the first primary-only transform T<sub>0</sub>.</p><p id="p-0132" num="0141">According to an embodiment, the set <b>130</b> of available transforms described above and shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>is used. The decoder <b>20</b> is configured to, if all transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero, decode the primary transform indicator <b>160</b> from the data stream <b>14</b>, the primary transform indicator <b>160</b> indicating a first transform out of a set including the first primary-only transform T<sub>0 </sub>and the one or more second primary-only transforms T<sub>1</sub>-T<sub>N1</sub>. If the first transform is the first primary-only transform T<sub>0</sub>, the decoder <b>20</b> is configured to decode the secondary transform indicator <b>156</b> from the data stream <b>14</b> which identifies the transform <b>131</b> underlying the transform coefficient block <b>104</b> out of a set including the first primary-only transform T<sub>0 </sub>and the multi-stage transforms <b>136</b>. If the first transform is one of the one or more second primary-only transforms T<sub>1</sub>-T<sub>N1</sub>, the transform <b>131</b> underlying the transform coefficient block <b>104</b> is the one second primary-only transform, i.e., the second primary-only transform indicated by the primary transform indicator <b>160</b>. If not all transform coefficients <b>118</b> of the transform coefficient block <b>104</b> which are, along the predetermined coefficient scan order <b>110</b>, located from the first coded coefficient position <b>102</b> onwards to the last scanned position <b>101</b> are, if not located within the predetermined subarea <b>106</b> of the transform coefficient block <b>104</b>, zero, the transform <b>131</b> underlying the transform coefficient block <b>104</b> is the first primary-only transform T<sub>0</sub>.</p><p id="p-0133" num="0142">According to an embodiment, the primary transform T<sub>1</sub><sup>(p)</sup>&#x2212;T<sub>N2</sub><sup>(p) </sup>is equal for all of the one or more multi-stage transforms <b>136</b> and is also equal to one of the one or more first primary-only transforms, e.g., equal to T<sub>0 </sub>in <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>or equal to one of T<sub>1</sub>-T<sub>N1 </sub>in <figref idref="DRAWINGS">FIG. <b>11</b></figref><i>b. </i></p><p id="p-0134" num="0143">According to an embodiment, there is only one first primary-only transform T<sub>0</sub>, as shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref><i>a. </i></p><p id="p-0135" num="0144">According to an embodiment, the decoder <b>20</b> is configured to subject the transform coefficient block <b>104</b> to a reverse transformation which reverses the transform <b>131</b> underlying the transform coefficient block <b>104</b> so as to obtain the sample block <b>84</b>.</p><p id="p-0136" num="0145">According to an embodiment, the decoder <b>20</b> is configured to use the sample block <b>84</b> to correct a prediction signal gained by intra-picture or inter-picture prediction.</p><p id="p-0137" num="0146">According to an embodiment, an encoder with parallel features and/or functionalities as one of the decoders described above with respect to one of <figref idref="DRAWINGS">FIGS. <b>7</b> to <b>12</b></figref> is configured to subject the sample block <b>84</b> to the transform <b>131</b> underlying the transform coefficient block <b>104</b> so as to obtain the transform coefficient block <b>104</b>.</p><p id="p-0138" num="0147">According to an embodiment, an encoder with parallel features and/or functionalities as one of the decoders described above with respect to one of <figref idref="DRAWINGS">FIGS. <b>7</b> to <b>12</b></figref> is configured to derive a prediction residual of a prediction signal gained by intra-picture or inter-picture prediction and determine the sample block <b>84</b>, e.g., including a quantization, to represent the prediction residual.</p><p id="p-0139" num="0148">The following description describes in other words the two ways described above to improve the coding efficiency for transform type signaling:<ul id="ul0010" list-style="none">    <li id="ul0010-0001" num="0000">    <ul id="ul0011" list-style="none">        <li id="ul0011-0001" num="0149">1. Keep signaling transform type after the coefficient levels in subblocks</li>    </ul>    </li></ul></p><p id="p-0140" num="0150">When the first (last) significant coefficient position <b>102</b> in the current transform block <b>104</b> is located inside an area where all coefficients are required to be equal to 0 for a certain subset of allowed transforms, i.e. the first (last) significant coefficient position <b>102</b> is located outside the predetermined subarea <b>106</b> (e.g. outside the 16&#xd7;16 area for non-DCT-II transforms described above), only the subset of allowed transforms can be signaled that does not have the non-zero requirement, e.g. the transforms of the first set <b>132</b> of available transforms of the set <b>130</b> of available transforms. In case the subset contains only one transform, no signaling is needed and the transform is inferred (e.g. MTS index is not signaled and inferred to be equal to 0 instead which is illustrated in both simplified syntax diagrams of <figref idref="DRAWINGS">FIG. <b>13</b></figref>)</p><p id="p-0141" num="0151"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows a simplified syntax diagram with non-modified subblock (SB) scanning depending on transform selection with mts_idx.</p><p id="p-0142" num="0152">When the first (last) significant coefficient position <b>102</b> in the current transform block <b>104</b> is located outside an area where all coefficients are required to be equal to 0 for a certain subset of allowed transforms, i.e. the first (last) significant coefficient position <b>102</b> is located inside the predetermined subarea <b>106</b> (e.g. inside the 16&#xd7;16 area for non-DCT-II transforms described above), the location of each subsequentially scanned coefficient is checked <b>152</b>, as shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. If at least one coefficient <b>118</b> is located outside the non-zero area, i.e. the predetermined subarea <b>106</b>, only the subset of allowed transforms can be signaled that does not have the non-zero requirement, e.g. the transforms of the first set <b>132</b> of available transforms of the set <b>130</b> of available transforms. In case the subset contains only one transform, no signaling is needed and the transform is inferred (e.g. MTS index is not signaled and inferred to be equal to 0 instead). This condition is illustrated in the simplified syntax diagram on the right-hand side of <figref idref="DRAWINGS">FIG. <b>13</b></figref> (see condition on AllLumaCoeffOutside16&#xd7;16AreZero).</p><p id="p-0143" num="0153">In case an additional transform can be applied, e.g., an LFNST, its selection is signaled <b>156</b> before the transform type and it indicates that the additional transform is applied, only the subset of transforms that are allowed in combination with the additional transform can be signaled. In case the subset contains only one transform, no signaling is needed and the transform is inferred (e.g. if LFNST index is greater than 0, which signals that an LFNST is applied, the MTS index is not signaled and inferred to be equal to 0 instead, which corresponds to the DCT-II, illustrated in both simplified syntax diagrams of <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0144" num="0154">In case an additional transform can be applied (e.g. an LFNST), its selection is signaled <b>156</b> after the transform type and the transform type indicates a transform that is not allowed to be combined with the additional transform, the selection of the additional transform is not signaled but inferred to be disabled (e.g. if MTS index is greater than 0, which signals that a non-DCT-II transform is applied, the LFNST index is not signaled and inferred to be equal to 0 instead, which corresponds to disabling the LFNST).<ul id="ul0012" list-style="none">    <li id="ul0012-0001" num="0000">    <ul id="ul0013" list-style="none">        <li id="ul0013-0001" num="0155">2. Signal transform type after first (last) significant coefficient position and before the coefficient level in subblocks</li>    </ul>    </li></ul></p><p id="p-0145" num="0156">After the first (last) significant coefficient position <b>102</b> in the current transform block <b>104</b> is signaled <b>100</b> and it is located inside an area where all coefficients are required to be equal to 0 for a certain subset of allowed transforms, i.e. the first (last) significant coefficient position <b>102</b> is located outside the predetermined subarea <b>106</b> (e.g. outside the 16&#xd7;16 area for non-DCT-II transforms described above), only the subset of allowed transforms can be signaled that does not have the non-zero requirement, e.g. the transforms of the first set <b>132</b> of available transforms of the set <b>130</b> of available transforms, as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. In case the subset contains only one transform, no signaling is needed and the transform is inferred (e.g. MTS index is not signaled and inferred to be equal to 0 instead). This condition is illustrated in both simplified syntax diagrams in <figref idref="DRAWINGS">FIG. <b>14</b></figref> (see condition on LastCoeffPosY in 16&#xd7;16).</p><p id="p-0146" num="0157"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows a simplified syntax diagram with modified subblock (SB) scanning depending on transform selection with mts_idx.</p><p id="p-0147" num="0158">When a transform is signaled that requires all coefficients outside a specific area, i.e. the predetermined subarea <b>106</b>, to be equal to 0, change the scanning order in a way that only subblocks and coefficients inside this area, i.e. the predetermined subarea <b>106</b>, are in the scanning path <b>114</b> as shown in the left-hand side of <figref idref="DRAWINGS">FIG. <b>3</b></figref> or as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. This condition is also illustrated in both simplified syntax diagrams in <figref idref="DRAWINGS">FIG. <b>14</b></figref> (see condition on mts_idx&#x3e;0).</p><p id="p-0148" num="0159">In case an additional transform can be applied, e.g., an LFNST, its selection <b>124</b> is signaled after the transform type and the transform type indicates a transform that is not allowed to be combined with the additional transform, e.g., a transform of the second primary-only transforms, the selection of the additional transform is not signaled but inferred to be disabled (e.g. if MTS index is greater than 0, which signals that a non-DCT-II transform is applied, the LFNST index is not signaled and inferred to be equal to 0 instead, which corresponds to disabling the LFNST, illustrated in the simplified syntax diagram on the left-hand side of <figref idref="DRAWINGS">FIG. <b>14</b></figref>).</p><p id="p-0149" num="0160">In addition to the previous case, the signaling of the transform type can be done using context-adaptive entropy coding <b>230</b>, e.g. context-adaptive binary arithmetic coding (CABAC), as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. In this case, the context selection might depend on conditions that allow applying an additional transform (e.g. LFNST) or not. This can be the number <b>240</b> of non-zero coefficients in the current block, i.e. the current transform coefficient block <b>104</b>, inferred from the first (last) significant coefficient position <b>102</b>. If applying an additional transform to the DC coefficient, i.e. the last scanned position <b>101</b>, i.e. the top-left (0,0) zero-frequency position, would result in the same DC coefficient, it would make no sense to apply and signal such an additional transform if only one DC coefficient is present in the current transform block, i.e. in case the first coded coefficient position <b>102</b> coincides with the last scanned position <b>101</b>. Hence, if the last (first) significant position points to the DC position which is also the first and the last position in scan order, the additional transform does not need to be signaled and a specific context A, e.g., a first probability model, is selected for the MTS index. This case is illustrated on the right-hand side of <figref idref="DRAWINGS">FIG. <b>10</b></figref>. Furthermore, to reduce the complexity in terms of number of multiplications, only a certain maximum number <b>240</b> of coefficients (e.g. 8) can be allowed from the first (last) significant position <b>102</b> to the DC, i.e. the last scanned position <b>101</b>, for the additional transforms in scan order <b>110</b>. This case is illustrated on the left-hand side of <figref idref="DRAWINGS">FIG. <b>10</b></figref>. All other cases where an additional transform can be applied and/or an indication is signaled, another context B, e.g. a second probability model, is selected. In summary the conditions for context selection based on the previous examples would be:<ul id="ul0014" list-style="none">    <li id="ul0014-0001" num="0000">    <ul id="ul0015" list-style="none">        <li id="ul0015-0001" num="0161">If the current transform block <b>104</b> has more non-zero coefficients than the DC and there are no more than 8 coefficients in scan order <b>110</b> from the last significant position to the DC, select context A, e.g., the second probability model <b>2362</b>.</li>        <li id="ul0015-0002" num="0162">Otherwise, select context B.</li>    </ul>    </li></ul></p><p id="p-0150" num="0163">Another example could have more than 2 context depending on the condition<ul id="ul0016" list-style="none">    <li id="ul0016-0001" num="0000">    <ul id="ul0017" list-style="none">        <li id="ul0017-0001" num="0164">If the current transform block <b>104</b> has no more non-zero coefficients than the DC, select context A, i.e. the first probability model <b>236</b><sub>1</sub>.</li>        <li id="ul0017-0002" num="0165">Otherwise, if there are no more than 8 coefficients in scan order from the last significant position to the DC, select context B, i.e. the second probability model <b>236</b><sub>2</sub>.</li>        <li id="ul0017-0003" num="0166">Otherwise, select context C, i.e. the third probability model <b>236</b><sub>3</sub>.</li>    </ul>    </li></ul></p><p id="p-0151" num="0167">The conditions can also apply to multiple transform blocks, e.g. there have to be more coefficients than the DC for luma and two chroma blocks or for more than one luma block in case the luma transform block is divided into multiple (e.g. 4) transform blocks.</p><p id="p-0152" num="0168"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an 8&#xd7;8 block with four 4&#xd7;4 subblocks and a maximum of eight non-zero coefficients in scan order (left) or with only one non-zero coefficient at the DC position (right).</p><p id="p-0153" num="0169">In case an additional transform can be applied (e.g. an LFNST), its selection is signaled before the transform type and it indicates that the additional transform is applied, only the subset of transforms that are allowed in combination with the additional transform can be signaled. In case the subset contains only one transform, no signaling is needed and the transform is inferred (e.g. if LFNST index is greater than 0, which signals that an LFNST is applied, the MTS index is not signaled and inferred to be equal to 0 instead, which corresponds to the DCT-II, illustrated in the simplified syntax diagram on the right-hand side of <figref idref="DRAWINGS">FIG. <b>14</b></figref>).<ul id="ul0018" list-style="none">    <li id="ul0018-0001" num="0000">    <ul id="ul0019" list-style="none">        <li id="ul0019-0001" num="0170">3. Implementation Examples</li>    </ul>    </li></ul></p><p id="p-0154" num="0171">The primary transforms T<sub>i </sub>and T<sub>i</sub><sup>(p)</sup>, shown in <figref idref="DRAWINGS">FIGS. <b>11</b><i>a </i>and <b>11</b><i>b</i></figref>, may comprise one or more of:<ul id="ul0020" list-style="none">    <li id="ul0020-0001" num="0000">    <ul id="ul0021" list-style="none">        <li id="ul0021-0001" num="0172">DCT-II (or DCT-III), where DCT stands for Discrete Cosine Transform</li>        <li id="ul0021-0002" num="0173">DST-IV, where DST stands for Discrete Sine Transform</li>        <li id="ul0021-0003" num="0174">DCT-IV</li>        <li id="ul0021-0004" num="0175">DST-VII</li>        <li id="ul0021-0005" num="0176">Identity Transformation (IT)</li>    </ul>    </li></ul></p><p id="p-0155" num="0177">The primary transforms T<sub>i </sub>and T<sub>i</sub><sup>(p) </sup>may be separable transforms.</p><p id="p-0156" num="0178">The secondary transforms T<sub>i</sub><sup>(s) </sup>may be non-separable transforms which are applied to the primary transform's T<sub>i</sub><sup>(p) </sup>coefficients within subarea <b>106</b> to yield the coefficients of the final transform coefficient block <b>104</b> in forward direction at the encoder, wherein the decoder reverses the resulting multistage-transform T<sub>i</sub><sup>(s)</sup>&#xb7;T<sub>i</sub><sup>(p) </sup>by applying a reverse transform T<sup>&#x2212;1 </sup>onto the transform coefficient block <b>104</b> to obtain the sample block <b>84</b>.</p><p id="p-0157" num="0179">The following notes shall be made. The orders <b>114</b> and <b>110</b> were are not restricted to the shown examples of diagonal scanning from the (horizontally and vertically) highest frequency coefficient (located at the opposite corner of block <b>104</b> relative to the last scanned position <b>101</b> which may be the DC coefficient) and not necessarily scan the coefficients along a sub-block-wise scanning process of scanning all coefficients within a sub-block first before preceding to another sub-block. Further, sub-array <b>106</b> is not restricted to be 16&#xd7;16 coefficients large and may be any rectangular sub-array of coefficients extending from the last scanning position <b>101</b> to an opposite corner within block <b>104</b>.</p><p id="p-0158" num="0180">Further, <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>was merely illustrative. More than one primary-only transform may be contained in set <b>132</b>. This is depicted in <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>. The primary transforms T<sub>1</sub><sup>(p) </sup>to T<sub>N</sub><sub><sub2>3</sub2></sub><sup>(p) </sup>of the multistage transforms <b>136</b> may not be equal to another, but may have different members in set <b>136</b> of which one or more may belong to the primary-only transforms of set <b>132</b>, or not.</p><p id="p-0159" num="0181">Further, merely because of the constellation that, as exemplarily shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>, T<sub>1</sub><sup>(p)</sup>=. . . =T<sub>N2</sub><sup>(p)</sup>=T<sub>0</sub>, it has been possible to regard the indicator <b>124</b> as being indicative of the multi-stage transform chosen, in case indicating no primary-only transform, or as being indicative of the secondary transform chosen, in case indicating no primary-only transform. Indicator <b>124</b> may alternatively be interpreted as indicating, if still available, the secondary transform.</p><p id="p-0160" num="0182">Although some aspects have been described in the context of an apparatus, it is clear that these aspects also represent a description of the corresponding method, where a block or device corresponds to a method step or a feature of a method step. Analogously, aspects described in the context of a method step also represent a description of a corresponding block or item or feature of a corresponding apparatus. Some or all of the method steps may be executed by (or using) a hardware apparatus, like for example, a microprocessor, a programmable computer or an electronic circuit. In some embodiments, one or more of the most important method steps may be executed by such an apparatus.</p><p id="p-0161" num="0183">The inventive encoded signal such as a video signal can be stored on a digital storage medium or can be transmitted on a transmission medium such as a wireless transmission medium or a wired transmission medium such as the Internet.</p><p id="p-0162" num="0184">Depending on certain implementation requirements, embodiments of the invention can be implemented in hardware or in software. The implementation can be performed using a digital storage medium, for example a floppy disk, a DVD, a Blu-Ray, a CD, a ROM, a PROM, an EPROM, an EEPROM or a FLASH memory, having electronically readable control signals stored thereon, which cooperate (or are capable of cooperating) with a programmable computer system such that the respective method is performed. Therefore, the digital storage medium may be computer readable.</p><p id="p-0163" num="0185">Some embodiments according to the invention comprise a data carrier having electronically readable control signals, which are capable of cooperating with a programmable computer system, such that one of the methods described herein is performed.</p><p id="p-0164" num="0186">Generally, embodiments of the present invention can be implemented as a computer program product with a program code, the program code being operative for performing one of the methods when the computer program product runs on a computer. The program code may for example be stored on a machine readable carrier.</p><p id="p-0165" num="0187">Other embodiments comprise the computer program for performing one of the methods described herein, stored on a machine readable carrier.</p><p id="p-0166" num="0188">In other words, an embodiment of the inventive method is, therefore, a computer program having a program code for performing one of the methods described herein, when the computer program runs on a computer.</p><p id="p-0167" num="0189">A further embodiment of the inventive methods is, therefore, a data carrier (or a digital storage medium, or a computer-readable medium) comprising, recorded thereon, the computer program for performing one of the methods described herein. The data carrier, the digital storage medium or the recorded medium are typically tangible and/or non-transitionary.</p><p id="p-0168" num="0190">A further embodiment of the inventive method is, therefore, a data stream or a sequence of signals representing the computer program for performing one of the methods described herein. The data stream or the sequence of signals may for example be configured to be transferred via a data communication connection, for example via the Internet.</p><p id="p-0169" num="0191">A further embodiment comprises a processing means, for example a computer, or a programmable logic device, configured to or adapted to perform one of the methods described herein.</p><p id="p-0170" num="0192">A further embodiment comprises a computer having installed thereon the computer program for performing one of the methods described herein.</p><p id="p-0171" num="0193">A further embodiment according to the invention comprises an apparatus or a system configured to transfer (for example, electronically or optically) a computer program for performing one of the methods described herein to a receiver. The receiver may, for example, be a computer, a mobile device, a memory device or the like. The apparatus or system may, for example, comprise a file server for transferring the computer program to the receiver.</p><p id="p-0172" num="0194">In some embodiments, a programmable logic device (for example a field programmable gate array) may be used to perform some or all of the functionalities of the methods described herein. In some embodiments, a field programmable gate array may cooperate with a microprocessor in order to perform one of the methods described herein. Generally, the methods are preferably performed by any hardware apparatus.</p><p id="p-0173" num="0195">The apparatus described herein may be implemented using a hardware apparatus, or using a computer, or using a combination of a hardware apparatus and a computer.</p><p id="p-0174" num="0196">The apparatus described herein, or any components of the apparatus described herein, may be implemented at least partially in hardware and/or in software.</p><p id="p-0175" num="0197">The methods described herein may be performed using a hardware apparatus, or using a computer, or using a combination of a hardware apparatus and a computer.</p><p id="p-0176" num="0198">The methods described herein, or any components of the apparatus described herein, may be performed at least partially by hardware and/or by software.</p><p id="p-0177" num="0199">The above described embodiments are merely illustrative for the principles of the present invention. It is understood that modifications and variations of the arrangements and the details described herein will be apparent to others skilled in the art. It is the intent, therefore, to be limited only by the scope of the impending patent claims and not by the specific details presented by way of description and explanation of the embodiments herein.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A decoding apparatus for decoding a transformed representation of a block from a data stream, wherein the decoding apparatus comprises:<claim-text>a processor; and</claim-text><claim-text>a memory storing instructions that, when executed by the processor, cause the processor to:<claim-text>decode coefficient position information from the data stream, wherein the coefficient position information is indicative of a first coded coefficient position within a transform coefficient block;</claim-text><claim-text>check whether the first coded coefficient position is located within a predetermined subarea of the transform coefficient block;</claim-text><claim-text>if the first coded coefficient position is located outside the predetermined subarea of the transform coefficient block:<claim-text>reduce a set of available transforms to a first set of one or more available transforms by removing from the set of available transforms a second set of one or more available transforms;</claim-text><claim-text>determine a transform underlying the transform coefficient block out of the first set of one or more available transforms,</claim-text></claim-text><claim-text>decode values of transform coefficients of the transform coefficient block that are, along a first coefficient scan order, located from the first coded coefficient position onward to a last scanned position using the determined transform; and<claim-text>infer that the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream from the first coded coefficient position to be zero.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-02-64" num="02-64"><claim-text><b>2</b>-<b>64</b>. (canceled)</claim-text></claim><claim id="CLM-00065" num="00065"><claim-text><b>65</b>. The decoding apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, if the first coded coefficient position is located inside the predetermined subarea of the transform coefficient block, the instructions, when executed by the processor, cause the processor to:<claim-text>check, using transformation information transmitted in the data stream, whether the transform underlying the transform coefficient block is within the first set of one or more available transforms of the set of available transforms or the second set of one or more available transforms of the set of available transforms;</claim-text><claim-text>if the transform underlying the transform coefficient block is within the first set of one or more available transforms, decode the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located from the first coded coefficient position onward to the last scanned position, and infer that the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream from the first coded coefficient position to be zero;</claim-text><claim-text>if the transform underlying the transform coefficient block is within the second set of one or more available transforms, decode the values of the transform coefficients of the transform coefficient block that are located within the predetermined subarea and are, along a second coefficient scan order, located from the first coded coefficient position onward to the last scanned position, and infer that the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream from the first coded coefficient position and the transform coefficients of the transform coefficient block that are located outside the predetermined subarea to be zero.</claim-text></claim-text></claim><claim id="CLM-00066" num="00066"><claim-text><b>66</b>. The decoding apparatus of <claim-ref idref="CLM-00065">claim 65</claim-ref>, wherein:<claim-text>the transform underlying the transform coefficient block along with the transform coefficient block define the transformed representation; and</claim-text><claim-text>the second coefficient scan order defines a scan order for scanning the transform coefficients within the predetermined subarea without scanning any transform coefficient outside the predetermined subarea between the transform coefficients within the predetermined subarea, and the first coefficient scan order defines a scan order for scanning the transform coefficients in a manner so that there are one or more transform coefficients outside the predetermined subarea which are scanned by the first coefficient scan order between two transform coefficients located inside the predetermined subarea.</claim-text></claim-text></claim><claim id="CLM-00067" num="00067"><claim-text><b>67</b>. The decoding apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions, when executed by the processor, cause the processor to subject the transform coefficient block to a reverse transformation that reverses the transform underlying the transform coefficient block so as to obtain the block.</claim-text></claim><claim id="CLM-00068" num="00068"><claim-text><b>68</b>. The decoding apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions, when executed by the processor, cause the processor to use the block to correct a prediction signal gained by intra-picture or inter-picture prediction.</claim-text></claim><claim id="CLM-00069" num="00069"><claim-text><b>69</b>. An encoding apparatus for encoding a transformed representation of a block into a data stream, wherein the encoding apparatus comprises:<claim-text>a processor; and</claim-text><claim-text>a memory storing instructions that, when executed by the processor, cause the processor to:<claim-text>encode coefficient position information into the data stream, wherein the coefficient position information is indicative of a first coded coefficient position within a transform coefficient block;</claim-text><claim-text>check whether the first coded coefficient position is located within a predetermined subarea of the transform coefficient block;</claim-text><claim-text>if the first coded coefficient position is located outside the predetermined subarea of the transform coefficient block:<claim-text>reduce a set of available transforms to a first set of one or more available transforms by removing from the set of available transforms a second set of one or more available transforms;</claim-text><claim-text>determine a transform underlying the transform coefficient block out of the first set of one or more available transforms,</claim-text><claim-text>encode values of transform coefficients of the transform coefficient block that are, along a first coefficient scan order, located from the first coded coefficient position onward to a last scanned position, wherein the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream from the first coded coefficient position are equal to zero.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00070" num="00070"><claim-text><b>70</b>. The encoding apparatus of <claim-ref idref="CLM-00069">claim 69</claim-ref>, wherein if the first coded coefficient position is located inside the predetermined subarea of the transform coefficient block, the instructions, when executed by the processor, cause the processor to:<claim-text>check whether a transform underlying the transform coefficient block is within the first set of one or more available transforms of the set of available transforms or a second set of one or more available transforms of the set of available transforms;</claim-text><claim-text>if the transform underlying the transform coefficient block is within the first set of one or more available transforms, encode the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located from the first coded coefficient position onward to the last scanned position, wherein transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream of the first coded coefficient position are equal to zero,</claim-text><claim-text>if the transform underlying the transform coefficient block is within the second set of one or more available transforms, encode values of transform coefficients of the transform coefficient block that are located within the predetermined subarea and are, along a second coefficient scan order, located from the first coded coefficient position onward to the last scanned position, wherein transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream of the first coded coefficient position and transform coefficients of the transform coefficient block which are located outside the predetermined subarea are equal to zero.</claim-text></claim-text></claim><claim id="CLM-00071" num="00071"><claim-text><b>71</b>. The encoding apparatus of <claim-ref idref="CLM-00070">claim 70</claim-ref>, wherein:<claim-text>the transform underlying the transform coefficient block along with the transform coefficient block defines the transformed representation; and</claim-text><claim-text>the second coefficient scan order defines a scan order for scanning the transform coefficients within the predetermined subarea without scanning any transform coefficient outside the predetermined subarea, and the first coefficient scan order defines a scan order for scanning the transform coefficients in a manner so that there are one or more transform coefficients outside the predetermined subarea that are scanned by the first coefficient scan order between two transform coefficients located inside the predetermined subarea.</claim-text></claim-text></claim><claim id="CLM-00072" num="00072"><claim-text><b>72</b>. The encoding apparatus of <claim-ref idref="CLM-00069">claim 69</claim-ref>, wherein the instructions define a feedback loop configured to subject the transform coefficient block to a reverse transformation which reverses the transform underlying the transform coefficient block so as to obtain the block.</claim-text></claim><claim id="CLM-00073" num="00073"><claim-text><b>73</b>. The encoding apparatus of <claim-ref idref="CLM-00069">claim 69</claim-ref>, wherein the instructions, when executed by the processor, cause the processor to subject the block to the transform underlying the transform coefficient block so as to obtain the transform coefficient block.</claim-text></claim><claim id="CLM-00074" num="00074"><claim-text><b>74</b>. The encoding apparatus of <claim-ref idref="CLM-00069">claim 69</claim-ref>, wherein the instructions define a feedback loop configured to use the block to correct a prediction signal gained by intra-picture or inter-picture prediction.</claim-text></claim><claim id="CLM-00075" num="00075"><claim-text><b>75</b>. The encoding apparatus of <claim-ref idref="CLM-00069">claim 69</claim-ref>, wherein the instructions, when executed by the processor, cause the processor to derive a prediction residual of a prediction signal gained by intra-picture or inter-picture prediction and determine the block to represent the prediction residual.</claim-text></claim><claim id="CLM-00076" num="00076"><claim-text><b>76</b>. A method for decoding a transformed representation of a block from a data stream, comprising:<claim-text>decoding coefficient position information from the data stream, wherein the coefficient position information is indicative of a first coded coefficient position within a transform coefficient block;</claim-text><claim-text>checking whether the first coded coefficient position is located within a predetermined subarea of the transform coefficient block;</claim-text><claim-text>if the first coded coefficient position is located outside the predetermined subarea of the transform coefficient block:<claim-text>reducing a set of available transforms to a first set of one or more available transforms by removing from the set of available transforms a second set of one or more available transforms;</claim-text><claim-text>determining a transform underlying the transform coefficient block out of the first set of one or more available transforms;</claim-text><claim-text>decoding values of transform coefficients of the transform coefficient block that are, along a first coefficient scan order, located from the first coded coefficient position onward to a last scanned position using the determined transform; and</claim-text><claim-text>inferring that the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream from the first coded coefficient position to be zero.</claim-text></claim-text></claim-text></claim><claim id="CLM-00077" num="00077"><claim-text><b>77</b>. A non-transitory processor-readable medium storing a program, which when executed by a computer causes the computer to execute the method of <claim-ref idref="CLM-00076">claim 76</claim-ref>.</claim-text></claim><claim id="CLM-00078" num="00078"><claim-text><b>78</b>. A method for encoding a transformed representation of a block into a data stream, comprising:<claim-text>encoding a coefficient position information into the data stream, wherein the coefficient position information is indicative of a first coded coefficient position within a transform coefficient block,</claim-text><claim-text>check whether the first coded coefficient position is located within a predetermined subarea of the transform coefficient block;</claim-text><claim-text>if the first coded coefficient position is located outside the predetermined subarea of the transform coefficient block:<claim-text>reducing a set of available transforms to a first set of one or more available transforms by removing from the set of available transforms a second set of one or more available transforms;</claim-text><claim-text>determining a transform underlying the transform coefficient block out of the first set of one or more available transforms;</claim-text><claim-text>encoding values of transform coefficients of the transform coefficient block that are, along a first coefficient scan order, located from the first coded coefficient position onward to a last scanned position, wherein the values of the transform coefficients of the transform coefficient block that are, along the first coefficient scan order, located upstream the first coded coefficient position are equal to zero.</claim-text></claim-text></claim-text></claim><claim id="CLM-00079" num="00079"><claim-text><b>79</b>. A non-transitory processor-readable medium storing a program, which when executed by a computer causes the computer to execute the method of <claim-ref idref="CLM-00078">claim 78</claim-ref>.</claim-text></claim><claim id="CLM-00080" num="00080"><claim-text><b>80</b>. A non-transitory processor-readable medium storing a video that has been encoded using a video coding method of <claim-ref idref="CLM-00078">claim 78</claim-ref>.</claim-text></claim></claims></us-patent-application>