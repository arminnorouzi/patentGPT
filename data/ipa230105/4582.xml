<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004583A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004583</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17852910</doc-number><date>20220629</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>28</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>287</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2282</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD OF GRAPH MODELING ELECTRONIC DOCUMENTS WITH AUTHOR VERIFICATION</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63216564</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>Copyright Clearance Center, Inc.</orgname><address><city>Danvers</city><state>MA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Marmanis</last-name><first-name>Haralambos</first-name><address><city>Waltham</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Bramley</last-name><first-name>Robin James</first-name><address><city>Worcestershire</city><country>GB</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Kleiderman</last-name><first-name>Matthew</first-name><address><city>Salem</city><state>MA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for generating a graphical model of a plurality of electronic documents establishes connections between individual electronic documents with common authorship even if the spelling of the name of the author varies amongst the documents, for instance, due to the use of abbreviations, pseudonyms, misspellings, and the like. The graphical model is generated by ingesting data from the electronic documents and constructing a base graphical model using the processed data. Thereafter, as part of a disambiguation step, similar authors amongst the plurality of electronic documents are identified and clustered to yield an author similarity graph, which is preferably refined over time. A degree of belief, or similarity inference, is then calculated for documents determined to have common authorship and, in turn, incorporated into the base graphical model. As a result, an inference of the accuracy of linked information in the graphical model can be established.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="132.25mm" wi="158.75mm" file="US20230004583A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="191.85mm" wi="186.44mm" orientation="landscape" file="US20230004583A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="204.89mm" wi="158.50mm" orientation="landscape" file="US20230004583A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="181.19mm" wi="167.72mm" orientation="landscape" file="US20230004583A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="191.85mm" wi="142.07mm" orientation="landscape" file="US20230004583A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="150.71mm" wi="141.48mm" orientation="landscape" file="US20230004583A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="149.44mm" wi="182.46mm" orientation="landscape" file="US20230004583A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="155.53mm" wi="187.79mm" orientation="landscape" file="US20230004583A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="176.19mm" wi="135.21mm" orientation="landscape" file="US20230004583A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="234.61mm" wi="168.06mm" orientation="landscape" file="US20230004583A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="94.74mm" wi="129.03mm" orientation="landscape" file="US20230004583A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present invention claims the benefit under 35 U.S.C. 119(e) to U.S. Provisional Patent Application No. 63/216,564, which was filed on Jun. 30, 2021, in the names of Haralambos Marmanis et al., the disclosure of which is incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The present invention relates generally to systems for compiling electronic documents and, more particularly, to systems for linking and integrating data amongst a plurality of electronic documents to produce a graph-structured data model, or knowledge graph, of the electronic documents.</p><heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading><p id="p-0004" num="0003">Data is often modeled in order to, among other things, optimize searching, enhance analytics tools, and facilitate the integration of new content. For instance, graph data modeling, or graph modeling, is commonly applied to a collection of electronic documents to allow for the analysis and visualization of connections (i.e., relationships) between the various individual documents (i.e., nodes).</p><p id="p-0005" num="0004">As an example, in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, there is shown an illustrative graphical model of a collection of electronic articles, or documents, A<sub>1</sub>thru A<sub>9</sub>, the graphical model being represented generally by reference numeral <b>111</b>. In graphical model <b>111</b>, articles A<sub>1 </sub>thru A<sub>9</sub>, also shown as articles <b>113</b>-<b>1</b> thru <b>113</b>-<b>9</b>, are depicted in terms of relatedness. Notably, a relatedness weight, or value, W is assigned to each vector in graphical model <b>111</b>. In this capacity, a conditional dependence structure between articles <b>113</b>-<b>1</b> thru <b>113</b>-<b>9</b> can be utilized to, inter alia, understand the relatedness of articles.</p><p id="p-0006" num="0005">A weighted graphical model (e.g., model <b>111</b>) can be used to identify document clusters which, in turn, may represent distinct topics. For instance, in graphical model <b>111</b>, articles <b>113</b>-<b>1</b> thru <b>113</b>-<b>5</b> together form a first document cluster, or sub-graph, <b>121</b>-<b>1</b> and articles <b>113</b>-<b>6</b> thru <b>113</b>-<b>9</b> form a second document cluster, or sub-graph, <b>121</b>-<b>2</b>. Furthermore, semantic metadata relating to, inter alia, the confidence, or certainty, of the accuracy of information contained in the data model <b>111</b>, can in turn be utilized to generate a knowledge graph.</p><p id="p-0007" num="0006">As one useful application of graph modeling electronic documents (e.g., scientific articles), the identification of specific topics from the graphical model can be used to identify key opinion leaders for each topic based on the authorship of such documents. In other words, the author(s) associated with the most relevant articles within a particular cluster may be construed as a key leader with respect to that particular topic or field. The identification of key opinion leaders for a particular topic (e.g., covid-<b>19</b> transmissibility) can be used to establish a collaboration network, wherein key leaders who are identified through the graphical model can serve as collaborators or peer reviewers in subsequent scientific articles on that specific topic.</p><p id="p-0008" num="0007">Despite the usefulness set forth above, the applicant has recognized a notable shortcoming associated with the identification of key opinion leaders through the graph modeling of electronic documents. Notably, the applicant has recognized that certain inconsistencies in the spelling of the name of an author among different electronic documents often occurs due to, inter alia, (i) name misspellings, (ii) the use of abbreviations, and (iii) variances in the conversion of native language characters to Latin-based characters. Furthermore, although certain unique identification numbers/codes are often utilized to verify authorship (e.g., an ORCID identification number issued to academic authors and contributors by ORCID, Inc. of Bethesda, Md.), these types of identification codes are often (i) incorrectly entered or (ii) not assigned to certain individuals.</p><heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0009" num="0008">In view thereof, it is an object of the present invention to provide a novel method for generating a graphical model of a plurality of electronic documents.</p><p id="p-0010" num="0009">It is another object of the present invention to provide a method of the type as described above which establishes connections between individual electronic documents that contain related data.</p><p id="p-0011" num="0010">It is yet another object of the present invention to provide a method of the type as described above which establishes connections between individual electronic documents with related document identifiers, such as authorship.</p><p id="p-0012" num="0011">It is still another object of the present invention to provide a method of the type as described above which identifies potential spelling variances between identifiers associated with the various individual electronic documents.</p><p id="p-0013" num="0012">It is yet still another object of the present invention to provide a method of the type as described above which determines the likelihood of relatedness between document identifiers with variances in spelling.</p><p id="p-0014" num="0013">It is another object of the present invention to provide a method of the type as described above which incorporates connections in the graphical model between the document identifiers when determined to be related, or linked, despite variances in spelling.</p><p id="p-0015" num="0014">It is yet another object of the present invention to provide a method of the type as described above which is inexpensive to implement, can be efficiently processed, and is readily scalable.</p><p id="p-0016" num="0015">Accordingly, as one feature of the present invention, there is provided a computer-implemented method for generating a graphical model of a plurality of electronic documents, each electronic document comprised of data which includes identifying information, the identifying information including authorship, the method comprising the steps of (a) ingesting the data from each of the plurality of electronic documents, (b) constructing a base graphical model using the data from the plurality of electronic documents, (c) disambiguating any relatedness of identifying information between select pairs of the plurality of electronic documents, and (d) calculating a degree of belief of relatedness of identifying information between select pairs of electronic documents, wherein the degree of belief of relatedness of identifying information between select pairs of electronic documents is incorporated into the base graphical model.</p><p id="p-0017" num="0016">Various other features and advantages will appear from the description to follow. In the description, reference is made to the accompanying drawings which form a part thereof, and in which is shown by way of illustration, an embodiment for practicing the invention. The embodiment will be described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized and that structural changes may be made without departing from the scope of the invention. The following detailed description is therefore, not to be taken in a limiting sense, and the scope of the present invention is best defined by the appended claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0018" num="0017">In the drawings, wherein like reference numerals represent like parts:</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an illustrative graphical model of a compilation of electronic documents;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a simplified flow chart depicting a novel method for generating a graphical model of information related to a plurality of electronic documents, the method being implemented according to the teachings of the present invention;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIGS. <b>3</b>(<i>a</i>)-(<i>c</i>)</figref> depict a series of flow charts which are useful in understanding how data is loaded as part of the data ingestion step shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow chart which is useful in understanding how extracted article data is used to construct a base graph as part of the graph construction step shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIGS. <b>5</b>(<i>a</i>)-(<i>c</i>)</figref> depict a series of flow charts which are useful in understanding the linking phase of the disambiguation step shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIGS. <b>6</b>(<i>a</i>)-(<i>c</i>)</figref> depict a series of flow charts which are useful in understanding the clustering phase of the disambiguation step shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart which is useful in understanding the classifier training phase of the disambiguation step shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow chart which depicts an example of a cluster being refined as part of the disambiguation step shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>; and</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow chart which is useful in understanding the inferencing calculation step shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading><heading id="h-0007" level="1">Graph Modeling Method <b>211</b></heading><p id="p-0028" num="0027">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, there is shown a flow chart depicting a novel method for generating a graphical model of information related to a plurality of electronic documents, the method being implemented according to the teachings of the present invention and identified generally by reference numeral <b>211</b>. As will be explained in detail below, method <b>211</b> includes a series of novel steps, preferably automated primarily through the execution of application-specific computer software, which enables a degree of belief (DoB) relating to the accuracy of information in the graphical model to be incorporated into the model.</p><p id="p-0029" num="0028">In the description that follows, method <b>211</b> is illustrated verifying the accuracy of the listed authorship for electronic documents in the graphical model. However, it should be noted that the principles of the present invention are not limited to incorporating information related to the certainty of authorship into a graphical model. Rather, it is to be understood that method <b>211</b> could be utilized to integrate a degree of belief, or confidence, of the veracity of any type of information, or data, included in the graphical model without departing from the spirit of the present invention.</p><p id="p-0030" num="0029">As defined herein, the term &#x201c;document&#x201d; denotes any electronic record, or work. In the description that follows, documents are represented primarily as articles, such as scientific publications. However, it is to be understood that use of the term &#x201c;document&#x201d; herein is not intended to be limited to scientific publications or other similar types of articles. Rather, use of the term &#x201c;document&#x201d; is meant to encompass any/all forms of electronic records (e.g., arbitrary, text-based, information records) derived from any source, including literature, online news stories, and even database records, without departing from the spirit of the present invention.</p><p id="p-0031" num="0030">As seen in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, method <b>211</b> comprises (i) a data ingestion step <b>213</b> in which electronic documents are acquired, processed, and stored in a designated, cloud-based, data pipeline, (ii) a graph construction step <b>215</b> in which a base graph model is generated using, among other things, the plurality of electronic documents compiled in data ingestions step <b>213</b>, (iii) a disambiguation step <b>217</b> in which the authorship of electronic documents in the base graph model is reviewed and selectively matched, and (iv) a belief calculation step <b>219</b> in which the level of confidence in the proper authorship of an electronic document is calculated and incorporated as additional information, or knowledge, into the graph model. The particulars associated with each of steps <b>213</b>, <b>215</b>, <b>217</b>, and <b>219</b> are set forth in greater detail below.</p><heading id="h-0008" level="1">Data Ingestion Step <b>213</b></heading><p id="p-0032" num="0031">As referenced above, data ingestion step <b>213</b> involves acquiring, processing, and storing data from a set of electronic documents into a designated data pipeline. The frequency of data acquisition and ingestion is preferably dependent upon the volume and release dates of the electronic documents in the designated pipeline. As previously noted, the ingested data from the set of electronic documents is then subsequently utilized for data graph modeling.</p><p id="p-0033" num="0032">Preferably, data ingestion step <b>213</b> is implemented entirely through a cloud computing services platform, thereby only requiring compute resources when processing data. For example, an Amazon Web Services (AWS) cloud computing services platform could be utilized to implement step <b>213</b>, thereby allowing for an optimized selection and configuration of web services tools. For instance, data acquisition could be implemented using Python programming scripts on AWS-based Simple Storage Service (S<b>3</b>), processed using AWS-based Elastic MapReduce (EMR), and stored in a column-oriented file structure on the AWS-based Simple Storage Service (S<b>3</b>).</p><p id="p-0034" num="0033">However, it should be noted that the use of a primarily AWS-based cloud computing services platform is provided for illustrative purposes only. Rather, step <b>213</b> could be similarly implemented using alternative cloud computing services platforms, such as the Microsoft Azure cloud computing services platform, without departing from the spirit of the present invention.</p><p id="p-0035" num="0034">Referring now to <figref idref="DRAWINGS">FIGS. <b>3</b>(<i>a</i>)-(<i>c</i>)</figref>, a set of flow charts is shown which is useful in illustrating how data is loaded in data ingestion step <b>213</b>. In the first stage of step <b>213</b>, the nodes for the desired graph-structured data model, or graphical model, are created. Basic identifying, or reference, data associated with each node may represent, but are not limited to, institutions, journals, ontological/taxonomic terms, and where applicable, may contain hierarchical structures.</p><p id="p-0036" num="0035">As seen in <figref idref="DRAWINGS">FIG. <b>3</b>(<i>a</i>)</figref>, an ingestion process <b>221</b> results in the loading of reference data tables <b>223</b> from reference data files <b>225</b> in the form of, inter alia, tabular file formats, structured text files, and XML files. Alternatively, reference data files <b>225</b> may be acquired from APIs, databases, or other sources including, but not restricted to, web mining.</p><p id="p-0037" num="0036">As seen in <figref idref="DRAWINGS">FIG. <b>3</b>(<i>b</i>)</figref>, a reference data file <b>227</b> that contains hierarchical structures, for example taxonomies, requires additional steps in the ingestion process in order to reconstruct the hierarchy within the graphical model. For example, reference data file <b>227</b> is shown comprising Medical Subject Headings (MeSH) descriptors. Accordingly, ingestion process <b>229</b> creates and loads a descriptor node table <b>231</b> from reference data file <b>227</b>. Thereafter, a tree construction process <b>233</b> creates both a treenumber node table <b>235</b> and two edge tables <b>237</b> and <b>239</b> from descriptor node table <b>231</b>. Edge table <b>237</b> reflects the &#x2018;broader than&#x2019;/&#x2018;narrower than&#x2019; hierarchical relationship between terms in treenumber node table <b>235</b>, and edge table <b>239</b> links the descriptor node table <b>231</b> to the treenumber node table <b>235</b> to allow for navigation within the graph.</p><p id="p-0038" num="0037">In the second stage of step <b>213</b>, article data (i.e., the content of each electronic document) is ingested into the data pipeline. As a novel feature of ingestion process <b>213</b>, the present invention is designed to support any updates for article data ingested into the pipeline. For instance, <figref idref="DRAWINGS">FIG. <b>3</b>(<i>c</i>)</figref> depicts an original set of article data files <b>241</b> (e.g., an annual data feed of scientific articles published via the PubMed database) from which XML fragments are extracted through an ingestion process <b>243</b> to create an article data table <b>245</b>. However, the illustrative example shown in <figref idref="DRAWINGS">FIG. <b>3</b>(<i>c</i>)</figref> also includes a daily set of update files <b>247</b> (e.g., to record deletions and/or revisions contained within the scientific articles). XML fragments are similarly extracted from update files <b>247</b> though an ingestion process <b>249</b> to create an updates data table <b>251</b>.</p><p id="p-0039" num="0038">Thereafter, through a consolidation process <b>253</b>, data tables <b>245</b> and <b>251</b> are combined to create an intermediate data table <b>255</b> of article fragments, which represents the partially processed documents. Each record in table <b>255</b> preferably includes specifically extracted document properties, plus front and back matter fragments (e.g., the metadata and references). Where multiple overlapping sources are used for a single entity/node type, then a further consolidation/disambiguation step is required (not illustrated).</p><heading id="h-0009" level="1">Graph Construction Step <b>215</b></heading><p id="p-0040" num="0039">As referenced above, graph construction step <b>215</b> involves the creation of a base graph model using the data tables generated from data ingestions step <b>213</b>, the model allowing for the visualization of relationships (shown as vectors) between various nodes (e.g., authors, article content, and general article reference data). Graph construction step <b>215</b> and disambiguation step <b>217</b> are preferably implemented using any suitable distributed data processing framework, such as Apache Spark. As such, graph data can be exported in a suitable format for a graph database management system such as Neo4j.</p><p id="p-0041" num="0040">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a flow chart is shown which is useful in illustrating how extracted article data is used to construct a base graph. Specifically, an intermediate data table <b>261</b> of article fragments is applied with an automated graph construction process <b>263</b> to construct (i) an article node table <b>265</b>, which associates each electronic document in the data pipeline with a corresponding node in the graphical model, (ii) an author node table <b>267</b>, which lists the author of each electronic document in the data pipeline, and (iii) graph edge tables <b>269</b>, which represent certain relationships between nodes in the graphical model.</p><p id="p-0042" num="0041">It should be noted that graph edge tables <b>269</b> may represent, inter alia, (i) relationships between different node types (e.g., contributions, or linking, between article nodes and author nodes), (ii) relationships between nodes of the same type (e.g., a citation reference, or linking, between multiple article nodes), and (iii) connections to reference data nodes (e.g., linking a scientific article with a particular journal in which it was published).</p><p id="p-0043" num="0042">For optimal performance, edge construction preferably relies on well-known identifying information, or identifiers, whenever available. The use of well-known identifiers eliminates the need to perform a look-up of the target at write time. Depending on the quality of the input data source and/or implementor preferences or constraints, integrity checking may be required at construction time, prior to projection of the data, or delegated to a downstream graph database management system.</p><heading id="h-0010" level="1">Disambiguation Step <b>217</b></heading><p id="p-0044" num="0043">Author name disambiguation step <b>217</b> is a multi-stepped process which is designed to ensure, or verify, that the proper author is associated with each electronic document in the graphical model. As noted previously, the applicant has recognized that certain inconsistencies in the spelling of the name of an author amongst different document resources often results in the incorrect identification of an individual as a document author. As a result, the accuracy of a graph model generated for a collection of electronic documents can be significantly compromised. Accordingly, the process by which disambiguation step <b>217</b> serves to ensure, or certify, proper authorship is associated with a collection of scientific articles forms a critical aspect of the present invention.</p><p id="p-0045" num="0044">Disambiguation step <b>217</b> is a split into the following sequence of phases: (i) a linking phase in which author node records are processed to identify similarities in author names and the analysis of paths occurring within a collaboration graph, (ii) a clustering phase in which a similarity graph is constructed using author nodes and similar person edges produced from the linking phase, and (iii) a refinement phase in which clustering results are examined to resolve author ambiguities created through the use of, inter alia, homonyms and synonyms. Each phase referenced above will be described further in detail below.</p><p id="p-0046" num="0045">Referring now to <figref idref="DRAWINGS">FIGS. <b>5</b>(<i>a</i>)-(<i>c</i>)</figref>, a series of flow charts are shown which are useful in illustrating the linking phase of disambiguation step <b>217</b>. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>(<i>a</i>)</figref>, the data in author node table <b>267</b> created during graph construction step <b>215</b> is processed through a similarity linking process <b>271</b> to yield a similar person edge table <b>273</b>. Process <b>271</b> for identifying and linking similar author nodes can be performed using at least one of following techniques: (i) name matching, in which a firstname, lastname hash algorithm is applied to the data in author node table <b>267</b>, (ii) author identification code matching, in which unique identifiers assigned to authors (e.g., an ORCID identification number) are utilized to unambiguously link author nodes, and (iii) collaboration graph construction, in which a graph analysis is undertaken to identify common patterns of relationships between author nodes (i.e., authors), article nodes (i.e., articles), and reference edges (e.g., contributions, citations, and the like).</p><p id="p-0047" num="0046">The collaboration graph construction technique is represented on the left-hand side of <figref idref="DRAWINGS">FIG. <b>5</b>(<i>b</i>)</figref>. As can be seen, the data from article node table <b>265</b>, author node table <b>267</b>, and edge tables <b>269</b> (the contribution and citation edge tables generated from graph construction step <b>215</b>) is linked through a graph construction process <b>275</b> to yield a representation of the collaboration graph (not shown).</p><p id="p-0048" num="0047">Self-citation is one example of a common pattern of relationships which can be identified through a graphing process. A self-citation occurs when an author cites another document previously written by the same author, which is common in the scientific community. Through self-citation graphing, two authors of articles can be linked by a citation. Through additional filtering and comparison of the author names, preferably using a last name and a first name initial, author synonyms can be discovered and, in turn, used to construct similarity edges between the citing author and the cited author. This is represented generally on the right-hand side of <figref idref="DRAWINGS">FIG. <b>5</b>(<i>b</i>)</figref>, where the collaboration graph produced by process <b>275</b> is analyzed in process <b>277</b> to produce a similar person edge table <b>279</b>.</p><p id="p-0049" num="0048">Fuzzy name matching is another example of a common pattern of relationships which can be improved through the application of a graphing process. Within the collaboration graph, communities, or cliques, within the graph model can be detected. Specifically in this case, linking phase <b>277</b> runs a connected components algorithm, which is an implementation of the alternating, big-star, little-star algorithm. Once the components have been allocated, the giant component is removed from consideration. Frequently, the remaining components have been found to be highly cohesive. Then, candidates (i.e., authors) are considered that are within the same component and share the same last name. If the initials and forename match exactly, the candidate is discarded since it should have already been identified through exact name (hash) matching. If candidates pass a high threshold, a name proximity similarity edge row is constructed in table <b>279</b>. If candidates pass a lower threshold but the affiliation of the author passes a secondary threshold, an author name and affiliation proximity similarity edge row is constructed in table <b>279</b>.</p><p id="p-0050" num="0049">Fields of study matching is another example of a common pattern of relationships which can be identified through a graphing process. With fields of study matching, graphical paths are used to construct &#x201c;fields of study&#x201d; vectors that represent the specific topics on which an article author has been published. These fields of study vectors are then compared for candidate matches to reinforce similarity edges.</p><p id="p-0051" num="0050">Finally, there is a mechanism to support certain known corrections in authorship. Specifically, as shown in <figref idref="DRAWINGS">FIG. <b>5</b>(<i>c</i>)</figref>, a data file of curated links <b>281</b> is constructed using a pair of article identifiers and author names. Processing data file <b>281</b> through a similarity linking process <b>283</b> yields a similar person edge table <b>285</b>.</p><p id="p-0052" num="0051">As referenced briefly above, upon completion of the linking phase of disambiguation step <b>217</b>, a clustering phase is undertaken to construct a similarity graph using author nodes and similar person edges produced from the linking phase. Referring now to <figref idref="DRAWINGS">FIGS. <b>6</b>(<i>a</i>)-(<i>c</i>)</figref>, a series of flow charts are shown which are useful in illustrating the clustering phase of disambiguation step <b>217</b>. As shown in <figref idref="DRAWINGS">FIG. <b>6</b>(<i>a</i>)</figref>, the data from an author node table <b>267</b> created during graph construction step <b>215</b> and the data from a similar person edge table <b>303</b> created during the linking phase (i.e., the union of tables <b>273</b>, <b>279</b>, and <b>285</b>) is processed through a clustering graphical process <b>305</b> to yield a cluster table <b>307</b> in which author clusters are identified.</p><p id="p-0053" num="0052">Preferably, an iterative graph algorithm is executed as part of process <b>305</b> to identify clusters of potentially common authors. Specifically, any graph clustering algorithm (such as a connected components algorithm) can be run to allocate clusters to each author node. The clusters are then processed and the name of the distinct author is selected on the basis of a general criterion of utility such as the longest name amongst all the names in the cluster or the most frequent occurrence of a name if all names are of approximately the same length.</p><p id="p-0054" num="0053">It is important for downstream consumers of the data pipeline that distinct authors maintain stable identifiers (e.g., to allow for the augmentation of data). In other words, as articles within the data pipeline are added and/or removed, clusters in turn can grow (e.g., form new clusters), shrink (e.g., delete existing clusters), or remain the same. Accordingly, the members, or components, within each cluster may migrate between clusters, form a new cluster, or be permanently deleted.</p><p id="p-0055" num="0054">Therefore, the clustering phase is preferably designed with logic to ensure that cluster identifiers remain stable. Referring now to <figref idref="DRAWINGS">FIG. <b>6</b>(<i>b</i>)</figref>, distinct author cluster identifiers in table <b>307</b> are compared against stable identifiers in a data table <b>309</b> from a previous cluster run as part of a cluster identifier resolution process <b>311</b> to yield an updated data table <b>313</b> of distinct author cluster identifiers.</p><p id="p-0056" num="0055">Thereafter, the identified author clusters in table <b>313</b> are processed to produce distinct, or verified, author nodes. Specifically, a distinct author construction process <b>315</b> is applied to the clusters in table <b>313</b> to produce a distinct author node table <b>317</b>. Subsequently, process <b>315</b> produces a disambiguated edge table <b>319</b> that links cluster members (i.e., author nodes defined in table <b>301</b>) with the distinct author nodes defined in table <b>317</b>, thereby facilitating in the reconciliation of authorship in the author nodes. Additionally, process <b>315</b> can be used to produce edge tables <b>321</b> which link the distinct author nodes defined in table <b>317</b> to other entities, such as articles, topics, collaborators, and the like.</p><p id="p-0057" num="0056">As the final phase of disambiguation step <b>217</b>, an optional refinement phase is undertaken in which clustering results are examined to resolve author ambiguities. Notably, due to the use of author homonyms and synonyms, clustering results can suffer from lumping and splitting errors. The identification of such errors can be accomplished using a classifier model trained on a labelled data set, as will be explained further below.</p><p id="p-0058" num="0057">Specifically, as part of the refinement stage, a decision-tree classifier is trained using labelled data and, in turn, is utilized to refine author clusters. In other words, the decision-tree classifier is used to make predictions on whether cluster data (i.e., cluster members) represents the same person. Based on the pair-level predictions which can be interpreted as a distance measure, the cluster members can be re-clustered using a distributed clustering algorithm to produce refined clusters.</p><p id="p-0059" num="0058">Referring now to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a flow chart is shown which is useful in illustrating the optional refinement phase of disambiguation step <b>217</b>. As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, in the training portion of refinement stage, a classifier model is trained using &#x2018;gold standard&#x2019; input data <b>401</b> and features data <b>403</b> which has been extracted from the graphical model that describes an article author.</p><p id="p-0060" num="0059">Input data <b>401</b> is preferably labelled data that was intentionally withheld from the similarity, or cluster, model. Model training is computationally intensive in nature and involves (i) a preparation step <b>405</b>, in which input data <b>401</b> is split into training pair data <b>407</b> and test pair data <b>409</b>, (ii) a training process <b>411</b> in which features data <b>403</b> from the similarity model and training pair data <b>407</b> are used to create a trained classifier model <b>413</b>, and (iii) a testing process <b>415</b> in which data from trained classifier model <b>413</b> and similarity model features table <b>403</b> is utilized to evaluate the clustering, or linking, of the &#x2018;gold standard&#x2019; test pair data <b>409</b>. If the results of evaluation process <b>415</b> exceeds the previous model, the refined similarity, or cluster, model is deployed.</p><p id="p-0061" num="0060">The trained decision-tree classifier <b>413</b> is then utilised to predict pairwise whether members of the cluster refer to the same person. Pair predictions are then processed to split clusters when necessary.</p><p id="p-0062" num="0061">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a sample author cluster <b>421</b> is shown which includes various author name data which has been preliminarily clustered together. As part of the inferencing process, cluster <b>421</b> is applied with a preparation step <b>423</b> to yield a data table of author pairs <b>425</b>. Thereafter, a pair prediction algorithmic process <b>427</b> is applied to author pair data table <b>425</b> using features data table <b>403</b> and trained classifier model <b>413</b> to yield a pair prediction data table <b>429</b> in which an author similarity value is calculated and assigned to each author pair. As a part of an evaluation process <b>431</b>, the results of pair prediction data table <b>429</b> are then utilized to refine the original member clusters. In the present example, original author cluster <b>421</b> is further subdivided into refined author clusters <b>433</b> and <b>435</b>.</p><heading id="h-0011" level="1">Degree of Belief Calculation Step <b>219</b></heading><p id="p-0063" num="0062">As the final step of process <b>211</b>, an inferencing, or degree of belief (DoB) calculation, step <b>219</b> is implemented in order to infer the level of confidence in matched, or linked, authors; though the application of the inferencing is not solely limited to authors and can be determined along multiple dimensions for other node or edge types within the knowledge graph. In turn, any author matching inferences are incorporated as additional information, or knowledge, into the graph model and can thereby ensure proper authorship of electronic document. Using belief calculation step <b>219</b>, probabilities within the graphical model can be fed into inference algorithms to determine the likelihood of other relationships being true.</p><p id="p-0064" num="0063">Referring now to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a flow chart is shown whereby the pair prediction data table <b>429</b> is utilized by a DoB calculation process <b>437</b> to derive a cluster integrity degree of belief score for each cluster <b>439</b>. This is only an example, and for the purposes of the invention other knowledge graph data elements can be fed into specialized processes to compute other measures.</p><p id="p-0065" num="0064">As an alternative example of calculating a degree of belief measure, the confidence in the volume of output created by an author may be calculated using the following formula:</p><p id="p-0066" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(1<i>&#x2212;e</i><sup>&#x2212;&#x3b1;(x&#x2212;&#x3b2;)</sup>)/(1+e<sup>&#x2212;&#x3b1;(x&#x2212;&#x3b2;)</sup>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0067" num="0065">where alpha (&#x3b1;) and beta (&#x3b2;) are controllable parameters. Two sensible values are &#x3b1;=&#x3b2;=2, and x is the logarithm of identified matches (or &#x201c;duplicates&#x201d;) minus some sensible upper limit of publications that an individual can produce within the specified time period. For values of x close to zero that function is approximately 1 whereas for larger values it drops rapidly (exponentially) to zero.</p><p id="p-0068" num="0066">In terms of defining values, after processing metadata, all articles are identified in which a particular author is listed, either identically or according to an accepted set of variations for equivalence (e.g., Ralph Stephen Baric==R. S. Baric==Ralph A. Baric). These articles will span a time period of T years. Assuming an upper limit of articles published per year (PPYL), X is defined as:</p><p id="p-0069" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>X</i>=Log(base 10)[Number of articles&#x2212;PPYL*<i>T]</i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0070" num="0067">PPYL is provided with a value of 50 to start and the results are examined. Because that value is high, only the truly most prolific authors would be able to match. Depending on the outcome, the value can be recalibrated, as needed, as well as the alpha and beta parameters of the DoB calculation equation.</p><p id="p-0071" num="0068">The invention described in detail above is intended to be merely exemplary and those skilled in the art shall be able to make numerous variations and modifications to it without departing from the spirit of the present invention. All such variations and modifications are intended to be within the scope of the present invention as defined in the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method for generating a graphical model of a plurality of electronic documents, each electronic document comprised of data which includes identifying information, the identifying information including authorship, the method comprising the steps of:<claim-text>(a) ingesting the data from each of the plurality of electronic documents;</claim-text><claim-text>(b) constructing a base graphical model using the data from the plurality of electronic documents;</claim-text><claim-text>(c) disambiguating any relatedness of identifying information between select pairs of the plurality of electronic documents; and</claim-text><claim-text>(d) calculating a degree of belief of relatedness of identifying information between select pairs of electronic documents, wherein the degree of belief of relatedness of identifying information between select pairs of electronic documents is incorporated into the base graphical model.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein, as part of the disambiguating step, common authorship between select pairs of the plurality of electronic documents is identified.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref> wherein, as part of the disambiguating step, common authorship between select pairs of electronic documents is identified even with variances in spelling.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method as claimed in <claim-ref idref="CLM-00003">claim 3</claim-ref> wherein, as part of the disambiguating step, pairs of electronic documents identified as having common authorship are linked.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method as claimed in <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein, as part of the calculating step, the degree of belief of common authorship between select pairs of electronic documents is assigned a numerical value of probability.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method as claimed in <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein, as part of the calculating step, the numerical value is calculated through a pair prediction algorithmic process.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref> wherein, as part of the ingesting step, data from the plurality of electronic documents is compiled and processed for data modeling.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method as claimed in <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the ingesting step produces a table of data fragments from each of the plurality of electronic documents.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method as claimed in <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein, as part of the constructing step, the base graphical model is constructed using the table of data fragments from each of the plurality of electronic documents.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method as claimed in <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein, as part of the constructing step, the table of data fragments from each of the plurality of electronic documents is processed to yield a set of tables comprising:<claim-text>(a) a document node table, which associates each electronic document with a corresponding node in the base graphical model;</claim-text><claim-text>(b) an author node table, which lists the authorship of each electronic document; and</claim-text><claim-text>(c) graph edge tables, which lists relationships between nodes in the base graphical model.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method as claimed in <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the disambiguation step comprises:<claim-text>(a) a linking phase in which the author node table is processed to identify similarities in author names and thereby allow for the construction of a collaboration graph, the collaboration graph comprising author nodes, article nodes, contribution edges and citation edges;</claim-text><claim-text>(b) a clustering phase in which a similarity graph is constructed using the author nodes and similar person edges, including those derived from the collaboration graph; and</claim-text><claim-text>(c) a refinement phase in which clustering results are examined to resolve variances in author names.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the similar person edges are created using at least one technique from the group consisting of name matching, author identification code matching, and collaboration graph construction.</claim-text></claim></claims></us-patent-application>