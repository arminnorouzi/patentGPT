<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007337A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007337</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17779494</doc-number><date>20200326</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>201911166906.X</doc-number><date>20191125</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>431</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>488</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>4316</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>4886</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">BULLET COMMENT PROCESSING METHOD AND SYSTEM BASED ON WECHAT MINI-PROGRAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SHANGHAI BILIBILI TECHNOLOGY CO., LTD.</orgname><address><city>Shanghai</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>WU</last-name><first-name>Xiuran</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CN2020/081500</doc-number><date>20200326</date></document-id><us-371c12-date><date>20220524</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present disclosure describes techniques of processing bullet comments. The techniques comprise obtaining a page of playing a video for outputting a video stream; obtaining a plurality of pieces of bullet comment data associated with the video stream; and performing a bullet comment processing operation with a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of pieces of bullet comment data. In the embodiments of the present application, a balanced time interval may be set as the predetermined time interval to regularly perform a bullet comment processing operation, so that smoothness of displaying bullet comments and proper use of computing resources are ensured.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="202.78mm" wi="140.72mm" file="US20230007337A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="220.81mm" wi="142.75mm" file="US20230007337A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="215.31mm" wi="116.33mm" file="US20230007337A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="178.56mm" wi="111.42mm" file="US20230007337A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="243.16mm" wi="146.47mm" file="US20230007337A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="212.68mm" wi="165.86mm" file="US20230007337A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="209.13mm" wi="120.65mm" file="US20230007337A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><p id="p-0002" num="0001">The present application claims the priority of the Chinese Patent Application No. 201911166906.X, filed on Nov. 25, 2019, and entitled &#x201c;WeChat Mini Program based Bullet Comment Processing Method and System, which is incorporated herein by reference in its entirety.</p><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Embodiments of the present application relate to the field of computers, and in particular to a WeChat mini program based bullet comment processing method, a system, a computer device, and a computer-readable storage medium.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0004" num="0003">Bullet comments refer to comments in the form of words, emojis, patterns, etc. presented simultaneously when a video is played. At present, bullet comments have become an important element for many viewers to watch videos and live streams. Bullet comments enable users to express their feelings upon watching programs, and read comments on the programs from other users as well, thus implementing interaction when the users watch videos.</p><p id="p-0005" num="0004">There are some differences between a framework of a WeChat mini program and a conventional browser. The inventor has found that the differences may cause the following problems: with bullet comment rendering on a WeChat mini program-based video playback page, displaying of bullet comments is prone to be not smooth or excessive computing resources are used.</p><heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0006" num="0005">In view of this, an objective of embodiments of the present application is to provide a WeChat mini program based bullet comment processing method, a system, a computer device, and a computer-readable storage medium, to solve the technical problem that is prone to occur in bullet comment rendering on a WeChat mini program-based video playback page, which is displaying of bullet comments is not smooth or excessive computing resources are used.</p><p id="p-0007" num="0006">An aspect of the embodiments of the present application provides a WeChat mini program based bullet comment processing method, the method including: obtaining a video playback page for outputting a video stream; obtaining a plurality of bullet comment data associated with the video stream; and performing a bullet comment processing operation at a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of bullet comment data.</p><p id="p-0008" num="0007">Optionally, performing a bullet comment processing operation at a predetermined time interval includes: using a target function obtained by simulating a requestAnimationFrame to call a rendering function frame by frame to execute the code of the bullet comment processing operation.</p><p id="p-0009" num="0008">Optionally, the target function includes a timing function and a callback function, wherein a time parameter in the timing function is determined according to a screen refresh rate, the target function is recursively called, and the callback function is used to call the rendering function to perform the bullet comment processing operation.</p><p id="p-0010" num="0009">Optionally, performing a bullet comment processing operation at a predetermined time interval includes: polling, at the predetermined time interval, whether the bullet comment processing operation can be performed; and if the logical layer is in a busy state, determining that the bullet comment processing operation cannot be performed; if the logical layer is in an idle state, determining that the bullet comment processing operation can be performed.</p><p id="p-0011" num="0010">Optionally, the bullet comment processing operation includes: traversing the plurality of bullet comment data, to query whether the plurality of bullet comment data include a bullet comment data in a to-be-posted state; if the plurality of bullet comment data include the bullet comment data in the to-be-posted state, then: adding the bullet comment data in the to-be-posted state to a queue of to-be-posted bullet comments, and notifying the view layer to perform a data update operation, to perform a first rendering operation according to the bullet comment data in the to-be-posted state; obtaining a bullet comment width of a bullet comment element resulting from the first rendering operation; determining, according to the bullet comment width of the bullet comment element, whether a bullet comment track in an idle state is included in a plurality of bullet comment tracks; and if a bullet comment track in the idle state is included in the plurality of bullet comment tracks, performing data binding on the bullet comment element, to notify the view layer to perform a data update operation to perform a second rendering operation; where the bullet comment element resulting from the second rendering operation is used for bullet comment display.</p><p id="p-0012" num="0011">Optionally, determining, according to the bullet comment width of the bullet comment element, whether a bullet comment track in an idle state is included in a plurality of bullet comment tracks includes: determining whether a k<sup>th </sup>bullet comment track is empty, wherein k is a positive integer starting from <b>1</b>; if the k<sup>th </sup>bullet comment track is empty, determining that the k<sup>th </sup>bullet comment track is in the idle state; if the k<sup>th </sup>bullet comment track is not empty, calculating a bullet comment speed of the bullet comment element according to the bullet comment width of the bullet comment element; determining, according to the bullet comment speed of the bullet comment element, whether bullet comment content of the bullet comment element would collide with the other bullet comment content in the k<sup>th </sup>bullet comment track; and if the bullet comment content of the bullet comment element would not collide with the other bullet comment content in the k<sup>th </sup>bullet comment track, determining that the k<sup>th </sup>bullet comment track is in the idle state; and if the bullet comment content of the bullet comment element would collide with the other bullet comment content in the k<sup>th </sup>bullet comment track, determining that the k<sup>th </sup>bullet comment track is in a congested state.</p><p id="p-0013" num="0012">Optionally, the logical layer includes a bullet comment timeline, and the bullet comment processing operation further includes: performing an update operation on a timeline of the bullet comment timeline.</p><p id="p-0014" num="0013">An aspect of the embodiments of the present application further provides a WeChat mini program based bullet comment processing system, the system including: a first obtaining module to obtain a video playback page for outputting a video stream; a second obtaining module to obtain a plurality of bullet comment data associated with the video stream; and a bullet comment processing module to perform a bullet comment processing operation at a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of bullet comment data.</p><p id="p-0015" num="0014">An aspect of the embodiments of the present application further provides a computer device, the computer device including a memory, a processor, and computer-readable instructions stored on the memory and executable by the processor, upon exexuting the computer-readable instructions, the processor is used to implement the following steps: obtaining a video playback page for outputting a video stream; obtaining a plurality of bullet comment data associated with the video stream; and performing a bullet comment processing operation at a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of bullet comment data.</p><p id="p-0016" num="0015">An aspect of the embodiments of the present application further provides a computer-readable storage medium having computer-readable instructions stored therein, where the computer-readable instructions is executable by at least one processor to cause the at least one processor to perform the following steps: obtaining a video playback page for outputting a video stream; obtaining a plurality of bullet comment data associated with the video stream; and performing a bullet comment processing operation at a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of bullet comment data.</p><p id="p-0017" num="0016">According to a WeChat mini program based bullet comment processing method, a system, the device, and the computer-readable storage medium provided in the embodiments of the present application, a balanced time interval may be set as the predetermined time interval, to regularly perform a bullet comment processing operation, so that smoothness of the bullet comments and a proper use of computing resources are ensured, thereby avoiding various problems caused by a bullet comment processing operation in an irregular state, for example, displaying of bullet comments is not smooth or excessive computing resources are used.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically shows an application environment diagram of a WeChat mini program based bullet comment processing method according to an embodiment of the present application;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically shows a flowchart of a WeChat mini program based bullet comment processing method according to Embodiment 1 of the present application;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically shows another flowchart of a WeChat mini program based bullet comment processing method according to Embodiment 1 of the present application;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>4</b></figref> schematically shows sub-steps of step S<b>204</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically shows sub-steps of step S<b>406</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>6</b></figref> schematically shows another additional step in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>7</b></figref> schematically shows another flowchart of a WeChat mini program based bullet comment processing method according to Embodiment 1 of the present application;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>8</b></figref> schematically shows a block diagram of a communication system according to Embodiment 2 of the present application; and</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>9</b></figref> schematically shows a hardware architecture schematic diagram of a computer device suitable for implementing a WeChat mini program based bullet comment processing method according to Embodiment 3 of the present application.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0027" num="0026">In order to make the objectives, technical solutions, and advantages of the present application clearer, the present application will be described in further detail below in conjunction with the accompanying drawings and embodiments. It should be understood that the specific embodiments described here are merely intended to explain the present application, but are not intended to limit the present application. All other embodiments obtained by those of ordinary skill in the art based on the embodiments of the present application without creative efforts shall fall within the scope of protection of the present application.</p><p id="p-0028" num="0027">The inventor has found that the framework of a WeChat mini program is different from the framework of a usual browser. For example, an API similar to a requestAnimationFrame (animation frame rendering) API in a browser is not provided in the framework of the WeChat mini program. The requestAnimationFrame uses a refreshing mechanism of the screen, in which provided is a fixed screen refresh rate (60 Hz or 75 Hz), such that for example, repaint can be performed at most only 60 times or 75 times per second. The requestAnimationFrame mechanism perform page repaint synchronously with the refresh rate, that is, page repaint is performed about every 16.7 milliseconds. Since the foregoing requestAnimationFrame API does not exist in the framework of the WeChat mini program, various problems, such as unsmooth displaying of bullet comments or excessive usage of computing resources, are prone to occur in rendering. The embodiments are intended to solve these problems, and are disclosed specifically as follows.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically shows an environment application schematic diagram of the WeChat mini program based bullet comment processing method according to an embodiment of the present application.</p><p id="p-0030" num="0029">A provider network <b>2</b> may be connected to a plurality of computer devices <b>10</b> through a network <b>9</b>. In some embodiments, a content service <b>3</b> is provided by the provider network <b>2</b>. In other embodiments, the content service <b>3</b> may be provided by an independent content provider connected with the provider network <b>2</b>.</p><p id="p-0031" num="0030">The content service <b>3</b> may include a content streaming service such as an Internet protocol video streaming service. The content streaming service may be configured to distribute content by various transmission technologies. The content service <b>3</b> may be configured to provide content such as videos, audio, text data, and a combination thereof. The content may include content streams (for example, video streams, audio streams, and information streams), content files (for example, video files, audio files, and text files), and/or other data.</p><p id="p-0032" num="0031">The provider network <b>2</b> may implement a bullet comment service. The bullet comment service is configured to allow a user to make comments and/or share comments associated with content. Bullet comment content may be presented on the same screen together with the content. For example, the bullet comment content may be displayed in an overlay image above the content. The bullet comment content may be displayed with an animation effect. For example, the bullet comment content may be displayed as the content scrolling (for example, from right to left, from left to right, from top to bottom, and from bottom to top), and this animation effect may be achieved based on transition attributes of cascading style sheets 3 (CSS3).</p><p id="p-0033" num="0032">The provider network <b>2</b> may be located in a data center, for example, a single site, or distributed at different geographical locations (for example, on a plurality of sites). The provider network <b>2</b> may provide services via one or more networks <b>9</b>. The network <b>9</b> includes various network devices, for example, routers, switches, multiplexers, hubs, modems, network bridges, repeaters, firewalls, proxy devices, and/or the like. The network <b>9</b> may include physical links, for example, coaxial cable links, twisted pair cable links, optical fiber links, and a combination thereof. The network <b>9</b> may include wireless links, for example, cellular links, satellite links, and Wi-Fi links.</p><p id="p-0034" num="0033">The provider network <b>2</b> may include a message service <b>5</b>. The message service <b>5</b> may be configured to receive a plurality of messages. The plurality of messages may include a plurality of bullet comment content associated with the content and information related to the plurality of bullet comment content.</p><p id="p-0035" num="0034">The message service <b>5</b> may be configured to manage messages used for various content items. The user may browse the content and access different content items to view comments on specific content, for example, comments posted by other users on the specific content. A comment, associated with a specific content item, from a user, may be output to other users viewing the specific content item. For example, all users accessing a content item (for example, a video editing) may view comments associated with the content item. The input bullet comment content may be output in real time or almost in real time.</p><p id="p-0036" num="0035">The message service <b>5</b> may be configured to process the plurality of messages. The message service <b>5</b> may queue the plurality of messages or prioritize them in other manners based on information (for example, timestamps and incremental identifiers) associated with the corresponding bullet comment content. The message service <b>5</b> may be configured to process the plurality of messages using load balancing. For example, the message service <b>5</b> may be configured to use one or more of a plurality of processing nodes to process the plurality of messages, prioritize the messages, and perform load balancing on the messages. The message service <b>5</b> may at least temporarily store the plurality of messages. The message service <b>5</b> may store the plurality of messages in a data store such as a database.</p><p id="p-0037" num="0036">The message service <b>5</b> may be configured to process the messages by performing a grouping process. The grouping process may include grouping of the plurality of messages based on features. If two messages have same features or fall within a threshold range of the features, the two messages may be grouped together. Messages associated with a specific content item (for example, a stream, a file, a program, a movie, a song, and a game session) may be associated with a same group. For example, a message may include or be associated with a content identifier. The content identifier may uniquely identify a content item. If the content identifier is found in a message or is associated with a message (for example, is sent separately), the message service <b>5</b> may associate the message with a group associated with the content item.</p><p id="p-0038" num="0037">The message service <b>5</b> may perform natural language processing, topic identification, pattern identification, artificial intelligence, etc. to automatically determine a feature of a message and/or group the message. As an example, a phrase or a pattern which frequently appears may be identified as a topic. As another example, a database of a topic associated with content may be maintained. The topic may include a genre (for example, an action, a drama, and a comedy), a personality (for example, an actor, an actress, and a director), a language, etc. Messages may be grouped based on a feature of the client device and/or the user sending the messages. Demography, interest, history, and/or the like may be stored for a plurality of users to determine potential groups of messages.</p><p id="p-0039" num="0038">The message service <b>5</b> may be further configured to process the messages by generating output data. The output data may include an instruction for outputting a comment based on corresponding context. The output data may include application data for indicating the application to overlay comment based on the context. The output data may include an instruction for generating (for example, encoding) content corresponding to the comment.</p><p id="p-0040" num="0039">The output data may be used to generate (for example, encode) output bullet comment content, for example, output content streams. The output comment content may be combined (for example, multiplexed) with an original content item, for example, content provided by the content service <b>3</b>. The obtained combination may include content in a single package (for example, a container, a transport container, and a transport stream). The package may include the original content item and the output bullet comment content (for example, displayed on the top of the original content item).</p><p id="p-0041" num="0040">The message service <b>5</b> may be further configured to process the messages by performing a filtering process. The filtering process may include rejecting or marking messages matching a filtering criterion. The filtering criterion may specify a term and/or a phrase, for example, profanity, a hate comment, and an indecent comment. The filtering criterion may specify a character, for example, a symbol or a font. The filtering criterion may specify a language, a computer-readable code mode, and etc.</p><p id="p-0042" num="0041">The provider network <b>2</b> may further include a processing service <b>6</b>. The processing service <b>6</b> may be configured to provide processing for various services, for example, a service of the provider network <b>2</b>. The processing service <b>6</b> may include a plurality of network nodes <b>8</b>. The plurality of network nodes <b>8</b> may process tasks associated with the message service <b>5</b>. The plurality of network nodes <b>8</b> may be implemented as one or more computing devices, one or more processors, one or more virtual computing instances, a combination thereof, and/or the like.</p><p id="p-0043" num="0042">The plurality of network nodes <b>8</b> may be implemented by one or more computing devices. The one or more computing devices may include a virtualized computing instance. The virtualized computing instance may include a virtual machine, for example, a simulation of a computer system, an operating system, or a server. The computing device may be used for other data of specific software (for example, an operating system, a dedicated application, or a server) for simulation based on a virtual image and/or definition, and the virtual machine is loaded by the computing device. As requirements on different types of processing services change, different virtual machines may be loaded and/or terminated on the one or more computing devices. A hypervisor may be implemented to manage use of different virtual machines on the same computing device.</p><p id="p-0044" num="0043">In some embodiments, the plurality of network nodes <b>8</b> may process events submitted by a plurality of computer devices. These events may be associated with discussions on real-time news, videos, social hotspots, reports on some user accounts, etc. In other embodiments, the plurality of network nodes <b>8</b> may process performance evaluation of a plurality of user accounts for reviewing events in a network community. In some implementations, these services may be implemented as dedicated computing devices, dedicated processors, dedicated virtual machine instances, and/or the like. In other implementations, various nodes may implement any function associated with these services.</p><p id="p-0045" num="0044">The plurality of computer devices <b>10</b> may be configured to access content and a service of the provider network <b>2</b>. The plurality of computer devices <b>10</b> may include any type of electronic devices, for example, mobile devices, tablet devices, laptop computers, workstations, virtual reality devices, game devices, set-top boxes, digital streaming media devices, vehicle terminals, smart televisions, set-top boxes, and e-book readers, etc.</p><p id="p-0046" num="0045">The plurality of computer devices <b>10</b> may be associated with one or more users. A single user may access the provider network <b>2</b> using one or more of the plurality of computer devices <b>10</b>. The plurality of computer devices <b>10</b> may travel to various positions and use different networks to access the provider network <b>2</b>.</p><p id="p-0047" num="0046">The computer device <b>10</b> may include an application <b>12</b>. The application <b>12</b> outputs (for example, displays, renders, or presents) content to a user. The application <b>12</b> may be a video client (for example, a Bilibili client), a browser client, a WeChat-based WeChat mini program, etc. The content may include a video, audio, bullet comment content, and/or the like. The bullet comment content may be words, emojis, patterns, etc., and may have different colors, sizes, animations, scrolling directions, etc.</p><p id="p-0048" num="0047">As an example, the application <b>12</b> may send reports on some users to the processing service, and the application <b>12</b> may also send remarks on the reports to the processing service <b>6</b>. Events or remarks sent from the plurality of computer devices <b>10</b> include reasons for submitting the events, content attributes associated with the events, user account information, etc.</p><heading id="h-0006" level="1">Embodiment 1</heading><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically shows a flowchart of a WeChat mini program based bullet comment processing method according to Embodiment 1 of the present application. It can be understood that this method embodiment may be executed in a computer device <b>10</b>, and the flowchart of this method embodiment is not used to limit an order of executing steps.</p><p id="p-0050" num="0049">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the WeChat mini program based bullet comment processing method may include steps S<b>200</b> to S<b>204</b>, where:</p><p id="p-0051" num="0050">In step S<b>200</b>, a page of playing a video is obtained to output a video stream.</p><p id="p-0052" num="0051">The video playback page is a WeChat mini program framework based page.</p><p id="p-0053" num="0052">The video playback page includes a logical layer and a view layer, where the logical layer includes a bullet comment loader, a bullet comment calculator, and a bullet comment timeline. The bullet comment loader is responsible for operations such as requesting, compiling, and parsing bullet comment data, the bullet comment calculator for operations such as traversal search of bullet comment data, and the bullet comment timeline for updating a timeline.</p><p id="p-0054" num="0053">In step S<b>202</b>, a plurality of bullet comment data associated with the video stream are obtained.</p><p id="p-0055" num="0054">In an exemplary embodiment, the plurality of bullet comment data may be original bullet comment data.</p><p id="p-0056" num="0055">In some other embodiments, the plurality of bullet comment data may alternatively be bullet comment data obtained by cloning a plurality of original bullet comment data. Specifically, the computer device <b>10</b> initiates a bullet comment obtaining request to the provider network <b>2</b> by the bullet comment loader, and receives the plurality of original bullet comment data returned by the provider network <b>2</b>. Then, the plurality of original bullet comment data are cloned. The plurality of original bullet comment data are not used for bullet comment display, and the plurality of bullet comment data are used for bullet comment display.</p><p id="p-0057" num="0056">The plurality of original bullet comment data and the plurality of bullet comment data are information consistent, and are stored in an array format.</p><p id="p-0058" num="0057">For example, each bullet comment data may include the following information:</p><p id="p-0059" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="189pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>{</entry></row><row><entry/><entry>stime, // Time of posting in a video in units of second</entry></row><row><entry/><entry>&#x2003;mode,// Mode of a bullet comment</entry></row><row><entry/><entry>&#x2003;size,// Size of bullet comment text</entry></row><row><entry/><entry>&#x2003;color, // Color of bullet comment text</entry></row><row><entry/><entry>&#x2003;date, // Creation date of a bullet comment</entry></row><row><entry/><entry>&#x2003;class, // Class name of a bullet comment</entry></row><row><entry/><entry>uid, // id of a user that creates a bullet comment</entry></row><row><entry/><entry>dmid, // Bullet comment id</entry></row><row><entry/><entry>&#x2003;text, // Text content of a bullet comment</entry></row><row><entry/><entry>&#x2003;duration, // Duration of a bullet comment</entry></row><row><entry/><entry>&#x2003;border, // Whether a bullet comment has a border</entry></row><row><entry/><entry>borderColor, // Color of a bullet comment border</entry></row><row><entry/><entry>&#x2003;style, // Interline style of bullet comments</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0060" num="0058">Because the video playback page is a WeChat mini program framework based page, which includes a logical layer and a view layer, and in which communication between the logical layer and the view layer is asynchronous. The asynchronous communication is prone to cause bugs when the plurality of bullet comments are processed. To solve the problem, in this embodiment, a single-thread block mechanism is simulated. A specific step for implementation is as follows:</p><p id="p-0061" num="0059">In step S<b>204</b>, a bullet comment processing operation is performed with a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of bullet comment data.</p><p id="p-0062" num="0060">It can be understood that a balanced time interval may be set as the predetermined time interval on the basis of hardware resources (for example, CPU performance and a screen refresh rate) of the computer device <b>10</b>, to regularly perform a bullet comment processing operation, so that smoothness of displaying bullet comments and proper use of computing resources are ensured, thereby avoiding various problems caused by a bullet comment processing operation being performed in an irregular state, for example, displaying of bullet comments is not smooth or excessive computing resources are used.</p><p id="p-0063" num="0061">It should be understood that, to ensure bullet comment displaying with no frame freezing, a code needs to be executed a maximum number of times with no performance wastes or frame drops. If the number of times of executing the code is not large enough, frame drops may occur; but if the number of times of executing the code is too large, problems such as excessively high CPU occupation or performance wastes may occur. In the embodiments, a bullet comment processing operation is optimized through simulation of requestAnimationFrame. The specific steps are as follows:</p><p id="p-0064" num="0062">As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, performing a bullet comment processing operation at a predetermined time interval may include step S<b>204</b>&#x2032; of using a target function obtained by simulating a requestAnimationFrame API to call a rendering function frame by frame to execute codes for the bullet comment processing operation.</p><p id="p-0065" num="0063">The target function includes a timing function and a callback function, where a time parameter in the timing function is determined according to a screen refresh rate, the target function is recursively called, and the callback function is used to call the rendering function to perform bullet comment processing operations.</p><p id="p-0066" num="0064">As a specific example: a custom target function may be encapsulated, which target function receives a callback function, and records system time every 16.7 milliseconds using a setTimeout API. The callback function is allowed only when the last time for calling is longer than 16.7 milliseconds. Then, the encapsulated function is recursively called, and the rendering function is passed in as a callback, thereby achieving an effect of simulated requestAnimationFrame. The following effects are achieved in a frame-by-frame and recursive-calling principle: a code is executable a maximum number of times without performance wastes or frame drops. That is, within the same time, the code is executed as many times as possible without affecting performance, to ensure a good user experience.</p><p id="p-0067" num="0065">It should be noted that the findings are obtained by the inventor through deep research, and cannot be easily obtained by those skilled in the art. Although requestAnimationFrame simulation is used in the embodiments, there are great differences between performing a bullet comment processing operation by using a target function and performing a rendering operation by using the requestAnimationFrame. For example, usages of the target function and requestAnimationFrame are completely different. Analysis thereof is as follows:</p><p id="p-0068" num="0066">The requestAnimationFrame is used in conventional browsers, and the principle thereof lies in synchronization with a screen refresh rate, where repaint is performed on a canvas about every 16.7 seconds.</p><p id="p-0069" num="0067">The target function is used for a bullet comment processing operation at a logical layer in a WeChat mini program page.</p><p id="p-0070" num="0068">The following describes the bullet comment processing operations in detail.</p><p id="p-0071" num="0069">In an exemplary embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the bullet comment processing operation may include the following operations: in step S<b>400</b>, the plurality of bullet comment data are traversed, to determine whether the plurality of bullet comment data include a bullet comment data in a to-be-posted state; in step S<b>402</b>, if the plurality of bullet comment data include the bullet comment data in the to-be-posted state, the bullet comment data in the to-be-posted state is added to a queue of to-be-posted bullet comments, and the view layer is notified to perform a data update operation, to perform a first rendering operation according to the bullet comment data in the to-be-posted state. The first rendering operation includes inserting real bullet comment elements outside a view area, which are invisible to a user and without added motion effects. Such an operation aims at facilitating subsequent obtaining of the real bullet comment width of the bullet comment element so as for calculating an initial position of the movement and an end position of the movement of a bullet comment, and for determining, based at least thereon, whether there is a bullet comment track in an idle state in a plurality of bullet comment tracks. In step S<b>404</b>, a bullet comment width of a bullet comment element resulting from the first rendering operation is obtained. In step S<b>406</b>, whether a bullet comment track in an idle state is included in a plurality of bullet comment tracks is determined according to the bullet comment width of the bullet comment element, the plurality of bullet comment tracks configured to display bullet comment elements in an area of the page of playing the video. In step S<b>408</b>, if a bullet comment track in the idle state is included in the plurality of bullet comment tracks, the view layer is notified to perform a data update operation, to perform a second rendering operation. A bullet comment element resulting from the second rendering operation is configured to be displayed on the page of playing the video. The second rendering operation includes data binding on the bullet comment speed, the bullet comment width, the bullet comment content, the motion effect, and the like of the bullet comment element, and notifying the view layer to further render a corresponding bullet comment element according to the bound data. If the plurality of bullet comment tracks do not include a bullet comment track in the idle state, which means that there are too many bullet comments at present, the bullet comment data in the to-be-posted state is discarded from the queue of to-be-posted bullet comments.</p><p id="p-0072" num="0070">It can be understood that there may be a plurality of manners of determining whether a bullet comment track in the idle state is included in the plurality of bullet comment tracks. For example, as shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, whether each bullet comment track is in the idle state may be determined through steps as follows: In step S<b>500</b>, whether a k<sup>th </sup>bullet comment track is empty is determined. If the k<sup>th </sup>bullet comment track is empty, the process proceeds to step S<b>502</b>, otherwise, the process proceeds to step S<b>504</b>. In step S<b>502</b>, it is determined that the k<sup>th </sup>bullet comment track is in the idle state. In step S<b>504</b>, a bullet comment speed of the bullet comment element moving on the page of playing the video is calculated according to the bullet comment width of the bullet comment element. In step S<b>506</b>, whether bullet comment content of the bullet comment element would collide with other bullet comment content displayed in the k<sup>th </sup>bullet comment track is determined according to the bullet comment speed and bullet comment posting time of the bullet comment element. If the bullet comment content of the bullet comment elements would collide with other bullet comment content in the k<sup>th </sup>bullet comment track, the process proceeds to step S<b>502</b>, otherwise, the process proceeds to step S<b>508</b>. In step S<b>508</b>, it is determined that the k<sup>th </sup>bullet comment track is in a congested state.</p><p id="p-0073" num="0071">In an exemplary embodiment, the bullet comment processing operation may include the following operations: performing an update operation on a timeline of the bullet comment timeline, to ensure synchronization of the bullet comment timeline and current playing time of a video stream.</p><p id="p-0074" num="0072">Certainly, the bullet comment processing operation may include some other operations, for example: traversing the plurality of bullet comment data, to query whether the plurality of bullet comment data include a bullet comment data in a to-be-expired state, and if the bullet comment data in the to-be-expired state is included, deleting the bullet comment data in the to-be-expired state, to reduce the number of subsequent traversals.</p><p id="p-0075" num="0073">In an exemplary embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, step S<b>204</b> may further include steps S<b>600</b> to S<b>604</b>: In step S<b>600</b>, whether the bullet comment processing operation can be performed is polled at the predetermined time interval; In step S<b>602</b>, if the logical layer is in a busy state, it is determined that the bullet comment processing operation cannot be performed; In step S<b>604</b>, if the logical layer is in an idle state, it is determined that the bullet comment processing operation can be performed.</p><p id="p-0076" num="0074">Because communication between a logical layer and a view layer (used to perform a rendering operation) of a WeChat mini program is asynchronous, operations such as the rendering operation, a bullet comment element information obtaining operation, and the like are all asynchronous operations. In a process of performing these asynchronous operations, if another operation is added, unpredictable bugs are prone to be caused. Therefore, when a bullet comment processing operation is performed, the busy state is identified. For example, in an i<sup>th </sup>polling, when an identifier indicating the busy state is detected, a new round of bullet comment processing operations are not started, but an (i+1)<sup>th </sup>polling is performed after waiting 16.7 milliseconds for instance, until an identifier indicating the idle state is detected, and a new round of bullet comment processing operations are started. By using an identifier to allow or block a subsequent operation, it is ensured that each bullet comment processing operation is performed after a previous bullet comment processing operation has been completed, and that the former bullet comment processing operation is not affected by the latter bullet comment processing operation, thereby avoiding unpredictable bugs.</p><p id="p-0077" num="0075">As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the following provides a specific example for better understanding. It should be noted that this example is not used to limit the protection scope of the patent.</p><p id="p-0078" num="0076">In step S<b>700</b>, an initialization operation is performed on a WeChat mini program page.</p><p id="p-0079" num="0077">In step S<b>702</b>, a request for bullet comment data is initiated.</p><p id="p-0080" num="0078">After the initialization of the WeChat mini program page, a bullet comment loader initiates the request for the bullet comment data to a provider network <b>2</b>, and receives an extensible markup language (XML) file returned by the provider network <b>2</b>.</p><p id="p-0081" num="0079">The bullet comment loader is located at a logical layer of the WeChat mini program page. The logical layer also includes a bullet comment calculator and a bullet comment timeline.</p><p id="p-0082" num="0080">In step S<b>704</b>, the XML file is compiled to obtain a plurality of bullet comment data.</p><p id="p-0083" num="0081">Specifically, the XML file is compiled into an Element object, a plurality of bullet comment data, for example, attributes (bullet comment data) such as bullet comment content, posting time, a bullet comment color, and moving time are obtained from the Element object, and these attributes are converted into a j son data format and stored in a local array, to obtain a plurality of bullet comment data stored in the local array.</p><p id="p-0084" num="0082">The plurality of bullet comment data may be used for bullet comment display; or may be used as original data, and not used for bullet comment display, where for example, the plurality of bullet comment data may be cloned, and a plurality of bullet comment data resulting from cloning are used for bullet comment display.</p><p id="p-0085" num="0083">In this example, the plurality of bullet comment data are used for bullet comment display.</p><p id="p-0086" num="0084">In step S<b>706</b>, a bullet comment starts to be displayed:</p><p id="p-0087" num="0085">using a target function obtained by simulating a requestAnimationFrame to call a rendering function frame by frame to execute codes for the bullet comment processing operation, where each round of executing the code may be divided into steps S<b>708</b> to S<b>720</b> as follows.</p><p id="p-0088" num="0086">In step S<b>708</b>, each bullet comment data is traversed by the bullet comment calculator to perform calculation and filtering on whether each bullet comment data is in a to-be-posted state or in an expired state.</p><p id="p-0089" num="0087">The following takes one piece of bullet comment data j therein as an example:</p><p id="p-0090" num="0088">In step S<b>710</b>, it is determined whether a posting time for the bullet comment data j has arrived. If the posting time for the bullet comment data j has arrived, the process proceeds to step S<b>712</b>, otherwise, the process proceeds to step S<b>714</b>.</p><p id="p-0091" num="0089">According to current playing time of a video stream and the posting time in the bullet comment data j, whether bullet comment content in the posting time for the bullet comment data j has arrived is determined, that is, whether the bullet comment data j is in the to-be-posted state at present is determined.</p><p id="p-0092" num="0090">In step S<b>712</b>, the bullet comment data j is added to the queue of to-be-posted bullet comments, and the view layer is notified to perform a data update operation to perform a first rendering operation. The process proceeds to step S<b>718</b>.</p><p id="p-0093" num="0091">The view layer is notified to perform the data update operation to perform the first rendering operation according to the bullet comment data in the to-be-posted state.</p><p id="p-0094" num="0092">For example, real bullet comment elements are inserted outside a view area, which are invisible to a user and without added motion effects. Such an operation aims at obtaining the real bullet comment width of the bullet comment element for calculating an initial position of the movement and an end position of the movement of a bullet comment, and for determining, based at least thereon, whether there is a bullet comment track in an idle state in a plurality of bullet comment tracks.</p><p id="p-0095" num="0093">The bullet comment data j added to the queue of to-be-posted bullet comments may be deleted from the plurality of bullet comment data to reduce the number of subsequent traversals.</p><p id="p-0096" num="0094">In step S<b>714</b>, whether the bullet comment data j is in the expired state is determined. If the bullet comment data j is in the expired state, the process proceeds to step S<b>716</b>, otherwise, the bullet comment data j waits for a next traversal operation.</p><p id="p-0097" num="0095">In step S<b>716</b>, the bullet comment data j is destroyed. For example, the bullet comment data j is deleted from the plurality of bullet comment data to reduce the number of subsequent traversals.</p><p id="p-0098" num="0096">In step S<b>718</b>, whether there is an idle bullet comment track at present is determined. If there is an idle bullet comment track, the process proceeds to step S<b>720</b>, otherwise, the process proceeds to step S<b>716</b>.</p><p id="p-0099" num="0097">Exemplarily, a bullet comment width of a bullet comment element resulting from the first rendering operation is obtained. Whether the plurality of bullet comment tracks include a bullet comment track in the idle state is determined according to the bullet comment width of the bullet comment element.</p><p id="p-0100" num="0098">Assuming that posting time and moving time of the last bullet comment content in the k<sup>th </sup>bullet comment track are t<sub>1 </sub>and t<sub>2 </sub>respectively, and then the time for the last bullet comment content completely disappearing from the bullet comment displaying area (the view area) is t<sub>1</sub>+t<sub>2</sub>, and that the posting time, the moving time, and the bullet comment width of the bullet comment data j and the displaying width of the bullet comment displaying area are t<sub>3</sub>, t<sub>4</sub>, w<sub>2</sub>, and w<sub>1</sub>, respectively, a moving speed of the bullet comment data j may be s<sub>1</sub>=(w<sub>1</sub>+w<sub>2</sub>)/t<sub>4</sub>. Therefore, it may be concluded that time when the bullet comment content of the bullet comment data j reaches the left boundary of the bullet comment displaying area for the first time is t<sub>3</sub>+(w<sub>1</sub>/s<sub>1</sub>). In a case that t<sub>1</sub>+t<sub>2</sub>&#x3c;t<sub>3</sub>+(w<sub>t</sub>/s<sub>t</sub>), it is indicated that when the last bullet comment content completely disappears from the bullet comment displaying area, the bullet comment content in the bullet comment data j still has not caught up with the last bullet comment content, which means that the last bullet comment content will not collide with the bullet comment content in the bullet comment data j, and therefore, it may be determined that the current state of the k<sup>th </sup>bullet comment track is the idle state.</p><p id="p-0101" num="0099">In step S<b>720</b>, adding is performed to a virtual bullet comment track and a rendering list, and the view layer is notified to perform a data update operation to perform a second rendering operation.</p><p id="p-0102" num="0100">(1) The bullet comment data j in the queue of to-be-posted bullet comments is added to the virtual bullet comment track. The virtual bullet comment track is used for determining whether each bullet comment track is in the idle state.</p><p id="p-0103" num="0101">(2) The bullet comment data j in the queue of to-be-posted bullet comments is added to the rendering list to further create a corresponding bullet comment element such as a motion effect.</p><heading id="h-0007" level="1">Embodiment 2</heading><p id="p-0104" num="0102"><figref idref="DRAWINGS">FIG. <b>8</b></figref> schematically shows a block diagram of a WeChat mini program based bullet comment processing system according to Embodiment 2 of the present application. The WeChat mini program based bullet comment processing system may be divided into one or more program modules, and the one or more program modules are stored in a storage medium and executed by one or more processors to implement the embodiments of the present application. The program modules referred to in the embodiments of the present application denote a series of computer-readable instruction segments that can complete specific functions. The functions of various program modules in the embodiments will be specifically described in the following descriptions.</p><p id="p-0105" num="0103">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the system <b>800</b> for bullet comment processing based on a WeChat mini program may include a first obtaining module <b>810</b>, a second obtaining module <b>820</b>, and a bullet comment processing module <b>830</b>.</p><p id="p-0106" num="0104">The first obtaining module <b>810</b> is used to obtain a video playback page for outputting a video stream.</p><p id="p-0107" num="0105">The second obtaining module <b>820</b> is used to obtain a plurality of bullet comment data associated with the video stream.</p><p id="p-0108" num="0106">The bullet comment processing module <b>830</b> is used to perform a bullet comment processing operation at a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of bullet comment data.</p><p id="p-0109" num="0107">In an exemplary embodiment, performing a bullet comment processing operation at a predetermined time interval includes: using a target function obtained by simulating a requestAnimationFrame to call a rendering function frame by frame to execute the code of the bullet comment processing operation.</p><p id="p-0110" num="0108">In an exemplary embodiment, the target function includes a timing function and a callback function, where the time parameter in the timing function is determined according to a screen refresh rate, the target function is recursively called, and the callback function is used to call the rendering function to perform the bullet comment processing operation.</p><p id="p-0111" num="0109">In an exemplary embodiment, performing a bullet comment processing operation at a predetermined time interval includes: polling, at the predetermined time interval, whether the bullet comment processing operation can be performed; and if the logical layer is in a busy state, determining that the bullet comment processing operation cannot be performed; or if the logical layer is in an idle state, determining that the bullet comment processing operation can be performed.</p><p id="p-0112" num="0110">In an exemplary embodiment, the bullet comment processing operation includes: traversing the plurality of bullet comment data to query whether the plurality of bullet comment data include a bullet comment data in a to-be-posted state; if the plurality of bullet comment data include the bullet comment data in the to-be-posted state, then: adding the bullet comment data in the to-be-posted state to a queue of to-be-posted bullet comments, and notifying the view layer to perform a data update operation, to perform a first rendering operation according to the bullet comment data in the to-be-posted state; obtaining a bullet comment width of a bullet comment element resulting from the first rendering operation; determining, according to the bullet comment width of the bullet comment element, whether a bullet comment track in an idle state is included in a plurality of bullet comment tracks; and if a bullet comment track in the idle state is included in the plurality of bullet comment tracks, performing data binding on the bullet comment element, to notify the view layer to perform a data update operation to perform a second rendering operation, where a bullet comment element resulting from the second rendering operation is used for bullet comment display.</p><p id="p-0113" num="0111">In an exemplary embodiment, the determining, according to the bullet comment width of the bullet comment element, whether a bullet comment track in an idle state is included in a plurality of bullet comment tracks includes: determining whether a k<sup>th </sup>bullet comment track is empty, where k is a positive integer starting from <b>1</b>; if the k<sup>th </sup>bullet comment track is empty, determining that the k<sup>th </sup>bullet comment track is in the idle state; if the k<sup>th </sup>bullet comment track is not empty, calculating a bullet comment speed of the bullet comment element according to the bullet comment width of the bullet comment element; determining, according to the bullet comment speed of the bullet comment element, whether bullet comment content of the bullet comment element would collide with other bullet comment content in the k<sup>th </sup>bullet comment track; and if the bullet comment content of the bullet comment element would not collide with other bullet comment content in the k<sup>th </sup>bullet comment, determining that the k<sup>th </sup>bullet comment track is in the idle state; and if the bullet comment content of the bullet comment element would collide with other bullet comment content in the k<sup>th </sup>bullet comment track, determining that the k<sup>th </sup>bullet comment track is in a congested state.</p><p id="p-0114" num="0112">In an exemplary embodiment, the logical layer includes a bullet comment timeline, and the bullet comment processing operation further includes: performing an update operation on a timeline of the bullet comment timeline.</p><heading id="h-0008" level="1">Embodiment 3</heading><p id="p-0115" num="0113"><figref idref="DRAWINGS">FIG. <b>9</b></figref> schematically shows a hardware architecture schematic diagram of a computer device suitable for implementing a WeChat mini program based bullet comment processing method according to Embodiment 3 of the present application. In this embodiment, a computer device <b>10</b> is a device that may automatically perform numerical calculation and/or information processing according to preset or pre-stored instructions. The computer device <b>10</b> may be, for example, a smartphone, a computer, a projector, a set-top box, etc., or may be a virtual machine host process and one or more virtual machine instances, or a rack server, a blade server, a tower server, or a cabinet server (including an independent server or a server cluster composed of a plurality of servers), etc. As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the computer device <b>10</b> at least includes, but is not limited to, a storage <b>1010</b>, a processor <b>1020</b>, and a network interface <b>1030</b>, which may be communicatively connected to each other through a system bus. In the modules:</p><p id="p-0116" num="0114">the storage <b>1010</b> includes at least one type of computer-readable storage medium, and the readable storage medium includes a flash memory, a hard disk, a multimedia card, a card-type memory (e.g., an SD or DX memory, etc.), a random access memory (RAM), a static random access memory (SRAM), a read-only memory (ROM), an electrically erasable programmable read-only memory (EEPROM), a programmable read-only memory (PROM), a magnetic memory, a magnetic disk, an optical disc, etc. In some embodiments, the storage <b>1010</b> may be an internal storage module of the computer device <b>10</b>, for example, a hard disk or a memory of the computer device <b>10</b>. In some other embodiments, the storage <b>1010</b> may alternatively be an external storage device of the computer device <b>10</b>, for example, a plug-in hard disk disposed on the computer device <b>10</b>, a smart media card (SMC for short), a secure digital (SD for short) card, and a flash card. Certainly, the storage <b>1010</b> may include both the internal storage module of the computer device <b>10</b> and the external storage device thereof. In this embodiment, the storage <b>1010</b> is generally used to store an operating system and various application software installed in the computer device <b>10</b>, such as program codes for a WeChat mini program based bullet comment processing method. In addition, the storage <b>1010</b> may be used to temporarily store various types of data that has been output or will be output.</p><p id="p-0117" num="0115">The processor <b>1020</b> may be, in some embodiments, a central processing unit (CPU for short), a controller, a microcontroller, a microprocessor, or other data processing chips. The processor <b>1020</b> is generally used to control overall operation of the computer device <b>10</b>, for example, executing control, processing, etc. related to data exchange or communication with the computer device <b>10</b>. In this embodiment, the processor <b>1020</b> is used to run program codes stored in the storage <b>1010</b> or process data.</p><p id="p-0118" num="0116">The network interface <b>1030</b> may include a wireless network interface or a wired network interface, and the network interface <b>1030</b> is generally used to establish a communication connection between the computer device <b>10</b> and other computer devices. For example, the network interface <b>1030</b> is used to connect the computer device <b>10</b> to an external terminal through a network, and establish a data transmission channel, a communication link, etc. between the computer device <b>10</b> and the external terminal. The network may be a wireless, such as Intranet, Internet, the Global System for Mobile Communications (GSM for short), Wideband Code Division Multiple Access (WCDMA for short), a 4G network, a 5G network, Bluetooth, Wi-Fi, or other wireless or wired networks.</p><p id="p-0119" num="0117">It should be noted that <figref idref="DRAWINGS">FIG. <b>9</b></figref> shows only a computer device with components <b>1010</b> to <b>1030</b>, but it should be understood that not all of the illustrated components are required to be implemented, and more or fewer components may be alternatively implemented.</p><p id="p-0120" num="0118">In this embodiment, the WeChat mini program based bullet comment processing method stored in the storage <b>1010</b> may be further divided into one or more program modules and executed by one or more processors (by the processor <b>1020</b> in this embodiment) to implement the present application.</p><heading id="h-0009" level="1">Embodiment 4</heading><p id="p-0121" num="0119">This embodiment further provides a computer-readable storage medium having stored thereon computer-readable instructions, where when the computer-readable instructions are executed by a processor, the following steps are implemented: obtaining a video playback page for outputting a video stream; obtaining a plurality of bullet comment data associated with the video stream; and performing a bullet comment processing operation at a predetermined time interval, where the bullet comment processing operation includes performing bullet comment processing at a logical layer on the plurality of bullet comment data.</p><p id="p-0122" num="0120">In this embodiment, the computer-readable storage medium includes a flash memory, a hard disk, a multimedia card, a card-type memory (e.g., an SD or DX memory, etc.), a random access memory (RAM), a static random access memory (SRAM), a read-only memory (ROM), an electrically erasable programmable read-only memory (EEPROM), a programmable read-only memory (PROM), a magnetic memory, a magnetic disk, an optical disc, etc. In some embodiments, the computer-readable storage medium may be an internal storage unit of the computer device, for example, a hard disk or a memory of the computer device. In some other embodiments, the computer-readable storage medium may alternatively be an external storage device of the computer device, for example, a plug-in hard disk disposed on the computer device, a smart media card (SMC for short), a secure digital (SD for short) card, and a flash card. Certainly, the computer-readable storage medium may alternatively include both the internal storage unit of the computer device and the external storage device thereof. In this embodiment, the computer-readable storage medium is generally used to store an operating system and various application software installed in the computer device, such as program codes for a WeChat mini program based bullet comment processing method in the embodiments. In addition, the computer-readable storage medium may be used to temporarily store various types of data that has been output or will be output.</p><p id="p-0123" num="0121">It will be apparent to those skilled in the art that the various modules or steps in the embodiments of the present application can be implemented by a general-purpose computing device that can be centralized on a single computing device or distributed across a network formed by a plurality of computing devices. Optionally, they may be implemented by program codes executable by the computing device, such that they may be stored in a storage device and executed by the computing device, and in some cases, the steps shown or described may be performed in a sequence different from the sequence described herein, or they may be respectively fabricated into individual integrated circuit modules, or a plurality of modules or steps thereof may be implemented as a single integrated circuit module. In this way, the embodiments of the present application are not limited to any specific combination of hardware and software.</p><p id="p-0124" num="0122">The foregoing descriptions are merely illustrative of preferred embodiments of the present application, and are not intended to limit the patent scope of the present application. Any equivalent structure or equivalent process transformation made using the contents of the description and accompanying drawings of the present application, or any direct or indirect application thereof in other related technical fields shall equally fall within the patent protection scope of the present application.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of processing bullet comments, comprising:<claim-text>obtaining a page of playing a video for outputting a video stream;</claim-text><claim-text>obtaining a plurality of pieces of bullet comment data associated with the video stream; and</claim-text><claim-text>performing a bullet comment processing operation with a predetermined time interval, wherein the bullet comment processing operation comprises performing bullet comment processing on the plurality of pieces of bullet comment data at a logical layer.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing a bullet comment processing operation with a predetermined time interval comprises:<claim-text>calling a rendering function frame by frame to execute codes for the bullet comment processing operation using a target function obtained by simulating a requestAnimationFrame.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the target function comprises a timing function and a callback function, wherein a time parameter in the timing function is determined based on a screen refresh rate, wherein the target function is recursively called, and wherein the callback function is configured to call the rendering function to perform the bullet comment processing operation.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing a bullet comment processing operation with a predetermined time interval comprises:<claim-text>polling, with the predetermined time interval, whether it is capable of performing the bullet comment processing operation;</claim-text><claim-text>in response to determining that the logical layer is in a busy state, determining that it is not capable of performing the bullet comment processing operation; and</claim-text><claim-text>in response to determining that the logical layer is in an idle state, determining that it is capable of performing the bullet comment processing operation.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing bullet comment processing on the plurality of pieces of bullet comment data comprises:<claim-text>traversing the plurality of pieces of bullet comment data and determining whether the plurality of pieces of bullet comment data comprise a piece of bullet comment data in a to-be-posted state;</claim-text><claim-text>in response to determining that the plurality of pieces of bullet comment data comprise the piece of bullet comment data in the to-be-posted state, the method further comprising:</claim-text><claim-text>adding the piece of bullet comment data in the to-be-posted state to a queue of bullet comments to-be-posted, and notifying a view layer to perform a data update operation to perform a first rendering operation based on the bullet comment data in the to-be-posted state;</claim-text><claim-text>obtaining a width of a bullet comment element corresponding to the piece of bullet comment data based on a result of the first rendering operation;</claim-text><claim-text>determining, based on the width of the bullet comment element, whether a plurality of bullet comment tracks comprise a bullet comment track in an idle state, the plurality of bullet comment tracks configured to display bullet comment elements in an area of the page of playing the video; and</claim-text><claim-text>in response to determining that the plurality of bullet comment tracks comprise the bullet comment track in the idle state, performing data binding on the bullet comment element, and notifying the view layer to perform another data update operation to perform a second rendering operation, wherein a bullet comment element resulting from the second rendering operation and corresponding to the piece of the bullet comment data is configured to be displayed on the page of playing the video.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the determining, based on the width of the bullet comment element, whether a plurality of bullet comment tracks comprise a bullet comment track in an idle state comprises:<claim-text>determining whether a k<sup>th </sup>bullet comment track is empty, wherein k represents a positive integer, and an initial value of k is 1;</claim-text><claim-text>in response to determining that the k<sup>th </sup>bullet comment track is empty, determining that the k<sup>th </sup>bullet comment track is in the idle state;</claim-text><claim-text>in response to determining that the k<sup>th </sup>bullet comment track is not empty, determining a bullet comment speed of the bullet comment element moving on the page of playing the video based on the width of the bullet comment element;</claim-text><claim-text>determining, based at least in part on the bullet comment speed of the bullet comment element, whether content of the bullet comment element corresponding to the piece of the bullet comment data collides with content of another bullet comment element displayed in the k<sup>th </sup>bullet comment track;</claim-text><claim-text>in response to determining that the content of the bullet comment element does not collide with the content of another bullet comment element in the k<sup>th </sup>bullet comment track, determining that the k<sup>th </sup>bullet comment track is in the idle state; and</claim-text><claim-text>in response to determining that the content of the bullet comment element collides with the content of another bullet comment element in the k<sup>th </sup>bullet comment track, determining that the k<sup>th </sup>bullet comment track is in a congested state.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the logical layer comprises a bullet comment timeline, and wherein the bullet comment processing operation further comprises performing an update operation on a timeline of the bullet comment timeline.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. (canceled)</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A computer device, comprising a memory, a processor, and computer-readable instructions stored on the memory and executable by the processor, wherein upon executing the computer-readable instructions, the processor implements operations comprising:<claim-text>obtaining a page of playing a video for outputting a video stream;</claim-text><claim-text>obtaining a plurality of pieces of bullet comment data associated with the video stream; and</claim-text><claim-text>performing a bullet comment processing operation with a predetermined time interval, wherein the bullet comment processing operation comprises performing bullet comment processing on the plurality of pieces of bullet comment data at a logical layer.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the performing a bullet comment processing operation with a predetermined time interval comprises:<claim-text>calling a rendering function frame by frame to execute codes for the bullet comment processing operation using a target function obtained by simulating a requestAnimationFrame.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the target function comprises a timing function and a callback function, wherein a time parameter in the timing function is determined based on a screen refresh rate, wherein the target function is recursively called, and wherein the callback function is configured to call the rendering function to perform the bullet comment processing operation.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the performing a bullet comment processing operation with a predetermined time interval comprises:<claim-text>polling, with the predetermined time interval, whether it is capable of performing the bullet comment processing operation;</claim-text><claim-text>in response to determining that the logical layer is in a busy state, determining that it is not capable of performing the bullet comment processing operation; and</claim-text><claim-text>in response to determining that the logical layer is in an idle state, determining that it is capable of performing the bullet comment processing operation.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the performing bullet comment processing on the plurality of pieces of bullet comment data comprises:<claim-text>traversing the plurality of pieces of bullet comment data and determining whether the plurality of pieces of bullet comment data comprise a piece of bullet comment data in a to-be-posted state;</claim-text><claim-text>in response to determining that the plurality of pieces of bullet comment data comprise the piece of bullet comment data in the to-be-posted state, the operations further comprising:</claim-text><claim-text>adding the piece of bullet comment data in the to-be-posted state to a queue of bullet comments to-be-posted, and notifying a view layer to perform a data update operation to perform a first rendering operation based on the bullet comment data in the to-be-posted state;</claim-text><claim-text>obtaining a width of a bullet comment element corresponding to the piece of bullet comment data based on a result of the first rendering operation;</claim-text><claim-text>determining, based on the width of the bullet comment element, whether a plurality of bullet comment tracks comprise a bullet comment track in an idle state, the plurality of bullet comment tracks configured to display bullet comment elements in an area of the page of playing the video; and</claim-text><claim-text>in response to determining that the plurality of bullet comment tracks comprise the bullet comment track in the idle state, performing data binding on the bullet comment element, and notifying the view layer to perform another data update operation to perform a second rendering operation, wherein a bullet comment element resulting from the second rendering operation and corresponding to the piece of the bullet comment data is configured to be displayed on the page of playing the video.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the determining,<claim-text>based on the width of the bullet comment element, whether a plurality of bullet comment tracks comprise a bullet comment track in an idle state comprises:</claim-text><claim-text>determining whether a k<sup>th </sup>bullet comment track is empty, wherein k represents a positive integer, and an initial value of k is 1;</claim-text><claim-text>in response to determining that the k<sup>th </sup>bullet comment track is empty, determining that the k<sup>th </sup>bullet comment track is in the idle state;</claim-text><claim-text>in response to determining that the k<sup>th </sup>bullet comment track is not empty, determining a bullet comment speed of the bullet comment element moving on the page of playing the video based on the width of the bullet comment element;</claim-text><claim-text>determining, based at least in part on the bullet comment speed of the bullet comment element, whether content of the bullet comment element corresponding to the piece of the bullet comment data collides with content of another bullet comment element displayed in the k<sup>th </sup>bullet comment track;</claim-text><claim-text>in response to determining that the content of the bullet comment element does not collide with the content of another bullet comment element in the k<sup>th </sup>bullet comment track, determining that the k<sup>th </sup>bullet comment track is in the idle state; and</claim-text><claim-text>in response to determining that the content of the bullet comment element collides with the content of another bullet comment element in the k<sup>th </sup>bullet comment track, determining that the k<sup>th </sup>bullet comment track is in a congested state.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the logical layer comprises a bullet comment timeline, and wherein the bullet comment processing operation further comprises performing an update operation on a timeline of the bullet comment timeline.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A non-transitory computer-readable storage medium having computer-readable instructions stored thereon, the computer-readable instructions are executable by at least one processor to cause the at least one processor to perform operations comprising:<claim-text>obtaining a page of playing a video for outputting a video stream;</claim-text><claim-text>obtaining a plurality of pieces of bullet comment data associated with the video stream; and</claim-text><claim-text>performing a bullet comment processing operation with a predetermined time interval, wherein the bullet comment processing operation comprises performing bullet comment processing on the plurality of pieces of bullet comment data at a logical layer.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the performing a bullet comment processing operation with a predetermined time interval comprises:<claim-text>calling a rendering function frame by frame to execute codes for the bullet comment processing operation using a target function obtained by simulating a requestAnimationFrame.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the target function comprises a timing function and a callback function, wherein a time parameter in the timing function is determined based on a screen refresh rate, wherein the target function is recursively called, and wherein the callback function is configured to call the rendering function to perform the bullet comment processing operation.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the performing a bullet comment processing operation with a predetermined time interval comprises:<claim-text>polling, with the predetermined time interval, whether it is capable of performing the bullet comment processing operation;</claim-text><claim-text>in response to determining that the logical layer is in a busy state, determining that it is not capable of performing the bullet comment processing operation; and</claim-text><claim-text>in response to determining that the logical layer is in an idle state, determining that it is capable of performing the bullet comment processing operation.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the performing bullet comment processing on the plurality of pieces of bullet comment data comprises:<claim-text>traversing the plurality of pieces of bullet comment data and determining whether the plurality of pieces of bullet comment data comprise a piece of bullet comment data in a to-be-posted state;</claim-text><claim-text>in response to determining that the plurality of pieces of bullet comment data comprise the piece of bullet comment data in the to-be-posted state, the operations further comprising:</claim-text><claim-text>adding the piece of bullet comment data in the to-be-posted state to a queue of bullet comments to-be-posted, and notifying a view layer to perform a data update operation to perform a first rendering operation based on the bullet comment data in the to-be-posted state;</claim-text><claim-text>obtaining a width of a bullet comment element corresponding to the piece of bullet comment data based on a result of the first rendering operation;</claim-text><claim-text>determining, based on the width of the bullet comment element, whether a plurality of bullet comment tracks comprise a bullet comment track in an idle state, the plurality of bullet comment tracks configured to display bullet comment elements in an area of the page of playing the video; and</claim-text><claim-text>in response to determining that the plurality of bullet comment tracks comprise the bullet comment track in the idle state, performing data binding on the bullet comment element, and notifying the view layer to perform another data update operation to perform a second rendering operation, wherein a bullet comment element resulting from the second rendering operation and corresponding to the piece of the bullet comment data is configured to be displayed on the page of playing the video.</claim-text></claim-text></claim></claims></us-patent-application>