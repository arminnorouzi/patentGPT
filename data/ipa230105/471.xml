<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230000472A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230000472</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17841257</doc-number><date>20220615</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>61</class><subclass>B</subclass><main-group>8</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>01</class><subclass>S</subclass><main-group>7</main-group><subgroup>52</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>01</class><subclass>S</subclass><main-group>15</main-group><subgroup>89</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>61</class><subclass>B</subclass><main-group>8</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>8</main-group><subgroup>56</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>S</subclass><main-group>7</main-group><subgroup>52033</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>S</subclass><main-group>7</main-group><subgroup>52034</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>S</subclass><main-group>15</main-group><subgroup>8915</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>S</subclass><main-group>7</main-group><subgroup>5208</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>8</main-group><subgroup>4483</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>8</main-group><subgroup>488</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>8</main-group><subgroup>5207</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>8</main-group><subgroup>4494</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>S</subclass><main-group>7</main-group><subgroup>52085</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">ULTRASONIC IMAGING COMPRESSION METHODS AND APPARATUS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15419252</doc-number><date>20170130</date></document-id><parent-status>ABANDONED</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17841257</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>14689080</doc-number><date>20150417</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>9592032</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>15419252</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>61981491</doc-number><date>20140418</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>BFLY Operations, Inc.</orgname><address><city>Guilford</city><state>CT</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Rothberg</last-name><first-name>Jonathan M.</first-name><address><city>Miami Beach</city><state>FL</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Ralston</last-name><first-name>Tyler S.</first-name><address><city>Clinton</city><state>CT</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Sanchez</last-name><first-name>Nevada J.</first-name><address><city>Guilford</city><state>CT</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Casper</last-name><first-name>Andrew J.</first-name><address><city>Clinton</city><state>CT</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>BFLY Operations, Inc.</orgname><role>02</role><address><city>Guilford</city><state>CT</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">To implement a single-chip ultrasonic imaging solution, on-chip signal processing may be employed in the receive signal path to reduce data bandwidth and an output data module may be used to move data for all received channels off-chip as a digital data stream. The digitization of received signals on-chip allows advanced digital signal processing to be performed on-chip, and thus permits the full integration of an entire ultrasonic imaging system on a single semiconductor substrate. The on-chip digitization of received signals also enables the on-chip integration of ultrasound processing and/or pre-processing to reduce the burden on off-chip computing. Data compression architectures are disclosed to facilitate the transfer of data off-chip as a digital data stream in accordance with the bandwidth requirements of standard commercially-available output interfaces.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="118.28mm" wi="158.75mm" file="US20230000472A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="95.00mm" wi="104.39mm" orientation="landscape" file="US20230000472A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="206.16mm" wi="162.31mm" orientation="landscape" file="US20230000472A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="221.74mm" wi="123.61mm" orientation="landscape" file="US20230000472A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="235.63mm" wi="161.46mm" orientation="landscape" file="US20230000472A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="166.03mm" wi="79.67mm" orientation="landscape" file="US20230000472A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="137.92mm" wi="59.35mm" orientation="landscape" file="US20230000472A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="158.83mm" wi="94.06mm" orientation="landscape" file="US20230000472A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="171.79mm" wi="113.88mm" orientation="landscape" file="US20230000472A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="245.03mm" wi="117.35mm" orientation="landscape" file="US20230000472A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="161.88mm" wi="138.68mm" orientation="landscape" file="US20230000472A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="165.86mm" wi="138.26mm" orientation="landscape" file="US20230000472A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="156.89mm" wi="111.84mm" orientation="landscape" file="US20230000472A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="170.52mm" wi="88.82mm" orientation="landscape" file="US20230000472A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="217.09mm" wi="144.95mm" orientation="landscape" file="US20230000472A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="101.52mm" wi="112.10mm" orientation="landscape" file="US20230000472A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="241.47mm" wi="164.42mm" orientation="landscape" file="US20230000472A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="227.75mm" wi="162.90mm" orientation="landscape" file="US20230000472A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="199.98mm" wi="107.70mm" orientation="landscape" file="US20230000472A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="177.46mm" wi="148.67mm" orientation="landscape" file="US20230000472A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="208.45mm" wi="93.30mm" file="US20230000472A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a Continuation, which claims the benefit under 35 U.S.C. &#xa7; 120 of U.S. application Ser. No. 15/419,252, entitled &#x201c;ULTRASONIC IMAGING COMPRESSION METHODS AND APPARATUS&#x201d; filed on Jan. 30, 2017, which is a Continuation which claims benefit under 35 U.S.C. &#xa7; 120 of U.S. application Ser. No. 14/689,080, entitled &#x201c;ULTRASONIC IMAGING COMPRESSION METHODS AND APPARATUS&#x201d; filed on Apr. 17, 2015, which claims priority under 35 U.S.C. &#xa7; 119(e) to U.S. Provisional Application Ser. No. 61/981,491, entitled &#x201c;ULTRASONIC IMAGING COMPRESSION METHODS AND APPARATUS&#x201d; filed on Apr. 18, 2014, each of which is herein incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">Aspects of the present disclosure relate to ultrasonic imaging devices and methods.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Conventional ultrasonic scanners generally include discrete transducers and control electronics. The control electronics are typically not integrated with the transducers, but rather are formed and housed separately.</p><p id="p-0005" num="0004">Ultrasound transducer probes used for medical applications typically produce a large amount of data, as needed to produce ultrasound images for medical applications. The higher the quality and complexity of images desired, the more data is typically needed. Typically, the data is transferred from the transducer probe to the separately housed control electronics using cabling.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">The present disclosure details various aspects of an architecture for on-chip compression of data acquired using an ultrasonic transducer-based imager. In some embodiments, on-chip signal processing (e.g., data compression) may be employed in the receive signal path, for example, to reduce data bandwidth. For example, some on-chip compression architectures described herein may be configured to compress full real-time 3D ultrasound imaging data to an extent that the compressed data may be transferred off-chip as a digital data stream using a consumer grade interface (e.g., USB 3.0, USB 3.1, USB 2.0, Thunderbolt, Firewire, etc.). The digitization of received signals on-chip allows advanced digital signal processing to be performed on-chip, and thus permits complete or substantially complete integration of an entire ultrasonic imaging system on a single semiconductor substrate. In some embodiments, a complete &#x201c;ultrasound system on a chip&#x201d; solution is provided.</p><p id="p-0007" num="0006">Some embodiments are directed to a method for processing a signal output from an ultrasonic transducer element. The method comprises with a component integrated on a same semiconductor die as the ultrasonic transducer element, producing a compressed signal by compressing the signal output from the ultrasonic transducer element, wherein the compressed signal is configured to be transmitted out of the semiconductor die as a data stream.</p><p id="p-0008" num="0007">Some embodiments are directed to a method, comprising performing on-chip compression of a plurality of ultrasound signals produced by an array of ultrasonic transducers integrated with the chip.</p><p id="p-0009" num="0008">Some embodiments are directed to an ultrasound device, comprising at least one ultrasonic transducer element integrated on a semiconductor die; and a compression circuit, integrated on the semiconductor die, configured to compress a signal output from the at least one ultrasonic transducer element, wherein the compressed signal is configured to be transmitted out of the semiconductor die as a data stream.</p><p id="p-0010" num="0009">Some embodiments are directed to an ultrasound device, comprising at least one ultrasonic transducer element integrated on a semiconductor die; and an image reconstruction circuit, integrated on the semiconductor die, configured to perform at least a portion of an image reconstruction process based, at least in part, on a signal output from the at least one ultrasonic transducer element.</p><p id="p-0011" num="0010">Some embodiments are directed to a method, comprising performing at least a portion of an on-chip image reconstruction process based, at least in part, on a signal output from at least one ultrasonic transducer integrated with the chip.</p><p id="p-0012" num="0011">Some embodiments are directed to a method for processing a signal output from an ultrasonic transducer element. The method comprises with a component integrated on a same semiconductor die as the ultrasonic transducer element, performing at least a portion of an image reconstruction process based at, least in part, on the signal output from the at least one ultrasonic transducer element.</p><p id="p-0013" num="0012">Some embodiments are directed to an ultrasound device comprising at least one ultrasonic transducer element integrated on a semiconductor die and configured to generate an imaging signal; control circuitry configured to produce multiple imaging modes of operation of the ultrasound device; and compression circuitry, integrated on the semiconductor die, configured to compress the imaging signal utilizing one of a plurality of compression schemes, based, at least in part, on a selected imaging mode of operation.</p><p id="p-0014" num="0013">Some embodiments are directed to a method for processing a signal output from at least one ultrasonic transducer element. The method comprises determining an imaging mode of operation of an ultrasound device comprising the at least one ultrasonic transducer element; and compressing data recorded by the ultrasound device using one of a plurality of compression schemes selected, based, at least in part, on the determined (e.g., programmed) imaging mode of operation.</p><p id="p-0015" num="0014">It should be appreciated that all combinations of the foregoing concepts and additional concepts discussed in greater detail below (provided that such concepts are not mutually inconsistent) are contemplated as being part of the inventive subject matter disclosed herein.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0016" num="0015">Various aspects and embodiments of the disclosed technology will be described with reference to the following figures. It should be appreciated that the figures are not necessarily drawn to scale. Items appearing in multiple figures are indicated by the same reference number in all the figures in which they appear.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> shows an illustrative architecture block diagram of an ultrasonic imaging device in accordance with embodiments of the present disclosure;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> shows the illustrative architecture of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> when integrated with additional components, in accordance with some embodiments of the present disclosure;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a schematic illustration of the arrangement of individually-controllable modules of ultrasonic transducer elements in an array used in accordance with some embodiments of the present disclosure;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an alternative illustrative architecture in which at least some digital processing components are located off-chip, in accordance with some embodiments of the present disclosure;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an illustrative architecture for a time gain compensation circuit that may be used in accordance with some embodiments of the present disclosure;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an illustrative architecture for a data reduction circuit that may be incorporated in some embodiments of the present disclosure;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an illustrative architecture for data reduction within a digital processing block of the data reduction circuit shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows an illustrative architecture for a cascade integrating comb circuit that may be used in accordance with some embodiments of the present disclosure;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows an illustrative circuit for performing data reduction in accordance with some embodiments of the present disclosure;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an illustrative circuit for performing quadrature downsampling by a factor of four in accordance with some embodiments of the present disclosure;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an alternative circuit for performing quadrature downsampling by a factor of four in accordance with some embodiments of the present disclosure;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows an alternative circuit for performing quadrature downsampling by a factor of four in accordance with some embodiments of the present disclosure;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows an alternative circuit for performing quadrature downsampling by a factor of four in accordance with some embodiments of the present disclosure;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows an illustrative architecture for a polyphase filter that may be used in accordance with some embodiments of the present disclosure;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows an illustrative architecture for an arithmetic logic unit that may provide data reduction in accordance with some embodiments of the present disclosure;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows an illustrative architecture for image formation using an integrated backprojection technique in accordance with some embodiments of the present disclosure;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows an alternative architecture for image formation using an integrated backprojection technique in accordance with some embodiments of the present disclosure;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>17</b></figref> shows an illustrative architecture for performing ensemble compression in accordance with some embodiments of the present disclosure;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIGS. <b>18</b>A and <b>18</b>B</figref> show illustrative architectures for performing dynamic focusing using streaming addressable and pipeline delays, respectively, in accordance with some embodiments of the present disclosure; and</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flowchart of an illustrative process for operating an ultrasonic transducer array, in accordance with some embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0037" num="0036">Applicants have appreciated that the lack of integration of the transducers and control circuitry of conventional ultrasound scanners is demanded in part by the large amount of data collected by ultrasound transducer probes and used to generate ultrasound images. Correspondingly, Applicants have appreciated that suitable device configurations and techniques for reducing or otherwise handling such large amounts of data while still allowing for generation of desired ultrasound image types at suitable quality would facilitate the attainment of integrated ultrasound devices having ultrasonic transducers and control electronics in a compact form. The present disclosure addresses this issue by providing unique, cost-effective, and scalable integrated data compression architectures to reduce data bandwidth while providing data that is sufficiently robust for advanced imaging applications. Thus, aspects of the present application provide an architecture which may be used with a single substrate ultrasound device having integrated ultrasonic transducers (e.g., CMOS ultrasonic transducers) and circuitry.</p><p id="p-0038" num="0037">Accordingly, some aspects of the present disclosure provide new apparatuses, systems, and methods that push the forefront of ultrasound image processing by providing a robust and highly integrated &#x201c;ultrasound system on a chip&#x201d; with direct integration of ultrasonic transducer arrays fabricated on the same die as a fully digital ultrasound front-end. As used herein, &#x201c;fabricated/integrated on the same die&#x201d; means integrated on the same substrate or integrated using one or more stacked die integrated with 3D chip packaging technology. According to some aspects of the present disclosure, these architectures may allow sufficient access to digitized channels that maintain independent data to permit the use of state-of-the-art, off-the-shelf computing platforms for performing sophisticated image formation and/or processing algorithms. In at least some embodiments, high-resolution 3D volumetric imaging, as just one example, may be performed using the devices and techniques for data reduction and handling described herein.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> shows an illustrative example of an integrated ultrasound device <b>100</b> embodying various aspects of the present disclosure. As shown, the device <b>100</b> includes a plurality of circuits formed on a semiconductor die <b>112</b> including transmit (TX) control circuit <b>104</b>, analog receive (RX) circuit <b>103</b>, receive (RX) compression circuit <b>130</b>, and receive (RX) buffer memory <b>140</b>. Each of these circuits may include one or more additional circuits. For example, TX control circuit <b>104</b> may include TX waveform generators, TX parameter and control registers, analog pulsar circuitry to drive an array of acoustic elements and/or circuitry implementing a delayed waveform distribution function.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> shows the ultrasound device <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, including the elements shown in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> with additional elements incorporated on semiconductor die <b>112</b>. For example, device <b>100</b> in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> additionally includes one or more transducer arrangements (e.g., arrays) <b>102</b>, a timing &#x26; control circuit <b>108</b>, and a power management circuit <b>118</b>.</p><p id="p-0041" num="0040">Analog RX circuit <b>103</b> may include analog signal chain components that process signals output from a plurality of ultrasonic transducer elements. The ultrasonic transducers of the ultrasonic transducer elements may be of any suitable type, and in some embodiments are capacitive micromachined ultrasound transducers (CMUTs), which may allow for fabrication of high quality ultrasonic transducers in the same semiconductor foundries that are currently driving the electronics industry. Such CMUTs may be formed in and/or formed on the same substrate as the integrated circuitry (e.g., a silicon substrate).</p><p id="p-0042" num="0041">In one aspect, analog RX circuit <b>103</b> may include a plurality of rows (e.g., four rows). Each row may include analog signal chain elements (e.g., 144 elements) for a full column of sensors in an ultrasound transducer array. In some embodiments, one or more components (e.g., an automatic gain control component) in analog RX circuit <b>103</b> may be controlled by a time gain compensation (TGC) circuit <b>160</b> that compensates for signals received from different depths in an imaged object (e.g., by providing variable gain based on the timing at which the signal is received). TGC circuit <b>160</b> may be included as a portion of RX compression circuit <b>130</b> described below. An illustrative architecture for TGC circuit <b>160</b> is discussed in more detail below with respect to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0043" num="0042">RX compression circuit <b>130</b> may include circuits for processing outputs from analog RX circuit <b>103</b>. In some implementations, RX compression circuit <b>130</b> may include circuits configured to reduce a data bandwidth of data received from analog RX circuit <b>103</b>, as discussed in more detail below. For example, RX compression circuit <b>130</b> may include circuits configured to process the received data by filtering, averaging, sampling, decimating, and/or using other techniques to provide on-chip compression to enable the processed data to be transmitted off-chip at a desired data rate. RX compression circuit <b>130</b> may include analog and/or digital components for performing data compression, and embodiments are not limited based on whether particular aspects of the compression circuitry is implemented using an analog architecture, a digital architecture, or using a combination of analog and digital components. For example, the digital mixing circuitry described in more detail below may alternatively be implemented using an analog heterodyning circuit to provide equivalent functionality. Additionally, other features including, but not limited to, channel summation, dynamic delay, and frequency filtering may be implemented using digital and/or analog components, and embodiments are not limited in this respect.</p><p id="p-0044" num="0043">RX compression circuit <b>130</b> may also include other components including RX control and parameter registers. Additionally, RX compression circuit <b>130</b> may be associated with at least one microprocessor (not shown) integrated on die <b>112</b> that may be used, at least in part, to compress the digital signals processed by RX compression circuit <b>130</b>.</p><p id="p-0045" num="0044">RX buffer memory <b>140</b> may be configured to temporarily store the output of RX compression circuit <b>130</b> prior to transmitting the data off-chip, as discussed in further detail below.</p><p id="p-0046" num="0045">Components included in some embodiments as a portion of RX compression circuit <b>130</b> are also shown. As discussed above, some embodiments of the present disclosure provide data compression architectures to facilitate the transfer of data off of semiconductor die <b>112</b> as a data stream at a data rate compatible with output interface <b>114</b> having a maximum data bandwidth. In some embodiments, the data stream may be a serial data stream. Components of RX compression circuit <b>130</b> (also referred to herein as &#x201c;compression circuitry&#x201d;) may be configured to provide data compression using one or more data compression techniques, examples of which are described herein. RX compression circuit <b>130</b>, as shown, includes an RX control circuit <b>106</b> and a signal conditioning/processing circuit <b>110</b>. RX control circuit <b>106</b> further includes a data reduction circuit <b>132</b> configured to process data received from analog signal chain elements of analog RX circuitry <b>103</b>. Data reduction circuit <b>132</b>, discussed in more detail below, may include circuitry configured to perform data compression on signals prior to performing at least a portion of an image reconstruction process. In some embodiments, at least some outputs of data reduction circuit <b>132</b> may be provided to buffer memory <b>140</b> without being further processed by signal conditioning/processing circuit <b>110</b>, as represented by the optional data path between data reduction circuit <b>132</b> and buffer memory <b>140</b>.</p><p id="p-0047" num="0046">In the example shown, data reduction circuit <b>132</b> may include analog compression circuitry, an analog-to-digital converter (ADC), and digital compression circuitry. The ADC may, for example, comprise a 10-bit, 1, 5, 10, or 20 mega-samples per second (Msps), 40 Msps, 50 Msps, or 80 Msps ADC. The ADC may alternatively have any desired resolution including, but not limited to, 1-bit, 4-bit, 16-bit, or 20-bit. Illustrative types of ADCs that may be used include, but are not limited to, a successive approximation register (SAR) ADC, a flash ADC, a pipeline ADC, a sigma-delta ADC, a multi-slop ADC, and a time-interleaved ADC. In some embodiments, the ADC may be sampling at a lower rate than the center frequency of the received signal, thereby aliasing relevant data.</p><p id="p-0048" num="0047">After undergoing processing in the data reduction circuit <b>132</b>, the outputs of all of the RX control circuits <b>106</b> (the number of which, in this example, is equal to or less than the number of transducer elements on the chip) may be transmitted to a multiplexer (MUX) <b>142</b> in the signal conditioning/processing circuit <b>110</b>. In some embodiments, the number of RX control circuits may be different than the number of transducer elements on the chip, and embodiments of the present disclosure are not limited in this respect. The MUX <b>142</b> multiplexes the digital data from the various RX control circuits <b>106</b>, and the output of the MUX <b>142</b> may optionally be provided to digital signal processing block <b>150</b> in the signal conditioning/processing circuit <b>110</b> prior to outputting the data from the die <b>112</b>, e.g., via one or more output ports <b>114</b>. Some embodiments may not include MUX <b>142</b>, and outputs from the RX control circuits <b>106</b> may be provided directly to digital signal processing block <b>150</b> and/or stored in buffer <b>140</b> prior to being sent off the chip.</p><p id="p-0049" num="0048">As shown, digital signal processing block <b>150</b> includes image formation circuit <b>134</b> configured to perform at least a portion of an image reconstruction process, and the output of the image formation circuit <b>134</b> may be output off-chip for further processing and/or display. Digital signal processing block <b>150</b> may also include post-processing circuit <b>136</b> that operates on the output of image formation circuit <b>134</b> to provide additional data compression. Illustrative architectures for each of data reduction circuit <b>132</b>, image formation circuit <b>134</b>, and post-processing circuit <b>136</b> that may be formed on a semiconductor die <b>112</b> as a portion of an ultrasound imager in accordance with embodiments of the present disclosure are discussed in more detail below. In some embodiments, discussed in more detail below, all or a portion of digital signal processing block <b>150</b> may be formed off-chip, and data from one or more RX control circuits <b>106</b> may be stored in buffer memory <b>140</b> without processing by signal conditioning and processing circuit <b>110</b>.</p><p id="p-0050" num="0049">As explained in more detail below, various components in RX compression circuit <b>130</b> may serve to decouple waveforms from the received signal and otherwise reduce the amount of data that is output from the die <b>112</b> via a data link or otherwise. The inclusion of such elements may thus further facilitate and/or enhance an &#x201c;ultrasound-on-a-chip&#x201d; solution in accordance with some embodiments.</p><p id="p-0051" num="0050">In the embodiment shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, all of the illustrated components are formed on a single semiconductor die <b>112</b> or are formed on multiple stacked integrated dice using 3D packaging technology. It should be appreciated, however, that in alternative embodiments one or more of the illustrated elements may be instead located off-chip, as discussed in more detail below in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>. In addition, although the illustrated example shows both a TX control circuit <b>104</b> and an RX control circuit <b>106</b>, in alternative embodiments only a TX control circuit or only an RX control circuit may be employed. For example, such embodiments may be employed in a circumstance where one or more transmission-only devices <b>100</b> are used to transmit acoustic signals and one or more reception-only devices <b>100</b> are used to receive acoustic signals that have been transmitted through or reflected by a subject being ultrasonically imaged.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an embodiment of ultrasound device <b>100</b> comprising a substrate <b>202</b> that includes multiple ultrasound circuitry modules <b>204</b> formed thereon. As shown, an ultrasound circuitry module <b>204</b> may comprise multiple ultrasound elements <b>206</b>. An ultrasound element <b>206</b> may comprise multiple ultrasonic transducers <b>208</b>. Such a modular design allows for scalability of the architecture to any desired size or arrangement.</p><p id="p-0053" num="0052">In the illustrated embodiment, substrate <b>202</b> comprises 144 modules arranged as an array having 72 rows and two columns. However, it should be appreciated that a substrate of an ultrasound device <b>100</b> may comprise any suitable number of ultrasound circuitry modules (e.g., at least two modules, at least ten modules, at least 100 modules, at least 1000 modules, at least 5000 modules, at least 10,000 modules, at least 25,000 modules, at least 50,000 modules, at least 100,000 modules, at least 250,000 modules, at least 500,000 modules, between two and a million modules, etc.) that may be arranged as an two-dimensional array of modules having any suitable number of rows and columns or the ultrasound circuitry modules may be arranged in any other suitable way.</p><p id="p-0054" num="0053">In the illustrated embodiment, each module <b>204</b> comprises 64 ultrasound elements arranged as an array having two rows and 32 columns. However, it should be appreciated that an ultrasound circuitry module <b>204</b> may comprise any suitable number of ultrasound elements (e.g., one ultrasound element, at least two ultrasound elements, at least four ultrasound elements, at least eight ultrasound elements, at least 16 ultrasound elements, at least 32 ultrasound elements, at least 64 ultrasound elements, at least 128 ultrasound elements, at least 256 ultrasound elements, at least 512 ultrasound elements, between two and 1024 elements, etc.) that may be arranged as a two-dimensional array of ultrasound elements having any suitable number of rows and columns or in any other suitable way,</p><p id="p-0055" num="0054">In the illustrated embodiment, each ultrasound element <b>206</b> comprises 16 ultrasonic transducers arranged as a two-dimensional array having four rows and four columns. However, it should be appreciated that an ultrasound element <b>206</b> may comprise any suitable number of ultrasonic transducers (e.g., one, at least two, at least four, at least 16, at least 25, at least 36, at least 49, at least 64, at least 81, at least 100, between one and 200, etc.) that may be arranged as a two dimensional array having any suitable number of rows and columns (square or rectangular) or in any other suitable way. Alternatively, the ultrasonic transducers may be arranged in any other suitable geometric array including, but not limited to, a hexagonal array, a triangular array, and a skewed lattice.</p><p id="p-0056" num="0055">Each ultrasound circuitry module <b>204</b> may comprise or be associated with circuitry in addition to one or more ultrasound elements. For example, an ultrasound circuitry module may comprise circuitry associated with transmitting acoustic waves including, but not limited to, one or more waveform generators (e.g., two waveform generators, four waveform generators, etc.), encoding circuitry, and decoding circuitry. In some embodiments, all or a portion of an ultrasound circuitry module may additionally or alternatively comprise or be associated with any other suitable circuitry. For example, in some embodiments, each module <b>204</b> may be associated with receive-side components including, but not limited to, analog signal chain elements and digital signal processing elements, as described briefly above, and described in more detail below.</p><p id="p-0057" num="0056">In some embodiments, each module may include eight receive channels, and each of the eight receive channels may be associated with a single timing and control circuit or other control elements including, but not limited to, a time gain compensation circuit, as discussed in more detail below. Additionally, each module may be associated with multiple components to perform analog and/or digital signal processing to output signals from the receive channels of the module. For example, such components may include, but are not limited to, components of the analog receive chain and components of the digital signal processing circuitry such as memory, multiplier circuits, and adder circuits.</p><p id="p-0058" num="0057">In some embodiments, the ultrasound device may comprise module interconnection circuitry integrated with the substrate and configured to connect ultrasound circuitry modules to one another to allow data to flow among the ultrasound circuitry modules. For example, the device module interconnection circuitry may provide for connectivity among adjacent ultrasound circuitry modules. In this way, an ultrasound circuitry module may be configured to provide data to and/or receive data from one or more other ultrasound circuitry modules on the device.</p><p id="p-0059" num="0058">It should be appreciated that communication between one or more of the illustrated components may be performed in any of numerous ways. In some embodiments, for example, one or more high-speed busses (not shown), such as that employed by a unified Northbridge, may be used to allow high-speed intra-chip communication or communication with one or more off-chip components. In some embodiments, one or more modules may be connected using an interconnection network. For example, a shift register ring communication network may be used where neighboring modules communicate with one another via the network.</p><p id="p-0060" num="0059">In some embodiments, timing &#x26; control circuit <b>108</b> may, for example, be responsible for generating all timing and control signals that are used to synchronize and coordinate the operation of the other elements in the device <b>100</b>. In the example shown, the timing &#x26; control circuit <b>108</b> is driven by a single clock signal CLK supplied to an input port <b>116</b>. The clock signal CLK may, for example, be a high-frequency clock used to drive one or more of the on-chip circuit components. In some embodiments, the clock signal CLK may, for example, be a 1.5625 GHz or 2.5 GHz clock used to drive a high-speed serial output device (not shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>) in the signal conditioning/processing circuit <b>110</b>, or a 20 MHz, 40 MHz, or 200 MHz (or any other suitable speed) clock used to drive other digital components on the die <b>112</b>, and the timing &#x26; control circuit <b>108</b> may divide or multiply the clock CLK, as necessary, to drive other components on the die <b>112</b>. In other embodiments, two or more clocks of different frequencies (such as those referenced above) may be separately supplied to the timing &#x26; control circuit <b>108</b> from an off-chip source.</p><p id="p-0061" num="0060">In the example shown, one or more output ports <b>114</b> may output a data stream generated by one or more components of the signal conditioning/processing circuit <b>110</b>. Such data streams may, for example, be generated by one or more USB 2.0 modules, one or more USB 3.0 modules, one or more USB 3.1 modules, one or more Thunderbolt modules, one or more FireWire modules, and/or one or more Gigibit (e.g., 10 GB, 40 GB, or 100 GB) Ethernet modules, integrated on the die <b>112</b>. In some embodiments, the signal stream produced on output port <b>114</b> can be provided as input to an electronics device including, but not limited to, a cloud service, one or more computers, a tablet, and/or a smartphone. The one or more electronic devices receiving the signal stream may generate and/or display numerical values, 1-dimensional, 2-dimensional, 3-dimensional, and/or tomographic images. In some embodiments, the signal stream output on output port <b>114</b> may be provided to one or more additional off-chip circuits for additional processing, as discussed below in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0062" num="0061">In embodiments in which image reconstruction capabilities are incorporated in the signal conditioning/processing circuit <b>110</b> (as explained further below), even relatively low-power devices, such as smartphones or tablets which have only a limited amount of processing power and memory available for application execution, can display images using only a data stream from the output port <b>114</b>. Examples of high-speed serial data modules and other components that may be included in the signal conditioning/processing circuit <b>110</b> are discussed in more detail below. Performing at least a portion of an image reconstruction process on-chip and transmitting the output of the at least a portion of the image reconstruction process off-chip using a data link is one of the features that may facilitate an integrated &#x201c;ultrasound on a chip&#x201d; solution that can be used with a wide range of external display devices having varying degrees of processing power in accordance to some embodiments of the present disclosure.</p><p id="p-0063" num="0062">In various embodiments, each RX control circuit <b>106</b> may be associated with a single transducer, a group of two or more transducers within a single transducer element, a single transducer element comprising a group of transducers, a group of two or more transducer elements within a module, a single module comprising two or more transducer elements, two or more modules in an array <b>102</b>, or an entire array <b>102</b> of transducers.</p><p id="p-0064" num="0063">In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, there is a separate RX control circuit <b>106</b> for each transducer in the array(s) <b>102</b>, but there is only one instance of each of the timing &#x26; control circuit <b>108</b> and the signal conditioning/processing circuit <b>110</b>. Accordingly, in such an implementation, the timing &#x26; control circuit <b>108</b> may be responsible for synchronizing and coordinating the operation of all RX control circuit <b>106</b> combinations on the die <b>112</b>, and the signal conditioning/processing circuit <b>110</b> may be responsible for handling inputs from all of the RX control circuits <b>106</b> on the die <b>112</b>. Alternatively, die <b>112</b> may include multiple timing &#x26; control circuits <b>108</b>, with each of the timing &#x26; control circuits being responsible for synchronizing and coordinating the operation of a subset of RX control circuit combinations on the die.</p><p id="p-0065" num="0064">As discussed above, in some embodiments, at least some of the receive-path digital signal processing electronics discussed above in connection with <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, may be implemented off-chip to reduce the size of the ultrasound-on-a-chip architecture, to reduce power consumption of the ultrasound device <b>100</b>, or for any other reason including, but not limited to, providing advanced image reconstruction capabilities using one or more off-chip processors.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an illustrative embodiment of ultrasound device <b>100</b> in which a portion of the receive-path digital signal processing circuitry is implemented off-chip. In the illustrated embodiment, field-programmable gate array (FPGA) <b>300</b> is connected to portions of device <b>100</b> implemented on substrate <b>112</b>. FPGA <b>300</b> is configured to perform at least some signal processing operations described above as having been performed in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. For example, FPGA <b>300</b> may include processing unit <b>310</b> configured to receive imaging data from buffer memory <b>140</b> and perform image reconstruction or any other suitable operation on the received imaging data. Additionally, FPGA <b>300</b> may be configured to transmit control data to the portion of ultrasound device <b>100</b> integrated on substrate <b>112</b>. The control data may include control parameters to control operation of transmit control circuitry <b>104</b> and/or receive-side circuitry including, but not limited to, analog TX circuitry <b>104</b>, analog RX circuitry <b>103</b>, and RX control circuit <b>106</b>. FPGA <b>300</b> may be further configured to send processed imaging data to output interface <b>314</b> for transmission to any suitable device for display and/or further processing, as discussed above. Any suitable data interface may be used to transfer data between die <b>112</b> and FPGA <b>300</b> using output port <b>114</b>, and embodiments of the present disclosure are not limited in this respect. In some embodiments, a digital signal processor (DSP), an embedded controller, or any other digital circuit logic may be used in addition to, or as an alternative to, FPGA <b>300</b> for providing at least a portion of the receive-path digital circuitry off-chip.</p><p id="p-0067" num="0066">As discussed above, in some embodiments, RX control circuitry <b>106</b> may include a time gain compensation (TGC) circuit <b>160</b> configured to provide digital control of an analog variable gain amplifier (VGA) to process signal outputs from the ultrasound transducer elements. TGC circuit <b>160</b> compensates for signals received from different depths in an imaged object (e.g., by controlling the VGA to provide variable gain for signals received at different times).</p><p id="p-0068" num="0067">In one embodiment, output from the VGA is stored in a memory, and VGA values are read from the memory at the TGC circuit update rate. <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example architecture of a TGC circuit <b>160</b> that may be used in accordance with some embodiments of the present disclosure, and requires less memory and fewer programming words than the aforementioned embodiment that reads VGA values from memory at the update rate of the TCG circuit. The illustrated TGC circuit <b>160</b> is implemented as a multi-stage summing control circuit that controls an analog variable gain amplifier, which amplifies signals received from greater depths compared to signals received from shallower depths. TGC circuit <b>160</b> includes controlling circuitry elements including adder <b>410</b> and delay element <b>420</b>.</p><p id="p-0069" num="0068">In some embodiments, TGC circuit <b>160</b> may be configured to model a corrective gain profile for the variable gain amplifier with a piecewise polynomial (i.e., composed of multiple polynomial segments). The gain profile may be designed (manually by a user and/or automatically) to match the signals output from the ultrasound transducer elements. The piecewise polynomial model may be of any order including, but not limited to, a third order polynomial model. One implementation for modeling a piecewise polynomial is to use three stages of an integrator circuit, as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Other order polynomials can similarly be implemented by using more or less stages. In some embodiments, the piecewise polynomial is modeled using a variable input update rate, which is the rate at which a control signal for controlling a variable gain amplifier circuit is updated. Illustrative input update rates for updating the control signal include update rates ranging between 100 kHz and 1.25 MHz, or may include other suitable values including update rates ranging from below 100 kHz to the update rate of an ADC on the chip (e.g., 50 MHz). In some embodiments, the spacing between updates of the control signal is non-uniform resulting in a variable input update rate. Other update rates including the calculation update rate and the output update rate may be based on internal registers and may be constant (e.g., 50 MHz, 100 MHz, or 200 MHz) or variable. In particular, the calculation update rate for updating the polynomial coefficients may be fixed or variable. It should be appreciated that any suitable input, calculation, and output update rates may alternatively be used.</p><p id="p-0070" num="0069">In some embodiments, the parameterization of the variable gain profile provided by the TGC circuit <b>160</b> may be programmable, such that the piecewise polynomial function may be calculated dynamically, and may be programmed differently based on a selected imaging mode and/or imaging application. For example, in order to program multiple segments of a piecewise polynomial function, the parameters (e.g., x0, y0, z0, and duration) may be changed dynamically during a TGC curve evaluation to implement subsequent polynomial segments. In some embodiments, all parameters (including the duration parameter) may be programmed for each piecewise segment of the polynomial function. Alternatively, a subset (i.e., fewer than all) of the parameters may be changed dynamically for each segment. For example, in one implementation, only the a0 parameter is changed between polynomial segments. In some embodiments, each module (e.g., comprising eight receive channels) may be associated with a single TGC circuit <b>160</b>. Alternatively, multiple TGC circuits may be associated with each module, and embodiments are not limited in this respect.</p><p id="p-0071" num="0070">Illustrative Types of Compression</p><p id="p-0072" num="0071">Ultrasound imaging devices provided in accordance with some embodiments of the present disclosure record a large amount of ultrasound data to provide quality images using an array of ultrasonic transducer elements, as discussed above. To process this large amount of data and transfer the data off-chip at an acceptable rate using an output data interface module having a maximum data bandwidth, some embodiments employ on-chip circuitry to compress the data from the ultrasonic transducer elements prior to transmitting the data off-chip. The inclusion of on-chip data compression elements may thus further facilitate and/or enhance an &#x201c;ultrasound-on-a-chip&#x201d; solution in accordance with some embodiments.</p><p id="p-0073" num="0072">In some embodiments, different types of compression may be selected depending on the imaging goals and/or mode of operation of the ultrasound imaging application. For example, the different types or amounts of compression used may depend, at least in part, on an acceptable image quality for a particular imaging application. Examples of on-chip compression that may be implemented in accordance with embodiments of the present disclosure include, but are not limited to, spectral compression, aperture compression, excitation compression, ensemble compression, entropy compression, signal value compression, and selective omission compression, each of which is described in more detail below.</p><p id="p-0074" num="0073">Spectral compression compresses data by operating on the frequency content of a received acoustic signal. Spectral compression downsizes an amount of spectral bandwidth to only that which is necessary to achieve a desired image resolution. Examples of spectral compression include, but are not limited to, quadrature demodulation and filtered downsampling, each of which is described in more detail below.</p><p id="p-0075" num="0074">Aperture compression limits the cross-range bandwidth of the acoustic signal to only that which is needed to achieve a desired lateral image resolution. Examples of aperture compression include, but are not limited to, filtered downsampling and other filtering techniques described in more detail below.</p><p id="p-0076" num="0075">Excitation compression compresses data by combining excitations in a unique way in which redundant information between excitations are compressed together. A non-limiting example of excitation compression is to form an image from the excitations, where all excitations have been compressed into one image reconstruction.</p><p id="p-0077" num="0076">Ensemble compression reduces data redundancy in ensemble imaging by calculating relevant information. A non-limiting example of ensemble compression is Doppler processing, described in more detail below, where multiple images are compressed into a single complex velocity and power reconstruction profile.</p><p id="p-0078" num="0077">Entropy compression reduces information redundant in data communication as it is provided off-chip. Encoding frame-to-frame differences rather than encoding the full data for each frame is a non-limiting example of entropy compression.</p><p id="p-0079" num="0078">Signal value compression reduces data to values corresponding to a desired interest in characteristics (e.g., power, max value, variance) of the overall signal. Non-limiting examples of signal value compression include compression circuitry that calculates the total power in a signal and compression circuitry that determines a time-of-flight for received acoustic signals for characterization processes.</p><p id="p-0080" num="0079">Selective omission compression reduces an amount of data by selectively omitting data from the full set of data. Non-limiting examples of selective omission compression include re-quantization, described in more detail below, and sparse aperture imaging.</p><p id="p-0081" num="0080">On-chip circuitry, discussed in more detail below, for performing compression of acoustic data signals received from an array of ultrasonic elements may be implemented to perform one or more of the types of compression discussed above. In some embodiments, a data signal may be compressed to be transmitted off-chip in accordance with one or more operating parameter requirements. For example, in some embodiments, the compressed data signal is compressed such that it may be transmitted out of the semiconductor die as a data stream at a rate of less than or equal to four Gigabits per second or at some other suitable rate. In some embodiments, the data signal may be compressed by a factor of greater than one but less than two. In some embodiments, the data signal may be compressed by at least a factor of two and less than a factor of four. In some embodiments, the data signal may be compressed by at least a factor of four and less than a factor of ten. In some embodiments, the data signal may be compressed by at least a factor of ten and less than a factor of twenty. In some embodiments, the data signal may be compressed by at least a factor of twenty and less than a factor of one hundred. In other embodiments, the data signal may be compressed by at least a factor of one hundred and less than a factor of one thousand. In some embodiments, the data signal may be compressed by at least a factor of one thousand and less than a factor of ten thousand. It should be appreciated that any suitable amount of compression may alternatively be used, and the ranges discussed above for compression amount are provided merely for illustrative purposes.</p><p id="p-0082" num="0081">In some embodiments, the ultrasound imager may be configurable to operate in a plurality of imaging modes (e.g., 2D, 3D), and the type and/or amount of compression (including no compression) used may depend, at least in part, on the particular operating mode of the ultrasound imager. For example, different operating modes may be programmed to generate different amounts of data, and the type and/or amount of compression used may be based, at least in part, an amount of data generated when a particular operating mode is selected, such that the data may be provided off-chip at a desired rate compatible with output interface <b>314</b>. Although the amount of generated data may be one factor that determines a type and/or amount of compression used for different operating modes, it should be appreciated that other factors may additionally or alternatively be considered when determining a type and/or amount of compression to use for a selected operating mode. For example, image quality requirements for a particular imaging application may be considered.</p><p id="p-0083" num="0082">The selection of an operating mode for the ultrasound imager may be made in any suitable way. For example, in some embodiments the ultrasound imager may operate in one of a plurality of imaging modes in dependence on a mode select signal (MODE) received from off-chip via input interface <b>200</b>. Alternatively, the ultrasound imager may include on-chip memory configured to store an imaging mode of operation and an amount and/or type of compression (including no compression) may be determined based, at least in part, on the imaging mode of operation stored in on-chip memory.</p><p id="p-0084" num="0083">Additionally, compression may be applied to data at different stages in the signal processing chain. As discussed in further detail below, data compression in the receive signal processing chain may be performed prior to image reconstruction, during image reconstruction, and/or after image reconstruction. In embodiments where image reconstruction is performed in part or entirely off-chip, on-chip architectures for data compression may be limited to one or more of the pre-image formation compression techniques discussed in more detail below. Example techniques and representative architectures for providing compression at each of these stages are provided herein.</p><p id="p-0085" num="0084">Illustrative Pre-Image-Reconstruction Compression Architectures</p><p id="p-0086" num="0085">On-chip data compression may be achieved prior to performing at least a portion of an image reconstruction process. For example, compression may be achieved by selectively acquiring and/or processing a number of measurements from the array of ultrasonic transducer elements that is less than the full set of measurements acquired/processed using the full array of elements. Compression using a reduced number of measurements may be implemented in any suitable way. In some embodiments, reducing a number of measurements comprises selecting an encoding scheme for an ultrasonic transducer element that reduces the number of measurements. For example, an encoding scheme associated with an encoding matrix such as a modified Hadamard matrix or a pseudorandom matrix may be used to reduce the number of measurements. In these types of encoding schemes, the signal sent to each element is multiplied by 1, 0, or &#x2212;1 based on the position of the element and the frame number. The weights are selected such that the sequence of weightings for a given element is equal to a column of a Hadamard or pseudorandom matrix (each element will typically have a unique column).</p><p id="p-0087" num="0086">In some embodiments, pre-image reconstruction data compression may also be achieved by using on-chip compression circuitry components included as a portion of data reduction circuit <b>132</b>, discussed above. <figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of components that may be included within data reduction circuit <b>132</b> of each RX control circuit <b>106</b> (e.g., see <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>3</b></figref>). As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, data reduction circuit <b>132</b> may include an analog processing block <b>510</b> configured to perform analog data compression techniques. For example, analog processing block <b>510</b> may include a low-pass filter (LPF) that filters the input signal x(n). The LPF in analog processing block <b>510</b> may provide for anti-aliasing of the input signal. In some embodiments, the LPF may, for example, comprise a second-order low-pass filter having a frequency cutoff on the order of 5 MHz, on the order of 10 MHz, on the order of 25 MHz, or on the order of 50 MHz. Other implementations are, however, possible and contemplated. For example, analog processing block may additionally or alternatively include a high-pass filter, a band-pass filter or any other suitable analog components for processing input signal x(n). For example, some embodiments may include one or more of the following analog components: amplifiers, signal combiners, attenuators, mixers, and analog delay circuits. As discussed above, any data reduction functionality described herein implemented using analog components may alternatively be implemented using, at least partially, digital components, and vice versa, and embodiments are not limited based on whether particular data reduction functionality is implemented using analog components, digital components, or a combination of analog and digital components.</p><p id="p-0088" num="0087">Data reduction circuit <b>132</b> as shown also includes analog-to-digital converter (ADC) <b>512</b> configured to convert the analog signal (or alternatively a filtered, or otherwise processed version of the analog signal) to a digital representation. For example, ADC <b>512</b> may, for example, comprise a 10-bit, 20 Msps, 40 Msps, 50 Msps, 80 Msps ADC, or any other suitable ADC. Illustrative types of ADCs that may be used include, but are not limited to, a successive approximation register (SAR) ADC, a flash ADC, a pipeline ADC, a sigma-delta ADC, a multi-slop ADC, and a time-interleaved ADC.</p><p id="p-0089" num="0088">After the signal has been converted into a digital representation by ADC <b>512</b>, the signal is transmitted to digital processing block <b>514</b> of data reduction circuit <b>132</b>. The digital processing block <b>514</b> may, for example, be configured to reduce a data bandwidth of the digital representation of the acquired signal using one or more digital signal processing architectures. For example, the digital signal processing architectures may be configured to perform one or more data reduction techniques including, but not limited to, quadrature demodulation, downsampling, quadrature sampling, filtered downsampling, cascade integrating comb (CIC) filtering, receive aperture filtering, polyphase filtering, re-quantization, and pulse compression, as described in more detail below.</p><p id="p-0090" num="0089">As discussed above, some embodiments include digital signal processing components that provide one or more stages of data compression to enable a large amount of data received by ultrasonic transducer elements to be transmitted off chip at a rate compatible with the limited bandwidth of an output interface module. Such compression facilitates an ultrasound-on-a-chip solution in accordance with some embodiments. In some embodiments, one or more of the stage(s) of data compression may be enabled or disabled depending on a particular mode of operation of the ultrasound device, as discussed above.</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an illustrative architecture for at least a portion of digital processing block <b>514</b> of the data reduction circuit <b>312</b> shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. In the illustrated embodiment, the digital processing block <b>514</b> performs quadrature demodulation (QDM), which is a form of spectral compression. QDM reduces the amount of bandwidth that must be processed and stored by an ultrasound imaging system in accordance with embodiments of the present disclosure. In particular, QDM mixes down the digitized version of the received signal x[n] from center frequency to baseband. The baseband signal may then be low-pass filtered and decimated, as discussed in more detail below. The illustrated QDM circuit may allow for a lossless (or nearly lossless) reduction of bandwidth by removing unused frequencies from the received signal, thus significantly reducing the amount of digital data that needs to be subsequently processed and offloaded from the chip. The bandwidth reduction achieved by these components may help to facilitate and/or improve the performance of the &#x201c;ultrasound-on-a-chip&#x201d; embodiments described herein.</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows that a QDM circuit may be implemented as two separate data streams for the imaginary (I[n]) and quadrature (Q[n]) portions of the complex input signal x[n]. Heterodyne circuit <b>610</b> includes a numerically-controlled oscillator, or any other suitable component, that may be used to generate cos(2&#x3c0;f<sub>c</sub>t) and sin(2&#x3c0;f<sub>c</sub>t), where the center frequency f<sub>c </sub>is selected to provide a particular amount of demodulation. Demodulation may phase modulate a signal to be centered at 0 Hz or bounded by some desired frequency range for filtering. In some embodiments, it may be desirable to match f<sub>c </sub>with a frequency of interest of the transducer cells that are used in the array(s) <b>102</b>. The imaginary and quadrature data streams from heterodyne circuit <b>610</b> are further processed by filtering circuit <b>612</b> and decimation circuit <b>614</b> prior to output. Filtering circuit <b>612</b> is illustrated as performing low-pass filtering (LPF). However, it should be appreciated that other types of filtering, such as band-pass filtering (BPF) and high-pass filtering (HPF) may alternatively be used in filtering circuit <b>612</b>. Example circuit architectures for providing quadrature demodulation are described in more detail below.</p><p id="p-0093" num="0092">In some embodiments of the present disclosure, a cascade integrating comb (CIC) filter architecture may be used to perform filtering (e.g., for filtering circuit <b>612</b>) and decimation (e.g., for decimation circuit <b>614</b>). For example, such a CIC filter architecture may be used to accurately calculate a range value using a precise delay time index. An illustrative CIC filter is shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. As shown, CIC filter <b>700</b> includes delay elements <b>710</b> and integrator elements <b>712</b>. The CIC filter includes a plurality (N) stages and acts as a low-pass filter, while decimating the input data stream x[n] to produce an output data stream y[n]. Increasing the number of stages results in more droop in the passband, while increasing the number of stages results in better image rejection. In some implementations, passband droop may be at least partially addressed using a compensation filter that is applied after the CIC filter has been applied to the data.</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows an illustrative circuit for performing digital signal processing, including quadrature demodulation, in accordance with some embodiments of the present disclosure. As illustrated, the circuit of <figref idref="DRAWINGS">FIG. <b>8</b></figref> includes six stages of processing implemented in digital processing circuitry. It should be appreciated that any number of digital processing stages may be included, and the six-stage implementation shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref> is provided merely for illustration. Additionally, some modes of operation of the ultrasound imaging device may employ some, but not all of the digital signal processing functionality described in <figref idref="DRAWINGS">FIG. <b>8</b></figref> to provide different amounts and/or types of compression (including no compression) for particular applications. Mode selection and subsequent activation/deactivation of digital signal processing components may be achieved using any suitable technique, including, but not limited to, the techniques described above for mode selection.</p><p id="p-0095" num="0094">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, received digital signal x[n] is first processed by heterodyne circuit <b>610</b>, which includes a pair of multiplier circuits <b>620</b>, <b>622</b>, a sine wave generator <b>824</b>, and a phase shifter element <b>826</b>. The outputs of heterodyne circuit <b>610</b> are passed to a low pass filter (LPF) <b>612</b>. In the illustrative architecture of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, LPF <b>612</b> is shown as a portion of a cascade integrating comb (CIC) filter that includes an integrator stage <b>612</b><i>a </i>and a comb stage <b>612</b><i>b</i>. It should be appreciated that any suitable low-pass filter may be used for LPF <b>612</b>, but preferably, LPF <b>612</b> should be sufficient to reject high-frequency images from the multiply operation of heterodyne circuit <b>610</b> and anti-alias the signal before the downsampling provided by decimation circuit <b>614</b>, described in more detail below.</p><p id="p-0096" num="0095">In the illustrative architecture of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the outputs of heterodyne circuit <b>610</b> are provided to the integrator stage <b>612</b><i>a </i>of the CIC filter. As shown, integrator stage <b>612</b><i>a </i>includes delay elements <b>830</b> and adder elements <b>832</b>. The outputs of the integrator stage <b>612</b><i>a </i>are passed to decimation circuit <b>614</b>, which downsamples the received digital signal by a factor M using downsampling circuits <b>840</b>. Any suitable amount of downsampling (M) may be used including, but not limited to, downsampling by M=2, 4, 6, 8, and 16. A downconversion of M=4 produces half the amount of data that was input (one-fourth the sample rate, but twice the number of data channels).</p><p id="p-0097" num="0096">The outputs of decimation circuit <b>614</b> are passed to the comb stage <b>612</b><i>b </i>of the CIC filter. As shown, comb stage <b>612</b><i>b </i>includes delay elements <b>850</b> and subtraction elements <b>852</b>. The outputs of the comb stage <b>612</b><i>b </i>are passed to re-quantization circuit <b>816</b>, where re-quantization of the digital signals is performed using re-quantization circuits <b>860</b>, as discussed in more detail below. The outputs of re-quantization circuit <b>816</b> are passed to arithmetic logic unit (ALU) <b>818</b>, which provides additional arithmetic processing, examples of which are discussed in more detail below with regard to <figref idref="DRAWINGS">FIG. <b>14</b></figref>. In some embodiments, the ALU <b>818</b> may be an optimized integrated ALU.</p><p id="p-0098" num="0097">The output of digital processing block <b>514</b> may be provided to additional processing stages (e.g., image reconstruction processing) formed on the same or different substrate as digital processing block <b>514</b>. Additionally or alternatively, the output of digital processing block <b>514</b> may be stored in a buffer memory and may be provided via an output interface to additional off-chip processing components for further processing.</p><p id="p-0099" num="0098">As discussed above, in some embodiments, digital processing block <b>514</b> may include circuitry for performing any suitable number of digital signal processing operations that provide compression of input data signal x[n], and embodiments of the present disclosure are not limited in this respect. For example, in one embodiment, digital processing block <b>514</b> may include a quadrature demodulation stage, a filtering stage, and decimation stage, and one or more of these stages may be configured to provide different levels of data compression based on the requirements of a particular imaging application.</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an illustrative polyphase architecture <b>900</b> of a QDM circuit using M=4 and a filter h[n]. The polyphase architecture <b>900</b> includes multiplier elements <b>910</b> and adder elements <b>930</b>. The components <b>920</b> h<sub>0</sub>[n], h<sub>1</sub>[n], h<sub>2</sub>[n], and h<sub>3</sub>[n], which are determined based on the filter h[n], together implement a polyphase filter. The filter h[n] may have any desired bandwidth including, but not limited to, a quarter band filter, a half-band filter, a bandpass filter, or a highpass filter. Selection of a particular filtering architecture enables sampling different Nyquist zones during downconverting of the data.</p><p id="p-0101" num="0100">In the special case of quarter rate demodulation (f<sub>c</sub>=f<sub>x</sub>/4), the digital circuitry for the demodulation portion of the circuit of <figref idref="DRAWINGS">FIG. <b>9</b></figref> may be simplified, as shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. In place of the numerically-controlled oscillator (e.g., sine wave generator <b>824</b> and phase shifter element <b>826</b>) is circuitry that samples every other element of the data stream, and then alternately inverts the samples. In some embodiments, the architecture of <figref idref="DRAWINGS">FIG. <b>10</b></figref> (e.g., clocked at a rate of f<sub>s</sub>*L/4) may be further simplified using filter coefficients of h[n]=1, which allows for reduced hardware. Such an architecture may include a pair of accumulators that can sum or subtract samples into a running sum. It should be appreciated that the running sum may saturate (e.g., clip) or wrap based on a desired configuration.</p><p id="p-0102" num="0101">Due to the pattern of zero-value samples as input to the multipliers <b>910</b> in the architecture of <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the circuitry to implement the polyphase half-band filter of <figref idref="DRAWINGS">FIG. <b>10</b></figref> may further be simplified as shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>. As shown, by removing the zero-value samples as input to the multipliers, the filters h<sub>1</sub>[n] and h<sub>3</sub>[n] may be removed in processing the signal I[m] and the filters h<sub>0</sub>[n] and h<sub>2</sub>[n] may be removed in processing the signal Q[m]. As shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the in-phase (I) component may be implemented by downsampling the input signal x[n] by a factor of two, flipping every other sample, and right-shifting the data by one sample. The same structure as for the in-phase component may also be used for the quadrature (Q) component by introducing a half sample delay as shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. More specifically, the filters h<sub>0</sub>[n] and h<sub>2</sub>[n] may be reused in place of the filters h<sub>1</sub>[n] and h<sub>3</sub>[n] by implementing the half-sample delay shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. Alternatively, the filters h<sub>1</sub>[n] and h<sub>3</sub>[n] may be reused in place of the filters h<sub>0</sub>[n] and h<sub>2</sub>[n] if the half sample delay is implemented in processing the in-phase (I) component rather than the quadrature (Q) component. Accordingly, at least a portion of the digital processing block <b>514</b> may be implemented in a digital architecture that includes an even-odd sampler <b>1202</b>, a pair of inverters <b>1204</b> including multiplier elements <b>1220</b>, a pair of right shifts <b>1206</b>, and a half sample delay <b>1208</b>. Data reduction techniques for reducing the data bandwidth may be achieved using values for M&#x3e;2, as discussed in more detail below. Examples of additional components that may, in some embodiments, be included in digital processing block <b>514</b>, in addition to or in lieu of a QDM circuit are described in further detail below.</p><p id="p-0103" num="0102">Any suitable architecture for filtering and downsampling digital representations of ultrasound signals may be used in accordance with aspects of the present disclosure. In connection with the illustrative QDM circuit architectures described above, some embodiments may provide data compression using a polyphase filtering architecture. An illustrative architecture for polyphase filtering and an implementation example with a half-band decimating filter are described below in connection with <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>13</b></figref>, described in more detail below, shows a half-band FIR filter architecture on the in-phase component of the generalized QDM circuit architecture of <figref idref="DRAWINGS">FIG. <b>9</b></figref>. In order to use the same filter structure for the quadrature component, the input to the Q component may be advanced by one sample following the multiplier, filtered and decimated, then corrected by applying a quarter-sample delay before adding I and Q. This architecture assumes a 2*L&#x2212;1 point symmetric half-band filter (i.e., h[&#x2212;(L&#x2212;1], . . . , h[L&#x2212;1], such that h[2*n]=0 for all n&#x2260;0 and h[n]&#x2212;h[&#x2212;n] for all n).</p><p id="p-0105" num="0104">As shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the input x[n] switches between two polyphase branches at a rate of f<sub>s</sub>. When the switch <b>1302</b> is attached to the bottom branch, the node <b>1310</b> latches the value, the registers (z<sup>&#x2212;1</sup>) <b>1330</b> shift, and the counter <b>1312</b> begins. The computational blocks in the architecture are clocked at a rate of f<sub>s</sub>*L/4 (e.g., the rate needed to complete L/2 multiplies within two input cycles&#x2014;assuming one clock cycle to complete each multiply). The adder <b>1314</b> and the multiplier <b>1316</b> in the adder/multiplier pair perform the filtering step by combining symmetric sides of the filter, and then multiplying by the corresponding filter coefficient (e.g., h[1], . . . , h[L&#x2212;1]) <b>1350</b>. The adder/multiplier pair cycles through each tap of the filter to sum all of the polyphase components. The result of each multiplication is sent to an accumulator comprising adder <b>1318</b> and register <b>1320</b>. Adder <b>1318</b> additionally receives values from logic element <b>1340</b>. The accumulator may be initialized with a value equal to an appropriate center tap (e.g., which may be realized by the delay of L/2&#x2212;1) when the counter is equal to zero as determined by block <b>1370</b>. When the counter <b>1312</b> reaches L/2 as determined by block <b>1360</b>, the result of the accumulator is latched to flip flop <b>1390</b>, and the value of y[n] is output.</p><p id="p-0106" num="0105">In addition to demodulation, filtering, and downsampling circuitry, other digital circuitry may also be incorporated as a portion of digital processing block <b>514</b> to provide additional or alternative modes of data compression that will facilitate and/or enhance an &#x201c;ultrasound-on-a-chip&#x201d; solution in accordance with some embodiments of the present disclosure. For example, some embodiments include re-quantization circuit <b>616</b> that performs re-quantization on the digital signal. Re-quantization may be implemented at any suitable position in the digital signal processing chain. For example, in some embodiments, re-quantization circuitry may be implemented immediately after analog-to-digital conversion. In other embodiments, re-quantization circuitry may be implemented as the last step prior to transmission of the data off-chip. In yet other embodiments, re-quantization circuitry may be implemented as an intermediate step of digital signal processing. Additionally, it should be appreciated that some embodiments may include multiple stages of re-quantization implemented at different locations in the digital signal processing chain.</p><p id="p-0107" num="0106">Any suitable re-quantization technique may be used including, but not limited to, bit truncation, rounding, and clipping. In embodiments where bit truncation is used, the number of bits in a digital signal may be truncated based, at least in part, on a truncation level indicating the number of bits to be truncated. The truncation level may be configurable based on a selected imaging mode and/or using any other suitable criteria, such as a desired image quality. For example, the truncation level may be determined based, at least in part, on a maximum bandwidth of a data stream to be output and/or expected values for the digital signal to be truncated. In some embodiments, determining the expected values for the digital signal may be based, at least in part, on one or more of data from at least one previous acquisition, data from at least one previous frame, data from at least one previous sample in a same frame, and at least one time gain compensation curve value. For example, data from previous frames may be used to determine a truncation level for plane wave imaging, and using data from previous channels may be used to determine a truncation level for focused excitations. It should be appreciated that these applications of using previously received data to determine a truncation level are provided merely for illustration and are not limiting.</p><p id="p-0108" num="0107">In embodiments where rounding is used, any suitable rounding technique may be employed including, but not limited to rounding half away from zero, rounding towards zero, always rounding up, always rounding down, rounding even up, rounding even down, rounding odd up, and rounding odd down.</p><p id="p-0109" num="0108">In some embodiments, the re-quantizing circuit may, for example, determine a maximum magnitude of the incoming signal, scale all signals up to make the maximum signal full-scale, and then discard the lower N-bits from the signal. In other embodiments, the re-quantizing circuit may additionally or alternatively convert the signal to log space and keep only N bits of the signal. In yet other embodiments, the re-quantizing circuit may additionally or alternatively employ one or more of Huffman coding, arithmetic encoding, or vector quantization techniques. In yet other embodiments, noise shaping may be used. Noise-shaping circuitry feeds the error(s) between the actual and re-quantized value back into the input (either directly or indirectly, e.g., via a filter).</p><p id="p-0110" num="0109">In some embodiments in which the ultrasound device is configured to employ coded-excitation pulses or linear frequency modulated (LFM) pulses, the receive-path signal processing electronics may include a stage that compresses the pulse as the emitted ultrasound waveform with a cross-correlation using a matched or mismatched filter. Pulse compression may be implemented using any suitable filter architecture including, but not limited to, using an finite impulse response (FIR) filter and using components to implement a Fast Fourier Transform (FFT), multiply, inverse Fast Fourier Transform (IFFT) algorithm.</p><p id="p-0111" num="0110">Additional data compression may be achieved in some embodiments by an integrated optimized arithmetic processing circuit. <figref idref="DRAWINGS">FIG. <b>14</b></figref> shows an illustrative architecture for an arithmetic logic unit (ALU) <b>618</b> that may be included as a portion of digital processing block <b>514</b>. ALU <b>618</b> may be configured to perform arithmetic processing of a digital signal to provide data compression. In the illustrative architecture of <figref idref="DRAWINGS">FIG. <b>14</b></figref>, ALU <b>618</b> includes a sample memory <b>1410</b> and digital circuit components such as adder <b>1412</b> and multipliers <b>1414</b>, <b>1416</b>, that may be used to perform one or more digital signal processing operations including, but not limited to, extending a word size, bit shifting, and accumulating. It should be appreciated that some implementations of ALU <b>618</b> may be configured to allow for flexibility for buffer saturation (e.g., clipping), wrapping, or sign extension. In some embodiments, ALU <b>618</b> may be configured to operate on the output of each channel in a module, as described above. Alternatively, ALU <b>618</b> may be configured to operate on the output of multiple channels in a module to, for example, perform a digital column sum. Arithmetic operations performed by ALU <b>618</b> in accordance with some embodiments of the present disclosure may be used to provide one or more of the following: data reduction, increase of signal to noise ratio, cancellation mode imaging, and harmonic imaging. In some embodiments, ALU <b>618</b> may alternatively be provided off-chip rather than being integrated on-chip.</p><p id="p-0112" num="0111">Illustrative Image Reconstruction Compression Architectures</p><p id="p-0113" num="0112">Some embodiments in accordance with the present disclosure include on-chip and/or off-chip circuitry for performing at least a portion of an image reconstruction process from digital representations of output from a plurality of integrated ultrasonic transducers. For example, as shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, signal conditioning/processing circuit <b>110</b> may include image reconstruction circuitry <b>134</b> configured to receive a stream of data from MUX <b>142</b> or other suitable circuitry components for selecting channel-specific data corresponding to the outputs of the plurality of RX control circuits <b>106</b>. As discussed in more detail below, image reconstruction circuitry <b>134</b> may include on-chip (or off-chip) architectures for performing at least a portion of an image reconstruction process. By performing all or a portion of an image reconstruction process on-chip, an amount of data needed to be transferred off-chip may be significantly reduced, while still providing for reconstruction of images of an acceptable quality for a particular imaging application. Additionally, in some embodiments, output from the at least a portion of the image reconstruction process may be further compressed prior to being transferred off-chip. For example, as shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, signal conditioning and processing circuit <b>110</b> includes post-processing compression circuitry <b>136</b> that compresses the output of at least a portion of an image reconstruction process using image reconstruction circuitry <b>134</b>. Post-processing compression circuitry <b>136</b> may include, for example, circuitry for outputting, for example, at least a portion of a reconstructed image at a desired (e.g., lower) resolution, and the output resolution may be selected based, at least in part, on one or more display and/or processing characteristics of an external device connected to the ultrasound imager <b>100</b>. Alternatively, the output resolution may be selected using any other suitable criteria.</p><p id="p-0114" num="0113">An example of an illustrative technique for performing at least a portion of an on-chip image reconstruction process involves using beamforming, which can be used to form 2D and/or 3D images. One feature of on-chip beamforming architectures is that a 3D image may be formed in a separable manner where one direction of the image is beamformed and another orthogonal direction is subsequently beamformed. For example, 3D beamforming may be accomplished with two 2D beamforming stages, where none, one, or both of the 2D beamforming steps is performed on-chip. The beamforming architectures described in more detail below also accommodate 2D beamforming in cases where the beam is focused in elevation on transmit and/or receive.</p><p id="p-0115" num="0114">Integrated backprojection is a technique by which acoustic pressure signals are projected back to isotemporal curves based on the time of flight to produce at least a portion of an image. In an example backprojection algorithm, an ultrasound wave having a well-defined wavefront is assumed, so that the time relative to an arbitrary start time at which the wavefront passes through a point in the target scene can be determined. For any point, the time at which a spherical wave originating from a point will take to pass through a receiver may also be determined. The time it takes for a wave scattered by the point to reach the receiver can then be calculated.</p><p id="p-0116" num="0115">Assuming that an ultrasound wave having a well-defined wavefront has been excited, the time &#x3a3;<sub>tx</sub>(r), relative to an arbitrary start time, at which the wavefront passes through a point r=(x,z)<sup>T </sup>in the target scene can be calculated. For any point, the time &#x3c4;<sub>tx</sub>(r,r<sub>k</sub>) at which a spherical wave originating from a point at r will take to pass through receiver k=0, . . . ,N&#x2212;1 positioned at r<sub>k </sub>can also be calculated. The time it takes for a wave scattered by a point r to reach receiver k, is then:</p><p id="p-0117" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x3c4;(<i>r,r</i><sub>k</sub>)=&#x3c4;<sub>tx</sub>(<i>r</i>)+&#x3c4;<sub>tx</sub>(<i>r,r</i><sub>k</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0118" num="0116">Each receiver will digitize the waves scattered by the entire scene and produce a signal channel x<sub>k </sub>(t). This signal is assumed to be a complex RF signal (e.g., complex analytic). The fundamental concept behind back-projection is to project the data x<sub>k </sub>(t) from each point r to all locations in the target scene that could have produced a scattered wave that would coincide with receiver k at time t, given the excitation parameters. This is typically implemented by computing for each receiver k, the sample x<sub>k </sub>(&#x3c4;(r,r<sub>k</sub>)) for each corresponding point r by performing a weighted sum of these values over each channel as:</p><p id="p-0119" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>y</mi>      <mo>&#x2061;</mo>      <mo>(</mo>      <mi>r</mi>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <munderover>       <mo>&#x2211;</mo>       <mrow>        <mi>k</mi>        <mo>=</mo>        <mn>0</mn>       </mrow>       <mrow>        <mi>N</mi>        <mo>-</mo>        <mn>1</mn>       </mrow>      </munderover>      <mrow>       <mrow>        <mi>a</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mi>r</mi>         <mo>,</mo>         <msub>          <mi>r</mi>          <mi>k</mi>         </msub>        </mrow>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mrow>        <mrow>         <msub>          <mi>x</mi>          <mi>k</mi>         </msub>         <mo>(</mo>         <mrow>          <mi>&#x3c4;</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <mi>r</mi>           <mo>,</mo>           <msub>            <mi>r</mi>            <mi>k</mi>           </msub>          </mrow>          <mo>)</mo>         </mrow>         <mo>)</mo>        </mrow>        <mo>.</mo>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>2</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0120" num="0000">The function a (r, r<sub>k</sub>) is known as the spatial apodization function and is optionally used. According to one example of a digital implementation, both space and time are discretized: r<sub>ij</sub>=(i&#x394;x, j&#x394;z) and t<sub>n</sub>=nT, where &#x394;x, &#x394;z, and T are the lateral spacing, range spacing, and RF sampling periods, respectively. The spatial discretization implies that there are a finite number of points to compute (N<sub>x</sub>&#xd7;N<sub>z</sub>) for the image y [i, j], and the discretization in time implies that interpolation should be performed to extract the values x<sub>k </sub>(t<sub>n</sub>) from the discrete signals x<sub>k </sub>[m].</p><p id="p-0121" num="0117">Each receiver digitizes the waves scattered by the entire scene and produce a signal channel. This signal may be assumed to be a complex RF signal (i.e., complex analytic). The fundamental concept behind back-projection is to project the data from each point to all locations in the target scene that could have produced a scattered wave that would coincide with a receiver at particular time, given the excitation parameters. This may be implemented by computing, for each receiver channel, the corresponding time sample in the measured signal for each point in the image and performing a weighted sum of these values over each channel.</p><p id="p-0122" num="0118">Backprojection relies on the coherent summation of received waveforms. Critical to this coherency is the proper temporal alignment of the received waveforms. Since sampled signals are used for image reconstruction, the ability to use discrete shifts to properly align the signals is limited. When the sampled data is minimally oversampled, it is often necessary to use fractional sample delays realized by the interpolation of the receive waveform to achieve high-quality backprojected images.</p><p id="p-0123" num="0119">One efficient way to realize a high-speed backprojection algorithm in digital circuitry is to parallelize the computation across channels, so that each RF channel independently and/or simultaneously backprojects its data to an image domain or intermediate domain.</p><p id="p-0124" num="0120">One illustrative technique designed in the architecture is to exploit a shift-invariance on time-of-flight (TOF) and/or apodization for memory re-use. This is because the interpolation indices, based on TOF, depend on the relative position of the transducer and each image point. Therefore, in one embodiment, the receiver TOF and/or receive apodization values may be re-used for subsequent computations within a scan. Similarly, the transmit TOF and/or transmit apodization values may be reused within consecutive scans, for example, when values exhibit shift-invariance. Optionally, the apodization may be restricted, simplifying or eliminating the need for a multiplier circuit and memory, e.g., restricted to 0's and 1's.</p><p id="p-0125" num="0121">Illustrative architectures for image processing may also make use of any number of intermediate buffers, which represent images before compounding them. Another non-limiting technique that may be used with embodiments of the present disclosure is the reuse of image buffer memory when calculating the image, reducing or eliminating the need for intermediate buffers.</p><p id="p-0126" num="0122">Two non-limiting example architectures for realizing such a high-speed back-projection algorithm are described herein. One distributes the same receive time-of-flight information to all channels simultaneously; the other shifts the receive time-of-flight information from element-to-element sequentially. Examples of both of these architectures are described in more detail below.</p><p id="p-0127" num="0123"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows an illustrative architecture <b>1500</b> for implementing a back-projection algorithm in accordance with some embodiments of the present disclosure. In this illustrated embodiment, the buffers <b>1510</b> are implemented as independent memories. Arrows going into the buffers are connected to the write port, and arrows leaving the buffers are coming from the read port.</p><p id="p-0128" num="0124">For simplicity, it is assumed that the address read is the same as the address written. It should be appreciated, however, that this does not necessarily need to be the case (e.g., often one or more register delays are required, effecting a register delay between address and read). In certain implementations, for example, the data written could be offset from the data read resulting in a circular shift of the data in the buffer. Alternatively, the memory could be clocked at a higher rate than the processing so that reads and writes can happen on different clock cycles.</p><p id="p-0129" num="0125">The backprojection algorithm is implemented by sequentially computing an inner loop for each depth index in the buffer and an outer loop for each iteration index. The number of iterations can be proportional to the number of buffers used, however, it should be appreciated that the number of iterations may be reduced by considering the spatial support of the receive apodization.</p><p id="p-0130" num="0126">One non-limiting example of sequencing may be as follows: (1) The transmit TOF is loaded from the Transmit TOF memory <b>1520</b> down to a memory block, (2) For each inner loop cycle, a single address counter controls the read/write locations of all buffers, as well as the apodization <b>1522</b>, receive TOF <b>1524</b>, and transmit TOF <b>1520</b> memories. The receive TOF values and apodization values can be shared among all subsystems. It should be noted that TOF values and/or apodization values may equivalently be computed during operation as opposed to pre-computed and stored in memory.</p><p id="p-0131" num="0127">The core of the algorithm is implemented by the adder and multiplier in each subsystem (e.g., adder <b>1530</b> and multiplier <b>1532</b>). RF data (IQ) <b>1575</b> is received as input. The multiplier (e.g., multiplier <b>1532</b>) takes in the interpolated signal value <b>1502</b> provided from interpolator <b>1580</b> and receive apodization value <b>1504</b> and produces an apodized signal <b>1540</b>, which the adder (e.g., adder <b>1530</b>) then combines with the previous buffer value from the subsystem immediately to the right (e.g., buffer <b>1550</b>) and writes the combined value into its corresponding buffer (e.g., buffer <b>1560</b>).</p><p id="p-0132" num="0128">The transmit TOF block <b>1520</b>, meanwhile, is continually loading in the remaining transmit TOF values. At a particular time, the last transmit TOF value relevant for the current frame will have been written into a buffer. After this time, transmit TOF values for the next excitation begin loading into the transmit TOF buffers. Both the image buffer values and the transmit TOF values are read and shifted to the left subsystem, and can be shifted in a separate set of buffers in the same way as the image values are shifted. Alternatively, the image buffer values and the transmit TOF values can be bitwise concatenated and stored in the same memory, thereby simplifying the layout and design.</p><p id="p-0133" num="0129">The transmit apodization <b>1570</b> is multiplied onto the image columns as each column passes by the final element in the transducer. At this point the magnitude of the complex, reconstructed data may be determined thereby reducing the data stored by a factor of two.</p><p id="p-0134" num="0130">After forming one frame (e.g., a single 2D image of a 3D reconstruction), the image can be extracted and presented for display or further processing. However, if the process is continued without extracting the waveform or resetting the buffers, a coherent compounding of the next acquisition onto the current image will begin. If this is desired, or acceptable, then a large savings can be made by waiting until all excitations needed for a complete frame are finished before extraction and reset of the buffers.</p><p id="p-0135" num="0131">The approach outlined above has several advantages. For example, it does not use any large multiplexers and the amount of time taken to form an image is a function of the number of pixels/voxels in that image/volume only.</p><p id="p-0136" num="0132"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows an alternative architecture <b>1600</b> for implementing a back-projection algorithm in accordance with some embodiments of the present disclosure. As shown, back-projection architecture <b>1600</b> receives RF data (IQ) <b>1620</b> as input and includes interpolator elements <b>1630</b>, multiplier elements <b>1632</b>, adder elements <b>1636</b>, and buffer elements <b>1616</b> and <b>1640</b>. In some embodiments, one or more of buffer elements <b>1640</b> (e.g., the receive apodization buffers) may have a variable amount of buffer elements to allow a finer imaging grid. The illustrative architecture <b>1600</b> also includes input buffers for transmit apodization values <b>1614</b> and receive apodization values <b>1618</b>. In this illustrated embodiment, rather than distributing a single receive time-of-flight value to all elements simultaneously, the receive time-of-flight information <b>1610</b> is shifted across the array in the same manner as the transmit time-of-flight information <b>1612</b> but at half the rate. It should be appreciated that the receive TOF may be alternatively be implemented such that values may be shifted in any rate or direction with adequate buffers to yield similar results. The rate change may be accomplished with an additional buffer between each element, as shown.</p><p id="p-0137" num="0133">The (2N&#x2212;1) receive TOF buffers may be initialized according to:</p><p id="p-0138" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mrow>  <mrow>   <msub>    <mi>R</mi>    <mi>n</mi>   </msub>   <mo>[</mo>   <mi>j</mi>   <mo>]</mo>  </mrow>  <mo>=</mo>  <mrow>   <mo>{</mo>   <mtable>    <mtr>     <mtd>      <mrow>       <mrow>        <msub>         <mi>&#x3c4;</mi>         <mi>rx</mi>        </msub>        <mo>[</mo>        <mrow>         <mi>n</mi>         <mo>,</mo>         <mi>j</mi>        </mrow>        <mo>]</mo>       </mrow>       <mo>,</mo>      </mrow>     </mtd>     <mtd>      <mrow>       <mn>0</mn>       <mo>&#x2264;</mo>       <mi>n</mi>       <mo>&#x3c;</mo>       <mi>N</mi>      </mrow>     </mtd>    </mtr>    <mtr>     <mtd>      <mrow>       <mrow>        <msub>         <mi>&#x3c4;</mi>         <mi>rx</mi>        </msub>        <mo>[</mo>        <mrow>         <mrow>          <mrow>           <mn>2</mn>           <mo>&#x2062;</mo>           <mi>N</mi>          </mrow>          <mo>-</mo>          <mn>1</mn>          <mo>-</mo>          <mi>n</mi>         </mrow>         <mo>,</mo>         <mi>j</mi>        </mrow>        <mo>]</mo>       </mrow>       <mo>,</mo>      </mrow>     </mtd>     <mtd>      <mrow>       <mi>N</mi>       <mo>&#x2264;</mo>       <mi>n</mi>       <mo>&#x3c;</mo>       <mrow>        <mrow>         <mn>2</mn>         <mo>&#x2062;</mo>         <mi>N</mi>        </mrow>        <mo>-</mo>        <mn>1</mn>       </mrow>      </mrow>     </mtd>    </mtr>   </mtable>  </mrow> </mrow></math></maths></p><p id="p-0139" num="0134">The N transmit TOF buffers may be initialized according to:</p><p id="p-0140" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mrow>  <mrow>   <msub>    <mi>T</mi>    <mi>n</mi>   </msub>   <mo>[</mo>   <mi>j</mi>   <mo>]</mo>  </mrow>  <mo>=</mo>  <mrow>   <mo>{</mo>   <mtable>    <mtr>     <mtd>      <mrow>       <mrow>        <msub>         <mi>&#x3c4;</mi>         <mi>tx</mi>        </msub>        <mo>[</mo>        <mrow>         <mn>0</mn>         <mo>,</mo>         <mi>j</mi>        </mrow>        <mo>]</mo>       </mrow>       <mo>,</mo>      </mrow>     </mtd>     <mtd>      <mrow>       <mi>n</mi>       <mo>=</mo>       <mn>0</mn>      </mrow>     </mtd>    </mtr>    <mtr>     <mtd>      <mrow>       <mrow>        <msub>         <mi>&#x3c4;</mi>         <mi>tx</mi>        </msub>        <mo>[</mo>        <mrow>         <mrow>          <mi>N</mi>          <mo>-</mo>          <mi>n</mi>         </mrow>         <mo>,</mo>         <mi>j</mi>        </mrow>        <mo>]</mo>       </mrow>       <mo>,</mo>      </mrow>     </mtd>     <mtd>      <mrow>       <mn>1</mn>       <mo>&#x2264;</mo>       <mi>n</mi>       <mo>&#x3c;</mo>       <mi>N</mi>      </mrow>     </mtd>    </mtr>   </mtable>  </mrow> </mrow></math></maths></p><p id="p-0141" num="0135">An example loading scheme for receive parameters is illustrated in the table below:</p><p id="p-0142" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="49pt" align="center"/><colspec colname="3" colwidth="49pt" align="center"/><colspec colname="4" colwidth="49pt" align="center"/><colspec colname="5" colwidth="35pt" align="left"/><thead><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row><row><entry>Iteration</entry><entry>Element 0</entry><entry>Element 1</entry><entry>Element 2</entry><entry>Element 3</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="8"><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="28pt" align="left"/><colspec colname="3" colwidth="21pt" align="left"/><colspec colname="4" colwidth="28pt" align="left"/><colspec colname="5" colwidth="21pt" align="left"/><colspec colname="6" colwidth="28pt" align="left"/><colspec colname="7" colwidth="21pt" align="left"/><colspec colname="8" colwidth="35pt" align="left"/><tbody valign="top"><row><entry>1</entry><entry>R<sub>1</sub>[j]</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>1</sub>[j]</entry><entry>R<sub>0</sub>[j] (0)</entry></row><row><entry>2</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>1</sub>[j] (0)</entry><entry>R<sub>0</sub>[j]</entry><entry>R<sub>1</sub>[j] (1)</entry></row><row><entry>3</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>2</sub>[j] (0)</entry><entry>R<sub>1</sub>[j]</entry><entry>R<sub>0</sub>[j] (1)</entry><entry>R<sub>1</sub>[j]</entry><entry>R<sub>2</sub>[j] (2)</entry></row><row><entry>4</entry><entry>R<sub>3</sub>[j] (0)</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>1</sub>[j] (1)</entry><entry>R<sub>0</sub>[j]</entry><entry>R<sub>1</sub>[j] (2)</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>3</sub>[j] (3)</entry></row><row><entry>5</entry><entry>R<sub>2</sub>[j] (1)</entry><entry>R<sub>1</sub>[j]</entry><entry>R<sub>0</sub>[j] (2)</entry><entry>R<sub>1</sub>[j]</entry><entry>R<sub>2</sub>[j] (3)</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry></row><row><entry>6</entry><entry>R<sub>1</sub>[j] (2)</entry><entry>R<sub>0</sub>[j]</entry><entry>R<sub>1</sub>[j] (3)</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>2</sub>[j]</entry></row><row><entry>7</entry><entry>R<sub>0</sub>[j] (3)</entry><entry>R<sub>1</sub>[j]</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>3</sub>[j]</entry><entry>R<sub>2</sub>[j]</entry><entry>R<sub>1</sub>[j]</entry></row><row><entry namest="1" nameend="8" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0143" num="0136">The legend for the cell marked with a bracketed numeral (such as (0)) in the table above is as follows:</p><p id="p-0144" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="56pt" align="left"/><colspec colname="2" colwidth="56pt" align="left"/><colspec colname="3" colwidth="56pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><thead><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>(0): Column 0</entry><entry>(1): Column 1</entry><entry>(2): Column 2</entry><entry>(3): Column 3</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0145" num="0137">An example loading scheme for transmit parameters is illustrated in the table below:</p><p id="p-0146" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="49pt" align="center"/><colspec colname="2" colwidth="42pt" align="left"/><colspec colname="3" colwidth="42pt" align="left"/><colspec colname="4" colwidth="42pt" align="left"/><colspec colname="5" colwidth="42pt" align="left"/><thead><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row><row><entry>Iteration</entry><entry>Element 0</entry><entry>Element 1</entry><entry>Element 2</entry><entry>Element 3</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>1</entry><entry>T<sub>1</sub>[j]</entry><entry>T<sub>2</sub>[j]</entry><entry>T<sub>3</sub>[j]</entry><entry>T<sub>0</sub>[j]</entry></row><row><entry>2</entry><entry>T<sub>2</sub>[j]</entry><entry>T<sub>3</sub>[j]</entry><entry>T<sub>0</sub>[j]</entry><entry>T<sub>1</sub>[j]</entry></row><row><entry>3</entry><entry>T<sub>3</sub>[j]</entry><entry>T<sub>0</sub>[j]</entry><entry>T<sub>1</sub>[j]</entry><entry>T<sub>2</sub>[j]</entry></row><row><entry>4</entry><entry>T<sub>0</sub>[j]</entry><entry>T<sub>1</sub>[j]</entry><entry>T<sub>2</sub>[j]</entry><entry>T<sub>3</sub>[j]</entry></row><row><entry>5</entry><entry>T<sub>1</sub>[j]</entry><entry>T<sub>2</sub>[j]</entry><entry>T<sub>3</sub>[j]</entry><entry>T<sub>0</sub>[j]</entry></row><row><entry>6</entry><entry>T<sub>2</sub>[j]</entry><entry>T<sub>3</sub>[j]</entry><entry>T<sub>0</sub>[j]</entry><entry>T<sub>1</sub>[j]</entry></row><row><entry>7</entry><entry>T<sub>3</sub>[j]</entry><entry>T<sub>0</sub>[j]</entry><entry>T<sub>1</sub>[j]</entry><entry>T<sub>2</sub>[j]</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0147" num="0138">The illustrative back-projection architectures described above are described with respect to a two-dimensional image reconstruction processor. The architecture may be extended to three-dimensions by using a tomographic approach (i.e., building the third dimension as slices), or by using any other suitable technique.</p><p id="p-0148" num="0139">Some embodiments may be configured to employ Doppler imaging, which compresses data using ensemble compression. Doppler processing attempts to measure velocities in tissue by observing phase shifts in multiple echoes across time. A Doppler imaging sequence consists of multiple data acquisition frames termed an ensemble. The length of a Doppler ensemble (also called packet size) is typically 8 to 16 frames.</p><p id="p-0149" num="0140">The signal from a single point of interest can be represented as S(t)=A<sub>1</sub>e<sup>i&#x3d5;</sup><sup><sub2>0</sub2></sup>+A<sub>2</sub>e<sup>i&#x3d5;</sup><sup><sub2>1</sub2></sup><sup>(t)</sup>, where S(t) is the point of interest in the reconstructed images as a function of time, the A<sub>1 </sub>term represents background scattering from immobile tissue source, and the A<sub>2 </sub>term represents the changing signal due to a moving scatterer. A challenge with Doppler processing is due to the magnitude of the difference between A<sub>1 </sub>and A<sub>2</sub>. The magnitude of the difference depends on the imaged tissue. For example, in the kidney, A<sub>1 </sub>may be up to 40 dB larger than A) due to the small size of the vessels containing the flowing blood; the echo signals simultaneously contain both tissue and blood scattering. In the carotid artery the difference between A<sub>1 </sub>and A<sub>2 </sub>is far smaller. For example, the A<sub>1 </sub>term may be zero in certain areas as the large vessel allows the complete isolation of blood backscatter and tissue backscatter. Isolating A<sub>2 </sub>from A<sub>1 </sub>requires a wall filter (also referred to as a clutter filter) and is described in more detail below.</p><p id="p-0150" num="0141">Multiple acquisitions of data provide ensembles for Doppler processing at a designated pulse repetition frequency (PRF). From this set of ensembles, velocities can be calculated. Often a wall filter is implemented to remove the non-moving scene scatterers, where the data has first been beamformed. This wall filter may be implemented, for example, with a Finite Impulse Response (FIR) filter or a matrix multiply across the ensembles. Other options for a wall filter include, but are not limited to, an Infinite Impulse Response (IIR) and a filter via. Fast Fourier Transform (FFT). The beamformed image for an ensemble of m=0 . . . M&#x2212;1 images is given by Y=y (r,m). The wall filtered data is given by:</p><p id="p-0151" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mrow>  <msub>   <mi>Y</mi>   <mi>w</mi>  </msub>  <mo>=</mo>  <mi>YW</mi> </mrow></math></maths><maths id="MATH-US-00004-2" num="00004.2"><math overflow="scroll"> <mrow>  <mrow>   <msub>    <mi>y</mi>    <mi>w</mi>   </msub>   <mo>(</mo>   <mrow>    <mi>r</mi>    <mo>,</mo>    <mi>n</mi>   </mrow>   <mo>)</mo>  </mrow>  <mo>=</mo>  <mrow>   <munderover>    <mo>&#x2211;</mo>    <mrow>     <mi>m</mi>     <mo>=</mo>     <mn>0</mn>    </mrow>    <mrow>     <mi>M</mi>     <mo>=</mo>     <mn>1</mn>    </mrow>   </munderover>   <mrow>    <mrow>     <mi>y</mi>     <mo>&#x2061;</mo>     <mo>(</mo>     <mrow>      <mi>r</mi>      <mo>,</mo>      <mi>m</mi>     </mrow>     <mo>)</mo>    </mrow>    <mo>&#x2062;</mo>    <mrow>     <mi>w</mi>     <mo>&#x2061;</mo>     <mo>(</mo>     <mrow>      <mi>m</mi>      <mo>,</mo>      <mi>n</mi>     </mrow>     <mo>)</mo>    </mrow>   </mrow>  </mrow> </mrow></math></maths></p><p id="p-0152" num="0142">where w(m,n) is the wall filter, a M&#xd7;N<sub>t </sub>2D matrix with M filter values is used to remove the low frequencies, and N<sub>t </sub>filters are used to calculate autocorrelation values. In the simplest case, N<sub>t</sub>=M though it should be appreciated that other values of N<sub>t </sub>may alternatively be used. When designing and implementing a wall filter, one should be mindful of whether the filter response is a square or non-square matrix.</p><p id="p-0153" num="0143">After the wall filter, an autocorrelation function can be used to find the power of the flow and/or the direction of the flow. A lag-0 autocorrelation provides a power calculation and a lag-1 autocorrelation provides a flow calculation. (Note: lag-1 autocorrelation may provide sufficient power and color flow Doppler). The lag-1 autocorrelation is given by:</p><p id="p-0154" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>R</i><sub>1</sub>(<i>r</i>,&#x3c4;)=<i>y</i><sub>w</sub>(<i>r,&#x3c4;+</i>1)<i>y</i><sub>w</sub>*(<i>r</i>,&#x3c4;), where &#x3c4;=<b>1</b> . . . <i>N</i><sub>t</sub>&#x2212;1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0155" num="0144">If it is assumed that y<sub>w</sub>(r,&#x3c4;)=s(r)e<sup>i&#x3d5;&#x3c4;</sup>, where e<sup>i&#x3d5;&#x3c4;</sup> represents the phase change due to motion between frames, the phase of the lag-1 correlation values is equal to &#x3d5;.</p><p id="p-0156" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>R</i><sub>1</sub>(<i>r</i>,&#x3c4;)=<i>y</i><sub>w</sub>(<i>r,&#x3c4;+</i>1)<i>y</i><sub>w</sub>*(<i>r</i>,&#x3c4;)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0157" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>R</i><sub>1</sub>(<i>r</i>,&#x3c4;)=<i>s</i>(<i>r</i>)<i>e</i><sub>i&#x3d5;(&#x3c4;+1)</sub><i>s</i>*(<i>r</i>)<i>e</i><sup>&#x2212;i&#x3d5;&#x3c4;</sup><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0158" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>R</i><sub>1</sub>(<i>r</i>,&#x3c4;)=|<i>s</i>(<i>r</i>)|<sup>2</sup><i>e</i><sup>i&#x3d5;</sup><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0159" num="0145">Finally the average value of the lag-1 autocorrelation provides an estimate of velocity (or power for lag-0) for each point r. The mean value is calculated by first taking the sum and then dividing by N<sub>t</sub>&#x2212;1. The Doppler signal is thus given by:</p><p id="p-0160" num="0000"><maths id="MATH-US-00005" num="00005"><math overflow="scroll"> <mrow>  <mrow>   <mi>D</mi>   <mo>&#x2061;</mo>   <mo>(</mo>   <mi>r</mi>   <mo>)</mo>  </mrow>  <mo>=</mo>  <mrow>   <mfrac>    <mn>1</mn>    <mrow>     <msub>      <mi>N</mi>      <mi>t</mi>     </msub>     <mo>-</mo>     <mn>1</mn>    </mrow>   </mfrac>   <mo>&#x2062;</mo>   <mrow>    <munderover>     <mo>&#x2211;</mo>     <mrow>      <mi>k</mi>      <mo>=</mo>      <mn>0</mn>     </mrow>     <mrow>      <msub>       <mi>N</mi>       <mi>t</mi>      </msub>      <mo>-</mo>      <mn>2</mn>     </mrow>    </munderover>    <mrow>     <msub>      <mi>R</mi>      <mn>1</mn>     </msub>     <mo>(</mo>     <mrow>      <mi>r</mi>      <mo>,</mo>      <mi>k</mi>     </mrow>     <mo>)</mo>    </mrow>   </mrow>  </mrow> </mrow></math></maths></p><p id="p-0161" num="0146">In a digital implementation, space is discretized: r<sub>ij</sub>=(i&#x394;x, j&#x394;z), where &#x394;x, &#x394;z are the lateral spacing and range spacing, respectively. The spatial discretization implies that there are a finite number of points to compute (N<sub>x</sub>&#xd7;N<sub>z</sub>) for the backscatter image y[i,j] and Doppler image D [i,j].</p><p id="p-0162" num="0147"><figref idref="DRAWINGS">FIG. <b>17</b></figref> shows an illustrative architecture <b>1700</b> for performing Doppler imaging using ensemble compression in accordance with some embodiments of the present disclosure. In the illustrated architecture the hardware of a backprojection architecture (e.g., backprojection architectures shown in <figref idref="DRAWINGS">FIGS. <b>15</b> and <b>16</b></figref>) is used to perform the wall filter for all ensembles. After this, when the data is provided off-chip using a data stream, a register <b>1750</b> and an adder <b>1720</b> (which together make an accumulator) and a complex multiplier <b>1710</b> are used to calculate the lag-1 autocorrelation and finally the Doppler values. As shown, Doppler imaging architecture <b>1700</b> also includes delay element <b>1730</b> and complex conjugate element <b>1740</b>.</p><p id="p-0163" num="0148">Backprojection architectures allow for matrix multiplication with appropriate order of operations and reuse of memory. As an example, the Doppler wall filtering matrix multiply may be accomplished within the backprojection architecture by storing the matrix coefficients within the receive apodization memory and storing the ordered indices in the receive TOP memory (see table below for example orders). In this instance, the receive TOP values repeat the same index consecutively into the RE buffer for the number of ensembles. In particular, the values in the receive apodization buffer include values of the wall filter matrix to be multiplied with each ensemble value. Once the wall filter values have been multiplied for a single excitation, the buffer values pass unchanged through the backprojection pipeline. The buffer values are fed back such that the remaining values of the ensemble are multiplied by the next coefficients of the wall filter. This process is repeated until the matrix multiply is complete. For the Doppler calculations, another processing unit may be used to process the data as the computed values exit the buffer. An example of this processing unit is seen in architecture <b>1700</b> and performs the operations described in the equations above to calculate the values in D[i,j]. The data is loaded into a register and multiplied such that an autocorrelation of lag-1 is computed and results are summed over the number of ensembles collected (minus 1 for the lag difference). Note that any number of registers <b>1730</b> may be used or multiplexed to form any desirable lag autocorrelation.</p><p id="p-0164" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="63pt" align="center"/><colspec colname="3" colwidth="63pt" align="center"/><colspec colname="4" colwidth="21pt" align="center"/><colspec colname="5" colwidth="63pt" align="center"/><colspec colname="6" colwidth="63pt" align="center"/><thead><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row><row><entry>Row/</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>Col</entry><entry>0</entry><entry>1</entry><entry>. . .</entry><entry>14</entry><entry>15</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>0</entry><entry>y(r<sub>(0, 0)</sub>, 0)w(0, 0)</entry><entry>y(r<sub>(0, 1)</sub>, 0)w(0, 0)</entry><entry>. . .</entry><entry>y(r<sub>(0, 14)</sub>, 0)w(0, 0)</entry><entry>y(r<sub>(0, 15)</sub>, 0)w(0, 0)</entry></row><row><entry>1</entry><entry>y(r<sub>(0, 0)</sub>, 0)w(0, 1)</entry><entry>y(r<sub>(0, 1)</sub>, 0)w(0, 1)</entry><entry>. . .</entry><entry>y(r<sub>(0, 14)</sub>, 0)w(0, 1)</entry><entry>y(r<sub>(0, 15)</sub>, 0)w(0, 0)</entry></row><row><entry>. . .</entry><entry/><entry/><entry>. . .</entry><entry/><entry/></row><row><entry>6</entry><entry>y(r<sub>(0, 0)</sub>, 0)w(0, 6)</entry><entry>y(r<sub>(0, 1)</sub>, 0)w(0, 6)</entry><entry>. . .</entry><entry>y(r<sub>(0, 14)</sub>, 0)w(0, 6)</entry><entry>y(r<sub>(0, 15)</sub>, 0)w(0, 6)</entry></row><row><entry>7</entry><entry>y(r<sub>(0, 0)</sub>, 0)w(0, 7)</entry><entry>y(r<sub>(0, 1)</sub>, 0)w(0, 7)</entry><entry>. . .</entry><entry>y(r<sub>(0, 14)</sub>, 0)w(0, 7)</entry><entry>y(r<sub>(0, 15)</sub>, 0)w(0, 7)</entry></row><row><entry>8</entry><entry>y(r<sub>(1, 0)</sub>, 0)w(0, 0)</entry><entry>y(r<sub>(1, 1)</sub>, 0)w(0, 0)</entry><entry>. . .</entry><entry>y(r<sub>(1, 14)</sub>, 0)w(0, 0)</entry><entry>y(r<sub>(1, 15)</sub>, 0)w(0, 0)</entry></row><row><entry>9</entry><entry>y(r<sub>(1, 0)</sub>, 0)w(0, 1)</entry><entry>y(r<sub>(1, 1)</sub>, 0)w(0, 1)</entry><entry>. . .</entry><entry>y(r<sub>(1, 14)</sub>, 0)w(0, 1)</entry><entry>y(r<sub>(1, 15)</sub>, 0)w(0, 0)</entry></row><row><entry>. . .</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>14</entry><entry>y(r<sub>(1, 0)</sub>, 0)w(0, 6)</entry><entry>y(r<sub>(1, 1)</sub>, 0)w(0, 6)</entry><entry>. . .</entry><entry>y(r<sub>(1, 14)</sub>, 0)w(0, 6)</entry><entry>y(r<sub>(1, 15)</sub>, 0)w(0, 6)</entry></row><row><entry>15</entry><entry>y(r<sub>(1, 0)</sub>, 0)w(0, 7)</entry><entry>y(r<sub>(1, 1)</sub>, 0)w(0, 7)</entry><entry>. . .</entry><entry>y(r<sub>(1, 14)</sub>, 0)w(0, 7)</entry><entry>y(r<sub>(1, 15)</sub>, 0)w(0, 7)</entry></row><row><entry>. . .</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>504</entry><entry>y(r<sub>(63, 0)</sub>, 0)w(0, 0)</entry><entry>y(r<sub>(63, 1)</sub>, 0)w(0, 0)</entry><entry>. . .</entry><entry>y(r<sub>(63, 14)</sub>, 0)w(0, 0)</entry><entry>y(r<sub>(63, 15)</sub>, 0)w(0, 0)</entry></row><row><entry>505</entry><entry>y(r<sub>(63, 0)</sub>, 0)w(0, 1)</entry><entry>y(r<sub>(63, 1)</sub>, 0)w(0, 1)</entry><entry>. . .</entry><entry>y(r<sub>(63, 14)</sub>, 0)w(0, 1)</entry><entry>y(r<sub>(63, 15)</sub>, 0)w(0, 0)</entry></row><row><entry>. . .</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>510</entry><entry>y(r<sub>(63, 0)</sub>, 0)w(0, 6)</entry><entry>y(r<sub>(63, 1)</sub>, 0)w(0, 6)</entry><entry>. . .</entry><entry>y(r<sub>(63, 14)</sub>, 0)w(0, 6)</entry><entry>y(r<sub>(63, 15)</sub>, 0)w(0, 6)</entry></row><row><entry>511</entry><entry>y(r<sub>(63, 0)</sub>, 0)w(0, 7)</entry><entry>y(r<sub>(63, 1)</sub>, 0)w(0, 7)</entry><entry>. . .</entry><entry>y(r<sub>(63, 14)</sub>, 0)w(0, 7)</entry><entry>y(r<sub>(63, 15)</sub>, 0)w(0, 7)</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0165" num="0149">Other image reconstruction techniques including, but not limited to, Fourier resampling and shearwave processing are also contemplated for use with some embodiments of the present disclosure.</p><p id="p-0166" num="0150"><figref idref="DRAWINGS">FIGS. <b>18</b>A and <b>18</b>B</figref> show illustrative dynamic focus architectures that may be used in accordance with some embodiments of the present disclosure. The dynamic focus architectures perform a dynamic delay-and-sum operation over a single excitation. A dynamic focus beamformer may delay the return signals from an acoustic field so that the scatterings from equal times along a line (or plane) are summed between all receive transducer element. In some embodiments, this is done in a streaming architecture that does not need to store all of the data for a single acquisition in memory. <figref idref="DRAWINGS">FIG. <b>18</b>A</figref> shows an illustrative architecture <b>1800</b> for implementing dynamic focusing when streaming addressable delays are used. Architecture <b>1800</b> includes upsampling element <b>1802</b>, which receives ADC data at a sampling rate of f<sub>s</sub>, register <b>1804</b> (e.g., a 1024 value 10-bit addressable shift register), multiplier <b>1806</b>, and adder <b>1820</b>. It should be appreciated that any suitable sampling rate f<sub>s </sub>(e.g., 200 MHz, 100 MHz, 50 MHz, etc.) may be used in the architecture <b>1800</b>. Additionally, any suitable size buffers or registers may be used. <figref idref="DRAWINGS">FIG. <b>18</b>B</figref> shows an illustrative architecture <b>1810</b> for implementing dynamic focusing when pipeline delays are used. Architecture <b>1810</b> includes register <b>1804</b>, which receives ADC data at a sampling rate f<sub>s</sub>, upsampling element <b>1802</b>, downsampling element <b>1808</b>, multiplier <b>1806</b>, and integrator <b>1820</b>. It should be appreciated that any suitable sampling rate f<sub>s </sub>(e.g., 200 MHz, 100 MHz, 50 MHz, etc.) may be used in the architecture <b>1810</b>. Additionally, any suitable size buffers or registers may be used.</p><p id="p-0167" num="0151">Direct compounding is a data reduction technique where multiple excitations are collected and added together as an intermediate stage toward image reconstruction. When an ultrasonic excitation wavefield is shift-invariant, e.g., the field pressures are identically shifted for each point in space, then the excitation is considered spatially-invariant. Compounding a spatially-invariant excitation allows for reduced data rates with a reduced quality penalty in the reconstruction. One implementation uses a number of virtual sources, which may be only slightly more than the number of plane waves one would have sent for high quality images. On-chip additions in the ADC buffer may provide an ability to compress the data upon collection. Data resulting from various excitations including, but not limited to, virtual source, focused beams, plane waves and several other spatially invariant beams may be compounded prior to image reconstruction.</p><p id="p-0168" num="0152">Aspects of operation of the circuitry described herein are further explained below with reference to <figref idref="DRAWINGS">FIG. <b>19</b></figref>, which is a flowchart of an illustrative process <b>1900</b> for operating an ultrasound data device in accordance with some embodiments that incorporate data reduction circuitry. Process <b>1900</b> may be performed, in whole or in part, by any suitable ultrasound device (e.g., ultrasound device <b>100</b> described with reference to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>3</b></figref>).</p><p id="p-0169" num="0153">Process <b>1900</b> begins at stage <b>1902</b>, where one or more parameters of the ultrasound device are configured. The parameters may be configured in any suitable way, and embodiments are not limited in this respect. For example, in some embodiments, configuring the one or more parameters of the ultrasound device includes loading transmit and/or receive parameters into control registers that provide information to the device for controlling its operation. In some embodiments, configuring the one or more parameters includes accessing the parameters stored in memory on the device based on a selected or programmed imaging mode of operation, as discussed above. Additionally, any suitable parameters may be configured in stage <b>1902</b> including, but not limited to, transmit parameters, receive chain compression parameters, and sequence timing parameters.</p><p id="p-0170" num="0154">After the parameter(s) for the ultrasound device have been configured, the process <b>1900</b> proceeds to stage <b>1904</b>, where the ultrasound device begins transmitting. For example, one or more components of the ultrasound device may access transmit parameters loaded into registers on the device (e.g., the transmit parameters configured in stage <b>1902</b>) and based, at least in part, on these parameters, elements of the ultrasound transducer array may be instructed to transmit acoustic energy.</p><p id="p-0171" num="0155">The process <b>1900</b> then proceeds to stage <b>1906</b>, where the elements of the ultrasound transducer array begin receiving data in response to the transmitted acoustic energy. The process <b>1900</b> then proceeds to stage <b>1908</b>, where the received data is processed by analog and/or digital components of the receive signal processing chain described above. In some embodiments, data compression is performed on the received data in real-time as data is being received from the ultrasound transducer array. In other embodiments, at least some of the received data is stored in on-chip memory prior to being compressed, and embodiments of the present disclosure are not limited in this respect.</p><p id="p-0172" num="0156">As shown in stage <b>1910</b>, and as described above, at least some processing of the received signals may include subjecting the signals to analog processing by analog signal processing electronics including, but not limited to, the analog signal processing architectures described above (e.g., filtering, averaging, variable gain amplification controlled by a time gain compensation circuit, etc.). In some embodiments, the output of the analog signal processing chain is provided to an analog-to-digital converter to convert the processed analog data signals to a digital representation, as discussed above.</p><p id="p-0173" num="0157">Following analog processing and analog-to-digital conversion, the process <b>1900</b> proceeds to stage <b>1912</b>, where the digital signal(s) are compressed using one or more digital compression architectures including, but not limited to those architectures discussed above for demodulation, filtering, decimation, re-quantization, and arithmetic processing.</p><p id="p-0174" num="0158">Following signal processing for data compression, the process <b>1900</b> proceeds to stage <b>1914</b>, where the digitally-processed signals are optionally used to perform at least a portion of an image reconstruction process. As discussed above, in some embodiments, at least a portion of an image reconstruction process based on the received data may be performed using image reconstruction components formed on a same substrate as the ultrasound transducer array. In other embodiments, the compressed signal is transmitted off-chip for image reconstruction processing using, for example, an FPGA or other processing circuit(s). In some embodiments, a portion of an image reconstruction process is performed on-chip to provide data compression prior to transmitting the data off-chip.</p><p id="p-0175" num="0159">Regardless of whether a portion of an image reconstruction process has been performed on-chip, off-chip, or partially on-chip and partially off-chip, the process <b>1900</b> proceeds to stage <b>1916</b>, where it is determined whether to output the data off-chip or to begin another excitation (e.g., with the intention of processing the previous excitation with the next, e.g., for Doppler processing, harmonic imaging enhancement, averaging, or other appropriate processing). If it is determined in stage <b>1916</b> to output the data, the process <b>1900</b> proceeds to stage <b>1918</b>, where the data is transmitted to an external device as a data stream. As discussed above, the output interface connected to the external device may be bandwidth limited, and the architectures described herein may be used to provide data compression sufficient to enable ultrasound imaging-on-a-chip to be realized, while also being able to transmit the data off-chip at a rate supported by the output interface.</p><p id="p-0176" num="0160">After the data is output in stage <b>1918</b>, the process <b>1900</b> may optionally return to stage <b>1902</b> or stage <b>1904</b>, where more data can be collected using the ultrasound device using the same or different device parameters. For example, if the process <b>1900</b> returns to stage <b>1902</b>, all or a subset (i.e., less than all) of the device parameters may be configured prior to transmission of new excitations from the ultrasound transducer array. Alternatively, if the process <b>1900</b> returns to stage <b>1904</b>, the transmission circuitry may be instructed to send another excitation without modifying the device parameters.</p><p id="p-0177" num="0161">If it is determined in stage <b>1916</b> that the data should not be output, the process <b>1900</b> returns to one or more of stages <b>1902</b>, <b>1904</b>, or <b>1908</b>, depending for example, on the imaging mode of the ultrasound device. In embodiments where at least a portion of an image reconstruction process is performed on-chip, the process may return to stage <b>1902</b>, where the transmission circuitry is instructed to send excitations based on different parameters to enable compounding image data on chip. For example, in harmonic imaging, the ALU parameters may be adjusted in stage <b>1902</b>. For averaging or Doppler processing, the process may return to stage <b>1904</b>, where the transmission circuitry is instructed to send another excitation without modifying the parameters. In yet other embodiments, the process returns to stage <b>1908</b> to perform additional processing prior to outputting the signals off-chip. The process <b>1900</b> continues until it is determined in stage <b>1918</b> to output the data off-chip. It should be appreciated that process <b>1900</b> is illustrative and that variations are contemplated.</p><p id="p-0178" num="0162">In some embodiments, memory used to achieve some or all of the above-described functionality may be located on-chip, i.e., on the die <b>112</b>. In other embodiments, however, some or all of the memory used to implement some or all of the described functionality may be located off-chip, with the remainder of the circuitry, software, and/or other components being located on the die <b>112</b>.</p><p id="p-0179" num="0163">Having thus described several aspects and embodiments of the technology set forth in the disclosure, it is to be appreciated that various alterations, modifications, and improvements will readily occur to those skilled in the art. Such alterations, modifications, and improvements are intended to be within the spirit and scope of the technology described herein. For example, those of ordinary skill in the art will readily envision a variety of other means and/or structures for performing the function and/or obtaining the results and/or one or more of the advantages described herein, and each of such variations and/or modifications is deemed to be within the scope of the embodiments described herein. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific embodiments described herein. It is, therefore, to be understood that the foregoing embodiments are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, inventive embodiments may be practiced otherwise than as specifically described. In addition, any combination of two or more features, systems, articles, materials, kits, and/or methods described herein, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.</p><p id="p-0180" num="0164">The above-described embodiments can be implemented in any of numerous ways. One or more aspects and embodiments of the present disclosure involving the performance of processes or methods may utilize program instructions executable by a device (e.g., a computer, a processor, or other device) to perform, or control performance of, the processes or methods. In this respect, various inventive concepts may be embodied as a computer readable storage medium (or multiple computer readable storage media) (e.g., a computer memory, one or more floppy discs, compact discs, optical discs, magnetic tapes, flash memories, circuit configurations in Field Programmable Gate Arrays or other semiconductor devices, or other tangible computer storage medium) encoded with one or more programs that, when executed on one or more computers or other processors, perform methods that implement one or more of the various embodiments described above. The computer readable medium or media can be transportable, such that the program or programs stored thereon can be loaded onto one or more different computers or other processors to implement various ones of the aspects described above. In some embodiments, computer readable media may be non-transitory media.</p><p id="p-0181" num="0165">The terms &#x201c;program&#x201d; or &#x201c;software&#x201d; are used herein in a generic sense to refer to any type of computer code or set of computer-executable instructions that can be employed to program a computer or other processor to implement various aspects as described above. Additionally, it should be appreciated that according to one aspect, one or more computer programs that when executed perform methods of the present disclosure need not reside on a single computer or processor, but may be distributed in a modular fashion among a number of different computers or processors to implement various aspects of the present disclosure.</p><p id="p-0182" num="0166">Computer-executable instructions may be in many forms, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.</p><p id="p-0183" num="0167">Also, data structures may be stored in computer-readable media in any suitable form. For simplicity of illustration, data structures may be shown to have fields that are related through location in the data structure. Such relationships may likewise be achieved by assigning storage for the fields with locations in a computer-readable medium that convey relationship between the fields. However, any suitable mechanism may be used to establish a relationship between information in fields of a data structure, including through the use of pointers, tags or other mechanisms that establish relationship between data elements.</p><p id="p-0184" num="0168">When implemented in software, the software code can be executed on any suitable processor or collection of processors, whether provided in a single computer or distributed among multiple computers.</p><p id="p-0185" num="0169">Further, it should be appreciated that a computer may be embodied in any of a number of forms, such as a rack-mounted computer, a desktop computer, a laptop computer, or a tablet computer, as non-limiting examples. Additionally, a computer may be embedded in a device not generally regarded as a computer but with suitable processing capabilities, including a Personal Digital Assistant (PDA), a smartphone or any other suitable portable or fixed electronic device.</p><p id="p-0186" num="0170">Also, a computer may have one or more input and output devices. These devices can be used, among other things, to present a user interface. Examples of output devices that can be used to provide a user interface include printers or display screens for visual presentation of output and speakers or other sound generating devices for audible presentation of output. Examples of input devices that can be used for a user interface include keyboards, and pointing devices, such as mice, touch pads, and digitizing tablets. As another example, a computer may receive input information through speech recognition or in other audible formats.</p><p id="p-0187" num="0171">Such computers may be interconnected by one or more networks in any suitable form, including a local area network or a wide area network, such as an enterprise network, and intelligent network (IN) or the Internet. Such networks may be based on any suitable technology and may operate according to any suitable protocol and may include wireless networks, wired networks or fiber optic networks.</p><p id="p-0188" num="0172">Also, as described, some aspects may be embodied as one or more methods. The acts performed as part of the method may be ordered in any suitable way. Accordingly, embodiments may be constructed in which acts are performed in an order different than illustrated, which may include performing some acts simultaneously, even though shown as sequential acts in illustrative embodiments.</p><p id="p-0189" num="0173">All definitions, as defined and used herein, should be understood to control over dictionary definitions, definitions in documents incorporated by reference, and/or ordinary meanings of the defined terms.</p><p id="p-0190" num="0174">The indefinite articles &#x201c;a&#x201d; and &#x201c;an,&#x201d; as used herein in the specification and in the claims, unless clearly indicated to the contrary, should be understood to mean &#x201c;at least one.&#x201d;</p><p id="p-0191" num="0175">The phrase &#x201c;and/or,&#x201d; as used herein in the specification and in the claims, should be understood to mean &#x201c;either or both&#x201d; of the elements so conjoined, i.e., elements that are conjunctively present in some cases and disjunctively present in other cases. Multiple elements listed with &#x201c;and/or&#x201d; should be construed in the same fashion, i.e., &#x201c;one or more&#x201d; of the elements so conjoined. Other elements may optionally be present other than the elements specifically identified by the &#x201c;and/or&#x201d; clause, whether related or unrelated to those elements specifically identified. Thus, as a non-limiting example, a reference to &#x201c;A and/or B&#x201d;, when used in conjunction with open-ended language such as &#x201c;comprising&#x201d; can refer, in one embodiment, to A only (optionally including elements other than B); in another embodiment, to B only (optionally including elements other than A); in yet another embodiment, to both A and B (optionally including other elements); etc.</p><p id="p-0192" num="0176">As used herein in the specification and in the claims, the phrase &#x201c;at least one,&#x201d; in reference to a list of one or more elements, should be understood to mean at least one element selected from any one or more of the elements in the list of elements, but not necessarily including at least one of each and every element specifically listed within the list of elements and not excluding any combinations of elements in the list of elements. This definition also allows that elements may optionally be present other than the elements specifically identified within the list of elements to which the phrase &#x201c;at least one&#x201d; refers, whether related or unrelated to those elements specifically identified. Thus, as a non-limiting example, &#x201c;at least one of A and B&#x201d; (or, equivalently, &#x201c;at least one of A or B,&#x201d; or, equivalently &#x201c;at least one of A and/or B&#x201d;) can refer, in one embodiment, to at least one, optionally including more than one, A, with no B present (and optionally including elements other than B); in another embodiment, to at least one, optionally including more than one, B, with no A present (and optionally including elements other than A); in yet another embodiment, to at least one, optionally including more than one, A, and at least one, optionally including more than one, B (and optionally including other elements); etc.</p><p id="p-0193" num="0177">Also, the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of &#x201c;including,&#x201d; &#x201c;comprising,&#x201d; or &#x201c;having,&#x201d; &#x201c;containing,&#x201d; &#x201c;involving,&#x201d; and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items.</p><p id="p-0194" num="0178">In the claims, as well as in the specification above, all transitional phrases such as &#x201c;comprising,&#x201d; &#x201c;including,&#x201d; &#x201c;carrying,&#x201d; &#x201c;having,&#x201d; &#x201c;containing,&#x201d; &#x201c;involving,&#x201d; &#x201c;holding,&#x201d; &#x201c;composed of,&#x201d; and the like are to be understood to be open-ended, i.e., to mean including but not limited to. Only the transitional phrases &#x201c;consisting of&#x201d; and &#x201c;consisting essentially of&#x201d; shall be closed or semi-closed transitional phrases, respectively.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230000472A1-20230105-M00001.NB"><img id="EMI-M00001" he="8.13mm" wi="76.20mm" file="US20230000472A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230000472A1-20230105-M00002.NB"><img id="EMI-M00002" he="5.67mm" wi="76.20mm" file="US20230000472A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003" nb-file="US20230000472A1-20230105-M00003.NB"><img id="EMI-M00003" he="5.67mm" wi="76.20mm" file="US20230000472A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004 MATH-US-00004-2" nb-file="US20230000472A1-20230105-M00004.NB"><img id="EMI-M00004" he="12.36mm" wi="76.20mm" file="US20230000472A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00005" nb-file="US20230000472A1-20230105-M00005.NB"><img id="EMI-M00005" he="8.47mm" wi="76.20mm" file="US20230000472A1-20230105-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An ultrasound device, comprising:<claim-text>a semiconductor die;</claim-text><claim-text>an ultrasonic transducer array comprising at least 5,000 ultrasonic transducers integrated on the semiconductor die;</claim-text><claim-text>an analog receive circuit integrated on the semiconductor die, the analog receive circuit arranged to receive output signals from the ultrasonic transducer array;</claim-text><claim-text>an on-chip Hadamard encoding circuit integrated on the semiconductor die and connected to an output of the analog receive circuit, the on-chip Hadamard encoding circuit configured to generate a Hadamard encoded analog signal prior to any image reconstruction process being performed by applying a Hadamard encoding for at least some ultrasonic transducers in the ultrasonic transducer;</claim-text><claim-text>an analog to digital converter (ADC) integrated on the semiconductor die and configured to produce a digital signal based on the Hadamard encoded analog signal; and</claim-text><claim-text>a digital signal processing block configured to perform at least a portion of an image reconstruction process based on the digital signal.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The ultrasound device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a digital compression circuit integrated on the semiconductor die and configured to generate a compressed digital signal by compressing the digital signal to be transmitted from the semiconductor die as a data stream to the digital signal processing block, and wherein the digital signal processing block is configured to perform at least a portion of an image reconstruction process based on the compressed digital signal.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The ultrasound device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the digital compression circuit is configured to perform one or more of: quadrature demodulation, downsampling, quadrature sampling, filtered downsampling, cascade integrating comb (CIC) filtering, receive aperture filtering, polyphase filtering, re-quantization, and pulse compression.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The ultrasound device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising image reconstruction circuitry configured to perform at least a portion of the image reconstruction process, wherein<claim-text>the image reconstruction circuitry is configured to perform at least a portion of an image reconstruction process using a beamforming technique.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The ultrasound device of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the beamforming technique comprises an integrated backprojection technique, in which at least one of receiver time-of-flight values and receive apodization values are reused within consecutive scans.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The ultrasound device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the ADC comprises one more of: a successive approximation register (SAR) ADC, a flash ADC, a pipeline ADC, a sigma-delta ADC, a multi-slop ADC, and a time-interleaved ADC.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The ultrasound device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the ADC comprises a 10-bit ADC configured to operate at a conversion rate selected from the group consisting of: 20 mega-samples per second (Msps), 40 Msps, 50 Msps, and 80 Msps.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method for processing output signals from a transducer array comprising at least 5,000 ultrasonic transducers integrated on a semiconductor die, the method comprising:<claim-text>with an analog receive circuit integrated on the semiconductor die, receiving output signals from the transducer array;</claim-text><claim-text>with an on-chip Hadamard encoding circuit integrated on the semiconductor die,<claim-text>receiving an output of the analog receive circuit, and</claim-text><claim-text>based on the received output, generating a Hadamard encoded analog signal prior to any image reconstruction process being performed by applying a Hadamard encoding for at least some ultrasonic transducers in the transducer array; and</claim-text></claim-text><claim-text>with an analog to digital converter (ADC) integrated on the semiconductor die, producing a digital signal based on the Hadamard encoded analog signal;</claim-text><claim-text>with a digital signal processing block, performing at least a portion of an image reconstruction process based on the digital signal.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>with a digital compression circuit integrated on the semiconductor die, generating a compressed digital signal by compressing the digital signal, and the method further comprises:</claim-text><claim-text>transmitting the compressed digital signal from the semiconductor die as a data stream to the digital signal processing block, wherein</claim-text><claim-text>the act of performing at least a portion of an image reconstruction process is based on the compressed digital signal.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein generating the compressed digital signal comprises performing one or more of: quadrature demodulation, downsampling, quadrature sampling, filtered downsampling, cascade integrating comb (CIC) filtering, receive aperture filtering, polyphase filtering, re-quantization, and pulse compression.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein performing at least a portion of an image reconstruction process further comprises<claim-text>with an image reconstruction circuitry, performing at least a portion of the image reconstruction process using a beamforming technique.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein using the beamforming technique comprises using an integrated backprojection technique, in which at least one of receiver time-of-flight values and receive apodization values are reused within consecutive scans.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the ADC comprises one more of: a successive approximation register (SAR) ADC, a flash ADC, a pipeline ADC, a sigma-delta ADC, a multi-slop ADC, and a time-interleaved ADC.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein producing a digital signal with the ADC comprises operating a 10-bit ADC at a conversion rate selected from the group consisting of: 20 mega-samples per second (Msps), 40 Msps, 50 Msps, and 80 Msps.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. An ultrasound device, comprising:<claim-text>a semiconductor die;</claim-text><claim-text>a plurality of ultrasonic transducers integrated on a semiconductor die; and</claim-text><claim-text>a Hadamard encoding circuit integrated on the semiconductor die and configured to apply a Hadamard encoding for at least some of the plurality of ultrasonic transducers to generate a Hadamard encoded analog signal.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The ultrasound device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>an analog receive circuit integrated on the semiconductor die, the analog receive circuit arranged to receive output signals from the plurality of ultrasonic transducers, wherein the Hadamard encoding circuit has an input connected to an output of the analog receive circuit.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The ultrasound device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein<claim-text>the Hadamard encoding circuit is configured to generate the Hadamard encoded analog signal based on output signals from the plurality of ultrasonic transducers prior to any image reconstruction process being performed.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The ultrasound device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:<claim-text>an analog to digital converter (ADC) integrated on the semiconductor die and configured to produce a digital signal based on a Hadamard encoded analog signal from the Hadamard encoding circuit; and</claim-text><claim-text>a digital signal processing block configured to perform at least a portion of an image reconstruction process based on the digital signal.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The ultrasound device of <claim-ref idref="CLM-00018">claim 18</claim-ref>, further comprising:<claim-text>a digital compression circuit integrated on the semiconductor die and configured to generate a compressed digital signal by compressing the digital signal to be transmitted from the semiconductor die as a data stream to the digital signal processing block, and wherein the digital signal processing block is configured to perform at least a portion of an image reconstruction process based on the compressed digital signal.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The ultrasound device of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the digital compression circuit is configured to perform one or more of: quadrature demodulation, downsampling, quadrature sampling, filtered downsampling, cascade integrating comb (CIC) filtering, receive aperture filtering, polyphase filtering, re-quantization, and pulse compression.</claim-text></claim></claims></us-patent-application>