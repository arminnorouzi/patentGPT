<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006832A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006832</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17902821</doc-number><date>20220903</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>K</subclass><main-group>7</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3234</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0876</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>7</main-group><subgroup>1417</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3236</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CLOUD-BASED MANAGEMENT SERVICE DEVICE REGISTRATION USING INTERMEDIATE CLOUD STORAGE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16917722</doc-number><date>20200630</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11438163</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17902821</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>63031553</doc-number><date>20200528</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Microsoft Technology Licensing, LLC</orgname><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>TERAN GUAJARDO</last-name><first-name>Adrian Francisco</first-name><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>DANG</last-name><first-name>Hung Minh</first-name><address><city>Seattle</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>ZHANG</last-name><first-name>Yanan</first-name><address><city>Bellevue</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>PERLMAN</last-name><first-name>Brian Stuart</first-name><address><city>Bothell</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>HASSETT</last-name><first-name>Colin William</first-name><address><city>Madison</city><state>WI</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>ANDES</last-name><first-name>Jonathan M.</first-name><address><city>Seattle</city><state>WA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Techniques are described herein that are capable of registering a user device with a cloud-based management service using an intermediate cloud storage. For instance, the intermediate cloud storage may store an encrypted data blob including information that identifies the user device. The intermediate cloud storage or a registration system may decrypt the encrypted data blob so that the registration system may use the decrypted data blob to register the user device with the cloud-based management service. For instance, the registration system may retrieve the encrypted or decrypted data blob from the intermediate cloud storage by providing a requisite secret to the intermediate cloud storage. The requisite secret may be provided to the registration system by the user device (e.g., via a matrix barcode, such as a QR code).</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="100.92mm" wi="158.75mm" file="US20230006832A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="243.33mm" wi="161.80mm" orientation="landscape" file="US20230006832A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="252.48mm" wi="168.99mm" orientation="landscape" file="US20230006832A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="252.48mm" wi="168.99mm" orientation="landscape" file="US20230006832A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="249.17mm" wi="131.32mm" file="US20230006832A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="249.17mm" wi="131.32mm" file="US20230006832A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="249.17mm" wi="131.32mm" file="US20230006832A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="249.17mm" wi="160.61mm" file="US20230006832A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="249.17mm" wi="131.40mm" file="US20230006832A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="249.17mm" wi="131.32mm" file="US20230006832A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="249.17mm" wi="161.29mm" file="US20230006832A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="249.34mm" wi="166.79mm" file="US20230006832A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="248.58mm" wi="160.44mm" orientation="landscape" file="US20230006832A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION(S)</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 16/917,722 (Atty Docket No. 408066-US-NP), filed Jun. 30, 2020 and entitled &#x201c;Cloud-Based Management Service Device Registration Using Intermediate Cloud Storage,&#x201d; which claims the benefit of U.S. Provisional Application No. 63/031,553 (Atty Docket No. 408066-US-PSP), filed May 28, 2020 and entitled &#x201c;Cloud-Based Management Service Device Registration Using Intermediate Cloud Storage,&#x201d; the entireties of which are incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">A cloud-based management service enables management of computing devices using a network of servers that is referred to as &#x201c;the cloud.&#x201d; An information technology (IT) administrator often uses a cloud-based management service to manage computing devices that are used by employees of a company to access resources of the company. To enable the computing devices to be managed using the cloud-based management service, the IT administrator registers the computing devices with a tenant of the cloud-based management service. A tenant of a cloud-based management service is an entity (e.g., customer) whose data is isolated from and remains unknown to other tenants of the cloud-based management service. The IT administrator typically registers the computing devices with the tenant of the cloud-based management service before providing the computing devices to the users. Thus, the aforementioned registration of the computing devices is commonly referred to as &#x201c;pre-registration.&#x201d;</p><p id="p-0004" num="0003">The IT administrator typically uses a data blob located on each computing device to register the respective computing device with the tenant of the cloud-based management service. For example, the IT administrator may plug a removable memory device (e.g., a thumb drive) into each computing device, run a script that collects the respective data blob, log into a portal of the cloud-based management service, and upload the respective data blob from the removable memory device to the cloud-based management service.</p><p id="p-0005" num="0004">It may be desirable to extract the data blob from each computing device by reading a matrix barcode, such as a quick response (QR) code. However, an amount of information that can be read from a matrix barcode may be limited by capabilities of the reader that is used to extract the data blob. An increase in the amount of data stored in a data blob corresponds to an increase in the resolution of the QR code that represents the data blob. Noise associated with the QR code may result in a failure to replicate the data blob that is represented by the matrix barcode.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">Various approaches are described herein for, among other things, registering a user device with a cloud-based management service (a.k.a. cloud-based management system) using an intermediate cloud storage. For instance, the intermediate cloud storage may store an encrypted data blob including information that identifies the user device. The intermediate cloud storage or a registration system may decrypt the encrypted data blob so that the registration system may use the decrypted data blob to register the user device with the cloud-based management service. For instance, the registration system may retrieve the encrypted or decrypted data blob from the intermediate cloud storage by providing a requisite secret to the intermediate cloud storage. The requisite secret may be provided to the registration system by the user device (e.g., via a matrix barcode, such as a QR code).</p><p id="p-0007" num="0006">In a first example approach, a matrix barcode that identifies a user device is scanned. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with a cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to actions and/or records that are associated with the user device. An intermediate cloud storage is triggered to decrypt the encrypted data blob, which includes information that identifies the user device, using the decryption key to provide a decrypted data blob by providing the session identifier, the decryption key, and the correlation key to the intermediate cloud storage. The decrypted data blob is received from the intermediate cloud storage. The user device is registered with the cloud-based management service using the decrypted data blob.</p><p id="p-0008" num="0007">In a second example approach, a matrix barcode that identifies a user device is scanned. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with a cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to actions and/or records that are associated with the user device. The encrypted data blob, which includes information identifying the user device, is retrieved from an intermediate cloud storage, which receives the encrypted data blob from the user device. The encrypted data blob, which is retrieved from the intermediate cloud storage, is decrypted using the decryption key that is included in the matrix barcode to provide a decrypted data blob. The user device is registered with the cloud-based management service using the decrypted data blob.</p><p id="p-0009" num="0008">The approaches described herein may be applied with respect to any suitable number (e.g., 5, 20, hundreds, or thousands) of user devices to register the user devices with a cloud-based management service.</p><p id="p-0010" num="0009">This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Moreover, it is noted that the invention is not limited to the specific embodiments described in the Detailed Description and/or other sections of this document. Such embodiments are presented herein for illustrative purposes only. Additional embodiments will be apparent to persons skilled in the relevant art(s) based on the teachings contained herein.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS/FIGURES</heading><p id="p-0011" num="0010">The accompanying drawings, which are incorporated herein and form part of the specification, illustrate embodiments of the present invention and, together with the description, further serve to explain the principles involved and to enable a person skilled in the relevant art(s) to make and use the disclosed technologies.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example intermediate cloud storage-based device registration system in accordance with an embodiment.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIGS. <b>2</b>-<b>3</b></figref> are example activity diagrams for registering a user device with a cloud-based management service using an intermediate cloud storage in accordance with embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIGS. <b>4</b>-<b>6</b> and <b>8</b>-<b>9</b></figref> depict flowcharts of example methods for registering a user device with a cloud-based management service using an intermediate cloud storage in accordance with embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. <b>7</b> and <b>10</b></figref> are block diagrams of example implementations of an admin system shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> in accordance with embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a system diagram of an exemplary mobile device in accordance with an embodiment.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts an example computer in which embodiments may be implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0018" num="0017">The features and advantages of the disclosed technologies will become more apparent from the detailed description set forth below when taken in conjunction with the drawings, in which like reference characters identify corresponding elements throughout. In the drawings, like reference numbers generally indicate identical, functionally similar, and/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.</p><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><heading id="h-0006" level="1">I. Introduction</heading><p id="p-0019" num="0018">The following detailed description refers to the accompanying drawings that illustrate exemplary embodiments of the present invention. However, the scope of the present invention is not limited to these embodiments, but is instead defined by the appended claims. Thus, embodiments beyond those shown in the accompanying drawings, such as modified versions of the illustrated embodiments, may nevertheless be encompassed by the present invention.</p><p id="p-0020" num="0019">References in the specification to &#x201c;one embodiment,&#x201d; &#x201c;an embodiment,&#x201d; &#x201c;an example embodiment,&#x201d; or the like, indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Furthermore, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the relevant art(s) to implement such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.</p><p id="p-0021" num="0020">Descriptors such as &#x201c;first&#x201d;, &#x201c;second&#x201d;, &#x201c;third&#x201d;, etc. are used to reference some elements discussed herein. Such descriptors are used to facilitate the discussion of the example embodiments and do not indicate a required order of the referenced elements, unless an affirmative statement is made herein that such an order is required.</p><heading id="h-0007" level="1">II. Example Embodiments</heading><p id="p-0022" num="0021">Example embodiments described herein are capable of registering a user device with a cloud-based management service (a.k.a. cloud-based management system) using an intermediate cloud storage. For instance, the intermediate cloud storage may store an encrypted data blob including information that identifies the user device. The intermediate cloud storage or a registration system may decrypt the encrypted data blob so that the registration system may use the decrypted data blob to register the user device with the cloud-based management service. For instance, the registration system may retrieve the encrypted or decrypted data blob from the intermediate cloud storage by providing a requisite secret to the intermediate cloud storage. The requisite secret may be provided to the registration system by the user device (e.g., via a matrix barcode, such as a QR code). The example techniques described herein may be applied with respect to any suitable number (e.g., 5, 20, hundreds, or thousands) of user devices to register the user devices with a common (e.g., same) cloud-based management service.</p><p id="p-0023" num="0022">Example techniques described herein have a variety of benefits as compared to conventional techniques for registering user device(s) with a cloud-based management service. For instance, the example techniques may be capable of increasing a likelihood that registration of the user device(s) with the cloud-based management service will succeed. The example techniques may simplify a process for registering the user device(s) and/or speed up the process in a secure way. The example techniques may be at least as secure as manual techniques for registering user device(s) with a cloud-based management service.</p><p id="p-0024" num="0023">The example techniques may enable each user device to upload an encrypted data blob, which includes information that identifies the user device, to a non-authenticated intermediate cloud storage, which may make the encrypted data blob (or a decrypted version thereof) available to a caller that provides an expected session identifier and an expected correlation key. The example techniques may be capable of pre-authorizing an upload of each encrypted data blob from the respective user device to the intermediate cloud storage so that the caller may authenticate with a session identifier and/or a correlation key. For instance, the intermediate cloud storage may have been previously informed (e.g., by the registration system) to expect a call that includes the session identifier and the correlation key.</p><p id="p-0025" num="0024">The example techniques may decrease latency associated with registering a user device with a cloud-based management service and/or increase reliability of the device registration process. The example techniques may automate at least some of the manual operations that are characteristic of conventional techniques for registering a user device with a cloud-based management service.</p><p id="p-0026" num="0025">The example techniques may reduce an amount of time and/or resources (e.g., processor cycles, memory, network bandwidth) that is consumed to register a user device with a cloud-based management service. The example techniques may reduce a cost associated with registering a user device with a cloud-based management service. For instance, by utilizing an intermediate cloud storage, the example techniques may reduce complexity of the device registration process and/or reduce interactions of the IT administrator (and delay associated with such interactions), which may reduce a cost of registering the user device with the cloud-based management service. Reducing complexity of device registration and/or a number of IT administrator interactions may reduce the time and/or resource consumption associated with registering the user device with the cloud-based management service. The example techniques may increase efficiency of a computing system that is used to register a user device with a cloud-based management service.</p><p id="p-0027" num="0026">The example techniques may increase efficiency of an IT administrator. For example, by utilizing an intermediate cloud storage, the example techniques may reduce a number of steps that are performed by the IT administrator, an amount of effort that the IT administrator expends, and/or an amount of time that the IT administrator takes to facilitate registration of a user device with a cloud-based management service. The example techniques may improve a user experience of the IT administrator (e.g., by automating or streamlining the device registration process).</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example intermediate cloud storage-based device registration system <b>100</b> in accordance with an embodiment. Generally speaking, the intermediate cloud storage-based device registration system <b>100</b> operates to provide information to users in response to (e.g., based on) requests (e.g., hypertext transfer protocol (HTTP) requests) that are received from the users. The information may include documents (e.g., Web pages, images, audio files, video files, etc.), output of executables, and/or any other suitable type of information. In accordance with example embodiments described herein, the intermediate cloud storage-based device registration system <b>100</b> registers a plurality of user devices <b>102</b>A-<b>102</b>M with a cloud-based management service <b>116</b>.</p><p id="p-0029" num="0028">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the intermediate cloud storage-based device registration system <b>100</b> includes the plurality of user devices <b>102</b>A-<b>102</b>M, a network <b>104</b>, a plurality of servers <b>106</b>A-<b>106</b>N, and an admin system <b>108</b>. Communication among the user devices <b>102</b>A-<b>102</b>M, the servers <b>106</b>A-<b>106</b>N, and the admin system <b>108</b> is carried out over the network <b>104</b> using well-known network communication protocols. The network <b>104</b> may be a wide-area network (e.g., the Internet), a local area network (LAN), another type of network, or a combination thereof.</p><p id="p-0030" num="0029">The user devices <b>102</b>A-<b>102</b>M are processing systems that are capable of communicating with the servers <b>106</b>A-<b>106</b>N and the admin system <b>108</b>. An example of a processing system is a system that includes at least one processor that is capable of manipulating data in accordance with a set of instructions. For instance, a processing system may be a computer, a personal digital assistant, etc. The user devices <b>102</b>A-<b>102</b>M are configured to provide requests to the servers <b>106</b>A-<b>106</b>N for requesting information stored on (or otherwise accessible via) the servers <b>106</b>A-<b>106</b>N. For instance, a user may initiate a request for executing a computer program (e.g., an application) using a client (e.g., a Web browser, Web crawler, or other type of client) deployed on a user device <b>102</b> that is owned by or otherwise accessible to the user. In accordance with some example embodiments, the user devices <b>102</b>A-<b>102</b>M are capable of accessing domains (e.g., Web sites) hosted by the servers <b>106</b>A-<b>106</b>N, so that the user devices <b>102</b>A-<b>102</b>M may access information that is available via the domains. Such domains may include Web pages, which may be provided as hypertext markup language (HTML) documents and objects (e.g., files) that are linked therein, for example.</p><p id="p-0031" num="0030">Each of the user devices <b>102</b>A-<b>102</b>M may include any client-enabled system or device, including but not limited to a desktop computer, a laptop computer, a tablet computer, a wearable computer such as a smart watch or a head-mounted computer, a personal digital assistant, a cellular telephone, an Internet of things (IoT) device, or the like. It will be recognized that any one or more of the user devices <b>102</b>A-<b>102</b>M may communicate with any one or more of the servers <b>106</b>A-<b>106</b>N.</p><p id="p-0032" num="0031">The user devices <b>102</b>A-<b>102</b>M are shown to include respective registration agents <b>110</b>A-<b>110</b>M. The registration agents <b>110</b>A-<b>110</b>M are configured to provide respective matrix barcodes <b>122</b>A-<b>122</b>M and respective encrypted data blobs <b>124</b>A-<b>124</b>M to facilitate registration of the user devices <b>102</b>A-<b>102</b>M with the cloud-based management service <b>116</b>. The matrix barcodes <b>122</b>A-<b>122</b>M include respective session identifiers, respective decryption keys, and respective correlation keys. Each session identifier identifies a session during which the respective user device is registered with the cloud-based management service <b>116</b>. For example, the session identifier may be a random number or string of characters. In another example, the session identifier may be a semi-random number or string of characters. Each decryption key is configured to be used to decrypt the respective encrypted data blob that is provided by the respective user device. Each correlation key is useable to correlate the respective user device to actions and/or records that are associated with the respective user device. For instance, each correlation key may be used to track, audit, and/or troubleshoot the respective user device and/or to generate a report regarding the respective user device. Each correlation key may include a product key associated with the respective user device. Each product key may identify an operating system (OS) license of an OS that is utilized by (e.g., deployed on) the respective user device. For example, the product key associated with each user device may serve as a convenient correlator because the product key may be available in a purchase order associated with the user device, may be included in references to the user device by an original equipment manufacturer (OEM) that manufactured the user device, may be used in support tickets regarding the user device, and/or may be embedded in the user device (e.g., copied into a motherboard thereof) so that the product key is available to the OS of the user device. Each decryption key and/or each correlation key may be a symmetric key or an asymmetric public key. For example, each decryption key and/or each correlation key may be a cryptographic key that is generated in accordance with the Advanced Encryption Standard (AES), which was established by the U.S. National Institute of Standards and Technology (NIST) in 2001. In accordance with this example, each decryption key and/or each correlation key may be an AES-128, AES-192, or AES-256 key. Each encrypted data blob includes information that identifies the user device that provides the respective encrypted data blob.</p><p id="p-0033" num="0032">The servers <b>106</b>A-<b>106</b>N are processing systems that are capable of communicating with the user devices <b>102</b>A-<b>102</b>M. The servers <b>106</b>A-<b>106</b>N are configured to execute computer programs that provide information to the user devices <b>102</b>A-<b>102</b>M. For instance, the servers <b>106</b>A-<b>106</b>N may push such information to the user devices <b>102</b>A-<b>102</b>M or provide the information in response to requests that are received from the user devices <b>102</b>A-<b>102</b>M. The requests may be user-generated or generated without user involvement. The information provided by the servers <b>106</b>A-<b>106</b>N may include documents (e.g., Web pages, images, audio files, video files, etc.), output of executables, or any other suitable type of information. In accordance with some example embodiments, the servers <b>106</b>A-<b>106</b>N are configured to host respective Web sites, so that the Web sites are accessible to users of the intermediate cloud storage-based device registration system <b>100</b>.</p><p id="p-0034" num="0033">First server(s) <b>106</b>A is shown to include intermediate cloud storage <b>112</b> for illustrative purposes. The intermediate cloud storage <b>112</b> is configured to receive the encrypted data blobs <b>124</b>A-<b>124</b>M from the respective registration agents <b>110</b>A-<b>110</b>M. In one example implementation, the intermediate cloud storage <b>112</b> is configured to provide access to the encrypted data blobs <b>124</b>A-<b>124</b>M in response to receipt of respective designated secrets from entities that request access to the encrypted data blobs <b>124</b>A-<b>124</b>M. For instance, intermediate cloud storage <b>112</b> may provide access to the first encrypted data blob <b>124</b>A in response to receipt of a respective first designated secret. The intermediate cloud storage <b>112</b> may provide access to the second encrypted data blob <b>124</b>B in response to receipt of a respective second designated secret, and so on. Each secret may include the session identifier and the correlation key that is included in the matrix barcode provided by the user device that provided the respective matrix barcode. In another example implementation, the intermediate cloud storage <b>112</b> is configured to decrypt the encrypted data blobs <b>124</b>A-<b>124</b>M to provide respective decrypted data blobs. In accordance with this implementation, the intermediate cloud storage <b>112</b> is configured to provide access to the decrypted data blobs in response to receipt of respective designated secrets from entities that request access to the decrypted data blobs.</p><p id="p-0035" num="0034">Second server(s) <b>106</b>B is shown to include cloud-based management service <b>116</b> for illustrative purposes. The cloud-based management service <b>116</b> is configured to enable management of the user devices <b>102</b>A-<b>102</b>M. For instance, the cloud-based management service <b>116</b> may enable an IT administrator associated with the admin system <b>108</b> to manage the user devices <b>102</b>A-<b>102</b>M. To this end, the cloud-based management service <b>116</b> provides a deployment platform profile identifier to each of the user devices <b>102</b>A-<b>102</b>M in response to receipt of a designated secret and the decrypted data blob that identifies the respective user device. The designated secret for each user device may include the session identifier associated with the respective user device. The cloud-based management service <b>116</b> may receive the designated secrets and the decrypted data blobs from the admin system <b>108</b>. Each deployment platform profile identifier specifies settings and policies that are to be applied to the respective user device for purposes of configuring the respective user device.</p><p id="p-0036" num="0035">The cloud-based management service <b>116</b> is configured to obtain the deployment platform profile identifiers from a device directory service (DDS) <b>118</b>. For instance, the cloud-based management service <b>116</b> may provide the decrypted data blob of each of the user devices <b>102</b>A-<b>102</b>M to the DDS <b>118</b> in response to receipt of the respective designated secret and the respective decrypted data blob. The cloud-based management service <b>116</b> may receive each deployment platform profile identifier from the DDS <b>118</b> based on the cloud-based management service <b>116</b> providing the decrypted data blob of the user device to which the respective deployment platform profile identifier is to be provided.</p><p id="p-0037" num="0036">Nth server(s) <b>106</b>N is shown to include the DDS <b>118</b> for illustrative purposes. The DDS <b>118</b> is configured to provide the deployment platform profile identifier for each user device to the cloud-based management service <b>116</b> in response to receipt of the decrypted data blob of the respective user device from the cloud-based management service <b>116</b>. For example, the DDS <b>118</b> may maintain a cross-reference list that cross-references the decrypted data blobs of the user devices <b>102</b>A-<b>102</b>M with the deployment platform profile identifiers of the user devices <b>102</b>A-<b>102</b>M. Upon receipt of the decrypted data blob of a user device, the DDS <b>118</b> may traverse the cross-reference list to determine which of the deployment platform profile identifiers is cross-referenced with the decrypted data blob of the user device. The DDS <b>118</b> may provide the deployment platform profile identifier that is cross-referenced with the decrypted data blob of the user device to the cloud-based management service <b>116</b> for forwarding to the user device.</p><p id="p-0038" num="0037">The admin system <b>108</b> is a processing system that is capable of communicating with the user devices <b>102</b>A-<b>102</b>M and the servers <b>106</b>A-<b>106</b>N. The admin system <b>108</b> is configured to perform operations to facilitate registration of the user devices <b>102</b>A-<b>102</b>M with the cloud-based management service <b>116</b> (e.g., in response to instructions that are received from the IT administrator associated with the IT admin system <b>108</b>). The admin system <b>108</b> includes a registration system <b>114</b>, which is configured to communicate with the registration agents <b>110</b>A-<b>110</b>M of the respective user devices <b>102</b>A-<b>102</b>M, the intermediate cloud storage <b>112</b>, and the cloud-based management service <b>116</b> to facilitate registration of the user devices <b>102</b>A-<b>102</b>M with the cloud-based management service <b>116</b>. The registration system <b>108</b> is configured to scan the matrix barcodes <b>122</b>A-<b>122</b>M, which are received from the respective registration agents <b>110</b>A-<b>110</b>M. For example, the registration system <b>114</b> includes a matrix barcode scanner <b>120</b>, which is configured to scan the matrix barcodes <b>122</b>A-<b>122</b>M. The matrix barcode scanner <b>120</b> may scan the matrix barcodes <b>122</b>A-<b>122</b>M using pairing between the matrix barcode scanner <b>120</b> and the respective user devices <b>102</b>A-<b>102</b>M. For instance, the pairing may be achieved using a wireless technology standard, such as Bluetooth&#xae; or ZigBee&#xae;. In accordance with this example, the registration system <b>114</b> may analyze the matrix barcodes <b>122</b>A-<b>122</b>M that are scanned by the matric barcode scanner to identify the respective session identifiers, the respective decryption keys, and the respective correlation keys therein.</p><p id="p-0039" num="0038">In a first example implementation, the registration system <b>114</b> receives the encrypted data blobs <b>124</b>A-<b>124</b>M from the respective registration agents <b>110</b>A-<b>110</b>M. In accordance with this implementation, the registration system <b>114</b> triggers the intermediate cloud storage <b>112</b> to decrypt the encrypted data blobs <b>124</b>A-<b>124</b>M using the respective decryption keys to provide respective decrypted data blobs. For instance, the registration system <b>114</b> may trigger the intermediate cloud storage <b>112</b> to decrypt each encrypted data blob by providing the respective session identifier, the respective decryption key, and the respective correlation key to the intermediate cloud storage <b>112</b>. In further accordance with this implementation, the registration system <b>114</b> receives the decrypted data blobs from the intermediate cloud storage <b>112</b>.</p><p id="p-0040" num="0039">In a second example implementation, the registration system <b>114</b> retrieves the encrypted data blobs <b>124</b>A-<b>124</b>M from the intermediate cloud storage <b>112</b> (e.g., in response to the intermediate cloud storage <b>112</b> receiving the encrypted data blobs <b>124</b>A-<b>124</b>M from the respective registration agents <b>110</b>A-<b>110</b>M). In accordance with this implementation, the registration system <b>114</b> decrypts the encrypted data blobs <b>124</b>A-<b>124</b>M using the respective decryption keys that are included in the respective matrix barcodes <b>122</b>A-<b>122</b>M to provide respective decrypted data blobs.</p><p id="p-0041" num="0040">In both of these implementations, the registration system <b>114</b> registers the user devices <b>102</b>A-<b>102</b>M with the cloud-based management service <b>116</b> using the respective decrypted data blobs.</p><p id="p-0042" num="0041">Each of the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, and the DDS <b>118</b> may be implemented in various ways to facilitate registration of any one or more of the user devices <b>102</b>A-<b>102</b>M with the cloud-based management service <b>116</b>, including being implemented in hardware, software, firmware, or any combination thereof. For example, each of the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, and the DDS <b>118</b> may be implemented as computer program code configured to be executed in one or more processors. In another example, each of the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, and the DDS <b>118</b> may be at least partially implemented as hardware logic/electrical circuitry. For instance, each of the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, and the DDS <b>118</b> may be at least partially implemented in a field-programmable gate array (FPGA), an application-specific integrated circuit (ASIC), an application-specific standard product (ASSP), a system-on-a-chip system (SoC), a complex programmable logic device (CPLD), etc. Each SoC may include an integrated circuit chip that includes one or more of a processor (e.g., a microcontroller, microprocessor, digital signal processor (DSP), etc.), memory, one or more communication interfaces, and/or further circuits and/or embedded firmware to perform its functions.</p><p id="p-0043" num="0042">The intermediate cloud storage <b>112</b>, the cloud-based management service <b>116</b>, and the DDS <b>118</b> are shown to be incorporated in separate servers or groups thereof for illustrative purposes and are not intended to be limiting. It will be recognized that each of the intermediate cloud storage <b>112</b>, the cloud-based management service <b>116</b>, and the DDS <b>118</b> may be incorporated in any one or more of the servers <b>106</b>A-<b>106</b>N. For instance, any two or more of the intermediate cloud storage <b>112</b>, the cloud-based management service <b>116</b>, and/or the DDS <b>118</b> may be incorporated partially or entirely in a common (e.g., same) server.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is an example activity diagram <b>200</b> for registering a user device with a cloud-based management service using an intermediate cloud storage in accordance with an embodiment. <figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts the registration agent <b>110</b>, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, and the device directory service (DDS) <b>118</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Activities <b>222</b>, <b>224</b>, <b>226</b>, <b>228</b>, <b>230</b>, <b>232</b>, <b>234</b>, <b>236</b>, <b>238</b>, <b>240</b>, <b>242</b>, <b>244</b>, <b>246</b>, <b>248</b>, <b>250</b>, <b>252</b>, <b>254</b>, and <b>256</b> will now be described with reference to the registration agent <b>110</b>, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, and the DDS <b>118</b>.</p><p id="p-0045" num="0044">In activity <b>222</b>, the registration system <b>114</b> scans a matrix barcode (e.g., a QR code). The matrix barcode includes a session identifier (a.k.a. session ID), a decryption key, and a correlation key. The session ID identifies a session in which the user device is registered with the cloud-based management service <b>116</b>. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The decryption key may be a symmetric key or an asymmetric public key. The correlation key is configured to be used to correlate the user device to a record that are associated with the user device. Activity <b>226</b> may include analyzing the matrix barcode, for example, to identify the session ID, the decryption key, and the correlation key.</p><p id="p-0046" num="0045">In an example embodiment, the registration system <b>114</b> displays a message on a display of an admin system that includes the registration system <b>114</b>. The message prompts a user of the admin system (e.g., the IT administrator who is using the registration system <b>114</b> to pre-provision the user device with the cloud-based management service <b>116</b>) to initiate scanning of the matrix barcode. For instance, the user may initiate scanning of the matrix barcode by directing a matrix barcode scanner toward the display of the user device on which the registration agent <b>110</b> is deployed and providing a user input that causes the matrix barcode scanner to scan the matrix barcode from the display of the user device.</p><p id="p-0047" num="0046">In activity <b>224</b>, the registration system <b>114</b> pre-authorizes the registration agent <b>110</b> (e.g., the user device, which includes the registration agent <b>110</b>) to upload the encrypted data blob to the intermediate cloud storage <b>112</b>. Pre-authorizing the registration agent <b>110</b> to upload the encrypted data blob means that the registration agent <b>110</b> is authorized to upload the encrypted data blob before the registration agent <b>110</b> uploads the encrypted data blob. The registration system <b>114</b> may pre-authorize the registration agent <b>110</b> based at least in part on the matrix barcode (e.g., the correlation key therein) authenticating the registration agent <b>110</b> to the registration system <b>114</b>. The registration system <b>114</b> may indicate that the user device is pre-authorized to upload the encrypted data blob to the intermediate cloud storage <b>112</b> by providing a shared secret (e.g., the session ID) that is associated with the user device to the intermediate cloud storage <b>112</b>. For instance, the intermediate cloud storage <b>112</b> may be configured to ignore (and therefore not store) each data blob (whether encrypted or not) unless the user device that provides the data blob has been pre-authorized by the registration system <b>114</b>. By pre-authorizing user devices in this manner, the intermediate cloud storage <b>112</b> may be spared from being subjected to a large-scale attack in which malicious software applications could bombard the intermediate cloud storage <b>112</b> with data blobs, each of which may include 4 kilobytes (kB) or more of data, until the performance of the intermediate cloud storage <b>112</b> becomes substantially compromised.</p><p id="p-0048" num="0047">In activity <b>226</b>, the registration agent <b>110</b> provides the encrypted data blob and the session ID to the intermediate cloud storage <b>112</b>. For instance, the registration agent <b>110</b> may provide the encrypted data blob and the session ID using a POST command. The encrypted data blob serves as an identifier to identify the user device. For instance, the encrypted data blob may uniquely identify the user device. The registration agent <b>110</b> may authenticate the intermediate cloud storage <b>112</b> before providing the encrypted data blob and the session ID to the intermediate cloud storage <b>112</b>.</p><p id="p-0049" num="0048">In an example embodiment, the registration agent <b>110</b> displays a webpage associated with a device pre-provisioning service of the cloud-based management service <b>116</b> on a display of a user device on which the registration agent <b>110</b> is deployed. The webpage prompts a user of the user device (e.g., an IT administrator who is using the registration system <b>114</b> to pre-provision the user device with the cloud-based management service <b>116</b>) to provide a designated input via a user interface (e.g., display, keyboard, or mouse) of the user device to proceed with registering the user device with the cloud-based management service <b>116</b>. For instance, the user may provide the designated input by selecting a specified interface item on the user interface. In accordance with this embodiment, the registration agent <b>110</b> provides the encrypted data blob and the session ID to the intermediate cloud storage <b>112</b> in response to (e.g., based on) the user providing the designated input.</p><p id="p-0050" num="0049">In activity <b>226</b>, the intermediate cloud storage <b>112</b> provides a confirmation to the registration agent <b>110</b>, confirming that the intermediate cloud storage has received the encrypted data blob and the session ID.</p><p id="p-0051" num="0050">In activity <b>230</b>, the registration system <b>114</b> authenticates to the intermediate cloud storage <b>112</b> using the session ID. In activity <b>230</b>, the registration system <b>114</b> also provides the decryption key and a hash of the correlation key to the intermediate cloud storage <b>112</b>. For instance, the registration system <b>114</b> may generate the hash of the correlation key by performing a hash operation on the correlation key in response to receipt of the correlation key from the registration agent <b>110</b> in activity <b>222</b>.</p><p id="p-0052" num="0051">In activity <b>232</b>, the intermediate cloud storage <b>112</b> provides a confirmation to the registration system <b>114</b>, confirming authentication of the registration system <b>114</b> and receipt of the decryption key and the hash of the correlation key from the registration system <b>114</b> in activity <b>230</b>.</p><p id="p-0053" num="0052">In activity <b>234</b>, the intermediate cloud storage <b>112</b> authenticates to the registration agent <b>110</b> using the session ID, which was received by the intermediate cloud storage <b>112</b> from the registration system <b>114</b> in activity <b>230</b>.</p><p id="p-0054" num="0053">In activity <b>236</b>, the registration agent <b>110</b> provides a confirmation to the intermediate cloud storage <b>112</b>, confirming authentication of the intermediate cloud storage <b>112</b> in activity <b>234</b>.</p><p id="p-0055" num="0054">In activity <b>238</b>, the registration system <b>114</b> provides a request to the intermediate cloud storage <b>112</b>, requesting that the intermediate cloud storage decrypt the encrypted data blob using the decryption key. The request includes the session ID and the correlation key.</p><p id="p-0056" num="0055">In activity <b>240</b>, the intermediate cloud storage <b>112</b> compares the session ID that is received in activity <b>230</b> and the sessions ID that is received in activity <b>238</b> to determine whether the session IDs are same. In activity <b>240</b>, the intermediate cloud storage <b>112</b> also compares the hash of the correlation key that is received in activity <b>230</b> and a hash of the key that is received in activity <b>238</b> to determine whether the hashes are same. For instance, the intermediate cloud storage <b>112</b> may perform a hash operation on the correlation key that is received in activity <b>238</b> to generate the hash thereof. If the session IDs are the same and the hashes are the same, the intermediate cloud storage <b>112</b> decrypts the encrypted data blob using the decryption key. If the session IDs are not the same and/or the hashes are not the same, the intermediate cloud storage <b>112</b> does not decrypt the encrypted data blob. For purposes of illustration, it is assumed that the session IDs are the same and the hashes are the same and that the intermediate cloud storage <b>112</b> decrypts the encrypted data blob.</p><p id="p-0057" num="0056">In activity <b>242</b>, the intermediate cloud storage <b>112</b> provides the decrypted data blob to the registration system <b>114</b>.</p><p id="p-0058" num="0057">In activity <b>244</b>, the registration system <b>114</b> authenticates to the cloud-based management service <b>116</b> using the session ID. In activity <b>244</b>, the registration system <b>114</b> also registers the user device with the cloud-based management service <b>116</b> using the decrypted data blob.</p><p id="p-0059" num="0058">In activity <b>248</b>, the cloud-based management service <b>116</b> forwards the decrypted data blob to the DDS <b>118</b>.</p><p id="p-0060" num="0059">In activity <b>250</b>, the DDS <b>118</b> provides a deployment platform profile ID to the cloud-based management service <b>116</b>. The deployment platform profile ID identifies configuration policies that are to be applied to the user device during configuration of the user device. In an example embodiment, the DDS <b>118</b> cross-references decrypted data blobs, which are associated with respective user devices, with respective deployment platform profile IDs, which are associated with the respective user devices, to provide respective hash-ID pairs. Each of the deployment platform profile IDs identifies configuration policies that are to be applied to the respective user device. In accordance with this embodiment, the DDS <b>118</b> traverses the hash-ID pairs to identity the hash-ID pair that includes the decrypted data blob that is received in activity <b>248</b>. In further accordance with this embodiment, the DDS <b>118</b> identifies the deployment platform profile ID that is to be provided to the cloud-based management service based on the deployment platform profile ID being cross-referenced with the decrypted data blob in the identified hash-ID pair.</p><p id="p-0061" num="0060">In activity <b>252</b>, the cloud-based management service <b>116</b> provides the deployment platform profile ID that is received by the cloud-based management service in activity <b>250</b> to the registration agent <b>110</b> to enable configuration of the user device with using the configuration policies.</p><p id="p-0062" num="0061">In activity <b>254</b>, the registration agent <b>110</b> requests authorization from the user of the user device to configure the user device. For instance, the registration agent <b>110</b> may display an inquiry on a display of the user device, requesting the authorization. The inquiry may indicate that the user device has been registered with the cloud-based management service <b>116</b> and is therefore authorized to be configured using the configuration policies that are identified by the deployment platform profile ID.</p><p id="p-0063" num="0062">Activity <b>254</b> may include asking the user which configurations and/or which of the policies that are identified by the deployment platform profile ID are to be applied to the user device. For instance, the registration agent <b>110</b> may present a list of the configurations and/or the policies and enable the user of the device to select which of the configurations and/or policies are to be applied to the user device or deselect configurations and/or policies that are not to be applied to the user device. Accordingly, the user of the user device may make asynchronous changes to the configurations and/or policies that are to be applied to the user device.</p><p id="p-0064" num="0063">In activity <b>256</b>, the registration agent <b>110</b> configures the user device based on the configuration policies that are identified by the deployment platform profile ID. For instance, the deployment platform profile ID may include the configuration policies or a location indicator that indicates a location from which the configuration policies are capable of being retrieved. Activity <b>256</b> is performed in response to the user of the user device providing the authorization that is requested in activity <b>254</b>. For instance, the user may provide the authorization by providing a designated input via a user interface (e.g., display, keyboard, or mouse) of the user device.</p><p id="p-0065" num="0064">Activities <b>222</b>, <b>224</b>, <b>226</b>, <b>228</b>, <b>230</b>, <b>232</b>, <b>234</b>, <b>236</b>, <b>238</b>, <b>240</b>, <b>242</b>, <b>244</b>, <b>246</b>, <b>248</b>, <b>250</b>, <b>252</b>, <b>254</b>, and <b>256</b> may be performed for each user device that is to be registered with the cloud-based management service <b>116</b>. It will be recognized that any one or more of the activities may be performed in a batch manner (e.g., for more than one user device at a time) to increase speed and efficiency of the registration process. It will be further recognized that any one or more of the activities may be performed iteratively such that the activity is performed for the user devices in respective iterations. Any two or more of the iterations may be performed consecutively.</p><p id="p-0066" num="0065">In some example embodiments, one or more of the steps shown in the activity diagram <b>200</b> may not be performed. Moreover, steps in addition to or in lieu of the steps shown in the activity diagram <b>200</b> may be performed.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is another example activity diagram <b>300</b> for registering a user device with a cloud-based management service using an intermediate cloud storage in accordance with an embodiment. <figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts the registration agent <b>110</b>, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, and the device directory service (DDS) <b>118</b> shown in FIG. <b>1</b>. The activity diagram <b>300</b> includes activities <b>222</b>, <b>224</b>, <b>226</b>, <b>228</b>, <b>230</b>, <b>232</b>, <b>234</b>, <b>236</b>, <b>244</b>, <b>246</b>, <b>248</b>, <b>250</b>, and <b>252</b>, which are the same as the activities having the same reference numerals shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The activity diagram <b>300</b> does not include activities <b>238</b>, <b>240</b>, and <b>242</b> of the activity diagram <b>200</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Instead, the activity diagram <b>300</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref> includes activities <b>362</b>, <b>364</b>, <b>366</b>, and <b>368</b>. Activities <b>362</b>, <b>364</b>, <b>366</b>, and <b>368</b> will now be described with reference to the intermediate cloud storage <b>112</b> and the registration system <b>114</b>.</p><p id="p-0068" num="0067">In activity <b>362</b>, the registration system <b>114</b> provides a request to the intermediate cloud storage <b>112</b>, requesting the encrypted data blob. The request includes the session ID and the correlation key.</p><p id="p-0069" num="0068">In activity <b>364</b>, the intermediate cloud storage <b>112</b> compares the session ID that is received in activity <b>230</b> and the sessions ID that is received in activity <b>362</b> to determine whether the session IDs are same. In activity <b>364</b>, the intermediate cloud storage <b>112</b> also compares the hash of the correlation key that is received in activity <b>230</b> and a hash of the correlation key that is received in activity <b>362</b> to determine whether the hashes are same. For instance, the intermediate cloud storage <b>112</b> may perform a hash operation on the correlation key that is received in activity <b>362</b> to generate the hash thereof. If the session IDs are the same and the hashes are the same, the intermediate cloud storage <b>112</b> provides the encrypted data blob. If the session IDs are not the same and/or the hashes are not the same, the intermediate cloud storage <b>112</b> does not provide the encrypted data blob. For purposes of illustration, it is assumed that the session IDs are the same and the hashes are the same and that the intermediate cloud storage <b>112</b> provides the encrypted data blob.</p><p id="p-0070" num="0069">In activity <b>366</b>, the intermediate cloud storage <b>112</b> provides the encrypted data blob to the registration system <b>114</b>.</p><p id="p-0071" num="0070">In activity <b>368</b>, the registration system <b>114</b> decrypts the encrypted data blob using the decryption key to provide a decrypted data blob.</p><p id="p-0072" num="0071">In some example embodiments, one or more of the steps shown in the activity diagram <b>300</b> may not be performed. Moreover, steps in addition to or in lieu of the steps shown in the activity diagram <b>300</b> may be performed. For instance, the activity diagram <b>300</b> may further include activities <b>254</b> and <b>256</b> shown in the activity diagram <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIGS. <b>4</b>-<b>6</b></figref> depict flowcharts <b>400</b>, <b>500</b>, and <b>600</b> of example methods for registering a user device with a cloud-based management service using an intermediate cloud storage in accordance with embodiments. Flowcharts <b>400</b>, <b>500</b>, and <b>600</b> may be performed by registration system <b>114</b> shown in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>, for example. For illustrative purposes, flowcharts <b>400</b>, <b>500</b>, and <b>600</b> are described with respect to an admin system <b>700</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. The admin system <b>700</b> includes a registration system <b>714</b>, which is an example implementation of the registration system <b>114</b> shown in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>. The registration system <b>714</b> includes scan logic <b>732</b>, trigger logic <b>734</b>, and register logic <b>736</b>. Further structural and operational embodiments will be apparent to persons skilled in the relevant art(s) based on the discussion regarding flowcharts <b>400</b>, <b>500</b>, and <b>600</b>.</p><p id="p-0074" num="0073">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the method of flowchart <b>400</b> begins at step <b>402</b>. In step <b>402</b>, a matrix barcode that identifies the user device is scanned. The matrix barcode includes a session identifier, a decryption key, and a correlation key. For example, the matrix barcode may be a QR code. In another example, the matrix barcode may include a JavaScript Object Notation (JSON) blob that includes the session identifier and the correlation key. The session identifier identifies (e.g., uniquely identifies) a session during which the user device is registered with the cloud-based management service. The session identifier may be a global unique identifier (GUID). The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to a record that is associated with the user device. In an example implementation, the scan logic <b>732</b> scans a matrix barcode <b>738</b> that identifies the user device. In accordance with this implementation, the matrix barcode <b>738</b> includes a session identifier (a.k.a. session ID) <b>748</b>, a correlation key <b>750</b>, and a decryption key <b>754</b>. The scan logic <b>732</b> may generate a trigger instruction <b>742</b> based on (e.g., based at least in part on) receipt of the matrix barcode <b>738</b>. The trigger instruction <b>742</b> instructs the trigger logic <b>734</b> to provide a decryption request <b>744</b> to the intermediate cloud storage.</p><p id="p-0075" num="0074">At step <b>404</b>, the intermediate cloud storage is triggered to decrypt the encrypted data blob using the decryption key to provide a decrypted data blob by providing the session identifier, the decryption key, and the correlation key to the intermediate cloud storage. The encrypted data blob includes information that identifies the user device. For instance, the information in the encrypted data blob may identify hardware that is included in the user device. The encrypted data blob may have been encrypted using an AES-256 encryption technique. Accordingly, the intermediate cloud storage may trigger the intermediate cloud storage to decrypt the encrypted data blob in accordance with the AES-256 encryption technique. It will be recognized that any suitable encryption technique may be used to decrypt the encrypted data blob, depending on the encryption technique that was used to generate the encrypted data blob. For instance, the decryption key may be an asymmetric public key or a symmetric key, depending on whether the encrypted data was encrypted using an asymmetric private key, which corresponds to the asymmetric public key, or the symmetric key. In an example implementation, the trigger logic <b>734</b> triggers the intermediate cloud storage to decrypt the encrypted data blob using the decryption key <b>754</b> to provide a decrypted data blob <b>746</b>. For instance, the trigger logic <b>734</b> may trigger the intermediate cloud storage to decrypt the encrypted data blob based on receipt of the trigger instruction <b>742</b>. In accordance with this implementation, the trigger logic <b>734</b> triggers the intermediate cloud storage by providing the decryption request <b>744</b>, including the session identifier <b>748</b>, the correlation key <b>750</b>, and the decryption key <b>754</b>, to the intermediate cloud storage. The decryption request <b>744</b> requests the intermediate cloud storage to decrypt the encrypted data blob.</p><p id="p-0076" num="0075">In an example embodiment, triggering the intermediate cloud storage at step <b>404</b> includes enabling the intermediate cloud storage to locate the encrypted data blob using the session identifier by providing the session identifier to the intermediate cloud storage.</p><p id="p-0077" num="0076">At step <b>406</b>, the decrypted data blob is received from the intermediate cloud storage. In an example implementation, the register logic <b>736</b> receives the decrypted data blob <b>746</b> from the intermediate cloud storage in response to providing the decryption request <b>744</b> to the intermediate cloud storage.</p><p id="p-0078" num="0077">At step <b>408</b>, the user device is registered with the cloud-based management service using the decrypted data blob. In an example implementation, the register logic <b>736</b> registers the user device with the cloud-based management service using the decrypted data blob <b>746</b>. For instance, the registration logic <b>736</b> may provide a registration instruction <b>752</b>, which includes the decrypted data blob <b>746</b>, to the cloud-based management service. For example, the registration instruction <b>752</b> may instruct the cloud-based management service to confirm registration of the user device with the cloud-based management service. In another example, the registration instruction <b>752</b> may instruct the cloud-based management service to request a deployment platform profile ID, which identifies configuration policies to be applied to the user device during configuration of the user device, from a device directory service.</p><p id="p-0079" num="0078">In an example embodiment, registering the user device at step <b>408</b> includes initiating configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier to the user device. In accordance with this embodiment, the deployment platform profile identifier is based on the decrypted data blob and identifies the policies. For instance, the deployment platform profile identifier may include the policies or include a pointer to a location at which the policies are stored. The deployment platform profile identifier may further identify applications that are to be deployed on the user device. Initiating the configuration of the user device may include embedding information regarding the policies in a Unified Extensible Firmware Interface (UEFI) interface of a motherboard of the user device.</p><p id="p-0080" num="0079">In another example embodiment, the intermediate cloud storage is authenticated to the user device using the session identifier.</p><p id="p-0081" num="0080">In some example embodiments, one or more steps <b>402</b>, <b>404</b>, <b>406</b>, and/or <b>408</b> of flowchart <b>400</b> may not be performed. Moreover, steps in addition to or in lieu of steps <b>402</b>, <b>404</b>, <b>406</b>, and/or <b>408</b> may be performed. For instance, in an example embodiment, the method of flowchart <b>400</b> further includes signing a registration system, which scans the matrix barcode, into a tenant of the cloud-based management service. For example, the registration logic <b>736</b> may sign the registration system <b>714</b> into the tenant. In accordance with this embodiment, the decrypted data blob includes a serial number of the user device. In further accordance with this embodiment, registering the user device with the cloud-based management service includes calling an application programming interface (API) of the cloud-based management service and passing the correlation key and the serial number of the user device to the API.</p><p id="p-0082" num="0081">In another example embodiment, the method of flowchart <b>400</b> further includes pre-authorizing the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device. For instance, the scan logic <b>732</b> may pre-authorize the user device to upload the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode <b>738</b> from the user device.</p><p id="p-0083" num="0082">In yet another example embodiment, the method of flowchart <b>400</b> includes one or more of the steps shown in flowchart <b>500</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>. As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the method of flowchart <b>500</b> begins at step <b>502</b>. In step <b>502</b>, a registration system that scans the matrix barcode authenticates to the intermediate cloud storage using the session identifier. In an example implementation, the scan logic <b>732</b> authenticates the registration system <b>714</b>, which scans the matrix barcode <b>738</b> to the intermediate cloud storage, using the session ID <b>748</b>. For instance, the scan logic <b>732</b> may provide authentication information <b>740</b>, including the session ID <b>748</b>, to the intermediate cloud storage to authenticate the registration system <b>714</b> to the intermediate cloud storage.</p><p id="p-0084" num="0083">At step <b>504</b>, a hash of the correlation key is provided to the intermediate cloud storage. In an example implementation, the scan logic <b>732</b> provides a key hash <b>752</b>, which is a hash of the correlation key <b>750</b>, to the intermediate cloud storage. For instance, the key hash <b>752</b> may be included in the authentication information <b>740</b> that the scan logic <b>732</b> provides to the intermediate cloud storage. In accordance with this implementation, the scan logic <b>732</b> may generate the key hash <b>752</b> by performing a hash operation on the correlation key <b>750</b>. For example, the scan logic <b>732</b> may generate the hash of the correlation key <b>750</b> using a Secure Hash Algorithm 2 (SHA-2) technique, such as SHA-256.</p><p id="p-0085" num="0084">At step <b>506</b>, a request is provided to the intermediate cloud storage. The request includes the session identifier, the decryption key, and the correlation key. The request requests that the intermediate cloud storage use the decryption key that is included in the request to decrypt the encrypted data blob. In an example implementation, the trigger logic <b>734</b> provides the decryption request <b>744</b> to the intermediate cloud storage. The decryption request <b>744</b> includes the session identifier <b>748</b>, the correlation key <b>750</b>, and the decryption key <b>754</b>. The decryption request <b>744</b> requests that the intermediate cloud storage use the decryption key <b>754</b> that is included in the decryption request <b>744</b> to decrypt the encrypted data blob.</p><p id="p-0086" num="0085">At step <b>508</b>, the intermediate cloud storage is caused to verify that the session identifier that is used to authenticate the registration system and the session identifier that is included in the request are same. For instance, causing the intermediate cloud storage to verify that the session identifier that is used to authenticate the registration system and the session identifier that is included in the request are same at step <b>508</b> may be a result of providing the request to the intermediate cloud storage at step <b>506</b>. In an example implementation, the trigger logic <b>734</b> causes the intermediate cloud storage to verify that the session ID that is used to authenticate the registration system <b>714</b> and the session ID <b>748</b> that is included in the decryption request <b>744</b> are same.</p><p id="p-0087" num="0086">At step <b>510</b>, the intermediate cloud storage is caused to verify that the correlation key on which the hash of the correlation key is based and the correlation key that is included in the request are same. For example, the intermediate cloud storage may be caused to verify that the hash of the correlation key that is provided to the intermediate cloud storage at step <b>504</b> and a hash of the correlation key that is included in the request that is provided to the intermediate cloud storage at step <b>506</b> are the same. Causing the intermediate cloud storage to verify that the correlation key on which the hash of the correlation key is based and the correlation key that is included in the request are same at step <b>510</b> may be a result of providing the request to the intermediate cloud storage at step <b>506</b>. In an example implementation, the trigger logic <b>734</b> causes the intermediate cloud storage to verify that the correlation key on which the hash of the correlation key is based and the correlation key <b>750</b> that is included in the decryption request <b>744</b> are same.</p><p id="p-0088" num="0087">In an aspect of this embodiment, decryption of the encrypted data blob is based on steps <b>508</b> and <b>510</b> being successfully completed.</p><p id="p-0089" num="0088">In still another example embodiment, the method of flowchart <b>400</b> includes one or more of the steps shown in flowchart <b>600</b> of <figref idref="DRAWINGS">FIG. <b>6</b></figref>. As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the method of flowchart <b>600</b> begins at step <b>602</b>. In step <b>602</b>, matrix barcodes that identify respective user devices are scanned. Each matrix barcode includes a session identifier, a decryption key, and a correlation key. Each session identifier identifies a session during which the respective user device is registered with the cloud-based management service. Each decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the respective user device. Each correlation key is useable to correlate the respective user device to actions and/or records that are associated with the respective user device. In an example embodiment, the scan logic <b>732</b> scans the matrix barcodes.</p><p id="p-0090" num="0089">At step <b>604</b>, the intermediate cloud storage, which receives encrypted data blobs that include information identifying the respective user devices from the respective user devices, is triggered to decrypt the encrypted data blobs using the respective decryption keys to provide respective decrypted data blobs by providing the respective session identifiers, the respective decryption keys, and the respective correlation keys to the intermediate cloud storage. In an example implementation, trigger logic <b>734</b> triggers the intermediate cloud storage to decrypt the encrypted data blobs using the respective decryption keys to provide the respective decrypted data blobs.</p><p id="p-0091" num="0090">At step <b>606</b>, the decrypted data blobs are received from the intermediate cloud storage. In an example implementation, the register logic <b>736</b> receives the decrypted data blobs from the intermediate cloud storage.</p><p id="p-0092" num="0091">At step <b>608</b>, the user devices are registered with the cloud-based management service using the respective decrypted data blobs. In an example implementation, the register logic <b>736</b> registers the user devices with the cloud-based management service using the respective decrypted data blobs.</p><p id="p-0093" num="0092">In an aspect of this embodiment, the method of flowchart <b>500</b> further includes signing a registration system, which scans the matrix barcodes, into a tenant of the cloud-based management service. For instance, the registration logic <b>736</b> may sign the registration system <b>714</b> into the tenant. In accordance with this aspect, the decrypted data blobs include respective serial numbers of the respective user devices. In further accordance with this aspect, registering the user devices with the cloud-based management service at step <b>608</b> includes performing a batch call into an application programming interface (API) of the cloud-based management service and passing the correlation keys and the serial numbers of the respective user devices to the API.</p><p id="p-0094" num="0093">It will be recognized that the admin system <b>700</b> may not include one or more of the scan logic <b>732</b>, the trigger logic <b>734</b>, and/or the register logic <b>736</b>. Furthermore, the admin system <b>700</b> may include components in addition to or in lieu of the scan logic <b>732</b>, the trigger logic <b>734</b>, and/or the register logic <b>736</b>.</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>8</b>-<b>9</b></figref> depict flowcharts <b>800</b> and <b>900</b> of example methods for registering a user device with a cloud-based management service using an intermediate cloud storage in accordance with embodiments. Flowcharts <b>800</b> and <b>900</b> may be performed by registration system <b>114</b> shown in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>, for example. For illustrative purposes, flowcharts <b>800</b> and <b>900</b> are described with respect to an admin system <b>1000</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. The admin system <b>1000</b> includes a registration system <b>1014</b>, which is an example implementation of the registration system <b>114</b> shown in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>. The registration system <b>1014</b> includes scan logic <b>732</b>, decryption logic <b>1056</b>, and register logic <b>736</b>. Further structural and operational embodiments will be apparent to persons skilled in the relevant art(s) based on the discussion regarding flowcharts <b>800</b> and <b>900</b>.</p><p id="p-0096" num="0095">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the method of flowchart <b>800</b> begins at step <b>802</b>. In step <b>802</b>, a matrix barcode that identifies the user device is scanned. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies (e.g., uniquely identifies) a session during which the user device is registered with the cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to actions and/or records that are associated with the user device. In an example implementation, the scan logic <b>1032</b> scans a matrix barcode <b>738</b> that identifies the user device. In accordance with this implementation, the matrix barcode <b>738</b> includes a session identifier (a.k.a. session ID) <b>748</b>, a decryption key <b>754</b>, and a correlation key <b>750</b>.</p><p id="p-0097" num="0096">At step <b>804</b>, a registration system that scans the matrix barcode is authenticated to the intermediate cloud storage using the session identifier. In an example implementation, the scan logic <b>732</b> authenticates the registration system <b>1014</b> to the intermediate cloud storage using the session ID <b>748</b>. For instance, the scan logic <b>732</b> may provide authentication information <b>740</b>, including the session ID <b>748</b>, to the intermediate cloud storage to authenticate the registration system <b>1014</b> to the intermediate cloud storage. The authentication information may further include a key hash <b>752</b>, which is a hash of the correlation key <b>750</b>. The scan logic <b>732</b> may authenticate the registration system <b>1014</b> to the intermediate cloud storage further using the key hash <b>752</b>.</p><p id="p-0098" num="0097">In an example embodiment, the intermediate cloud storage is authenticated to the user device using the session identifier.</p><p id="p-0099" num="0098">At step <b>806</b>, the encrypted data blob, which includes information identifying the user device, is retrieved from the intermediate cloud storage, which receives the encrypted data blob from the user device. In an example implementation, decryption logic <b>1056</b> retrieves an encrypted data blob <b>1066</b> that includes the information identifying the user device from the intermediate cloud storage, which receives the encrypted data blob <b>1066</b> from the user device. For instance, the decryption logic <b>1056</b> may receive the session ID <b>748</b> and the correlation key <b>750</b> from the scan logic <b>732</b>. In accordance with this implementation, the decryption logic <b>1056</b> may generate a blob request <b>1064</b>, which includes the session ID <b>748</b> and the correlation key <b>750</b>. In further accordance with this implementation, the decryption logic <b>1056</b> may provide the blob request <b>1064</b> to the intermediate cloud storage. In further accordance with this implementation, the decryption logic <b>1056</b> may receive the encrypted data blob <b>1066</b> from the intermediate cloud storage in response to providing the blob request <b>1064</b> to the intermediate cloud storage. For instance, the decryption logic <b>1056</b> may receive the encrypted data blob <b>1066</b> from the intermediate cloud storage based on the intermediate cloud storage confirming that the session ID <b>748</b> in the authentication information <b>740</b> and the session ID <b>748</b> in the blob request <b>1064</b> are same and further based on the intermediate cloud storage confirming that the key hash <b>752</b> in the authentication information <b>740</b> and a hash of the correlation key <b>750</b> in the blob request <b>1064</b> are same.</p><p id="p-0100" num="0099">In an example embodiment, retrieving the encrypted data blob at step <b>806</b> includes enabling the intermediate cloud storage to locate the encrypted data blob using the session identifier by providing the session identifier to the intermediate cloud storage.</p><p id="p-0101" num="0100">At step <b>808</b>, the encrypted data blob, which is retrieved from the intermediate cloud storage, is decrypted using the decryption key that is included in the matrix barcode to provide a decrypted data blob. In an example implementation, decryption logic <b>1056</b> decrypts the encrypted data blob <b>1066</b> using the decryption key <b>754</b> that is included in the matrix barcode <b>738</b> to provide a decrypted data blob <b>746</b>. For instance, the decryption logic <b>1056</b> may receive the decryption key <b>754</b> from the scan logic <b>732</b>.</p><p id="p-0102" num="0101">At step <b>810</b>, the user device is registered with the cloud-based management service using the decrypted data blob. In an example implementation, the register logic <b>736</b> registers the user device with the cloud-based management service using the decrypted data blob <b>746</b>. For instance, the registration logic <b>736</b> may provide a registration instruction <b>752</b>, which includes the decrypted data blob <b>746</b>, to the cloud-based management service. For example, the registration instruction <b>752</b> may instruct the cloud-based management service to confirm registration of the user device with the cloud-based management service. In another example, the registration instruction <b>752</b> may instruct the cloud-based management service to request a deployment platform profile ID, which identifies configuration policies to be applied to the user device during configuration of the user device, from a device directory service.</p><p id="p-0103" num="0102">In an example embodiment, registering the user device at step <b>810</b> includes initiating configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier to the user device. In accordance with this embodiment, the deployment platform profile identifier is based on the decrypted data blob and identifies the policies.</p><p id="p-0104" num="0103">In some example embodiments, one or more steps <b>802</b>, <b>804</b>, <b>806</b>, <b>808</b>, and/or <b>810</b> of flowchart <b>800</b> may not be performed. Moreover, steps in addition to or in lieu of steps <b>802</b>, <b>804</b>, <b>806</b>, <b>808</b>, and/or <b>810</b> may be performed. For instance, in an example embodiment, the method of flowchart <b>800</b> further includes signing a registration system, which scans the matrix barcode, into a tenant of the cloud-based management service. For example, the registration logic <b>736</b> may sign the registration system <b>1014</b> into the tenant. In accordance with this embodiment, the decrypted data blob includes a serial number of the user device. In further accordance with this embodiment, registering the user device with the cloud-based management service includes calling an application programming interface (API) of the cloud-based management service and passing the correlation key and the serial number of the user device to the API.</p><p id="p-0105" num="0104">In another example embodiment, the method of flowchart <b>800</b> further includes pre-authorizing the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device. For instance, the scan logic <b>732</b> may pre-authorize the user device to upload the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode <b>738</b> from the user device.</p><p id="p-0106" num="0105">In yet another example embodiment, the method of flowchart <b>800</b> includes one or more of the steps shown in flowchart <b>900</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref>. As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the method of flowchart <b>900</b> begins at step <b>902</b>. In step <b>902</b>, matrix barcodes that identify respective user devices are scanned. Each matrix barcode includes a session identifier, a decryption key, and a correlation key. Each session identifier identifies a session during which the respective user device is registered with the cloud-based management service. Each decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the respective user device. Each correlation key is useable to correlate the respective user device to actions and/or records that are associated with the respective user device. In an example embodiment, the scan logic <b>732</b> scans the matrix barcodes.</p><p id="p-0107" num="0106">At step <b>904</b>, encrypted data blobs that include information identifying the respective user devices are retrieved from the intermediate cloud storage, which receives the encrypted data blobs from the respective user devices. In an example implementation, the decryption logic <b>1056</b> retrieves the encrypted data blobs that include the information identifying the respective user devices from the intermediate cloud storage.</p><p id="p-0108" num="0107">At step <b>906</b>, the encrypted data blobs, which are retrieved from the intermediate cloud storage, are decrypted using the respective decryption keys that are included in the respective matrix barcodes to provide respective decrypted data blobs. In an example implementation, the decryption logic <b>1056</b> decrypts the encrypted data blobs using the respective decryption keys.</p><p id="p-0109" num="0108">At step <b>908</b>, the user devices are registered with the cloud-based management service using the respective decrypted data blobs. In an example implementation, the register logic <b>736</b> registers the user devices with the cloud-based management service using the respective decrypted data blobs.</p><p id="p-0110" num="0109">In an aspect of this embodiment, the method of flowchart <b>900</b> further includes signing a registration system, which scans the matrix barcodes, into a tenant of the cloud-based management service. For instance, the registration logic <b>736</b> may sign the registration system <b>1014</b> into the tenant. In accordance with this aspect, the decrypted data blobs include respective serial numbers of the respective user devices. In further accordance with this aspect, registering the user devices with the cloud-based management service at step <b>908</b> includes performing a batch call into an application programming interface (API) of the cloud-based management service and passing the correlation keys and the serial numbers of the respective user devices to the API.</p><p id="p-0111" num="0110">It will be recognized that the admin system <b>1000</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref> may not include one or more of the scan logic <b>732</b>, the decryption logic <b>1056</b>, and/or the register logic <b>736</b>. Furthermore, the admin system <b>1000</b> may include components in addition to or in lieu of the scan logic <b>732</b>, the decryption logic <b>1056</b>, and/or the register logic <b>736</b>.</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a system diagram of an exemplary mobile device <b>1100</b> including a variety of optional hardware and software components, shown generally as <b>1102</b>. Any components <b>1102</b> in the mobile device may communicate with any other component, though not all connections are shown, for ease of illustration. The mobile device <b>1100</b> may be any of a variety of computing devices (e.g., cell phone, smartphone, handheld computer, Personal Digital Assistant (PDA), etc.) and may allow wireless two-way communications with one or more mobile communications networks <b>1104</b>, such as a cellular or satellite network, or with a local area or wide area network.</p><p id="p-0113" num="0112">The mobile device <b>1100</b> may include a processor <b>1110</b> (e.g., signal processor, microprocessor, ASIC, or other control and processing logic circuitry) for performing such tasks as signal coding, data processing, input/output processing, power control, and/or other functions. An operating system <b>1112</b> may control the allocation and usage of the components <b>1102</b> and support for one or more applications <b>1114</b> (a.k.a. application programs). The applications <b>1114</b> may include common mobile computing applications (e.g., email applications, calendars, contact managers, web browsers, messaging applications) and any other computing applications (e.g., word processing applications, mapping applications, media player applications).</p><p id="p-0114" num="0113">The mobile device <b>1100</b> may include memory <b>1120</b>. The memory <b>1120</b> may include non-removable memory <b>1122</b> and/or removable memory <b>1124</b>. The non-removable memory <b>1122</b> may include RAM, ROM, flash memory, a hard disk, or other well-known memory storage technologies. The removable memory <b>1124</b> may include flash memory or a Subscriber Identity Module (SIM) card, which is well known in GSM communication systems, or other well-known memory storage technologies, such as &#x201c;smart cards.&#x201d; The memory <b>1120</b> may store data and/or code for running the operating system <b>1112</b> and the applications <b>1114</b>. Example data may include web pages, text, images, sound files, video data, or other data sets to be sent to and/or received from one or more network servers or other devices via one or more wired or wireless networks. Memory <b>1120</b> may store a subscriber identifier, such as an International Mobile Subscriber Identity (IMSI), and an equipment identifier, such as an International Mobile Equipment Identifier (IMEI). Such identifiers may be transmitted to a network server to identify users and equipment.</p><p id="p-0115" num="0114">The mobile device <b>1100</b> may support one or more input devices <b>1130</b>, such as a touch screen <b>1132</b>, microphone <b>1134</b>, camera <b>1136</b>, physical keyboard <b>1138</b> and/or trackball <b>1140</b> and one or more output devices <b>1150</b>, such as a speaker <b>1152</b> and a display <b>1154</b>. Touch screens, such as the touch screen <b>1132</b>, may detect input in different ways. For example, capacitive touch screens detect touch input when an object (e.g., a fingertip) distorts or interrupts an electrical current running across the surface. As another example, touch screens may use optical sensors to detect touch input when beams from the optical sensors are interrupted. Physical contact with the surface of the screen is not necessary for input to be detected by some touch screens. For example, the touch screen <b>1132</b> may support a finger hover detection using capacitive sensing, as is well understood in the art. Other detection techniques may be used, including but not limited to camera-based detection and ultrasonic-based detection. To implement a finger hover, a user's finger is typically within a predetermined spaced distance above the touch screen, such as between 0.1 to 0.25 inches, or between 0.0.25 inches and 0.05 inches, or between 0.0.5 inches and 0.75 inches, or between 0.75 inches and 1 inch, or between 1 inch and 1.5 inches, etc.</p><p id="p-0116" num="0115">The mobile device <b>1100</b> may include registration system <b>1192</b>. The registration system <b>1192</b> is configured to register user device(s) with a cloud-based management system in accordance with any one or more of the techniques described herein.</p><p id="p-0117" num="0116">Other possible output devices (not shown) may include piezoelectric or other haptic output devices. Some devices may serve more than one input/output function. For example, touch screen <b>1132</b> and display <b>1154</b> may be combined in a single input/output device. The input devices <b>1130</b> may include a Natural User Interface (NUI). An NUI is any interface technology that enables a user to interact with a device in a &#x201c;natural&#x201d; manner, free from artificial constraints imposed by input devices such as mice, keyboards, remote controls, and the like. Examples of NUI methods include those relying on speech recognition, touch and stylus recognition, gesture recognition both on screen and adjacent to the screen, air gestures, head and eye tracking, voice and speech, vision, touch, gestures, and machine intelligence. Other examples of a NUI include motion gesture detection using accelerometers/gyroscopes, facial recognition, 3D displays, head, eye, and gaze tracking, immersive augmented reality and virtual reality systems, all of which provide a more natural interface, as well as technologies for sensing brain activity using electric field sensing electrodes (EEG and related methods). Thus, in one specific example, the operating system <b>1112</b> or applications <b>1114</b> may include speech-recognition software as part of a voice control interface that allows a user to operate the mobile device <b>1100</b> via voice commands. Furthermore, the mobile device <b>1100</b> may include input devices and software that allows for user interaction via a user's spatial gestures, such as detecting and interpreting gestures to provide input to a gaming application.</p><p id="p-0118" num="0117">Wireless modem(s) <b>1160</b> may be coupled to antenna(s) (not shown) and may support two-way communications between the processor <b>1110</b> and external devices, as is well understood in the art. The modem(s) <b>1160</b> are shown generically and may include a cellular modem <b>1166</b> for communicating with the mobile communication network <b>1104</b> and/or other radio-based modems (e.g., Bluetooth&#xae; 1164 and/or Wi-Fi <b>1162</b>). At least one of the wireless modem(s) <b>1160</b> is typically configured for communication with one or more cellular networks, such as a GSM network for data and voice communications within a single cellular network, between cellular networks, or between the mobile device and a public switched telephone network (PSTN).</p><p id="p-0119" num="0118">The mobile device may further include at least one input/output port <b>1180</b>, a power supply <b>1182</b>, a satellite navigation system receiver <b>1184</b>, such as a Global Positioning System (GPS) receiver, an accelerometer <b>1186</b>, and/or a physical connector <b>1190</b>, which may be a USB port, IEEE 1394 (FireWire) port, and/or RS-232 port. The illustrated components <b>1102</b> are not required or all-inclusive, as any components may be deleted and other components may be added as would be recognized by one skilled in the art.</p><p id="p-0120" num="0119">Although the operations of some of the disclosed methods are described in a particular, sequential order for convenient presentation, it should be understood that this manner of description encompasses rearrangement, unless a particular ordering is required by specific language set forth herein. For example, operations described sequentially may in some cases be rearranged or performed concurrently. Moreover, for the sake of simplicity, the attached figures may not show the various ways in which the disclosed methods may be used in conjunction with other methods.</p><p id="p-0121" num="0120">Any one or more of the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, the DDS <b>118</b>, the registration system <b>714</b>, the scan logic <b>732</b>, the trigger logic <b>734</b>, the register logic <b>736</b>, the registration system <b>1014</b>, the decryption logic <b>1056</b>, the activity diagram <b>200</b>, the activity diagram <b>300</b>, the flowchart <b>400</b>, the flowchart <b>500</b>, the flowchart <b>600</b>, the flowchart <b>800</b>, and/or the flowchart <b>900</b> may be implemented in hardware, software, firmware, or any combination thereof.</p><p id="p-0122" num="0121">For example, any one or more of the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, the DDS <b>118</b>, the registration system <b>714</b>, the scan logic <b>732</b>, the trigger logic <b>734</b>, the register logic <b>736</b>, the registration system <b>1014</b>, the decryption logic <b>1056</b>, the activity diagram <b>200</b>, the activity diagram <b>300</b>, the flowchart <b>400</b>, the flowchart <b>500</b>, the flowchart <b>600</b>, the flowchart <b>800</b>, and/or the flowchart <b>900</b> may be implemented, at least in part, as computer program code configured to be executed in one or more processors.</p><p id="p-0123" num="0122">In another example, any one or more of the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, the DDS <b>118</b>, the registration system <b>714</b>, the scan logic <b>732</b>, the trigger logic <b>734</b>, the register logic <b>736</b>, the registration system <b>1014</b>, the decryption logic <b>1056</b>, the activity diagram <b>200</b>, the activity diagram <b>300</b>, the flowchart <b>400</b>, the flowchart <b>500</b>, the flowchart <b>600</b>, the flowchart <b>800</b>, and/or the flowchart <b>900</b> may be implemented, at least in part, as hardware logic/electrical circuitry. Such hardware logic/electrical circuitry may include one or more hardware logic components. Examples of a hardware logic component include but are not limited to a field-programmable gate array (FPGA), an application-specific integrated circuit (ASIC), an application-specific standard product (ASSP), a system-on-a-chip system (SoC), a complex programmable logic device (CPLD), etc. For instance, a SoC may include an integrated circuit chip that includes one or more of a processor (e.g., a microcontroller, microprocessor, digital signal processor (DSP), etc.), memory, one or more communication interfaces, and/or further circuits and/or embedded firmware to perform its functions.</p><heading id="h-0008" level="1">III. Further Discussion of Some Example Embodiments</heading><p id="p-0124" num="0123">A first example system to register a user device with a cloud-based management system using an intermediate cloud storage comprises a memory and one or more processors coupled to the memory. The one or more processors are configured to analyze a matrix barcode that identifies the user device, the matrix barcode including a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with the cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to a record that is associated with the user device. The one or more processors are further configured to trigger the intermediate cloud storage to decrypt the encrypted data blob, which includes information that identifies the user device, using the decryption key to provide a decrypted data blob by providing the session identifier, the decryption key, and the correlation key to the intermediate cloud storage. The one or more processors are further configured to register the user device with the cloud-based management service using the decrypted data blob, which is received from the intermediate cloud storage.</p><p id="p-0125" num="0124">In a first aspect of the first example system, the one or more processors are configured to authenticate the first example system to the intermediate cloud storage using the session identifier. In accordance with the first aspect, the one or more processors are configured to provide a hash of the correlation key to the intermediate cloud storage. In further accordance with the first aspect, the one or more processors are configured to provide a request to the intermediate cloud storage. The request includes the session identifier, the decryption key, and the correlation key. The request requests that the intermediate cloud storage use the decryption key that is included in the request to decrypt the encrypted data blob. In further accordance with the first aspect, the one or more processors are configured to cause the intermediate cloud storage to verify that the session identifier that is used to authenticate the first example system to the intermediate cloud storage and the session identifier that is included in the request are same. In further accordance with the first aspect, the one or more processors are configured to cause the intermediate cloud storage to verify that the correlation key on which the hash of the correlation key is based and the correlation key that is included in the request are same.</p><p id="p-0126" num="0125">In a second aspect of the first example system, the intermediate cloud storage is authenticated to the user device using the session identifier. The second aspect of the first example system may be implemented in combination with the first aspect of the first example system, though the example embodiments are not limited in this respect.</p><p id="p-0127" num="0126">In a third aspect of the first example system, the one or more processors are configured to analyze a plurality of matrix barcodes that identify a plurality of respective user devices. Each matrix barcode includes a session identifier, a decryption key, and a correlation key. Each session identifier identifies a session during which the respective user device is registered with the cloud-based management service. Each decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the respective user device. Each correlation key is useable to correlate the respective user device to a record that is associated with the respective user device. In accordance with the third aspect, the one or more processors are configured to trigger the intermediate cloud storage, which receives a plurality of encrypted data blobs that include information identifying the plurality of respective user devices from the plurality of respective user devices, to decrypt the plurality of encrypted data blobs using the respective decryption keys to provide a plurality of respective decrypted data blobs by providing the respective session identifiers, the respective decryption keys, and the respective correlation keys to the intermediate cloud storage. In further accordance with the third aspect, the one or more processors are configured to register the plurality of user devices with the cloud-based management service using the plurality of respective decrypted data blobs, which are received from the intermediate cloud storage. The third aspect of the first example system may be implemented in combination with the first and/or second aspect of the first example system, though the example embodiments are not limited in this respect.</p><p id="p-0128" num="0127">In an implementation of the third aspect of the first example system, the one or more processors are configured to sign the first example system into a tenant of the cloud-based management service. In accordance with this implementation, the one or more processors are configured to perform a batch call into an application programming interface (API) of the cloud-based management service. In further accordance with this implementation, the one or more processors are configured to pass the correlation keys and a plurality of serial numbers of the plurality of respective user devices to the API, wherein the plurality of serial numbers is included in the plurality of respective decrypted data blobs.</p><p id="p-0129" num="0128">In a fourth aspect of the first example system, the one or more processors are configured to enable the intermediate cloud storage to locate the encrypted data blob using the session identifier by providing the session identifier to the intermediate cloud storage. The fourth aspect of the first example system may be implemented in combination with the first, second, and/or third aspect of the first example system, though the example embodiments are not limited in this respect.</p><p id="p-0130" num="0129">In a fifth aspect of the first example system, the one or more processors are configured to initiate configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier, which is based on the decrypted data blob and which identifies the policies, to the user device. The fifth aspect of the first example system may be implemented in combination with the first, second, third, and/or fourth aspect of the first example system, though the example embodiments are not limited in this respect.</p><p id="p-0131" num="0130">In a sixth aspect of the first example system, the one or more processors are configured to sign the first example system into a tenant of the cloud-based management service. In accordance with the sixth aspect, the one or more processors are configured to call an application programming interface (API) of the cloud-based management service. In further accordance with the sixth aspect, the one or more processors are configured to pass the correlation key and a serial number of the user device to the API, wherein the serial number of the user device is included in the decrypted data blob. The sixth aspect of the first example system may be implemented in combination with the first, second, third, fourth, and/or fifth aspect of the first example system, though the example embodiments are not limited in this respect.</p><p id="p-0132" num="0131">In a seventh aspect of the first example system, the one or more processors are further configured to pre-authorize the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device. The seventh aspect of the first example system may be implemented in combination with the first, second, third, fourth, fifth, and/or sixth aspect of the first example system, though the example embodiments are not limited in this respect.</p><p id="p-0133" num="0132">A second example system to register a user device with a cloud-based management system using an intermediate cloud storage comprises a memory and one or more processors coupled to the memory. The one or more processors are configured to analyze a matrix barcode that identifies the user device. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with the cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to a record that is associated with the user device. The one or more processors are further configured to retrieve the encrypted data blob, which includes information identifying the user device, from the intermediate cloud storage, which receives the encrypted data blob from the user device. The one or more processors are further configured to decrypt the encrypted data blob, which is retrieved from the intermediate cloud storage, using the decryption key that is included in the matrix barcode to provide a decrypted data blob. The one or more processors are further configured to register the user device with the cloud-based management service using the decrypted data blob.</p><p id="p-0134" num="0133">In a first aspect of the second example system, the one or more processors are further configured to authenticate the second example system to the intermediate cloud storage using the session identifier.</p><p id="p-0135" num="0134">In a second aspect of the second example system, the intermediate cloud storage is authenticated to the user device using the session identifier. The second aspect of the second example system may be implemented in combination with the first aspect of the second example system, though the example embodiments are not limited in this respect.</p><p id="p-0136" num="0135">In a third aspect of the second example system, the one or more processors are configured to analyze a plurality of matrix barcodes that identify a plurality of respective user devices. Each matrix barcode includes a session identifier, a decryption key, and a correlation key. Each session identifier identifies a session during which the respective user device is registered with the cloud-based management service. Each decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the respective user device. Each correlation key is useable to correlate the respective user device to a record that is associated with the respective user device. In accordance with the third aspect, the one or more processors are configured to retrieve a plurality of encrypted data blobs that include information identifying the plurality of respective user devices from the intermediate cloud storage, which receives the plurality of encrypted data blobs from the plurality of respective user devices. In further accordance with the third aspect, the one or more processors are configured to decrypt the plurality of encrypted data blobs, which are retrieved from the intermediate cloud storage, using the respective decryption keys that are included in the plurality of respective matrix barcodes to provide a plurality of respective decrypted data blobs. In further accordance with the third aspect, the one or more processors are configured to register the plurality of user devices with the cloud-based management service using the plurality of respective decrypted data blobs. The third aspect of the second example system may be implemented in combination with the first and/or second aspect of the second example system, though the example embodiments are not limited in this respect.</p><p id="p-0137" num="0136">In an implementation of the third aspect of the second example system, the one or more processors are configured to sign the second example system into a tenant of the cloud-based management service. In accordance with this implementation, the one or more processors are configured to perform a batch call into an application programming interface (API) of the cloud-based management service. In further accordance with this implementation, the one or more processors are configured to pass the correlation keys and a plurality of serial numbers of the plurality of respective user devices to the API, wherein the plurality of decrypted data blobs includes the plurality of respective serial numbers.</p><p id="p-0138" num="0137">In a fourth aspect of the second example system, the one or more processors are configured to enable the intermediate cloud storage to locate the encrypted data blob using the session identifier by providing the session identifier to the intermediate cloud storage. The fourth aspect of the second example system may be implemented in combination with the first, second, and/or third aspect of the second example system, though the example embodiments are not limited in this respect.</p><p id="p-0139" num="0138">In a fifth aspect of the second example system, the one or more processors are configured to initiate configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier, which is based on the decrypted data blob and which identifies the policies, to the user device. The fifth aspect of the second example system may be implemented in combination with the first, second, third, and/or fourth aspect of the second example system, though the example embodiments are not limited in this respect.</p><p id="p-0140" num="0139">In a sixth aspect of the second example system, the one or more processors are configured to sign the second example system into a tenant of the cloud-based management service. In accordance with the sixth aspect, the one or more processors are configured to call an application programming interface (API) of the cloud-based management service. In further accordance with the sixth aspect, the one or more processors are configured to pass the correlation key and a serial number of the user device to the API, wherein the serial number of the user device is included in the decrypted data blob. The sixth aspect of the second example system may be implemented in combination with the first, second, third, fourth, and/or fifth aspect of the second example system, though the example embodiments are not limited in this respect.</p><p id="p-0141" num="0140">In a seventh aspect of the second example system, the one or more processors are further configured to pre-authorize the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device. The seventh aspect of the second example system may be implemented in combination with the first, second, third, fourth, fifth, and/or sixth aspect of the second example system, though the example embodiments are not limited in this respect.</p><p id="p-0142" num="0141">In a first example method of registering a user device with a cloud-based management system using an intermediate cloud storage, a matrix barcode that identifies the user device is scanned. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with the cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to a record that is associated with the user device. The intermediate cloud storage is triggered to decrypt the encrypted data blob, which includes information that identifies the user device, using the decryption key to provide a decrypted data blob by providing the session identifier, the decryption key, and the correlation key to the intermediate cloud storage. The decrypted data blob is received from the intermediate cloud storage. The user device is registered with the cloud-based management service using the decrypted data blob.</p><p id="p-0143" num="0142">In a first aspect of the first example method, a registration system that scans the matrix barcode is authenticated to the intermediate cloud storage using the session identifier. In accordance with the first aspect, a hash of the correlation key is provided to the intermediate cloud storage. In further accordance with the first aspect, triggering the intermediate cloud storage to decrypt the encrypted data blob comprises providing a request to the intermediate cloud storage. The request includes the session identifier, the decryption key, and the correlation key. The request requests that the intermediate cloud storage use the decryption key that is included in the request to decrypt the encrypted data blob. In further accordance with the first aspect, triggering the intermediate cloud storage to decrypt the encrypted data blob comprises causing the intermediate cloud storage to verify that the session identifier that is used to authenticate the registration system that scans the matrix barcode to the intermediate cloud storage and the session identifier that is included in the request are same. In further accordance with the first aspect, triggering the intermediate cloud storage to decrypt the encrypted data blob comprises causing the intermediate cloud storage to verify that the correlation key on which the hash of the correlation key is based and the correlation key that is included in the request are same.</p><p id="p-0144" num="0143">In a second aspect of the first example method, the intermediate cloud storage is authenticated to the user device using the session identifier. The second aspect of the first example method may be implemented in combination with the first aspect of the first example method, though the example embodiments are not limited in this respect.</p><p id="p-0145" num="0144">In a third aspect of the first example method, scanning the matrix barcode comprises scanning a plurality of matrix barcodes that identify a plurality of respective user devices. Each matrix barcode includes a session identifier, a decryption key, and a correlation key. Each session identifier identifies a session during which the respective user device is registered with the cloud-based management service. Each decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the respective user device. Each correlation key is useable to correlate the respective user device to a record that is associated with the respective user device. In accordance with the third aspect, triggering the intermediate cloud storage comprises triggering the intermediate cloud storage, which receives a plurality of encrypted data blobs that include information identifying the plurality of respective user devices from the plurality of respective user devices, to decrypt the plurality of encrypted data blobs using the respective decryption keys to provide a plurality of respective decrypted data blobs by providing the respective session identifiers, the respective decryption keys, and the respective correlation keys to the intermediate cloud storage. In further accordance with the third aspect, receiving the decrypted data blob comprises receiving the plurality of decrypted data blobs from the intermediate cloud storage. In further accordance with the third aspect, registering the user device comprises registering the plurality of user devices with the cloud-based management service using the plurality of respective decrypted data blobs. The third aspect of the first example method may be implemented in combination with the first and/or second aspect of the first example method, though the example embodiments are not limited in this respect.</p><p id="p-0146" num="0145">In an implementation of the third aspect of the first example method, the first example method further comprises signing a registration system, which scans the plurality of matrix barcodes, into a tenant of the cloud-based management service. In accordance with this implementation, the plurality of decrypted data blobs includes a plurality of respective serial numbers of the plurality of respective user devices. In further accordance with this implementation, registering the plurality of user devices with the cloud-based management service comprises performing a batch call into an application programming interface (API) of the cloud-based management service. In further accordance with this implementation, registering the plurality of user devices with the cloud-based management service comprises passing the correlation keys and the serial numbers of the respective user devices to the API.</p><p id="p-0147" num="0146">In a fourth aspect of the first example method, triggering the intermediate cloud storage to decrypt the encrypted data blob comprises enabling the intermediate cloud storage to locate the encrypted data blob using the session identifier by providing the session identifier to the intermediate cloud storage. The fourth aspect of the first example method may be implemented in combination with the first, second, and/or third aspect of the first example method, though the example embodiments are not limited in this respect.</p><p id="p-0148" num="0147">In a fifth aspect of the first example method, registering the user device comprises initiating configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier, which is based on the decrypted data blob and which identifies the policies, to the user device. The fifth aspect of the first example method may be implemented in combination with the first, second, third, and/or fourth aspect of the first example method, though the example embodiments are not limited in this respect.</p><p id="p-0149" num="0148">In a sixth aspect of the first example method, the first example method further comprises signing a registration system, which scans the matrix barcode, into a tenant of the cloud-based management service. In accordance with the sixth aspect, the decrypted data blob includes a serial number of the user device. In further accordance with the sixth aspect, registering the user device with the cloud-based management service comprises calling an application programming interface (API) of the cloud-based management service. In further accordance with the sixth aspect, registering the user device with the cloud-based management service comprises passing the correlation key and the serial number of the user device to the API. The sixth aspect of the first example method may be implemented in combination with the first, second, third, fourth, and/or fifth aspect of the first example method, though the example embodiments are not limited in this respect.</p><p id="p-0150" num="0149">In a seventh aspect of the first example method, the first example method further comprises pre-authorizing the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device. The seventh aspect of the first example method may be implemented in combination with the first, second, third, fourth, fifth, and/or sixth aspect of the first example method, though the example embodiments are not limited in this respect.</p><p id="p-0151" num="0150">In a second example method of registering a user device with a cloud-based management system using an intermediate cloud storage, a matrix barcode that identifies the user device is scanned. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with the cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to a record that is associated with the user device. The encrypted data blob, which includes information identifying the user device, is retrieved from the intermediate cloud storage, which receives the encrypted data blob from the user device. The encrypted data blob, which is retrieved from the intermediate cloud storage, is decrypted using the decryption key that is included in the matrix barcode to provide a decrypted data blob. The user device is registered with the cloud-based management service using the decrypted data blob.</p><p id="p-0152" num="0151">In a first aspect of the second example method, the second example method further comprises authenticating a registration system that scans the matrix barcode to the intermediate cloud storage using the session identifier.</p><p id="p-0153" num="0152">In a second aspect of the second example method, the intermediate cloud storage is authenticated to the user device using the session identifier. The second aspect of the second example method may be implemented in combination with the first aspect of the second example method, though the example embodiments are not limited in this respect.</p><p id="p-0154" num="0153">In a third aspect of the second example method, scanning the matrix barcode comprises scanning a plurality of matrix barcodes that identify a plurality of respective user devices. Each matrix barcode includes a session identifier, a decryption key, and a correlation key. Each session identifier identifies a session during which the respective user device is registered with the cloud-based management service. Each decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the respective user device. Each correlation key is useable to correlate the respective user device to a record that is associated with the respective user device. In accordance with the third aspect, retrieving the encrypted data blob comprises retrieving a plurality of encrypted data blobs that include information identifying the plurality of respective user devices from the intermediate cloud storage, which receives the plurality of encrypted data blobs from the plurality of respective user devices. In further accordance with the third aspect, decrypting the encrypted data blob comprises decrypting the plurality of encrypted data blobs, which are retrieved from the intermediate cloud storage, using the respective decryption keys that are included in the plurality of respective matrix barcodes to provide a plurality of respective decrypted data blobs. In further accordance with the third aspect, registering the user device comprises registering the plurality of user devices with the cloud-based management service using the plurality of respective decrypted data blobs. The third aspect of the second example method may be implemented in combination with the first and/or second aspect of the second example method, though the example embodiments are not limited in this respect.</p><p id="p-0155" num="0154">In an implementation of the third aspect of the second example method, the second example method further comprises signing a registration system, which scans the plurality of matrix barcodes, into a tenant of the cloud-based management service. In accordance with this implementation, the plurality of decrypted data blobs includes a plurality of respective serial numbers of the plurality of respective user devices. In further accordance with this implementation, registering the plurality of user devices with the cloud-based management service comprises performing a batch call into an application programming interface (API) of the cloud-based management service. In further accordance with this implementation, registering the plurality of user devices with the cloud-based management service comprises passing the correlation keys and the serial numbers of the respective user devices to the API.</p><p id="p-0156" num="0155">In a fourth aspect of the second example method, retrieving the encrypted data blob from the intermediate cloud storage comprises enabling the intermediate cloud storage to locate the encrypted data blob using the session identifier by providing the session identifier to the intermediate cloud storage. The fourth aspect of the second example method may be implemented in combination with the first, second, and/or third aspect of the second example method, though the example embodiments are not limited in this respect.</p><p id="p-0157" num="0156">In a fifth aspect of the second example method, registering the user device comprises initiating configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier, which is based on the decrypted data blob and which identifies the policies, to the user device. The fifth aspect of the second example method may be implemented in combination with the first, second, third, and/or fourth aspect of the second example method, though the example embodiments are not limited in this respect.</p><p id="p-0158" num="0157">In a sixth aspect of the second example method, the second example method further comprises signing a registration system, which scans the matrix barcode, into a tenant of the cloud-based management service. In accordance with the sixth aspect, the decrypted data blob includes a serial number of the user device. In further accordance with the sixth aspect, registering the user device with the cloud-based management service comprises calling an application programming interface (API) of the cloud-based management service. In further accordance with the sixth aspect, registering the user device with the cloud-based management service comprises passing the correlation key and the serial number of the user device to the API. The sixth aspect of the second example method may be implemented in combination with the first, second, third, fourth, and/or fifth aspect of the second example method, though the example embodiments are not limited in this respect.</p><p id="p-0159" num="0158">In a seventh aspect of the second example method, the second example method further comprises pre-authorizing the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device. The seventh aspect of the second example method may be implemented in combination with the first, second, third, fourth, fifth, and/or sixth aspect of the second example method, though the example embodiments are not limited in this respect.</p><p id="p-0160" num="0159">A first example computer program product comprises a computer-readable storage medium having instructions recorded thereon for enabling a processor-based system to register a user device with a cloud-based management system using an intermediate cloud storage by perform operations. The operations comprise analyzing a matrix barcode that identifies the user device. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with the cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to a record that is associated with the user device. The operations further comprise triggering the intermediate cloud storage to decrypt the encrypted data blob, which includes information that identifies the user device, using the decryption key to provide a decrypted data blob by providing the session identifier, the decryption key, and the correlation key to the intermediate cloud storage. The operations further comprise registering the user device with the cloud-based management service using the decrypted data blob, which is received from the intermediate cloud storage.</p><p id="p-0161" num="0160">A second example computer program product comprises a computer-readable storage medium having instructions recorded thereon for enabling a processor-based system to register a user device with a cloud-based management system using an intermediate cloud storage by perform operations. The operations comprise analyzing a matrix barcode that identifies the user device. The matrix barcode includes a session identifier, a decryption key, and a correlation key. The session identifier identifies a session during which the user device is registered with the cloud-based management service. The decryption key is configured to be used to decrypt an encrypted data blob that is to be received from the user device. The correlation key is useable to correlate the user device to a record that is associated with the user device. The operations further comprise retrieving the encrypted data blob, which includes information identifying the user device, from the intermediate cloud storage, which receives the encrypted data blob from the user device. The operations further comprise decrypting the encrypted data blob, which is retrieved from the intermediate cloud storage, using the decryption key that is included in the matrix barcode to provide a decrypted data blob. The operations further comprise registering the user device with the cloud-based management service using the decrypted data blob.</p><heading id="h-0009" level="1">IV. Example Computer System</heading><p id="p-0162" num="0161"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts an example computer <b>1200</b> in which embodiments may be implemented. Any one or more of user devices <b>102</b>A-<b>102</b>M, any one or more of servers <b>106</b>A-<b>106</b>N, and/or admin system <b>108</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>; admin system <b>700</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>; and/or admin system <b>1000</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> may be implemented using computer <b>1200</b>, including one or more features of computer <b>1200</b> and/or alternative features. Computer <b>1200</b> may be a general-purpose computing device in the form of a conventional personal computer, a mobile computer, or a workstation, for example, or computer <b>1200</b> may be a special purpose computing device. The description of computer <b>1200</b> provided herein is provided for purposes of illustration, and is not intended to be limiting. Embodiments may be implemented in further types of computer systems, as would be known to persons skilled in the relevant art(s).</p><p id="p-0163" num="0162">As shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, computer <b>1200</b> includes a processing unit <b>1202</b>, a system memory <b>1204</b>, and a bus <b>1206</b> that couples various system components including system memory <b>1204</b> to processing unit <b>1202</b>. Bus <b>1206</b> represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. System memory <b>1204</b> includes read only memory (ROM) <b>1208</b> and random access memory (RAM) <b>1210</b>. A basic input/output system <b>1212</b> (BIOS) is stored in ROM <b>1208</b>.</p><p id="p-0164" num="0163">Computer <b>1200</b> also has one or more of the following drives: a hard disk drive <b>1214</b> for reading from and writing to a hard disk, a magnetic disk drive <b>1216</b> for reading from or writing to a removable magnetic disk <b>1218</b>, and an optical disk drive <b>1220</b> for reading from or writing to a removable optical disk <b>1222</b> such as a CD ROM, DVD ROM, or other optical media. Hard disk drive <b>1214</b>, magnetic disk drive <b>1216</b>, and optical disk drive <b>1220</b> are connected to bus <b>1206</b> by a hard disk drive interface <b>1224</b>, a magnetic disk drive interface <b>1226</b>, and an optical drive interface <b>1228</b>, respectively. The drives and their associated computer-readable storage media provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for the computer. Although a hard disk, a removable magnetic disk and a removable optical disk are described, other types of computer-readable storage media can be used to store data, such as flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like.</p><p id="p-0165" num="0164">A number of program modules may be stored on the hard disk, magnetic disk, optical disk, ROM, or RAM. These programs include an operating system <b>1230</b>, one or more application programs <b>1232</b>, other program modules <b>1234</b>, and program data <b>1236</b>. Application programs <b>1232</b> or program modules <b>1234</b> may include, for example, computer program logic for implementing any one or more of (e.g., at least a portion of) the registration agents <b>110</b>A-<b>110</b>M, the intermediate cloud storage <b>112</b>, the registration system <b>114</b>, the cloud-based management service <b>116</b>, the DDS <b>118</b>, the registration system <b>714</b>, the scan logic <b>732</b>, the trigger logic <b>734</b>, the register logic <b>736</b>, the registration system <b>1014</b>, the decryption logic <b>1056</b>, the activity diagram <b>200</b> (including any activity of activity diagram <b>200</b>), the activity diagram <b>300</b> (including any activity of activity diagram <b>300</b>), the flowchart <b>400</b> (including any step of flowchart <b>400</b>), the flowchart <b>500</b> (including any step of flowchart <b>500</b>), the flowchart <b>600</b> (including any step of flowchart <b>600</b>), the flowchart <b>800</b> (including any step of flowchart <b>800</b>), and/or the flowchart <b>900</b> (including any step of flowchart <b>900</b>), as described herein.</p><p id="p-0166" num="0165">A user may enter commands and information into the computer <b>1200</b> through input devices such as keyboard <b>1238</b> and pointing device <b>1240</b>. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, touch screen, camera, accelerometer, gyroscope, or the like. These and other input devices are often connected to the processing unit <b>1202</b> through a serial port interface <b>1242</b> that is coupled to bus <b>1206</b>, but may be connected by other interfaces, such as a parallel port, game port, or a universal serial bus (USB).</p><p id="p-0167" num="0166">A display device <b>1244</b> (e.g., a monitor) is also connected to bus <b>1206</b> via an interface, such as a video adapter <b>1246</b>. In addition to display device <b>1244</b>, computer <b>1200</b> may include other peripheral output devices (not shown) such as speakers and printers.</p><p id="p-0168" num="0167">Computer <b>1200</b> is connected to a network <b>1248</b> (e.g., the Internet) through a network interface or adapter <b>1250</b>, a modem <b>1252</b>, or other means for establishing communications over the network. Modem <b>1252</b>, which may be internal or external, is connected to bus <b>1206</b> via serial port interface <b>1242</b>.</p><p id="p-0169" num="0168">As used herein, the terms &#x201c;computer program medium&#x201d; and &#x201c;computer-readable storage medium&#x201d; are used to generally refer to media (e.g., non-transitory media) such as the hard disk associated with hard disk drive <b>1214</b>, removable magnetic disk <b>1218</b>, removable optical disk <b>1222</b>, as well as other media such as flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like. A computer-readable storage medium is not a signal, such as a carrier signal or a propagating signal. For instance, a computer-readable storage medium may not include a signal. Accordingly, a computer-readable storage medium does not constitute a signal per se. Computer-readable storage media are distinguished from and non-overlapping with communication media (do not include communication media). Communication media embodies computer-readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wireless media such as acoustic, RF, infrared and other wireless media, as well as wired media. Example embodiments are also directed to such communication media.</p><p id="p-0170" num="0169">As noted above, computer programs and modules (including application programs <b>1232</b> and other program modules <b>1234</b>) may be stored on the hard disk, magnetic disk, optical disk, ROM, or RAM. Such computer programs may also be received via network interface <b>1250</b> or serial port interface <b>1242</b>. Such computer programs, when executed or loaded by an application, enable computer <b>1200</b> to implement features of embodiments discussed herein. Accordingly, such computer programs represent controllers of the computer <b>1200</b>.</p><p id="p-0171" num="0170">Example embodiments are also directed to computer program products comprising software (e.g., computer-readable instructions) stored on any computer-useable medium. Such software, when executed in one or more data processing devices, causes data processing device(s) to operate as described herein. Embodiments may employ any computer-useable or computer-readable medium, known now or in the future. Examples of computer-readable mediums include, but are not limited to storage devices such as RAM, hard drives, floppy disks, CD ROMs, DVD ROMs, zip disks, tapes, magnetic storage devices, optical storage devices, MEMS-based storage devices, nanotechnology-based storage devices, and the like.</p><p id="p-0172" num="0171">It will be recognized that the disclosed technologies are not limited to any particular computer or type of hardware. Certain details of suitable computers and hardware are well known and need not be set forth in detail in this disclosure.</p><heading id="h-0010" level="1">V. Conclusion</heading><p id="p-0173" num="0172">Although the subject matter has been described in language specific to structural features and/or acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as examples of implementing the claims, and other equivalent features and acts are intended to be within the scope of the claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of registering a user device with a cloud-based management system using an intermediate cloud storage, the method comprising:<claim-text>analyzing a matrix barcode that identifies the user device, the matrix barcode including a decryption key and a correlation key, the decryption key configured to decrypt an encrypted data blob from the user device, the correlation key configured to correlate the user device to a record that is associated with the user device;</claim-text><claim-text>triggering the intermediate cloud storage to decrypt the encrypted data blob, which includes information that identifies the user device, using the decryption key to provide a decrypted data blob by providing the decryption key and the correlation key to the intermediate cloud storage; and</claim-text><claim-text>registering the user device with the cloud-based management service using the decrypted data blob, which is received from the intermediate cloud storage.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>pre-authorizing the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>providing a hash of the correlation key to the intermediate cloud storage;</claim-text><claim-text>wherein triggering the intermediate cloud storage to decrypt the encrypted data blob comprises:<claim-text>providing a request to the intermediate cloud storage, the request including the decryption key and the correlation key, the request requesting that the intermediate cloud storage use the decryption key that is included in the request to decrypt the encrypted data blob; and</claim-text><claim-text>causing the intermediate cloud storage to verify that the correlation key on which the hash of the correlation key is based and the correlation key that is included in the request are same.</claim-text></claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein analyzing the matrix barcode comprises:<claim-text>analyzing a plurality of matrix barcodes that identify a plurality of respective user devices, each matrix barcode including a decryption key and a correlation key, each decryption key configured to decrypt an encrypted data blob from the respective user device, each correlation key configured to correlate the respective user device to a record that is associated with the respective user device;</claim-text><claim-text>wherein triggering the intermediate cloud storage comprises:<claim-text>triggering the intermediate cloud storage, which receives a plurality of encrypted data blobs that include information identifying the plurality of respective user devices from the plurality of respective user devices, to decrypt the plurality of encrypted data blobs using the respective decryption keys to provide a plurality of respective decrypted data blobs by providing the respective decryption keys and the respective correlation keys to the intermediate cloud storage; and</claim-text></claim-text><claim-text>wherein receiving the decrypted data blob comprises:<claim-text>registering the plurality of user devices with the cloud-based management service using the plurality of respective decrypted data blobs.</claim-text></claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>signing a registration system, which analyzes the plurality of matrix barcodes, into a tenant of the cloud-based management service, the plurality of decrypted data blobs including a plurality of respective serial numbers of the plurality of respective user devices;</claim-text><claim-text>wherein registering the plurality of user devices with the cloud-based management service comprises:<claim-text>performing a batch call into an application programming interface (API) of the cloud-based management service; and</claim-text><claim-text>passing the correlation keys and the serial numbers of the respective user devices to the API.</claim-text></claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein registering the user device comprises:<claim-text>initiating configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier, which is based on the decrypted data blob and which identifies the policies, to the user device.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>signing a registration system, which analyzes the matrix barcode, into a tenant of the cloud-based management service;</claim-text><claim-text>wherein the decrypted data blob includes a serial number of the user device; and</claim-text><claim-text>wherein registering the user device with the cloud-based management service comprises:<claim-text>calling an application programming interface (API) of the cloud-based management service; and</claim-text><claim-text>passing the correlation key and the serial number of the user device to the API.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system to register a user device with a cloud-based management system using an intermediate cloud storage, the system comprising:<claim-text>memory; and</claim-text><claim-text>one or more processors coupled to the memory, the one or more processors configured to:<claim-text>analyze a matrix barcode that identifies the user device, the matrix barcode including a decryption key and a correlation key, the decryption key configured to decrypt an encrypted data blob from the user device, the correlation key configured to correlate the user device to a record that is associated with the user device;</claim-text><claim-text>retrieve the encrypted data blob, which includes information identifying the user device, from the intermediate cloud storage, which receives the encrypted data blob from the user device;</claim-text><claim-text>decrypt the encrypted data blob, which is retrieved from the intermediate cloud storage, using the decryption key that is included in the matrix barcode to provide a decrypted data blob; and</claim-text><claim-text>register the user device with the cloud-based management service using the decrypted data blob.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processors are further configured to:<claim-text>pre-authorize the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processors are configured to:<claim-text>analyze a plurality of matrix barcodes that identify a plurality of respective user devices, each matrix barcode including a decryption key and a correlation key, each decryption key configured to decrypt an encrypted data blob from the respective user device, each correlation key configured to correlate the respective user device to a record that is associated with the respective user device;</claim-text><claim-text>retrieve a plurality of encrypted data blobs that include information identifying the plurality of respective user devices from the intermediate cloud storage, which receives the plurality of encrypted data blobs from the plurality of respective user devices;</claim-text><claim-text>decrypt the plurality of encrypted data blobs, which are retrieved from the intermediate cloud storage, using the respective decryption keys that are included in the plurality of respective matrix barcodes to provide a plurality of respective decrypted data blobs; and</claim-text><claim-text>register the plurality of user devices with the cloud-based management service using the plurality of respective decrypted data blobs.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the one or more processors are configured to:<claim-text>sign the system into a tenant of the cloud-based management service;</claim-text><claim-text>perform a batch call into an application programming interface (API) of the cloud-based management service; and</claim-text><claim-text>pass the correlation keys and a plurality of serial numbers of the plurality of respective user devices to the API, wherein the plurality of decrypted data blobs includes the plurality of respective serial numbers.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processors are configured to:<claim-text>initiate configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier, which is based on the decrypted data blob and which identifies the policies, to the user device.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processors are configured to:<claim-text>sign the system into a tenant of the cloud-based management service;</claim-text><claim-text>call an application programming interface (API) of the cloud-based management service; and</claim-text><claim-text>pass the correlation key and a serial number of the user device to the API, wherein the serial number of the user device is included in the decrypted data blob.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A method of registering a user device with a cloud-based management system using an intermediate cloud storage, the method comprising:<claim-text>analyzing a matrix barcode that identifies the user device, the matrix barcode including a session identifier and a decryption key, the session identifier identifying a session during which the user device is registered with the cloud-based management service, the decryption key configured to decrypt an encrypted data blob from the user device;</claim-text><claim-text>retrieving the encrypted data blob, which includes information identifying the user device, from the intermediate cloud storage, which receives the encrypted data blob from the user device;</claim-text><claim-text>decrypting the encrypted data blob, which is retrieved from the intermediate cloud storage, using the decryption key that is included in the matrix barcode to provide a decrypted data blob; and</claim-text><claim-text>registering the user device with the cloud-based management service using the decrypted data blob.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:<claim-text>pre-authorizing the user device to upload the encrypted data blob to the intermediate cloud storage prior to the user device uploading the encrypted data blob to the intermediate cloud storage based at least in part on receipt of the matrix barcode from the user device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:<claim-text>authenticating a registration system that analyzes the matrix barcode to the intermediate cloud storage using the session identifier.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the intermediate cloud storage is authenticated to the user device using the session identifier.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein analyzing the matrix barcode comprises:<claim-text>analyzing a plurality of matrix barcodes that identify a plurality of respective user devices, each matrix barcode including a session identifier and a decryption key, each session identifier identifying a session during which the respective user device is registered with the cloud-based management service, each decryption key configured to decrypt an encrypted data blob from the respective user device;</claim-text><claim-text>wherein retrieving the encrypted data blob comprises:<claim-text>retrieving a plurality of encrypted data blobs that include information identifying the plurality of respective user devices from the intermediate cloud storage, which receives the plurality of encrypted data blobs from the plurality of respective user devices;</claim-text></claim-text><claim-text>wherein decrypting the encrypted data blob comprises:<claim-text>decrypting the plurality of encrypted data blobs, which are retrieved from the intermediate cloud storage, using the respective decryption keys that are included in the plurality of respective matrix barcodes to provide a plurality of respective decrypted data blobs; and</claim-text></claim-text><claim-text>wherein registering the user device comprises:<claim-text>registering the plurality of user devices with the cloud-based management service using the plurality of respective decrypted data blobs.</claim-text></claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein retrieving the encrypted data blob from the intermediate cloud storage comprises:<claim-text>enabling the intermediate cloud storage to locate the encrypted data blob using the session identifier by providing the session identifier to the intermediate cloud storage.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein registering the user device comprises:<claim-text>initiating configuration of the user device with configuration policies by triggering provision of a deployment platform profile identifier, which is based on the decrypted data blob and which identifies the policies, to the user device.</claim-text></claim-text></claim></claims></us-patent-application>