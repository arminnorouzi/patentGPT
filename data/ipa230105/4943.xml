<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004944A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004944</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17877698</doc-number><date>20220729</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20120101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20190101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>27</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20190101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>248</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20190101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>21</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20190101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2457</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>20</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>27</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>248</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>219</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>24578</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Using Distributed Databases for Network Regression Analysis</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16212286</doc-number><date>20181206</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11443287</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17877698</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Bank of America Corporation</orgname><address><city>Charlotte</city><state>NC</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Kurian</last-name><first-name>Manu</first-name><address><city>Dallas</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Verma</last-name><first-name>Sonia</first-name><address><city>Telangana</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A computing platform may communicate with a device agent to receive digital system maintenance reporting, which may include information regarding steps taken to resolve issues of a digital system during a troubleshooting process. The computing platform may analyze the steps taken, and determine whether the steps resolved the troubleshooting. The computing platform may filter ineffective steps, and store steps associated with successful solutions in one or more distributed databases. The computing platform may receive information identifying a problem faced by a different system. The computing platform may analyze the distributed database to identify similar steps that successfully resolved the problem in the past, and mitigate the problem using the similar successful steps.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="205.49mm" wi="158.75mm" file="US20230004944A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="233.51mm" wi="163.15mm" file="US20230004944A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="164.25mm" wi="136.31mm" file="US20230004944A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="239.18mm" wi="170.69mm" orientation="landscape" file="US20230004944A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="239.01mm" wi="170.69mm" orientation="landscape" file="US20230004944A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="239.35mm" wi="170.69mm" orientation="landscape" file="US20230004944A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="239.35mm" wi="170.69mm" orientation="landscape" file="US20230004944A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="238.08mm" wi="171.11mm" orientation="landscape" file="US20230004944A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="239.35mm" wi="170.69mm" orientation="landscape" file="US20230004944A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="240.20mm" wi="170.69mm" orientation="landscape" file="US20230004944A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="241.05mm" wi="170.69mm" orientation="landscape" file="US20230004944A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="213.36mm" wi="172.55mm" orientation="landscape" file="US20230004944A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="213.70mm" wi="118.03mm" file="US20230004944A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="231.06mm" wi="163.49mm" file="US20230004944A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of and claims priority to patent application Ser. No. 16/212,286 entitled &#x201c;Using Distributed Databases for Network Regression Analysis&#x201d; filed on Dec. 6, 2018, which is incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">Aspects of the disclosure relate to computer hardware and software. In particular, one or more aspects of the disclosure generally relate to computer hardware and software for using distributed databases for network regression analysis.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Businesses, organizations, and consumers increasingly deal with vast amounts of digital information, and therefore maintaining the systems that provide access to that information is increasingly important. Companies and individuals have various methods of maintaining digital systems, and often go through multiple rounds of decision making when determining problems and solutions to those problems. To make the troubleshooting process more effective and efficient, there will always be a need for an increasingly easy and convenient way to determine and replicate past successful actions for identifying and solving problems of digital systems.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">Aspects of the disclosure provide effective, efficient, scalable, and convenient technical solutions that address and overcome the technical problems associated with using distributed databases for network regression analysis. Additional aspects of the disclosure relate to various systems and techniques that provide effective, efficient, scalable, and convenient ways of using distributed databases for efficiently identifying, analyzing, and mitigating system disruptions of digital computing platforms.</p><p id="p-0006" num="0005">In accordance with one or more embodiments, a computing platform having at least one processor, a memory, and a communication interface may receive a maintenance action report associated with a maintenance action performed on a first computing platform; receive a history log associated with at least one historical maintenance action performed on the first computing platform; receive a status report of a current operating status of the first computing platform; determine, based on the status report of the current operating status of the first computing platform, a success score for the maintenance action performed on the first computing platform; store, in the history log associated with the at least one historical maintenance action performed on the first computing platform: the maintenance action report associated with the maintenance action performed on the first computing platform, and the success score for the maintenance action performed on the first computing platform; receive a request for a suggested solution to a new problem with a second computing platform that is different from the first computing platform; identify, from the history log associated with the first computing platform, at least one potential solution associated with the new problem with the second computing platform; determine, from among the at least one potential solution associated with the new problem with the second computing platform, a highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform; and send, in response to the request for the suggested solution to the new problem with the second computing platform, a command configured to cause a maintenance action to be performed on the second computing platform, the maintenance action based on the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</p><p id="p-0007" num="0006">In one or more embodiments, the computing platform may receive a maintenance action report associated with a maintenance action performed on the second computing platform, the maintenance action based on the command configured to cause the maintenance action to be performed on the second computing platform, the maintenance action performed on the second computing platform associated with the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform; receive a status report of a current operating status of the second computing platform; determine, based on the status report of the current operating status of the second computing platform, a success score for the maintenance action performed on the second computing platform; and store, in a history log associated with at least one historical maintenance action performed on the second computing platform: the maintenance action report associated with the maintenance action performed on the second computing platform, and the success score for the maintenance action performed on the second computing platform.</p><p id="p-0008" num="0007">In one or more embodiments, the computing platform may determine whether the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem; in a case that the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem, compare the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform; and store an update to at least one of the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform, the update based on comparing the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform.</p><p id="p-0009" num="0008">In one or more embodiments, the computing platform may store, in a distributed database, the update to the at least one of the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform.</p><p id="p-0010" num="0009">In one or more embodiments, the computing platform may determine, from the history log associated with the at least one historical maintenance action performed on the first computing platform, a number of successful times the maintenance action performed on the first computing platform solved a same problem with the first computing platform; and use the determined number of successful times the maintenance action performed on the first computing platform solved the same problem with the first computing platform as part of determining the success score for the maintenance action performed on the first computing platform.</p><p id="p-0011" num="0010">In one or more embodiments, the computing platform may generate, for display, a user interface screen that comprises the number of successful times the maintenance action performed on the first computing platform solved the same problem with the first computing platform.</p><p id="p-0012" num="0011">In one or more embodiments, the computing platform may generate, for display, a user interface screen that comprises the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</p><p id="p-0013" num="0012">In one or more embodiments, the computing platform may determine, based on at least one parameter, the success score for the maintenance action performed on the first computing platform.</p><p id="p-0014" num="0013">In one or more embodiments, the computing platform may apply a respective weighting to a respective success score associated with each of the at least one potential solution associated with the new problem with the second computing platform, as part of determining, from among the at least one potential solution associated with the new problem with the second computing platform, the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</p><p id="p-0015" num="0014">In one or more embodiments, the computing platform may apply a non-zero weighting to at least one parameter of the success score for the maintenance action performed on the first computing platform if a measure of the at least one parameter of the success score for the maintenance action performed on the first computing platform is above a weighting threshold, and apply a zero weighting to the at least one parameter of the success score for the maintenance action performed on the first computing platform if the measure of the at least one parameter of the success score for the maintenance action performed on the first computing platform is below the weighting threshold.</p><p id="p-0016" num="0015">In one or more embodiments, the computing platform may store, in a distributed database, the history log associated with the at least one historical maintenance action performed on the first computing platform.</p><p id="p-0017" num="0016">In one or more embodiments, the computing platform may receive, from a distributed database, the maintenance action report associated with the maintenance action performed on the first computing platform.</p><p id="p-0018" num="0017">In one or more embodiments, the computing platform may receive, from a distributed database, the history log associated with the at least one historical maintenance action performed on the first computing platform.</p><p id="p-0019" num="0018">In one or more embodiments, the computing platform may determine, based on the success score for the maintenance action performed on the first computing platform, whether the maintenance action performed on the first computing platform was a successful solution by determining whether the success score for the maintenance action performed on the first computing platform is above a success threshold.</p><p id="p-0020" num="0019">In one or more embodiments, the computing platform may receive a plurality of keystrokes entered by a user as part of performing the maintenance action performed on the first computing platform; and filter the plurality of keystrokes to remove at least one irrelevant keystroke that is irrelevant to the successful solution.</p><p id="p-0021" num="0020">In one or more embodiments, the computing platform may store the filtered plurality of keystrokes in a distributed database.</p><p id="p-0022" num="0021">In one or more embodiments, the computing platform may receive an updated version of the distributed database; and send the updated version of the distributed database to a different computing device.</p><p id="p-0023" num="0022">In one or more embodiments, the computing platform may parse the history log associated with the at least one historical maintenance action performed on the first computing platform; identify, from parsing the history log associated with the at least one historical maintenance action performed on the first computing platform, a relevant keyword associated with the maintenance action performed on the first computing platform; and store, in a distributed database with the maintenance action report associated with the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the first computing platform, the relevant keyword associated with the maintenance action performed on the first computing platform.</p><p id="p-0024" num="0023">In accordance with one or more embodiments, a method may include, at a computing platform having at least one processor, a memory, and a communication interface, receive a maintenance action report associated with a maintenance action performed on a first computing platform; receive a history log associated with at least one historical maintenance action performed on the first computing platform; receive a status report of a current operating status of the first computing platform; determine, based on the status report of the current operating status of the first computing platform, a success score for the maintenance action performed on the first computing platform; store, in the history log associated with the at least one historical maintenance action performed on the first computing platform: the maintenance action report associated with the maintenance action performed on the first computing platform, and the success score for the maintenance action performed on the first computing platform; receive a request for a suggested solution to a new problem with a second computing platform that is different from the first computing platform; identify, from the history log associated with the first computing platform, at least one potential solution associated with the new problem with the second computing platform; determine, from among the at least one potential solution associated with the new problem with the second computing platform, a highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform; and send, in response to the request for the suggested solution to the new problem with the second computing platform, a command configured to cause a maintenance action to be performed on the second computing platform, the maintenance action based on the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</p><p id="p-0025" num="0024">In accordance with one or more embodiments, one or more non-transitory computer-readable media may store computer-readable instructions that, when executed by a computing platform having at least one processor, a memory, and a communication interface, may cause the computing platform to receive a maintenance action report associated with a maintenance action performed on a first computing platform; receive a history log associated with at least one historical maintenance action performed on the first computing platform; receive a status report of a current operating status of the first computing platform; determine, based on the status report of the current operating status of the first computing platform, a success score for the maintenance action performed on the first computing platform; store, in the history log associated with the at least one historical maintenance action performed on the first computing platform: the maintenance action report associated with the maintenance action performed on the first computing platform, and the success score for the maintenance action performed on the first computing platform; receive a request for a suggested solution to a new problem with a second computing platform that is different from the first computing platform; identify, from the history log associated with the first computing platform, at least one potential solution associated with the new problem with the second computing platform; determine, from among the at least one potential solution associated with the new problem with the second computing platform, a highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform; and send, in response to the request for the suggested solution to the new problem with the second computing platform, a command configured to cause a maintenance action to be performed on the second computing platform, the maintenance action based on the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</p><p id="p-0026" num="0025">These features, along with many others, are discussed in greater detail below.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0027" num="0026">The present disclosure is illustrated by way of example and not limited in the accompanying figures in which like reference numerals indicate similar elements and in which:</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref> depict an illustrative computing environment for using distributed databases for network regression analysis in accordance with one or more example embodiments;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>3</b>F</figref> depict illustrative event flow diagrams for using distributed databases for network regression analysis in accordance with one or more example embodiments;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an illustrative block diagram of distributed-database-based management of continuous operations in accordance with one or more example embodiments;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an example graphical user interface for using distributed databases for network regression analysis in accordance with one or more example embodiments;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an example graphical user interface for using distributed databases for network regression analysis in accordance with one or more example embodiments;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an illustrative method for using distributed databases for network regression analysis in accordance with one or more example embodiments; and</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an illustrative method for using distributed databases for network regression analysis in accordance with one or more example embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0035" num="0034">In the following description of various illustrative embodiments, reference is made to the accompanying drawings, which form a part hereof, and in which is shown, by way of illustration, various embodiments in which aspects of the disclosure may be practiced. It is to be understood that other embodiments may be utilized, and structural and functional modifications may be made, without departing from the scope of the present disclosure.</p><p id="p-0036" num="0035">It is noted that various connections between elements are discussed in the following description. It is noted that these connections are general and, unless specified otherwise, may be direct or indirect, wired or wireless, and that the specification is not intended to be limiting in this respect.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref> depict an illustrative computing environment for using distributed databases for network regression analysis in accordance with one or more example embodiments. Referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, computing environment <b>100</b> may include one or more computing devices. For example, computing environment <b>100</b> may include a predictive maintenance computing platform <b>110</b>, a digital computing platform <b>120</b>, a diagnostic distributed database <b>130</b>, a first client computing device <b>160</b>, a second client computing device <b>170</b>, and a third client computing device <b>180</b>.</p><p id="p-0038" num="0037">Predictive maintenance computing platform <b>110</b> may be configured to receive information (e.g., problem identification information, analysis collection, troubleshooting data, maintenance action reports, history logs). Predictive maintenance computing platform <b>110</b> may analyze the collected data, identify relevant data, correlate the relevant data with associated system problems, index the relevant data, and store the relevant data in an accessible manner. For example, predictive maintenance computing platform <b>110</b> may store the relevant data in a distributed database, such as diagnostic distributed database <b>130</b>.</p><p id="p-0039" num="0038">Digital computing platform <b>120</b> may be configured to provide services for tracking, filtering, identifying, and sending maintenance actions, troubleshooting actions, and the like to predictive maintenance computing platform <b>110</b>. For example, digital computing platform <b>120</b> may be a computing system that a user uses to perform maintenance on a different system or platform (e.g., server, website, corporate intranet). Digital computing platform <b>120</b> may include a module, an agent, or other program that assists the user in maintaining, troubleshooting, upgrading, and otherwise working to ensure the smooth operation of the different system or platform. The module, agent, or other program may run in the background or foreground, and may collect information regarding steps the user takes in maintaining, troubleshooting, upgrading, and otherwise working on the different system or platform.</p><p id="p-0040" num="0039">Diagnostic distributed database <b>130</b> may be one or more distributed databases configured to store information regarding troubleshooting, maintenance, and other steps taken to mitigate problems with servers, systems, platforms, sites, or the like. Diagnostic distributed database <b>130</b> may include, for example, one or more blockchains. Diagnostic distributed database <b>130</b> may be a private blockchain with a company with shared access to one or more vendors that the company works with. This may allow for collaboration or partnership between the company and the vendor. The vendor may have its own blockchain that stores information about a product, while the company may have its own blockchain that stores information about troubleshooting the product or one or more systems using or implementing the product. A matrix may exist linking the vendor blockchain and the company blockchain.</p><p id="p-0041" num="0040">In another example, an organization may have a relationship with a first vendor and a second company. The first vendor and the second company may have a relationship with each other. The organization may have one or more specific data assets that are stored in diagnostic distributed database <b>130</b>. One or more of the specific data assets that are stored in diagnostic distributed database <b>130</b> may be linked to a pointer. The first vendor may, in one or more embodiments, provide transparent troubleshooting across its clients. The first vendor's troubleshooting information may be stored in a first distributed database, or a first part of diagnostic distributed database <b>130</b>. The organization may maintain a customization of the first vendor's product, the customization being specific to the organization. The organization may maintain troubleshooting for the customization in a second distributed database, or a second part of the diagnostic distributed database <b>130</b>. For example, the first part of the diagnostic distributed database <b>130</b> might be separate from the second part of the diagnostic distributed database <b>130</b>. A party might only have access rights to the first part of the diagnostic distributed database <b>130</b>, might only have access rights to the second part of the diagnostic distributed database <b>130</b>, or might have access rights to both the first part of the diagnostic distributed database <b>130</b> and the second part of the diagnostic distributed database <b>130</b>.</p><p id="p-0042" num="0041">Client computing device <b>160</b> may be configured to be used by a first customer of an organization, such as a financial institution. In some instances, client computing device <b>160</b> may, for example, be registered with the organization and/or one or more computer systems in computing environment <b>100</b>, such that the organization and/or the one or more computer systems maintain one or more records linking client computing device <b>160</b> to the first customer of the organization, as illustrated in greater detail below. Client computing device <b>170</b> may be configured to be used by a second customer of the organization (who may, e.g., be different from the first customer of the organization). In some instances, client computing device <b>170</b> may, for example, be registered with the organization and/or one or more computer systems in computing environment <b>100</b>, such that the organization and/or the one or more computer systems maintain one or more records linking client computing device <b>170</b> to the second customer of the organization, as illustrated in greater detail below. Client computing device <b>180</b> may be configured to be used by a third customer of the organization (who may, e.g., be different from the first customer of the organization and the second customer of the organization). In some instances, client computing device <b>180</b> may, for example, be registered with the organization and/or one or more computer systems in computing environment <b>100</b>, such that the organization and/or the one or more computer systems maintain one or more records linking client computing device <b>180</b> to the third customer of the organization, as illustrated in greater detail below.</p><p id="p-0043" num="0042">In one or more arrangements, predictive maintenance computing platform <b>110</b>, digital computing platform <b>120</b>, diagnostic distributed database <b>130</b>, client computing device <b>160</b>, client computing device <b>170</b>, and client computing device <b>180</b> may be any type of computing device capable of receiving a user interface, receiving input via the user interface, and communicating the received input to one or more other computing devices. For example, digital computing platform <b>120</b>, diagnostic distributed database <b>130</b>, client computing device <b>160</b>, client computing device <b>170</b>, and client computing device <b>180</b> may, in some instances, be and/or include server computers, server blades, desktop computers, laptop computers, tablet computers, smart phones, or the like that may include one or more processors, memories, communication interfaces, storage devices, and/or other components. As noted above, and as illustrated in greater detail below, any and/or all of digital computing platform <b>120</b>, diagnostic distributed database <b>130</b>, client computing device <b>160</b>, client computing device <b>170</b>, and client computing device <b>180</b> may, in some instances, be special-purpose computing devices configured to perform specific functions.</p><p id="p-0044" num="0043">Computing environment <b>100</b> also may include one or more devices for gathering information for use by one or more of predictive maintenance computing platform <b>110</b>, digital computing platform <b>120</b>, and diagnostic distributed database <b>130</b>. For example, computing environment <b>100</b> may include one or more sensor(s) <b>140</b>, one or more microphone(s) <b>145</b>, one or more camera(s) <b>150</b>, one or more scanner(s) <b>155</b>, and/or additional information-gathering devices (e.g., hardware or software). Computing environment <b>100</b> may include one or more processors, microprocessors, computers, microcomputers, circuits, and/or other hardware for gathering, storing, processing, converting, or otherwise enabling one or more sensor(s) <b>140</b>, one or more microphone(s) <b>145</b>, one or more camera(s) <b>150</b>, one or more scanner(s) <b>155</b>, and/or additional information-gathering devices in computing environment <b>100</b>.</p><p id="p-0045" num="0044">Computing environment <b>100</b> also may include one or more networks, which may interconnect one or more of predictive maintenance computing platform <b>110</b>, digital computing platform <b>120</b>, diagnostic distributed database <b>130</b>, one or more sensor(s) <b>140</b>, one or more microphone(s) <b>145</b>, one or more camera(s) <b>150</b>, one or more scanner(s) <b>155</b>, client computing device <b>160</b>, client computing device <b>170</b>, and client computing device <b>180</b>. For example, computing environment <b>100</b> may include public network <b>190</b> and private network <b>195</b>. Private network <b>195</b> and/or public network <b>190</b> may include one or more sub-networks (e.g., local area networks (LANs), wide area networks (WANs), or the like). Private network <b>195</b> may be associated with a particular organization (e.g., a corporation, financial institution, educational institution, governmental institution, or the like) and may interconnect one or more computing devices associated with the organization. For example, predictive maintenance computing platform <b>110</b>, digital computing platform <b>120</b>, and diagnostic distributed database <b>130</b> may be associated with an organization (e.g., a financial institution), and private network <b>195</b> may be associated with and/or operated by the organization, and may include one or more networks (e.g., LANs, WANs, virtual private networks (VPNs), or the like) that interconnect predictive maintenance computing platform <b>110</b>, digital computing platform <b>120</b>, and diagnostic distributed database <b>130</b> and one or more other computing devices and/or computer systems that are used by, operated by, and/or otherwise associated with the organization. Public network <b>190</b> may connect private network <b>195</b> and/or one or more computing devices connected thereto (e.g., predictive maintenance computing platform <b>110</b>, digital computing platform <b>120</b>, and diagnostic distributed database <b>130</b>) with one or more networks and/or computing devices that are not associated with the organization. For example, client computing device <b>160</b>, client computing device <b>170</b>, and client computing device <b>180</b> might not be associated with an organization that operates private network <b>195</b> (e.g., because client computing device <b>160</b>, client computing device <b>170</b>, and client computing device <b>180</b> may be owned, operated, and/or serviced by one or more entities different from the organization that operates private network <b>195</b>, such as one or more customers of the organization and/or vendors of the organization, rather than being owned and/or operated by the organization itself or an employee or affiliate of the organization), and public network <b>190</b> may include one or more networks (e.g., the internet) that connect client computing device <b>160</b>, client computing device <b>170</b>, and client computing device <b>180</b> to private network <b>195</b> and/or one or more computing devices connected thereto (e.g., predictive maintenance computing platform <b>110</b>, digital computing platform <b>120</b>, and diagnostic distributed database <b>130</b>).</p><p id="p-0046" num="0045">Referring to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, predictive maintenance computing platform <b>110</b> may include one or more processors <b>111</b>, memory <b>112</b>, and communication interface <b>117</b>. A data bus may interconnect processor(s) <b>111</b>, memory <b>112</b>, and communication interface <b>117</b>. Communication interface <b>117</b> may be a network interface configured to support communication between predictive maintenance computing platform <b>110</b> and one or more networks (e.g., private network <b>195</b>, public network <b>190</b>, or the like). Memory <b>112</b> may include one or more program modules having instructions that when executed by processor(s) <b>111</b> cause predictive maintenance computing platform <b>110</b> to perform one or more functions described herein and/or one or more databases that may store and/or otherwise maintain information which may be used by such program modules and/or processor(s) <b>111</b>. In some instances, the one or more program modules and/or databases may be stored by and/or maintained in different memory units of predictive maintenance computing platform <b>110</b> and/or by different computing devices that may form and/or otherwise make up predictive maintenance computing platform <b>110</b>. For example, memory <b>112</b> may have, store, and/or include an interface module <b>113</b>, an analysis module <b>114</b>, an investigation module <b>115</b>, and a mitigation module <b>116</b>. Interface module <b>113</b> may have instructions that direct and/or cause predictive maintenance computing platform <b>110</b> to interface with one or more other devices to receive maintenance or troubleshooting actions performed by the other devices, as well as current or historical states of the one or more other devices, and/or to perform other functions, as discussed in greater detail below. Analysis module <b>114</b> may have instructions that direct and/or cause predictive maintenance computing platform <b>110</b> to analyze (e.g., via smart-data analysis, machine learning, neural networks, regression analysis, network regression analysis) the maintenance or troubleshooting actions, as well as the current or historical states of the one or more other devices, to determine success of the various maintenance or troubleshooting actions, and/or to perform other functions, as discussed in greater detail below. Investigation module <b>115</b> may have instructions that direct and/or cause predictive maintenance computing platform <b>110</b> to investigate a problem being experienced by one or more other devices, such as by investigating one or more maintenance or troubleshooting steps performed in the past that successfully solved one or more problems experienced by one or more other devices, and then to identify one or more of the maintenance or troubleshooting steps to recommend for trying to solve the problem currently being experienced by the one or more other devices, and/or to perform other functions, as discussed in greater detail below. Mitigation module <b>116</b> may have instructions that direct and/or cause predictive maintenance computing platform <b>110</b> to mitigate the problem being experienced by the one or more other devices, such as by using the identified recommended maintenance or troubleshooting steps that successfully solved similar problems in the past for one or more other devices, and/or to perform other functions, as discussed in greater detail below.</p><p id="p-0047" num="0046">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref>, one or more functions performed by computing environment <b>100</b> may relate to various systems and techniques that provide effective, efficient, scalable, and convenient ways of identifying, processing, and recalling processes used for identifying and solving problems with digital systems.</p><p id="p-0048" num="0047">In accordance with one or more embodiments, a predictive maintenance computing platform having at least one processor, a memory, and a communication interface may receive one or more maintenance action reports. For example, the predictive maintenance computing platform may receive two maintenance action reports. Each maintenance action report could include an identified problem with a digital system, such as a memory dump. The maintenance action report could include one or more maintenance actions that a user took in attempting to resolve the identified problem with the digital system. The predictive maintenance computing platform may receive one or more other inputs, such as voice or other audio recordings, mobile device location and/or proximity information, digital system login information, profile location access information, or the like.</p><p id="p-0049" num="0048">The predictive maintenance computing platform may request and receive one or more history logs from the digital system, one or more action logs from the digital system, and/or one or more status reports from the digital system. The digital system may provide such information, which may include one or more indicators of a current health of the digital system. In one or more embodiments, the predictive maintenance computing platform may generate a request that includes information identifying the identified problem with the digital system, and receive a tailored report that includes information regarding whether the identified problem with the digital system has been resolved. The information regarding whether the identified problem with the digital system has been resolved may include identification of one or more actions that occurred within a threshold period of time before the identified problem with the digital system was solved.</p><p id="p-0050" num="0049">The predictive maintenance computing platform may identify a time that the actions that resolved the identified problem with the digital system occurred.</p><p id="p-0051" num="0050">The predictive maintenance computing platform may perform one or more analyses of the maintenance action reports to determine whether the maintenance actions were successful in resolving one or more identified problems with the digital system. For example, the predictive maintenance computing platform may perform a regression analysis of the maintenance action reports to identify one or more solutions to the one or more identified problems with the digital system.</p><p id="p-0052" num="0051">The predictive maintenance computing platform may store one or more identified successful solutions to the one or more identified problems with the digital system in a distributed database. For example, a blockchain may be a distributed database that stores the successful solutions to the one or more identified problems with the digital system. The distributed database may include each interaction (e.g., as identified by the received maintenance action reports). The distributed database may include, with each interaction, an indicator as to whether that interaction is part of a chain of successful solutions to the one or more identified problems with the digital system. The distributed database may therefore include a record of each attempted maintenance action, as well as an indicator for each attempted maintenance action as to whether or not that attempted maintenance action is part of a chain of successful solutions to the one or more identified problems with the digital system.</p><p id="p-0053" num="0052">The distributed database may be a public distributed database, a private distributed database, or a hybrid public-private database that is not fully public, but still includes contributions from a plurality of different sources.</p><p id="p-0054" num="0053">The distributed database may be used to assist the predictive maintenance computing platform in identifying one or more solutions that have worked in the past for a current problem being experienced by a digital system. For example, if the digital system experiences a current problem, the predictive maintenance computing platform may analyze the distributed database to identify one or more maintenance actions that in the past were used to successfully solve a problem similar to the current problem being experienced by the digital system. If the predictive maintenance computing platform successfully identifies one or more maintenance actions that in the past were used to successfully solve the problem similar to the current problem being experienced by the digital system, the predictive maintenance computing platform may generate a report, a recommendation, an alert, or the like, which may include an identification of the one or more maintenance actions that in the past were used to successfully solve the problem similar to the current problem being experienced by the digital system. In one or more embodiments, the predictive maintenance computing platform may automatically initiate one or more maintenance actions corresponding to the one or more maintenance actions that in the past were used to successfully solve the problem similar to the current problem being experienced by the digital system. Thus, in one or more instances, the predictive maintenance computing platform may automatically resolve the current problem being experienced by the digital system, based on replicating the one or more maintenance actions that in the past were used to successfully solve the problem similar to the current problem being experienced by the digital system.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>3</b>F</figref> depict an illustrative event sequence for using distributed databases for network regression analysis in accordance with one or more example embodiments. The steps of <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>3</b>F</figref> may be added to, omitted, performed multiple times, performed in the depicted order, or performed in a different order. For example, one or more of the steps depicted in <figref idref="DRAWINGS">FIGS. <b>3</b>A-<b>3</b>F</figref> may be performed in conjunction with, in place of, in between, before, or after one or more of the steps depicted in <figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>B</figref>.</p><p id="p-0056" num="0055">Referring to <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, at step <b>201</b>, predictive maintenance computing platform <b>110</b> may receive a maintenance action report associated with a maintenance action performed on a first computing platform. A maintenance action report may include information regarding one or more troubleshooting steps taken to resolve a problem.</p><p id="p-0057" num="0056">For example, the maintenance action report may include captured logs, captured data, problem solutions, production tests, or the like. The maintenance action report may include an audit trail that captured records of system changes as they were applied. The maintenance action report may include information that may allow a system to go back and revisit a solution process to see if there was something that could done better and how it could be improved. Because the maintenance action report may be automatically generated based on tracking user inputs and actions, the maintenance action report may include one or more steps that might otherwise have been missed by a user trying to recollect what steps the user took in troubleshooting a problem. The maintenance action report may be generated by an agent or background process that automatically follows the user's actions, collecting evidence of what troubleshooting steps the user took as the user worked through a problem. For example, if the user enters a command to a command prompt, the entered command may be considered a maintenance action. As another example, if the user alters one or more lines of code in a program, the alterations to the lines of code may be considered a maintenance action. A maintenance action report may include one or more maintenance actions.</p><p id="p-0058" num="0057">At step <b>202</b>, predictive maintenance computing platform <b>110</b> may receive a history log associated with at least one historical maintenance action performed on the first computing platform. For example, predictive maintenance computing platform <b>110</b> may receive, from a distributed database (e.g., diagnostic distributed database <b>130</b>), the history log associated with the at least one historical maintenance action performed on the first computing platform. The history log may indicate, for example, one or historical problems that the first computing platform was experiencing, along with one or more time stamps (e.g., problem start time stamp, problem stopped time stamp) associated with those problems. The history log may indicate, as another example, one or more maintenance actions taken, along with one or more time stamps (e.g., maintenance action time stamp) associated with those maintenance actions.</p><p id="p-0059" num="0058">At step <b>203</b>, predictive maintenance computing platform <b>110</b> may receive a status report of a current operating status of the first computing platform. The status report may indicate, for example, whether the first computing platform is currently experiencing a problem. For example, a problem may be that a program experienced a memory dump. The status report may include information about the problem, such as an identification of the problem.</p><p id="p-0060" num="0059">At step <b>204</b>, predictive maintenance computing platform <b>110</b> may determine, based on the status report of the current operating status of the first computing platform, a success score for the maintenance action performed on the first computing platform. For example, if based on the current operating status of the first computing platform, predictive maintenance computing platform <b>110</b> determines that the first computing platform is not experiencing a problem that the first computing platform was experiencing before one or more maintenance actions taken and reported in the maintenance report, predictive maintenance computing platform <b>110</b> may determine that the one or more maintenance actions taken were successful in resolving the problem previously being experienced by the first computing platform. In determining a success score, the success score may be binary (e.g., successful or unsuccessful), or the success score may be nonbinary (e.g., a range of success from 0-100). For example, if a problem is that a system is running slowly, and troubleshooting steps slightly improve a run speed of the system, but do not fully resolve the slowness of the system, the troubleshooting steps might be scored above a minimum score (e.g., 0), but below a maximum score (e.g., 100).</p><p id="p-0061" num="0060">Referring to <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, at step <b>205</b>, predictive maintenance computing platform <b>110</b> may store, in the history log associated with the at least one historical maintenance action performed on the first computing platform: the maintenance action report associated with the maintenance action performed on the first computing platform, and/or the success score for the maintenance action performed on the first computing platform. The history log may be stored in or as a distributed database (e.g., diagnostic distributed database <b>130</b>).</p><p id="p-0062" num="0061">The entry in the history log may include both a description of the maintenance action performed, as well as the success score for the maintenance action performed. Alternatively, there might be separate entries in the history log for the description of the maintenance action performed and the success score for the maintenance action performed. If there are separate entries, one or more entries may include a pointer or other reference to another of the one or more entries to indicate that the one or more entries are associated with each other (e.g., one entry might be for the maintenance action performed, and another entry might be for a success score associated with the maintenance action performed).</p><p id="p-0063" num="0062">The history log or one or more entries of the history log may be stored in or by a log aggregator. The log aggregator may include a parser that may parse the data in the history log (e.g., to identify keywords). For example, if a problem is related to JAVA, the parser may scan for words such as JVM, JAVA, or JDK. The parsing process steps may be identified, tracked, logged, and stored as part of a distributed database.</p><p id="p-0064" num="0063">At step <b>206</b>, predictive maintenance computing platform <b>110</b> may receive a request for a suggested solution to a new problem with a second computing platform that is different from the first computing platform. This request may be from a same computing device as has previously experienced a problem and/or reported a solution, or from a different computing device. The request may include a problem description. The request may include one or more maintenance or troubleshooting steps already attempted.</p><p id="p-0065" num="0064">At step <b>207</b>, predictive maintenance computing platform <b>110</b> may identify, from the history log associated with the first computing platform, at least one potential solution associated with the new problem with the second computing platform. Predictive maintenance computing platform <b>110</b> may traverse a distributed database (e.g., diagnostic distributed database <b>130</b>), such as a blockchain, to identify a solution or solution chain, based on one or more previous actions taken to resolve a similar problem. Predictive maintenance computing platform <b>110</b> may use smart data, regression analysis, machine learning, network regression analysis, or other computer intelligence tools to analyze one or more troubleshooting steps or maintenance actions. Predictive maintenance computing platform <b>110</b> may filter irrelevant steps, as well as steps that are part of an unsuccessful chain of troubleshooting. For example, if a user changed a portion of code while attempting to resolve a problem, but the changes to the code did not solve the problem, predictive maintenance computing platform <b>110</b> may recognize that the changes to the code did not solve the problem, and may filter those unsuccessful troubleshooting attempts from an eventual suggested solution.</p><p id="p-0066" num="0065">At step <b>208</b>, predictive maintenance computing platform <b>110</b> may determine, from among the at least one potential solution associated with the new problem with the second computing platform, a highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform. Predictive maintenance computing platform <b>100</b> may determine more than one high-ranking suggested solution (e.g., if more than one solution scores above a threshold success score). By filtering the potential solutions to focus just on the top scores, unsuccessful or ineffective troubleshooting steps may be avoided. This may help a system or user to more quickly resolve a problem, and return the system to an improved state more quickly.</p><p id="p-0067" num="0066">At step <b>209</b>, predictive maintenance computing platform <b>110</b> may send, in response to the request for the suggested solution to the new problem with the second computing platform, a command configured to cause a maintenance action to be performed on the second computing platform, the maintenance action based on the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</p><p id="p-0068" num="0067">Referring to <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, at step <b>210</b>, predictive maintenance computing platform <b>110</b> may receive a maintenance action report associated with a maintenance action performed on the second computing platform, the maintenance action based on the command configured to cause the maintenance action to be performed on the second computing platform, the maintenance action performed on the second computing platform associated with the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform. At step <b>211</b>, predictive maintenance computing platform <b>110</b> may receive a status report of a current operating status of the second computing platform. At step <b>212</b>, predictive maintenance computing platform <b>110</b> may determine, based on the status report of the current operating status of the second computing platform, a success score for the maintenance action performed on the second computing platform. At step <b>213</b>, predictive maintenance computing platform <b>110</b> may store, in a history log associated with at least one historical maintenance action performed on the second computing platform: the maintenance action report associated with the maintenance action performed on the second computing platform, and/or the success score for the maintenance action performed on the second computing platform.</p><p id="p-0069" num="0068">Referring to <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, at step <b>214</b>, predictive maintenance computing platform <b>110</b> may determine whether the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem. At step <b>215</b>, predictive maintenance computing platform <b>110</b> may, in a case that the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem, compare the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform. At step <b>216</b>, predictive maintenance computing platform <b>110</b> may store an update to at least one of the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform, the update based on comparing the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform. For example, predictive maintenance computing platform <b>110</b> may store, in a distributed database, the update to the at least one of the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform.</p><p id="p-0070" num="0069">Referring to <figref idref="DRAWINGS">FIG. <b>3</b>C</figref>, at step <b>217</b>, predictive maintenance computing platform <b>110</b> may determine, from the history log associated with the at least one historical maintenance action performed on the first computing platform, a number of successful times the maintenance action performed on the first computing platform solved a same problem with the first computing platform. At step <b>218</b>, predictive maintenance computing platform <b>110</b> may use the determined number of successful times the maintenance action performed on the first computing platform solved the same problem with the first computing platform as part of determining the success score for the maintenance action performed on the first computing platform. At step <b>219</b>, predictive maintenance computing platform <b>110</b> may store the success score for the maintenance action performed on the first computing platform (e.g., in a distributed database, such as diagnostic distributed database <b>130</b>).</p><p id="p-0071" num="0070">At step <b>220</b>, predictive maintenance computing platform <b>110</b> may generate, for display, a user interface screen that comprises the number of successful times the maintenance action performed on the first computing platform solved the same problem with the first computing platform. At step <b>221</b>, predictive maintenance computing platform <b>110</b> may generate, for display, a user interface screen that comprises the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</p><p id="p-0072" num="0071">Referring to <figref idref="DRAWINGS">FIG. <b>3</b>D</figref>, at step <b>222</b>, predictive maintenance computing platform <b>110</b> may determine, based on at least one parameter, the success score for the maintenance action performed on the first computing platform. At step <b>223</b>, predictive maintenance computing platform <b>110</b> may store the success score for the maintenance action performed on the first computing device determined based on the at least one parameter, such as storing the success score in diagnostic distributed database <b>130</b>.</p><p id="p-0073" num="0072">At step <b>224</b>, predictive maintenance computing platform <b>110</b> may apply a respective weighting to a respective success score associated with each of the at least one potential solution associated with the new problem with the second computing platform, as part of determining, from among the at least one potential solution associated with the new problem with the second computing platform, the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform. Predictive maintenance computing platform <b>110</b> may apply a non-zero weighting to at least one parameter of the success score for the maintenance action performed on the first computing platform if a measure of the at least one parameter of the success score for the maintenance action performed on the first computing platform is above a weighting threshold, and apply a zero weighting to the at least one parameter of the success score for the maintenance action performed on the first computing platform if the measure of the at least one parameter of the success score for the maintenance action performed on the first computing platform is below the weighting threshold.</p><p id="p-0074" num="0073">At step <b>225</b>, predictive maintenance computing platform <b>110</b> may store, in a distributed database (e.g., diagnostic distributed database <b>130</b>), the history log associated with the at least one historical maintenance action performed on the first computing platform. At step <b>226</b>, predictive maintenance computing platform <b>110</b> may receive, from a distributed database (e.g., diagnostic distributed database <b>130</b>), the maintenance action report associated with the maintenance action performed on the first computing platform.</p><p id="p-0075" num="0074">Referring to <figref idref="DRAWINGS">FIG. <b>3</b>E</figref>, at step <b>227</b>, predictive maintenance computing platform <b>110</b> may determine, based on the success score for the maintenance action performed on the first computing platform, whether the maintenance action performed on the first computing platform was a successful solution by determining whether the success score for the maintenance action performed on the first computing platform is above a success threshold.</p><p id="p-0076" num="0075">At step <b>228</b>, predictive maintenance computing platform <b>110</b> may receive a plurality of keystrokes entered by a user as part of performing the maintenance action performed on the first computing platform. At step <b>229</b>, predictive maintenance computing platform <b>110</b> may filter the plurality of keystrokes to remove at least one irrelevant keystroke that is irrelevant to the successful solution. At step <b>230</b>, predictive maintenance computing platform <b>110</b> may store the filtered plurality of keystrokes in a distributed database.</p><p id="p-0077" num="0076">Referring to <figref idref="DRAWINGS">FIG. <b>3</b>F</figref>, at step <b>231</b>, predictive maintenance computing platform <b>110</b> may receive an updated version of the distributed database. For example, if predictive maintenance computing platform <b>110</b> maintains a copy of a blockchain, predictive maintenance computing platform <b>110</b> may receive an update to the blockchain. At step <b>232</b>, predictive maintenance computing platform <b>110</b> may send the updated version of the distributed database to a different computing device. For example, if predictive maintenance computing platform <b>110</b> maintains a copy of a blockchain, predictive maintenance computing platform <b>110</b> may send an update to the blockchain to a different system that maintains a copy of the blockchain.</p><p id="p-0078" num="0077">At step <b>233</b>, predictive maintenance computing platform <b>110</b> may parse the history log associated with the at least one historical maintenance action performed on the first computing platform. At step <b>234</b>, predictive maintenance computing platform <b>110</b> may identify, from parsing the history log associated with the at least one historical maintenance action performed on the first computing platform, a relevant keyword associated with the maintenance action performed on the first computing platform. At step <b>235</b>, predictive maintenance computing platform <b>110</b> may store, in a distributed database with the maintenance action report associated with the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the first computing platform, the relevant keyword associated with the maintenance action performed on the first computing platform.</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an illustrative block diagram of blockchain-based management of continuous operations. <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a view of continuous operations that may be achieved by using one or more distributed databases (e.g., blockchain) and smart data. Big data may be applied to maintenance real-time data streams. A framework may be provided that can aid in decision making and provide alerts based on predictive technologies using regression analyses. A predictive system network may exist across one or more different branches, both horizontally and vertically. <figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts both a horizontal and vertical view of a high-level analysis of one, two, three, or more phases <b>410</b> of troubleshooting, which may include analysis, investigation, and/or mitigation. As these phases are performed, the system may move toward continuous operations, such as through the use of blockchain, smart data, and/or digital intelligence. In one or more systems, an agent on a digital computing platform may track how work (e.g., one or more troubleshooting steps) is done (e.g., in a rudimentary fashion), and send that tracking information to a system that continuously feeds data, such as real-time analytics using smart data level. The system may apply digital intelligence. For example, Level-1 may be a universal way to apply digital intelligence, and may represent a continuous thread and/or network. In another example, blocks B<b>1</b> and B<b>2</b>, when applied to a blockchain, may provide added value to the data for further analysis and investigation. Thus, a system may introduce a continuous operation that includes continuous analysis, investigation, and mitigation of problems, through application of smart data and distributed databases, such as blockchain.</p><p id="p-0080" num="0079">As depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a multi-tier work stream may be represented. For example, A1-A7 may represent a number of different devices, each of which may be associated with a particular user or team. Each user or team may have an assignment for a project to complete. As a user or team completes its assignment, the completed assignment may be stored in a link to one or more existing work solutions in a distributed database. If the completed assignment is redundant to an existing work solution, the completed assignment might be added as an additional data point to the existing work solution, rather than as a new work solution.</p><p id="p-0081" num="0080">In another example, A1-A7 may represent a number of steps or participants in the completion of a particular project. For example, A1 performs part of the work of the particular project, then A2 performs part of the work of the particular project, then A3 performs part of the work of the particular project, and so on through A7 (or however many steps or participants are involved in completing the project). The blocks B<b>1</b>-B<b>8</b> may represent how the steps performed by A1-A7 may be interlinked. This information may be related to, for example, how the information is linked to each other, how the tickets are interdependent, or the like. These interdependencies are used in analyzing the steps used to complete a solution to a project (e.g., a solution to a problem).</p><p id="p-0082" num="0081">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, graphical user interface <b>500</b> may be presented by an operating system executing on client computing device <b>160</b> and/or by a mobile banking application executing on client computing device <b>160</b>. Graphical user interface <b>500</b> may be displayed when launching a mobile banking application, and/or at another phase of use of the application (e.g., after successful login, in a messages portion of the application, and the like). Graphical user interface <b>500</b> may be a part of a troubleshooting portal. Graphical user interface <b>500</b> may include information regarding an issue that may be associated with a particular computing platform, including an issue identification number, and a problem description of the issue that may be associated with the particular computing platform. Graphical user interface <b>500</b> may include information regarding a suggested solution that has been tried in the past, and that was successful at solving the issue that may be associated with the particular computing platform. Specifically, graphical user interface <b>500</b> may include a detailed description of the steps that were involved in the suggested solution that has been tried in the past, and that was successful at solving the issue that may be associated with the particular computing platform. Graphical user interface <b>500</b> may include information regarding a number of times that the suggested solution that has been tried in the past, and that was successful at solving the issue that may be associated with the particular computing platform, was successful in the past. In this manner, a user attempting to troubleshoot the issue that may be associated with the computing platform may attempt the suggested solution that has been tried in the past, and that was successful at solving the issue that may be associated with the particular computing platform, and thus may be more efficient at solving the issue that may be associated with the computing platform.</p><p id="p-0083" num="0082">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, graphical user interface <b>600</b> may be presented by an operating system executing on client computing device <b>160</b> and/or by a mobile banking application executing on client computing device <b>160</b>. Graphical user interface <b>600</b> may include information regarding an issue that may be associated with a particular computing platform, including an issue identification number, and a problem description of the issue that may be associated with the particular computing platform. Graphical user interface <b>600</b> may include information regarding an attempted solution that has been tried in the past, but was not successful at solving the issue that may be associated with the particular computing platform. Specifically, graphical user interface <b>600</b> may include a detailed description of the steps that were involved in the attempted solution that has been tried in the past, but was not successful at solving the issue that may be associated with the particular computing platform. Graphical user interface <b>600</b> may include information regarding a number of times that the attempted solution that has been tried in the past, but that was not successful at solving the issue that may be associated with the particular computing platform, was attempted in the past. In this manner, a user attempting to troubleshoot the issue that may be associated with the computing platform may bypass the attempted solution that has been tried in the past, but that was not successful at solving the issue that may be associated with the particular computing platform, and thus may be more efficient at solving the issue that may be associated with the computing platform.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an illustrative method for using distributed databases for network regression analysis in accordance with one or more example embodiments. Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, at step <b>705</b>, a computing platform having at least one processor, a memory, and a communication interface may receive a maintenance action report. At step <b>710</b>, the computing platform may receive a history log. At step <b>715</b>, the computing platform may receive a status report that includes a current status of the digital computing platform. For example, the status report may indicate whether the digital computing platform is experiencing any problems. The computing platform may determine, from the status report, whether a previous problem that the digital computing platform was experiencing has been resolved (e.g., by the maintenance action identified in the maintenance action report). At step <b>720</b>, the computing platform may identify a problem (e.g., a new problem, a same problem as a past problem) with a digital computing platform (e.g., the digital computing platform, a different computing platform). At step <b>725</b>, the computing platform may identify a successful solution to the problem with the digital computing platform. At step <b>730</b>, the computing platform may store the successful solution to the problem with the digital computing platform in a distributed database. At step <b>735</b>, the computing platform may identify a new problem (e.g., with the digital computing platform or with a different computing platform). At step <b>740</b>, the computing platform may identify a stored solution to the new problem in the distributed database. At step <b>745</b>, the computing platform may implement the stored solution from the distributed database. For example, the computing platform may send an alert, a maintenance request, or the like. In another example, the computing platform may automatically implement the stored solution from the distributed database (e.g., by generating a command configured to cause automatic implementation of the stored solution from the distributed database).</p><p id="p-0085" num="0084">One or more aspects of the disclosure may be embodied in computer-usable data or computer-executable instructions, such as in one or more program modules, executed by one or more computers or other devices to perform the operations described herein. Generally, program modules include routines, programs, objects, components, data structures, and the like that perform particular tasks or implement particular abstract data types when executed by one or more processors in a computer or other data processing device. The computer-executable instructions may be stored as computer-readable instructions on a computer-readable medium such as a hard disk, optical disk, removable storage media, solid-state memory, RAM, and the like. The functionality of the program modules may be combined or distributed as desired in various embodiments. In addition, the functionality may be embodied in whole or in part in firmware or hardware equivalents, such as integrated circuits, application-specific integrated circuits (ASICs), field programmable gate arrays (FPGA), and the like. Particular data structures may be used to more effectively implement one or more aspects of the disclosure, and such data structures are contemplated to be within the scope of computer executable instructions and computer-usable data described herein.</p><p id="p-0086" num="0085">Various aspects described herein may be embodied as a method, an apparatus, or as one or more computer-readable media storing computer-executable instructions. Accordingly, those aspects may take the form of an entirely hardware embodiment, an entirely software embodiment, an entirely firmware embodiment, or an embodiment combining software, hardware, and firmware aspects in any combination. In addition, various signals representing data or events as described herein may be transferred between a source and a destination in the form of light or electromagnetic waves traveling through signal-conducting media such as metal wires, optical fibers, or wireless transmission media (e.g., air or space). In general, the one or more computer-readable media may be and/or include one or more non-transitory computer-readable media.</p><p id="p-0087" num="0086">As described herein, the various methods and acts may be operative across one or more computing servers and one or more networks. The functionality may be distributed in any manner, or may be located in a single computing device (e.g., a server, a client computer, and the like). For example, in alternative embodiments, one or more of the computing platforms discussed above may be combined into a single computing platform, and the various functions of each computing platform may be performed by the single computing platform. In such arrangements, any and/or all of the above-discussed communications between computing platforms may correspond to data being accessed, moved, modified, updated, and/or otherwise used by the single computing platform. Additionally or alternatively, one or more of the computing platforms discussed above may be implemented in one or more virtual machines that are provided by one or more physical computing devices. In such arrangements, the various functions of each computing platform may be performed by the one or more virtual machines, and any and/or all of the above-discussed communications between computing platforms may correspond to data being accessed, moved, modified, updated, and/or otherwise used by the one or more virtual machines.</p><p id="p-0088" num="0087">Aspects of the disclosure have been described in terms of illustrative embodiments thereof. Numerous other embodiments, modifications, and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure. For example, one or more of the steps depicted in the illustrative figures may be performed in other than the recited order, and one or more depicted steps may be optional in accordance with aspects of the disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system comprising:<claim-text>a computing device, comprising:<claim-text>at least one processor; and</claim-text><claim-text>memory storing computer-readable instructions that, when executed by the at least one processor, cause the computing device to:<claim-text>receive a maintenance action report associated with a maintenance action performed on a first computing platform;</claim-text><claim-text>receive a history log associated with at least one historical maintenance action performed on the first computing platform;</claim-text><claim-text>receive a status report of a current operating status of the first computing platform;</claim-text><claim-text>determine, based on the status report of the current operating status of the first computing platform, a success score for the maintenance action performed on the first computing platform;</claim-text><claim-text>store, in the history log associated with the at least one historical maintenance action performed on the first computing platform:<claim-text>the maintenance action report associated with the maintenance action performed on the first computing platform, and</claim-text><claim-text>the success score for the maintenance action performed on the first computing platform;</claim-text></claim-text><claim-text>receive a request for a suggested solution to a new problem with a second computing platform that is different from the first computing platform;</claim-text><claim-text>identify, from the history log associated with the first computing platform, at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>determine, from among the at least one potential solution associated with the new problem with the second computing platform, a highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>filter, from the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform, first keystrokes corresponding to irrelevant troubleshooting steps of the highest ranked solution or second keystrokes corresponding to troubleshooting steps that are part of an unsuccessful chain of troubleshooting steps of the highest ranked solution; and</claim-text><claim-text>send, in response to the request for the suggested solution to the new problem with the second computing platform, a command configured to cause a maintenance action to be performed on the second computing platform, the maintenance action based on the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform; and</claim-text></claim-text></claim-text><claim-text>a maintenance computing platform configured to, based on receipt of the command, initiate performance of the maintenance action on the second computing platform.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer-readable instructions, when executed by the at least one processor, cause the computing device to:<claim-text>receive a maintenance action report associated with a maintenance action performed on the second computing platform, the maintenance action based on the command configured to cause the maintenance action to be performed on the second computing platform;</claim-text><claim-text>receive a status report of a current operating status of the second computing platform;</claim-text><claim-text>determine, based on the status report of the current operating status of the second computing platform, a success score for the maintenance action performed on the second computing platform; and</claim-text><claim-text>store, in a history log associated with at least one historical maintenance action performed on the second computing platform:<claim-text>the maintenance action report associated with the maintenance action performed on the second computing platform, and</claim-text><claim-text>the success score for the maintenance action performed on the second computing platform.</claim-text></claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the computer-readable instructions, when executed by the at least one processor, cause the computing device to:<claim-text>determine whether the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem;</claim-text><claim-text>in a case that the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem, compare the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform; and</claim-text><claim-text>store an update to at least one of the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform, the update based on comparing the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the computer-readable instructions, when executed by the at least one processor, cause the computing device to:<claim-text>store, in a distributed database, the update to the at least one of the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer-readable instructions, when executed by the at least one processor, cause the computing device to:<claim-text>determine, from the history log associated with the at least one historical maintenance action performed on the first computing platform, a number of successful times the maintenance action performed on the first computing platform solved a same problem with the first computing platform; and</claim-text><claim-text>use the determined number of successful times the maintenance action performed on the first computing platform solved the same problem with the first computing platform as part of determining the success score for the maintenance action performed on the first computing platform.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the computer-readable instructions, when executed by the at least one processor, cause the computing device to:<claim-text>generate, for display, a user interface screen that comprises the number of successful times the maintenance action performed on the first computing platform solved the same problem with the first computing platform.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer-readable instructions, when executed by the at least one processor, cause the computing device to:<claim-text>generate, for display, a user interface screen that comprises the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method comprising:<claim-text>at a computing platform comprising at least one processor, memory, and a communication interface:<claim-text>receiving a maintenance action report associated with a maintenance action performed on a first computing platform;</claim-text><claim-text>receiving a history log associated with at least one historical maintenance action performed on the first computing platform;</claim-text><claim-text>receiving a status report of a current operating status of the first computing platform;</claim-text><claim-text>determining, based on the status report of the current operating status of the first computing platform, a success score for the maintenance action performed on the first computing platform;</claim-text><claim-text>storing, in the history log associated with the at least one historical maintenance action performed on the first computing platform:<claim-text>the maintenance action report associated with the maintenance action performed on the first computing platform, and</claim-text><claim-text>the success score for the maintenance action performed on the first computing platform;</claim-text></claim-text><claim-text>receiving a request for a suggested solution to a new problem with a second computing platform that is different from the first computing platform;</claim-text><claim-text>identifying from the history log associated with the first computing platform, at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>determining, from among the at least one potential solution associated with the new problem with the second computing platform, a highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>generating, for display, a user interface screen that comprises the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>filtering, from the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform, troubleshooting steps that are part of an unsuccessful chain of troubleshooting; and</claim-text><claim-text>sending, in response to the request for the suggested solution to the new problem with the second computing platform, a command configured to cause a maintenance action to be performed on the second computing platform, the maintenance action based on the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>applying a respective weighting to a respective success score associated with each of the at least one potential solution associated with the new problem with the second computing platform, as part of determining, from among the at least one potential solution associated with the new problem with the second computing platform, the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>applying a non-zero weighting to at least one parameter of the success score for the maintenance action performed on the first computing platform if a measure of the at least one parameter of the success score for the maintenance action performed on the first computing platform is above a weighting threshold, and apply a zero weighting to the at least one parameter of the success score for the maintenance action performed on the first computing platform if the measure of the at least one parameter of the success score for the maintenance action performed on the first computing platform is below the weighting threshold.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>storing, in a distributed database, the history log associated with the at least one historical maintenance action performed on the first computing platform.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>receiving, from a distributed database, the maintenance action report associated with the maintenance action performed on the first computing platform.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>receive, from a distributed database, the history log associated with the at least one historical maintenance action performed on the first computing platform.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>determine, based on the success score for the maintenance action performed on the first computing platform, whether the maintenance action performed on the first computing platform was a successful solution by determining whether the success score for the maintenance action performed on the first computing platform is above a success threshold.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. Non-transitory computer-readable media storing instructions that, when executed by a computing platform comprising at least one processor, memory, and a communication interface, cause the computing platform to:<claim-text>receive a maintenance action report associated with a maintenance action performed on a first computing platform;</claim-text><claim-text>receive a history log associated with at least one historical maintenance action performed on the first computing platform;</claim-text><claim-text>receive a status report of a current operating status of the first computing platform;</claim-text><claim-text>determine, based on the status report of the current operating status of the first computing platform, a success score for the maintenance action performed on the first computing platform;</claim-text><claim-text>store, in the history log associated with the at least one historical maintenance action performed on the first computing platform:<claim-text>the maintenance action report associated with the maintenance action performed on the first computing platform, and</claim-text><claim-text>the success score for the maintenance action performed on the first computing platform;</claim-text></claim-text><claim-text>receive a request for a suggested solution to a new problem with a second computing platform that is different from the first computing platform;</claim-text><claim-text>identify, from the history log associated with the first computing platform, at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>determine, from among the at least one potential solution associated with the new problem with the second computing platform, a highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>generate, for display, a user interface screen that comprises the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform;</claim-text><claim-text>filter, from the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform, troubleshooting steps that are part of an unsuccessful chain of troubleshooting; and</claim-text><claim-text>send, in response to the request for the suggested solution to the new problem with the second computing platform, a command configured to cause a maintenance action to be performed on the second computing platform, the maintenance action based on the highest-ranked solution of the at least one potential solution associated with the new problem with the second computing platform.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the instructions further cause the computing platform to:<claim-text>receive a plurality of third keystrokes that were entered by a user as part of performing the maintenance action performed on the first computing platform;</claim-text><claim-text>filter the plurality of third keystrokes to remove at least one irrelevant keystroke that is irrelevant to a successful solution.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the instructions further cause the computing platform to:<claim-text>store, in a distributed database, the history log associated with the at least one historical maintenance action performed on the first computing platform;</claim-text><claim-text>receive an updated version of the distributed database; and</claim-text><claim-text>send the updated version of the distributed database to a different computing device.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the instructions further cause the computing platform to:<claim-text>parse the history log associated with the at least one historical maintenance action performed on the first computing platform;</claim-text><claim-text>identify, from parsing the history log associated with the at least one historical maintenance action performed on the first computing platform, a relevant keyword associated with the maintenance action performed on the first computing platform; and</claim-text><claim-text>store, in a distributed database with the maintenance action report associated with the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the first computing platform, the relevant keyword associated with the maintenance action performed on the first computing platform.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the instructions further cause the computing platform to:<claim-text>receive a maintenance action report associated with a maintenance action performed on the second computing platform, the maintenance action based on the command configured to cause the maintenance action to be performed on the second computing platform;</claim-text><claim-text>receive a status report of a current operating status of the second computing platform;</claim-text><claim-text>determine, based on the status report of the current operating status of the second computing platform, a success score for the maintenance action performed on the second computing platform; and</claim-text><claim-text>store, in a history log associated with at least one historical maintenance action performed on the second computing platform:<claim-text>the maintenance action report associated with the maintenance action performed on the second computing platform, and</claim-text><claim-text>the success score for the maintenance action performed on the second computing platform.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable media of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the instructions further cause the computing platform to:<claim-text>determine whether the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem;</claim-text><claim-text>in a case that the maintenance action performed on the first computing platform and the maintenance action performed on the second computing platform are both associated with a similar potential problem, compare the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform; and</claim-text><claim-text>store an update to at least one of the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform, the update based on comparing the success score for the maintenance action performed on the first computing platform and the success score for the maintenance action performed on the second computing platform.</claim-text></claim-text></claim></claims></us-patent-application>