<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005512A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005512</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17864035</doc-number><date>20220713</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>7</main-group><subgroup>10</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>7</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>7</main-group><subgroup>109</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>7</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>7</main-group><subgroup>1048</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>7</main-group><subgroup>1063</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">REDUCED PIN STATUS REGISTER</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17155070</doc-number><date>20210121</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11404095</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17864035</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Micron Technology, Inc.</orgname><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Cariello</last-name><first-name>Giuseppe</first-name><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Methods, systems, and devices for reduced pin status register are described. An apparatus may include a first memory die and a second memory die each coupled with a data bus. The apparatus may further include a controller coupled with the first memory die and the second memory die via the data bus that is configured to transmit a first command associated with a first operation to the first memory die and a second command associated with a second operation to the second memory die. The controller may further transmit a third command concurrently to the first memory die and the second memory die, the third command requesting a first status of the first operation and a second status of the second operation. The controller may receive the first status and the second status concurrently via the data bus from the first memory die and the second memory die.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="76.88mm" wi="158.75mm" file="US20230005512A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="247.31mm" wi="144.44mm" file="US20230005512A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="196.00mm" wi="168.49mm" file="US20230005512A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="235.12mm" wi="120.23mm" orientation="landscape" file="US20230005512A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="220.39mm" wi="115.99mm" orientation="landscape" file="US20230005512A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="198.46mm" wi="161.37mm" file="US20230005512A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="197.70mm" wi="161.37mm" file="US20230005512A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="190.42mm" wi="133.52mm" file="US20230005512A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="196.00mm" wi="133.43mm" file="US20230005512A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE</heading><p id="p-0002" num="0001">The present Application for Patent is a continuation of U.S. patent application Ser. No. 17/155,070 by Cariello et al., entitled &#x201c;REDUCED PIN STATUS REGISTER,&#x201d; filed Jan. 21, 2021, assigned to the assignee hereof, and expressly incorporated by reference herein.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF TECHNOLOGY</heading><p id="p-0003" num="0002">The following relates generally to one or more systems for memory and more specifically to reduced pin status register.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Memory devices are widely used to store information in various electronic devices such as computers, wireless communication devices, cameras, digital displays, and the like. Information is stored by programing memory cells within a memory device to various states. For example, binary memory cells may be programmed to one of two supported states, often corresponding to a logic 1 or a logic 0. In some examples, a single memory cell may support more than two possible states, any one of which may be stored by the memory cell. To access information stored by a memory device, a component may read, or sense, the state of one or more memory cells within the memory device. To store information, a component may write, or program, one or more memory cells within the memory device to corresponding states.</p><p id="p-0005" num="0004">Various types of memory devices exist, including magnetic hard disks, random access memory (RAM), read-only memory (ROM), dynamic RAM (DRAM), synchronous dynamic RAM (SDRAM), ferroelectric RAM (FeRAM), magnetic RAM (MRAM), resistive RAM (RRAM), flash memory, phase change memory (PCM), 3-dimensional cross-point memory (<b>3</b>D cross point), not-or (NOR) and not-and (NAND) memory devices, and others. Memory devices may be volatile or non-volatile. Volatile memory cells (e.g., DRAM cells) may lose their programmed states over time unless they are periodically refreshed by an external power source. Non-volatile memory cells (e.g., NAND memory cells) may maintain their programmed states for extended periods of time even in the absence of an external power source.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a system that supports reduced pin status register in accordance with examples as disclosed herein.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of a system that supports reduced pin status register in accordance with examples as disclosed herein.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a timing diagram that supports reduced pin status register in accordance with examples as disclosed herein.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of a circuit that supports reduced pin status register in accordance with examples as disclosed herein</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of a memory system that supports reduced pin status register in accordance with examples as disclosed herein.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a block diagram of a memory device that supports reduced pin status register in accordance with examples as disclosed herein.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIGS. <b>7</b> and <b>8</b></figref> show flowcharts illustrating a method or methods that support reduced pin status register in accordance with examples as disclosed herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0013" num="0012">A system may include a host system and a memory system that stores data for the host system. In some examples, the memory system may include multiple memory devices attached to an interface. For example, the memory system may include multiple NAND devices attached to the same interface (e.g., Open NAND Flash Interface (ONFI) channel). The host system may transmit access commands (e.g., read commands, program commands, erase commands) to the memory system. In such examples, the memory system may execute operations in response to the commands received from the host system. In examples where multiple memory devices are included in the memory system, the memory devices may perform concurrent operations&#x2014;e.g., operations that may not be initiated at the same time but proceed in parallel. That is, the memory system may initiate a first operation at a first memory device, then a second operation at a second memory device, then a third operation at a third memory device, and the first, second, and third operations may be executed at least partially in parallel. In some examples, the host system controller or memory system controller may execute round robin polling of the status register of each active memory device to determine if a given memory device is ready to be serviced&#x2014;e.g., the controller may poll the first memory device, then the second memory device, and then the third memory device, to determine if the first, second, or third memory device is ready to be serviced. In some examples, performing round robin polling may increase latency and power consumption in the system. For example, the second memory device may be ready to be serviced before the first memory device but may wait idly until the system is done polling the status register of the first memory device. Also switching from one memory device to another memory device to poll the memory devices in the round robin polling may utilize additional power consumption for the bus transitions. And finally, a memory device idly waiting for a subsequent command may increase power consumption as well.</p><p id="p-0014" num="0013">Systems, techniques, and devices are described herein to perform concurrent or parallel status polling via a dedicated command in a memory system with multiple memory devices. That is, a controller in the memory system may transmit a command concurrently to multiple memory devices and the memory devices may concurrently multiplex their status via a data bus coupling the controller and the memory devices. Each memory device may be configured to output its status on one or more lines of the data bus. For example, for an eight (8) bit data bus, four memory devices may each multiplex their status using two lines of the data bus&#x2014;e.g., each memory device may be configured to perform two (2) operations in parallel and may output a status of each operation. In other examples, the memory system may include eight (8) memory devices that may each multiplex their status using one (1) line of the data bus. In some examples, the memory devices may be permanently configured to output their status on a given data bus line&#x2014;e.g., by using trim settings that are written during manufacturing. In other examples, the memory system may dynamically select which data line a given memory device may utilize while outputting the status&#x2014;e.g., by using registers. In such examples, the memory system may be configured to adapt based on the contingent workload&#x2014;e.g., if more than eight (8) devices are attached to the same data bus, it may be more convenient to reconfigure which data bus each memory devise utilizes during a given operation and/or workload. By performing concurrent parallel status polling, the memory system may decrease power consumption and latency. That is, the memory system may be configured to identify which memory devices are ready to be serviced first and transmit subsequent commands to the given memory devices. This may reduce a quantity of time the memory device waits idly for the subsequent command, reducing power consumption and latency of the system.</p><p id="p-0015" num="0014">Features of the disclosure are initially described in the context of systems, devices, and circuits as described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Features of the disclosure are described in the context systems, timing diagrams, and circuits as described with reference to <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>4</b></figref>. These and other features of the disclosure are further illustrated by and described with reference to an apparatus diagram and flowcharts that relate to reduced pin status register as described with reference to <figref idref="DRAWINGS">FIGS. <b>5</b>-<b>8</b></figref>.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a system <b>100</b> that supports reduced pin status register in accordance with examples as disclosed herein. The system <b>100</b> includes a host system <b>105</b> coupled with a memory system <b>110</b>.</p><p id="p-0017" num="0016">A memory system <b>110</b> may be or include any device or collection of devices, where the device or collection of devices includes at least one memory array. For example, a memory system <b>110</b> may be or include a Universal Flash Storage (UFS) device, an embedded Multi-Media Controller (eMMC) device, a flash device, a universal serial bus (USB) flash device, a secure digital (SD) card, a solid-state drive (SSD), a hard disk drive (HDD), a dual in-line memory module (DIMM), a small outline DIMM (SO-DIMM), or a non-volatile DIMM (NVDIMM), among other possibilities.</p><p id="p-0018" num="0017">The system <b>100</b> may be included in a computing device such as a desktop computer, a laptop computer, a network server, a mobile device, a vehicle (e.g., airplane, drone, train, automobile, or other conveyance), an Internet of Things (IoT) enabled device, an embedded computer (e.g., one included in a vehicle, industrial equipment, or a networked commercial device), or any other computing device that includes memory and a processing device.</p><p id="p-0019" num="0018">The system <b>100</b> may include a host system <b>105</b>, which may be coupled with the memory system <b>110</b>. In some examples, this coupling may include an interface with a host system controller <b>106</b>, which may be an example of a control component configured to cause the host system <b>105</b> to perform various operations in accordance with examples as described herein. The host system <b>105</b> may include one or more devices, and in some cases may include a processor chipset and a software stack executed by the processor chipset. For example, the host system <b>105</b> may include an application configured for communicating with the memory system <b>110</b> or a device therein. The processor chipset may include one or more cores, one or more caches (e.g., memory local to or included in the host system <b>105</b>), a memory controller (e.g., NVDIMM controller), and a storage protocol controller (e.g., peripheral component interconnect express (PCIe) controller, serial advanced technology attachment (SATA)controller). The host system <b>105</b> may use the memory system <b>110</b>, for example, to write data to the memory system <b>110</b> and read data from the memory system <b>110</b>. Although one memory system <b>110</b> is shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the host system <b>105</b> may be coupled with any quantity of memory systems <b>110</b>.</p><p id="p-0020" num="0019">The host system <b>105</b> may be coupled with the memory system <b>110</b> via at least one physical host interface. The host system <b>105</b> and the memory system <b>110</b> may in some cases be configured to communicate via a physical host interface using an associated protocol (e.g., to exchange or otherwise communicate control, address, data, and other signals between the memory system <b>110</b> and the host system <b>105</b>). Examples of a physical host interface may include, but are not limited to, a SATA interface, a UFS interface, an eMMC interface, a PCIe interface, a USB interface, a Fiber Channel interface, a Small Computer System Interface (SCSI), a Serial Attached SCSI (SAS), a Double Data Rate (DDR) interface, a DIMM interface (e.g., DIMM socket interface that supports DDR), an Open NAND Flash Interface (ONFI), and a Low Power Double Data Rate (LPDDR) interface. In some examples, one or more such interfaces may be included in or otherwise supported between a host system controller <b>106</b> of the host system <b>105</b> and a memory system controller <b>115</b> of the memory system <b>110</b>. In some examples, the host system <b>105</b> may be coupled with the memory system <b>110</b> (e.g., the host system controller <b>106</b> may be coupled with the memory system controller <b>115</b>) via a respective physical host interface for each memory device <b>130</b> included in the memory system <b>110</b>, or via a respective physical host interface for each type of memory device <b>130</b> included in the memory system <b>110</b>.</p><p id="p-0021" num="0020">The memory system <b>110</b> may include a memory system controller <b>115</b> and one or more memory devices <b>130</b>. A memory device <b>130</b> may include one or more memory arrays of any type of memory cells (e.g., non-volatile memory cells, volatile memory cells, or any combination thereof). Although two memory devices <b>130</b>-<i>a </i>and <b>130</b>-<i>b </i>are shown in the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the memory system <b>110</b> may include any quantity of memory devices <b>130</b>. Further, if the memory system <b>110</b> includes more than one memory device <b>130</b>, different memory devices <b>130</b> within the memory system <b>110</b> may include the same or different types of memory cells.</p><p id="p-0022" num="0021">The memory system controller <b>115</b> may be coupled with and communicate with the host system <b>105</b> (e.g., via the physical host interface) and may be an example of a control component configured to cause the memory system <b>110</b> to perform various operations in accordance with examples as described herein. The memory system controller <b>115</b> may also be coupled with and communicate with memory devices <b>130</b> to perform operations such as reading data, writing data, erasing data, or refreshing data at a memory device <b>130</b>&#x2014;among other such operations&#x2014;which may generically be referred to as access operations. In some cases, the memory system controller <b>115</b> may receive commands from the host system <b>105</b> and communicate with one or more memory devices <b>130</b> to execute such commands (e.g., at memory arrays within the one or more memory devices <b>130</b>). For example, the memory system controller <b>115</b> may receive commands or operations from the host system <b>105</b> and may convert the commands or operations into instructions or appropriate commands to achieve the desired access of the memory devices <b>130</b>. In some cases, the memory system controller <b>115</b> may exchange data with the host system <b>105</b> and with one or more memory devices <b>130</b> (e.g., in response to or otherwise in association with commands from the host system <b>105</b>). For example, the memory system controller <b>115</b> may convert responses (e.g., data packets or other signals) associated with the memory devices <b>130</b> into corresponding signals for the host system <b>105</b>.</p><p id="p-0023" num="0022">The memory system controller <b>115</b> may be configured for other operations associated with the memory devices <b>130</b>. For example, the memory system controller <b>115</b> may execute or manage operations such as wear-leveling operations, garbage collection operations, error control operations such as error-detecting operations or error-correcting operations, encryption operations, caching operations, media management operations, background refresh, health monitoring, and address translations between logical addresses (e.g., logical block addresses (LBAs)) associated with commands from the host system <b>105</b> and physical addresses (e.g., physical block addresses) associated with memory cells within the memory devices <b>130</b>.</p><p id="p-0024" num="0023">The memory system controller <b>115</b> may include hardware such as one or more integrated circuits or discrete components, a buffer memory, or a combination thereof. The hardware may include circuitry with dedicated (e.g., hard-coded) logic to perform the operations ascribed herein to the memory system controller <b>115</b>. The memory system controller <b>115</b> may be or include a microcontroller, special purpose logic circuitry (e.g., a field programmable gate array (FPGA), an application specific integrated circuit (ASIC), a digital signal processor (DSP)), or any other suitable processor or processing circuitry.</p><p id="p-0025" num="0024">The memory system controller <b>115</b> may also include a local memory <b>120</b>. In some cases, the local memory <b>120</b> may include read-only memory (ROM) or other memory that may store operating code (e.g., executable instructions) executable by the memory system controller <b>115</b> to perform functions ascribed herein to the memory system controller <b>115</b>. In some cases, the local memory <b>120</b> may additionally or alternatively include static random access memory (SRAM) or other memory that may be used by the memory system controller <b>115</b> for internal storage or calculations, for example, related to the functions ascribed herein to the memory system controller <b>115</b>.</p><p id="p-0026" num="0025">A memory device <b>130</b> may include one or more arrays of non-volatile memory cells. For example, a memory device <b>130</b> may include NAND (e.g., NAND flash) memory, ROM, phase change memory (PCM), self-selecting memory, other chalcogenide-based memories, ferroelectric random access memory (RAM) (FeRAM), magneto RAM (MRAM), NOR (e.g., NOR flash) memory, Spin Transfer Torque (STT)-MRAM, conductive bridging RAM (CBRAM), resistive random access memory (RRAM), oxide based RRAM (OxRAM), electrically erasable programmable ROM (EEPROM), or any combination thereof. Additionally or alternatively, a memory device <b>130</b> may include one or more arrays of volatile memory cells. For example, a memory device <b>130</b> may include RAM memory cells, such as dynamic RAM (DRAM) memory cells and synchronous DRAM (SDRAM) memory cells.</p><p id="p-0027" num="0026">In some examples, a memory device <b>130</b> may include (e.g., on a same die or within a same package) a local controller <b>135</b>, which may execute operations on one or more memory cells of the respective memory device <b>130</b>. A local controller <b>135</b> may operate in conjunction with a memory system controller <b>115</b> or may perform one or more functions ascribed herein to the memory system controller <b>115</b>. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a memory device <b>130</b>-<i>a </i>may include a local controller <b>135</b>-<i>a </i>and a memory device <b>130</b>-<i>b </i>may include a local controller <b>135</b>-<i>b. </i></p><p id="p-0028" num="0027">In some cases, a memory device <b>130</b> may be or include a NAND device (e.g., NAND flash device). A memory device <b>130</b> may be or include a memory die <b>160</b>. For example, in some cases, a memory device <b>130</b> may be a package that includes one or more dies <b>160</b>. A die <b>160</b> may, in some examples, be a piece of electronics-grade semiconductor cut from a wafer (e.g., a silicon die cut from a silicon wafer). Each die <b>160</b> may include one or more planes <b>165</b>, and each plane <b>165</b> may include a respective set of blocks <b>170</b>, where each block <b>170</b> may include a respective set of pages <b>175</b>, and each page <b>175</b> may include a set of memory cells.</p><p id="p-0029" num="0028">In some cases, a NAND memory device <b>130</b> may include memory cells configured to each store one bit of information, which may be referred to as single level cells (SLCs). Additionally or alternatively, a NAND memory device <b>130</b> may include memory cells configured to each store multiple bits of information, which may be referred to as multi-level cells (MLCs) if configured to each store two bits of information, as tri-level cells (TLCs) if configured to each store three bits of information, as quad-level cells (QLCs) if configured to each store four bits of information, or more generically as multiple-level memory cells. Multiple-level memory cells may provide greater density of storage relative to SLC memory cells but may, in some cases, involve narrower read or write margins or greater complexities for supporting circuitry.</p><p id="p-0030" num="0029">In some cases, planes <b>165</b> may refer to groups of blocks <b>170</b>, and in some cases, concurrent operations may take place within different planes <b>165</b>. For example, concurrent operations may be performed on memory cells within different blocks <b>170</b> so long as the different blocks <b>170</b> are in different planes <b>165</b>. In some cases, performing concurrent operations in different planes <b>165</b> may be subject to one or more restrictions, such as identical operations being performed on memory cells within different pages <b>175</b> that have the same page address within their respective planes <b>165</b> (e.g., related to command decoding, page address decoding circuitry, or other circuitry being shared across planes <b>165</b>).</p><p id="p-0031" num="0030">In some cases, a block <b>170</b> may include memory cells organized into rows (pages <b>175</b>) and columns (e.g., strings, not shown). For example, memory cells in a same page <b>175</b> may share (e.g., be coupled with) a common word line, and memory cells in a same string may share (e.g., be coupled with) a common digit line (which may alternatively be referred to as a bit line).</p><p id="p-0032" num="0031">For some NAND architectures, memory cells may be read and programmed (e.g., written) at a first level of granularity (e.g., at the page level of granularity) but may be erased at a second level of granularity (e.g., at the block level of granularity). That is, a page <b>175</b> may be the smallest unit of memory (e.g., set of memory cells) that may be independently programmed or read (e.g., programed or read concurrently as part of a single program or read operation), and a block <b>170</b> may be the smallest unit of memory (e.g., set of memory cells) that may be independently erased (e.g., erased concurrently as part of a single erase operation). Further, in some cases, NAND memory cells may be erased before they can be re-written with new data. Thus, for example, a used page <b>175</b> may in some cases not be updated until the entire block <b>170</b> that includes the page <b>175</b> has been erased.</p><p id="p-0033" num="0032">The system <b>100</b> may include any quantity of non-transitory computer readable media that support reduced pin status register. For example, the host system <b>105</b>, the memory system controller <b>115</b>, or a memory device <b>130</b> may include or otherwise may access one or more non-transitory computer readable media storing instructions (e.g., firmware) for performing the functions ascribed herein to the host system <b>105</b>, memory system controller <b>115</b>, or memory device <b>130</b>. For example, such instructions, if executed by the host system <b>105</b> (e.g., by the host system controller <b>106</b>), by the memory system controller <b>115</b>, or by a memory device <b>130</b> (e.g., by a local controller <b>135</b>), may cause the host system <b>105</b>, memory system controller <b>115</b>, or memory device <b>130</b> to perform one or more associated functions as described herein.</p><p id="p-0034" num="0033">In some cases, a memory system <b>110</b> may utilize a memory system controller <b>115</b> to provide a managed memory system that may include, for example, one or more memory arrays and related circuitry combined with a local (e.g., on-die or in-package) controller (e.g., local controller <b>135</b>). An example of a managed memory system is a managed NAND (MNAND) system.</p><p id="p-0035" num="0034">In some examples, memory system controller <b>115</b> may perform polling operations on the memory devices <b>130</b> to determine a status of the operations being performed by each memory device <b>130</b>. In some cases, the memory system controller <b>115</b> may conduct the polling operation in a round robin system. For example, the memory system controller <b>115</b> may first request a status of a first operation being executed at the memory device <b>130</b>-<i>a </i>and then request a status of a second operation being executed at the memory device <b>130</b>-<i>b</i>. In some cases, the second operation may be executed before the first operation. In such examples, the memory device <b>130</b>-<i>b </i>may idly wait for the memory system controller <b>115</b> to request the status of the second operation. The idle wait period may increase the power consumption and latency of the system.</p><p id="p-0036" num="0035">As described herein, the memory system controller <b>115</b> may perform a concurrent polling operation on the memory devices <b>130</b>. For example, the memory system controller may transmit a concurrent polling command to each memory device <b>130</b>. The memory devices <b>130</b> may then drive a status signal on a given data line over a data bus coupling the memory devices <b>130</b> and memory system controller <b>115</b>. When either memory device <b>130</b> is complete with their operation, the given memory device <b>130</b> may transition the bit from a busy state to a ready to be serviced state. The memory system controller <b>115</b> may then proceed to service the memory device <b>130</b>. By performing the concurrent polling operation, the memory system controller <b>115</b> may service the first memory device <b>130</b> available, reducing the idle time and decreasing the latency and power consumption of the system.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of a system <b>200</b> that supports reduced pin status register in accordance with examples as disclosed herein. System <b>200</b> may be an example of a memory system <b>110</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. System <b>200</b> may include a memory system controller <b>215</b> and memory devices <b>230</b> which may be examples of memory system controller <b>115</b> and memory devices <b>130</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The memory system controller <b>215</b> may be coupled with the memory devices <b>230</b> via a data bus <b>205</b>. The memory system controller <b>215</b> may also be coupled with each memory device <b>230</b> via a chip enable line <b>210</b>&#x2014;e.g., memory device <b>230</b>-<i>a </i>may be coupled with the memory system controller <b>215</b> via chip enable line <b>210</b>-<i>a</i>. In some examples, there may be eight (8) memory devices <b>230</b> coupled with memory system controller <b>215</b>. In other examples, there may be more than or less than eight (8) memory devices <b>230</b> coupled with the memory system controller <b>215</b>. It should be noted, a quantity of memory devices <b>230</b> in the system <b>200</b> are not limiting on the claims.</p><p id="p-0038" num="0037">As described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, memory system controller <b>215</b> may be configured to communicate commands from a host system (e.g., host system <b>105</b>) to memory devices <b>230</b>. In some examples, the memory system controller <b>215</b> may be configured to transmit a command <b>235</b> to the memory devices <b>230</b> via the data bus <b>205</b>. In such examples, the memory system controller <b>215</b> may be configured to activate a memory device <b>230</b>-<i>a </i>via a chip enable line <b>210</b> to transmit the command <b>235</b> from the memory system controller <b>215</b> to a given memory device <b>230</b>. For example, the memory system controller <b>215</b> may activate memory device <b>230</b>-<i>a </i>via chip enable line <b>210</b>-<i>a </i>and then transmit a command <b>235</b> to initiate an operation to the memory device <b>230</b>-<i>a</i>. In some examples, the memory system controller <b>215</b> may be configured to transmit commands <b>235</b> to initiate concurrent operations&#x2014;e.g., operations that may not be initiated at the same time but proceed in parallel. For example, the memory system controller <b>215</b> may be configured to activate memory device <b>230</b>-<i>a </i>by transmitting a chip enable signal via the chip enable line <b>210</b>-<i>a</i>. The memory system controller <b>215</b> may then transmit a command <b>235</b> to the memory device <b>230</b>-<i>a </i>to initiate a first operation. The memory system controller <b>215</b> may then activate memory device <b>230</b>-<i>b </i>via the chip enable line <b>210</b>-<i>b </i>and transmit a second command <b>235</b> to the memory device <b>230</b>-<i>b </i>to initiate a second operation. In such examples, the first operation and the second operations may be performed concurrently (e.g., in parallel) by the memory device <b>230</b>-<i>a </i>and the memory device <b>230</b>-<i>b. </i></p><p id="p-0039" num="0038">In some examples, the memory system controller <b>215</b> may be configured to communicate data <b>240</b> to and from the memory devices <b>230</b>. For example, the memory system controller <b>215</b> may transmit data <b>240</b> to the memory devices <b>230</b> during a program command and receive data <b>240</b> from the memory devices <b>230</b> during a read command. The memory system controller <b>215</b> may also be configured to receive a status <b>245</b> from each memory device <b>230</b>&#x2014;e.g., the status <b>245</b> may indicate the status of a given operation being performed at a given memory device <b>230</b> and whether the given memory device <b>230</b> is ready to be serviced.</p><p id="p-0040" num="0039">Data bus <b>205</b> may be configured to communicate signals, commands <b>235</b>, data <b>240</b>, and statuses <b>245</b> between the memory system controller <b>215</b> and the memory devices <b>230</b>&#x2014;e.g., the data bus <b>205</b> may be a multiplexed (e.g., tri-state, bi-directional) bus configured to communicate both addresses and data <b>240</b>. In some examples, the data bus <b>205</b> may be configured to have a quantity of bits equal to a quantity of data input/output (DQ) pins of the memory system controller <b>215</b>. For example, the data bus <b>205</b> may be an eight (8) bit data bus <b>205</b> when the memory system controller <b>215</b> has eight (8) DQ pins. In some examples, the data bus <b>205</b> may also include a quantity of lines equal to the quantity of bits&#x2014;e.g., each line of the data bus <b>205</b> may be configured to communicate a bit of information. In some examples, the data bus <b>205</b> may also communicate a status <b>245</b> of each memory device <b>230</b> performing an operation concurrently. That is, the data bus <b>205</b> may be configured to multiplex the statuses <b>245</b> from the memory devices <b>230</b> to the memory system controller <b>215</b>&#x2014;e.g., a first status <b>245</b> from memory device <b>230</b>-<i>a </i>may be communicated on a first line of the data bus <b>205</b> to the memory system controller <b>215</b> and a second status <b>245</b> from memory device <b>230</b>-<i>h </i>may be concurrently communicated on a second line of the data bus <b>205</b> to the memory system controller <b>215</b>.</p><p id="p-0041" num="0040">Memory devices <b>230</b> may be configured to store data. In some examples, the memory devices <b>230</b> may be configured to receive commands <b>235</b> from the memory system controller <b>215</b>. The memory devices <b>230</b> may be configured to concurrently perform operations in response to commands received from the memory system controller <b>215</b>. Each memory device <b>230</b> may be configured to communicate data <b>240</b> to and from the memory system controller <b>215</b>. In some examples, the memory devices <b>230</b> may also be configured to communicate a status <b>245</b> of an operation to the memory system controller <b>215</b>. The status <b>245</b> may be a single bit indicating whether the memory device <b>230</b> is ready to be serviced&#x2014; e.g., a status <b>245</b> of a given operation being performed at memory device <b>230</b>. The memory devices <b>230</b> may be configured to access the data bus <b>205</b> based on the chip enable signal received from the memory system controller <b>215</b>. For example, the memory device <b>230</b> may refrain from driving a status <b>245</b> or refrain from receiving a command <b>235</b> from the data bus <b>205</b> when the chip enable signal is in an inactivated (e.g., high) state. Alternatively, the memory device <b>230</b> may drive a status <b>245</b> or receive a command <b>235</b> from the data bus when the chip enable signal is in an activated (e.g., low) state&#x2014;e.g., the memory system controller <b>215</b> may decouple the memory device <b>230</b> from the data bus <b>205</b> by driving the chip enable signal high. In some examples, each memory device <b>230</b> may include multiple independent sections (e.g., banks, partitions, planes). That is, each memory device <b>230</b> may be configured to perform two or more concurrent operations based on a first section being independent from a second section&#x2014;e.g., a first plane may operate independently of a second plane in the memory device <b>230</b>.</p><p id="p-0042" num="0041">In some examples, the memory system controller <b>215</b> may receive a command from the host system. The memory system controller <b>215</b> may then activate a memory device <b>230</b> based on the command received from the host system&#x2014;e.g., the memory system controller <b>215</b> may activate memory device <b>230</b>-<i>a</i>, memory device <b>230</b>-<i>b</i>, or memory device <b>230</b>-<i>h </i>(e.g., via chip enable lines <b>210</b>-<i>a</i>, <b>210</b>-<i>b</i>, and <b>210</b>-<i>c </i>respectively) based on the command received. After activating a memory device <b>230</b>, the memory system controller <b>215</b> may transmit a command <b>235</b> to initiate an operation (e.g., a read, program, or erase operation) at the memory device <b>230</b>. For example, the memory system controller may transmit a first command <b>235</b> to initiate an erase operation at memory device <b>230</b>-<i>a</i>, a second command <b>235</b> to initiate a program operation at memory device <b>230</b>-<i>b</i>, and a third command <b>235</b> to initiate a read operation at memory device <b>230</b>-<i>h</i>. The memory system controller <b>215</b> may transmit the commands <b>235</b> sequentially (e.g., to memory device <b>230</b>-<i>a </i>first and memory device <b>230</b>-<i>h </i>last) while the operations may be performed concurrently at least in part. After each operation is initiated, the memory system controller <b>215</b> may perform a poll to determine a status of each operation and determine if the memory devices <b>230</b> are ready to be serviced.</p><p id="p-0043" num="0042">In some examples, the memory system controller <b>215</b> may perform a round robin polling of a status register of each active memory device <b>230</b>&#x2014;e.g., each memory device <b>230</b> performing an operation. For example, the memory system controller <b>215</b> may deactivate the chip enable lines <b>210</b>-<i>b </i>and <b>210</b>-<i>c </i>to disconnect the data bus <b>205</b> from memory device <b>230</b>-<i>b </i>and memory device <b>230</b>-<i>c </i>while maintaining the chip enable line <b>210</b>-<i>a </i>in an activated state. The memory system controller <b>215</b> may then transmit a command <b>235</b> to memory device <b>230</b>-<i>a </i>to request a status <b>245</b> of the operation being performed at the memory device <b>230</b>-<i>a</i>. The memory device <b>230</b>-<i>a </i>may then transmit a status <b>245</b> utilizing the eight bits of data bus <b>205</b> to the memory system controller <b>215</b>. The memory system controller <b>215</b> may then repeat the process to determine the status of the operations at memory devices <b>230</b>-<i>b </i>and <b>230</b>-<i>h</i>. In some examples, the memory device <b>230</b>-<i>h </i>may complete its respective operation first. For example, the memory device <b>230</b>-<i>h </i>may complete the read operation before the memory device <b>230</b>-<i>a </i>completes the erase operation. That is, some operations may take a longer duration to perform than others&#x2014;e.g., read operations may be performed in a first duration, program operations may be performed in a second duration, and erase operations may be performed in third duration, where the first duration is less than the second and third duration, and the second duration is less than the third duration. In such examples, the memory device <b>230</b>-<i>h </i>may sit idly waiting for the memory system controller <b>215</b> to request the status <b>245</b> of the operation. This may increase the latency and power consumption of the system.</p><p id="p-0044" num="0043">As described herein, the memory system controller <b>215</b> may perform a concurrent polling of the status register of each active memory device <b>230</b>. For example, after initiating each operation at each memory device <b>230</b>, the memory system controller <b>215</b> may concurrently transmit a command <b>235</b> to each of memory devices <b>230</b>-<i>a</i>, <b>230</b>-<i>b</i>, and <b>230</b>-<i>h </i>(e.g., by activating each of chip enable lines <b>210</b>-<i>a</i>, <b>210</b>-<i>b</i>, and <b>210</b>-<i>h </i>while transmitting the command) requesting the status of each operation. The memory devices <b>230</b> may then concurrently drive a status <b>245</b> on the data bus <b>205</b>. In such examples, the memory devices <b>230</b> may drive a first value to indicate the memory device <b>230</b> is busy and a second value to indicate the memory device <b>230</b> is ready to be serviced. Accordingly, the memory system controller <b>215</b> may determine which memory device <b>230</b> is ready to be serviced first and transmit subsequent commands <b>235</b> based on the determination. For example, the memory device <b>230</b>-<i>h </i>may drive the second value on the data bus <b>205</b> to indicate the memory device <b>230</b>-<i>h </i>is ready for service. The memory system controller <b>215</b> may then request the data <b>240</b> indicated by the read command from the memory device <b>230</b>-<i>h </i>while the memory device <b>230</b>-<i>a </i>and memory device <b>230</b>-<i>b </i>may continue to execute their respective operations. By performing concurrent poling, the memory system controller <b>215</b> may reduce latency and decrease extraneous power consumption.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a timing diagram <b>300</b> that supports reduced pin status register in accordance with examples as disclosed herein. The timing diagram <b>300</b> may be performed by processing logic that may include hardware (e.g., processing system, circuitry, dedicated logic, programmable logic, microcode, hardware of a device, integrated circuit, etc.), software (e.g., instructions run or executed on a processing device), or a combination thereof. In some examples, the timing diagram <b>300</b> may be performed by a system (e.g., system <b>200</b>) as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. For example, the timing diagram may be performed by a memory system controller (e.g., memory system controller <b>215</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>) and memory devices (e.g., memory devices <b>230</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>). In some examples, the memory system controller may execute a set of codes to control the functional elements of the memory system to perform the functions described below. Although shown in a particular sequence or order, unless otherwise specified, the order of the processes may be modified. Thus, the illustrated examples are used as examples, and the illustrated processes may be performed in a different order, and some processes may be performed in parallel. <figref idref="DRAWINGS">FIG. <b>3</b></figref> may illustrate the system <b>100</b> communicating signals and commands (e.g., command <b>235</b>, data <b>240</b>, and status <b>245</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>) between a memory system controller and a memory device while conducting a concurrent polling operation.</p><p id="p-0046" num="0045">In some examples, cycle type <b>305</b> may indicate the current cycle of the memory system controller or memory device&#x2014;e.g., the type of signal communicated between the memory system controller and one or more memory devices via a data bus (e.g., data bus <b>205</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>). DQ pins <b>310</b> may be examples of data lines on the data bus and a quantity of DQ pins on the memory system controller. In examples where the data bus is an eight (8) bit data bus, the data bus may include eight (8) data lines&#x2014;e.g., data lines <b>0</b>-<b>7</b>. In some examples, a memory device may permanently output a status on a given data bus line&#x2014;e.g., during manufacturing, a trim setting (e.g., fuse, one-time-programmable (OTP) memory) may be written to the memory device to cause the memory device to use a given data line for every status output. In examples where the memory device includes independent sections, the memory device may have two or more dedicated data lines&#x2014;e.g., memory device <b>230</b>-<i>a </i>may be configured to output a first status associated with a first independent section on data line <b>0</b> (e.g., DQ0) and a second status associated with a second independent section on data line <b>1</b> (e.g., DQ1). In other examples, the memory system controller may dynamically select which data line a given memory device is to utilize while outputting the status. In some examples, the memory system controller may select a data line based on a workload and quantity of devices. For example, the memory system may include more than eight (8) devices and the memory system controller may select data lines <b>0</b>-<b>7</b> for the eight (8) devices activated during a given duration. Alternatively, the memory system may include four (4) devices each with two (2) independent sections (e.g., banks, partitions, planes) and the memory system may select which data line each independent section status is to be outputted on. In yet other examples, the memory system may select some combination of devices with one (1) or two (2) sections each, or may combine status for multiple sections (e.g., one status bit that is driven to a ready state when all of multiple sections have completed a command). The memory system controller may select the data line for a given memory device by writing a value to a register on the memory device. In such examples, the memory device may read the value to determine which data line(s) the memory system controller assigned the memory device to.</p><p id="p-0047" num="0046">In some cases, CE <b>315</b> may indicate a chip enable signal transmitted to a given memory device by a memory system controller via a chip enable line (e.g., chip enable line <b>210</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>). For example, CE <b>0</b> may indicate a chip enable signal driven to a first memory device and CE <b>1</b> may indicate a chip enable signal driven to a second memory device. As described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the CE signals may be active-low polarity. That is, a chip enable signal on chip enable line <b>210</b> driven low may enable the memory device (e.g., coupling the data bus for commands, data input or output, or status output) and a chip enable signal driven high may disable the memory device (e.g., the memory device may decouple inputs and drivers from the data bus). Alternatively, the CE signals may operate in a similar way using active-high polarity.</p><p id="p-0048" num="0047">At <b>320</b>, a first command may be transmitted. For example, a memory system controller may transmit a command &#x201c;77h&#x201d; to a first memory device and a second memory device via a data bus. The memory system controller may transmit the command &#x201c;77h&#x201d; to request a concurrent status output from a first memory device and a second memory device. For example, the memory system controller may request the status of an operation being performed at the first memory device and the second memory device&#x2014;e.g., the memory system controller may request the memory device indicate whether the memory device is ready to be serviced. The memory system controller may have initiated an operation at the first memory device and the second memory device before transmitting the command &#x201c;77h.&#x201d; In the example as described herein, each memory device may include two independent sections and each may perform two independent concurrent operations.</p><p id="p-0049" num="0048">At <b>325</b>, a status of the devices under test (Dut) may be received. For example, a memory system controller may receive a status from each memory device. In some examples, memory system controller may select data lines <b>0</b> and <b>1</b> for a first memory device to output a first status and a second status and select data lines <b>4</b> and <b>5</b> for a second memory device to output a third status and a fourth status&#x2014;e.g., a status associated with each independent section and operation. In other examples, the first memory device and second memory device may have been programmed during manufacturing to output on data lines <b>0</b> and <b>1</b> and data lines <b>4</b> and <b>5</b> respectively. The first memory device may transmit &#x201c;00b,&#x201d; which may indicate that both the first section and the second section (e.g., first independent bank, partition, plane, or word line and second independent bank, partition, plane, or word line) of the first memory device are busy. The second memory device may also concurrently transmit &#x201c;00b&#x201d; indicating that the first section and the second section of the second memory device is busy. Each memory device may continue to drive the signal &#x201c;00b&#x201d; until a section or device has completed an operation and is ready to be serviced. For example, the first memory device may drive the signal &#x201c;00b&#x201d; on data line <b>0</b> and <b>1</b> until the second section in the first memory device has completed the operation and is ready for service. In such examples, the first memory device may then begin to drive a signal &#x201c;01b&#x201d; at time <b>260</b> indicating the second section is ready to be serviced.</p><p id="p-0050" num="0049">At <b>330</b>, a second command may be transmitted. For example, the memory system controller may transmit the second command to the first memory device based on the first memory device indicating the second section is ready to be serviced. Concurrently with transmitting the second command, the memory system controller may also drive the chip enable signal for the second memory device high&#x2014;e.g., CE <b>1</b> may transition to a high state via a chip enable line. By driving the chip enable signal high for the second memory device, the memory system controller may decouple the second memory device from the data bus&#x2014;e.g., the second memory device may suppress driving status information and continue to execute an operation while the memory system controller transmits a command to the first memory device. In some examples, the memory system may transmit the second command to request data from the first memory device associated with the completed operation. The second command transmitted may indicate a type of command (e.g., read command indicated by &#x201c;06h&#x201d;), a column and row address (e.g., C &#x26; R Add), and additional information pertinent to the second command (e.g., &#x201c;E0h&#x201d;). For example, the memory system controller may indicate the read command is a single plane read, a multi-plane read, a single page read, a multi-page read, or a cache read after transmitting the second command (e.g., by transmitting &#x201c;E0h&#x201d;).</p><p id="p-0051" num="0050">At <b>335</b>, data may be received. For example, the memory system controller may receive data from the first memory device in response to transmitting the second command. In examples where the operation performed by the first memory device was a program operation, at step <b>335</b> the memory system controller may transmit data to the first memory device. In other examples, when the first memory device performs an erase operation, at step <b>335</b> the first memory device may transmit a response indicating the operation was completed to the memory system controller.</p><p id="p-0052" num="0051">At <b>340</b>, a third command may be transmitted. For example, the memory system controller may transmit the third command to the first memory device based on receiving the data from the memory device (or after step <b>335</b>). In some examples, the memory system controller may transmit the third command to initiate a second operation at the first memory device. The third command may indicate a type of command (e.g., program command indicated by &#x201c;ooh&#x201d;), a column and row address (e.g., C &#x26; R Add), and additional information pertinent to the second command (e.g., &#x201c;20h&#x201d;). In some examples, the memory system controller may refrain from transmitting the third command to the second memory device. That is, because the second memory device drove the signal &#x201c;00b&#x201d; at the time <b>325</b>, the memory system controller may determine the second memory device is not ready for service and drive the CE <b>1</b> signal high to ensure the second memory device is decoupled from the data bus and does not receive the third command.</p><p id="p-0053" num="0052">At <b>350</b>, a fourth command may be transmitted. For example, the memory system controller may transmit the fourth command to the first memory device based on initiating the second operation at the first memory device. The memory system controller may transmit the fourth command &#x201c;77h&#x201d; to resume the concurrent polling operation.</p><p id="p-0054" num="0053">At <b>355</b>, a status may be received. For example, a memory system controller may concurrently receive a status from each memory device. After sending the fourth command, the memory system controller may also transition the CE <b>1</b> signal from the high state back to the low state. That is, the memory system controller may couple the second memory device back to the data bus. As the second memory device was isolated from the data bus since time <b>325</b>, the second memory device may drive a status (e.g., an indication of whether the second memory device is ready for service) based on the first command transmitted&#x2014;e.g., based on the first &#x201c;77h&#x201d; command transmitted by the memory system controller. In some examples, while the memory system controller was servicing the first memory device (e.g., transmitting the second command, receiving the data, and transmitting the third and fourth command) the second memory device may have completed the initial operation. Accordingly, the second memory device may drive a signal &#x201c;10b&#x201d; to indicate the first section of the second memory device is ready for service. The memory system controller may then proceed to service the second memory device (e.g., repeat the steps <b>330</b>-<b>350</b> for the second memory device). By performing concurrent polling operations, the memory system controller may quickly identify which memory devices (or portions of the memory devices) are available to service, reducing times the memory devices are idly waiting to be serviced. This may reduce latency and the power consumption of the system.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of a circuit <b>400</b> that supports reduced pin status register in accordance with examples as disclosed herein. The circuit <b>400</b> may be included in a memory device (e.g., memory device <b>230</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>) and output a status (e.g., status <b>245</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>) that indicates whether the memory device is ready for service. The circuit <b>400</b> may include a status register <b>405</b>, an inversion register <b>410</b>, and a mask register <b>420</b>. The circuit <b>400</b> may further include an XOR gate <b>415</b>, an AND gate <b>425</b>, an OR gate <b>430</b>, an OR gate <b>435</b>, and a buffer <b>440</b>. The circuit <b>400</b> may output a DQi <b>445</b>.</p><p id="p-0056" num="0055">In some examples, as described with reference to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>, a memory device may output a status (e.g., DQi <b>445</b>) concurrently with other memory devices on a data bus. In some examples, the memory device may output the status utilizing the circuit <b>400</b>. That is, the memory device may utilize the circuit <b>400</b> to compress or mask multiple bits of the status register <b>405</b> into a single bit DQi <b>445</b> to communicate to a memory system controller (e.g., memory system controller <b>215</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0057" num="0056">Status register <b>405</b> may be configured to store bits associated with information a status of the memory device. For example, the status register <b>405</b> may store bits that indicate if the memory device is ready for outputting data, ready for a new operation, is ready to be serviced, the cache is ready for service, the array is ready for service, if an error occurred during the operation, etc. In some examples, the status register <b>405</b> may include eight (8) bits.</p><p id="p-0058" num="0057">Inversion register <b>410</b> may be configured to invert the state of the bits stored in the status register <b>405</b>. In some examples, the inversion register <b>410</b> may be programmed by the memory controller to select if a bit in the status register <b>405</b> should be inverted. The inversion register may have a single bit value programmed that is replicated for each bit of the status register <b>405</b>, or may have one bit for each bit of the status register <b>405</b> (e.g., the inversion state of each bit of the status register <b>405</b> may be independently controllable), in some cases.</p><p id="p-0059" num="0058">The mask register <b>420</b> may store a set of bits configured to provide a bit mask for the bits stored in the status register <b>405</b>. That is, the status register <b>405</b> may store eight (8) bits and the mask register <b>420</b> may be configured to extract the bits indicating whether the memory device is ready for service from the bits outputted by the status register <b>405</b> via the AND gate <b>425</b>.</p><p id="p-0060" num="0059">The XOR gate <b>415</b>, AND gate <b>425</b>, OR gate <b>435</b> may be configured to mask or compress the eight (8) bits into a single bit. It should be noted, the configuration of the XOR gate <b>415</b>, AND gate <b>425</b>, and OR gate <b>435</b> is one example of generating a bit from the eight (8) bits outputted from the status register <b>405</b> and other configuration may be utilized to generate the bit.</p><p id="p-0061" num="0060">The OR gate <b>430</b> may be configured to output a bit to enable or disable buffer <b>440</b>. That is, in response to a concurrent polling command (e.g., &#x201c;77h&#x201d;) as described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>), the OR gate <b>430</b> may output a bit that activates the buffer <b>440</b> to enable the bit DQi <b>445</b> to be driven to a data bus (e.g., data bus <b>205</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>) based on the bits outputted from the mask register <b>420</b>. That is, the output of the mask register <b>420</b> may also be configured to provide an input to the OR gate <b>430</b> to enable or disable the buffer <b>440</b>.</p><p id="p-0062" num="0061">The buffer <b>440</b> may be configured to output or prevent the output of the bit DQi <b>445</b>. For example, the buffer <b>440</b> may output the bit DQi <b>445</b> and enable the memory device to drive a data line on the data bus with a status of an operation being performed by the memory device in response to a concurrent polling command. In other examples, the buffer <b>440</b> may be disabled and prevent the output bit DQi <b>445</b> from being driven onto the data line of the data bus&#x2014;e.g., when the memory device may receive a low chip enable signal from the memory system controller. In some cases, the memory device may be configured to generate multiple output bits DQi <b>445</b>&#x2014;e.g., one for each independent word line or plane. In such examples, the memory device may be configured to generate the output DQi <b>445</b> from each independent word line on a different data line&#x2014;e.g., the memory device may output two (2) DQi <b>445</b> bits, one on a first data line and one on a second data line.</p><p id="p-0063" num="0062">It should be noted each memory device may include one or more circuits <b>400</b>. This may enable each memory device to generate a DQi <b>445</b> bit at each DQ pin (e.g. data line of the data bus) or generate multiple DQI <b>445</b> bits for each independent section (e.g., for each independent word line or plane). Additionally or alternatively, circuit <b>400</b> is one example of generating a status bit. In other examples, the memory device may use a different circuit or configuration to generate the status bit. For example, the memory device may include less registers and route the result from the status register <b>405</b> with a multiplexer and a mask. In such examples, the masked bit from the multiplexer may be routed via an unselected high impedance (HI-Z) state DQ pin. Additionally or alternatively, circuit <b>400</b> may have additional registers. For example, circuit <b>400</b> may have a register that multiplexes output of OR gates <b>430</b> and <b>435</b> to different output bits (e.g., DQi <b>445</b> drivers). Thus, a memory system controller may use the register to set different memory devices to drive different output bits of the data bus (e.g., to dynamically determine the data lines of the data bus assigned to each of multiple memory devices for the concurrent status polling command).</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram <b>500</b> of a memory system <b>520</b> that supports reduced pin status register in accordance with examples as disclosed herein. The memory system <b>520</b> may be an example of aspects of a memory system as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b></figref>. The memory system <b>520</b>, or various components thereof, may be an example of means for performing various aspects of reduced pin status register as described herein. For example, the memory system <b>520</b> may include a transmitting component <b>530</b>, a status component <b>535</b>, a data component <b>540</b>, a selection component <b>545</b>, a selection component <b>550</b>, or any combination thereof. Each of these components may communicate, directly or indirectly, with one another (e.g., via one or more buses).</p><p id="p-0065" num="0064">The transmitting component <b>530</b> may be configured as or otherwise support a means for transmitting a first command associated with a first operation to a first memory die. In some cases, the transmitting component <b>530</b> may be configured as or otherwise support a means for transmitting a second command associated with a second operation to a second memory die. In some instances, the transmitting component <b>530</b> may be configured as or otherwise support a means for transmitting a third command concurrently to the first memory die and the second memory die based at least in part on transmitting the first command and the second command, the third command requesting a first status of the first operation from the first memory die and a second status of the second operation from the second memory die.</p><p id="p-0066" num="0065">In some examples, the transmitting component <b>530</b> may be configured as or otherwise support a means for transmitting a fifth command associated with a third operation to the second memory die based at least in part on receiving the data from the second memory die. In some cases, the transmitting component <b>530</b> may be configured as or otherwise support a means for transmitting a sixth command concurrently to the first memory die and the second memory die based at least in part on transmitting the fifth command, the sixth command requesting the first status of the first operation and a third status of the third operation.</p><p id="p-0067" num="0066">In some instances, the transmitting component <b>530</b> may be configured as or otherwise support a means for transmitting a fourth command concurrently with the first command to the first memory die, where the first command is associated with a first portion of the first memory die and the fourth command is associated with a third operation on a second portion of the first memory die. In some examples, the status component <b>535</b> may be configured as or otherwise support a means for receiving, concurrently via the data bus, a third status of the third operation and the first status of the first operation based at least in part on transmitting the fourth command, and where the third command requests the third status of the third operation. In some cases, the transmitting component <b>530</b> may be configured as or otherwise support a means for transmitting a fourth command to the second memory die to select the second memory die to output data associated with the second operation onto the data bus.</p><p id="p-0068" num="0067">The status component <b>535</b> may be configured as or otherwise support a means for receiving, concurrently via the data bus at a controller, the first status of the first operation from the first memory die and the second status of the second operation from the second memory die. In some examples, the status component <b>535</b> may be configured as or otherwise support a means for determining that the second memory die is awaiting service for the second operation based at least in part on receiving the second status concurrently with the first status.</p><p id="p-0069" num="0068">In some cases, the status component <b>535</b> may be configured as or otherwise support a means for determining that the first memory die and the second memory die are executing the first operation and the second operation, respectively, based at least in part on receiving the first status concurrently with the second status. In some instances, the status component <b>535</b> may be configured as or otherwise support a means for refraining from transmitting a fourth command associated with a third operation to the first memory die or the second memory die based at least in part on determining the first memory die and the second memory die are executing the first operation and the second operation, respectively.</p><p id="p-0070" num="0069">In some examples, the status component <b>535</b> may be configured as or otherwise support a means for receiving the first status on a first subset of lines of the data bus, where the first subset of lines is associated with the first memory die for output of status information for the apparatus. In some instances, the status component <b>535</b> may be configured as or otherwise support a means for receiving the second status on a second subset of lines of the data bus, where the second subset of lines is associated with the second memory die for output of status information for the apparatus.</p><p id="p-0071" num="0070">In some cases, the status component <b>535</b> may be configured as or otherwise support a means for receiving the first status on a first line of a subset of lines associated with the first memory die and receive the third status on a second line of the subset of lines associated with the first memory die.</p><p id="p-0072" num="0071">In some examples, the data component <b>540</b> may be configured as or otherwise support a means for receiving the data from the second memory die based at least in part on transmitting the fourth command.</p><p id="p-0073" num="0072">In some instances, the selection component <b>545</b> may be configured as or otherwise support a means for selecting a first subset of lines on the data bus to receive the first status from the first memory die, where selecting the first subset of lines is based at least in part on selecting the first memory die for the first operation and the second memory die for the second operation. In some examples, the selection component <b>550</b> may be configured as or otherwise support a means for selecting a second subset of lines on the data bus to receive the second status from the second memory die, where selecting the second subset of lines is based on the selecting the first memory die for the first operation and the second memory die for the second operation.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a block diagram <b>600</b> of a memory device <b>620</b> that supports reduced pin status register in accordance with examples as disclosed herein. The memory device <b>620</b> may be an example of aspects of a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b></figref>. The memory device <b>620</b>, or various components thereof, may be an example of means for performing various aspects of reduced pin status register as described herein. For example, the memory device <b>620</b> may include a receiving component <b>630</b>, a generator component <b>635</b>, a data bus component <b>640</b>, a logic component <b>645</b>, a multiplexing component <b>650</b>, or any combination thereof. Each of these components may communicate, directly or indirectly, with one another (e.g., via one or more buses).</p><p id="p-0075" num="0074">The receiving component <b>630</b> may be configured as or otherwise support a means for receiving a first command associated with an operation on data stored at a memory including a plurality of memory cells. In some examples, the receiving component <b>630</b> may be configured as or otherwise support a means for receiving a second command requesting a status of the operation based at least in part on receiving the first command, where the second command is associated with a concurrent output of status operations on a data bus coupled with a plurality of devices, a device of the plurality of devices including the memory array and a controller coupled with the memory array.</p><p id="p-0076" num="0075">In some examples, the bit outputted is associated with a request for service associated with the operation, and the receiving component <b>630</b> may be configured as or otherwise support a means for receiving a third command requesting the data associated with the operation.</p><p id="p-0077" num="0076">In some instances, the receiving component <b>630</b> may be configured as or otherwise support a means for receiving a fourth command associated with a second operation based at least in part on outputting the data. In some cases, the receiving component <b>630</b> may be configured as or otherwise support a means for receiving a fifth command requesting a second status of the second operation based at least in part on receiving the fourth command, where the fifth command is associated with the concurrent output of status operations.</p><p id="p-0078" num="0077">In some examples, the receiving component <b>630</b> may be configured as or otherwise support a means for receiving, at a multiplexer, a first set of bits associated with the status of the operation and information associated with the memory array.</p><p id="p-0079" num="0078">In some cases, the receiving component <b>630</b> may be configured as or otherwise support a means for receiving an instruction, before receiving the first command, to utilize the first subset of lines of the data bus for outputting the status of the operation, where outputting the bit indicating the status of the operation onto the first subset of lines is based on the instruction received.</p><p id="p-0080" num="0079">In some instances, the receiving component <b>630</b> may be configured as or otherwise support a means for receiving a third command, the first command associated with the operation on a first subset of memory cells of the plurality of memory cells coupled with a first word line, and the third command associated with a second operation on a second subset of memory cells of the plurality of memory cells coupled with a second word line.</p><p id="p-0081" num="0080">The generator component <b>635</b> may be configured as or otherwise support a means for generating a bit indicating the status of the operation based at least in part on receiving the second command. In some examples, the generator component <b>635</b> may be configured as or otherwise support a means for generating a second bit indicating the second status of the second operation based at least in part on receiving the fifth command.</p><p id="p-0082" num="0081">In some cases, the generator component <b>635</b> may be configured as or otherwise support a means for generating a second bit indicating a second status of the operation after the duration associated with the busy state of the operation.</p><p id="p-0083" num="0082">In some instances, the data bus component <b>640</b> may be configured as or otherwise support a means for outputting the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</p><p id="p-0084" num="0083">In some cases, the data bus component <b>640</b> may associate the first subset of lines of the data bus with outputting the status of the operation at the memory array based at least in part on a one-time-programmable element.</p><p id="p-0085" num="0084">The data bus component <b>640</b> may be configured as or otherwise support a means for outputting the bit onto a first subset of lines of the data bus based at least in part on generating the bit, where a second subset of lines of the data bus are associated with the concurrent output of status operations by a remaining plurality of devices. In some examples, the bit outputted is associated with a request for service associated with the operation, and the data bus component <b>640</b> may be configured as or otherwise support a means for outputting the data onto the first subset of lines of the data bus based at least in part on receiving the third command. In some instances, the data bus component <b>640</b> may be configured as or otherwise support a means for outputting the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</p><p id="p-0086" num="0085">In some cases, the data bus component <b>640</b> may be configured as or otherwise support a means for outputting the bit onto the first subset of lines for a duration associated with the busy state of the operation based at least in part on generating the bit.</p><p id="p-0087" num="0086">In some instances, the data bus component <b>640</b> may be configured as or otherwise support a means for outputting the bit and a second bit indicating the status of the second operation concurrently on the first subset of lines of the data bus based at least in part on receiving the third command, where the second command requests a second status of the second operation.</p><p id="p-0088" num="0087">In some cases, the data bus component <b>640</b> may associate the bit with a request for service for the operation and the second bit is associated with a busy state of the second operation.</p><p id="p-0089" num="0088">In some instances, the data bus component <b>640</b> may be configured as or otherwise support a means for outputting a first set of bits from a first register associated with the status of the operation and information associated with the memory array. In some examples, the data bus component <b>640</b> may be configured as or otherwise support a means for outputting a second set of bits from a second register associated with an inversion state for the first set of bits.</p><p id="p-0090" num="0089">In some examples, the logic component <b>645</b> may be configured as or otherwise support a means for generating, at a logic circuit, the bit based at least in part on the first set of bits and the second set of bits.</p><p id="p-0091" num="0090">In some cases, the multiplexing component <b>650</b> may be configured as or otherwise support a means for multiplexing the first set of bits into the bit based at least in part on receiving the first set of bits, where generating the first set of bits is based at least in part on the multiplexing of the first set of bits, and where the bit is masked before outputting the bit onto the first subset of lines of the data bus.</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a flowchart illustrating a method <b>700</b> that supports reduced pin status register in accordance with examples as disclosed herein. The operations of method <b>700</b> may be implemented by a memory system or its components as described herein. For example, the operations of method <b>700</b> may be performed by a memory system as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>5</b></figref>. In some examples, a memory system may execute a set of instructions to control the functional elements of the device to perform the described functions. Additionally or alternatively, the memory system may perform aspects of the described functions using special-purpose hardware.</p><p id="p-0093" num="0092">At <b>705</b>, the method may include transmitting a first command associated with a first operation to a first memory die. The operations of <b>705</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>705</b> may be performed by a transmitting component <b>530</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0094" num="0093">At <b>710</b>, the method may include transmitting a second command associated with a second operation to a second memory die. The operations of <b>710</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>710</b> may be performed by a transmitting component <b>530</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0095" num="0094">At <b>715</b>, the method may include transmitting a third command concurrently to the first memory die and the second memory die based at least in part on transmitting the first command and the second command, the third command requesting a first status of the first operation from the first memory die and a second status of the second operation from the second memory die. The operations of <b>715</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>715</b> may be performed by a transmitting component <b>530</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0096" num="0095">At <b>720</b>, the method may include receiving, concurrently via the data bus at a controller, the first status of the first operation from the first memory die and the second status of the second operation from the second memory die. The operations of <b>720</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>720</b> may be performed by a status component <b>535</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0097" num="0096">In some examples, an apparatus as described herein may perform a method or methods, such as the method <b>700</b>. The apparatus may include, features, circuitry, logic, means, or instructions (e.g., a non-transitory computer-readable medium storing instructions executable by a processor) for transmitting a first command associated with a first operation to a first memory die, transmitting a second command associated with a second operation to a second memory die, transmitting a third command concurrently to the first memory die and the second memory die based at least in part on transmitting the first command and the second command, the third command requesting a first status of the first operation from the first memory die and a second status of the second operation from the second memory die, and receiving, concurrently via the data bus at a controller, the first status of the first operation from the first memory die and the second status of the second operation from the second memory die.</p><p id="p-0098" num="0097">Some cases of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for determining that the second memory die may be awaiting service for the second operation based at least in part on receiving the second status concurrently with the first status, transmitting a fourth command to the second memory die to select the second memory die to output data associated with the second operation onto the data bus, and receiving the data from the second memory die based at least in part on transmitting the fourth command.</p><p id="p-0099" num="0098">Some instances of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for transmitting a fifth command associated with a third operation to the second memory die based at least in part on receiving the data from the second memory die.</p><p id="p-0100" num="0099">Some examples of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for transmitting a sixth command concurrently to the first memory die and the second memory die based at least in part on transmitting the fifth command, the sixth command requesting the first status of the first operation and a third status of the third operation.</p><p id="p-0101" num="0100">Some cases of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for determining that the first memory die and the second memory die may be executing the first operation and the second operation, respectively, based at least in part on receiving the first status concurrently with the second status and refraining from transmitting a fourth command associated with a third operation to the first memory die or the second memory die based at least in part on determining the first memory die and the second memory die may be executing the first operation and the second operation, respectively.</p><p id="p-0102" num="0101">Some instances of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for receiving the first status on a first subset of lines of the data bus, where the first subset of lines may be associated with the first memory die for output of status information for the apparatus and receiving the second status on a second subset of lines of the data bus, where the second subset of lines may be associated with the second memory die for output of status information for the apparatus.</p><p id="p-0103" num="0102">Some examples of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for selecting a first subset of lines on the data bus to receive the first status from the first memory die, where selecting the first subset of lines may be based at least in part on selecting the first memory die for the first operation and the second memory die for the second operation and selecting a second subset of lines on the data bus to receive the second status from the second memory die, where selecting the second subset of lines may be based on the selecting the first memory die for the first operation and the second memory die for the second operation.</p><p id="p-0104" num="0103">Some cases of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for transmitting a fourth command concurrently with the first command to the first memory die, where the first command may be associated with a first portion of the first memory die and the fourth command may be associated with a third operation on a second portion of the first memory die and receiving, concurrently via the data bus, a third status of the third operation and the first status of the first operation based at least in part on transmitting the fourth command, and where the third command requests the third status of the third operation.</p><p id="p-0105" num="0104">Some instances of the method <b>700</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for receiving the first status on a first line of a subset of lines associated with the first memory die and receive the third status on a second line of the subset of lines associated with the first memory die.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a flowchart illustrating a method <b>800</b> that supports reduced pin status register in accordance with examples as disclosed herein. The operations of method <b>800</b> may be implemented by a memory device or its components as described herein. For example, the operations of method <b>800</b> may be performed by a memory device as described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> through <b>4</b> and <b>6</b></figref>. In some examples, a memory device may execute a set of instructions to control the functional elements of the device to perform the described functions. Additionally or alternatively, the memory device may perform aspects of the described functions using special-purpose hardware.</p><p id="p-0107" num="0106">At <b>805</b>, the method may include receiving a first command associated with an operation on data stored at a memory including a plurality of memory cells. The operations of <b>805</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>805</b> may be performed by a receiving component <b>630</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0108" num="0107">At <b>810</b>, the method may include receiving a second command requesting a status of the operation based at least in part on receiving the first command, where the second command is associated with a concurrent output of status operations on a data bus coupled with a plurality of devices, a device of the plurality of devices including the memory array and a controller coupled with the memory array. The operations of <b>810</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>810</b> may be performed by a receiving component <b>630</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0109" num="0108">At <b>815</b>, the method may include generating a bit indicating the status of the operation based at least in part on receiving the second command. The operations of <b>815</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>815</b> may be performed by a generator component <b>635</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0110" num="0109">At <b>820</b>, the method may include outputting the bit onto a first subset of lines of the data bus based at least in part on generating the bit, where a second subset of lines of the data bus are associated with the concurrent output of status operations by a remaining plurality of devices. The operations of <b>820</b> may be performed in accordance with examples as disclosed herein. In some examples, aspects of the operations of <b>820</b> may be performed by a data bus component <b>640</b> as described with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0111" num="0110">In some examples, an apparatus as described herein may perform a method or methods, such as the method <b>800</b>. The apparatus may include, features, circuitry, logic, means, or instructions (e.g., a non-transitory computer-readable medium storing instructions executable by a processor) for receiving a first command associated with an operation on data stored at a memory including a plurality of memory cells, receiving a second command requesting a status of the operation based at least in part on receiving the first command, where the second command is associated with a concurrent output of status operations on a data bus coupled with a plurality of devices, a device of the plurality of devices including the memory array and a controller coupled with the memory array, generating a bit indicating the status of the operation based at least in part on receiving the second command, and outputting the bit onto a first subset of lines of the data bus based at least in part on generating the bit, where a second subset of lines of the data bus are associated with the concurrent output of status operations by a remaining plurality of devices.</p><p id="p-0112" num="0111">In some instances of the method <b>800</b> and the apparatus described herein, the bit outputted may be associated with a request for service associated with the operation and the method, apparatuses, and non-transitory computer-readable medium may include further operations, features, circuitry, logic, means, or instructions for receiving a third command requesting the data associated with the operation and outputting the data onto the first subset of lines of the data bus based at least in part on receiving the third command.</p><p id="p-0113" num="0112">Some cases of the method <b>800</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for receiving a fourth command associated with a second operation based at least in part on outputting the data, receiving a fifth command requesting a second status of the second operation based at least in part on receiving the fourth command, where the fifth command may be associated with the concurrent output of status operations, generating a second bit indicating the second status of the second operation based at least in part on receiving the fifth command, and outputting the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</p><p id="p-0114" num="0113">In some examples of the method <b>800</b> and the apparatus described herein, and the method, apparatuses, and non-transitory computer-readable medium may include further operations, features, circuitry, logic, means, or instructions for outputting the bit onto the first subset of lines for a duration associated with the busy state of the operation based at least in part on generating the bit, generating a second bit indicating a second status of the operation after the duration associated with the busy state of the operation, and outputting the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</p><p id="p-0115" num="0114">In some cases of the method <b>800</b> and the apparatus described herein, the first subset of lines of the data bus may be associated with outputting the status of the operation at the memory array based at least in part on a one-time-programmable element.</p><p id="p-0116" num="0115">Some instances of the method <b>800</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for receiving an instruction, before receiving the first command, to utilize the first subset of lines of the data bus for outputting the status of the operation, where outputting the bit indicating the status of the operation onto the first subset of lines may be based on the instruction received.</p><p id="p-0117" num="0116">Some examples of the method <b>800</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for receiving a third command, the first command associated with the operation on a first subset of memory cells of the plurality of memory cells coupled with a first word line, and the third command associated with a second operation on a second subset of memory cells of the plurality of memory cells coupled with a second word line and outputting the bit and a second bit indicating the status of the second operation concurrently on the first subset of lines of the data bus based at least in part on receiving the third command, where the second command requests a second status of the second operation.</p><p id="p-0118" num="0117">In some cases of the method <b>800</b> and the apparatus described herein, the bit may be associated with a request for service for the operation and the second bit may be associated with a busy state of the second operation.</p><p id="p-0119" num="0118">Some instances of the method <b>800</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for outputting a first set of bits from a first register associated with the status of the operation and information associated with the memory array, outputting a second set of bits from a second register associated with an inversion state for the first set of bits, and generating, at a logic circuit, the bit based at least in part on the first set of bits and the second set of bits.</p><p id="p-0120" num="0119">Some examples of the method <b>800</b> and the apparatus described herein may further include operations, features, circuitry, logic, means, or instructions for receiving, at a multiplexer, a first set of bits associated with the status of the operation and information associated with the memory array and multiplexing the first set of bits into the bit based at least in part on receiving the first set of bits, where generating the first set of bits may be based at least in part on the multiplexing of the first set of bits, and where the bit may be masked before outputting the bit onto the first subset of lines of the data bus.</p><p id="p-0121" num="0120">It should be noted that the methods described above describe possible implementations, and that the operations and the steps may be rearranged or otherwise modified and that other implementations are possible. Further, portions from two or more of the methods may be combined.</p><p id="p-0122" num="0121">An apparatus is described. The apparatus may include a first memory die coupled with a data bus, a second memory die coupled with the data bus, and a controller coupled with the first memory die and the second memory die via the data bus, the controller configured to transmit a first command associated with a first operation to the first memory die, transmit a second command associated with a second operation to the second memory die, transmit a third command concurrently to the first memory die and the second memory die based at least in part on transmitting the first command and the second command, the third command requesting a first status of the first operation and a second status of the second operation, and receive, concurrently via the data bus, the first status of the first operation from the first memory die and the second status of the second operation from the second memory die</p><p id="p-0123" num="0122">In some examples, the controller may further determine that the second memory die may be awaiting service for the second operation based at least in part on receiving the second status concurrently with the first status, transmit a fourth command to the second memory die to select the second memory die to output data associated with the second operation onto the data bus, and receive the data from the second memory die based at least in part on transmitting the fourth command.</p><p id="p-0124" num="0123">In some instances, the controller may further transmit a fifth command associated with a third operation to the second memory die based at least in part on receiving the data from the second memory die.</p><p id="p-0125" num="0124">In some cases, the controller may further transmit a sixth command concurrently to the first memory die and the second memory die based at least in part on transmitting the fifth command, the sixth command requesting the first status of the first operation and a third status of the third operation.</p><p id="p-0126" num="0125">In some examples, the controller may further determine that the first memory die and the second memory die may be executing the first operation and the second operation, respectively, based at least in part on receiving the first status concurrently with the second status and refrain from transmitting a fourth command associated with a third operation to the first memory die or the second memory die based at least in part on determining the first memory die and the second memory die may be executing the first operation and the second operation, respectively.</p><p id="p-0127" num="0126">In some instances, the controller may further receive the first status on a first subset of lines of the data bus, where the first subset of lines may be associated with the first memory die for output of status information for the apparatus and receive the second status on a second subset of lines of the data bus, where the second subset of lines may be associated with the second memory die for output of status information for the apparatus.</p><p id="p-0128" num="0127">In some cases, the controller may further select a first subset of lines on the data bus to receive the first status from the first memory die, where the controller may be configured to select the first subset of lines based at least in part on selecting the first memory die for the first operation and the second memory die for the second operation and select a second subset of lines on the data bus to receive the second status from the second memory die, where the controller may be configured to select the second subset of lines based on the selecting the first memory die for the first operation and the second memory die for the second operation.</p><p id="p-0129" num="0128">In some examples, the controller may further transmit a fourth command concurrently with the first command to the first memory die, where the first command may be associated with a first portion of the first memory die and the fourth command may be associated with a third operation on a second portion of the first memory die and receive, concurrently via the data bus, a third status of the third operation and the first status of the first operation based at least in part on transmitting the fourth command, and where the third command requests the third status of the third operation.</p><p id="p-0130" num="0129">In some instances, the controller may further receive the first status on a first line of a subset of lines associated with the first memory die and receive the third status on a second line of the subset of lines associated with the first memory die.</p><p id="p-0131" num="0130">In some cases, the apparatus may include a quantity of memory devices coupled with the data bus, where the quantity of memory devices coupled with the data bus may be based at least in part on a quantity of data pins for the controller, and where the controller may be configured to receive a concurrent status from each memory device of the quantity of memory devices.</p><p id="p-0132" num="0131">Another apparatus is described. The apparatus may include a memory array including a plurality of memory cells storing data and a controller coupled with the memory array and configured to receive a first command associated with an operation on the data, receive a second command requesting a status of the operation based at least in part on receiving the first command, where the second command is associated with a concurrent output of status operations on a data bus coupled with a plurality of devices, a device of the plurality of devices including the memory array and the controller, generate a bit indicating the status of the operation based at least in part on receiving the second command, and output the bit onto a first subset of lines of the data bus based at least in part on generating the bit, where a second subset of lines of the data bus are associated with the concurrent output of status operations by a remaining plurality of devices</p><p id="p-0133" num="0132">In some examples, the controller may further receive a third command requesting the data associated with the operation and output the data onto the first subset of lines of the data bus based at least in part on receiving the third command.</p><p id="p-0134" num="0133">In some instances, the controller may further receive a fourth command associated with a second operation based at least in part on outputting the data, receive a fifth command requesting a second status of the second operation based at least in part on receiving the fourth command, where the fifth command may be associated with the concurrent output of status operations, generate a second bit indicating the second status of the second operation based at least in part on receiving the fifth command, and output the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</p><p id="p-0135" num="0134">In some cases, the controller may further output the bit onto the first subset of lines for a duration associated with the busy state of the operation based at least in part on generating the bit, generate a second bit indicating a second status of the operation after the duration associated with the busy state of the operation, and output the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</p><p id="p-0136" num="0135">In some instances of the apparatus, the first subset of lines of the data bus may be associated with outputting the status of the operation at the memory array based at least in part on a one-time-programmable element.</p><p id="p-0137" num="0136">In some cases, the controller may further receive an instruction, before receiving the first command, to utilize the first subset of lines of the data bus for outputting the status of the operation, where the controller may be configured to output the bit indicating the status of the operation onto the first subset of lines based on the instruction received.</p><p id="p-0138" num="0137">In some examples, the controller may further receive a third command, the first command associated with the operation on a first subset of memory cells of the plurality of memory cells coupled with a first word line, and the third command associated with a second operation on a second subset of memory cells of the plurality of memory cells coupled with a second word line and output the bit and a second bit indicating the status of the second operation concurrently on the first subset of lines of the data bus based at least in part on receiving the third command, where the second command requests a second status of the second operation.</p><p id="p-0139" num="0138">In some instances of the apparatus, the bit may be associated with a request for service for the operation and the second bit may be associated with a busy state of the second operation.</p><p id="p-0140" num="0139">In some cases, the apparatus may include a first register including a first set of bits associated with the status of the operation and information associated with the memory array, a second register including a second set of bits controlling an inversion state for the first set of bits, and a logic circuit configured to utilize the first set of bits and the second set of bits to generate the bit, where the controller may be configured to generate the bit based at least in part on the first register, the second register, and the logic circuit.</p><p id="p-0141" num="0140">In some examples, the apparatus may include a multiplexer coupled with the controller and configured to receive a first set of bits associated with the status of the operation and information associated with the memory array and multiplex the first set of bits into the bit based at least in part on receiving the first set of bits, wherein the controller is configured to generate the first set of bits based at least in part on the multiplexing of the first set of bits, and wherein the controller is configured to mask the bit before outputting the bit onto the first subset of lines of the data bus</p><p id="p-0142" num="0141">Information and signals described herein may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof. Some drawings may illustrate signals as a single signal; however, the signal may represent a bus of signals, where the bus may have a variety of bit widths.</p><p id="p-0143" num="0142">The terms &#x201c;electronic communication,&#x201d; &#x201c;conductive contact,&#x201d; &#x201c;connected,&#x201d; and &#x201c;coupled&#x201d; may refer to a relationship between components that supports the flow of signals between the components. Components are considered in electronic communication with (or in conductive contact with or connected with or coupled with) one another if there is any conductive path between the components that can, at any time, support the flow of signals between the components. At any given time, the conductive path between components that are in electronic communication with each other (or in conductive contact with or connected with or coupled with) may be an open circuit or a closed circuit based on the operation of the device that includes the connected components. The conductive path between connected components may be a direct conductive path between the components or the conductive path between connected components may be an indirect conductive path that may include intermediate components, such as switches, transistors, or other components. In some examples, the flow of signals between the connected components may be interrupted for a time, for example, using one or more intermediate components such as switches or transistors.</p><p id="p-0144" num="0143">The term &#x201c;coupling&#x201d; refers to a condition of moving from an open-circuit relationship between components in which signals are not presently capable of being communicated between the components over a conductive path to a closed-circuit relationship between components in which signals are capable of being communicated between components over the conductive path. If a component, such as a controller, couples other components together, the component initiates a change that allows signals to flow between the other components over a conductive path that previously did not permit signals to flow.</p><p id="p-0145" num="0144">The term &#x201c;isolated&#x201d; refers to a relationship between components in which signals are not presently capable of flowing between the components. Components are isolated from each other if there is an open circuit between them. For example, two components separated by a switch that is positioned between the components are isolated from each other if the switch is open. If a controller isolates two components, the controller affects a change that prevents signals from flowing between the components using a conductive path that previously permitted signals to flow.</p><p id="p-0146" num="0145">The terms &#x201c;if,&#x201d; &#x201c;when,&#x201d; &#x201c;based on,&#x201d; &#x201c;based at least in part on,&#x201d; and &#x201c;in response to,&#x201d; may be used interchangeably. In some examples, if the terms &#x201c;if,&#x201d; &#x201c;when,&#x201d; &#x201c;based on,&#x201d; &#x201c;based at least in part on,&#x201d; and &#x201c;in response to,&#x201d; are used to describe a conditional action or connection between portions of a process, the terms may be interchangeable. In some examples, if used to describe a conditional action or process, the terms &#x201c;if,&#x201d; &#x201c;when,&#x201d; &#x201c;based on,&#x201d; &#x201c;based at least in part on,&#x201d; and &#x201c;in response to&#x201d; may be interchangeable.</p><p id="p-0147" num="0146">The devices discussed herein, including a memory array, may be formed on a semiconductor substrate, such as silicon, germanium, silicon-germanium alloy, gallium arsenide, gallium nitride, etc. In some examples, the substrate is a semiconductor wafer. In some other examples, the substrate may be a silicon-on-insulator (SOI) substrate, such as silicon-on-glass (SOG) or silicon-on-sapphire (SOP), or epitaxial layers of semiconductor materials on another substrate. The conductivity of the substrate, or sub-regions of the substrate, may be controlled through doping using various chemical species including, but not limited to, phosphorous, boron, or arsenic. Doping may be performed during the initial formation or growth of the substrate, by ion-implantation, or by any other doping means.</p><p id="p-0148" num="0147">A switching component or a transistor discussed herein may represent a field-effect transistor (FET) and comprise a three terminal device including a source, drain, and gate. The terminals may be connected to other electronic elements through conductive materials, e.g., metals. The source and drain may be conductive and may comprise a heavily-doped, e.g., degenerate, semiconductor region. The source and drain may be separated by a lightly-doped semiconductor region or channel. If the channel is n-type (i.e., majority carriers are electrons), then the FET may be referred to as an n-type FET. If the channel is p-type (i.e., majority carriers are holes), then the FET may be referred to as a p-type FET. The channel may be capped by an insulating gate oxide. The channel conductivity may be controlled by applying a voltage to the gate. For example, applying a positive voltage or negative voltage to an n-type FET or a p-type FET, respectively, may result in the channel becoming conductive. A transistor may be &#x201c;on&#x201d; or &#x201c;activated&#x201d; if a voltage greater than or equal to the transistor's threshold voltage is applied to the transistor gate. The transistor may be &#x201c;off&#x201d; or &#x201c;deactivated&#x201d; if a voltage less than the transistor's threshold voltage is applied to the transistor gate.</p><p id="p-0149" num="0148">The description set forth herein, in connection with the appended drawings, describes example configurations and does not represent all the examples that may be implemented or that are within the scope of the claims. The term &#x201c;exemplary&#x201d; used herein means &#x201c;serving as an example, instance, or illustration&#x201d; and not &#x201c;preferred&#x201d; or &#x201c;advantageous over other examples.&#x201d; The detailed description includes specific details to providing an understanding of the described techniques. These techniques, however, may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form to avoid obscuring the concepts of the described examples.</p><p id="p-0150" num="0149">In the appended figures, similar components or features may have the same reference label. Further, various components of the same type may be distinguished by following the reference label by a hyphen and a second label that distinguishes among the similar components. If just the first reference label is used in the specification, the description is applicable to any one of the similar components having the same first reference label irrespective of the second reference label.</p><p id="p-0151" num="0150">The functions described herein may be implemented in hardware, software executed by a processor, firmware, or any combination thereof. If implemented in software executed by a processor, the functions may be stored on or transmitted over, as one or more instructions or code, a computer-readable medium. Other examples and implementations are within the scope of the disclosure and appended claims. For example, due to the nature of software, functions described above can be implemented using software executed by a processor, hardware, firmware, hardwiring, or combinations of any of these. Features implementing functions may also be physically located at various positions, including being distributed such that portions of functions are implemented at different physical locations.</p><p id="p-0152" num="0151">For example, the various illustrative blocks and components described in connection with the disclosure herein may be implemented or performed with a general-purpose processor, a DSP, an ASIC, an FPGA or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general-purpose processor may be a microprocessor, but in the alternative, the processor may be any processor, controller, microcontroller, or state machine. A processor may be implemented as a combination of computing devices (e.g., a combination of a DSP and a microprocessor, multiple microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration).</p><p id="p-0153" num="0152">As used herein, including in the claims, &#x201c;or&#x201d; as used in a list of items (for example, a list of items prefaced by a phrase such as &#x201c;at least one of&#x201d; or &#x201c;one or more of&#x201d;) indicates an inclusive list such that, for example, a list of at least one of A, B, or C means A or B or C or AB or AC or BC or ABC (i.e., A and B and C). Also, as used herein, the phrase &#x201c;based on&#x201d; shall not be construed as a reference to a closed set of conditions. For example, an exemplary step that is described as &#x201c;based on condition A&#x201d; may be based on both a condition A and a condition B without departing from the scope of the present disclosure. In other words, as used herein, the phrase &#x201c;based on&#x201d; shall be construed in the same manner as the phrase &#x201c;based at least in part on.&#x201d;</p><p id="p-0154" num="0153">Computer-readable media includes both non-transitory computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A non-transitory storage medium may be any available medium that can be accessed by a general purpose or special purpose computer. By way of example, and not limitation, non-transitory computer-readable media can comprise RAM, ROM, electrically erasable programmable read-only memory (EEPROM), compact disk (CD) ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other non-transitory medium that can be used to carry or store desired program code means in the form of instructions or data structures and that can be accessed by a general-purpose or special-purpose computer, or a general-purpose or special-purpose processor. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, include CD, laser disc, optical disc, digital versatile disc (DVD), floppy disk, and Blu-ray disc, where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above are also included within the scope of computer-readable media.</p><p id="p-0155" num="0154">The description herein is provided to enable a person skilled in the art to make or use the disclosure. Various modifications to the disclosure will be apparent to those skilled in the art, and the generic principles defined herein may be applied to other variations without departing from the scope of the disclosure. Thus, the disclosure is not limited to the examples and designs described herein but is to be accorded the broadest scope consistent with the principles and novel features disclosed herein.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. (canceled)</claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. An apparatus, comprising:<claim-text>a first memory die coupled with a data bus;</claim-text><claim-text>a second memory die coupled with the data bus; and</claim-text><claim-text>a memory system controller coupled with the first memory die and the second memory die via the data bus, the memory system controller configured to:<claim-text>transmit a first command concurrently to the first memory die and the second memory die, the first command requesting a first status of a first operation associated with the first memory die and a second status of a second operation associated with the second memory die; and</claim-text><claim-text>receive, concurrently via the data bus, the first status of the first operation from the first memory die and the second status of the second operation from the second memory die.</claim-text></claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the memory system controller is further configured to:<claim-text>determine that the second memory die is awaiting service for the second operation based at least in part on receiving the second status concurrently with the first status;</claim-text><claim-text>transmit a second command to the second memory die to select the second memory die to output data associated with the second operation onto the data bus; and</claim-text><claim-text>receive the data from the second memory die based at least in part on transmitting the second command.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the memory system controller is further configured to:<claim-text>transmit a third command associated with a third operation to the second memory die based at least in part on receiving the data from the second memory die.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the memory system controller is further configured to:<claim-text>transmit a fourth command concurrently to the first memory die and the second memory die based at least in part on transmitting the third command, the fourth command requesting the first status of the first operation and a third status of the third operation.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the memory system controller is further configured to:<claim-text>determine that the first memory die and the second memory die are executing the first operation and the second operation, respectively, based at least in part on receiving the first status concurrently with the second status; and</claim-text><claim-text>refrain from transmitting a second command associated with a third operation to the first memory die or the second memory die based at least in part on determining the first memory die and the second memory die are executing the first operation and the second operation, respectively.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the memory system controller is further configured to:<claim-text>receive the first status on a first subset of lines of the data bus, wherein the first subset of lines is associated with the first memory die for output of status information for the apparatus; and</claim-text><claim-text>receive the second status on a second subset of lines of the data bus, wherein the second subset of lines is associated with the second memory die for output of status information for the apparatus.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the memory system controller is further configured to:<claim-text>select a first subset of lines on the data bus to receive the first status from the first memory die, wherein the memory system controller is configured to select the first subset of lines based at least in part on selecting the first memory die for the first operation and the second memory die for the second operation; and</claim-text><claim-text>select a second subset of lines on the data bus to receive the second status from the second memory die, wherein the memory system controller is configured to select the second subset of lines based on the selecting the first memory die for the first operation and the second memory die for the second operation.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the memory system controller is further configured to:<claim-text>transmit a second command concurrently with a third command to the first memory die, wherein the third command is associated with a first portion of the first memory die and the second command is associated with a third operation on a second portion of the first memory die; and</claim-text><claim-text>receive, concurrently via the data bus, a third status of the third operation and the first status of the first operation based at least in part on transmitting the second command, and wherein the first command requests the third status of the third operation.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the memory system controller is further configured to:<claim-text>receive the first status on a first line of a subset of lines associated with the first memory die and receive the third status on a second line of the subset of lines associated with the first memory die.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>a quantity of memory devices coupled with the data bus, wherein the quantity of memory devices coupled with the data bus is based at least in part on a quantity of data pins for the memory system controller, and wherein the memory system controller is configured to receive a concurrent status from each memory device of the quantity of memory devices.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. An apparatus, comprising:<claim-text>a memory array comprising a plurality of memory cells storing data; and</claim-text><claim-text>a local controller coupled with the memory array and configured to:<claim-text>receive a first command requesting a status of an operation on the data, wherein the first command is associated with a concurrent output of status operations on a data bus coupled with a plurality of devices, a device of the plurality of devices comprising the apparatus;</claim-text><claim-text>generate a bit indicating the status of the operation based at least in part on receiving the first command; and</claim-text><claim-text>output the bit onto a first subset of lines of the data bus based at least in part on generating the bit, wherein a second subset of lines of the data bus are associated with the concurrent output of status operations by a remaining plurality of devices.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the bit outputted is associated with a request for service associated with the operation, and wherein the local controller is further configured to:<claim-text>receive a second command requesting the data associated with the operation; and</claim-text><claim-text>output the data onto the first subset of lines of the data bus based at least in part on receiving the second command.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the local controller is further configured to:<claim-text>receive a third command associated with a second operation based at least in part on outputting the data;</claim-text><claim-text>receive a fourth command requesting a second status of the second operation based at least in part on receiving the third command, wherein the fourth command is associated with the concurrent output of status operations;</claim-text><claim-text>generate a second bit indicating the second status of the second operation based at least in part on receiving the fourth command; and</claim-text><claim-text>output the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the bit outputted is associated with a busy state of the operation and wherein the local controller is further configured to:<claim-text>output the bit onto the first subset of lines for a duration associated with the busy state of the operation based at least in part on generating the bit;</claim-text><claim-text>generate a second bit indicating a second status of the operation after the duration associated with the busy state of the operation; and</claim-text><claim-text>output the second bit onto the first subset of lines of the data bus based at least in part on generating the second bit.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first subset of lines of the data bus are associated with outputting the status of the operation at the memory array based at least in part on a one-time-programmable element.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the local controller is further configured to:<claim-text>receive an instruction, before receiving the first command, to utilize the first subset of lines of the data bus for outputting the status of the operation, wherein the local controller is configured to output the bit indicating the status of the operation onto the first subset of lines based on the instruction received.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the local controller is further configured to:<claim-text>receive a second command and a third command, the second command associated with the operation on a first subset of memory cells of the plurality of memory cells coupled with a first word line, and the third command associated with a second operation on a second subset of memory cells of the plurality of memory cells coupled with a second word line; and</claim-text><claim-text>output the bit and a second bit indicating the status of the second operation concurrently on the first subset of lines of the data bus based at least in part on receiving the second command and the third command, wherein the third command requests a second status of the second operation.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the bit is associated with a request for service for the operation and the second bit is associated with a busy state of the second operation.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>a first register comprising a first set of bits associated with the status of the operation and information associated with the memory array;</claim-text><claim-text>a second register comprising a second set of bits controlling an inversion state for the first set of bits; and</claim-text><claim-text>a logic circuit configured to utilize the first set of bits and the second set of bits to generate the bit, wherein the local controller is configured to generate the bit based at least in part on the first register, the second register, and the logic circuit.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A method, comprising:<claim-text>transmitting a first command concurrently to a first memory die and a second memory die, the first command requesting a first status of a first operation associated with the first memory die and a second status of a second operation associated with the second memory die, the first memory die and the second memory die coupled with a data bus; and</claim-text><claim-text>receive, concurrently via the data bus, the first status of the first operation from the first memory die and the second status of the second operation from the second memory die.</claim-text></claim-text></claim></claims></us-patent-application>