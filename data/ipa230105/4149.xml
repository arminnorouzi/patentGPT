<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004150A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004150</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17944208</doc-number><date>20220914</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>DE</country><doc-number>10 2020 107 623.1</doc-number><date>20200319</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>05</class><subclass>B</subclass><main-group>19</main-group><subgroup>418</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>B</subclass><main-group>19</main-group><subgroup>41885</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>B</subclass><main-group>19</main-group><subgroup>4188</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">COMPUTER-IMPLEMENTED METHOD FOR CREATING CONTROL DATA SETS, CAD/CAM SYSTEM, AND MANUFACTURING PLANT</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/EP2021/056823</doc-number><date>20210317</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17944208</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>TRUMPF Werkzeugmaschinen SE + Co. KG</orgname><address><city>Ditzingen</city><country>DE</country></address></addressbook><residence><country>DE</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Messerschmidt</last-name><first-name>Claudius</first-name><address><city>Stuttgart</city><country>DE</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Schlegel</last-name><first-name>Rainer</first-name><address><city>Messstetten</city><country>DE</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method creates numerical control data sets for controlling machine tools. The control data sets are read from the machine tools. A first component data set representing a first component design model is received. A first numerical control data set is created for the first component data set using control program generation software, having an assessment routine using a trained machine learning algorithm with settable parameters. A first additional training data set is compiled from the component data set and the created numerical control data set. The first additional training data set is output to a training database. The machine learning algorithm is updated by setting usage-environment-specific values for the parameters determined by training the machine learning training algorithm using the training database.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="226.31mm" wi="151.64mm" file="US20230004150A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="230.38mm" wi="153.67mm" file="US20230004150A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="186.86mm" wi="122.26mm" file="US20230004150A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="162.64mm" wi="143.09mm" file="US20230004150A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="206.33mm" wi="147.57mm" orientation="landscape" file="US20230004150A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of International Application No. PCT/EP2021/056823 (WO 2021/185909 A1), filed on Mar. 17, 2021, and claims benefit to German Patent Application No. DE 10 2020 107 623.1, filed on Mar. 19, 2020. The aforementioned applications are hereby incorporated by reference herein.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to a method for creating computerized numerical control data sets for controlling machine tools. The present disclosure also relates to a CAD/CAM system and to a manufacturing plant and a machine tool.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">In order to control machine tools, for example for machining metal or sheet metal, a computer-aided design system (CAD system) is used to generate a digital design model of a component to be produced. In the course of computer-aided manufacturing (CAM), the design model is used to create a computerized numerical control data set (computerized numerical control (CNC) code or CNC program) which can be transferred, in electronic (digital) form, to the control unit of a machine tool, for example a laser cutting machine, a bending machine or an additive manufacturing machine. According to the control data set, control routines for carrying out the machining (laser cutting, bending, additive manufacturing) are output to the various components of the machine tool.</p><p id="p-0005" num="0004">The CNC program can be created using a so-called CAM system, into which the geometrical data (2D/3D design data) for the component are read in and which has access to the technology to be used (that is to say its policies and process optimizations and machine settings). The conversion of a CAD design model (2D or 3D model of a component) into a (CAM) control data set constitutes computer-aided programming which includes machining steps which take place in succession, movement paths, relative positions, parameters of the machine tool etc. The CAM system may also comprise the conversion into machine-tool-comprehensible control routines (for example G-code), wherein the CAM system may use, for example, a post-processor which has been adjusted to a specific machine tool. Alternatively, the conversion into the control routines can also be carried out in a machine tool controller. During the computer-aided programming and the conversion, the CAM system can resort to technology tables which store, for example, the operating parameters of the machine tools for different machining methods, material types, machine tool types, available tools etc.</p><p id="p-0006" num="0005">The control data set generated is provided for the purpose of controlling a machine tool to carry out machining steps. For this purpose, the control data set can be converted by the CAM system or by the machine tool into specific machine control instructions for the CNC control. During such CNC control of a machine tool, the machine control instructions, for example in the case of a laser cutting machine or an additive manufacturing machine, set the parameters of a laser beam from a laser beam source, control a relative movement between the laser beam and the material or powder bed to be machined, and activate accompanying processes such as the supply with protective gas and/or preceding/subsequent processes such as the loading and unloading of transport apparatuses for the components.</p><p id="p-0007" num="0006">In a CAD/CAM system, a CAD system can be integrated with a CAM system in a computer system, that is to say the creation of a component data set (CAD data relating to a component) and the programming of a control data set (CNC program) are carried out in a common computer system. Alternatively, a CAD/CAM system may be designed to read in component data sets which have already been created and to further process them using a CAM algorithm (control program generation software). That is to say, the generation of control data sets can generally be combined with the creation of component data sets in a data processing unit or can be carried out separately with the aid of a plurality of data processing units (for example set up as a cloud system).</p><p id="p-0008" num="0007">A machining parameter proposed by the CAM system in the CAM control data set can be manually adapted if necessary. An adaptation of a parameter may result, for example, from a control simulation of a machining process according to a CAM control data set. Furthermore, an adaptation of the CAM control data set may prove to be necessary when executing the NC code on the machine tool if, for example, errors occurred in a first work sequence according to the CAM control data set or the desired quality was not achieved.</p><p id="p-0009" num="0008">A component or an assembly of components is usually manually designed and programmed by a designer/machine programmer and adapted to the respective conditions. In this case, the designer/machine programmer requires a lot of expert knowledge of the design, the materials, the available machining methods and the available machine tools. The present disclosure provides a solution to automate this process in its entirety.</p><p id="p-0010" num="0009">An exemplary apparatus for controlling a machining plant is known from EP 2 340 469 A1 in which an adaptation apparatus is provided and can be used to adapt machining parameters in a preset manner to the material properties of a workpiece to be machined. When machining workpieces, the use of algorithms which are based, in particular, on machine learning&#x2014;for example on neural networks&#x2014;is known, for example, from JP 7080746 A, U.S. Pat. Nos. 6,018,729 and 8,706,282.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0011" num="0010">In an embodiment, the present disclosure provides a computer-implemented method that is carried out by one or more computers and creates computerized numerical control data sets for controlling machine tools in a usage environment. The control data sets are read in from associated machine tools for machining starting materials. The method includes: receiving a first component data set representing a digital design model of a first component; creating a first computerized numerical control data set for the first component data set using control program generation software, the control program generation software having an assessment routine which uses a trained machine learning algorithm with settable parameters, starting values of the parameters being determined by training a machine learning training algorithm which corresponds to the trained machine learning algorithm; compiling a first additional training data set from the component data set and the created computerized numerical control data set, and outputting the first additional training data set to a usage-environment-specific training database; updating the machine learning algorithm by setting usage-environment-specific values for the parameters, the usage-environment-specific values being determined by training the machine learning training algorithm using the usage-environment-specific training database; receiving a second component data set representing a digital design model of a second component; and creating a second computerized numerical control data set for the second component data set by using the control program generation software and running through the assessment routine, the machine learning algorithm whose parameters have been updated being used.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0012" num="0011">Subject matter of the present disclosure will be described in even greater detail below based on the exemplary figures. All features described and/or illustrated herein can be used alone or combined in different combinations. The features and advantages of various embodiments will become apparent by reading the following detailed description with reference to the attached drawings, which illustrate the following:</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a schematic illustration of a manufacturing plant interacting with computer-aided optimization of an algorithm;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a schematic view for illustrating the data flow when using the ML algorithm;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a flowchart for illustrating the sequence of a method for creating computerized numerical control data sets for controlling machine tools in a specific usage environment; and</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows different steps of an implementation of the concepts presented herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">One aspect of the present disclosure is related to improving computer-aided generation of (CAM) control data sets and adjusting this, in particular, to specific environments when using individual machine tools. In particular, aspects of the preset disclosure ensure stable, process-reliable use of machine tools in the production of components. In this case, customer-specific preferences should also be taken into account, in particular.</p><p id="p-0018" num="0017">A further aspect of this disclosure is makes it possible to automatically generate and optimize process data and CNC programs for autonomously machining sheet metal parts on sheet metal manufacturing cells/sheet metal manufacturing machines. Process data and CNC programs are therefore specifically adapted with the aim of making machining programs faster, of higher quality and/or safer in order to be able to generally carry out more successful production. In this context, the intention is to automatically optimize or at least improve process data and CNC programs for the individual requirements of a customer or a target group.</p><p id="p-0019" num="0018">One aspect of this disclosure is a computer-implemented method, which is carried out by one or more computers and is provided for the purpose of creating computerized numerical control data sets for controlling machine tools in a usage environment. In this case, the control data sets are read in from associated machine tools for machining starting materials, in particular for machining metal or sheet metal parts using separating, shaping and/or joining manufacturing methods. The method comprises the following steps:</p><p id="p-0020" num="0019">receiving a first component data set representing a digital design model of a first component;</p><p id="p-0021" num="0020">creating a first computerized numerical control data set for the first component data set using control program generation software, wherein the control program generation software comprises an assessment routine which uses a trained machine learning algorithm with settable parameters, wherein starting values of the parameters were determined by training a machine learning training algorithm which corresponds to the trained machine learning algorithm;</p><p id="p-0022" num="0021">compiling a first additional training data set from the component data set and the created computerized numerical control data set, and outputting the first additional training data set to a usage-environment-specific training database;</p><p id="p-0023" num="0022">updating the machine learning algorithm by setting usage-environment-specific values for the parameters, wherein the usage-environment-specific values were determined by training the machine learning training algorithm using the usage-environment-specific training database;</p><p id="p-0024" num="0023">receiving a second component data set representing a digital design model of a second component; and creating a second computerized numerical control data set for the second component data set by using the control program generation software and running through the assessment routine, wherein the machine learning algorithm whose parameters have been updated is used.</p><p id="p-0025" num="0024">A further aspect of the disclosure includes a CAD/CAM system for creating or receiving component data sets, each representing a digital design model of a component, and for creating computerized numerical control data sets for the component data sets, wherein the control data sets can be read in from associated machine tools for machining starting materials, in particular for machining metal or sheet metal parts using separating, shaping and/or joining manufacturing methods. The CAD/CAM system is equipped with:</p><p id="p-0026" num="0025">at least one computer-readable storage medium for storing the component data sets and the control data sets;</p><p id="p-0027" num="0026">a processor (for example connected to the computer-readable storage medium for reading component data sets stored on the storage medium) which has loaded control program generation software with a trained machine learning algorithm into its main memory, wherein the trained machine learning algorithm is used in an assessment routine of the control program generation software, is configured with settable parameters and is configured such that the processor carries out the method as described in one of the preceding method descriptions and creates computerized numerical control data sets for controlling at least one machine tool (and stores them on the storage medium);</p><p id="p-0028" num="0027">a data input (for example connected to the processor) for receiving usage-environment-specific values for the parameters of the trained machine learning algorithm;</p><p id="p-0029" num="0028">a control data output (for example connected to the processor) for outputting the created computerized numerical control data sets to the at least one machine tool, and at least one training data output (for example connected to the processor) for outputting additional training data sets which are assigned to the usage environment and are output when carrying out the method described herein.</p><p id="p-0030" num="0029">A further aspect of the disclosure is a manufacturing plant for manufacturing components according to component data sets each representing a digital design model of a component. The manufacturing plant is configured, in particular, to machine metal or sheet metal parts using separating, shaping and/or joining manufacturing methods. The manufacturing plant comprises:</p><p id="p-0031" num="0030">a CAD/CAM system described herein for creating computerized numerical control data sets for the component data sets; and</p><p id="p-0032" num="0031">a machine tool having a numerical machine controller and a machining unit, wherein the machine tool is used in a specific usage environment and the numerical machine controller receives the computerized numerical control data sets created by the CAD/CAM system (for example at a control data input) and converts them into control routines which are used to control the machining unit to machine a workpiece for producing components.</p><p id="p-0033" num="0032">A further aspect of the disclosure is a machine tool having a numerical machine controller and a machining unit, wherein the machine tool is used in a specific usage environment and the numerical machine controller receives computerized numerical control data sets (for example at a control data input) and converts them into control routines which are used to control the machining unit to machine a workpiece, in particular to machine metal or sheet metal parts using separating, shaping and/or joining manufacturing methods. The machine tool comprises:</p><p id="p-0034" num="0033">a computer-readable storage medium for storing the control data sets and component data sets on which the control data sets are based;</p><p id="p-0035" num="0034">a processor (for example connected to the computer-readable storage medium for reading control data sets stored on the storage medium) which is configured to generate the control routines from the control data sets, wherein a computerized numerical control data set can be modified into a changed control data set by a machine tool operator of the machine tool or optionally by a trained machine learning algorithm loaded by the processor, from which changed control data set the control routines are generated, and wherein the processor is also configured to compile an additional training data set from the changed control data set and the associated component data set, which is assigned to the usage environment;</p><p id="p-0036" num="0035">a training data output (for example connected to the processor) for outputting the additional training data set to a usage-environment-specific training database; and optionally a parameter input (for example connected to the processor) for receiving usage-environment-specific values for settable parameters of the trained machine learning algorithm.</p><p id="p-0037" num="0036">In some embodiments, the manufacturing plant also comprises a training computer system for determining values for settable parameters of a machine learning algorithm which is used in an assessment routine of control program generation software in the CAD/CAM system. The training computer system comprises:</p><p id="p-0038" num="0037">a computer-readable usage-environment-specific training database for storing additional training data sets, wherein the additional training data sets are output by the CAD/CAM system, in particular by a CAD system or a CAM system of the CAD/CAM system, and optionally by the numerical machine controller,</p><p id="p-0039" num="0038">a processor which has loaded a machine learning training algorithm, which corresponds to the trained machine learning algorithm used in the CAD/CAM system, and is configured to train the machine learning training algorithm on the basis of the usage-environment-specific training database and to output values for the parameters to the CAD/CAM system for use in the trained machine learning algorithm used in the CAD/CAM system.</p><p id="p-0040" num="0039">In some embodiments, the computer-implemented method further comprises the following steps:</p><p id="p-0041" num="0040">a machine programmer adapting the first computerized numerical control data set in order to create an adapted first computerized numerical control data set;</p><p id="p-0042" num="0041">compiling a further additional training data set from the adapted computerized numerical control data set and the first component data set, and outputting the further additional training data set for extending the usage-environment-specific training database; and</p><p id="p-0043" num="0042">updating the machine learning algorithm by setting usage-environment-specific values for the parameters, wherein the usage-environment-specific values were determined by training the machine learning training algorithm in the usage-environment-specific training database which has been extended by the further additional training data set.</p><p id="p-0044" num="0043">In some embodiments, the computer-implemented method further comprises the following steps:</p><p id="p-0045" num="0044">a machine programmer adapting the second computerized numerical control data set in order to create an adapted second computerized numerical control data set;</p><p id="p-0046" num="0045">compiling a further additional training data set from the adapted computerized numerical control data set and the second component data set, and outputting the further additional training data set for extending the usage-environment-specific training database; and</p><p id="p-0047" num="0046">updating the machine learning algorithm by setting usage-environment-specific values for the parameters, wherein the usage-environment-specific values were determined by training the machine learning training algorithm in the usage-environment-specific training database which has been extended by the further additional training data set.</p><p id="p-0048" num="0047">The second computerized numerical control data set can be adapted</p><p id="p-0049" num="0048">by a designer by modifying the second component data set;</p><p id="p-0050" num="0049">by a machine programmer after simulating the control of the machine tool using a simulation program for the manufacturing of the component, wherein the simulation program simulates the manufacturing using the second computerized numerical control data set; and/or</p><p id="p-0051" num="0050">by a machine tool operator after reading the second computerized numerical control data set into a numerical machine controller of the machine tool and converting the second computerized numerical control data set into a plurality of control routines, in particular after machining a starting material using a machining unit of the machine tool by controlling the machining unit using the control routines.</p><p id="p-0052" num="0051">In some embodiments, the computer-implemented method further comprises the following steps:</p><p id="p-0053" num="0052">training a machine learning training algorithm corresponding to the trained machine learning algorithm in the usage-environment-specific training database to generate the usage-environment-specific values of the parameters; and</p><p id="p-0054" num="0053">transmitting the usage-environment-specific values of the parameters to the control program generation software in order to update the machine learning algorithm with the usage-environment-specific values of the parameters.</p><p id="p-0055" num="0054">In some embodiments of the computer-implemented method, the usage-environment-specific training database may store:</p><p id="p-0056" num="0055">at least one additional training data set which traces back to a computerized numerical control data set which was created in the usage environment, and</p><p id="p-0057" num="0056">optionally one or more training data sets which were provided independently of the usage environment and, in particular, independently of a manufacturer of the machine tool.</p><p id="p-0058" num="0057">In some embodiments of the computer-implemented method, the additional training data sets may include:</p><p id="p-0059" num="0058">at least one geometrical definition of a section of the component, and</p><p id="p-0060" num="0059">at least one manufacturing process parameter which defines machining using the machine tool assigned to the section.</p><p id="p-0061" num="0060">In some embodiments of the computer-implemented method, the additional training data sets may include:</p><p id="p-0062" num="0061">machine parameters assigned to the machine tool,</p><p id="p-0063" num="0062">user parameters assigned to a user of the machine tool, and</p><p id="p-0064" num="0063">process sequence parameters assigned to the sequence of a machining process.</p><p id="p-0065" num="0064">In some embodiments of the computer-implemented method, the additional training data sets may include data from one or more of the following fields of use and control boundary conditions:</p><p id="p-0066" num="0065">a target group identification, in particular data relating to the customer;</p><p id="p-0067" num="0066">machining profiles, in particular customer-specific machining profiles, containing parameters which map a machining process to a machining profile, for example to a customer-specific machining profile;</p><p id="p-0068" num="0067">autonomous functions of a machine tool with parameters which are independently taken into account by a machine tool such as an approach lug, a contour size, an injection circuit, a cutting sequence, a measurement point, a measurement cycle and/or a tool change;</p><p id="p-0069" num="0068">selection of an appropriate technology table such as a laser technology table and/or a policy;</p><p id="p-0070" num="0069">optimum machine selection;</p><p id="p-0071" num="0070">cutting time;</p><p id="p-0072" num="0071">production costs.</p><p id="p-0073" num="0072">In some embodiments of the computer-implemented method, the machine learning algorithm may be in the form of a neural network and may contain a plurality of neural core network layers each defined by a set of parameters as weights, and wherein the updating step in the method comprises:</p><p id="p-0074" num="0073">updating the neural network by assigning usage-environment-specific values to the parameters, wherein the usage-environment-specific values were determined on the basis of the usage-environment-specific training database.</p><p id="p-0075" num="0074">In some embodiments of the computer-implemented method, the machine learning algorithm may be in the form of an evolutionary algorithm, a support vector machine algorithm or an algorithm for automatically inducing a decision tree, which comprises a model which includes the parameters, and wherein the updating step in the method comprises:</p><p id="p-0076" num="0075">updating the evolutionary algorithm, the support vector machine algorithm or the algorithm for automatically inducing a decision tree by assigning usage-environment-specific values to the parameters, wherein the usage-environment-specific values were determined on the basis of the usage-environment-specific training database.</p><p id="p-0077" num="0076">The CAD/CAM systems, manufacturing plants and machine tools disclosed herein are configured, in particular, in such a manner that they can be used to carry out embodiments of the method according to the present disclosure. The method and optionally the embodiments of the method can be carried out by a computer program which is executed in a processor. In this case, the processor may be, for example, part of the CAD/CAM system, of the CAM system, of the manufacturing plant and/or of the machine tool. Furthermore, the computer program may be stored on a computer-readable data storage medium.</p><p id="p-0078" num="0077">The concepts disclosed herein make it possible for the sequence when machining and producing components, in particular the production of computerized numerical control data sets, to be adapted to specific usage environments with the aid of machine learning algorithms (ML algorithms). This makes it possible to increase the production output in manufacturing plants.</p><p id="p-0079" num="0078">Concepts which allow aspects from the prior art to be at least partially improved are disclosed herein. In particular, further features and their expediencies will become apparent from the following description of embodiments with reference to the figures.</p><p id="p-0080" num="0079">Aspects described herein are partially based on the knowledge that artificial intelligence trained by the machine tool manufacturer for a plurality of applications (here a machine learning algorithm in the field of creating computerized numerical control data sets) can &#x201c;continue to learn&#x201d; when used by the customer, that is to say when a machine tool is used in a specific usage environment of the customer, as a result of which the creation of control data sets can be optimized or at least improved for the purposes of a specific customer.</p><p id="p-0081" num="0080">In particular, the inventors have recognized that it is possible to adapt the machine learning algorithm on the basis of different customer requirements (preferably with distinct customer-specific parameters/weights in the ML algorithm) if a corresponding data cycle is incorporated in the training environment of the ML algorithm. In addition to the component-specific machining (for example providing micro joints during laser cutting), aspects of carrying out the machining in a specific usage environment, such as the material flow, time management and generally the underlying manufacturing conditions and logistics requirements, can be included in the training of the machine learning algorithm using the concepts proposed here.</p><p id="p-0082" num="0081">The inventors therefore have provided for, inter alia, allowing AI (ML algorithm) trained by the machine tool manufacturer for a plurality of applications to individually continue to learn with the various customers in order to thus individually optimize the AI for the purposes of the respective customer. In particular, the inventors have further provided for setting up a knowledge database by forming and outputting training data sets and including them in the knowledge database in an iterative feedback cycle between the CAD system, CAM system and/or the machine controller using the training of the ML algorithm.</p><p id="p-0083" num="0082">If the data in the knowledge database, that is to say the training data sets, are used to train AI models (ML algorithms) of the CAM system, the weights of the AI models can be adapted to the individual customer requirements over time. In this manner, technical, geometrical and product-specific patterns of the usage environment are learnt by the AI model or are included in the latter, with the result that ultimately automatically created control programs can be produced more quickly, with higher quality and/or more reliably (more error-free).</p><p id="p-0084" num="0083">It is explained below, with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, how the aim of preferably completely autonomous creation of control programs can be tackled with the aid of such a feedback cycle, for example during sheet metal machining (separating, shaping and joining).</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a manufacturing plant <b>1</b> for manufacturing components. In order to illustrate the concepts proposed herein, the manufacturing plant is subdivided into a usage environment <b>3</b> and an ML training environment <b>5</b>. The usage environment <b>3</b> relates to the process of manufacturing components. The manufacturing process can be implemented, for example, using a CAD/CAM system <b>7</b> and a machine tool <b>9</b> (or a plurality of machine tools). At least one ML algorithm <b>11</b> is used in the various manufacturing substeps. The use of the ML algorithm <b>11</b> generally requires training of the ML algorithm. This is carried out in the ML training environment <b>5</b>, that is to say an ML algorithm corresponding to the ML algorithm <b>11</b> in the CAD/CAM system <b>7</b> runs through a training phase on the basis of a multiplicity of training data sets which are used to adapt parameters of the ML algorithm.</p><p id="p-0086" num="0085">A central point proposed herein relates to the interaction between the training of the ML algorithm used and the implementation of the ML algorithm in the CAD/CAM system <b>7</b> and/or the machine tool <b>9</b>.</p><p id="p-0087" num="0086">The usage environment <b>3</b> is described below using the example of metal and sheet metal machining. During metal and sheet metal machining, components are designed in the CAD/CAM system <b>7</b>. For example, component data sets <b>13</b> are created by a designer <b>8</b>A using a CAD system <b>7</b>A and are stored in a storage medium <b>15</b>, for example. Alternatively, such a component data set <b>13</b> can be imported into the (CAD) CAM system <b>7</b>A if a corresponding design has already been externally effected.</p><p id="p-0088" num="0087">In order to produce a component <b>21</b> belonging to the component data set <b>13</b>, a control data set <b>17</b> is generated for the component data set <b>13</b>. This is carried out with the aid of a CAM system <b>7</b>B which constitutes an interface between the design and the manufacturing with the machine tool <b>9</b> and is used to &#x201c;program&#x201d; the component, more specifically to machine a workpiece to form the component.</p><p id="p-0089" num="0088">In the example in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the CAM system <b>7</b>B generates a control data set <b>17</b> which is transmitted to a machine controller <b>9</b>A of the machine tool <b>9</b> to be used. The machine controller <b>9</b>A, according to the control data set <b>17</b>, outputs control routines <b>19</b> to a machining unit <b>9</b>B of the machine tool <b>9</b>. Examples of machine tools include - for sheet metal machining - a laser machine (cutting, welding, robot, flat-bed, tube cutting etc.), a punching machine and a bending machine. A further example are additive manufacturing machines, in particular machines based on laser metal fusion (LMF), electron beam melting or selective laser sintering (SLS), and deep-drawing machine tools. <figref idref="DRAWINGS">FIG. <b>1</b></figref> indicates, by way of example, a laser cutting machine <b>9</b>A&#x2032; and a bending machine <b>9</b>B&#x2033;. The control routines <b>19</b> cause the corresponding machining of a workpiece and, in particular, the production of the component <b>21</b> defined by the component data set <b>13</b>. The control routines <b>19</b> define the manufacturing parameters to be set in each case such as punching tools, lifting force, laser power, laser wavelength, movement trajectories, material parameters etc.</p><p id="p-0090" num="0089">In order to illustrate the data flow, <figref idref="DRAWINGS">FIG. <b>1</b></figref> indicates, by way of example, a control data output <b>23</b> of the CAD/CAM system <b>7</b> and a control data input <b>25</b> of the machine tool <b>9</b> for interchanging control data sets <b>17</b>. As already mentioned, control routines may alternatively be already generated in the CAM system <b>7</b>B, with the result that they can be transmitted to the machine controller <b>9</b>A or directly to the machining unit <b>9</b>B.</p><p id="p-0091" num="0090">Within the framework of CAD/CAM applications (software solutions for designing components and programming CNC control programs which run on one or more processors <b>27</b>, for example), an ML algorithm can be used to create a suggestion for a control data set for a component geometry. In <figref idref="DRAWINGS">FIG. <b>1</b></figref>, this is the ML algorithm <b>11</b> which runs on the processor <b>27</b> of the CAM system <b>7</b>B. An associated CAD design model (the component data set <b>13</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and manufacturing process parameters are the input parameters for the ML algorithm <b>11</b>. Manufacturing process parameters <b>29</b> for the machine tool <b>9</b> are stored, by way of example, on the storage medium <b>15</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The ML algorithm <b>11</b> uses them to create a CAM control data set, the control data set <b>17</b> for the component data set <b>13</b> for generating the component <b>21</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. An ML algorithm generally allows a control data set to be generated for a component to be produced (CAD design model). Therefore, CAD design models relating to the CAM control data sets derived for manufacturing the corresponding components are available in the CAM system <b>7</b>B.</p><p id="p-0092" num="0091">In order to be able to use an ML algorithm when programming control data sets, a machine manufacturer will determine parameters for the ML algorithm in more detail with the aid of training data. This is illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> on the basis of the training environment <b>5</b>. The ML training environment <b>5</b> is the environment in which the ML algorithm can be trained. Training is usually effected on a training ML algorithm <b>111</b> which corresponds to the ML algorithm <b>11</b> in the CAD/CAM software. The model on which the training ML algorithm <b>111</b> is based corresponds to that of the ML algorithm <b>11</b>, but the model is first trained with training data and adapted to the application. The training ML algorithm <b>111</b> is installed on a training computer system <b>113</b> which provides the required computing power and can set parameters of the training ML algorithm <b>111</b>. The training ML algorithm <b>111</b> is run through for a multiplicity of input parameters and the control data sets generated are compared with target control data sets. The parameters of the training ML algorithm <b>111</b> are adapted on the basis thereof. The quality of the ML algorithm can be measured with the aid of a test and a validation data set. Such (first) training of the ML algorithm constitutes an exemplary starting point for the usage-environment-based &#x201c;continued learning&#x201d; of the ML algorithm proposed herein.</p><p id="p-0093" num="0092">For the first training of the ML algorithm, the machine manufacturer carries out a large number of machining sequences (based on control data sets) in order to generate test component geometries (indicated as training production processes <b>115</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). On the basis thereof, the machine manufacturer generates manufacturer training data sets <b>117</b> in which programmed machining (CNC program) is assigned to a component geometry (component data set) in each case. Settings (values for the parameters Pi) of the training ML algorithm can be specified with the aid of the manufacturer training data sets <b>117</b>. The manufacturer training data sets <b>117</b> form the start of a knowledge database which is initially still restricted to the manufacturer's environment. The manufacturer training data sets <b>117</b> are stored in a training database <b>119</b>. The training computer system <b>113</b> can access the training database <b>119</b> and can optimize the parameters Pi using the manufacturer training data sets <b>117</b>.</p><p id="p-0094" num="0093">Parameters Pi of an ML algorithm trained in this manner can be used in the CAD/CAM system <b>7</b> for the ML algorithm <b>11</b> in order to generate a suggestion for a CNC program (control data set <b>17</b>) for a newly planned component (new component data set <b>13</b>) in an automated manner. For this purpose, the values of the parameters Pi are transmitted to the CAD system <b>7</b>B and are stored by the latter in the ML algorithm <b>11</b>, for example.</p><p id="p-0095" num="0094">The disadvantage of the above-described use of an ML algorithm with parameters which have been provided by the machine manufacturer is the aspect that the component geometries and CAM control data sets on which the training is based are provided for environmental conditions which are present for the machine manufacturer, that is to say in the training manufacturing processes <b>115</b>. These may differ substantially from the usage conditions for a customer, as are present in the usage environment <b>3</b>.</p><p id="p-0096" num="0095">According to an aspect of the present disclosure, the training database <b>119</b> is extended with the aid of additional training data sets <b>31</b>. The additional training data sets <b>31</b> are based on control data sets created by the CAD/CAM system <b>7</b>. In this case, these additional training data sets <b>31</b> based on the CAD/CAM system may be based both on a control data set <b>17</b> generated purely automatically with the aid of the ML algorithm <b>11</b> and on a control data set <b>17</b>&#x2032; which is first of all automatically created and then adapted by a machine programmer <b>8</b>B. The additional training data sets <b>31</b> may generally take into account modifications to the component data set <b>13</b> by the designer <b>8</b>A and modifications to the control data set <b>17</b> or to the final control routines <b>19</b> by the machine programmer <b>8</b>B and a machine tool operator <b>8</b>C. Furthermore, the additional training data sets <b>31</b> may take into account modifications to the component data set and/or to the control data set which were carried out when designing and programming the control data set or controlling the machine tool on the basis of an ML algorithm. In addition to the component data and the control data, the additional training data sets may comprise a wide variety of information which can be included in the machining in the course of the design, the programming and the manufacturing by the customer and the supplier.</p><p id="p-0097" num="0096">During design, the additional training data sets comprise geometrical definitions of the component which usually subdivide the component into sections. A geometrical definition may relate to the shape and size of an underlying contour, for example given by a geometrical course of a surrounding sleeve, for example a parameter of a circle which surrounds the underlying contour, or a parameter of an area assigned to the underlying contour or a parameter of a diagonal line assigned to the underlying contour. Further data entries in the additional training data sets during design may relate to the underlying materials, for example layer structures and layer thicknesses or overhang angles in additive manufacturing. In addition, it is also possible to make data entries which characterize information relating to the subsequent use of a part, for example information relating to visible edges, supporting surfaces, subsequent process steps such as welding or bending etc.</p><p id="p-0098" num="0097">Within the scope of the manufacturing using the machine tool, the additional training data sets comprise manufacturing process parameters which define machining using the machine tool. The manufacturing process parameters are usually assigned to a section of the component. Examples are edge lines, cutting lines, bending lines, application lines, joining lines, in particular spring effect compensation in the case of bending processes, for example, and required loads in the case of punching processes etc. With regard to the manufacturing, additional training data sets may comprise data entries comprising setting variables of the machine tool, machining strategies, process safety influences. The data entries may relate to collision avoidance and comprise parameters for the laser power, the cutting gas and dimensions for collision bodies.</p><p id="p-0099" num="0098">In order to take into account the usage environment <b>3</b>, the additional training data sets <b>31</b> may also include:</p><p id="p-0100" num="0099">machine parameters assigned to the machine tool: for example available punching tools, maximum lifting force, minimum/maximum laser power, available wavelength, protective gas use etc.</p><p id="p-0101" num="0100">user parameters assigned to a user of the machine tool: customer, supplier, usage time window and settings/changes, for example to process sequence parameters, carried out as standard by the user, for example giving preference to quiet movement profiles during punching etc.</p><p id="p-0102" num="0101">process sequence parameters assigned to the sequence of a machining process: in each case on the basis of the workpiece/construction material (sheet metal thickness, type of material, powder particle size, etc.) for laser machining, for example laser power for welding processes/cutting processes/melting processes, welding/cutting/melting speed etc.</p><p id="p-0103" num="0102">Furthermore, data from one or more of the following fields of use and control boundary conditions may be included in the additional training data sets <b>31</b>:</p><p id="p-0104" num="0103">a target group identification, for example data relating to the customer;</p><p id="p-0105" num="0104">machining profiles, in particular customer-specific machining profiles, containing parameters which map a machining process to a machining profile, for example to a customer-specific machining profile which, for a customer, specifies whether the customer wants a part to be produced &#x201c;quickly&#x201d; or &#x201c;with high quality&#x201d; or &#x201c;reliably&#x201d;;</p><p id="p-0106" num="0105">autonomous functions of a machine tool; these comprise parameters which are independently taken into account by a machine tool such as an approach lug, a contour size, an injection circuit, a cutting sequence, a measurement point, a measurement cycle and/or a tool change;</p><p id="p-0107" num="0106">selection of appropriate technology tables such as laser technology tables and policies in which machining parameters and machining data are stored;</p><p id="p-0108" num="0107">optimum machine selection;</p><p id="p-0109" num="0108">cutting time;</p><p id="p-0110" num="0109">production costs.</p><p id="p-0111" num="0110">The additional training data sets <b>31</b> preferably form, together with the manufacturer training data sets <b>117</b>, a knowledge database which is aligned with the usage environment <b>3</b> and can be used to adapt the parameters Pi of the training ML algorithm <b>111</b> to the usage environment <b>3</b>. The values for the parameters Pi which result from the training of the training ML algorithm <b>111</b> can again be transmitted to the CAD/CAM system <b>7</b> and can be used to adjust the ML algorithm <b>11</b>.</p><p id="p-0112" num="0111">In order to illustrate the data flow with respect to possible additional training data sets, <figref idref="DRAWINGS">FIG. <b>1</b></figref> indicates, by way of example, training data outputs <b>33</b>A, <b>33</b>B, <b>33</b>C for the CAD system <b>7</b>A, the CAM system <b>7</b>B and the machine controllers <b>9</b>A. The training data outputs <b>33</b>A, <b>33</b>B, <b>33</b>C allow additional training data sets to be transmitted to the ML training environment <b>5</b>, specifically the training database <b>119</b>.</p><p id="p-0113" num="0112">Exemplary parameter inputs <b>35</b>A, <b>35</b>B, <b>35</b>C are also indicated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> and can be used to transmit the values of the parameters Pi determined using the training ML algorithm <b>111</b> to the usage environment <b>3</b>. This relates, in particular, to the ML algorithm <b>11</b> of the CAD/CAM system <b>7</b>. Optionally, however, corresponding ML algorithms can also be used in a CAD system or in the machine controllers <b>9</b>A. <figref idref="DRAWINGS">FIG. <b>1</b></figref> indicates, by way of example, a (machine tool) ML algorithm <b>11</b>_<i>m </i>in a processor <b>27</b>_m of the machine controllers <b>9</b>A together with a storage medium <b>15</b>-<i>m </i>of the machine controller <b>9</b>A. The (machine tool) ML algorithm <b>11</b>_<i>m </i>may generate, for example, a control data set <b>17</b>_<i>m </i>which has been modified on the machine tool side and for which the machine controllers <b>9</b>A can generate and output an additional training data set <b>31</b>_<i>m. </i></p><p id="p-0114" num="0113">In addition to the input parameters of the ML algorithm <b>11</b>, which are usually needed to create a control data set, further input parameters may be included in the additional training data sets <b>31</b> from the operation of the manufacturing plant <b>1</b>. By way of example, <figref idref="DRAWINGS">FIG. <b>1</b></figref> indicates that parameters from the field of logistics <b>37</b> are also included and allow, for example, the temporally efficient handling or the available materials to be included in the training of the training ML algorithm.</p><p id="p-0115" num="0114">An adjustment of CNC programming based on an ML algorithm while rectifying the usage environment may result, for example, in many identical parts being automatically manufactured with the greatest possible process reliability for a customer A, wherein the same part is manufactured using the same machine tool for a customer B in a small quantity, but in a manner optimized for each individual component. The concepts proposed herein therefore make it possible to adapt the ML algorithm differently depending on the customer requirement. For example, on the basis of weights predefined by the manufacturer in an ML algorithm in the form of a neural network, the weights are adapted in a customer-specific manner.</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates, in the upper section, the structure of a user-specific training database (&#x201c;knowledge base&#x201d;) and, in the lower section, the determined usage-environment-specific parameters of ML algorithms.</p><p id="p-0117" num="0116">During operation of the manufacturing plant <b>1</b> disclosed herein, usage-environment-based continued learning of the ML algorithm <b>11</b> is carried out&#x2014;proceeding from an ML algorithm <b>11</b> trained by the manufacturer. For example, component data sets are continuously received by the CAM system <b>7</b>B, wherein the component data sets represent digital design models of components. The CAM system <b>7</b>B generates control data sets from the component data sets. <figref idref="DRAWINGS">FIG. <b>2</b></figref> indicates a component data set <b>13</b>A, for which the ML algorithm <b>11</b> generates a control data set <b>17</b>A. The component data set <b>13</b>A and the control data set <b>17</b>A may be stored as part of an additional training data set <b>31</b>A in the training database <b>119</b>. Furthermore, the machine programmer <b>8</b>B, for example, can modify the control data set <b>17</b>A, thus resulting in an adapted (computerized numerical) control data set <b>17</b>A&#x2032;. This can also be stored, together with the component data set <b>13</b>A, as an additional training data set <b>31</b>A&#x2032; in the training database <b>119</b>. This makes it possible to set up a comprehensive training database for a usage environment. The training database <b>119</b> may preferably be available from the manufacturer since the hardware and software infrastructure already available there can also be used to optimize the usage environment of the AI. For example, the usage environment can be optimized at intervals by predefined further additional training data sets.</p><p id="p-0118" num="0117">The lower section of <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates how the knowledge database <b>119</b> can be used to individually respond to/process individual problem enquiries using ML algorithms when programming control data sets. For example, a plurality of ML algorithms can be used for the problem of allocating micro-joints when cutting out components using a laser cutting machine. An ML algorithm <b>111</b>A is therefore provided for assessing whether or not micro-joints are needed during a process of cutting out a component, an ML algorithm <b>111</b>B determines the number of necessary micro-joints and an ML algorithm <b>111</b>C is used to assess positions of the micro-joints. With the aid of the concepts proposed herein, the parameters Pi_A, Pi_B, Pi_C can now be continuously adapted in a customer-specific manner for a specific usage environment with the aid of appropriate training algorithms and the training database <b>119</b>. Usage-environment-specific adaptation with respect to the allocation of micro-joints may make it possible, for example, to reduce errors to less than 1-2%, for example less than 0.5%.</p><p id="p-0119" num="0118">A further example of a usage-environment-specific adaptation relates to the chopping of residual materials (the sheet skeleton) in laser cutting processes, for example.</p><p id="p-0120" num="0119">The additional training data sets are then each a data item for the ML algorithms. In this case, different subgroups of the entries in the additional training data sets can be used for the various ML algorithms. For example, a contour profile of the component, the number and position of corners, material properties such as weight and sheet metal thickness etc. can be included in a data item of said ML algorithms as component-specific parameters. Furthermore, machine parameters such as the current program version, on which the machining of a is based, the age of the machining unit and the embodiment variant of the machine tool may be included.</p><p id="p-0121" num="0120">In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the various ML algorithms <b>111</b>A, <b>111</b>B, <b>111</b>C were illustrated separately, but may also be combined together in a comprehensive ML algorithm which then models, for example, not only the setting of micro-joints but also the entire cutting process and moreover any further machining processes such as bending and welding in a.</p><p id="p-0122" num="0121">It is also pointed out that AI for machine tools can usually be trained to a sufficient extent only by the manufacturer since the latter can collect the various machining possibilities during the test processes in a knowledge database. On the other hand, however, only the customer can make his specific demands on the AI in a certain usage environment. The concepts proposed herein for structuring interaction between the usage environment <b>3</b> and the ML training environment <b>5</b> for optimizing AI now allow the AI provided in a manufacturer-specific manner to continue to learn in a customer-specific manner.</p><p id="p-0123" num="0122">A computer-implemented method implemented according to the concepts presented herein is described below with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> from the point of view of a processor of a (CAD) CAM system. The method may be carried out by at least one computer (processor) and may create computerized numerical control data sets for controlling machine tools in a usage environment, wherein the control data sets are specifically matched to this usage environment. The control data sets may be read in from associated machine tools in this usage environment for machining starting materials, in particular for machining metal or sheet metal parts using separating, shaping and/or joining manufacturing methods.</p><p id="p-0124" num="0123">In step <b>201</b>, a first component data set representing a digital design model of a first component is received (read in) in a processor of the at least one computer of the (CAD) CAM system.</p><p id="p-0125" num="0124">In step <b>203</b>, the processor creates a first computerized numerical control data set for the first component data set using control program generation software <b>204</b>. The control program generation software <b>204</b> running in the processor comprises an assessment routine <b>204</b>A which uses a trained machine learning algorithm (ML algorithm). The ML algorithm has a plurality of settable parameters (for example optimized/trained weights) which have been set to starting values of the parameters by training a machine learning training algorithm. In this respect, the model of the training algorithm corresponds to the model of the trained ML algorithm. The training algorithm accordingly comprises the same program structure as the ML algorithm. The training algorithm is usually installed on a computer system belonging to the manufacturer of the associated machine tool. The computer system belonging to the manufacturer provides a high computing power in order to quickly carry out the large number of training steps. The ML algorithm can generally also be used for training if it is installed on an accordingly suitable computer system and is accordingly configured to also be able to be used for training sequences.</p><p id="p-0126" num="0125">In step <b>205</b>, the processor compiles a first additional training data set from the component data set and the created computerized numerical control data set. In step <b>207</b>, the processor outputs the first additional training data set to a usage-environment-specific training database. The training database is installed, for example, as part of the computer system of the training algorithm. It may be stored, for example, on a storage medium of the computer system belonging to the manufacturer. In this case too, it is the case that the training database for training which is carried out by the processor of a (CAD) CAM system can be stored on a storage medium in the usage environment.</p><p id="p-0127" num="0126">Usage-environment-specific values for the parameters of the ML algorithm are determined by training the machine learning training algorithm using the usage-environment-specific training database. The usage-environment-specific values are transmitted to the processor, and the ML algorithm is updated in step <b>209</b> by setting usage-environment-specific values for the parameters.</p><p id="p-0128" num="0127">The processor then receives a second component data set representing a digital design model of a second component in step <b>211</b>. In step <b>213</b>, the processor creates a second computerized numerical control data set for the second component data set by using the control program generation software <b>204</b> and running through the assessment routine <b>204</b>A. The ML algorithm whose parameters have been updated is used in this case.</p><p id="p-0129" num="0128">When creating control data sets, a machine programmer can set the input parameters via a programming interface of the control program generation software. The machine programmer may also possibly check and modify the control data sets created by the control program generation software <b>204</b>.</p><p id="p-0130" num="0129">For example, the first computerized numerical control data set is adapted by the machine programmer in step <b>203</b>A. An adapted first computerized numerical control data set is accordingly created. In step <b>205</b>A, the processor can now create a further additional training data set from the adapted computerized numerical control data set and the first component data set and can output it in order to extend the usage-environment-specific training database (step <b>207</b>A). In step <b>209</b>A, the processor can update the ML algorithm by setting usage-environment-specific values for the parameters, wherein the usage-environment-specific values were determined by training the machine learning training algorithm in the usage-environment-specific training database which has been extended by the further additional training data set.</p><p id="p-0131" num="0130">In a similar manner, the second computerized numerical control data set can also be adapted by a machine programmer in a step <b>213</b>A in order to create an adapted second computerized numerical control data set. Additional data can again be created and output (illustrated by the dashed arrow, also see steps <b>205</b>A to <b>209</b>A).</p><p id="p-0132" num="0131">Computerized numerical control data sets can generally be adapted:</p><p id="p-0133" num="0132">by a designer by modifying component data sets and further data entries relating to a component;</p><p id="p-0134" num="0133">by a machine programmer after simulating the control of the machine tool using a simulation program of the CAM system for the manufacturing of the component, wherein the simulation program simulates the manufacturing using the computerized numerical control data set;</p><p id="p-0135" num="0134">by a machine tool operator after reading the computerized numerical control data set into a numerical machine controller of the machine tool and converting the computerized numerical control data set into a plurality of control routines, in particular after machining a starting material using a machining unit of the machine tool by controlling the machining unit using the control routines.</p><p id="p-0136" num="0135">This is indicated in step <b>215</b> in which the processor generally compiles further additional training data sets from adapted computerized numerical control data sets and associated component data sets and outputs them in step <b>217</b> in order to extend the usage-environment-specific training database.</p><p id="p-0137" num="0136">Further training of the machine learning training algorithm can be carried out in the usage-environment-specific training database which has been extended by the additional training data sets. In a step <b>219</b>, the processor updates the ML algorithm by setting the resulting usage-environment-specific values for the parameters.</p><p id="p-0138" num="0137">Workpiece machining may be carried out, in principle, using any of the control data sets which have been generated.</p><p id="p-0139" num="0138">With regard to the (periodic) updating of the ML algorithm which is carried out again and again on the basis of new additional data sets, <figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates training of the machine learning training algorithm in the usage-environment-specific training database in order to generate the usage-environment-specific values of the parameters as a separate step <b>221</b>. The training can be carried out by a separate training computer system or using the processor of a (CAD) CAM system. The usage-environment-specific values of the parameters which are obtained are accordingly transmitted to the control program generation software <b>204</b> in order to update (step <b>223</b>) the ML algorithm using the usage-environment-specific values of the parameters. The usage-environment-specific training database may store at least one additional training data set, which traces back to a computerized numerical control data set created in the usage environment, and optionally one or more training data sets which were provided independently of the usage environment and, in particular, independently of a manufacturer of the machine tool.</p><p id="p-0140" num="0139">In summary, the ML algorithm/an ML model is used in a plurality of phases:</p><p id="p-0141" num="0140">1. (First) training phase: The manufacturer of machine tools trains an ML model on powerful computer systems. The ML model is trained using data from a knowledge database, in particular using data from the manufacturer. The parameters/weights of the ML model are optimized/improved in the training phase.</p><p id="p-0142" num="0141">2. Usage phase: The finished and trained ML model (provided by the manufacturer) is used in a customer's production environment, for example is installed on a computer system belonging to the customer. This allows the customer to calculate manufacturing predictions such as classifications, regressions or clusterings within a few milliseconds. New data for the knowledge database are collected in a parallel manner in the usage phase. Said data may be obtained in the various production steps (planning, programming, machining).</p><p id="p-0143" num="0142">3. Update phase: The ML model is retrained at periodic intervals. That is to say, parameters/weights of the ML model are retrained again and again in further training phases. After successful training, the parameters/weights are updated on the customer's computer system and a further usage phase follows.</p><p id="p-0144" num="0143">In this cycle of a system which continues to learn, the ML model collects more and more knowledge over time and therefore becomes continually better. An update can now be carried out for all customers or specifically for a user group or even for an individual customer. In the latter case, the ML model can be adjusted, in particular, to a customer if the knowledge database is extended primarily with data relating to this customer.</p><p id="p-0145" num="0144">The sequence for using an ML algorithm, as explained above by way of example with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, is related to two stages of implementing features of the present disclosure. This is explained below with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0146" num="0145">The first stage <b>301</b> is conventional (manual) operation of a machine tool, wherein conventional operation preferably already incorporates an ML model. Conventional operation is a generic training stage in which a usage-environment-specific training database (knowledge database <b>303</b>) is set up. If an ML model is incorporated in the operation of the machine tool, it is possible to carry out usage-environment-specific training <b>221</b> of the ML model on the basis of component programs. In the first stage <b>301</b>, conventional (manual) operation comprises the following steps:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0146">1. Component design within the scope of a CAD system <b>305</b> with an operator interface:</li></ul></p><p id="p-0147" num="0147">A designer designs a component and generates a corresponding component data set (or a component data set of a previously designed component is imported). Information relating to the component is collected and transmitted to the knowledge database <b>303</b>. The information comprises features <b>307</b> of the component and, in particular, features of contours of the component. The information also comprises, for example, details <b>309</b> of process-critical contours identified by the designer.<ul id="ul0002" list-style="none">    <li id="ul0002-0001" num="0148">2. Component programming within the scope of a CAM system <b>311</b> with an operator interface:</li></ul></p><p id="p-0148" num="0149">The programming is carried out as automatically as possible. In this case, many individual steps for the machining are calculated automatically/autonomously, for example a cutting sequence, piercing points, types of piercing, approach strategies, micro joints, clearance cuts, loading and unloading strategies, collision avoidance, contour sizes, tools used, tool changes, nesting, measurement cycles, time calculation, cost calculation, etc. The individual steps form the control program (component program) belonging to the component.</p><p id="p-0149" num="0150">During programming, at least some of the calculations can be carried out by AI models, in particular using machine learning algorithms (data-driven). The algorithm is intended to generate a production-reliable, fast and high-quality program with the associated process data for manufacturing the component. For this purpose, control program generation software comprises an assessment routine <b>313</b> which is based on one or more ML models <b>315</b> (machine learning algorithms with settable parameters) and is loaded into a processor of the CAM system <b>311</b>. For example, the ML model <b>315</b> responds to a request <b>317</b> for a process-critical contour with features from the CAD system <b>305</b> and/or the CAM system <b>311</b>, which is made during programming. For example, one or more ML models <b>315</b> identify one or more process-critical contours and output a respective appropriate solution <b>319</b> to the CAM system <b>311</b>, which solutions are then taken into account when creating the control program.</p><p id="p-0150" num="0151">The component program created by the algorithm is manually accepted by a machine programmer. The latter can simulate, adapt, change and optimize the complete component manufacturing. Each individual change and the final component program (final with respect to the programming) are now transmitted again as information to the knowledge database <b>303</b>. The information comprises features <b>307</b>&#x2032; of the component and, in particular, features of contours of the component. The information also comprises details <b>309</b>&#x2032; of process-critical contours identified by the CAM system <b>311</b> during programming or by the programmer.<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0152">3. Manufacturing <b>321</b> with an operator interface of the machine tool:</li></ul></p><p id="p-0151" num="0153">The final component program (control program) is now executed on the sheet metal working machine, for example. In this case, a machine operator now again has the possibility of revising the program. That is to say, the machine operator adapts the program in order to be able to produce the component more successfully in the usage environment thereof. Reasons may be collisions which have occurred in this case, negative feedback from the machine tool in the form of sensors, machining parameters or product-driven optimizations. Each individual change and the final component program (final with respect to the manufacturing which is ultimately carried out) are transmitted to the knowledge database.</p><p id="p-0152" num="0154">Information relating to the manufactured component is collected and transmitted to the knowledge database <b>303</b>. The information comprises features <b>307</b>&#x2033; of the component and, in particular, features of contours of the component. The information also comprises, for example, details <b>309</b>&#x2033; of process-critical contours identified by the designer.</p><p id="p-0153" num="0155">The conventional (manual) operation described results in the knowledge database <b>303</b> being set up and continuously extended (taking into account the usage environment). All data from the CAD system <b>305</b>, the CAM system <b>311</b> and the machine (manufacturing <b>321</b>) can be connected using a unique identification number for a component. It is therefore possible to identify whether a user has made an adaptation in any of these systems. In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the arrows leading to the knowledge database <b>303</b> illustrate transmissions of information/data (data streams) which belong to a component/component program and are possibly adapted by an operator&#x2014;schematically indicated in <figref idref="DRAWINGS">FIG. <b>4</b></figref> - in the various phases of generating CAD data, CAM control programs and final machine routines.</p><p id="p-0154" num="0156"><figref idref="DRAWINGS">FIG. <b>4</b></figref> also indicates how usage-environment-specific training <b>221</b> of a plurality of ML models (update phase <b>323</b> discussed) is carried out using the knowledge database <b>303</b>. For example, a separate ML model <b>315</b> can be trained for each type of process-critical contour (for example clearance cuts and micro-joints). As a result of the training, parameters of the ML models <b>315</b> are updated (dashed arrows <b>324</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>).</p><p id="p-0155" num="0157">Two improvements, inter alia, can be achieved using the knowledge database <b>303</b> set up in this manner: On the one hand, the optimum machine process sequence can be delivered to customers and, on the other hand, the customer's behavior can be learnt and used by the algorithm when creating component programs. The aim is therefore to learn patterns of component data and component programs (which are also referred to together as additional training data sets herein) in a large volume of data and to successfully automate a large number of different products. This pattern recognition with the aid of the ML algorithm can now be used to optimize the individual process steps of component programming.</p><p id="p-0156" num="0158">In the second (final) stage of implementing features of the present disclosure (autonomous operation <b>325</b>), as indicated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the result is a fully autonomous iterative sequence when programming component programs. This comprises an &#x201c;autonomous&#x201d; step 2&#x2032; of programming components within the scope of an autonomous CAM system <b>311</b>&#x2032; without the intervention of an operator (since the system optimizes itself).</p><p id="p-0157" num="0159">During component design <b>327</b> using a CAD system <b>305</b>&#x2032;, features and operator interactions relating to a component are transmitted to the knowledge database <b>303</b> in order to optimize ML models <b>315</b> of autonomous operation <b>325</b> on the basis thereof. Information relating to the component is transferred to the autonomous CAM system <b>311</b>&#x2032;. When programming a control program using the autonomous CAM system <b>311</b>&#x2032;, a request <b>317</b>&#x2032; for process-critical contours with features from the CAD system <b>305</b>&#x2032; and the CAM system <b>311</b>&#x2032; can be output to an assessment routine <b>313</b>. The assessment routine <b>313</b> runs on its own processor, for example, as part of a cloud solution (indicated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>) or on a processor of the autonomous CAM system <b>311</b>&#x2032;. One or more ML models <b>315</b> identify one or more process-critical contours and output a respective appropriate solution <b>319</b>&#x2032; which is taken into account by the processor when creating a control program. For example, clearance cuts and micro-joints are automatically positioned. The autonomous CAM system <b>311</b>&#x2032; outputs the component program (control program) to the manufacturing <b>321</b>. Features and manual interventions are output, for example, by an operator interface <b>329</b> of the machine tool in order to extend the knowledge database <b>303</b> and to optimize the ML models <b>315</b> in the long term.</p><p id="p-0158" num="0160">The individual ML algorithms and the component programming overall are improved by repeating steps 1, 2&#x2032; (without the involvement of persons) and <b>3</b> and the update phase <b>323</b>, with the result that autonomous production is enabled, specifically independently of the design and the machine tool used.</p><p id="p-0159" num="0161">An ML algorithm can generally be in the form of a neural network. For example, the neural network may contain a plurality of neural core network layers each defined by a set of parameters (for example parameters Pi) as weights. Updating step <b>209</b> then comprises updating the neural network by assigning usage-environment-specific values to the parameters of the neural network, wherein the usage-environment-specific values were determined on the basis of the usage-environment-specific training database.</p><p id="p-0160" num="0162">The ML algorithm may also be in the form of an evolutionary algorithm (genetic algorithm), a support vector machine algorithm or an algorithm for automatically inducing a decision tree, for example an ID3 algorithm or a C4.5 algorithm. It then comprises a model which includes the parameters Pi in order to define a decision tree, for example. Updating step <b>209</b> then comprises updating the ML algorithm by assigning usage-environment-specific values to the parameters of the model, wherein the usage-environment-specific values were determined on the basis of the usage-environment-specific training database.</p><p id="p-0161" num="0163">The implementation of machine control based on an ML algorithm, as described herein, may sometimes have the following advantages:</p><p id="p-0162" num="0164">Manufacturing processes, subprocesses and component geometries may be reliably (partially) automated.</p><p id="p-0163" num="0165">ML algorithms may quickly adapt to the market or the customers in a (partially) automated manner.</p><p id="p-0164" num="0166">ML algorithms which were initially created for the entire market are adjusted in a customer-specific manner during use.</p><p id="p-0165" num="0167">Automatic programming assists programmers and machine operators with a very high level of training or a lower level of training.</p><p id="p-0166" num="0168">The approach of using a knowledge database comprising a large amount of data, such as customer adaptations, geometrical descriptions, process data and machine data (log, sensors, etc.) enables various possible uses of ML algorithms, for example in metal and sheet metal machining.</p><p id="p-0167" num="0169">Embodiments of the present disclosure and the functional operations described herein may be implemented in digital electronic circuits, in computer software or computer firmware, in computer hardware, including the structures mentioned herein or similar structures. Embodiments may be implemented as one or more computer programs, that is to say as one or more modules of computer program instructions which are coded for execution by or for controlling the operation of data processing devices and, in particular, machine tool controllers of machine tools.</p><p id="p-0168" num="0170">In this case, the term &#x201c;data processing unit&#x201d; comprises all types of devices, apparatuses and machines for processing data, including, for example, a programmable processor, a computer or a plurality of processors or computers or computer systems. The devices may contain special logic circuits, for example an FPGA (Field Programmable Gate Array) or an ASIC (Application Specific Integrated Circuit). In addition to the hardware, the data processing unit may also contain code which provides an execution environment for the relevant computer program, for example code representing the processor firmware, a database management system, an operating system or a combination of one or more thereof.</p><p id="p-0169" num="0171">Computer programs discussed herein (which can also be referred to as a program, software, a software application, a module, a software module, a script or code) can be written in any form of programming language, including compiled or interpreted languages, and can be used in any form, including as independent programs or as modules, components, subprograms or other units suitable for use in a computer environment. This relates, in particular, to ML algorithms which are implemented as a computer program when creating component programs. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a part of a file containing other programs or data, for example one or more scripts or parameters of the program, or in a single file assigned to the relevant program or in a plurality of coordinated files, for example files which store one or more modules, subprograms or code parts. A computer program can be used in such a manner that it is executed on one computer or on a plurality of computers which are situated at one location or are distributed over a plurality of locations and are connected to one another by means of a communication network.</p><p id="p-0170" num="0172">The methods, processes and logical sequences described herein can be executed by one or more programmable computers which execute one or more computer programs in order to perform functions by working with input data and generating outputs. The processes and logical sequences can also be executed by special logic circuits, for example an FPGA or an ASIC, and the devices may also be implemented as such.</p><p id="p-0171" num="0173">Computer systems which are suitable for executing a computer program may be based, for example, on general or special microprocessors or on both or on any other type of central computing units. A central computing unit generally receives instructions and data from a read-only memory or a RAM memory or both. The important elements of a computer system are a computing unit for executing instructions and one or more storage devices for storing instructions and data as well as data inputs and data outputs, that is to say data interfaces which can be used to receive and output data (digital information).</p><p id="p-0172" num="0174">A computer system generally also contains one or more devices for storing data or is operatively coupled via interfaces in order to receive data from one or more mass storage devices or to transmit data to the latter, or both. However, a computer need not have such devices. In addition, a computer may be embedded in another device, for example in a machine tool, a CAD system, a CAM system, a CAD/CAM system. The computer-readable media suitable for storing computer program instructions and data include non-volatile memories, including, for example, semiconductor storage devices, for example EPROM, EEPROM and flash memory devices. A processor and a memory can be supplemented with special logic circuits or integrated into the latter.</p><p id="p-0173" num="0175">In order to enable interaction with an operator of the computer system, it is possible to use display devices (for displaying information) and input devices (for inputting information), such as a keyboard and a mouse, which are connected to the processor via data interfaces.</p><p id="p-0174" num="0176">Embodiments of the concepts disclosed herein may be implemented in a computer system containing a back-end component, for example as a data server, or a middleware component, for example an application server, or a front-end component, for example a client computer with a graphical user interface or a web browser, via which a user can interact with an implementation of the programs described herein, or any combination of one or more back-end, middleware or front-end components of this type. The components of the system may be connected to one another by means of any form or any medium of digital data communication, for example a communication network. Examples of communication networks are a LAN (&#x201c;local area network&#x201d;) and a WAN (&#x201c;wide area network&#x201d;), for example the Internet. The computer system may comprise clients and servers, for example. A client and a server are generally set up remotely from one another and generally interact via a communication network. The relationship between the client and the server is produced by computer programs which run on the respective computers and are in a client-server relationship with respect to one another.</p><p id="p-0175" num="0177">It is explicitly emphasized that all features disclosed in the description and/or the claims should be regarded as separate and independent of one another for the purpose of the original disclosure and likewise for the purpose of restricting the claimed invention independently of the combinations of features in the embodiments and/or the claims. It is explicitly stated that all range indications or indications of groups of units disclose any possible intermediate value or subgroup of units for the purpose of the original disclosure and likewise for the purpose of restricting the claimed invention, in particular also as a limit of a range indication.</p><p id="p-0176" num="0178">While subject matter of the present disclosure has been illustrated and described in detail in the drawings and foregoing description, such illustration and description are to be considered illustrative or exemplary and not restrictive. Any statement made herein characterizing the invention is also to be considered illustrative or exemplary and not restrictive as the invention is defined by the claims. It will be understood that changes and modifications may be made, by those of ordinary skill in the art, within the scope of the following claims, which may include any combination of features from different embodiments described above.</p><p id="p-0177" num="0179">The terms used in the claims should be construed to have the broadest reasonable interpretation consistent with the foregoing description. For example, the use of the article &#x201c;a&#x201d; or &#x201c;the&#x201d; in introducing an element should not be interpreted as being exclusive of a plurality of elements. Likewise, the recitation of &#x201c;or&#x201d; should be interpreted as being inclusive, such that the recitation of &#x201c;A or B&#x201d; is not exclusive of &#x201c;A and B,&#x201d; unless it is clear from the context or the foregoing description that only one of A and B is intended. Further, the recitation of &#x201c;at least one of A, B and C&#x201d; should be interpreted as one or more of a group of elements consisting of A, B and C, and should not be interpreted as requiring at least one of each of the listed elements A, B and C, regardless of whether A, B and C are related as categories or otherwise. Moreover, the recitation of &#x201c;A, B and/or C&#x201d; or &#x201c;at least one of A, B or C&#x201d; should be interpreted as including any singular entity from the listed elements, e.g., A, any subset from the listed elements, e.g., A and B, or the entire list of elements A, B and C.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method, which is carried out by one or more computers, for creating computerized numerical control data sets for controlling machine tools in a usage environment, the control data sets being read in from associated machine tools for machining starting materials, the method comprising:<claim-text>receiving a first component data set representing a digital design model of a first component;</claim-text><claim-text>creating a first computerized numerical control data set for the first component data set using control program generation software, wherein the control program generation software comprises an assessment routine which uses a trained machine learning algorithm with settable parameters, wherein starting values of the parameters were determined by training a machine learning training algorithm which corresponds to the trained machine learning algorithm;</claim-text><claim-text>compiling a first additional training data set from the component data set and the created computerized numerical control data set, and outputting the first additional training data set to a usage-environment-specific training database;</claim-text><claim-text>updating the machine learning algorithm by setting usage-environment-specific values for the parameters, wherein the usage-environment-specific values were determined by training the machine learning training algorithm using the usage-environment-specific training database;</claim-text><claim-text>receiving a second component data set representing a digital design model of a second component; and</claim-text><claim-text>creating a second computerized numerical control data set for the second component data set by using the control program generation software and running through the assessment routine, wherein the machine learning algorithm whose parameters have been updated is used.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method further comprising:<claim-text>a machine programmer adapting the first computerized numerical control data set in order to create an adapted first computerized numerical control data set;</claim-text><claim-text>compiling a further additional training data set from the adapted computerized numerical control data set and the first component data set, and outputting the further additional training data set for extending the usage-environment-specific training database; and</claim-text><claim-text>updating the machine learning algorithm by setting usage-environment-specific values for the parameters, wherein the usage-environment-specific values were determined by training the machine learning training algorithm in the usage-environment-specific training database which has been extended by the further additional training data set.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method further comprising:<claim-text>a machine programmer adapting the second computerized numerical control data set in order to create an adapted second computerized numerical control data set;</claim-text><claim-text>compiling a further additional training data set from the adapted computerized numerical control data set and the second component data set, and outputting the further additional training data set for extending the usage-environment-specific training database; and</claim-text><claim-text>updating the machine learning algorithm by setting usage-environment-specific values for the parameters, wherein the usage-environment-specific values were determined by training the machine learning training algorithm in the usage-environment-specific training database which has been extended by the further additional training data set.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the second computerized numerical control data set is adapted:<claim-text>by a designer by modifying the second component data set;</claim-text><claim-text>by a machine programmer after simulating the control of the machine tool using a simulation program for the manufacturing of the component, wherein the simulation program simulates the manufacturing using the second computerized numerical control data set; and/or</claim-text><claim-text>by a machine tool operator after reading the second computerized numerical control data set into a numerical machine controller of the machine tool and converting the second computerized numerical control data set into a plurality of control routines.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method further comprising:<claim-text>training a machine learning training algorithm corresponding to the trained machine learning algorithm in the usage-environment-specific training database to generate the usage-environment-specific values of the parameters; and</claim-text><claim-text>transmitting the usage-environment-specific values of the parameters to the control program generation software in order to update the machine learning algorithm with the usage-environment-specific values of the parameters.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the usage-environment-specific training database stores:<claim-text>at least one additional training data set which traces back to a computerized numerical control data set which was created in the usage environment.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the additional training data sets comprise:<claim-text>at least one geometrical definition of a section of the component, and</claim-text><claim-text>at least one manufacturing process parameter which defines machining using the machine tool assigned to the section.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the additional training data sets comprise:<claim-text>machine parameters assigned to the machine tool,</claim-text><claim-text>user parameters assigned to a user of the machine tool, and</claim-text><claim-text>process sequence parameters assigned to the sequence of a machining process.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the additional training data sets comprise data from one or more of the following fields of use and control boundary conditions:<claim-text>a target group identification relating to a customer;</claim-text><claim-text>customer-specific machining profiles, comprising parameters which map a machining process to a machining profile;</claim-text><claim-text>autonomous functions of a machine tool with parameters which are independently taken into account by a machine tool;</claim-text><claim-text>selection of a technology table;</claim-text><claim-text>optimum machine selection;</claim-text><claim-text>cutting time; or</claim-text><claim-text>production costs.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine learning algorithm is a neural network and comprises a plurality of neural core network layers, each defined by a set of parameters as weights, and wherein the updating step comprises:<claim-text>updating the neural network by assigning usage-environment-specific values to the parameters, wherein the usage-environment-specific values were determined on the basis of the usage-environment-specific training database.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine learning algorithm is an evolutionary algorithm, a support vector machine algorithm, or an algorithm for automatically inducing a decision tree, which comprises a model which includes the parameters, and wherein the updating step comprises:<claim-text>updating the evolutionary algorithm, the support vector machine algorithm or the algorithm for automatically inducing a decision tree by assigning usage-environment-specific values to the parameters, wherein the usage-environment-specific values were determined on the basis of the usage-environment-specific training database.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A computer-aided design or computer-aided manufacturing (CAD/CAM) system for creating or receiving component data sets each representing a digital design model of a component and for creating computerized numerical control data sets for the component data sets, the control data sets being readable in from associated machine tools for machining starting materials, the CAD/CAM system comprising:<claim-text>at least one computer-readable storage medium configured to store the component data sets and the control data sets;</claim-text><claim-text>a processor which has loaded control program generation software with a trained machine learning algorithm into its main memory, the trained machine learning algorithm being configured to be used in an assessment routine of the control program generation software, being configured with settable parameters, and being configured such that the processor carries out the method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> and creates computerized numerical control data sets for controlling at least one machine tool;</claim-text><claim-text>a data input configured to receive usage-environment-specific values for the parameters of the trained machine learning algorithm;</claim-text><claim-text>a control data output configured to output the created computerized numerical control data sets to the at least one machine tool; and</claim-text><claim-text>at least one training data output configured to output additional training data sets which are assigned to the usage environment and are output when the processor is carrying out the method.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A manufacturing plant for manufacturing components according to component data sets each representing a digital design model of a component, the manufacturing plant comprising:<claim-text>the CAD/CAM system as claimed in <claim-ref idref="CLM-00012">claim 12</claim-ref> for creating computerized numerical control data sets for the component data sets; and</claim-text><claim-text>a machine tool having a numerical machine controller and a machining unit, wherein the machine tool is used in a specific usage environment and the numerical machine controller receives the computerized numerical control data sets created by the CAD/CAM system and converts them into control routines which are used to control the machining unit to machine a workpiece for producing components.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The manufacturing plant as claimed in <claim-ref idref="CLM-00013">claim 13</claim-ref>, also having a training computer system for determining values for settable parameters of a machine learning algorithm which is used in an assessment routine of control program generation software in the CAD/CAM system, wherein the training computer system comprises:<claim-text>a computer-readable usage-environment-specific training database for storing additional training data sets, wherein the additional training data sets are output by the CAD/CAM system,</claim-text><claim-text>a processor which has loaded a machine learning training algorithm, which corresponds to the trained machine learning algorithm used in the CAD/CAM system, and is configured to train the machine learning training algorithm on the basis of the usage-environment-specific training database and to output values for the parameters to the CAD/CAM system for use in the trained machine learning algorithm used in the CAD/CAM system.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A machine tool comprising;<claim-text>a numerical machine controller; and</claim-text><claim-text>a machining unit,</claim-text><claim-text>wherein the machine tool is configured to be used in a specific usage environment,</claim-text><claim-text>wherein the numerical machine controller is configured to receive computerized numerical control data sets and to convert them into control routines which are configured to be used to control the machining unit to machine a workpiece,</claim-text><claim-text>wherein the machine tool further comprises:<claim-text>a computer-readable storage medium configured to store the control data sets and component data sets on which the control data sets are based;</claim-text><claim-text>a processor which is configured to generate the control routines from the control data sets, wherein a computerized numerical control data set is configured to be modified into a changed control data set by a machine tool operator of the machine tool or by a trained machine learning algorithm loaded by the processor, from which changed control data set the control routines are generated, and wherein the processor is also configured to compile an additional training data set from the changed control data set and the associated component data set assigned to the usage environment; and</claim-text><claim-text>a training data output configured to output the additional training data set to a usage-environment-specific training database.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the usage-environment-specific training database further stores one or more training data sets which were provided independently of the usage environment and independently of a manufacturer of the machine tool.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-implemented method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the parameters which are independently taken into account by the machine tool such comprise an approach lug, a contour size, an injection circuit, a cutting sequence, a measurement point, a measurement cycle, or a tool change.</claim-text></claim></claims></us-patent-application>