<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004900A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004900</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17230776</doc-number><date>20210414</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0481</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>06313</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04815</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>06316</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>103</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEM AND METHOD FOR 3 DIMENSIONAL VISUALIZATION AND INTERACTION WITH PROJECT MANAGEMENT TICKETS</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63168820</doc-number><date>20210331</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>F3Systems Limited</orgname><address><city>London</city><country>GB</country></address></addressbook><residence><country>GB</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Gleave</last-name><first-name>Gavin</first-name><address><city>London</city><country>GB</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>F3Systems Limited</orgname><role>03</role><address><city>London</city><country>GB</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A computer system and process is described to alleviate the complexity of visualizing projects that are comprised of myriad inter-dependent tasks by using a 3D visualization technique that utilizes the hierarchical nature of the task data that defines a project in order determine the visualized objects and to permit a user to interact with the visual objects.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="158.83mm" wi="156.72mm" file="US20230004900A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="166.37mm" wi="158.75mm" file="US20230004900A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="185.59mm" wi="149.18mm" file="US20230004900A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="171.87mm" wi="168.57mm" file="US20230004900A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="168.83mm" wi="168.66mm" file="US20230004900A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="118.19mm" wi="127.85mm" file="US20230004900A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="112.01mm" wi="126.41mm" file="US20230004900A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="192.96mm" wi="39.71mm" file="US20230004900A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="155.02mm" wi="168.57mm" file="US20230004900A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="167.05mm" wi="168.57mm" file="US20230004900A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="160.53mm" wi="168.57mm" file="US20230004900A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="160.10mm" wi="168.57mm" file="US20230004900A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="170.77mm" wi="168.57mm" file="US20230004900A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="215.82mm" wi="168.57mm" file="US20230004900A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="250.70mm" wi="176.11mm" file="US20230004900A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">PRIORITY CLAIM</heading><p id="p-0002" num="0001">This is a utility patent application that claims the benefit of U.S. Prov. Pat. App. No. 63/168,820 filed on Mar. 31, 2021. This application hereby incorporates by reference the patent application titled &#x201c;SYSTEM AND METHOD FOR AUTOMATIC EVALUATION OF PROJECT MANAGEMENT TICKETS&#x201d; filed on Mar. 31, 2021, U.S. Prov. App. No. 63/168,782 and its continuing utility application U.S. patent application Ser. No. 17/230,707 filed on Apr. 14, 2021 and the patent application titled &#x201c;SYSTEM AND METHOD FOR TRACKING PROJECT TASKS IN REAL TIME&#x201d; filed on Mar. 31, 2021 as U.S. Prov. App. No. 63/168,761 attorney docket number F3_1 and its continuing utility application, U.S. patent application Ser. No. 17/230,629 filed on Apr. 14, 2021, for all that they teach.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF INVENTION AND BACKGROUND</heading><p id="p-0003" num="0002">This invention relates to computer processes and data structures that define an environment for monitoring tasks that together constitute a project. In one example application, the project may be the construction of a building. To construct a building, many tasks must be completed. Furthermore, some tasks are dependent on external inputs while other tasks are dependent on the output of earlier tasks. In the former case, there may be a task that calls for a government inspection of a building foundation before wall framing is erected. In the latter case, a task of hiring a team of construction workers may depend on the timing of completion of the inspection task. The inter connection of these task processes can quickly become highly complex, and even more so if there is more than one project. Yet some of these tasks may be specific to the project. For example, a building next to a mass transit location may have additional tasks that a house built in the country does not. For this reason, there is a need for a system that can define projects, define tasks and define their interdependencies on a customized basis and track the progress of the tasks in order to evaluate the progress of the project.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">The invention includes a set of data structures that define attributes of a project and its sub-components, which comprise tasks and further, various users related to those tasks. The inter-relation of tasks may be defined by a workflow. The workflow may be defined by a form, which lists attributes of the workflow, including specifying sub-tasks, related tasks and dependencies. Once the set of workflows has been defined, an instance of the form may be created, referred to as a ticket, and a specific instance of the task specified. The tickets are stored in a database. As a new task in the project is initiated, a ticket instance of the form representing the task is populated with specific information about that task. A ticket is simply an instance or submission of a form. Processes are then executed on the ticket as it's the ticket that contains the specific data related to the task. The ticket is stored in a database. The status of the project can be determined by querying the database to obtain the status of the tickets. The status of the tickets may determined by analyzing the graph of interconnection of the tickets, where the graph is defined by the workflows specified in the form, where each arc of the graph is defined by the specified task dependencies specified in the corresponding form. The system can access tasks by querying the database. The sequence tasks to query may be determined by following the task dependencies defined in the tickets. By analyzing the conditions of the tasks and their dependencies, the system can determine which tasks may be impeding the completion of the project at a particular point in time. In addition, the system can use the project data structure and its components to locate critical dependencies that call for redefining the workflow in order to alleviate problems. The system can then accept changes to a workflow, and propagate the revisions as revisions to the data structures that define the tasks, and therefore the instances of a ticket and other constituent data structures comprising the project.</p><p id="p-0005" num="0004">The invention generates 3 dimensional visual and interactive display of workflow status in the project as determined by inspecting the graph of the constituent tasks. The 3D diagram represents each project and each 3D component is defined by the data in the workflow graph. Each visual object has a corresponding data structure that defines it. The contents of that data structure are derived from the task data structures that are the constituents of the project workflow that the visual object corresponds to. The data structure may be hierarchical such that each larger visual block and its data structure refers to has sub-blocks under it that have their own. The rendering engine then displays the visual appearance of the 3D diagram by traversing the graph formed by this hierarchy. The data values that are determine by traversing the graph may be used to calculate visual attributes of the graphic object that is rendered. For example, in one embodiment, the dimensions of the block indicating accounts receivable would be defined in the object data structure to be proportional to the amount of the cumulative accounts receivable calculated from the constituent tasks related to that project. The system may define a proportionality constant that may be used in the calculation. This constant may be dependent on how much the user zooms into or out of the apparent graphical region displayed on the computer screen.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">DESCRIPTION OF THE FIGURES</heading><p id="p-0006" num="0005">The headings provided herein are for convenience only and do not necessarily affect the scope or meaning of the claimed invention. In the drawings, the same reference numbers and any acronyms identify elements or acts with the same or similar structure or functionality for ease of understanding and convenience. To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the Figure number in which that element is first introduced (e.g., element <b>101</b> is first introduced and discussed with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref>: Exemplary Dashboard</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref>: Exemplary Summary Dashboard</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref>: Exemplary Summary Dashboard Showcasing Project Portfolio Performance</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> : Exemplary Summary Dashboard Showcasing Project Portfolio</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref>: Exemplary Object Positive Flow</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b></figref>: Exemplary Object Negative Flow</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b></figref>: Exemplary Workflow Canvas Diagram</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>8</b></figref> Exemplary Summary Dashboard</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>9</b></figref> Exemplary Summary Dashboard Showing Returns</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>10</b></figref> Exemplary Summary Dashboard Showing High Risk Items</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>11</b></figref> Exemplary Summary Dashboard Showing Risk Trends</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>12</b></figref> Exemplary Summary Dashboard Showing Map</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>13</b></figref> Exemplary Summary Dashboard</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>14</b></figref> Exemplary Workflow</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0021" num="0020">Various examples of the invention will now be described. The following description provides specific details for a thorough understanding and enabling description of these examples. One skilled in the relevant art will understand, however, that the invention may be practiced without many of these details. Likewise, one skilled in the relevant art will also understand that the invention can include many other features not described in detail herein. Additionally, some well-known structures or functions may not be shown or described in detail below, so as to avoid unnecessarily obscuring the relevant description. The terminology used below is to be interpreted in its broadest reasonable manner, even though it is being used in conjunction with a detailed description of certain specific examples of the invention. Indeed, certain terms may even be emphasized below; however, any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.</p><p id="p-0022" num="0021">The system embodying the invention is comprised of data structures that define its components. For example, a data structure representing a form is defined by the computer in a representative database schema. The database schema defines the data structure for the other elements of the project as well. An example embodiment is shown in FIGS. 6A-E of F3_1 (U.S. Prov. App. No. 63/1687,61 and FIGS. 5A to 5E of U.S. patent application Ser. No. 17/230,629). In one embodiment, a project can be specified by an identifier, plus other attributes specific to the overall project. In the example of a construction project, the project data structure (application Ser. No. 17/230,629, FIG. 5A) is comprised of an identifier data value and other data values that may include an address, a building permit number, a latitude and longitude, a GPS coordinate and the like. The project ID is used to relate the general project data structure to its related data structures.</p><p id="p-0023" num="0022">The project may utilize defined forms. (application Ser. No. 17/230,629, FIG. 5B) The form has a name, a description and other attributes. The FormID is used to relate other data structures to the form. For example, the roles of various persons can be defined for each form (application Ser. No. 17/230,629 FIG. 5B). Each person is represented by a data structure that includes at least one Form ID they are active with, and a ProjectRoleID that specifies their role with regard to that FormID. A form can be linked to different forms via the form_links table which allows the tickets to link to the related forms at any stage of the workflow. There is also a linked_form_id on the workflow elements table which means that the child form must be created at the specific status.</p><p id="p-0024" num="0023">Further, the FormID can link a form to a workflow data structure (application Ser. No. 17/230,629, FIG. 5B). Workflows contain many &#x201c;elements&#x201d;, where each element behaves differently depending on the type of element. In one embodiment, there are three types of elements. A start element is the starting point of the workflow such that a ticket will always start on this Element. A status element is a stage where a ticket can assigned a status, for example. &#x201c;Pending Authorization.&#x201d; Statuses contain edit field permissions, required fields, a task, an email and/or a form link. A decision element gives the user a choice on which status to move the ticket to, for example the user may be given a choice of moving the ticket to the &#x201c;Pending Authorization&#x201d; status or to move it to &#x201c;Rejected&#x201d; status.</p><p id="p-0025" num="0024">The workflow data structure has a WorkflowID that links it to its constituent WorkflowElements (application Ser. No. 17/230,629, FIG. 5B). That element may includes a specification of its Type and other attributes. Elements are linked in the workflow via the &#x201c;workflow_element_relationships&#x201d; table. Required fields are set within the workflow_element_required_fields, this means the fields must contain information before moving the ticket onto the next status. In addition, a WorkflowElement data structure is comprised of a workflow element Relationship identifier that specifies the workflow relationships for that workflow element. (application Ser. No. 17/230,629, FIG. 5C). The workflow element relationship can define a hierarchy of workflow elements by specifying a parent workflow element or a child workflow element and other attributes, comprised of a decision_value corresponding to that workflow element.</p><p id="p-0026" num="0025">The decision value can represent conditions being met or the task represented by the element in the workflow being satisfied. For example, an element might be inspection of incoming materials for compliance with building codes. However, not all users may have permission to make these changes in the workflow. Authority is given at 2 levels, at the form level which gives the user permission to create or view the ticket and also at workflow level where the user is given permissions to edit specific fields on each status. The decision value may be null until a user whose role as specified in the data structure, inputs data into the system indicating a successful inspection, in which case, the decision value is changed to True. Alternatively, the decision value may be set to False, indicating that the inspection failed. For each workflow element data structure, it can also have permission values associated with users. (application Ser. No. 17/230,629, FIG. 5C). Each permission value can be represented in a data structure that refers to users and project roles that have that permission. (application Ser. No. 17/230,629, FIG. 5C). Field permissions are set within &#x201c;workflow_element_field_permissions&#x201d; table, this allows certain fields to be editable to specific users or roles when a workflow is at a specific status.</p><p id="p-0027" num="0026">A task is the definition of the task on a workflow, this also contains the users and project roles that can be assigned the task and what the deadline is on that task. A task instance is an instance of the task that the users or project roles must action. By actioning a task, the user will be responsible for selecting the next status of the workflow if there is a decision. If there isn't a decision and then the ticket will simply move onto the next status or state condition in the workflow. An email is the definition of the email, this includes the content of the email and also the possible recipients of the email. An email instance is an instance of that email being sent out. An email is only sent out once a ticket reaches the workflow status that contains the email task.</p><p id="p-0028" num="0027">A task is defined by a task instance. (application Ser. No. 17/230,629, FIG. 5D) Each task has an identifier, but also the ticket ID for an instance of the task. This accomplishes distinguishing between data structure relationships for a task definition, and a specific instance of a task in a specific project. The task instance includes attributes that include due dates, sign off, completion dates. The taskID can be used to refer to additional tasks. (application Ser. No. 17/230,629, FIG. 5D). An instance of a task is comprised of its corresponding Workflow Element ID. (application Ser. No. 17/230,629, FIG. 5D) as well as other attributes specific to the task. In one embodiment a task can define a completion action of sending an email to a location defined in the data structure indicating completion of the task (application Ser. No. 17/230,629, FIG. 5D). Further, the tasks data structure can be linked by its identifier to Task User and Task Project Role data structures that specify users and their roles in the task. (application Ser. No. 17/230,629, FIG. 5D). A ticket is a submission of a form that can only be on a single workflow version and this cannot be changed. The authority to create and view tickets is defined within the &#x201c;form_view_users&#x201d;, &#x201c;form_view_project_roles&#x201d;, &#x201c;form_create_users&#x201d; &#x26; &#x201c;form_create_project_roles&#x201d; tables.</p><p id="p-0029" num="0028">The system can be used to automate electronic communication of task status. Electronic communication of status may be accomplished by transmitting data messages in various forms, including text messaging, automated telephone calls, emails, Slack&#x2122; messages, Teams&#x2122; messages and other kinds of electronic communication platforms. In one embodiment, the data messages are distributed by email. With email communication as a non-limiting example, the automatic email of a task result or other action can be further defined by the ticket data structure (application Ser. No. 17/230,629 FIG. 5A, 5E). Each electronic communication may be represented by a data structure. (application Ser. No. 17/230,629, FIG. 5E). That message may include a workflow element ID that it is related to as well as the specific information that is the message. (application Ser. No. 17/230,629, FIG. 5E). The same data structure may be generalized as a message data structure, where an additional attribute indicates the type of messaging medium.</p><p id="p-0030" num="0029">The user of the system may create an instance of a form by using a user interface that presents a form builder (<figref idref="DRAWINGS">FIG. <b>4</b></figref>). This process displays on a computer screen a form design, where the user specifies the features of the form. This may be accomplished by presenting a menu of items that are drag-and-dropped into the display of the form. In the example presented it is a form named &#x201c;Purchase Order&#x201d;. Its attributes include a &#x201c;Supplier Name&#x201d; and other information about the supplier. Other aspects of the order, including the materials, quantities and terms and conditions are also data components that will be presented by the form, and populated in an instance of the data structure for an instance of a purchase order, in this example &#x201c;Order Details&#x201d; and &#x201c;Order Commercial&#x201d; for the commercial terms. A specific ticket is thereby created. For example, a ticket data structure is comprised of its own ticketID but also the projectID it is part of (application Ser. No. 17/230,629, FIG. 5A), the formID that it is an instance of and its workflow dependencies (application Ser. No. 17/230,629, FIG. 5A). These may include an identifier for the current workflow element that the ticket represents and its previous workflow element that it depends on. (application Ser. No. 17/230,629, FIG. 5A).</p><p id="p-0031" num="0030">An instance of the form is used by the system to store the state of its corresponding task. (<figref idref="DRAWINGS">FIG. <b>5</b></figref>). The system can display an instance of a form to present to the user the current status of the form. For example, the Purchase Order is displayed with an indication that &#x201c;14 days overdue&#x201d;, which is information extracted from the graph data structure constituting the workflow.</p><p id="p-0032" num="0031">Each form (<figref idref="DRAWINGS">FIG. <b>4</b></figref>) must have a valid workflow for the form to be visible to the end-user. In order for a workflow to be valid, it must have at least one status connected to the workflow start element.</p><p id="p-0033" num="0000">When the form is created its &#x201c;workflow dependencies&#x201d; may be defined in a drag and drop menu and designed in a graphical user interface where the user can drag and drop graphical elements representing the constituent steps to the workflow and to specify by graphic arcs, the dependencies between these elements. <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The form can be inspected to automatically create a graph of the workflow for the form and the forms within a project, hence the workflow for the project. Part of that has different user authorities relevant for different parts of the form workflow. In a preferred embodiment, a drag &#x26; drop user interface allows the admin user to connect status and decision elements onto the workflow canvas to create the form workflow.</p><p id="p-0034" num="0032">As exemplified in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a workflow is displayed in several steps. First the system loads the data structure representing the workflow from an API endpoint. Second, the data is transformed, separating the start element, statuses and decision elements into corresponding graphical objects. Third, the system renders as a graphic on the user interface the start element, then the statuses and finally the decisions. Each element is placed on the workflow builder user interface in an x, y location, where the values are data elements of the instance of the data structure defining the workflow element. The user may move the graphic representing the element and the X, Y value of the data structure is updated thereby to match the revised X,Y location. In addition, the last step renders the relationships of the statuses, which is how the workflow elements related to each other.</p><p id="p-0035" num="0033">Once a workflow has been published, all subsequent tickets created under that form will adhere to that version of the workflow A form can have multiple workflow versions associated to it, as explained in further embodiments below. An administrator can create &#x26; update forms within an environment. Instances of the form (termed a ticket) can then be created by the end user within the context of a project. Once an admin has built the data structure and layout of the form, they must assign the form a valid workflow version. The workflow version dictates the available statuses, permissions, workflow routes and related forms.</p><heading id="h-0006" level="1">Workflow Relationships</heading><p id="p-0036" num="0034">The form and workflow builder enables administrators to create and update workflow relationships between associated processes. This helps to ensure that project teams collate and link the required data points throughout a pre-defined process.</p><heading id="h-0007" level="2">Relationship Types</heading><p id="p-0037" num="0035">The elements of a workflow for a form can be defined by relationship types. Table 1 is an example of relationships in one embodiment.</p><p id="p-0038" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="84pt" align="left"/><colspec colname="3" colwidth="91pt" align="left"/><thead><row><entry namest="1" nameend="3" rowsep="1">TABLE 1</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row><row><entry>Type</entry><entry>Description</entry><entry>Example</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Parent</entry><entry>A parent is a form that</entry><entry>A purchase order form (FIG.</entry></row><row><entry/><entry>precedes a child form.</entry><entry>1) is a parent for an invoice</entry></row><row><entry/><entry/><entry>form</entry></row><row><entry>Child</entry><entry>A child is a form that</entry><entry>A meeting action form is a</entry></row><row><entry/><entry>succeeds a parent form.</entry><entry>child of a meeting minutes</entry></row><row><entry/><entry/><entry>form.</entry></row><row><entry>Associate</entry><entry>An associate form can be</entry><entry>A project report form can be</entry></row><row><entry/><entry>linked to any other associate.</entry><entry>associated to a meeting</entry></row><row><entry/><entry>The order of creation is not</entry><entry>minutes form.</entry></row><row><entry/><entry>restricted.</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><heading id="h-0008" level="1">Form Link Types</heading><p id="p-0039" num="0036">In another embodiment, there are different types of form links that have different workflow constraints associated with them. In order to progress to the &#x2018;For Approval&#x2019; stage of the below workflow, the user must create an associated child ticket. These are depicted in Table 2.</p><p id="p-0040" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="98pt" align="left"/><thead><row><entry namest="1" nameend="3" rowsep="1">TABLE 2</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row><row><entry>Type</entry><entry>Types</entry><entry>Description</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Workflow form link</entry><entry>Parent or child</entry><entry>A workflow form link is</entry></row><row><entry/><entry/><entry>constrained to a particular</entry></row><row><entry/><entry/><entry>workflow version of a form.</entry></row><row><entry/><entry/><entry>In order to progress the parent</entry></row><row><entry/><entry/><entry>instance through its</entry></row><row><entry/><entry/><entry>workflow, you must create a</entry></row><row><entry/><entry/><entry>child instance of the linked</entry></row><row><entry/><entry/><entry>child form. See example</entry></row><row><entry/><entry/><entry>below.</entry></row><row><entry>Form link</entry><entry>Parent, child or</entry><entry>A form link can be created at</entry></row><row><entry/><entry>associate</entry><entry>any point during the item&#x2019;s</entry></row><row><entry/><entry/><entry>workflow. The creation of a</entry></row><row><entry/><entry/><entry>child or associate is not</entry></row><row><entry/><entry/><entry>constrained by the workflow.</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><heading id="h-0009" level="1">Form Links &#x26; Scripting Language</heading><p id="p-0041" num="0037">When a form is linked to another form this creates a relationship between the two objects. This relationship can then be defined by using a computer language. In one embodiment, the form builder accepts as input the selection of functions in a scripting language in order that the script defining the relationship is part of the form. By way of example and not limitation, to calculate all approved child invoices associated with the current purchase order, one could create the below formula as an admin when composing the form:</p><p id="p-0042" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>SUM(ticket.child:invoices, &#x2018;invoice_value&#x2019;, {!Item.approved=1})<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0043" num="0000">When the end user views the current state of a form, for example the purchase order, the system would execute the script comprising that purchase order form. As a result, the value calculated as a result of the executing the script would be shown the calculated figure for all approved invoices, that were created as a child of the currently selected purchase order instance.<br/>Other scenarios where a workflow relationship type can be referenced within a scripting formula include:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0038">ticket.parent:purchase_order</li>        <li id="ul0002-0002" num="0039">ticket.associate:project_report</li>    </ul>    </li></ul></p><heading id="h-0010" level="1">Multi-Level Form Links</heading><p id="p-0044" num="0040">By creating many parent and child relationships, one can create a multi-form process. An example of this can be seen below:</p><p id="p-0045" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="56pt" align="left"/><colspec colname="3" colwidth="119pt" align="left"/><thead><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row><row><entry>Label</entry><entry>Form</entry><entry>Description</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>Grandparent</entry><entry>Supplier Request</entry><entry>Request for a new supplier to be added</entry></row><row><entry/><entry/><entry>to the system.</entry></row><row><entry>Parent</entry><entry>Supplier Approval</entry><entry>Approval of requested supplier.</entry></row><row><entry>Child</entry><entry>Purchase Order</entry><entry>Place order with an approved supplier.</entry></row><row><entry>Grandchild</entry><entry>Invoice</entry><entry>Track invoices related to the supply</entry></row><row><entry/><entry/><entry>order.</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><heading id="h-0011" level="1">Multi-Level Form Links &#x26; Scripting Language</heading><p id="p-0046" num="0041">To reference a grandparent form, that was further up the multi-form link chain, the following script can be defined within a form:</p><p id="p-0047" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>ticketparent:purchase_order.parent:supplier_approval, &#x2018;supplier_name&#x2019;<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0048" num="0042">By using the workflow form links, it becomes possible to reference distantly related forms data structure, that are linked to the immediate parent or child.</p><heading id="h-0012" level="1">Validation Rules, Workflow &#x26; Scripting Language</heading><p id="p-0049" num="0043">By combining a forms workflow, script formulae and validation rules, an admin user can enforce rules to restrict when an end user can move a ticket through a stage of a workflow. This is the process that update the entire project data structure as the myriad tasks are commenced and worked through to completion. When a user receives a message that ticket is waiting an action from them, in their designated role as a designated user of the form, then the user can access the system to view the ticket. If the user's role is to make a decision about the ticket, they can input their response. This may be a decision value that gets saved in the instance of the form data structure for that ticket. At that point, the system can process the update by acting with the scripting language to move the ticket to its next tasks. By &#x201c;move&#x201d; it is meant an analogy in that the logic of the script associated with that form may dictate that upon the decision value resulting from the user input and the defined workflow, the next task in the workflow is activated and that the state condition of the instance of the form data structure or ticket has changed to a new state.<br/>The admin user must first create a script formula for workflow elements that generates a data value that can be acted upon by the script code logic. In one embodiment it is a Boolean return type. This formula can then be connected to a validation rule, which may be displayed to the user as the Boolean value TRUE or FALSE. On displaying the validation message, the user is restricted from saving or updating the ticket to the next stage of the forms workflow unless the validation test calculated by the verification script formula returns &#x201c;TRUE&#x201d;. </p><p id="p-0050" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>AND(ticket.order_value&#x3e;=100,000, ISBLANK(ticket.approver), ticket.status=&#x2018;Awaiting Approval&#x2019;)&#x2003;&#x2003;Example Boolean Formula<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0051" num="0000">When all of the following criteria are met, the validation message will display indicating that the task is not complete:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0044">Order value is greater than &#xa3;100,000</li>    <li id="ul0003-0002" num="0045">The user has not specified an approver</li>    <li id="ul0003-0003" num="0046">The ticket is awaiting approval<br/>In addition, the data structure state can be analyzed to determine that the project of which this task is a constituent, is dependent on this specific task getting completed.<br/>This particular script may also trigger the workflow element of transmitting the form or a message indicating that the form requires review to a designated person in the form that is to review it. At the same time, the script may also store the current date and time in the form data structure in order that a time delay can be determined. As the many tasks get completed, the collection of form data structures are updated. In one embodiment, the form can be considered to occupy a state that is represented by a location in the graph that represents the workflow. As the workflow elements are executed, that location moves through the workflow graph. As that movement of the logical state occurs, the data elements comprising the form are updated. In some cases, the movement stops due to some kind of delay. For example, a purchase order form may arrive at a location in the workflow where the purchase order is transmitted out to the supplier. A time value may be stored in the form data structure to indicate when that happened. At a later time, if that order has not been delivered, an interval of time may be calculated by the system between the current time and the time value stored in that form. If the system determines that the interval of time is greater than some threshold, then an alert message can be automatically transmitted to one of the designated users of the form, or even a designated user of a parent of the form.</li></ul></p><p id="p-0052" num="0047">In another embodiment, this logic can also be built into the workflow definition with the scripting language. The system would periodically cycle through all of the forms to update any time interval values that are stored in the forms and to test those time intervals. In an alternative embodiment, the system can run a process that inspects the entire project data structure, traversing the entire hierarchy of form data structures that are linked together into one project, inspecting each for instances of forms where the last time entry is more than some predetermined time interval in the past. That form can then be flagged with a data value that represents a level of urgency or that the form and its tasks have run into a problem.</p><p id="p-0053" num="0048">In yet another embodiment, the system can conduct the inspection looking for other conditions in the form. For example, the inspection process may tally up the number of forms that are in a state of waiting on approval. In that case, the designated user associated with that approval is tracked so that for all users in the project with an approval role, the number of forms awaiting approval may be correlated with which users&#x2014;thereby showing that a particular user may be behind schedule on approvals or that there is a need to increase personnel at that place in the project organization. Similarly, tallies of wait times may be tracked with a corresponding supplier to a project so that it can be determined which suppliers are causing delays in completion of the project and which are swift in completing their deliveries. Further, execution of tasks can be tracked, keeping a tally of tasks, completion time intervals and the corresponding personnel in order to determine relative performance of tasks, or where a task needs more manpower to complete. Finally, it can traverse the form data structure to follow how funds are approved and used by constituent workflow elements.</p><p id="p-0054" num="0049">In summary, the inspection process can be used to automatically determine using logic and arithmetic a condition state data element for a project, or for several projects. In one example, the project state could be the most delayed task in the project and what the delay time is. It would return a string or pointer to the task, and the data value representing the delay. It could be the most expensive task. It would return a pointer to the most expensive task. It could be the identity of the supplier that takes the longest to deliver. It would return a string value or pointer to the supplier or task where the supplier was used. Conversely, it could determine the average cost of a type of task across a project or more than one project. In this case, the state value would be a pointer to a form that represents the type of task, and a data value representing a cost value for that type of task in that project.</p><heading id="h-0013" level="2">Example JSON Data Structure Formalism:</heading><p id="p-0055" num="0050">The visual diagrams of the constituent data structures of application Ser. No. 17/230,629 FIG. 5A to 5E may be expressed in a computer language or other code formality. In one embodiment the JSON formalism may be used. For example, a text file of a JSON type may contain the following items that define the data structures set up by the system:</p><p id="p-0056" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="203pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x201c;data&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 91,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;status&#x201d;: &#x201c;live&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;version&#x201d;: 2,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-10-29T16:15:12.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-10-29T16:15:12.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;form_id&#x201d;: 55,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;workflow_elements&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;id&#x201d;: 571,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;workflow_id&#x201d;: 91,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;linked_form_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;Start of workflow&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;type&#x201d;: &#x201c;start&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;color&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;x&#x201d;: 40,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;y&#x201d;: 220,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-10-29T16:15:12.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-10-29T16:15:12.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;relationships&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;id&#x201d;: 616,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;parent_workflow_element_id&#x201d;: 571,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;child_workflow_element_id&#x201d;: 572,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;parent_port_name&#x201d;: &#x201c;2&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;child_port_name&#x201d;: &#x201c;15&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;decision_value&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;vertices&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;],</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;task&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;emails&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;},</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 572,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;workflow_id&#x201d;: 91,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;linked_form_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;name&#x201d;: &#x201c;Awaiting Approval&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;type&#x201d;: &#x201c;status&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;color&#x201d;: &#x201c;#FFB666&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;x&#x201d;: 240,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;y&#x201d;: 200,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;created_at&#x201d;: &#x201c;2020-10-29T16:15:38.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;updated_at&#x201d;: &#x201c;2020-10-29T16:15:38.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;relationships&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;id&#x201d;: 620,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;parent_workflow_element_id&#x201d;: 572,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;child_workflow_element_id&#x201d;: 573,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;parent_port_name&#x201d;: &#x201c;7&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;child_port_name&#x201d;: &#x201c;4&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;decision_value&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;vertices&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;],</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;task&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 236,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;workflow_element_id&#x201d;: 572,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;deadline_custom_field_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;name&#x201d;: &#x201c;Approve Ticket&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;description&#x201d;: &#x201c;Assign to the person responsible for appr<img id="CUSTOM-CHARACTER-00001" he="2.46mm" wi="2.46mm" file="US20230004900A1-20230105-P00899.TIF" alt="text missing or illegible when filed" img-content="character" img-format="tif"/> </entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;display_roles_as_users&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;task_total_seconds&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;days&#x201d;: 3,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;hours&#x201d;: 0,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;minutes&#x201d;: 0,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;include_weekends&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;send_email&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;allow_assignment&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;created_at&#x201d;: &#x201c;2020-11-15T20:20:00.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;updated_at&#x201d;: &#x201c;2020-11-15T20:20:00.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;deleted_at&#x201d;: null</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;emails&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 573,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;workflow_id&#x201d;: 91,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;linked_form_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;name&#x201d;: &#x201c;Approve?&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;type&#x201d;: &#x201c;decision&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;color&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;x&#x201d;: 480,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;y&#x201d;: 180,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;created_at&#x201d;: &#x201c;2020-10-29T16:16:04.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;updated_at&#x201d;: &#x201c;2020-10-29T16:16:04.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;relationships&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 617,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;parent_workflow_element_id&#x201d;: 573,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;child_workflow_element_id&#x201d;: 574,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;parent_port_name&#x201d;: &#x201c;3&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;child_port_name&#x201d;: &#x201c;15&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;decision_value&#x201d;: &#x201c;Approved&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;vertices&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 618,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;parent_workflow_element_id&#x201d;: 573,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;child_workflow_element_id&#x201d;: 575,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;parent_port_name&#x201d;: &#x201c;1&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;child_port_name&#x201d;: &#x201c;13&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;decision_value&#x201d;: &#x201c;Query&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;vertices&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 619,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;parent_workflow_element_id&#x201d;: 573,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;child_workflow_element_id&#x201d;: 576,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;parent_port_name&#x201d;: &#x201c;2&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;child_port_name&#x201d;: &#x201c;4&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;decision_value&#x201d;: &#x201c;Rejected&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;vertices&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;],</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;task&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;emails&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;},</entry></row><row><entry/><entry>&#x2003;&#x2003;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;id&#x201d;: 574,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;workflow_id&#x201d;: 91,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;linked_form_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;Approved&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;type&#x201d;: &#x201c;status&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;color&#x201d;: &#x201c;#8DBF68&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;x&#x201d;: 740,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;y&#x201d;: 200,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-10-29T16:16:20.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-10-29T16:16:20.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;relationships&#x201d;: [ ],</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;task&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;emails&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;},</entry></row><row><entry/><entry>&#x2003;&#x2003;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;id&#x201d;: 575,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;workflow_id&#x201d;: 91,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;linked_form_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;Query&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;type&#x201d;: &#x201c;status&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;color&#x201d;: &#x201c;#FFB666&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;x&#x201d;: 440,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;y&#x201d;: 20,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-10-29T16:16:44.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-10-29T16:16:44.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;relationships&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;id&#x201d;: 621,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;parent_workflow_element_id&#x201d;: 575,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;child_workflow_element_id&#x201d;: 572,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;parent_port_name&#x201d;: &#x201c;15&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;child_port_name&#x201d;: &#x201c;4&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;decision_value&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;vertices&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 145,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;workflow_element_relationship_id&#x201d;: 621,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;x&#x201d;: 342,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;y&#x201d;: 60,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;vertex_index&#x201d;: 1</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;],</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x201c;task&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;id&#x201d;: 237,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;workflow_element_id&#x201d;: 575,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;deadline_custom_field_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;Respond to Query&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;description&#x201d;: &#x201c;Assign to the person responsible for</entry></row><row><entry/><entry>responding to your query.&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;display_roles_as_users&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;task_total_seconds&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;days&#x201d;: 3,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;hours&#x201d;: 0,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;minutes&#x201d;: 0,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;include_weekends&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;send_email&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;allow_assignment&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-11-15T20:20:00.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-11-15T20:20:00.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;emails&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 576,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;workflow_id&#x201d;: 91,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;linked_form_id&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;name&#x201d;: &#x201c;Rejected&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;type&#x201d;: &#x201c;status&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;color&#x201d;: &#x201c;#FF6080&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;x&#x201d;: 440,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;y&#x201d;: 380,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;created_at&#x201d;: &#x201c;2020-10-29T16:28:11.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;updated_at&#x201d;: &#x201c;2020-10-29T16:28:11.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;relationships&#x201d;: [ ],</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;task&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;&#x201c;emails&#x201d;: [ ]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;]</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;&#x2002;}</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;}</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry namest="offset" nameend="1" align="left" id="FOO-00001"><img id="CUSTOM-CHARACTER-00002" he="2.46mm" wi="2.46mm" file="US20230004900A1-20230105-P00899.TIF" alt="text missing or illegible when filed" img-content="character" img-format="tif"/>  indicates data missing or illegible when filed</entry></row></tbody></tgroup></table></tables><br/>Similarly, the JSON formalism may be used to define the data structures for the entire project, including management, meeting notes, users, roles and workflows:</p><p id="p-0057" num="0000"><tables id="TABLE-US-00005" num="00005"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="196pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>{</entry></row><row><entry/><entry>&#x2002;&#x201c;data&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x201c;id&#x201d;: 2,</entry></row><row><entry/><entry>&#x2003;&#x201c;name&#x201d;: &#x201c;03001 Meeting Minutes&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x201c;unique_name&#x201d;: &#x201c;meeting_minutes&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x201c;description&#x201d;: &#x201c;Meeting Minutes&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x201c;status&#x201d;: &#x201c;Active&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x201c;prefix&#x201d;: &#x201c;MM&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x201c;all_projects&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x201c;only_allow_creation_from_parent_form&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x201c;last_used_reference_number&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x201c;created_by&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x201c;form_group_id&#x201d;: 4,</entry></row><row><entry/><entry>&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-02-06T16:39:21.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-02-06T16:39:21.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x201c;permissions&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;delete&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;create&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;share&#x201d;: true</entry></row><row><entry/><entry>&#x2003;},</entry></row><row><entry/><entry>&#x2003;&#x201c;creator&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;account_id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;name&#x201d;: &#x201c;Super Admin&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;name_status&#x201d;: &#x201c;Super Admin&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;first_name&#x201d;: &#x201c;Super&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;last_name&#x201d;: &#x201c;Admin&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;username&#x201d;: &#x201c;superadmin&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;email&#x201d;: &#x201c;admin@fu3e.uk&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;super_admin&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;image_url&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;active&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;account_status&#x201d;: &#x201c;Active&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;organisation&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;Example Organisation&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;organisation_type_id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;active&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;type&#x201d;: {</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;name&#x201d;: &#x201c;Standard&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2002;&#x201c;unique_name&#x201d;: &#x201c;standard&#x201d;</entry></row><row><entry/><entry>&#x2003;&#x2003;},</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;15th Nov 2020&#x201d;</entry></row><row><entry/><entry>&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;organisation_id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2002;&#x201c;created_at&#x201d;: &#x201c;2016-01-01T00:00:01.000000Z&#x201d;</entry></row><row><entry/><entry>&#x2003;},</entry></row><row><entry/><entry>&#x2003;&#x201c;view_users&#x201d;: [ ],</entry></row><row><entry/><entry>&#x2003;&#x201c;view_project_roles&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;00 Development Director&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;unique_name&#x201d;: &#x201c;project_executive&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_project&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;view_all_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;add_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;shared_a_file&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;active&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;</entry></row><row><entry/><entry>&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 2,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;01 Development Manager&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;unique_name&#x201d;: &#x201c;account_executive&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_project&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;view_all_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;add_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;shared_a_file&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;active&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;</entry></row><row><entry/><entry>&#x2003;&#x2002;}</entry></row><row><entry/><entry>&#x2003;],</entry></row><row><entry/><entry>&#x2003;&#x201c;create_users&#x201d;: [ ],</entry></row><row><entry/><entry>&#x2003;&#x201c;create_project_roles&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;00 Development Director&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;unique_name&#x201d;: &#x201c;project_executive&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_project&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;view_all_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;add_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;shared_a_file&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;active&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;</entry></row><row><entry/><entry>&#x2003;&#x2002;},</entry></row><row><entry/><entry>&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 2,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;01 Development Manager&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;unique_name&#x201d;: &#x201c;account_executive&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_project&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;view_all_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;add_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;edit_files&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;shared_a_file&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;active&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-11-15T20:19:19.000000Z&#x201d;</entry></row><row><entry/><entry>&#x2003;&#x2002;}</entry></row><row><entry/><entry>&#x2003;],</entry></row><row><entry/><entry>&#x2003;&#x201c;child_forms&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 35,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;name&#x201d;: &#x201c;03001i Meeting Actions&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;unique_name&#x201d;: &#x201c;03004_meeting_actions&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;description&#x201d;: &#x201c;&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;status&#x201d;: &#x201c;Active&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;prefix&#x201d;: &#x201c;MA&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;all_projects&#x201d;: false,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;only_allow_creation_from_parent_form&#x201d;: true,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;last_used_reference_number&#x201d;: 3,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_by&#x201d;: 9,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;form_group_id&#x201d;: 4,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-02-14T09:42:56.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-02-14T09:42:56.000000Z&#x201d;</entry></row><row><entry/><entry>&#x2003;&#x2002;}</entry></row><row><entry/><entry>&#x2003;],</entry></row><row><entry/><entry>&#x2003;&#x201c;parent_forms&#x201d;: [ ],</entry></row><row><entry/><entry>&#x2003;&#x201c;associate_forms&#x201d;: [ ],</entry></row><row><entry/><entry>&#x2003;&#x201c;workflows&#x201d;: [</entry></row><row><entry/><entry>&#x2003;&#x2002;{</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;id&#x201d;: 2,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;status&#x201d;: &#x201c;live&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;version&#x201d;: 1,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;deleted_at&#x201d;: null,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;created_at&#x201d;: &#x201c;2020-02-06T16:39:21.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;updated_at&#x201d;: &#x201c;2020-02-06T16:39:21.000000Z&#x201d;,</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x201c;form_id&#x201d;: 2</entry></row><row><entry/><entry>&#x2003;&#x2002;}</entry></row><row><entry/><entry>&#x2003;]</entry></row><row><entry/><entry>&#x2002;}</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0058" num="0051">In operation, a user may build a form that is a &#x201c;purchase order&#x201d;. The workflow for that form may be set up to require that for any value above $100,000 only a specific user class can approve the purchase order and issue it. That is the design of the form for a project. A user on that project who needs to send out a purchase order for that project will bring up the form to create an instance of it. That instance has various attributes filled in, for example, the amount, pricing, product specifications and commercial terms. That instance of the form then propagates through its associated workflow. Assuming the instance of the form is for $200,000 of concrete, for example, the script corresponding to the form will then determine that the purchase order has to be routed to the users who are (i) part of the project and (ii) the specific user class. At that point, the status for that instance of the form is set to &#x201c;FALSE&#x201d; or &#x201c;NOT APPROVED&#x201d;. The form is automatically transmitted to the person of authority. That person may input into the system a data value representing approval of the purchase order. The system checks that the person submitting that change is of the user class that has authority to change that status value in the workflow. When confirmed, the status value is changed and the form propagates out to the &#x201c;issue purchase order&#x201d; task, which may be defined as transmitting an email copy of the form to a specific email address at the supplier.</p><p id="p-0059" num="0000">3D Dashboard from Task Status:</p><p id="p-0060" num="0052">The architecture of the system is broken down into 5 basic areas. <figref idref="DRAWINGS">FIG. <b>1</b></figref>. First the Fuse layer provides a customer user interface environment where task tickets are created, accessed, updated and responded to. The second layer operates the process of moving the ticket through the various functions and automatic responses. The third layer, performance, accesses data in the process layer in order to populate data structures representing 3D graphical objects. The fourth layer, API, provides version control, source data interfaces and interface APIs with 3 party applications.</p><p id="p-0061" num="0053">The data that is collected and stored in the form of the tickets comprising the project may be combined through the process layer to calculate cumulative values of various categories of types of values. These may be presented in a dashboard chart by traversing the graph defining the project and using the constituent data vales comprising the nodes of the graph to update cumulative values. These cumulative values may be stored in a data structure that represents a dashboard. That dashboard may be displayed on a screen in the form of alphanumeric text of graphics (See <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0062" num="0054">The same values may be used to populate a performance data structure for one or more projects. This may be comprised of a data structure representing a graphical element. The dimensions of the graphical element may be defined by the cumulative values that are calculated from traversing process. A visual rendering engine (<figref idref="DRAWINGS">FIG. <b>7</b></figref>) may use the graphical element data structure to generate frame buffer data that when displayed, depicts a 3D object whose dimensions are defined by the cumulative values. In addition, one or more color values may be determined by comparing the calculated cumulative value to one or more ranges of value to indicate an attribute about that object. A user displaying the 3D dashboard may then set a point of view of the object, for example a position in x, y, z and an angle of viewpoint. These parameters may then all be used by a graphics rendering engine to create a video buffer output representing the apparent perspective view of the entire project using these other components.</p><p id="p-0063" num="0055">In one embodiment, an example performance object being displayed may be represented by a data structure as follows:<ul id="ul0004" list-style="none">    <li id="ul0004-0001" num="0056">Project Name: BuildingName</li>    <li id="ul0004-0002" num="0057">Project Position: X, Y.</li>    <li id="ul0004-0003" num="0058">Project Height: Z</li>    <li id="ul0004-0004" num="0059">Project Cross Section: A, B.</li>    <li id="ul0004-0005" num="0060">Project Color: Red</li>    <li id="ul0004-0006" num="0061">Project Object Shape: rectangular</li>    <li id="ul0004-0007" num="0062">Project Data: Pointer to Project Data structure.<br/>As discussed above, a project may be defined by a collection of forms, where the forms define tasks and task dependencies in a hierarchical level. As shown in the prior example data structure, the graphical element data structure refers to the project data structure. This enables the system to utilize the hierarchical nature of the tasks to provide graphical interactivity with visual cues. For example, the cumulative value of time delay for one constituent task may have reach the &#x201c;red&#x201d; level and thus the visual object would appear red on the screen. The system can then detect an actuation of a cursor on or near the visual object that would be interpreted as a request to drill down into the constituents to identify the task. This may be presented visually by breaking up the visual object into apparent layers with a thickness that are stacked. Each layer can represent a ticket or type of ticket. The rendering of each layer is determined separately such that each layer may have its own color dependent on a cumulative condition value for that group of one or more tasks.</li></ul></p><p id="p-0064" num="0063">With this drill down, the user can then identify the task or group of tasks that are &#x201c;red&#x201d;, i.e. they are delaying the entire project. The user can then select that rendered layer which is an input to the system to zoom in again in order to present individual tasks. The &#x201c;red&#x201d; single task layer can then be displayed, and when selected, its constituent data page presented so that the user can then learn the specific condition of the task.</p><p id="p-0065" num="0064">In one embodiment, depicted in <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the calculation of the rendered graphics display output may be comprised these steps, in a recursive fashion:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0065">Top: Select next task in task graph using current task dependency arc</li>    <li id="ul0005-0002" num="0066">Fetch data values from selected task data structure</li>    <li id="ul0005-0003" num="0067">Calculate cumulative value from fetched data values</li>    <li id="ul0005-0004" num="0068">Determine color value using calculated cumulative value</li>    <li id="ul0005-0005" num="0069">Calculate dimension values from calculated cumulative value</li>    <li id="ul0005-0006" num="0070">Determine visual object attributes from calculated dimensions</li>    <li id="ul0005-0007" num="0071">Receive 3D field of view parameters from user</li>    <li id="ul0005-0008" num="0072">Render visual objects using visual object attributes, determined color value and calculated dimension values</li>    <li id="ul0005-0009" num="0073">Update video buffer output using rendering output.</li>    <li id="ul0005-0010" num="0074">Last Task dependency?</li>    <li id="ul0005-0011" num="0075">NO:</li>    <li id="ul0005-0012" num="0076">Determine next task dependency arc and set to current dependency ark</li>    <li id="ul0005-0013" num="0077">Go to Top</li>    <li id="ul0005-0014" num="0078">YES, return</li></ul></p><p id="p-0066" num="0079">The apparent point of view can be used to adjust how the 3D dashboard image appears. In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the apparent perspective and field of view is from a lower apparent vantage point as compared to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In one embodiment, the interactivity process may operate using this process:<ul id="ul0006" list-style="none">    <li id="ul0006-0001" num="0080">Receive selection value representing a drill down on a project comprised of a set of tickets;</li>    <li id="ul0006-0002" num="0081">Generate constituent visual object data structures corresponding to constituent tickets or predetermined groups of constituent tickets;</li>    <li id="ul0006-0003" num="0082">Calculate values comprising the generated data structures by calculating corresponding task state data values using data fetched from the corresponding ticket data structure;</li>    <li id="ul0006-0004" num="0083">Determine a color value in dependency on the calculated task state data values;</li>    <li id="ul0006-0005" num="0084">Store the determined color value in the generated data structure;</li>    <li id="ul0006-0006" num="0085">Re-render image with a predetermined zoom in using generated visual data object data structures in place of the project visual object.</li></ul></p><p id="p-0067" num="0086">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a project's visual object has been broken down into constituent objects with predefined attributes. In this example, it shows a budget layer, a programme layer and a executed tasks layer. Each of these are represented by 3D blocks that together form the tower. The dimensions may be defined by one or more constituent data values.</p><p id="p-0068" num="0087">At the lowest level of drill down, the user may select a specific task or group of tasks to read the underlying data, for example, what the task is that is causing the delay and what other conditions apply:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0088">Receive selection of a task or predetermined group of tasks;</li>    <li id="ul0007-0002" num="0089">Fetch data values from the corresponding ticket data structure;</li>    <li id="ul0007-0003" num="0090">Display fetched data values on the computer screen.</li></ul></p><p id="p-0069" num="0091">The display presented in <figref idref="DRAWINGS">FIG. <b>8</b></figref> and <figref idref="DRAWINGS">FIG. <b>9</b></figref> is an example of presenting specific data that gave rise to the graphical appearance that attracted the attention of the user. At this point, the hierarchical nature of the project management data structures permits the system to receive a selection of one of the displayed attributes, for example, one of the cumulative values and then open a new window that presents the constituent data values that are components of that cumulative value. See <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0070" num="0092">In yet another embodiment, the process of traversing the graph comprising the project management structure may be applied to multiple projects in order to calculate a risk factor as a cumulative value for the entire project. <figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an example window presenting cumulative values for different projects. In one embodiment, the risk factor or risk status may be determined by using a set of the data values comprising the data structures connected by the graph of interdependent tasks as input to a machine learning engine or neural network. These values may be concatenated into a vector of elements. In addition, the overall topology of the graph may also be mapped to a vector of elements. These two may be a vector used as input into a neural network that can output a code value representing a likely outcome of the project. This code value may be mapped using a data structure to predetermined text strings that constitute descriptions of the kind of risk or bad outcome that is associated by the neural network process with the input conditions.</p><p id="p-0071" num="0093">In operation, as the project management system is used, the current state of the tasks can be used to train the neural network in real time. In this way, as a project runs amok, the characteristics of the tasks, their data values and the task topology can be input into the neural network along with the knowledge that the project has run amok. Similarly, a completed project has been used as training input along with the good outcome as part of the training set. In this way, over time the neural network becomes trained to recognize task data values and topologies that are associated more with bad outcomes than good ones. As a non-limiting example, the task data value of interest may be a waiting time value, where the task is waiting on a vendor response (represented by a state value) from a specific vendor (represented by a vendor identifier value). It may be that the topology of the task set comprising the project has that vendor delivery as a condition for an building inspection task. That combination of inputs may be correlated with a delay in occupancy. In contrast, the same thing but where the conditioned task is for finishing the gardening around the entrance of the building. This delay may not be associated with a project having run amok. Therefore, a set of data more similar to the latter would not be associated with a bad outcome.</p><p id="p-0072" num="0094">In yet another embodiment, the system can periodically calculate a relative risk value for a project and assign a category in dependency on the calculate risk value. The number of projects corresponding to each category may be cumulatively calculated and stored in a data structure. Each category may be associated with a color or other visual attribute. The visual attribute may be used to display a graphic representing one or more of the categories. In one embodiment, the risk categories are in three buckets, with three colors. In addition, as the system keeps recalculating the relative risk based on the neural network output, the result may be stored in a data structure with a corresponding time or date value. Using this stored data, a graph of the risk trend may be presented. See <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0073" num="0095">Other project attributes may be used to graphically show performance. For example, the project data structure may be comprised of financial data about the project. This financial data may be displayed on a graphic data layer representing a map by utilizing the geographic attributes for the project stored in the project data structure. See <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0074" num="0096">The project may also be presented in a detailed dashboard where a plurality of cumulative values calculated for the project may be presented in a combination of alphanumeric values and graphical representations. <figref idref="DRAWINGS">FIG. <b>12</b>, <b>13</b>, <b>14</b></figref>.</p><heading id="h-0014" level="2">Operating Environment:</heading><p id="p-0075" num="0097">The system is typically comprised of a central server that is connected by a data network to a user's computer. The central server may be comprised of one or more computers connected to one or more mass storage devices. The precise architecture of the central server does not limit the claimed invention. Further, the user's computer may be a laptop or desktop type of personal computer. It can also be a cell phone, smart phone or other handheld device, including a tablet. The precise form factor of the user's computer does not limit the claimed invention. Examples of well-known computing systems, environments, and/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held computers, laptop or mobile computer or communications devices such as cell phones, smart phones, and PDA's, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like. Indeed, the terms &#x201c;computer,&#x201d; &#x201c;server,&#x201d; and the like may be used interchangeably herein, and may refer to any of the above devices and systems.</p><p id="p-0076" num="0098">The user environment may be housed in the central server or operatively connected to it remotely using a network. In one embodiment, the user's computer is omitted, and instead an equivalent computing functionality is provided that works on a server. In this case, a user would log into the server from another computer over a network and access the system through a user environment, and thereby access the functionality that would in other embodiments, operate on the user's computer. Further, the user may receive from and transmit data to the central server by means of the Internet, whereby the user accesses an account using an Internet web-browser and browser displays an interactive web page operatively connected to the central server. The server transmits and receives data in response to data and commands transmitted from the browser in response to the customer's actuation of the browser user interface. Some steps of the invention may be performed on the user's computer and interim results transmitted to a server. These interim results may be processed at the server and final results passed back to the user.</p><p id="p-0077" num="0099">The Internet is a computer network that permits customers operating a personal computer to interact with computer servers located remotely and to view content that is delivered from the servers to the personal computer as data files over the network. In one kind of protocol, the servers present webpages that are rendered on the customer's personal computer using a local program known as a browser. The browser receives one or more data files from the server that are displayed on the customer's personal computer screen. The browser seeks those data files from a specific address, which is represented by an alphanumeric string called a Universal Resource Locator (URL). However, the webpage may contain components that are downloaded from a variety of URL's or IP addresses. A website is a collection of related URL's, typically all sharing the same root address or under the control of some entity. In one embodiment different regions of the simulated space displayed by the browser have different URL's. That is, the webpage encoding the simulated space can be a unitary data structure, but different URL's reference different locations in the data structure. The user computer can operate a program that receives from a remote server a data file that is passed to a program that interprets the data in the data file and commands the display device to present particular text, images, video, audio and other objects. In some embodiments, the remote server delivers a data file that is comprised of computer code that the browser program interprets, for example, scripts. The program can detect the relative location of the cursor when the mouse button is actuated, and interpret a command to be executed based on location on the indicated relative location on the display when the button was pressed. The data file may be an HTML document, the program a web-browser program and the command a hyper-link that causes the browser to request a new HTML document from another remote data network address location. The HTML can also have references that result in other code modules being called up and executed, for example, Flash or other native code.</p><p id="p-0078" num="0100">The invention may also be entirely executed on one or more servers. A server may be a computer comprised of a central processing unit with a mass storage device and a network connection. In addition a server can include multiple of such computers connected together with a data network or other data transfer connection, or, multiple computers on a network with network accessed storage, in a manner that provides such functionality as a group. Practitioners of ordinary skill will recognize that functions that are accomplished on one server may be partitioned and accomplished on multiple servers that are operatively connected by a computer network by means of appropriate inter process communication. In one embodiment, a user's computer can run an application that causes the user's computer to transmit a stream of one or more data packets across a data network to a second computer, referred to here as a server. The server, in turn, may be connected to one or more mass data storage devices where the database is stored. In addition, the access of the website can be by means of an Internet browser accessing a secure or public page or by means of a client program running on a local computer that is connected over a computer network to the server. A data message and data upload or download can be delivered over the Internet using typical protocols, including TCP/IP, HTTP, TCP, UDP, SMTP, RPC, FTP or other kinds of data communication protocols that permit processes running on two respective remote computers to exchange information by means of digital network communication. As a result a data message can be one or more data packets transmitted from or received by a computer containing a destination network address, a destination process or application identifier, and data values that can be parsed at the destination computer located at the destination network address by the destination application in order that the relevant data values are extracted and used by the destination application. The precise architecture of the central server does not limit the claimed invention. In addition, the data network may operate with several levels, such that the user's computer is connected through a fire wall to one server, which routes communications to another server that executes the disclosed methods.</p><p id="p-0079" num="0101">The server can execute a program that receives the transmitted packet and interpret the transmitted data packets in order to extract database query information. The server can then execute the remaining steps of the invention by means of accessing the mass storage devices to derive the desired result of the query. Alternatively, the server can transmit the query information to another computer that is connected to the mass storage devices, and that computer can execute the invention to derive the desired result. The result can then be transmitted back to the user's computer by means of another stream of one or more data packets appropriately addressed to the user's computer. In addition, the user's computer may obtain data from the server that is considered a website, that is, a collection of data files that when retrieved by the user's computer and rendered by a program running on the user's computer, displays on the display screen of the user's computer text, images, video and in some cases outputs audio. The access of the website can be by means of a client program running on a local computer that is connected over a computer network accessing a secure or public page on the server using an Internet browser or by means of running a dedicated application that interacts with the server, sometimes referred to as an &#x201c;app.&#x201d; The data messages may comprise a data file that may be an HTML document (or other hypertext formatted document file), commands sent between the remote computer and the server and a web-browser program or app running on the remote computer that interacts with the data received from the server. The command can be a hyper-link that causes the browser to request a new HTML document from another remote data network address location. The HTML can also have references that result in other code modules being called up and executed, for example, Flash, scripts or other code. The HTML file may also have code embedded in the file that is executed by the client program as an interpreter, in one embodiment, Javascript. As a result a data message can be a data packet transmitted from or received by a computer containing a destination network address, a destination process or application identifier, and data values or program code that can be parsed at the destination computer located at the destination network address by the destination application in order that the relevant data values or program code are extracted and used by the destination application.</p><p id="p-0080" num="0102">The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices. Practitioners of ordinary skill will recognize that the invention may be executed on one or more computer processors that are linked using a data network, including, for example, the Internet. In another embodiment, different steps of the process can be executed by one or more computers and storage devices geographically separated by connected by a data network in a manner so that they operate together to execute the process steps. In one embodiment, a user's computer can run an application that causes the user's computer to transmit a stream of one or more data packets across a data network to a second computer, referred to here as a server. The server, in turn, may be connected to one or more mass data storage devices where the database is stored. The server can execute a program that receives the transmitted packet and interpret the transmitted data packets in order to extract database query information. The server can then execute the remaining steps of the invention by means of accessing the mass storage devices to derive the desired result of the query. Alternatively, the server can transmit the query information to another computer that is connected to the mass storage devices, and that computer can execute the invention to derive the desired result. The result can then be transmitted back to the user's computer by means of another stream of one or more data packets appropriately addressed to the user's computer. In one embodiment, a relational database may be housed in one or more operatively connected servers operatively connected to computer memory, for example, disk drives. In yet another embodiment, the initialization of the relational database may be prepared on the set of servers and the interaction with the user's computer occur at a different place in the overall process.</p><p id="p-0081" num="0103">The method described herein can be executed on a computer system, generally comprised of a central processing unit (CPU) that is operatively connected to a memory device, data input and output circuitry (IO) and computer data network communication circuitry. Computer code executed by the CPU can take data received by the data communication circuitry and store it in the memory device. In addition, the CPU can take data from the I/O circuitry and store it in the memory device. Further, the CPU can take data from a memory device and output it through the IO circuitry or the data communication circuitry. The data stored in memory may be further recalled from the memory device, further processed or modified by the CPU in the manner described herein and restored in the same memory device or a different memory device operatively connected to the CPU including by means of the data network circuitry. In some embodiments, data stored in memory may be stored in the memory device, or an external mass data storage device like a disk drive. In yet other embodiments, the CPU may be running an operating system where storing a data set in memory is performed virtually, such that the data resides partially in a memory device and partially on the mass storage device. The CPU may perform logic comparisons of one or more of the data items stored in memory or in the cache memory of the CPU, or perform arithmetic operations on the data in order to make selections or determinations using such logical tests or arithmetic operations. The process flow may be altered as a result of such logical tests or arithmetic operations so as to select or determine the next step of a process. For example, the CPU may obtain two data values from memory and the logic in the CPU determine whether they are the same or not. Based on such Boolean logic result, the CPU then selects a first or a second location in memory as the location of the next step in the program execution. This type of program control flow may be used to program the CPU to determine data, or select a data from a set of data. The memory device can be any kind of data storage circuit or magnetic storage or optical device, including a hard disk, optical disk or solid state memory. The IO devices can include a display screen, loudspeakers, microphone and a movable mouse that indicate to the computer the relative location of a cursor position on the display and one or more buttons that can be actuated to indicate a command.</p><p id="p-0082" num="0104">The computer can display on the display screen operatively connected to the I/O circuitry the appearance of a user interface. Various shapes, text and other graphical forms are displayed on the screen as a result of the computer generating data that causes the pixels comprising the display screen to take on various colors and shades or brightness. The user interface may also display a graphical object referred to in the art as a cursor. The object's location on the display indicates to the user a selection of another object on the screen. The cursor may be moved by the user by means of another device connected by I/O circuitry to the computer. This device detects certain physical motions of the user, for example, the position of the hand on a flat surface or the position of a finger on a flat surface. Such devices may be referred to in the art as a mouse or a track pad. In some embodiments, the display screen itself can act as a trackpad by sensing the presence and position of one or more fingers on the surface of the display screen. When the cursor is located over a graphical object that appears to be a button or switch, the user can actuate the button or switch by engaging a physical switch on the mouse or trackpad or computer device or tapping the trackpad or touch sensitive display. When the computer detects that the physical switch has been engaged (or that the tapping of the track pad or touch sensitive screen has occurred), it takes the apparent location of the cursor (or in the case of a touch sensitive screen, the detected position of the finger) on the screen and executes the process associated with that location. As an example, not intended to limit the breadth of the disclosed invention, a graphical object that appears to be a two dimensional box with the word &#x201c;enter&#x201d; within it may be displayed on the screen. If the computer detects that the switch has been engaged while the cursor location (or finger location for a touch sensitive screen) was within the boundaries of a graphical object, for example, the displayed box, the computer will execute the process associated with the &#x201c;enter&#x201d; command. In this way, graphical objects on the screen create a user interface that permits the user to control the processes operating on the computer.</p><p id="p-0083" num="0105">In some instances, especially where the user computer is a mobile computing device used to access data through the network the network may be any type of cellular, IP-based or converged telecommunications network, including but not limited to Global System for Mobile Communications (GSM), Time Division Multiple Access (TDMA), Code Division Multiple Access (CDMA), Orthogonal Frequency Division Multiple Access (OFDM), General Packet Radio Service (GPRS), Enhanced Data GSM Environment (EDGE), Advanced Mobile Phone System (AMPS), Worldwide Interoperability for Microwave Access (WiMAX), Universal Mobile Telecommunications System (UMTS), Evolution-Data Optimized (EVDO), Long Term Evolution (LTE), Ultra Mobile Broadband (UMB), Voice over Internet Protocol (VoIP), Unlicensed Mobile Access (UMA), any form of 802.11.xx or Bluetooth.</p><p id="p-0084" num="0106">Computer program logic implementing all or part of the functionality previously described herein may be embodied in various forms, including, but in no way limited to, a source code form, a computer executable form, and various intermediate forms (e.g., forms generated by an assembler, compiler, linker, or locator.) Source code may include a series of computer program instructions implemented in any of various programming languages (e.g., an object code, an assembly language, or a high-level language such as Javascript, C, C++, JAVA, or HTML or scripting languages that are executed by Internet web-broswers) for use with various operating systems or operating environments. The source code may define and use various data structures and communication messages. The source code may be in a computer executable form (e.g., via an interpreter), or the source code may be converted (e.g., via a translator, assembler, or compiler) into a computer executable form.</p><p id="p-0085" num="0107">The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, binary components that, when executed by the CPU, perform particular tasks or implement particular abstract data types and when running, may generate in computer memory or store on disk, various data structures. A data structure may be represented in the disclosure as a manner of organizing data, but is implemented by storing data values in computer memory in an organized way. Data structures may be comprised of nodes, each of which may be comprised of one or more elements, encoded into computer memory locations into which is stored one or more corresponding data values that are related to an item being represented by the node in the data structure. The collection of nodes may be organized in various ways, including by having one node in the data structure being comprised of a memory location wherein is stored the memory address value or other reference, or pointer, to another node in the same data structure. By means of the pointers, the relationship by and among the nodes in the data structure may be organized in a variety of topologies or forms, including, without limitation, lists, linked lists, trees and more generally, graphs. The relationship between nodes may be denoted in the specification by a line or arrow from a designated item or node to another designated item or node. A data structure may be stored on a mass storage device in the form of data records comprising a database, or as a flat, parsable file. The processes may load the flat file, parse it, and as a result of parsing the file, construct the respective data structure in memory. In other embodiment, the data structure is one or more relational tables stored on the mass storage device and organized as a relational database.</p><p id="p-0086" num="0108">The computer program and data may be fixed in any form (e.g., source code form, computer executable form, or an intermediate form) either permanently or transitorily in a tangible storage medium, such as a semiconductor memory device (e.g., a RAM, ROM, PROM, EEPROM, or Flash-Programmable RAM), a magnetic memory device (e.g., a diskette or fixed hard disk), an optical memory device (e.g., a CD-ROM or DVD), a PC card (e.g., PCMCIA card, SD Card), or other memory device, for example a USB key. The computer program and data may be fixed in any form in a signal that is transmittable to a computer using any of various communication technologies, including, but in no way limited to, analog technologies, digital technologies, optical technologies, wireless technologies, networking technologies, and internetworking technologies. The computer program and data may be distributed in any form as a removable storage medium with accompanying printed or electronic documentation (e.g., a disk in the form of shrink wrapped software product or a magnetic tape), preloaded with a computer system (e.g., on system ROM or fixed disk), or distributed from a server, website or electronic bulletin board or other communication system (e.g., the Internet or World Wide Web.) It is appreciated that any of the software components of the present invention may, if desired, be implemented in ROM (read-only memory) form. The software components may, generally, be implemented in hardware, if desired, using conventional techniques.</p><p id="p-0087" num="0109">It should be noted that the flow diagrams are used herein to demonstrate various aspects of the invention, and should not be construed to limit the present invention to any particular logic flow or logic implementation. The described logic may be partitioned into different logic blocks (e.g., programs, modules, functions, or subroutines) without changing the overall results or otherwise departing from the true scope of the invention. Oftentimes, logic elements may be added, modified, omitted, performed in a different order, or implemented using different logic constructs (e.g., logic gates, looping primitives, conditional logic, and other logic constructs) without changing the overall results or otherwise departing from the true scope of the invention. Where the disclosure refers to matching or comparisons of numbers, values, or their calculation, these may be implemented by program logic by storing the data values in computer memory and the program logic fetching the stored data values in order to process them in the CPU in accordance with the specified logical process so as to execute the matching, comparison or calculation and storing the result back into computer memory or otherwise branching into another part of the program logic in dependence on such logical process result. The locations of the stored data or values may be organized in the form of a data structure.</p><p id="p-0088" num="0110">The described embodiments of the invention are intended to be exemplary and numerous variations and modifications will be apparent to those skilled in the art. All such variations and modifications are intended to be within the scope of the present invention as defined in the appended claims. Although the present invention has been described and illustrated in detail, it is to be clearly understood that the same is by way of illustration and example only, and is not to be taken by way of limitation. It is appreciated that various features of the invention which are, for clarity, described in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely, various features of the invention which are, for brevity, described in the context of a single embodiment may also be provided separately or in any suitable combination. It is appreciated that the particular embodiment described in the Appendices is intended only to provide an extremely detailed disclosure of the present invention and is not intended to be limiting.</p><p id="p-0089" num="0111">The foregoing description discloses only exemplary embodiments of the invention. Modifications of the above disclosed apparatus and methods which fall within the scope of the invention will be readily apparent to those of ordinary skill in the art. Accordingly, while the present invention has been disclosed in connection with exemplary embodiments thereof, it should be understood that other embodiments may fall within the spirit and scope of the invention as defined by the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. (canceled)</claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. A method executed by a computer system comprised of a computer display for displaying a 3D graphical dashboard comprising:<claim-text>storing in data memory at least two task ticket forms data structures that comprise a project data structure whereby a first of the at least one ticket forms is comprised of at least one reference data to a second of the at least one ticket forms and at least one corresponding performance data value, said at least one references data representing a graph comprised of an at least one nodes corresponding to the at least one ticket forms;</claim-text><claim-text>storing in data memory a graphical element data object corresponding to the project data structure;</claim-text><claim-text>automatically calculating a cumulative state value by traversing the nodes of the graph to select the corresponding ticket forms and using the corresponding at least one performance values comprising the selected ticket forms to calculate a cumulative state value corresponding to the project data structure;</claim-text><claim-text>using the at least one cumulative state value to calculate a corresponding visual attribute value applied to the graphical element data object corresponding to the project;</claim-text><claim-text>storing the at least one visual attribute values into the graphical element data object; and</claim-text><claim-text>rendering on a computer display the graphical element data object corresponding to the project data structure using the calculated visual attribute value to set the rendered appearance of the displayed graphical element.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. (canceled)</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref> where the graphical element data object is further comprised of a color data value and the method is further comprised of:<claim-text>determining the color data value using the calculated cumulative state value;</claim-text><claim-text>storing the calculated visual attribute as a color data value in the graphical element data object and;</claim-text><claim-text>rendering the graphical element data object in a color corresponding to the stored color data value.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. (canceled)</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref> further comprising:<claim-text>receiving into the computer system a selection input value representing a selection of a graphical element data object that is rendered on the display;</claim-text><claim-text>retrieving from a computer memory data values comprising an at least one ticket form data structures corresponding to the selected graphical element data object;</claim-text><claim-text>using the retrieved data values comprising the ticket form data structures to calculate for each of the at least one constituent ticket form data structures data representing an at least one graphical layer object corresponding to the at least one constituent ticket forms; and</claim-text><claim-text>rendering on the computer display the at least one graphical layer objects in an apparent stack forming the rendered graphical data object corresponding to the project data structures . . . s.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref> further comprising:<claim-text>determining a color data value for at least one of the graphical layer objects using data comprising the at least one ticket forms corresponding to the graphical layer object: and</claim-text><claim-text>rendering on the computer display the graphical layer objects in the determined color values such that two of the graphical layer objects comprising the graphical element have two distinct colors.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref> further comprising:<claim-text>recursively calculating graphical layer objects comprising the graph.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A computer system displaying a 3D graphical dashboard comprising a data storage device comprised of:<claim-text>a first ticket form data structure comprised of a corresponding first task state value and a second ticket form data structure comprised of a corresponding second task state value that comprise a project data structure;</claim-text><claim-text>a workflow data structure, said workflow data structure comprised of at least one link data representing a task dependency between the first form data structure and the second form data structure and an at least one further form data structure comprised of a corresponding at least one task state values, said at least one link data representing a graph comprised of an at least one nodes corresponding to the at least one ticket forms;</claim-text><claim-text>a first at least one ticket data structure comprised of data representing an at least one instance of the first form data structure and a second at least one ticket data structure comprised of data representing an at least one instance of the second form data structure;</claim-text><claim-text>computer program data that, when executed causes the computer system to:<claim-text>automatically select at least one of the second at least one tickets by traversing the graph represented by the link data representing the task dependency;</claim-text></claim-text></claim-text><claim-text>automatically calculate a cumulative project condition state value by traversing the nodes of the graph to select the corresponding ticket forms and using the task state values corresponding to the selected ticket forms to calculate the cumulative project condition state value;<claim-text>store the data representing the calculated cumulative project condition;</claim-text><claim-text>automatically calculate an at least one visual attribute value comprising a visual data object corresponding to the project using the calculated cumulative project condition state value; and</claim-text><claim-text>render on the computer display the at least one visual data object using the calculated visual attribute value.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A computer system displaying a 3D graphical dashboard comprising a data storage device comprised of:<claim-text>at least two form data structures that comprise a project data structure said form data structures comprised of a corresponding at least two task state value;</claim-text><claim-text>a workflow data structure, said workflow data structure comprised of at least one task link data representing a corresponding at least one task dependency between a first form data structure and a second form data structure comprising the at least two form data structures, said task link data representing a task graph;</claim-text><claim-text>computer program data that, when executed causes the computer system to:</claim-text><claim-text>automatically retrieve the at least one task state data values corresponding to the task links represented by the task graph by traversing the task graph to determine the task links corresponding to the workflow data structure;</claim-text><claim-text>using the retrieved at least one task state data values to calculate at least one cumulative task state value corresponding to the workflow data structure;</claim-text><claim-text>use the at least one calculated cumulative task state value to determine an at least one visual attribute for a corresponding at least one visual data object corresponding to the workflow data structure; and</claim-text><claim-text>render the at least one visual data object using the corresponding determined at least one visual object attributes.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref> where the computer program data further causes the computer system to:<claim-text>automatically use the selected first task link to determine the second task link in the task graph by retrieving at least one task state data value from the first form data structure; and</claim-text><claim-text>select the second task link in dependence on the retrieved at least one task state data value.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref> where the visual attribute is a color value and the computer program data further causes the computer system to determine the color value using the calculated cumulative task state value.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref> where the visual attribute is an apparent graphic dimension value of the visual when rendered and the computer program data further causes the computer system to determine the apparent graphic dimension value using the calculated cumulative task state value.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref> where the computer program data further causes the computer system to:<claim-text>receive into the computer system a selection value representing a selection of a rendered visual data object representing a project, said project corresponding to a project data structure comprised of at least one constituent ticket data structures;</claim-text><claim-text>generate at least one visual data object data structures corresponding to the at least one constituent ticket data structures comprising the selected project;</claim-text><claim-text>retrieve from a computer memory data comprising the at least one constituent ticket data structures;</claim-text><claim-text>use the retrieved ticket data values to calculate for each of the at least one constituent ticket data structures corresponding at least one task state data values;</claim-text><claim-text>use the calculated at least one task state data values to automatically determine at least one corresponding visual object attributes;</claim-text><claim-text>store the automatically determined at least one visual object attributes in the corresponding generated at least one visual data object data structures; and</claim-text><claim-text>render on the computer display the at least one visual data objects using the determined automatically determined at least one visual object attributes.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref> further where the at least one attribute is a color and the computer program data further causes the computer system to:<claim-text>determine a color value in dependency on the calculated task state data values;</claim-text><claim-text>store the determined color value in the generated visual data object data structures; and render on the computer display the generated visual data object data structures using the determined color values.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref> further where the computer program data further causes the computer system to:<claim-text>receive into the computer system a selection of at least one instances of the form data structures;</claim-text><claim-text>retrieve data values from the selected at least one form data structures; and</claim-text><claim-text>display on the computer screen the retrieved selected form data values.</claim-text></claim-text></claim></claims></us-patent-application>