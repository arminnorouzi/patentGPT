<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004941A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004941</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17833744</doc-number><date>20220606</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>10</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>1053</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>022</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">JOB DESCRIPTION GENERATION BASED ON MACHINE LEARNING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17364699</doc-number><date>20210630</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11373146</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17833744</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SkyHive Technologies Inc.</orgname><address><city>Vancouver VC</city><country>CA</country></address></addressbook><residence><country>CA</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Yerastov</last-name><first-name>Yuri</first-name><address><city>San Mateo</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Reddy</last-name><first-name>Mohan</first-name><address><city>Fremont</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Hinton</last-name><first-name>Sean Thomas</first-name><address><city>Vancouver</city><country>CA</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Timonin</last-name><first-name>Mykhailo</first-name><address><city>Vancouver</city><country>CA</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Bukharov</last-name><first-name>Sergey</first-name><address><city>Vancouver</city><country>CA</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Cosulich</last-name><first-name>Rupert</first-name><address><city>Vancouver</city><country>CA</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Techniques are described for automatically generating job descriptions. Training data is used to define job categories, job sections, and selective phrases for each job category and job section. In response to receiving request to generate a job description, a job category or additional information is derived from the request. Such information is used to populate existing templates for a job description based on a skill knowledge graph, which connects skill names based on hypernym trees and enables enhancement of a job description with better or broader coverage.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="234.95mm" wi="156.97mm" file="US20230004941A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="194.31mm" wi="148.84mm" orientation="landscape" file="US20230004941A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="199.39mm" wi="143.26mm" orientation="landscape" file="US20230004941A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="250.78mm" wi="165.86mm" file="US20230004941A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="232.58mm" wi="160.10mm" file="US20230004941A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="236.56mm" wi="127.42mm" orientation="landscape" file="US20230004941A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="236.56mm" wi="150.45mm" orientation="landscape" file="US20230004941A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="194.23mm" wi="140.29mm" orientation="landscape" file="US20230004941A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="193.80mm" wi="142.16mm" orientation="landscape" file="US20230004941A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="193.80mm" wi="77.39mm" orientation="landscape" file="US20230004941A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="225.81mm" wi="135.04mm" orientation="landscape" file="US20230004941A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATION DATA AND CLAIM OF PRIORITY</heading><p id="p-0002" num="0001">This application is a Continuation of U.S. patent application Ser. No. 17/364,699, entitled &#x201c;Job Description Generation Based On Machine Learning&#x201d;, filed Jun. 30, 2021, the contents of which are incorporated by reference for all purposes as if fully set forth herein.</p><p id="p-0003" num="0002">This application is related to U.S. application Ser. No. 17/241,069, titled &#x201c;Generating Skill Data Through Machine Learning&#x201d;, and filed Apr. 27, 2021, the entire contents of which are hereby incorporated by reference as if fully set forth herein. (This application is referred to herein as the &#x201c;Skill Data Application&#x201d;.)</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0004" num="0003">Techniques described herein relate to machine learning-based generation of content, and, more specifically, to using machine learning and statistical analysis of a dataset of job-related data to automatically generate job description content.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0005" num="0004">The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section. Further, it should not be assumed that any of the approaches described in this section are well-understood, routine, or conventional merely by virtue of their inclusion in this section.</p><p id="p-0006" num="0005">A good job description used to advertise an open position attracts applicants that are well-qualified to perform tasks associated with the position. Conventionally, job descriptions are written manually, which often results in a lack of focus, accuracy, or comprehensiveness. For example, in describing an open position and finding good candidates for the position, it is helpful to recognize an adequate set of skills that is required by the position. However, some skill names may be left out of a job description because they are unfamiliar to the writer or because the significance of the corresponding skills is not realized by the writer. Furthermore, skill meanings can also be obscured in a hand-written job description. For example, the job description writer may describe a set of tasks that require skill A, but mistakenly label the required skill as skill B in the job description, e.g., due to the fact that the writer is not an expert in skills ontologies/taxonomies/labor markets. Failure to include all pertinent skill names in a job description reduces the chances of finding the most qualified candidates.</p><p id="p-0007" num="0006">Starting with a job description template or a prior job description would not remedy some of the deficiencies noted above in connection with a manual effort. Most automatic text generation systems are intent-driven and predict short segments of text that is expected to occur next. Such systems are not suitable for automatically generating complete job descriptions. Specifically, automatic text generation systems may generate short natural language text that is indistinguishable from human-created text, but automatic generation of longer text passages (as would be required to generate a job description) generally results in text that includes repetitions and nonsense that should not be included in a job description. Furthermore, it can be difficult for automatic text generation systems to learn the level of formatting (such as patterns of bulleted lists, partial sentences, full sentences, etc.) that is generally found within a job description.</p><p id="p-0008" num="0007">Thus, it would be beneficial to automatically generate a full job description that is tailored to a particular open position, and that automatically includes a range of skill names and other data that are pertinent to the type of position being described.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008">In the drawings:</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example networked computer system in which various embodiments may be practiced.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates example components of a data management server computer in accordance with the disclosed embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a process of automatically generating a requested job description based on a dataset of job descriptions.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an example job description.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> illustrates an example skill knowledge graph.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates another example skill knowledge graph.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> depicts section- and job category-specific counts for example phrases.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> depicts section- and job category-specific counts for example phrases.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b>C</figref> depicts section- and job category-specific counts for example phrases.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram that illustrates a computer system upon which an embodiment may be implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0020" num="0019">In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the techniques described herein. It will be apparent, however, that the techniques described herein may be practiced without these specific details. In other data samples, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the techniques described herein.</p><heading id="h-0006" level="1">1. General Overview</heading><p id="p-0021" num="0020">Techniques are described herein for automatically generating job descriptions using a corpus-based approach, e.g., based on a job description dataset. Specifically, job categories are identified for the documents in the job description dataset. Furthermore, the job description documents in the job description dataset are analyzed using both syntactic natural language parsing and semantic natural language parsing.</p><p id="p-0022" num="0021">According to an embodiment, section-specific natural language parsing is performed on the job description documents. Specifically, sections within each document in the job description dataset are automatically identified. Each identified section, within each job description, is automatically classified as being associated with a known section type of a list of known section types. The list of known section types may be provided by an administrator, identified using machine learning (ML), or identified using active machine learning, which utilizes input from an administrator. Each type of section can be analyzed independently of the other section types, which allows automatic generation of each section of a new job description based on the section-specific data derived from the job description dataset.</p><p id="p-0023" num="0022">To generate the section-specific data, based on the results of the natural language parsing performed on the documents of the job description dataset, section-specific and job category-specific selective phrases (which are nouns, adjectives, and verbs from the job description dataset that are selective for the various job categories within sections of each section type) are identified. According to an embodiment, selective phrases for a given job category are phrases that have high selectivity for the job category, i.e., phrases that are commonly found within job descriptions associated with the job category and are not commonly found within job descriptions associated with other categories.</p><p id="p-0024" num="0023">When a request to generate a new job description is received, the selective phrases are used to generate the new job description. Specifically, a job category is identified for the requested job description. Then, for each section type to be included in the new job description, the selective phrases for the section and for the identified job category are used to identify phrases to include within the section of the job description.</p><p id="p-0025" num="0024">Using techniques described herein, job descriptions may be automatically generated more efficiently than when generated by a human, even when the human starts from a template or previously-written job description. Thus, fewer computing resources are required to generate the job description using the described techniques. Furthermore, the job descriptions are generated using skill name databases, which results in job descriptions that accurately and thoroughly describe skills that are associated with the described job. The resulting job descriptions accurately and effectively communicate job requirements, which improves communication using the job descriptions.</p><heading id="h-0007" level="1">2. Example Computing Environment</heading><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example networked computer system in which various embodiments may be practiced. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is shown in simplified, schematic format for purposes of illustrating a clear example and other embodiments may include more, fewer, or different elements.</p><p id="p-0027" num="0026">In some embodiments, the networked computer system comprises a data management server computer <b>102</b> (&#x201c;server&#x201d;), a data repository <b>120</b>, and one or more client devices <b>130</b>, which are communicatively coupled directly or indirectly via one or more networks <b>118</b>.</p><p id="p-0028" num="0027">In some embodiments, server <b>102</b> broadly represents one or more computers, virtual computing instances, and/or instances of a server-based application that is programmed or configured with data structures and/or database records that are arranged to host or execute functions including but not limited to collecting skill data, managing knowledge graphs, and generating job descriptions for specified positions or job openings. The server <b>102</b> can comprise a server farm, a cloud computing platform, a parallel computer, or any other computing facility with sufficient computing power in data processing, data storage, and network communication for the above-described functions.</p><p id="p-0029" num="0028">In some embodiments, each of the one or more client devices <b>130</b> is programmed to submit requests, which can be related to skills, and process the replies to the requests. Each of the one or more client devices <b>130</b> can be programmed to also receive or transmit relevant data, such as resumes or job postings. Each of the one or more client devices <b>130</b> may comprise a desktop computer, laptop computer, tablet computer, smartphone, wearable device, or any other type of computing device with sufficient computing power in data processing, data storage, and network communication for the above-described functions.</p><p id="p-0030" num="0029">The networks <b>118</b> may be implemented by any medium or mechanism that provides for the exchange of data between the various elements of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Examples of network <b>118</b> include, without limitation, one or more of a cellular network, communicatively coupled with a data connection to the computing devices over a cellular antenna, a near-field communication (NFC) network, a Local Area Network (LAN), a Wide Area Network (WAN), the Internet, a terrestrial or satellite link, etc.</p><heading id="h-0008" level="1">3. Example Computer Components</heading><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates example components of server <b>102</b> in accordance with the disclosed embodiments. This figure is for illustration purposes only and server <b>102</b> can comprise fewer or more functional or storage components. Each of the functional components can be implemented as software components, general or specific-purpose hardware components, firmware components, or any combination thereof. A storage component can be implemented using any of relational databases, object databases, flat file systems, or JSON stores. A storage component can be connected to the functional components locally or through the networks using programmatic calls, remote procedure call (RPC) facilities or a messaging bus. A component may or may not be self-contained. Depending upon implementation-specific or other considerations, the components may be centralized or distributed functionally or physically.</p><p id="p-0032" num="0031">In some embodiments, as described in further detail below, server <b>102</b> can comprise job description syntactic parsing instructions <b>202</b>, selective phrase identification instructions <b>204</b>, knowledge graph management instructions <b>206</b>, and job description generation instructions <b>208</b>.</p><p id="p-0033" num="0032">As indicated above, server <b>102</b> can comprise a repository <b>120</b>. In some embodiments, the repository <b>120</b> is programmed or configured to manage relevant data structures and store relevant data for functions performed by server <b>102</b>. In the example embodiment of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, repository <b>120</b> comprises a job description dataset <b>222</b> and a skill knowledge graph dataset <b>224</b>.</p><heading id="h-0009" level="1">4. Functional Description</heading><p id="p-0034" num="0033">Server <b>120</b> is configured to automatically generate job descriptions using a corpus-based approach, e.g., based on job description dataset <b>222</b>. Server <b>102</b> can identify job categories for the documents in job description dataset <b>222</b> based on clustering the documents. Furthermore, server <b>102</b> analyzes the job description documents in job description dataset <b>222</b> using both syntactic natural language parsing and semantic natural language parsing.</p><p id="p-0035" num="0034">According to an embodiment, server <b>102</b> performs section-specific natural language parsing on the job description documents. Specifically, server <b>102</b> automatically identifies sections within each document in job description dataset <b>222</b>. Server <b>102</b> classifies each identified section, within each job description, as being associated with a known section type of a list of known section types. The list of known section types may be provided by an administrator, identified using machine learning, or identified using active machine learning, which utilizes input from an administrator. Each type of section is analyzed independently of the other section types, which allows server <b>102</b> to automatically generate each section of a new job description based on the section-specific data derived from job description dataset <b>222</b>.</p><p id="p-0036" num="0035">To generate the section-specific data, based on the results of the natural language parsing performed on the documents of job description dataset <b>222</b>, server <b>102</b> identifies section-specific and job category-specific selective phrases, which are nouns, adjectives, and verbs from job description dataset <b>222</b> that are selective for the various job categories within sections of each section type. According to an embodiment, selective phrases for a given job category are phrases that have high selectivity for the job category, i.e., phrases that are commonly found within job descriptions associated with the job category and are not commonly found within job descriptions associated with other categories. Embeddings in the context of machine learning can be generated for these selective phrases.</p><p id="p-0037" num="0036">When a request to generate a new job description is received, server <b>102</b> uses the selective phrase embeddings to generate the new job description. Specifically, server <b>102</b> identifies a job category for the requested job description. Then, for each section type to be included in the new job description, server <b>102</b> uses the selective phrase embeddings for the section and for the identified job category to identify phrases to include within the section of the job description.</p><p id="p-0038" num="0037">4.1. Job Categories</p><p id="p-0039" num="0038">According to an embodiment, each job description document in job description dataset <b>222</b> is associated with a job category of a plurality of job categories. The job description documents may be assigned a job category by an administrator, or categories may be automatically determined by server <b>102</b>.</p><p id="p-0040" num="0039">According to an embodiment, to automatically identify categories for job descriptions in dataset <b>222</b>, server <b>102</b> clusters the job descriptions documents based on information in the documents. For example, server <b>102</b> generates embeddings of the titles of the job description documents, or generates embeddings of words within the titles of the job description documents, and identifies clusters of job descriptions based on the embeddings. As another example, server <b>102</b> uses natural language processing (described in further detail below) to identify entities (such as nouns and verbs) within the job descriptions and clusters the job descriptions based on embeddings of the identified entities.</p><p id="p-0041" num="0040">Each cluster of job descriptions represents a particular job category, which, according to an embodiment, is labeled by a system administrator. The job descriptions within each given cluster are automatically associated with the job category of the cluster. For example, a job description title &#x201c;Software Engineer Manager&#x201d; is most closely semantically related to other job description titles associated with the job category &#x201c;Manager&#x201d;, and as such, the job description is associated with the job category &#x201c;Manager&#x201d;.</p><p id="p-0042" num="0041">As another example, the job description titled &#x201c;Software Engineer Manager&#x201d; comprises the nouns &#x201c;software&#x201d; (which is most closely semantically related to other words associated with the job category &#x201c;Software Developer&#x201d;), &#x201c;engineer&#x201d; (which is most closely semantically related to other words associated with the job category &#x201c;Engineering&#x201d;), and &#x201c;manager&#x201d; (which is most closely semantically related to other words associated with the job category &#x201c;Manager&#x201d;). As such, the job description is automatically associated with the job categories &#x201c;Software Developer&#x201d;, &#x201c;Engineering&#x201d;, and &#x201c;Manager&#x201d;.</p><p id="p-0043" num="0042">Job categories may be as specific as a job title or as general as a professional field. For example, each job description in the dataset is associated with one or more job categories, which may be metadata of the job description documents, or may be included in the job descriptions (e.g., the title of the job description, a &#x201c;field&#x201d; of the job description, industry associated with the job description, one or more keywords that are automatically identified within the job description), etc. As another example, machine learning techniques, including some statistical techniques, are used to automatically identify one or more pertinent job categories for each job description.</p><p id="p-0044" num="0043">The job categories associated with a given job description may be arranged hierarchically or may be otherwise related. For example, a particular job description with the title &#x201c;Sr. Software Engineering Manager&#x201d; is associated with the high-level job category of &#x201c;Software Technology&#x201d;, with the high-level job category of &#x201c;Management roles&#x201d;, and with a cross-over or composite job category of &#x201c;Software Manager&#x201d;, which is a sub-category of both of the high-level job categories. As another example, a particular job description with the title &#x201c;Neonatal Nurse Practitioner&#x201d; is associated with the high-level job category of &#x201c;Nursing&#x201d;, and with two sub-categories of &#x201c;Nursing&#x201d;: &#x201c;Neonatal Nurse&#x201d;, and &#x201c;Nurse Practitioner&#x201d;.</p><p id="p-0045" num="0044">For example, server <b>102</b> automatically identifies a configurable number of job categories for descriptions in job description dataset <b>222</b>. If there are few job descriptions in job description dataset <b>222</b> in the field of nursing compared to other fields in the dataset, then server <b>102</b> may identify only the field of &#x201c;nursing&#x201d; with associated job titles without any intervening specialties. As another example, in such circumstances, server <b>102</b> may identify only the field of &#x201c;nursing&#x201d;. Further, if there are many job descriptions in the dataset in the field of nursing compared to other fields in the dataset, server <b>102</b> may identify multiple specialties into which the job titles are further categorized, such as &#x201c;neonatal&#x201d;, &#x201c;hospital&#x201d;, etc.</p><p id="p-0046" num="0045">4.2. Job Description Sections</p><p id="p-0047" num="0046">Job description documents, in job description dataset <b>222</b>, include various sections with particular content requirements. To illustrate sections of a job description, <figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an example job description <b>400</b> that includes a title <b>402</b>, and section headers/types <b>404</b>A-F. According to an embodiment, title <b>402</b> is considered a section of the job description.</p><p id="p-0048" num="0047">For example, in section <b>404</b>A, titled &#x201c;Reporting relationship&#x201d;, job description <b>400</b> lists job titles of people to whom a person fulfilling the described position would report. As another example, in section <b>404</b>B, titled &#x201c;Job purpose/summary&#x201d;, job description <b>400</b> includes a summary of the role that person fulfilling the described position would fulfill.</p><p id="p-0049" num="0048">A particular section of a job description may include sub-sections. For example, section <b>404</b>F, titled &#x201c;Qualifications&#x201d;, includes two subsections <b>406</b>A and <b>406</b>B, respectively titled &#x201c;Education&#x201d; and &#x201c;Experience&#x201d;. Each of these subsections, while related, include different content. Specifically, in this case, &#x201c;Education&#x201d; subsection <b>406</b>A lists education-based qualifications, i.e., degrees that would be expected for a person fulfilling the described position. The &#x201c;Experience&#x201d; subsection <b>406</b>B includes experience-based qualifications, i.e., a number of years of experience performing similar jobs.</p><p id="p-0050" num="0049">Job description sections used herein are not limited to those included in example job description <b>400</b>. For example, any number of additional sections (such as &#x201c;Certifications/License requirements&#x201d;, and/or &#x201c;Clearance Levels&#x201d;) may be included with one or more sections in example job description <b>400</b> in a list of sections used to generate a job description. Furthermore, one or more sections used, according to embodiments herein, may be substantively the same as sections in job description <b>400</b> but with different labels, or may have different formats than the formats illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0051" num="0050">According to an embodiment, server <b>102</b> maintains information indicating a plurality of section types that is used for all job categories. According to yet another embodiment, server <b>102</b> maintains information indicating a job category-specific plurality of sections for one or more of the job categories. Embodiments are described herein in the context of server <b>102</b> maintaining information indicating a list of sections for all job categories. However, embodiments are not limited thereto.</p><p id="p-0052" num="0051">4.2.1 Automatically Identifying Job Description Sections</p><p id="p-0053" num="0052">According to another embodiment, server <b>102</b> automatically identifies various logical sections within each document of job description dataset <b>222</b>. The logical sections of a job description document are the chunks of text data separated by headers/labels, such as title <b>402</b> and headers <b>404</b>A-F of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, each of which occurs at the beginning of a respective logical section of the document.</p><p id="p-0054" num="0053">For example, document layout analysis (DLA) may be performed to identify logical sections within the job description documents in job description dataset <b>222</b>. (More information regarding DLA may be found in Galal M. BinMakhashen and Sabri A. Mahmoud. 2019. Document Layout Analysis: A Comprehensive Survey. <i>ACM Comput. Surv. </i>52, 6, Article 109 (October 2019), which is incorporated by reference as if fully set forth herein.) As another example, machine learning may be used to recognize the structure of job description documents, as described in Paass, Gerhard &#x26; Konya, Iuliu. (2011). Machine Learning for Document Structure Recognition. Studies in Computational Intelligence. 370. 10.1007/978-3-642-22613-7_12, which is incorporated by reference as if fully set forth herein.</p><p id="p-0055" num="0054">4.2.2 Automatically Identifying Job Description Section Types within the Job Description Dataset</p><p id="p-0056" num="0055">According to an embodiment, server <b>102</b> uses machine learning to identify a list of known job description section types that occur within documents of dataset <b>222</b>. Specifically, server <b>102</b> trains an ML model over a set of labeled job description documents that are labeled to identify the types of logical sections in the documents. Thereafter, server <b>102</b> uses the trained ML model to identify the types of sections in each job description document in job description dataset <b>222</b>.</p><p id="p-0057" num="0056">Furthermore, according to an embodiment, server <b>102</b> uses active learning to identify previously-unseen section types within job description dataset <b>222</b>. For example, server <b>102</b> uses the trained ML model to identify logical sections, within documents of job description dataset <b>222</b>, that have more than a threshold likelihood of being associated with a section type that is previously unseen. Server <b>102</b> requests a user to review the &#x201c;new&#x201d; section(s) identified using the ML model. Upon receiving an indication that one or more of the identified sections are of a particular previously-unknown section type, the identified section type is added to the list of known section types.</p><p id="p-0058" num="0057">According to an embodiment, one or more job categories are associated with a job category-specific list of section types. In this embodiment, when a new section type is identified within job description dataset <b>222</b>, server <b>102</b> determines whether the documents that include the new section type satisfies job category association criteria (e.g., over a threshold percentage of documents of the job category include the new section type, etc.). In response to determining that the new section type satisfies the job category association criteria, the new section type is included in a job category-specific list of sections for the identified job category.</p><p id="p-0059" num="0058">4.3 Syntactic Natural Language Processing of Job Descriptions</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>3</b></figref> includes a flowchart <b>300</b> that illustrates a process of automatically generating a requested job description based on a dataset including job descriptions, such as job description dataset <b>222</b> of repository <b>120</b>. The steps of flowchart <b>300</b> may be performed in any order, according to embodiments.</p><p id="p-0061" num="0060">At step <b>302</b> of flowchart <b>300</b>, syntactic parsing is performed, on a plurality of job descriptions comprising text data, to identify, within the plurality of job descriptions, a plurality of phrases that comprises one or more of: verb phrases, adjective phrases, or noun phrases. For example, based on job description syntactic parsing instructions <b>202</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, server <b>102</b> performs natural language processing (NLP) to identify a plurality of phrases (including, according to an embodiment, one or more verb phrases, one or more adjective phrases, and one or more noun phrases also referred to as &#x201c;entities&#x201d;) from the job descriptions of job description dataset <b>222</b>.</p><p id="p-0062" num="0061">Natural language processing includes applying techniques, such as segmentation, tokenization, and co-reference resolution, to language text data. Such techniques convert language text into a tokenized structured format that can be more effectively consumed by a machine learning model. According to an embodiment, server <b>102</b> identifies a plurality of phrases, including noun phrases, adjective phrases, and verb phrases, within the job descriptions of job description dataset <b>222</b> based on one or more of the following natural language processing steps: sentence segmentation, tokenization, part of speech tagging, lemmatization, stop words identification, dependency parsing, noun phrase identification, adjective phrase identification, verb phrase identification, named entity recognition, and co-reference resolution.</p><p id="p-0063" num="0062">A non-limiting example natural language parser is the Berkely neural constituency parser (benepar), which is used to detect noun phrases recursively. Frequently, noun phrases consist of smaller (embedded) noun phrases inside of them; the constituency parser may be used to extract noun phrases at different levels of syntactic recursion. As another non-limiting example, spaCy's dependency parser may further be used to identify transitive verbs in order to combine them with dependent noun phrases.</p><p id="p-0064" num="0063">The output of constituency and dependency parsers is a set of syntactic n-grams, which, according to an embodiment, form a skilled candidate pool. Each n-gram in the candidate pool is evaluated for similarity to each skill in a skills index, e.g., in knowledge graph dataset <b>224</b>. This evaluation may be done by vectorizing skills in the index and candidate pool, e.g., using a word2vec model. Furthermore, a k-nearest neighbor search is performed against the skills index with a predetermined cosine similarity threshold. For each skilled candidate, a pre-determined number (e.g., 100) of nearest neighbors are retrieved from the vector index; only those that meet the similarity threshold are considered as semantic matches.</p><p id="p-0065" num="0064">4.4 Semantic Natural Language Processing of Job Descriptions</p><p id="p-0066" num="0065">According to an embodiment, server <b>102</b> also performs semantic parsing on the job description documents of job description dataset <b>222</b> to produce formal representations of the meanings of sentences in the documents. After the syntactic processing yields different types of phrases, server <b>102</b> can perform semantic processing to determine which of those phrases are likely to correspond to information actually related to a job using any semantic processing technique known to someone skilled in the art, such as first order predicate logic, semantic nets, etc. For example, it can be recognized that &#x201c;certified public accountant&#x201d; as one or more syntactically determined phrases actually corresponds to one of the skill categories, as further discussed below. Therefore, this phrase could be used to determine a bigger set of selective phrases in a job description, as also further discussed below. Using the resulting semantic information, server <b>102</b> identifies semantic connections between entities identified within job description dataset <b>222</b>. For example, using semantic information, server <b>102</b> identifies skill names, within each given job description associated with one or more job categories, that are required for the described job. Server <b>102</b> encodes this information that relates skill names to job categories, e.g., in skill knowledge graphs.</p><p id="p-0067" num="0066">Specifically, server <b>102</b> maintains one or more skill knowledge graphs, e.g., in skill knowledge graph dataset <b>224</b> in repository <b>120</b>. A skill knowledge graph includes skill nodes that represent skill names and/or words of skill names, and edges that represent syntactic or semantic relationships between the skill nodes. Thus, the structure of a skill knowledge graph reflects the syntactic and/or semantic relationships among the represented skills. (For additional information regarding skill knowledge graphs, see the Skill Data Application incorporated by reference above.)</p><p id="p-0068" num="0067">To illustrate, <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> depicts an example skill knowledge graph <b>500</b> in skill knowledge graph dataset <b>224</b>. According to an embodiment, server <b>102</b> maintains knowledge graph <b>500</b> based on knowledge graph management instructions <b>206</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Knowledge graph <b>500</b> comprises a plurality of nodes that includes two example sub-graphs corresponding to the following synset nodes that represent words in hypernym trees: a node <b>502</b> representing &#x201c;software&#x201d; n.01, and a node <b>504</b> representing &#x201c;code&#x201d; n.03. Skill knowledge graph <b>500</b> further comprises synset word meaning indicators, such as &#x201c;n.03&#x201d; associated with the word &#x201c;Code&#x201d; in node <b>504</b>. This example synset word meaning indicator indicates that &#x201c;code&#x201d; is a noun with a meaning corresponding to the &#x201c;03&#x201d; identifier within a list of known meanings of the term as a noun.</p><p id="p-0069" num="0068">Dependency graphs <b>506</b>, <b>508</b>, <b>512</b>, and <b>514</b> in knowledge graph <b>500</b> comprise multiple skill name token nodes that are associated with the meaning of the corresponding synset node. For example, the dependency graph <b>506</b> for the skill name &#x201c;Java coding&#x201d; has a syntactic root &#x201c;coding&#x201d;. The corresponding word &#x201c;code&#x201d; is identified from the hypernym tree, and the skill name &#x201c;Java coding&#x201d; is determined to be closest in meaning to &#x201c;code&#x201d; n.03 in the hypernym tree. Therefore, dependency graph <b>506</b> is connected to the synset node <b>504</b> representing &#x201c;code&#x201d; n.03 in the knowledge graph. Similarly, dependency graph <b>508</b> for the skill name &#x201c;software development&#x201d; has a syntactic root &#x201c;software&#x201d;. The meaning of &#x201c;software&#x201d; corresponding to &#x201c;software&#x201d; n.01 is assigned to the skill name &#x201c;software development&#x201d;. Therefore, the dependency graph <b>508</b> is connected to the synset node <b>502</b> representing &#x201c;software&#x201d; n.01 in the knowledge graph.</p><p id="p-0070" num="0069">According to an embodiment described above, using relationships identified based on semantic information for the job description documents, server <b>102</b> records job category information in skill knowledge graph dataset <b>224</b> such that one or more skill names represented within dataset <b>224</b> are associated with one or more respective job categories, as identified using the semantic information. When server <b>102</b> identifies a node in skill knowledge graph dataset <b>224</b> that corresponds to a particular phrase from a job description, server <b>102</b> associates the node with context information, including the one or more job categories associated with the job description. According to an embodiment, server <b>102</b> also associates the identified node with one or more other nodes of phrases occurring within the job description. According to an embodiment, if no node in skill knowledge graph dataset <b>224</b> corresponds to a particular phrase from a job description, then server <b>102</b> creates a node for the phrase within dataset <b>224</b> and then associates the new node with context information as described above.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> depicts an example skill knowledge graph <b>520</b> that includes both the nodes of example skill knowledge graph <b>500</b> in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> and a plurality of job category nodes <b>522</b>-<b>530</b>. In example graph <b>520</b>, job category nodes <b>522</b>-<b>530</b> are organized as a hierarchy where parent nodes represent general job categories such as professional fields (e.g., &#x201c;software developer&#x201d; node <b>522</b>) and child nodes represent more specific job categories such as specialties within a professional field (e.g., &#x201c;localization&#x201d; node <b>524</b> and &#x201c;Java&#x201d; node <b>526</b>), and/or job titles within a professional field or field specialty (e.g., &#x201c;Manager&#x201d; node <b>528</b> and &#x201c;Senior Java Developer&#x201d; node <b>530</b>).</p><p id="p-0072" num="0071">According to an embodiment, using the semantic information derived from job description dataset <b>222</b>, server <b>102</b> further identifies organization names within the job descriptions. Server <b>102</b> associates, in skill knowledge graph dataset <b>224</b>, skill names found within a given job description with an organization also found within the job description. Thus, the skill names that co-occur with organization names within job descriptions are semantically related within skill knowledge graph dataset <b>224</b>.</p><p id="p-0073" num="0072">4.5 Identifying Section-Specific Selective Phrases for Job Categories</p><p id="p-0074" num="0073">A job description typically corresponds to a job title that falls in a job category, as further discussed below. As a simple example, the job title could be &#x201c;Java programmer&#x201d;, and the job category could be &#x201c;technology development&#x201d;. At step <b>304</b>, for each section type of a plurality of job description section types, a section-specific plurality of selective phrases is identified from the plurality of phrases, where the plurality of selective phrases comprises, for each job category of a plurality of job categories, a set of job category-specific selective phrase. As used herein, the term &#x201c;section-specific&#x201d; refers to information that is specific to a particular section type. According to an embodiment, selective phrases for a given job category are phrases that have high selectivity for the job category, i.e., phrases that are commonly found within job descriptions associated with the job category and are not commonly found within job descriptions associated with other categories. For example, server <b>102</b> uses skill knowledge graphs in skill knowledge graph dataset <b>224</b> and/or statistical analysis of the phrases identified within job description dataset <b>222</b> to identify selective phrases for the job description sections of each job category.</p><p id="p-0075" num="0074">To illustrate, for each element of a given job description, a set of phrases is extracted based on a skills index, e.g., in skill knowledge graph dataset <b>224</b>. A centroid vector is then calculated for all phrases within each section of a job posting, and phrases are ranked relative to that centroid. According to an embodiment, top ranking phrases are used to fill in the slots of the job description template. Any dense word embedding technique can be used for vectorizing the skills index, such as (attention-based transformers, word2vec, glove. According to an embodiment, the skip gram variant of the word2vec algorithm is used to generate text from identified phrases; under this unsupervised approach, embeddings are learned by predicting a context word relative to a target word, e.g., using a softmax function. According to an embodiment, vectors have 900 dimensions to capture as much useful information as possible without diminished return. According to an embodiment, the window size (radius for context words) is limited to 2 in order make the vectors more sensitive to local, semantic information.</p><p id="p-0076" num="0075">4.5.1 Analysis Based on Skill Knowledge Graphs</p><p id="p-0077" num="0076">According to an embodiment, at step <b>304</b> and based on selective phrase identification instructions <b>204</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, server <b>102</b> compares phrases identified within job description dataset <b>222</b> with skill knowledge graphs in skill knowledge graph dataset <b>224</b> to determine, for each section of a plurality of sections, a set of phrases, from the phrases identified for the section from job description dataset <b>222</b>, that are selective for each job category of a plurality of job categories associated with the job descriptions in dataset <b>222</b>. The set of phrases could include phrases that exist identified from existing job descriptions or additional skill names identified from the skill knowledge graphs.</p><p id="p-0078" num="0077">4.5.1.1 Determining Selective Phrases Based on Skill Knowledge Graphs</p><p id="p-0079" num="0078">For example, server <b>102</b> identifies selective phrases within a particular job description document, associated with one or more job categories, by identifying those phrases, within the job description document, that match skill names in skill knowledge graph dataset <b>224</b>. According to an embodiment, server <b>102</b> identifies matches between phrases and skill names in skill knowledge graph dataset <b>224</b> based on one or more of: exact term matching, fuzzy matching, distances between term embeddings (as described in further detail below), etc. Furthermore, these search techniques may also be used in connection with synonyms, e.g., from a repository of synonyms, of one or both of skill names and one or more words in the selective phrases. Based on a match between a skill name represented in a particular skill knowledge graph and a given phrase within a job description document associated with a particular job category, server <b>102</b> includes, in the set of job category-specific selective phrases for the particular job category, the matching skill name.</p><p id="p-0080" num="0079">According to an embodiment, server <b>102</b> further includes, in the set of job category-specific selective phrases for the particular job category, phrases derived from nodes within skill knowledge graph dataset <b>224</b> that are located within a threshold semantic distance (length of the path) of a node representing the skill name matching the selective phrase. As indicated above, each skill name in the skill knowledge graph could be associated with metadata, such as a list of skill categories or a list of associated job titles or job categories. The list of skill categories could be &#x201c;technical skills&#x201d;, &#x201c;human agents&#x201d;, such as a process server or a certified public accountant, &#x201c;organizations&#x201d;, such as Association of Computing Machinery (ACM) membership, or &#x201c;certifications&#x201d;, such as a certification offered by Cisco, &#x201c;communication skills&#x201d;, &#x201c;organization skills&#x201d;, and so on.</p><p id="p-0081" num="0080">For example, a particular job description in dataset <b>222</b>, associated with the job category &#x201c;Software Developer&#x201d;, includes the phrase &#x201c;Java code&#x201d;. The threshold distance for finding related skill names in this example is one, which can be considered to correspond to traversal of at most a single edge within a skill knowledge graph. Server <b>102</b> determines that the target phrase matches the skill name &#x201c;Java coding&#x201d; represented by the dependency graph <b>506</b> in skill knowledge graph <b>500</b>. For example, server <b>102</b> uses exact or fuzzy matching to identify matches between phrases and skill names in skill knowledge graphs. Based on identifying a match, server <b>102</b> includes the phrase &#x201c;Java code&#x201d; in the set of selective phrases identified for the job category &#x201c;Software Developer&#x201d;.</p><p id="p-0082" num="0081">Furthermore, the distance between dependency graph node <b>506</b> for &#x201c;Java coding&#x201d; and dependency graph <b>512</b> for &#x201c;code development&#x201d; can be computed to be zero because both dependency graph <b>506</b> and dependency graph <b>512</b> are connected to synset node <b>504</b>. As such, (assuming the term is not already included in the applicable selective phrase set) server <b>102</b> includes &#x201c;code development&#x201d; in the set of selective phrases identified for the job category &#x201c;Software Developer&#x201d;. Furthermore, the distance between the dependency graph <b>506</b> for &#x201c;Java coding&#x201d; rooted at node <b>504</b> and the dependency graph <b>508</b> for &#x201c;software engineering&#x201d; rooted at node <b>502</b> can be computed to be one through edge <b>510</b> in graph <b>500</b>. Because this is within the threshold distance, server <b>102</b> includes &#x201c;software engineering&#x201d; in the set of selective phrases identified for the job category &#x201c;Software Developer&#x201d;, if this term is not already in the set. Similarly, the dependency graph <b>514</b> can be computed to be a distance of one from dependency graph <b>506</b>, and, as such, server <b>102</b> includes &#x201c;software platforms&#x201d; in the set of selective phrases identified for the job category &#x201c;Software Developer&#x201d;, if this term is not already in the set. While this example shows only skill names being added to the sets of selective phrases, any other kind of data in the skill knowledge graphs may be included in the sets of selective phrases based on phrase/node matching.</p><p id="p-0083" num="0082">In addition to or in place of using a threshold distance, the traversal of the skill knowledge graph could also be limited by the skill categories noted above. For example, the skill names in a connected node could be included until the category of the skill name no longer applies to the current job description section.</p><p id="p-0084" num="0083">4.5.1.2 Traversing the Skill Knowledge Graph to Identify Selective Phrases</p><p id="p-0085" num="0084">According to an embodiment, server <b>102</b> traverses skill knowledge graphs in dataset <b>224</b>, which include nodes representing job categories as depicted in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, to identify selective phrases for the various job categories. According to an embodiment, server <b>102</b> includes, in the selective phrases for a target job description section and a target job category, phrases that were identified within the target section of job description documents in dataset <b>222</b> that match nodes associated with the target job category in a skill knowledge graph. Additional job categories identified from the skill knowledge graph can be added as selective phrases subject to a threshold degree of separation from an initially matching job category in the skill knowledge graph.</p><p id="p-0086" num="0085">4.5.2 Statistical Analysis of Job Description Text</p><p id="p-0087" num="0086">According to an embodiment, at step <b>304</b>, server <b>102</b> performs statistical analysis based on selective phrase identification instructions <b>204</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine, for each section of a plurality of sections, a set of phrases, from the phrases identified for the section from job description dataset <b>222</b>, that are selective for each job category of a plurality of job categories associated with the job descriptions in dataset <b>222</b>.</p><p id="p-0088" num="0087">According to an embodiment, for each section in the list of job description sections, server <b>102</b> calculates a plurality of job category-specific phrase counts as a starting point for identifying selective phrases. Specifically, for each phrase of the plurality of phrases, server <b>102</b> counts a number of times each phrase is included in the target section of the job descriptions of each job category of the plurality of job categories. Server <b>102</b> maps sections of a particular job description, in dataset <b>222</b>, to sections in the maintained list of sections in any way, including exact match, fuzzy match, and meaning matches using knowledge graphs such as the skill knowledge graphs described in detail below. According to an embodiment, server <b>102</b> stores identified mappings between sections of a job description and sections in the maintained list, and uses this mapping data when identifying mappings for sections of other job descriptions.</p><p id="p-0089" num="0088">To illustrate, server <b>102</b> identifies a plurality of phrases (including noun, verb, and adjective phrases) within job description dataset <b>222</b>, which includes the following phrases: &#x201c;ideal candidate&#x201d;, &#x201c;CAD&#x201d;, &#x201c;patient charts&#x201d;, &#x201c;C++&#x201d;, and &#x201c;Microsoft Word&#x201d;. In this example, job description dataset <b>222</b> includes 10,000 job descriptions. Furthermore, in this example, the list of job description sections includes &#x201c;Competencies&#x201d;, &#x201c;Tools and Technologies&#x201d;, and &#x201c;Duties and Responsibilities&#x201d;, and the plurality of job categories includes &#x201c;nursing&#x201d;, &#x201c;architecture&#x201d;, and &#x201c;software developer&#x201d;. Server <b>102</b> determines that the section- and job category-specific counts for the example phrases are indicated in <figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>C</figref>.</p><p id="p-0090" num="0089">4.5.2.1 Selectivity Values</p><p id="p-0091" num="0090">Based on the calculated phrase counts for each phrase as indicated in <figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>C</figref>, server <b>102</b> calculates, for each section, a section- and job category-specific selectivity value that indicates how selective the phrase is for the target section of the target job category.</p><p id="p-0092" num="0091">According to an embodiment, section- and job category-specific selectivity values are TF-IDF values. (For additional information about TF-IDF, see Hand, David J., and Niall M. Adams. &#x201c;Data Mining.&#x201d; Wiley StatsRef: Statistics Reference Online (2014): 1-7&#x2014;referred to herein as the &#x201c;TF-IDF Reference&#x201d;, which is hereby incorporated by reference as if fully set forth herein.) A TF-IDF value measures how relevant a phrase is to one or more target documents in a collection of documents based on how often the phrase appears in the one or more target documents and how common the phrase is within the rest of the collection of documents. A TF-IDF value for a given phrase approaches 0 when the phrase is not unique to the one or more target documents, and increases in value when the phrase is concentrated in the one or more target documents and is generally not found within documents, in the collection, other than the target documents.</p><p id="p-0093" num="0092">In this embodiment, server <b>102</b> calculates section- and job category-specific TF-IDF values, for each phrase identified from dataset <b>222</b>, where the target documents are the particular section of job descriptions associated with the particular job category. Thus, the TF-IDF value for a given phrase with respect to a particular section of job descriptions associated with a particular job category, in light of the entire dataset <b>222</b>, provides job category-wise information about the distribution of that phrase in the given section within the dataset.</p><p id="p-0094" num="0093">An example overview of section- and job category-specific selectivity value calculation using TF-IDF is indicated below:</p><p id="p-0095" num="0000">A. For each section of the list of job description sections:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0094">1. For each phrase of the plurality of phrases (t<sub>i</sub>&#x3f5;T) identified in dataset <b>222</b> (D):        <ul id="ul0003" list-style="none">            <li id="ul0003-0001" num="0095">a. For each job category c<sub>j </sub>in the list of job categories, compute tf&#x2212;idf<sub>t</sub><sub><sub2>i</sub2></sub><sub>,c</sub><sub><sub2>j</sub2></sub>:</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0096" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>tf&#x2212;=idf</i><sub>t</sub><sub><sub2>i</sub2></sub><sub>,c</sub><sub><sub2>j</sub2></sub>=freq<sub>t</sub><sub><sub2>i</sub2></sub><sub>,c</sub><sub><sub2>j</sub2></sub><i>&#xd7;inv</i>_freq<sub>t</sub><sub><sub2>i</sub2></sub><sub>,D </sub><?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0004" list-style="none">    <li id="ul0004-0001" num="0000">    <ul id="ul0005" list-style="none">        <li id="ul0005-0001" num="0096">where freq<sub>t</sub><sub><sub2>i</sub2></sub><sub>,c</sub><sub><sub2>j </sub2></sub>is the frequency of phrase t<sub>i </sub>within the target section of job descriptions associated with the specific job category c<sub>j</sub>, and where inv_freq<sub>t</sub><sub><sub2>i</sub2></sub><sub>,D </sub>is the inverse frequency of phrase t<sub>i </sub>within the target section of job descriptions of dataset <b>222</b>. The term freq<sub>t</sub><sub><sub2>i</sub2></sub><sub>,c</sub><sub><sub2>j </sub2></sub>is higher the more common phrase t<sub>i </sub>is within the target section of job descriptions associated with the specific job category c<sub>j </sub>(e.g., the raw count of instances of phrase t<sub>i </sub>within the target section of job descriptions associated with the specific job category c<sub>j</sub>). The term inv_freq<sub>t</sub><sub><sub2>i</sub2></sub><sub>,D </sub>approaches 0 the more common phrase t<sub>i </sub>is within the target section of job descriptions of dataset <b>222</b> (e.g., dividing the total number of job descriptions of dataset <b>222</b> that contain the target section by the number of job descriptions that contain phrase t<sub>i </sub>within the target section, and calculating the logarithm of the result).</li>    </ul>    </li></ul></p><p id="p-0097" num="0097">Furthermore, other techniques that can compute document-based phrase differences could also be used to identify the section- and job category-specific selectivity values according to embodiments, such as phrase weighting techniques, vectorization techniques (e.g., semantic vectors), and categorical-categorical association analysis (e.g., Cramer's V).</p><p id="p-0098" num="0098">4.5.2.2 Determining Selective Phrases Based on Selectivity Values</p><p id="p-0099" num="0099">Once the section- and job category-specific selectivity values are determined for the phrases from dataset <b>222</b>, server <b>102</b> identifies selective phrases for the sections of the different job categories by determining whether the section- and job category-specific selectivity value for each phrase satisfies selectivity criteria, such as the selectivity value exceeding a particular threshold. Responsive to determining that the section- and job category-specific selectivity value for a phrase within a given section and job category satisfies the selectivity criteria, server <b>102</b> includes the phrase in the set of selective phrases for the job category in the plurality of selective phrases for the given section.</p><p id="p-0100" num="0100">4.5.3 Determining Selective Phrases Based on Selectivity Values and Skill Knowledge Graphs</p><p id="p-0101" num="0101">According to an embodiment, in connection with identifying selective phrases using statistical analysis, server <b>102</b> uses skill knowledge graph dataset <b>224</b> to identify additional selective phrases for the plurality of job categories. For example, server <b>102</b> matches selective phrases identified for a particular job category against skill names in skill knowledge graph dataset <b>224</b>. According to an embodiment, server <b>102</b> identifies matches between selective phrases and skill names or other data represented in a skill knowledge graph based on one or more of: exact term matching, fuzzy matching, distances between term embeddings (as described in further detail below), etc.</p><p id="p-0102" num="0102">Based on a match between a skill name, for example, in a particular skill knowledge graph and a given selective phrase for a particular job category, server <b>102</b> includes, in the particular set of job category-specific selective phrases, all information within the particular skill knowledge graph that is located within a threshold distance (length of the path) of the matching skill graph node, as described in detail above.</p><p id="p-0103" num="0103">4.6 Generating a Requested Job Description</p><p id="p-0104" num="0104">Returning to the discussion of flowchart <b>300</b>, at step <b>306</b>, a request to generate a job description is received, and it is determined, based on the request, that the request to generate a job description is associated with a particular job category of the plurality of job categories. For example, server <b>102</b> receives a request to generate a particular job description from client devices <b>130</b>. The received request may be associated with one or more of the following for the requested job description: a job category (e.g., included in skill dependency graph dataset <b>224</b>), an indication that multiple job descriptions for multiple job categories should be created (which may be indicated by a lack of parameters), at least one key phrase for the job description (such as a set of skill names), etc.</p><p id="p-0105" num="0105">According to an embodiment, steps <b>308</b>-<b>310</b> are performed by server <b>102</b> in response to receiving the request to generate a job description. Specifically, at step <b>308</b>, for each section type of the plurality of job description section types, a corresponding section in a generated job description is generated by including, in the corresponding section, one or more phrases from a particular set of selective phrases, specific to the particular job category, from the section-specific plurality of selective phrases for said each section type. In one embodiment, the one or more phrases are included in a set of k-nearest neighbors of a centroid vector within a vector space of the particular set of selective phrases. According to an embodiment, server <b>102</b> generates the requested job description based on job description generation instructions <b>208</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. At step <b>310</b>, the generated job description is returned as a response to the request.</p><p id="p-0106" num="0106">4.6.1 Generating Phrase Embeddings</p><p id="p-0107" num="0107">According to an embodiment, embeddings for the section-specific selective phrases are derived from skill knowledge dataset <b>224</b>. Specifically, the distances between embeddings of the selective phrases reflect distances between corresponding nodes in skill knowledge dataset <b>224</b>. Nodes corresponding to selective phrases may be identified in any way, including exact term matching, fuzzy matching, and synonym matching. For example, server <b>102</b> trains a vectorizing ML model, e.g., implemented by a neural network, based on skill knowledge dataset <b>224</b> to produce a trained vectorizing ML model. Thus, embeddings for phrases derived from the trained vectorizing ML model encode the semantics reflected in the skills knowledge graphs. To illustrate, it is determined that the phrases &#x201c;Microsoft Word&#x201d; and &#x201c;Microsoft Office&#x201d; have a high frequency of co-occurrence within the sections of job descriptions in dataset <b>222</b>, and as such, are closely located within skill knowledge dataset <b>224</b>. Thus, the embeddings of these phrases are close together within the vector space of the embeddings.</p><p id="p-0108" num="0108">4.6.2 Identifying Selective Phrases to Include in the Requested Job Description Based on a Centroid Vector within a Vector Space of Phrase Embeddings</p><p id="p-0109" num="0109">According to an embodiment, server <b>102</b> determines adequate text, to include in each section of the requested job description, based on a job category that is either explicitly included in the request or that is determined based on the request. A job category may be implied by a request based on the absence of any information in the request, which, e.g., causes server <b>102</b> to generate a job description for a default job category (described in further detail below), or a plurality of job descriptions for a plurality of job categories, etc.</p><p id="p-0110" num="0110">For example, server <b>102</b> receives a request to generate a job description for the job category &#x201c;Software Developer&#x201d;. Server <b>102</b> determines phrases to include in each section of the requested job description, from the Software Developer category-specific set of selective phrases, based on one or more centroid vectors calculated for the job category. Alternatively, these centroid vectors may be calculated in response to receiving the request. The user request for generating a job description could indicate requirements or other details at any level. For example, the user request could include a job title, or a required skill or competency. Server <b>102</b> can parse the request and imply the job category or assign a portion of the request to a section of the job description using any natural language processing techniques known to someone skilled in the art.</p><p id="p-0111" num="0111">Selective phrases may be identified for inclusion in a requested job description in many ways. For example, the embeddings are clustered in the vector space and one representative phrase is identified from each cluster, or a centroid vector may be calculated for the vector space and k nearest neighbors are identified based on the centroid vector.</p><p id="p-0112" num="0112">According to an embodiment, for each section of the job description, server <b>102</b> determines a centroid vector for the target section within a vector space that includes embeddings of the section- and job category-specific selective phrases associated with the target job category and the target section. (For additional information on centroid vector generation for word embeddings, see Gaetano Rossiello, et al. &#x201c;Centroid-based Text Summarization through Compositionality of Word Embeddings.&#x201d; Association for Computational Linguistics (April 2017), which is hereby incorporated by reference as if fully set forth herein.) Server <b>102</b> uses one or more centroid vectors, as described in further detail below, to identify which phrases to include in the generated job description.</p><p id="p-0113" num="0113">4.6.2.1 Calculating a Centroid Vector</p><p id="p-0114" num="0114">For example, a centroid vector (V) may be represented as the sum of the embeddings (E) of the set of selective phrases (S<sub>T.C</sub>) associated with the target job category (T) and the target section (C) as follows:</p><p id="p-0115" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mrow>  <mi>V</mi>  <mo>=</mo>  <mrow>   <munder>    <mo>&#x2211;</mo>    <mrow>     <mi>w</mi>     <mo>&#x2208;</mo>     <msub>      <mi>S</mi>      <mrow>       <mi>T</mi>       <mo>,</mo>       <mi>C</mi>      </mrow>     </msub>    </mrow>   </munder>   <mrow>    <mi>E</mi>    <mo>&#x2061;</mo>    <mo>(</mo>    <mi>w</mi>    <mo>)</mo>   </mrow>  </mrow> </mrow></math></maths></p><p id="p-0116" num="0115">According to another embodiment, server <b>102</b> generates a job description based on one or more key phrases provided with the request for a job description. If only one key phrase is included with the request, and the key phrase is not a known job category, server <b>102</b> uses the embedding of the key phrase as the centroid vector for each section-specific set of embeddings, or server <b>102</b> matches the key phrase to a known job category using any of the methods described herein.</p><p id="p-0117" num="0116">If more than one key phrase is included with the request, then, according to an embodiment, server <b>102</b> calculates the centroid vector of the key phrases instead of calculating the centroid vector of all of the identified selective phrases for a given job category. According to another embodiment, server <b>102</b> calculates both a first centroid vector of the key phrases and a second centroid vector of all of the identified selective phrases for a relevant job category and uses, as the final centroid vector, an average of the first and second centroid vectors.</p><p id="p-0118" num="0117">4.6.2.2 K Nearest Neighbors</p><p id="p-0119" num="0118">Server <b>102</b> identifies a set of most-relevant phrases for a target section, from the set of selective phrases (S<sub>T.C</sub>), based on the k nearest neighbors of the calculated centroid vector for the target section. Specifically, server <b>102</b> identifies the k phrase embeddings, within the vector space, that are nearest to the calculated centroid vector. According to an embodiment, the target number of relevant phrases for a given section (k) is section specific.</p><p id="p-0120" num="0119">According to an embodiment, server <b>102</b> ranks the k phrase embeddings based, at least in part, on distance from the centroid vector. According to an embodiment, during generation of the requested job description, server <b>102</b> inserts phrases corresponding to the identified phrase embeddings in ranked order within the target job description section in the generated job description.</p><p id="p-0121" num="0120">In some embodiments, without any user input, server <b>102</b> could automatically generate a job description for each of known job titles even job categories, the latter possibly useful as templates for people needing a job description for a specific position within a given job category.</p><p id="p-0122" num="0121">4.6.2.3 Other Techniques for Phrase Identification</p><p id="p-0123" num="0122">In some embodiments, server <b>102</b> identifies phrases to be added into a generated job description in alternative ways. For example, the embeddings for section-specific selective phrases, for a particular section, are clustered, and representatives of each of the clusters are included in the particular section of the generated job description. The phrases that are identified based on the clusters can be ranked based on the sizes of respective clusters, for example.</p><p id="p-0124" num="0123">Alternatively, pairwise similarities between embeddings using any similarity measure known to someone skilled in the art could be used for each pair of selective phrases for a particular section. The set of descriptions to be included in the generated job description could start with the pair having the highest similarity, and more pairs could be added to the group based on their similarities to the pairs already in the group. The selected phrases eventually in the set of descriptions can be ranked by the order of being added into the set.</p><p id="p-0125" num="0124">4.6.2.4 Deduplication of Identified Phrases</p><p id="p-0126" num="0125">According to an embodiment, prior to generating a requested job description, server <b>102</b> performs deduplication of the phrases identified for each section of the job description. Deduplication may be performed in any number of ways. For example, when identifying the k nearest neighbors of a centroid vector, as described in detail above, server <b>102</b> identifies clusters of phrase embeddings in the vector space, where a cluster is a group of embeddings that are within a threshold semantic distance of each other as represented in the vector space. Server <b>102</b> includes, in the set of k nearest neighbors, a representative phrase from each of the k clusters nearest to the centroid vector in the vector space.</p><p id="p-0127" num="0126">4.6.3 Generating a Requested Job Description</p><p id="p-0128" num="0127">According to an embodiment, server <b>102</b> maintains a template for each job description section, and causes the identified phrases to be inserted into the template. For example, a section template may indicate a format/form(s)/types for the text to be included therein, including the section title and one or more text forms, such as noun phrases, full sentences, paragraphs including multiple full sentences, text length, etc. Furthermore, the template for a particular section may indicate one or more text types to include therein, such as skill names, job titles, etc. The template can be designed so that all the relevant text is included in the template, and the only &#x201c;blanks&#x201d; left to be filled out are selective phrases that fall into one or more of the &#x201c;skill categories&#x201d;, as discussed above. Furthermore, the template for a particular section may indicate a format for the section, such as line alignment, font type, font size, list format, spacing between lines, etc. Furthermore, a section template may indicate one or more keywords to be included in the text for the section.</p><p id="p-0129" num="0128">To illustrate, a template for the title section may indicate a relatively large font size for the title and require that the title be included first within the generated job description. Further, a template for the &#x201c;reporting relationship&#x201d; section may indicate that the section title should be bolded, and that a bulleted list of job titles should follow the section title. Further, a template for the &#x201c;duties and responsibilities&#x201d; section may indicate that the section title should be bolded, and that, after the title, the section includes the phrase &#x201c;The ideal candidate will be responsible for:&#x201d; followed by a bulleted list of sentences.</p><p id="p-0130" num="0129">To further illustrate, server <b>102</b> receives the following non-limiting example request to generate a job description: JDG.generate(&#x201c;Registered Nurse&#x201d;:title; &#x201c;Nursing&#x201d;:job_category; &#x201c;Hospital&#x201d;:key_phrase; &#x201c;Emergency Room&#x201d;:key_phrase). This example is illustrative of a request to generate a job description that includes both key phrases and a job category. In response to receiving the request, server <b>102</b> calculates a respective centroid vector, from the set of selective phrases for the job category &#x201c;nursing&#x201d;, for each section of the job description. In this example, the centroid vector is calculated based on the provided key phrases, including &#x201c;registered nurse&#x201d;, &#x201c;hospital&#x201d;, and &#x201c;emergency room&#x201d;. Inclusion of these key words will influence the content of the resulting job description such that more information about hospitals and emergency room duties will be included than might be included in the more general job description that would be generated given only the job category &#x201c;nursing&#x201d;.</p><p id="p-0131" num="0130">In this example request, the title is already indicated. In the absence of an explicitly indicated title, server <b>102</b> may use a default title for a determined or indicated job category for the generated job description. Furthermore, server <b>102</b> may use a job title that is associated, in dataset <b>224</b>, with skill names identified for the job description. In addition, the server <b>102</b> could present a list of potential job titles in the job category for selection from a user or a user device.</p><p id="p-0132" num="0131">Furthermore, for the job description section &#x201c;Reporting relationship&#x201d;, the template indicates that this section should include a bulleted list of job titles (e.g., noun phrases). Server <b>102</b> calculates a centroid vector based on the provided key phrases, including &#x201c;registered nurse&#x201d;, &#x201c;hospital&#x201d;, and &#x201c;emergency room&#x201d;, in the vector space for embeddings of selective phrases identified for the &#x201c;nursing&#x201d; category in the &#x201c;Reporting relationship&#x201d; section. Server <b>102</b> determines the k nearest neighbors of the centroid vector, and includes each of the selective phrases represented by the k identified embeddings in the &#x201c;Reporting relationship&#x201d; section, i.e., in ranked order. As the &#x201c;Reporting relationship&#x201d; may be expected to indicate a reporting hierarchy, server <b>102</b> can use simply the highest-ranking selective phrase, probably a job title, and identify and include a predetermined reporting hierarchy involving the job title.</p><p id="p-0133" num="0132">To further illustrate, for the job description section &#x201c;Duties and responsibilities&#x201d;, the template indicates that this section should include the text &#x201c;The ideal candidate will be responsible for:&#x201d; followed by a bulleted list of sentences. To identify content for the bulleted list of sentences, server <b>102</b> calculates a centroid vector based on the provided key phrases, including &#x201c;registered nurse&#x201d;, &#x201c;hospital&#x201d;, and &#x201c;emergency room&#x201d;, in the vector space for embeddings of selective phrases identified for the &#x201c;nursing&#x201d; category in the &#x201c;Duties and responsibilities&#x201d; section. Server <b>102</b> determines the k nearest neighbors of the centroid vector, and uses a trained ML model (such as word2vec, glove, or Bert) to build sentences from the k identified embeddings. For example, a skip gram variant of the word2vec ML model is used, which is trained based on job description dataset <b>222</b>.</p><p id="p-0134" num="0133">According to an embodiment, one or more sections (such as &#x201c;About the Company&#x201d; sections) are wholly generated using a machine learning (ML) natural language generation model (such as BERT, GPT-2, etc.). For example, server <b>102</b> trains the ML model on the about section content from a plurality of job descriptions associated with a particular company. Then, in connection with generating a job description associated with the particular company, server <b>102</b> uses the trained ML model to predict the text of an about section for the company.</p><heading id="h-0010" level="1">5. Hardware Overview</heading><p id="p-0135" num="0134">According to one embodiment, the techniques described herein are implemented by one or more special-purpose computing devices. The special-purpose computing devices may be hard-wired to perform the techniques, or may include digital electronic devices such as one or more application-specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs) that are persistently programmed to perform the techniques, or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware, memory, other storage, or a combination. Such special-purpose computing devices may also combine custom hard-wired logic, ASICs, or FPGAs with custom programming to accomplish the techniques. The special-purpose computing devices may be desktop computer systems, portable computer systems, handheld devices, networking devices or any other device that incorporates hard-wired and/or program logic to implement the techniques.</p><p id="p-0136" num="0135">For example, <figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram that illustrates a computer system <b>700</b> upon which an embodiment of the invention may be implemented. Computer system <b>700</b> includes a bus <b>702</b> or other communication mechanism for communicating information, and a hardware processor <b>704</b> coupled with bus <b>702</b> for processing information. Hardware processor <b>704</b> may be, for example, a general-purpose microprocessor.</p><p id="p-0137" num="0136">Computer system <b>700</b> also includes a main memory <b>706</b>, such as a random access memory (RAM) or other dynamic storage device, coupled to bus <b>702</b> for storing information and instructions to be executed by processor <b>704</b>. Main memory <b>706</b> also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor <b>704</b>. Such instructions, when stored in non-transitory storage media accessible to processor <b>704</b>, render computer system <b>700</b> into a special-purpose machine that is customized to perform the operations specified in the instructions.</p><p id="p-0138" num="0137">Computer system <b>700</b> further includes a read only memory (ROM) <b>708</b> or other static storage device coupled to bus <b>702</b> for storing static information and instructions for processor <b>704</b>. A storage device <b>710</b>, such as a magnetic disk, optical disk, or solid-state drive is provided and coupled to bus <b>702</b> for storing information and instructions.</p><p id="p-0139" num="0138">Computer system <b>700</b> may be coupled via bus <b>702</b> to a display <b>712</b>, such as a cathode ray tube (CRT), for displaying information to a computer user. An input device <b>714</b>, including alphanumeric and other keys, is coupled to bus <b>702</b> for communicating information and command selections to processor <b>704</b>. Another type of user input device is cursor control <b>716</b>, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor <b>704</b> and for controlling cursor movement on display <b>712</b>. This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.</p><p id="p-0140" num="0139">Computer system <b>700</b> may implement the techniques described herein using customized hard-wired logic, one or more ASICs or FPGAs, firmware and/or program logic which in combination with the computer system causes or programs computer system <b>700</b> to be a special-purpose machine. According to one embodiment, the techniques herein are performed by computer system <b>700</b> in response to processor <b>704</b> executing one or more sequences of one or more instructions contained in main memory <b>706</b>. Such instructions may be read into main memory <b>706</b> from another storage medium, such as storage device <b>710</b>. Execution of the sequences of instructions contained in main memory <b>706</b> causes processor <b>704</b> to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions.</p><p id="p-0141" num="0140">The term &#x201c;storage media&#x201d; as used herein refers to any non-transitory media that store data and/or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non-volatile media and/or volatile media. Non-volatile media includes, for example, optical disks, magnetic disks, or solid-state drives, such as storage device <b>710</b>. Volatile media includes dynamic memory, such as main memory <b>706</b>. Common forms of storage media include, for example, a floppy disk, a flexible disk, hard disk, solid-state drive, magnetic tape, or any other magnetic data storage medium, a CD-ROM, any other optical data storage medium, any physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, NVRAM, any other memory chip or cartridge.</p><p id="p-0142" num="0141">Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example, transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus <b>702</b>. Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.</p><p id="p-0143" num="0142">Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor <b>704</b> for execution. For example, the instructions may initially be carried on a magnetic disk or solid-state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system <b>700</b> can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus <b>702</b>. Bus <b>702</b> carries the data to main memory <b>706</b>, from which processor <b>704</b> retrieves and executes the instructions. The instructions received by main memory <b>706</b> may optionally be stored on storage device <b>710</b> either before or after execution by processor <b>704</b>.</p><p id="p-0144" num="0143">Computer system <b>700</b> also includes a communication interface <b>718</b> coupled to bus <b>702</b>. Communication interface <b>718</b> provides a two-way data communication coupling to a network link <b>720</b> that is connected to a local network <b>722</b>. For example, communication interface <b>718</b> may be an integrated services digital network (ISDN) card, cable modem, satellite modem, or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface <b>718</b> may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface <b>718</b> sends and receives electrical, electromagnetic, or optical signals that carry digital data streams representing various types of information.</p><p id="p-0145" num="0144">Network link <b>720</b> typically provides data communication through one or more networks to other data devices. For example, network link <b>720</b> may provide a connection through local network <b>722</b> to a host computer <b>724</b> or to data equipment operated by an Internet Service Provider (ISP) <b>726</b>. ISP <b>726</b> in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the &#x201c;Internet&#x201d; <b>728</b>. Local network <b>722</b> and Internet <b>728</b> both use electrical, electromagnetic, or optical signals that carry digital data streams. The signals through the various networks and the signals on network link <b>720</b> and through communication interface <b>718</b>, which carry the digital data to and from computer system <b>700</b>, are example forms of transmission media.</p><p id="p-0146" num="0145">Computer system <b>700</b> can send messages and receive data, including program code, through the network(s), network link <b>720</b> and communication interface <b>718</b>. In the Internet example, a server <b>730</b> might transmit a requested code for an application program through Internet <b>728</b>, ISP <b>726</b>, local network <b>722</b> and communication interface <b>718</b>.</p><p id="p-0147" num="0146">The received code may be executed by processor <b>704</b> as it is received, and/or stored in storage device <b>710</b>, or other non-volatile storage for later execution.</p><p id="p-0148" num="0147">In the foregoing specification, embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention, and what is intended by the applicants to be the scope of the invention, is the literal and equivalent scope of the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230004941A1-20230105-M00001.NB"><img id="EMI-M00001" he="6.69mm" wi="76.20mm" file="US20230004941A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method of automatically generating job descriptions, comprising:<claim-text>obtaining, by a processor, a dependency graph for each skill name of a plurality of skill names, each dependency graph having a node for each word in the skill name and an edge representing a syntactic relationship between words in two nodes of the dependency graph connected by the edge;</claim-text><claim-text>obtaining, by the processor, hypernym tree data comprising hypernym trees each including a node for each meaning of one or more meanings of a word and an edge indicating a semantic relationship between two meanings, at least one hypernym tree of the hypernym trees including nodes for meanings of different words;</claim-text><claim-text>assigning, to a dependency graph for a skill name of the plurality of skill names, a meaning of a specific word selected from the skill name based on the hypernym tree that includes nodes associated with the specific word;</claim-text><claim-text>building a skill knowledge graph with a plurality of skill nodes representing skill names by connecting dependency graphs based at least in part on distances between nodes of the hypernym trees for meanings that are assigned to the dependency graphs;</claim-text><claim-text>performing syntactic or semantic parsing, on a plurality of job descriptions comprising text data, to identify, within the plurality of job descriptions, a plurality of phrases;</claim-text><claim-text>identifying, based at least in part on the skill knowledge graph, for each job category of a plurality of job categories, a job category-specific set of selective phrases, from the plurality of phrases, that are selective for the job category;</claim-text><claim-text>receiving a request to generate a new job description;</claim-text><claim-text>identifying a particular job category of the plurality of job categories from the new job description; and</claim-text><claim-text>in response to receiving the request:</claim-text><claim-text>generating, for a job description section type of a plurality of job description section types, a corresponding section in a generated job description by including, in the corresponding section, one or more phrases from a section-specific set of selective phrases that are specific to the job description section type of a job category-specific set of selective phrases that are specific to the particular job category;</claim-text><claim-text>returning the generated job description as a response to the request.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the identifying a job category-specific set of selective phrases comprising:<claim-text>identifying a particular skill node of the plurality of skill nodes that is associated with the job category,</claim-text><claim-text>identifying one or more skill nodes that are connected, either directly or indirectly, with the particular skill node within the skill knowledge graph, and</claim-text><claim-text>based on identifying the one or more skill nodes, identifying one or more phrases, corresponding to the one or more skill nodes, as selective phrases for the job category.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the job category-specific set of selective phrases specific to the particular job category comprises, for each job description section type of a plurality of job description section types, the section-specific set of selective phrases specific to the job description section type.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the generating comprising:<claim-text>computing a set of k-nearest neighbors of a centroid vector within a vector space of phrase embeddings of the section-specific set of selective phrases specific to job description section type;</claim-text><claim-text>ranking the set of k-nearest neighbors based on a distance of an embedding of each phrase of the set of k-nearest neighbors from the centroid vector.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>training a machine learning model based on the job descriptions to produce a trained machine learning model; and</claim-text><claim-text>generating the phrase embeddings for the section-specific set of selective phrases specific to the job description section type based on the trained machine learning model.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the request to generate a job description comprises one or more target phrases, the method further comprising:<claim-text>identifying a particular job description section type of the plurality of job description section types from the target phrases,</claim-text><claim-text>the generating being performed for the particular job description section type.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the generating further comprising:<claim-text>determining that a particular selective phrase, in a section-specific set of selective phrases specific to a particular job description section type, is associated with a first skill node of the plurality of skill nodes; and</claim-text><claim-text>identifying one or more second skill nodes of the plurality of skill nodes that is associated with the first skill node, and</claim-text><claim-text>including, in the section for the particular job description section type, information from the one or more second skill nodes.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising,<claim-text>clustering the plurality of job descriptions to produce a plurality of job description clusters based on embeddings of titles of the plurality of job descriptions or entities identified within the plurality of job descriptions;</claim-text><claim-text>associating each job description cluster of the plurality of job description clusters with a respective job category of the plurality of job categories;</claim-text><claim-text>associating the job descriptions in each job description cluster of the plurality of job description clusters with the job category associated with the job description cluster.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising in response to receiving the request, generating language for a particular section of a non-skill job description section type in the generated job description using a trained machine learning model that has been trained based on a plurality of section samples of the non-skill job description section type.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. One or more non-transitory computer-readable storage media storing one or more sequences of instructions that, when executed by one or more processors, cause performance of a method of automatically generating job descriptions, the method comprising:<claim-text>obtaining a dependency graph for each skill name of a plurality of skill names, each dependency graph having a node for each word in the skill name and an edge representing a syntactic relationship between words in two nodes of the dependency graph connected by the edge;</claim-text><claim-text>obtaining hypernym tree data comprising hypernym trees each including a node for each meaning of one or more meanings of a word and an edge indicating a semantic relationship between two meanings, at least one hypernym tree of the hypernym trees including nodes for meanings of different words;</claim-text><claim-text>assigning, to a dependency graph for a skill name of the plurality of skill names, a meaning of a specific word selected from the skill name based on the hypernym tree that includes nodes associated with the specific word;</claim-text><claim-text>building a skill knowledge graph with a plurality of skill nodes representing skill names by connecting dependency graphs based at least in part on distances between nodes of the hypernym trees for meanings that are assigned to the dependency graphs;</claim-text><claim-text>performing syntactic or semantic parsing, on a plurality of job descriptions comprising text data, to identify, within the plurality of job descriptions, a plurality of phrases;</claim-text><claim-text>identifying, based at least in part on the skill knowledge graph, for each job category of a plurality of job categories, a job category-specific set of selective phrases, from the plurality of phrases, that are selective for the job category;</claim-text><claim-text>receiving a request to generate a new job description;</claim-text><claim-text>identifying a particular job category of the plurality of job categories from the new job description; and</claim-text><claim-text>in response to receiving the request:</claim-text><claim-text>generating, for a job description section type of a plurality of job description section types, a corresponding section in a generated job description by including, in the corresponding section, one or more phrases from a section-specific set of selective phrases that are specific to the job description section type of a job category-specific set of selective phrases that are specific to the particular job category;</claim-text><claim-text>returning the generated job description as a response to the request.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A computer-implemented method of automatically generating job descriptions, comprising:<claim-text>building a skill knowledge graph by connecting dependency graphs using hypernym trees,</claim-text><claim-text>each dependency graph representing a skill name,</claim-text><claim-text>each edge in each dependency graph representing a syntactic relationship,</claim-text><claim-text>each node in a hypernym tree representing a meaning of one or more meanings of a word, two nodes in two dependency graphs being connected in the skill knowledge graph when the two nodes are mapped to meanings represented by nodes no more than a certain distance apart in the hypernym tree;</claim-text><claim-text>receiving a request to generate a new job description;</claim-text><claim-text>identifying a particular job category of a plurality of job categories from the new job description;</claim-text><claim-text>generating, for a particular job description section type of a plurality of job description section types, a corresponding section of a job description for the particular job category based on the skill knowledge graph,</claim-text><claim-text>the corresponding section including one or more selective phrases from a section-specific set of selective phrases that are specific to the particular job description section type;</claim-text><claim-text>returning a job description based on the generated sections as a response to the request.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising<claim-text>identifying a set of selective phrases specific to the particular job category that are phrases having a selectivity for the particular job category above a threshold,</claim-text><claim-text>the set of selective phrases specific to the particular job category including the section-specific set of selective phrases specific to the particular job description section type.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the generating further comprising:<claim-text>determining that a particular phrase in the section-specific set of selective phrases that are specific to the particular job description section type is associated with a first skill node of a plurality of skill nodes in the skill knowledge graph;</claim-text><claim-text>identifying one or more skill nodes of the plurality of skill nodes that are associated with the first skill node;</claim-text><claim-text>adding one or more skill names represented by the one or more skill nodes to the section-specific set of selective phrases that are specific to the particular job description section type.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>extracting each skill name represented by a dependency graph from a skill knowledge dataset;</claim-text><claim-text>training a vectorizing machine learning model based on the skill knowledge dataset.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer-implemented method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, the generating comprising:<claim-text>obtaining an embedding generated by the vectorizing machine learning model for each selective phrase of the section-specific set of selective phrases that are specific to the particular job description section type;</claim-text><claim-text>determining a centroid of the set of embeddings;</claim-text><claim-text>the one or more selective phrases corresponding to one or more embeddings of the set of embeddings closest to the centroid.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-implemented method of <claim-ref idref="CLM-00014">claim 14</claim-ref>,<claim-text>identifying a set of key phrases from the request;</claim-text><claim-text>obtaining an embedding generated by the vectorizing machine learning model for each key phrase of the set of key phrases;</claim-text><claim-text>determining a centroid of the set of embeddings;</claim-text><claim-text>the one or more selective phrases corresponding to one or more embeddings of the set of embeddings closest to the centroid.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-implemented method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising identifying sections to be classified into the plurality of job description section types from the skill knowledge dataset using document layout techniques or document structure recognition techniques.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>obtaining a template for a job description section type of the plurality of job description section types;</claim-text><claim-text>filling the template with the section generated for the job description section type,</claim-text><claim-text>the job description including the filled template.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-implemented method of <claim-ref idref="CLM-00018">claim 18</claim-ref>,<claim-text>the template indicating a format of text to be included, including font, size, length, bullet type, alignment, or spacing,</claim-text><claim-text>the template including a section title, and one or more text forms, including as noun phrases, full sentences, or paragraphs including multiple full sentences.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>clustering a plurality of job descriptions to produce a plurality of job description clusters based on titles of the plurality of job descriptions or entities identified within the plurality of job descriptions;</claim-text><claim-text>associating each job description cluster of the plurality of job description clusters with a respective job category of the plurality of job categories;</claim-text><claim-text>associating the job descriptions in each job description cluster of the plurality of job description clusters with the job category associated with the job description cluster.</claim-text></claim-text></claim></claims></us-patent-application>