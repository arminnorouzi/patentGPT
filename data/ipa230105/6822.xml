<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006823A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006823</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17939385</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>61</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0866</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>61</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>1451</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0894</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3226</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2201</main-group><subgroup>84</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD AND APPARATUS FOR CRYPTOGRAPHICALLY ALIGNING AND BINDING A SECURE ELEMENT WITH A HOST DEVICE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16425118</doc-number><date>20190529</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11444759</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17939385</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>STMicroelectronics, Inc.</orgname><address><city>Coppell</city><state>TX</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Pilozzi</last-name><first-name>Giuseppe</first-name><address><city>North Attleboro</city><state>MA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>STMicroelectronics, Inc.</orgname><role>02</role><address><city>Coppell</city><state>TX</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A secure element device that is configured to be cryptographically bound to a host device includes a secure element host key slot configured to store host key information that allows only the host device to control the secure element, a secure memory storing binding information, and limited functionality allowing the binding information to be read from the secure memory by the host device during a binding process. The binding information is cryptographically correlated with the host key information. The host key information is generated by the host device using the binding information read from the secure element and a secret key. The secure element device further includes general functionality only accessible to the host device using the host key information that is generated by the host device. The secure memory includes prevention measures impeding unauthorized entities from obtaining information from the secure memory.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="197.53mm" wi="158.75mm" file="US20230006823A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="225.89mm" wi="170.26mm" file="US20230006823A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="240.54mm" wi="170.77mm" file="US20230006823A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="214.29mm" wi="171.45mm" file="US20230006823A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="241.98mm" wi="171.87mm" orientation="landscape" file="US20230006823A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="238.51mm" wi="168.91mm" file="US20230006823A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="240.54mm" wi="169.84mm" file="US20230006823A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="241.98mm" wi="171.87mm" orientation="landscape" file="US20230006823A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="229.02mm" wi="172.89mm" file="US20230006823A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="241.64mm" wi="170.01mm" file="US20230006823A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="241.98mm" wi="170.77mm" orientation="landscape" file="US20230006823A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. application Ser. No. 16/425,118, filed on May 29, 2019, which application is hereby incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present invention relates generally to cryptographic alignment, and, in particular embodiments, to methods and apparatuses for cryptographically aligning a secure element with a host device.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Device security is important to protect the contents of data as well as guarantee the identity of devices generating the data. A secure element can be used to store and apply sensitive data such as cryptographic keys and securely execute computer code such as electronic payment applications for a host device, or cryptographically support transport layer security (TLS) for internet of things (IoT) devices. The secure element includes active and/or passive prevention measures render it infeasible for unauthorized entities to read the contents in memory of the secure element or discover crypto secrets stored in the secure element. The secure element is cryptographically bound to the host device using host key information known only to the secure element and the host device.</p><p id="p-0005" num="0004">Among other uses, the secure element can be used as the basis of the identity of the host device. In order to guarantee the identity of the host device, it is important that the host key information is not discovered by an external entity. The host key information may be stored in the secure element and then subsequently sent to the host device during a binding process. However, the secure element and the host device may be manufactured at separate locations and/or by different manufacturers. As a result, the binding process may be performed at an insecure location. For example, the host key information may be vulnerable to discovery during the binding process when the host key information is transmitted from the secure element to the host device, or when the host device sends the command to personalize the secure element with the host keys. Therefore, binding processes between a secure element and a host device which reduce or eliminate the possibility of an external entity discovering host key information may be desirable.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">In accordance with an embodiment of the invention, a method of cryptographically binding a secure element to a host device includes storing host key information in a secure element host key information slot of the secure element and storing binding information in secure memory of the secure element at a first location. The binding information is cryptographically correlated with the host key information. The method also includes storing a second secret key within system operational code stored in protected memory of the host device at a second location remote to the first location. The second secret key is cryptographically correlated with the host key information. The method further includes, at a third location after storing the binding information and after storing the second secret key SK<sub>2</sub>, operationally coupling the secure element to the host device, reading, by the host device, the binding information from the secure element, generating, by the host device, the host key information using the binding information and the second secret key, and storing, by the host device, the host key information in a host device host key information slot of the host device. The secure element and the host device are collocated at the third location. The third location is remote to both the first location and the second location.</p><p id="p-0007" num="0006">In accordance with another embodiment, a method of cryptographically aligning a secure element with a host device includes generating a secure element-diversified key as a function of a master key and a secure element unique identifier and encrypting host key information using the secure element-diversified key to generate encrypted host key information. The host key information HK<sub>SE </sub>uniquely corresponds to the secure element. The method also includes storing the host key information in a secure element host key information slot of the secure element, storing the encrypted host key information in secure memory of the secure element, and obfuscating the master key using a host device unique identifier to generate a host device-obfuscated key within system operational code stored in protected memory of the host device.</p><p id="p-0008" num="0007">In accordance with still another embodiment of the invention, a method of cryptographically binding a secure element to a host device includes storing a secure element private key in secure memory of the secure element, creating a secure element public key using the secure element private key, storing a host device private key within system operational code stored in protected memory of the host device, and operationally coupling the secure element and the host device. The method further includes executing the system operational code by the host device. Executing the system operational code includes reading the secure element public key from the secure element, creating host key information using the host device private key and the secure element public key, and storing the host key information in a host device host key information slot of the host device.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008">For a more complete understanding of the present invention, and the advantages thereof, reference is now made to the following descriptions taken in conjunction with the accompanying drawings, in which:</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a method of cryptographically aligning a secure element with a host device in accordance with an embodiment of the invention;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a method of cryptographically binding a secure element to a host device in accordance with an embodiment of the invention;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a method of securely acquiring proprietary information by a host device cryptographically bound to a secure element in accordance with an embodiment of the invention;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates schematic block diagrams of a secure element, host device, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information in accordance with an embodiment of the invention;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a method of cryptographically aligning a secure element with a host device using a master key and encrypted host key information in accordance with an embodiment of the invention;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a method of cryptographically binding a secure element to a host device using a master key and encrypted host key information in accordance with an embodiment of the invention;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates schematic block diagrams of a secure element, host device, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information using a master key and encrypted host key information in accordance with an embodiment of the invention;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a method of cryptographically aligning a secure element with a host device using a secure element public key and a host device private key in accordance with an embodiment of the invention;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a method of cryptographically binding a secure element to a host device using a secure element public key and a host device private key in accordance with an embodiment of the invention; and</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates schematic block diagrams of a secure element, host device, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information using a secure element public key and a host device private key in accordance with an embodiment of the invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0020" num="0019">Corresponding numerals and symbols in the different figures generally refer to corresponding parts unless otherwise indicated. The figures are drawn to clearly illustrate the relevant aspects of the embodiments and are not necessarily drawn to scale. The edges of features drawn in the figures do not necessarily indicate the termination of the extent of the feature.</p><heading id="h-0006" level="1">DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS</heading><p id="p-0021" num="0020">The making and using of various embodiments are discussed in detail below. It should be appreciated, however, that the various embodiments described herein are applicable in a wide variety of specific contexts. The specific embodiments discussed are merely illustrative of specific ways to make and use various embodiments, and should not be construed in a limited scope.</p><p id="p-0022" num="0021">Secure elements include security features which enable secure storage of sensitive data as well as secure processing within the secure element for a paired host device. A secure element can be a microcontroller (MCU) or a microprocessor (MPU) that includes security features. A specific example of a secure element is the STSAFE family of secure microcontrollers including the STSAFE-A100, for example. A host device may be a computing device such as an MCU or an MPU. A specific example of a host device is the STM32 family of microcontrollers.</p><p id="p-0023" num="0022">A host device may be considered paired with a secure element when the host device is cryptographically bound to the secure element using host key information known only to the secure element and the host device. The host device may have reduced security capabilities or no security capabilities. That is, a host device in the context of the present disclosure may be any device that can be cryptographically bound to a secure element in order to derive benefit from the additional security features afforded by the secure element.</p><p id="p-0024" num="0023">Host key information may include one or more cryptographic keys. In various embodiments, the host key information includes one or more symmetric keys. For example, the host key information may include a private key created at a secure fabrication location. The host key information may include a message authentication code (MAC) key so that the secure element can verify that a received command is sent from the host device and vice versa. The host key information may also include an encryption key that can be used by the secure element and the host device to encrypt and decrypt information that is transferred between the secure element and the host device (e.g. on an electrical bus).</p><p id="p-0025" num="0024">Although the above examples utilize symmetric keys, the host key information is not limited to symmetric encryption schemes. For example, a public key (e.g. a certificate) may be created using a signed key that is also secure. For example, the private key and public key may be created and certified using a hardware security module (HSM). The host key information may enable secure communication between the host device and the secure element.</p><p id="p-0026" num="0025">Prior to the pairing of the secure element and the host device, security critical functionality of the secure element is unavailable to the host device. That is, it is not possible for the host device to send certain commands to the secure element and for the secure element to execute the command without the host device having the host key information. Therefore, data stored on the secure element which solution users may want to protect cannot be read and interpreted for any reason by the host device without the host key information. Once the host device is operatively coupled to the secure element, the pairing process begins or is initiated using a predetermined process and runs to completion resulting in the host key information being securely stored on the host device. Once the secure element and the host device are cryptographically bound, the host device is able to send commands to the secure element to obtain data stored on the secure element in addition to other secure functionality.</p><p id="p-0027" num="0026">Secure elements may be used as the basis of identity for host devices such as IoT devices. For example, with the ubiquity of connected devices, IoT devices may be used in applications requiring credentials or in operating valuable services (e.g. devices that are susceptible to fraud or counterfeiting, USB T e-C devices, accessories for electronic devices such as phones or gaming devices, consumables such as printer cartridges, and the like). IoT devices can also include thermostats, doorbell cameras, and security devices which may be enabled with customer Wi-Fi credentials and could be used to compromise end customer security should a device be compromised during or after the device's manufacture. Using a secure element, it is infeasible to discover and create a clone of authentication information such as a private key.</p><p id="p-0028" num="0027">The infeasibility of compromising the private key of the host device may advantageously guarantee the identity of the host device. In many applications guaranteeing the identity of the host device may be important such as when the host device has control over critical systems and/or access to sensitive information. Secure elements may also provide security for other types of host devices such as servers, personal computers, laptop computers, tablet computers, cellular phones, routers, switches, base stations, access points, data concentrators, gateways, medical devices, automotive equipment, and others.</p><p id="p-0029" num="0028">Since secure elements fill a specific role of providing security for a host device, it may be possible for all secure elements to be manufactured at secure locations with access to an HSM to provide a certificate basis for host key information. However, it may be difficult or impossible to provide host devices with the same security during fabrication due to the many different applications of the host devices and various fabrication locations. For example, billions of general purpose microcontrollers may be shipped in a year from multiple fabrication facilities to numerous costumers destined for various applications and chipset environments. Some of the general purpose microcontrollers may become host devices paired with a secure element while others may not require any additional security. Further, a secure element may be paired with a host device that is not manufactured by the same manufacturer as the secure element. Consequently, using conventional methods, there may be no easy way to initialize host key information with a certificate basis for each host device for specific customers for end-customer use.</p><p id="p-0030" num="0029">In order to maintain effectiveness of the secure element, host devices that use a secure element should be paired with the secure element in such a way as to only allow the host device to control the secure element. This may be achieved by using host key information known only to the secure element and the host device. For example, the host key information may be installed in secure memory locations in both the secure element and the host device. However, when the secure element and the host device are brought together to be cryptographically bound, it is not uncommon for only the secure element to have the host key information and for the manufacturing location to lack the security required to guarantee the secrecy of the host key information. That is, the manufacturing location may not be trusted and the host key information may be compromised while being transferred from the secure element to the host device.</p><p id="p-0031" num="0030">During conventional pairing processes, a secure element may send a random number to chipset initialization equipment which gets installed in an appropriate location in the host device so as to function as host key information, and commands the secure element to be the host key (one time process). However, in these conventional pairing processes, secrecy of the random number is only guaranteed if the chipset manufacturing location is secure since the random number is sent in the clear between the secure element and the host device. Therefore, a pairing process to cryptographically bind a secure element to a host device that does not send the raw host key information from the secure element to the host device may be desirable.</p><p id="p-0032" num="0031">Various embodiments described herein provide methods and apparatuses that cryptographically align a secure element with a host device prior to a cryptographic binding process. The disclosed embodiments store binding information in the secure element and store a secret key in the host device. The binding information is cryptographically correlated with the secret key. During the binding process, host key information can be generated by the host device using the binding information and the secret key. Through these techniques, the disclosed embodiments may provide various advantages including secrecy of host key information during a binding process between a secure element and a host device. Additional implementations and advantages may be apparent to one of ordinary skill in the art in view of the following description.</p><p id="p-0033" num="0032">In particular, there is a cryptographic correlation between information stored in the secure element and information stored the host device during initialization in trusted manufacturing facilities so that subsequently the secure element and the host device may advantageously be securely paired in a potentially insecure environment. Further, the cryptographic alignment of the secure element and the host device prior to being brought together beneficially obscures the binding process using encryption so that it is infeasible or impossible for a contract manufacturer or parties on the manufacturer's line to observe the host key information during the binding process because the host key information itself is not transmitted in the clear between the secure element and the host device. Another possible advantage is that no HSM is needed at the chipset manufacturing location. For example, an HSM may not be necessary on the manufacturing line of a customer or the manufacturing line of a subcontractor of a customer when cryptographically binding a secure element and a host device which may beneficially reduce costs. Further, once a secure element and a host device are securely bound using the processes herein, additional keys stored in the secure element may be used advantageously as the secure basis to personalize the host device without the need for an HSM. For example, the secure element may be used as a hardware license to allow only the host device or limited number of host devices to access additional proprietary information.</p><p id="p-0034" num="0033">Embodiments provided below describe various methods and apparatuses for cryptographically aligning a secure element with a host device, and in particular, methods and apparatuses that store binding information in a secure element and storing a secret key in the host device, the binding information being cryptographically correlated to the secret key. The following description describes the embodiments. An embodiment method of cryptographically aligning a secure element with a host device is described using <figref idref="DRAWINGS">FIG. <b>1</b></figref>. An embodiment method of cryptographically binding a secure element to a host device is described using <figref idref="DRAWINGS">FIG. <b>2</b></figref>. An embodiment method of securely acquiring proprietary information by a host device cryptographically bound to a secure element is described using <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Embodiment schematic block diagrams of a secure element, host device, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information are described using <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Two more embodiment methods of cryptographically aligning a secure element with a host device are described using <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>8</b></figref>. <figref idref="DRAWINGS">FIGS. <b>6</b> and <b>9</b></figref> are used to describe another two embodiment methods of cryptographically binding a secure element to a host device. Additional embodiment schematic block diagrams secure elements, host devices, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information are described using <figref idref="DRAWINGS">FIGS. <b>7</b> and <b>10</b></figref>.</p><p id="p-0035" num="0034">The method steps described herein may be performed in any suitable order as may be apparent to those of skill in the art. Additionally, any suitable combination of steps in the methods described herein may be performed concurrently as may be apparent to those of skill in the art. Except where explicitly indicated, embodiment methods are not intended to be limited to the specific order of the method steps as shown and described which may be chosen for reasons of clarity and brevity.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a method of cryptographically aligning a secure element with a host device in accordance with an embodiment of the invention.</p><p id="p-0037" num="0036">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a cryptographic alignment method <b>100</b> includes an initial state <b>10</b> in which a secure element and a host device are uncorrelated. For example, the secure element and the host device may not be initialized in the initial state <b>10</b>. The secure element and/or the host device may or may not include stored executable code or data unrelated to the alignment process at the initial state <b>10</b>. Specifically, no information that links the secure element to the host device is stored on either the secure element or the host device in the initial state <b>10</b>.</p><p id="p-0038" num="0037">After the initial state <b>10</b> during which the secure element and the host device are uncorrelated, step <b>104</b> includes storing binding information B<sub>SE </sub>in secure memory of the secure element. The binding information B<sub>SE </sub>is cryptographically correlated to the host key information HK<sub>SE </sub>and may be used in combination with other information to generate host key information HK<sub>SE</sub>. Optionally, the host key information HK<sub>SE </sub>may be stored in a host key information slot SE-HK<sub>SE </sub>of the secure element in step <b>102</b> of cryptographic alignment method <b>100</b>. The binding information B<sub>SE </sub>may also be cryptographically correlated with (e.g. generated from or otherwise based on) a first secret key SK<sub>1 </sub>which may optionally be stored in the secure memory of the secure element in step <b>105</b>. In some embodiments, the first secret key SK<sub>1 </sub>may be used in combination with the binding information B<sub>SE </sub>to generate the host key information HK<sub>SE</sub>.</p><p id="p-0039" num="0038">In step <b>107</b>, a second secret key SK<sub>2 </sub>is stored within system operational code stored in protected memory of the host device. The second secret key SK<sub>2 </sub>is cryptographically correlated with the host key information HK<sub>SE</sub>. The second secret key SK<sub>2 </sub>can be used in combination with the binding information B<sub>SE </sub>to generate the host key information HK<sub>SE</sub>. Once the binding information B<sub>SE </sub>is stored in the secure element in step <b>104</b> and the second secret key SK<sub>2 </sub>is stored in the host device in step <b>107</b>, the secure element and the host device are cryptographically aligned as shown in aligned state <b>120</b>. In other words, in the aligned state <b>120</b>, both the secure element and the host device have information stored thereon that may be used to generate the host key information.</p><p id="p-0040" num="0039">The steps involving the secure element (i.e. step <b>104</b> and optional steps <b>102</b> and <b>105</b>) may be performed at a manufacturing location of the secure element. For example, any of the steps <b>102</b>, <b>104</b>, and <b>105</b> may be performed on a personalization line at a secure location. Similarly, step <b>107</b> (which involves the host device) may be performed at a manufacturing location of the host device, such as a personalization line of the host device. The host device manufacturing location may or may not be secure. The secure element manufacturing location and the host device manufacturing location may be geographically separate locations. Put another way, the secure element manufacturing location may be remote to the host device manufacturing location.</p><p id="p-0041" num="0040">Since both the binding information B<sub>SE </sub>and the second secret key SK<sub>2 </sub>are correlated with the host key information HK<sub>SE </sub>it may be necessary to securely transport secret information from the secure element manufacturing location to the host device manufacturing location in an optional step <b>106</b>. Alternatively, the secret information may be securely transported from the host device manufacturing location to the secure element manufacturing location. In some embodiments, the secret information may be used for more than one alignment process rendering it unnecessary to repeatedly transport the information between locations. In other embodiments, no secret information is transported between the secure element manufacturing location and the host device manufacturing location because the host key information HK<sub>SE </sub>is not generated at either location.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a method of cryptographically binding a secure element to a host device in accordance with an embodiment of the invention.</p><p id="p-0043" num="0042">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a cryptographic binding method <b>200</b> includes an initial state which is an aligned state <b>120</b> in which a secure element and a host device are cryptographically aligned. The alignment may be performed in accordance with cryptographic alignment methods as describe herein, such as the cryptographic alignment method <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example. The alignment process may be geographically separated from a binding location where the cryptographic binding method <b>200</b> is performed and at which the secure element and the host device are collocated. For example, the binding location may be at a manufacturer of a device using both ICs that is remote to locations such as a secure element manufacturing location and a host device manufacturing location.</p><p id="p-0044" num="0043">After the aligned state <b>120</b>, the secure element is operationally coupled to the host device in step <b>210</b>. In one embodiment, operationally coupling the secure element to the host device includes connecting the secure element to the host device using an electrical bus over which commands and data can be sent. Alternatively, the secure element and the host device may be directly connected or packaged together, such as in a system-on-a-chip configuration, for example.</p><p id="p-0045" num="0044">All general functionality of the secure element may be disabled at the moment of operational coupling to the host device. The secure element is configured to operate in a predetermined capacity during the binding process in order to establish a paired (i.e. cryptographically bound) relationship with a host device. After step <b>210</b> of operationally coupling the secure element to the host device, the binding process may optionally be initiated by sending a predetermined command to the host device in step <b>211</b>. The initiate command may trigger boot-up of system operational code stored in protected memory of the host device. Alternatively, the binding process may be triggered without an initiate command, such as automatically when the host device and the secure element receive power.</p><p id="p-0046" num="0045">At the beginning of the binding process, the secure element may be locked. For example, the secure element may optionally be unlocked by a password in step <b>212</b>. In one embodiment, the password is a batch password that can be used for multiple binding processes and which is changed periodically to avoid security issues. The batch password may be known at the location of the binding process, but may be transported to the location separately from both the secure element and the host device. In this way, an unauthorized party would be unable to initiate the binding process by merely intercepting the secure element and the host device. When an initiate command is used to begin the binding process, the initiate command may include the password so that the system operational code of the host device uses the password to unlock the secure element to continue the binding process.</p><p id="p-0047" num="0046">After step <b>210</b>, the host device reads the binding information B<sub>SE </sub>from the secure element in step <b>215</b>. The binding information B<sub>SE </sub>may be transmitted between the secure element and the host device over an insecure data link such as an electrical bus. However, the host key information HK<sub>SE </sub>is advantageously not compromised in the event of the binding information B<sub>SE </sub>being intercepted by a nefarious party because additional information is needed with the binding information B<sub>SE </sub>in order to generate the host key information HK<sub>SE</sub>.</p><p id="p-0048" num="0047">Once the host device has read the binding information B<sub>SE </sub>from the secure element, the host device generates the host key information HK<sub>SE </sub>using the binding information B<sub>SE </sub>and the second secret key SK<sub>2 </sub>stored in the host device in step <b>217</b>. More information may also be used in addition to the binding information B<sub>SE </sub>and the second secret key SK<sub>2 </sub>to generate the host key information HK<sub>SE</sub>. For example, the password used to unlock the secure element may also be used by the host device in conjunction with the binding information B<sub>SE </sub>and the second secret key SK<sub>2 </sub>to generate the host key information HK<sub>SE </sub>in some embodiments. In various embodiments, the host device may generate the first secret key SK<sub>1 </sub>from the second secret key SK<sub>2 </sub>and generate the host key information HK<sub>SE </sub>using the binding information B<sub>SE </sub>and the first secret key SK<sub>1</sub>.</p><p id="p-0049" num="0048">In step <b>218</b>, once the host device has generated the host key information HK<sub>SE</sub>, the host device stores the host key information HK<sub>SE </sub>in a host key information slot HD-HK<sub>SE </sub>of the host device. The secure element is cryptographically bound to the host device in bound state <b>30</b> once the host key information HK<sub>SE </sub>is stored in both the secure element and the host device. The secure element may optionally generate the host key information using the first secret key SK<sub>1 </sub>in step <b>213</b> and store the host key information HK<sub>SE </sub>in a host key information slot SE-HK<sub>SE </sub>of the secure element in step <b>214</b>. Alternatively, the host key information HK<sub>SE </sub>may have been generated and stored in the secure element prior to the cryptographic binding method <b>200</b>.</p><p id="p-0050" num="0049">After the host key information HK<sub>SE </sub>is generated by the host device in step <b>217</b>, the second secret key SK<sub>2 </sub>may optionally be deleted from the host device in step <b>219</b>. For example, the second secret key SK<sub>2 </sub>may be deleted from both volatile memory (e.g. random-access memory) and nonvolatile memory (e.g. program memory). Additional information related to the generation of the host key information HK<sub>SE </sub>may also be deleted from the host device such as the binding information B<sub>SE </sub>and the batch password.</p><p id="p-0051" num="0050">In the event that there is a problem during the binding process in which the host key information is improperly installed in the host device, it may be impossible or infeasible to recover the host device. The binding process may be conducted in protected memory of the host device which may include various safeguards. For example, the capability to enter a debug mode may be turned off or fused following the binding process. Therefore, if there is a problem during the binding process such that, after the binding process, the host device is not successfully bound to the secure element, the host device is effectively unusable. In one embodiment, a secure-backup-data file may be stored on the secure element that may be retrieved by an out-of-band process in the event that the host key information that is installed on a host device is not uncorrupted. The secure-backup-data file may be an encrypted object that can be used to resurrect host devices that have encountered a problem during the binding process.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a method of securely acquiring proprietary information by a host device cryptographically bound to a secure element in accordance with an embodiment of the invention.</p><p id="p-0053" num="0052">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a method of securely acquiring proprietary information <b>300</b> includes a bound state <b>30</b> in which a secure element and a host device are cryptographically bound. The binding may be performed in accordance with cryptographic binding methods as described herein, such as the cryptographic binding method <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, for example.</p><p id="p-0054" num="0053">Prior to the bound state <b>30</b>, a proprietary information key K<sub>PI </sub>is wrapped in step <b>321</b> to form a proprietary information key WK<sub>PI</sub>. The proprietary information key K<sub>PI </sub>may be an encryption key. For example, the proprietary information key K<sub>PI </sub>may be an AES key. In one embodiment, the proprietary information key K<sub>PI </sub>is a 256 bit AES key. There may be any suitable number of proprietary information keys which correspond with any suitable number of encrypted blocks of proprietary information.</p><p id="p-0055" num="0054">The proprietary information key K<sub>PI </sub>may be wrapped by the secure element at a secure element manufacturing location during initialization of the secure element. In some embodiments, the proprietary information key K<sub>PI </sub>may be wrapped using a local enveloped key known only to the secure element. In other words, only the secure element can recover the proprietary information key K<sub>PI</sub>.</p><p id="p-0056" num="0055">The wrapped proprietary information key WK<sub>PI </sub>is then stored in secure memory of the secure element in step <b>322</b>. The secure memory may be partitioned (or zoned) to further improve security of the stored data. Additional wrapped proprietary information keys may also be stored in the secure memory of the secure element. The wrapped proprietary information key WK<sub>PI </sub>may be stored in the secure element at the secure element manufacturing location. Alternatively, the wrapped proprietary information key WK<sub>PI </sub>may be stored in the secure element at a different location prior to being bound to the host device.</p><p id="p-0057" num="0056">At some time after the wrapped proprietary information key WK<sub>PI </sub>is stored in the secure element and once the secure element and the host device are in the bound state <b>30</b>, the host device reads the wrapped proprietary information key WK<sub>PI </sub>from the secure element in step <b>331</b>. The host device then instructs the secure element to unwrap the wrapped proprietary information key WK<sub>PI </sub>and provide the host device with the proprietary information key K<sub>PI </sub>in step <b>332</b>.</p><p id="p-0058" num="0057">Since the secure element and the host device are cryptographically bound, the host device uses the host key information HK<sub>SE </sub>to communicate with the secure element in steps <b>331</b> and <b>332</b>. For example, the read command in step <b>331</b> may be authenticated by the secure element using a MAC key that is part of the host key information HK<sub>SE</sub>. Similarly, when the secure element provides the proprietary information key K<sub>PI </sub>to the host device, the secure element may encrypt the proprietary information key K<sub>PI </sub>using an encryption key that is part of the host key information HK<sub>SE </sub>before sending it to the host device. The host device can read the proprietary information key K<sub>PI </sub>because the host device also has the host key information HK<sub>SE</sub>. In contrast, an unauthorized party advantageously cannot read the proprietary information key K<sub>PI </sub>in the event that it is intercepted between the secure element and the host device because the host key information HK<sub>SE </sub>is known only to the secure element and the host device.</p><p id="p-0059" num="0058">At some time before step <b>334</b>, encrypted proprietary information is loaded into the host device in step <b>341</b>. For example, the encrypted proprietary information may be loaded into the host device during initialization at a host device manufacturing location. Alternatively, the encrypted proprietary information may be loaded into the host device at the binding location by chipset initialization equipment. However, the encrypted proprietary information may be loaded into the host device at any time prior to step <b>334</b>. For example, the encrypted proprietary information may be loaded into the host device after step <b>332</b> in some embodiments.</p><p id="p-0060" num="0059">At step <b>334</b>, the host device has both the encrypted proprietary information and the proprietary information key K<sub>PI</sub>. The host device decrypts the encrypted proprietary information using the proprietary information key K<sub>PI </sub>to obtain the proprietary information. The proprietary information may be any type of restricted information. In various embodiments, the proprietary information is proprietary executable computer code. In one embodiment, the proprietary information is firmware and the method of securely acquiring proprietary information <b>300</b> is part of a secure firmware installation (SFI). In other embodiments, the proprietary information is software that is installed on the host device. For example, a database at the binding location may store multiple blocks of encrypted proprietary information. The encrypted proprietary information cannot be used at the binding location without corresponding proprietary information keys. In this way, the secure element can advantageously be used as a hardware license to authorize a host device to install proprietary information such as firmware at the binding location without compromising the security of the proprietary information.</p><p id="p-0061" num="0060">As an alternative to the host device decrypting the encrypted proprietary information directly, the secure element may instead directly decrypt encrypted blocks of proprietary information sent by the host device. For example, the secure element may use a pre-stored, shared key for the purpose of decrypting the proprietary information. The shared key may be stored in a key table. After the secure element and the host device are paired, the host device may command the secure element to decrypt blocks of encrypted proprietary information during an installation process (e.g. a secure firmware installation). This may provide an additional advantage of the shared key only being used by the secure element rather than the host device and the secure element. In other embodiments, the secure element may use the shared key to decrypt a firmware encryption key that is sent to the secure element (e.g. in a first stage bootloader) at the time of the firmware installation. In addition, shared keys that are pre-stored in a key table of the secure element may also be used by the secure element for other purposes (e.g. to decrypt other keys corresponding to other proprietary information).</p><p id="p-0062" num="0061">In some embodiments, the secure element may be used to validate installation of multiple blocks of proprietary information. A counter may be included in the secure element that is decremented each time a proprietary information key is used. The secure element may disallow a host device to obtain access to proprietary information once the counter is equal to zero. Alternatively, multiple counters may be included in the secure element which may be decremented on a per key basis each time a specific proprietary information key is used. The secure element can then provide a further advantage of enforcing bulk license agreements for proprietary firmware and/or software.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates schematic block diagrams of a secure element, host device, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information in accordance with an embodiment of the invention. The schematic block diagrams of <figref idref="DRAWINGS">FIG. <b>4</b></figref> may schematically illustrate implementations of one or more of the methods described herein, such as the cryptographic alignment method <b>100</b>, the cryptographic binding method <b>200</b>, and the method of acquiring proprietary information <b>300</b> of <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b></figref>, and <b>3</b> respectively, as examples.</p><p id="p-0064" num="0063">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a secure element <b>450</b> (SE <b>450</b>) and optionally a secure element hardware security module <b>470</b> (HSM<sub>SE </sub><b>470</b>) are located at a secure element manufacturing location <b>95</b>. The secure element manufacturing location <b>95</b> may be a secure (e.g. trusted) facility. In various embodiments, the secure element manufacturing location <b>95</b> includes equipment such as the HSM<sub>SE </sub><b>470</b> which can securely generate and certify cryptographic information for devices such as the secure element <b>450</b>. For example, the HSM<sub>SE </sub><b>470</b> may generate one or more of host key information HK<sub>SE</sub>, binding information B<sub>SE</sub>, a first secret key SK<sub>1</sub>, and a proprietary information key K<sub>PI</sub>.</p><p id="p-0065" num="0064">It should be noted that the secure element manufacturing location <b>95</b> may also be the fabrication location for the secure element <b>450</b>, but this is not a requirement. For example, the secure element <b>450</b> may be fabricated at a different location and shipped in an uninitialized state to the secure element manufacturing location <b>95</b> where it is initialized on a secure element personalization line.</p><p id="p-0066" num="0065">The secure element <b>450</b> includes a secure element host key information slot <b>56</b> (SE-HK<sub>SE </sub>slot <b>56</b>) configured to securely store the host key information HK<sub>SE</sub>. For example, one or more memory storage locations of fixed size corresponding to the key size of one or more host keys may be included in the SE-HK<sub>SE </sub>slot <b>56</b>. The SE-HK<sub>SE </sub>slot <b>56</b> may be part of the firmware of the secure element <b>450</b>. In one embodiment, the SE-HK<sub>SE </sub>slot <b>56</b> includes a 128 bit slot. Alternatively or additionally, the SE-HK<sub>SE </sub>slot <b>56</b> includes a 192 bit slot, a 196 bit slot, a 256 bit slot, or any other suitable slot size according to the desired strength of security. The secure element <b>450</b> may also include any suitable number of additional key slots such as a local envelope slot, a public key slot, one or more private key slots (e.g. a private key table), and the like.</p><p id="p-0067" num="0066">The host key(s) included in the host key information HK<sub>SE </sub>may conform to an encryption scheme. In one embodiment, the host key information HK<sub>SE </sub>includes advanced encryption standard (AES) key(s). However, the host key information HK<sub>SE </sub>may also include triple data encryption standard (3DES), Twofish, and Blowfish keys, among others. It should also be noted that although the preceding encryption schemes describe symmetric encryption schemes, asymmetric encryption schemes may also be applied to keys or generate keys included in the host key information HK<sub>SE</sub>. For example the host key information HK<sub>SE </sub>may include or be generated by elliptic-curve cryptography (ECC), elliptic-curve Diffie-Hellman (ECDH), the Rivest-Shamir-Adleman (RSA) algorithm, and others.</p><p id="p-0068" num="0067">The host key information HK<sub>SE </sub>may optionally be stored in the SE-HK<sub>SE </sub>slot <b>56</b> of the secure element <b>450</b> at the secure element manufacturing location <b>95</b> in a step <b>402</b>. The host key information HK<sub>SE </sub>may optionally be generated using the first secret key SK<sub>1 </sub>in step <b>413</b> and optionally stored in secure memory <b>52</b> of the secure element <b>450</b> in step <b>405</b>. Binding information B<sub>SE </sub>is stored in the secure memory <b>52</b> of the secure element <b>450</b> in step <b>404</b>. The binding information B<sub>SE </sub>may optionally be generated using the first secret key SK<sub>1 </sub>in step <b>403</b>.</p><p id="p-0069" num="0068">The proprietary information key K<sub>PI </sub>is wrapped to form a wrapped proprietary information key WK<sub>PI </sub>in step <b>421</b>. The wrapped proprietary information key WK<sub>PI </sub>is stored in the secure memory <b>52</b> of the secure element <b>450</b> in step <b>422</b>. For example, the HSM<sub>SE </sub><b>470</b> may provide the proprietary information key K<sub>PI </sub>instruct the secure element <b>450</b> to wrap the proprietary information key K<sub>PI </sub>to form the wrapped proprietary information key WK<sub>PI </sub>and store the wrapped proprietary information key WK<sub>PI </sub>in the secure memory <b>52</b>. The secure element <b>450</b> may use a local envelop key known only to the secure element <b>450</b> to wrap the proprietary information key K<sub>PI</sub>. In this way, only the secure element <b>450</b> is capable of recovering the proprietary information key K<sub>PI </sub>from the wrapped proprietary information key WK<sub>PI</sub>.</p><p id="p-0070" num="0069">Still referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a host device <b>460</b> (HD <b>460</b>) and optionally a host device hardware security module <b>480</b> (HSM<sub>HD </sub><b>480</b>) are located at a host device manufacturing location <b>96</b>. In various embodiments, the host device manufacturing location <b>96</b> is geographically separate from (i.e. remote to) the secure element manufacturing location <b>95</b>. The host device manufacturing location <b>96</b> may be a secure (e.g. trusted) facility. The security level of the host device manufacturing location <b>96</b> may be equal to or less than the security level of the secure element manufacturing location <b>95</b>. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, both the secure element manufacturing location <b>95</b> and the host device manufacturing location <b>96</b> may include an HSM to securely generate and certify cryptographic information. However, in various embodiments, the HSM<sub>HD </sub><b>480</b> may not issue certificates and instead rely on information that is securely transported to the host device manufacturing location <b>96</b> from the secure element manufacturing location <b>95</b>.</p><p id="p-0071" num="0070">The host device <b>460</b> includes a host device host key information slot <b>66</b> (HD-HK<sub>SE </sub>slot <b>66</b>) configured to securely store the host key information HK<sub>SE </sub>after the binding process. Although the HD-HK<sub>SE </sub>slot <b>66</b> is not required to be similar to the SE-HK<sub>SE </sub>slot <b>56</b>, the HD-HK<sub>SE </sub>slot <b>66</b> is substantially similar to the SE-HK<sub>SE </sub>slot <b>56</b> in several embodiments. That is, the memory size of the HD-HK<sub>SE </sub>slot <b>66</b> is substantially similar to the memory size of the SE-HK<sub>SE </sub>slot <b>56</b> in several embodiments. The HD-HK<sub>SE </sub>slot <b>66</b> may be part of the firmware of the host device <b>460</b>.</p><p id="p-0072" num="0071">A second secret key SK<sub>2 </sub>is generated and stored in system operational code <b>464</b> (SOC <b>464</b>) of the host device <b>460</b> in step <b>407</b>. For example, the HSM<sub>HD </sub><b>480</b> may generate the second secret key SK<sub>2</sub>. The system operational code <b>464</b> may function as a secure bootloader for the host device. The system operational code <b>464</b> is stored in protected memory <b>62</b> of the host device <b>460</b>. That is, the protected memory <b>62</b> may be memory that is protected from readout. Protected memory <b>62</b> may include nonvolatile memory (NVM) such as flash memory that cannot be read by an external device. Protected memory <b>62</b> may also include read-only memory (ROM) that cannot be modified by programming instructions. Some or all of the system operational code <b>464</b> may be stored in ROM. Protected memory <b>62</b> may also include random-access memory (RAM). Within the scope of this disclosure, data stored in protected memory <b>62</b> is considered to be protected from unauthorized access at least while performing the methods described herein and is intended to include all forms of memory suitable for such a purpose. Further, the protected memory <b>62</b> may be implemented in any suitable manner such as attack resistant technology (e.g. TrustZone&#xae; in an advanced reduced instruction set computing (RISC) machine (ARM) processor), or using any suitable means of making the protected memory <b>62</b> secure against software or hardware attacks may be utilized.</p><p id="p-0073" num="0072">Since the binding information B<sub>SE </sub>at the secure element manufacturing location <b>95</b> and the second secret key SK<sub>2 </sub>at the host device manufacturing location <b>96</b> are both cryptographically correlated to the host key information HK<sub>SE </sub>used as a basis to cryptographically bind the secure element <b>450</b> and the host device <b>460</b>, secret information may optionally be securely transported from the secure element manufacturing location <b>95</b> to the host device manufacturing location <b>96</b> in step <b>406</b>. Secret information may also be securely transported from the host device manufacturing location <b>96</b> to the secure element manufacturing location <b>95</b>.</p><p id="p-0074" num="0073">The second secret key SK<sub>2 </sub>may be generated at the host device manufacturing location <b>96</b> using the secret information from the secure element manufacturing location <b>95</b>. In some embodiments, the secret information may also be used to generate the first secret key SK<sub>1 </sub>at the secure element manufacturing location <b>95</b>. For example, the secret information may be another secret key known at both the locations and securely stored in both the HSM<sub>SE </sub><b>470</b> and the HSM<sub>HD </sub><b>480</b>. Alternatively, the first secret key SK<sub>1 </sub>and the second secret key SK<sub>2 </sub>may be the same key. In other embodiments, the first secret key SK<sub>1 </sub>and the second secret key SK<sub>2 </sub>may be independent of one another.</p><p id="p-0075" num="0074">Encrypted proprietary information CPI may optionally be stored in protected memory <b>62</b> in step <b>441</b>. Alternatively, the encrypted proprietary information CPI may be provided to the host device <b>460</b> at a different location (e.g. during or after the binding process). The encrypted proprietary information CPI may be decrypted using the proprietary information key K<sub>PI </sub>to generate proprietary information PI. Since the encrypted proprietary information CPI is protected by encryption, the encrypted proprietary information CPI may also be stored in unprotected NVM of the host device in some embodiments.</p><p id="p-0076" num="0075">The secure element <b>450</b> may be cryptographically bound to the host device <b>460</b> at a chipset manufacturing location <b>97</b> which may be geographically separate from (i.e. remote to) both the secure element manufacturing location <b>95</b> and the host device manufacturing location <b>96</b>. The secure element <b>450</b> is transported from the secure element manufacturing location <b>95</b> to the chipset manufacturing location <b>97</b> in step <b>408</b>. Similarly, the host device <b>460</b> is transported from the host device manufacturing location <b>96</b> to the chipset manufacturing location <b>97</b> in step <b>409</b>. At this point, the secure element <b>450</b> and the host device <b>460</b> are collocated at the chipset manufacturing location <b>97</b>. That is, the secure element <b>450</b> and the host device <b>460</b> are physically in the same location.</p><p id="p-0077" num="0076">The secure element <b>450</b> is operatively coupled to the host device <b>460</b> in step <b>410</b>. For example, an electrical bus such as a data bus <b>92</b> may couple the secure element <b>450</b> to the host device <b>460</b>. Chipset initialization equipment may also be included to initiate the pairing process. Chipset initialization equipment may also optionally provide the encrypted proprietary information CPI in step <b>441</b> at the chipset manufacturing location <b>97</b> if the encrypted proprietary information CPI was not provided earlier.</p><p id="p-0078" num="0077">The host device <b>460</b> reads the binding information B<sub>SE </sub>from the secure element <b>450</b> in step <b>415</b>. The binding information B<sub>SE </sub>travels on the data bus <b>92</b>, but does not jeopardize the security of the host key information HK<sub>SE </sub>because the host key information HK<sub>SE </sub>cannot be generated solely from the binding information B<sub>SE</sub>. The host device <b>460</b> generates the host key information HK<sub>SE </sub>using the binding information B<sub>SE </sub>and the second secret key SK<sub>2 </sub>in step <b>417</b> and stores the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot <b>66</b> of the host device <b>460</b> in step <b>418</b>. After the host key information HK<sub>SE </sub>has been installed in the HD-HK<sub>SE </sub>slot <b>66</b> of the host device <b>460</b>, the second secret key SK<sub>2 </sub>is optionally deleted in step <b>419</b> to further protect the anonymity of the host key information HK<sub>SE</sub>. For example the binding process stored in the system operational code <b>464</b> may be atomic and delete all key material as soon as it is used.</p><p id="p-0079" num="0078">After the host key information HK<sub>SE </sub>is stored in both the SE-HK<sub>SE </sub>slot <b>56</b> and the HD-HK<sub>SE </sub>slot <b>66</b>, the secure element <b>450</b> and the host device <b>460</b> are cryptographically bound. Optionally, if the host key information HK<sub>SE </sub>was not stored in the SE-HK<sub>SE </sub>slot <b>56</b> at the secure element manufacturing location <b>95</b>, the host key information HK<sub>SE </sub>may be generated by the secure element <b>450</b> using the first secret key SK<sub>1 </sub>together with additional information in step <b>413</b> and stored in the SE-HK<sub>SE </sub>slot <b>56</b> in step <b>414</b>. The additional information may be provided by the host device <b>460</b>, for example.</p><p id="p-0080" num="0079">After the secure element <b>450</b> and the host device <b>460</b> are cryptographically bound, the host device <b>460</b> uses the host key information HK<sub>SE </sub>stored in the HD-HK<sub>SE </sub>slot <b>66</b> to read the wrapped proprietary information key WK<sub>PI </sub>from the secure element <b>450</b> in step <b>431</b> and instruct the secure element <b>450</b> to unwrap the wrapped proprietary information key WK<sub>PI </sub>to generate the proprietary information key K<sub>PI </sub>in step <b>432</b>. The proprietary information key K<sub>PI </sub>is then provided to the host device <b>460</b> in step <b>433</b>. In step <b>434</b>, the host device <b>460</b> uses the proprietary information key K<sub>PI </sub>to decrypt the encrypted proprietary information CPI and generate the proprietary information PI. Advantageously, since the secure element <b>450</b> and host device <b>460</b> are paired using the host key information HK<sub>SE </sub>which has not been compromised, the proprietary information key K<sub>PI </sub>is encrypted using the host key information HK<sub>SE </sub>by the secure element <b>450</b> after being unwrapped and is not exposed during transport on data bus <b>92</b>.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a method of cryptographically aligning a secure element with a host device using a master key and encrypted host key information in accordance with an embodiment of the invention. The method of <figref idref="DRAWINGS">FIG. <b>5</b></figref> may be a specific implementation of other methods described herein, such as the cryptographic alignment method <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example. Similarly labeled elements may be as previously described.</p><p id="p-0082" num="0081">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a cryptographic alignment method <b>500</b> includes the initial state <b>10</b> which may be as previously described. A secure element-diversified key K<sub>SE </sub>is generated as a function of a master key K<sub>M </sub>and a secure element unique identifier UID<sub>SE </sub>in step <b>501</b>. In various embodiments the secure element-diversified key K<sub>SE </sub>is an AES key and is a 128 bit AES key in one embodiment. Similarly, the master key K<sub>M </sub>is an AES key in some embodiments and is a 128 bit AES key in one embodiment.</p><p id="p-0083" num="0082">The master key K<sub>M </sub>is secret information. The master key K<sub>M </sub>may only be internally known by hardware security equipment, for example. The secure element unique identifier UID<sub>SE </sub>uniquely identifies the secure element. Advantageously, the secure element-diversified key K<sub>SE </sub>is a cryptographic secret due to the dependence on the master key K<sub>M</sub>. Additionally, the secure element-diversified key K<sub>SE </sub>is unique to the secure element because of the dependence on the secure element unique identifier UID<sub>SE</sub>. In some embodiments, the secure element-diversified key K<sub>SE </sub>may be generated without using a unique identifier.</p><p id="p-0084" num="0083">Optionally, the secure element-diversified key K<sub>SE </sub>may also be generated in step <b>501</b> as a function of the master key K<sub>M</sub>, the secure element unique identifier UID<sub>SE</sub>, and a password. For example, the password may be a batch password that is the same for a batch of secure elements, but that is changed periodically. In contrast, the master key K<sub>M </sub>may not be changed or may only be changed if there is reason to believe it has been compromised (i.e. a static or semi-static key). If a unique identifier is not used in step <b>501</b>, the secure element-diversified key K<sub>SE </sub>may also be generated in step <b>501</b> as a function of the master key K<sub>M </sub>and the password.</p><p id="p-0085" num="0084">The secure element-diversified key K<sub>SE </sub>is an AES key in various embodiments, and is</p><p id="p-0086" num="0085">After the secure element-diversified key K<sub>SE </sub>is generated in step <b>501</b>, host key information HK<sub>SE </sub>is encrypted using the secure element-diversified key K<sub>SE </sub>to generate encrypted host key information CHK<sub>SE </sub>in step <b>503</b>. The encrypted host key information CHK<sub>SE </sub>is then stored in secure memory of the secure element in step <b>504</b>. The host key information HK<sub>SE </sub>is also stored in a secure element host key information slot (SE-HK<sub>SE </sub>slot) of the secure element in step <b>502</b>.</p><p id="p-0087" num="0086">Optionally, if the secure element and the host device are at geographically separate locations, it may be necessary to securely transport the master key K<sub>M </sub>from a secure element manufacturing location to a host device manufacturing location in step <b>506</b>. Alternatively, the master key K<sub>M </sub>may already be at both locations at the initial state <b>10</b>. In some embodiments, the master key K<sub>M </sub>could also be securely transported from the host device manufacturing location to the secure element manufacturing location. In applications where a password is used in step <b>501</b>, the password may also be securely transported from the secure element manufacturing location to the host device manufacturing location in step <b>506</b>.</p><p id="p-0088" num="0087">The master key K<sub>M </sub>is obfuscated using a host device unique identifier UID<sub>HD </sub>to generate a host device-obfuscated key K<sub>HD </sub>within system operational code (SOC) stored in protected memory of the host device in step <b>507</b>. The obfuscation may include encryption or any suitable form of obfuscation within the system operational code or physically within the host device. For example, the obfuscation may also include a form of tamper-resistant memory. The host device-obfuscated key K<sub>HD </sub>may be different from the secure element-diversified key K<sub>SE </sub>and has similar cryptographic advantages. As before, in some embodiments, the master key K<sub>M </sub>may be obfuscated without using a unique identifier and a password may or may not be included in the obfuscation process. For example, a password which may be the same as the password optionally used in step <b>501</b> may be used in step <b>507</b> along with the host device unique identifier UID<sub>HD </sub>to obfuscate the master key K<sub>M</sub>. The system operational code of the host device is capable of reversing the obfuscation of the host device-obfuscated key K<sub>HD </sub>to recover the master key K<sub>M</sub>.</p><p id="p-0089" num="0088">After step <b>504</b> and step <b>507</b> have both been performed, the secure element is cryptographically aligned with the host device in aligned state <b>520</b>. Specifically, the encrypted host key information CHK<sub>SE </sub>is stored in the secure element and the host device-obfuscated key K<sub>HD </sub>is stored in the host device. The aligned state <b>520</b> may be a specific description of other aligned states described herein such as the aligned state <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a method of cryptographically binding a secure element to a host device using a master key and encrypted host key information in accordance with an embodiment of the invention. The method of <figref idref="DRAWINGS">FIG. <b>6</b></figref> may be a specific implementation of other methods described herein, such as the cryptographic binding method <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, for example. Similarly labeled elements may be as previously described.</p><p id="p-0091" num="0090">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a cryptographic binding method <b>600</b> includes an initial state which is an aligned state <b>520</b> in which a secure element and a host device are cryptographically aligned. The alignment may be performed in accordance with cryptographic alignment methods as describe herein, such as the cryptographic alignment method <b>500</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, for example. The alignment process may be geographically separated from a binding location where the cryptographic binding method <b>600</b> is performed and at which the secure element and the host device are collocated. For example, the binding location may be a chipset manufacturing location that is remote to locations such as a secure element manufacturing location and a host device manufacturing location.</p><p id="p-0092" num="0091">After the aligned state <b>520</b>, the secure element is operationally coupled to the host device in step <b>210</b> as previously described. The binding process may optionally be initiated by sending a predetermined command to the host device in step <b>211</b> and the secure element may optionally be unlocked by a password in step <b>212</b>, also as previously described. After step <b>210</b>, the host device reads encrypted host key information CHK<sub>SE </sub>and a secure element unique identifier UID<sub>SE </sub>from the secure element in step <b>615</b>. If the secure element unique identifier UID<sub>SE </sub>was not involved in the cryptographic alignment process that resulted in the aligned state <b>520</b>, then the secure element unique identifier UID<sub>SE </sub>may optionally not be read by the host device in step <b>615</b>.</p><p id="p-0093" num="0092">The host device reverses the host device-obfuscated key K<sub>HD </sub>to generate the master key K<sub>M </sub>in step <b>616</b>. The reverse obfuscation process may use a password such as may be provided in step <b>611</b> and/or step <b>612</b>. The reverse obfuscation process may also use a host device unique identifier UID<sub>HD</sub>. The host device decrypts the encrypted host key information CHK<sub>SE </sub>using the master key K<sub>M </sub>and the secure element unique identifier UID<sub>SE </sub>to generate host key information HK<sub>SE </sub>in step <b>617</b>. For example, the host device may recreate the secure element diversified key K<sub>SE </sub>using the master key K<sub>M </sub>together with the secure element unique identifier UID<sub>SE </sub>(and a password if a password was used during the cryptographic alignment process that resulted in the aligned state <b>520</b>).</p><p id="p-0094" num="0093">After the host key information HK<sub>SE </sub>is generated by the host device in step <b>617</b>, the host device stores the host key information HK<sub>SE </sub>in a host device host key information slot (HD-HK<sub>SE </sub>slot) of the host device in step <b>618</b>. Once the host key information HK<sub>SE </sub>is stored in both the HD-HK<sub>SE </sub>slot of the host device in step <b>618</b> and in the SE-HK<sub>SE </sub>slot of the secure element prior to the aligned state <b>520</b>, the secure element is cryptographically bound to the host device in bound state <b>30</b>, which may be as previously described.</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates schematic block diagrams of a secure element, host device, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information using a master key and encrypted host key information in accordance with an embodiment of the invention. The schematic block diagrams of <figref idref="DRAWINGS">FIG. <b>7</b></figref> may schematically illustrate implementations of one or more of the methods described herein, such as the cryptographic alignment method <b>500</b>, the cryptographic binding method <b>600</b>, and the method of acquiring proprietary information <b>300</b> of <figref idref="DRAWINGS">FIGS. <b>5</b>, <b>6</b>, and <b>3</b></figref> respectively, as examples. Further, the schematic block diagrams of <figref idref="DRAWINGS">FIG. <b>7</b></figref> may be specific implementations of other schematic block diagrams described herein, such as the schematic block diagrams of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, for example. Similarly labeled elements may be as previously described.</p><p id="p-0096" num="0095">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the schematic block diagrams include a secure element <b>750</b> (SE <b>750</b>), a secure element hardware security module <b>770</b> (HSM<sub>SE </sub><b>770</b>), a host device <b>760</b> (HD <b>760</b>), and a host device hardware security module <b>780</b>. The secure element <b>750</b> may be a specific implementation of the secure element <b>450</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>. In the same way, the host device <b>760</b> may be a specific implementation of the host device <b>460</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0097" num="0096">Similar to other hardware security modules previously described, the HSM<sub>SE </sub><b>770</b> may optionally be included at the secure element manufacturing location <b>95</b> and the HSM<sub>HD </sub><b>780</b> may optionally be included at the host device manufacturing location <b>96</b>. The HSM<sub>SE </sub><b>770</b> and the HSM<sub>HD </sub><b>780</b> may be specific implementations of the HSM<sub>SE </sub><b>470</b> and the HSM<sub>HD </sub><b>480</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, respectively.</p><p id="p-0098" num="0097">A secure element-diversified key K<sub>SE </sub>is generated as a function of a master key K<sub>M </sub>in step <b>701</b>. The secure element-diversified key K<sub>SE </sub>may be generated by the HSM<sub>SE </sub><b>770</b>. A secure element unique identifier UID<sub>SE </sub>and/or a password such as a batch password may also be used in combination with the master key K<sub>M </sub>to generate the secure element-diversified key K<sub>SE</sub>. The secure element-diversified key K<sub>SE </sub>is used to encrypt host key information HK<sub>SE </sub>to generate encrypted host key information CHK<sub>SE </sub>in step <b>703</b>. The encrypted host key information HK<sub>SE </sub>is stored in secure memory <b>52</b> of the secure element <b>750</b> in step <b>704</b>. Optionally, the master key K<sub>M </sub>is securely transported from the secure element manufacturing location <b>95</b> to the host device manufacturing location <b>96</b> in step <b>706</b>.</p><p id="p-0099" num="0098">The host key information HK<sub>SE </sub>is stored in a secure element host key information slot <b>56</b> (SE-HK<sub>SE </sub>slot <b>56</b>) of the secure element <b>750</b> in step <b>702</b>. The host key information HK<sub>SE </sub>may be generated by the HSM<sub>SE </sub><b>770</b>. For example, the host key information HK<sub>SE </sub>may be securely installed in the SE-HK<sub>SE </sub>slot <b>56</b> of the secure element <b>750</b> by the HSM<sub>SE </sub><b>770</b>. A proprietary information key K<sub>PI </sub>is wrapped to form a wrapped proprietary information key WK<sub>PI </sub>in step <b>421</b>. The wrapped proprietary information key WK<sub>PI </sub>is stored in the secure memory <b>52</b> of the secure element <b>750</b> in step <b>422</b>.</p><p id="p-0100" num="0099">Still referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the master key K<sub>M </sub>is obfuscated to generate a host device-obfuscated key K<sub>HD </sub>and stored in system operational code <b>764</b> (SOC <b>764</b>) of the host device <b>760</b> in step <b>707</b>. For example, the HSM<sub>HD </sub><b>780</b> may generate the host device-obfuscated key K<sub>HD </sub>The host device-obfuscated key K<sub>HD </sub>may be obfuscated using a host device unique identifier UID<sub>HD </sub>and/or a password such as a batch password. The password may be the same or different from the password that may be used to generate the secure element-diversified key K<sub>SE </sub>in step <b>701</b>. Encrypted proprietary information CPI may optionally be stored in protected memory <b>62</b> of the host device <b>1060</b> in step <b>441</b>.</p><p id="p-0101" num="0100">The secure element <b>750</b> may be cryptographically bound to the host device <b>760</b> at a chipset manufacturing location <b>97</b> which may be geographically separate from (i.e. remote to) both the secure element manufacturing location <b>95</b> and the host device manufacturing location <b>96</b>. The secure element <b>750</b> is transported from the secure element manufacturing location <b>95</b> to the chipset manufacturing location <b>97</b> in step <b>708</b>. Similarly, the host device <b>760</b> is transported from the host device manufacturing location <b>96</b> to the chipset manufacturing location <b>97</b> in step <b>709</b>. At this point, the secure element <b>750</b> and the host device <b>760</b> are collocated at the chipset manufacturing location <b>97</b>. That is, the secure element <b>750</b> and the host device <b>760</b> are physically in the same location.</p><p id="p-0102" num="0101">The secure element <b>750</b> is operatively coupled to the host device <b>760</b> in step <b>710</b>. The host device <b>760</b> reads the encrypted host key information CHK<sub>SE </sub>from the secure element <b>750</b> in step <b>715</b>. In step <b>716</b>, the host device <b>760</b> reverses the obfuscation of the host device-obfuscated key K<sub>HD </sub>to generate the master key K<sub>M</sub>. The host device unique identifier UID<sub>HD </sub>and/or the password optionally used in step <b>707</b> may be used to in step <b>716</b> to reverse the obfuscation. The host device <b>760</b> then decrypts the encrypted host key information CHK<sub>SE </sub>using the master key K<sub>M </sub>and optionally the secure element unique identifier UID<sub>SE </sub>to generate the host key information HK<sub>SE </sub>in step <b>717</b> and stores the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot <b>66</b> of the host device <b>760</b> in step <b>718</b>. For example, the host device <b>760</b> may read the secure element unique identifier UID<sub>SE </sub>from the secure element <b>750</b> in step <b>715</b> or at some other time after step <b>710</b>. The host device <b>760</b> may use the master key K<sub>M </sub>and the secure element unique identifier UID<sub>SE </sub>to generate the secure element-diversified key K<sub>SE </sub>internally in order to decrypt the encrypted host key information CHK<sub>SE</sub>.</p><p id="p-0103" num="0102">After the host key information HK<sub>SE </sub>has been installed in the HD-HK<sub>SE </sub>slot <b>66</b> of the host device <b>760</b>, the master key K<sub>M </sub>and the host device-obfuscated key K<sub>HD </sub>are optionally deleted in step <b>719</b> to further protect the anonymity of the host key information HK<sub>SE</sub>. For example the binding process stored in the system operational code <b>764</b> may be atomic and delete all key material as soon as it is used. Once the host key information HK<sub>SE </sub>is stored in both the SE-HK<sub>SE </sub>slot <b>56</b> and the HD-HK<sub>SE </sub>slot <b>66</b>, the secure element <b>750</b> and the host device <b>760</b> are cryptographically bound.</p><p id="p-0104" num="0103">After the secure element <b>750</b> and the host device <b>760</b> are cryptographically bound, the host device <b>760</b> uses the host key information HK<sub>SE </sub>stored in the HD-HK<sub>SE </sub>slot <b>66</b> to read the wrapped proprietary information key WK<sub>PI </sub>from the secure element <b>750</b> in step <b>431</b> and instruct the secure element <b>750</b> to unwrap the wrapped proprietary information key WK<sub>PI </sub>to generate the proprietary information key K<sub>PI </sub>in step <b>432</b>. The proprietary information key K<sub>PI </sub>is then provided to the host device <b>760</b> in step <b>433</b>. In step <b>434</b>, the host device <b>760</b> uses the proprietary information key K<sub>PI </sub>to decrypt the encrypted proprietary information CPI and generate the proprietary information PI.</p><p id="p-0105" num="0104">As previously noted, the methods and schematic diagrams of <figref idref="DRAWINGS">FIGS. <b>5</b>-<b>7</b></figref> may be specific implementations of the methods and schematic diagrams of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>4</b></figref>. For example, the encrypted host key information CHK<sub>SE </sub>may be a specific implementation of the binding information B<sub>SE</sub>. Additionally, the secure element-diversified key K<sub>SE </sub>and the host device-obfuscated key KED may be specific implementations of the first secret key SK<sub>1 </sub>and the second secret key SK<sub>2 </sub>respectively.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a method of cryptographically aligning a secure element with a host device using a secure element public key and a host device private key in accordance with an embodiment of the invention. The method of <figref idref="DRAWINGS">FIG. <b>8</b></figref> may be a specific implementation of other methods described herein, such as the cryptographic alignment method <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example. Similarly labeled elements may be as previously described.</p><p id="p-0107" num="0106">Referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a cryptographic alignment method <b>800</b> includes the initial state <b>10</b> which may be as previously described. A secure element private key n<sub>SE </sub>is generated in step <b>801</b>. The secure element private key n<sub>SE </sub>may be an ECC private key that is part of an ECDH key pair in some embodiments. For example, the ECDH key pair may be generated using a preselected set of parameters. The set of parameters may define a prime curve or a binary curve. For example, a prime curve may be over the set of integers {0, 1, . . . p&#x2212;1} where p is a prime number (i.e. Z<sub>p</sub>). As another example, a binary curve may be over the Galois field GF(2<sup>m</sup>) where m is a positive integer. The preselected set of parameters may conform to a set of recognized standards such as National Institute of Standards and Technology (NIST) recommended curve or an ECC Brainpool standard curve.</p><p id="p-0108" num="0107">The secure element private key n<sub>SE </sub>may be generated by the secure element or an external entity such as a hardware security module. The secure element private key n<sub>SE </sub>may be diversified from a master key in one embodiment. For example, the secure element private key n<sub>SE </sub>may be derived from some combination of a secure element master key, a secure element unique identifier, and a password such as a batch password. The secure element private key n<sub>SE </sub>may be used to create a secure element public key P<sub>SE </sub>in step <b>803</b>. The secure element public key P<sub>SE </sub>may be an ECC public key of the ECDH key pair, for example. The secure element public key P<sub>SE </sub>may then be stored in secure memory of the secure element in step <b>804</b>. Alternatively, creation of the secure element public key P<sub>SE </sub>may be deferred to a later time and the secure element private key n<sub>SE </sub>may be stored in secure memory of a secure element in step <b>805</b>.</p><p id="p-0109" num="0108">A host device private key n<sub>HD </sub>is stored within system operational code stored in protected memory of the host device in step <b>807</b>. The host device private key n<sub>HD </sub>may be an ECC private key that is part of an ECDH key pair and generated according to the same ECC parameters used to generate the (n<sub>SE</sub>, P<sub>SE</sub>) ECDH key pair. The host device private key n<sub>HD </sub>may be diversified similar to the secure element private key n<sub>SE </sub>with a host device master key, a host device unique identifier, and a password such as batch password. It should be noted that it may be considered advantageous from a security perspective for the host device private key n<sub>HD </sub>and the secure element private key n<sub>SE </sub>to be diversified using separate keys rather than a single master key as in some previously described embodiments. For example, if used, the secure element master key and the host device master key may not be cryptographically correlated.</p><p id="p-0110" num="0109">After the host device private key n<sub>HD </sub>is stored in the host device in step <b>807</b> and either the secure element private key n<sub>SE </sub>is stored in the secure element in step <b>805</b> or the secure element public key P<sub>SE </sub>is stored in the secure element in step <b>804</b>, the secure element is cryptographically aligned with the host device in an aligned state <b>820</b>. The aligned state <b>820</b> may be a specific description of other aligned states described herein such as the aligned state <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example.</p><p id="p-0111" num="0110">A host device public key P<sub>HD </sub>may optionally be created from the host device private key n<sub>HD </sub>prior to the aligned state <b>820</b>. The host device public key P<sub>HD </sub>may be an ECC public key of the (n<sub>HD</sub>, P<sub>HD</sub>) ECDH key pair, for example. In some embodiments, the host device private key n<sub>HD </sub>and the host device public key P<sub>HD </sub>may be a static key pair that is reused for more than one host device. That is, in this specific scenario, both the host device private key n<sub>HD </sub>and the host device public key P<sub>HD </sub>may be kept secret and the host device public key P<sub>HD </sub>may be public only in the sense that it is made known to the secure element. Optionally, the host device public key P<sub>HD </sub>is securely transported from a host device manufacturing location to a secure element manufacturing location in step <b>806</b>. Also prior to the aligned state <b>820</b>, host key information HK<sub>SE </sub>may be stored in a secure element host key slot (SE-HK<sub>SE </sub>slot) of the secure element in step <b>802</b>. The host key information may be generated using the secure element private key n<sub>SE </sub>and the host device public key P<sub>HD</sub>.</p><p id="p-0112" num="0111">It should also be noted that, prior to the aligned state <b>820</b>, signed certificates may be installed in the secure element and/or the host device. For example, an HSM<sub>SE </sub>may create a secure element certificate C<sub>SE </sub>using a certificate authority (CA) signing-private-key and install the secure element certificate C<sub>SE </sub>in the secure element prior to the aligned state <b>820</b>. Additionally or alternatively, an HSM<sub>HD </sub>may create a host device certificate C<sub>HD </sub>using a CA signing-private-key and install the host device certificate C<sub>HD </sub>in the host device prior to the aligned state <b>820</b>. These certificates may be used, for example, during the binding process to allow the host device to verify it is pairing with an authorized secure element, and for the secure element to verify it is being paired with an authorized host device.</p><p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a method of cryptographically binding a secure element to a host device using a secure element public key and a host device private key in accordance with an embodiment of the invention. The method of <figref idref="DRAWINGS">FIG. <b>9</b></figref> may be a specific implementation of other methods described herein, such as the cryptographic binding method <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, for example. Similarly labeled elements may be as previously described.</p><p id="p-0114" num="0113">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a cryptographic binding method <b>900</b> includes an initial state which is an aligned state <b>820</b> in which a secure element and a host device are cryptographically aligned. The alignment may be performed in accordance with cryptographic alignment methods as describe herein, such as the cryptographic alignment method <b>800</b> of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, for example. The alignment process may be geographically separated from a binding location where the cryptographic binding method <b>900</b> is performed and at which the secure element and the host device are collocated. For example, the binding location may be a chipset manufacturing location that is remote to locations such as a secure element manufacturing location and a host device manufacturing location.</p><p id="p-0115" num="0114">After the aligned state <b>820</b>, the secure element is operationally coupled to the host device in step <b>210</b> as previously described. The binding process may optionally be initiated by sending a predetermined command to the host device in step <b>211</b> and the secure element may optionally be unlocked by a password in step <b>212</b>, also as previously described. After step <b>210</b>, a secure element public key P<sub>SE </sub>is optionally created using a secure element private key n<sub>SE </sub>in step <b>903</b> if it has not already been created prior to the aligned state <b>820</b>. For example, the secure element may create the secure element public key P<sub>SE </sub>internally. After the secure element contains the secure element public key P<sub>SE</sub>, the host device reads the secure element public key P<sub>SE </sub>from the secure element in step <b>915</b>.</p><p id="p-0116" num="0115">The host device creates host key information HK<sub>SE </sub>using a host device private key n<sub>HD </sub>and the secure element public key P<sub>SE </sub>in step <b>917</b>. After the host key information HK<sub>SE </sub>is generated by the host device in step <b>917</b>, the host device stores the host key information HK<sub>SE </sub>in a host device host key information slot (HD-HK<sub>SE </sub>slot) of the host device in step <b>918</b>. If the host key information HK<sub>SE </sub>is not stored in the secure element prior to the aligned state <b>820</b>, the host key information HK<sub>SE </sub>is optionally created using the secure element private key n<sub>SE </sub>and a host device public key P<sub>HD </sub>in step <b>913</b>. Similar to step <b>917</b>, the host device public key P<sub>HD </sub>may be created by the host device using the host device private key n<sub>HD</sub>. The host device public key P<sub>HD </sub>may be sent to the secure element by the host device as part of the binding process after step <b>210</b>, but before step <b>913</b>.</p><p id="p-0117" num="0116">After the host key information is created by the secure element in step <b>913</b>, the host key information HK<sub>SE </sub>is stored in a secure element host key information slot (SE-HK<sub>SE </sub>slot) of the secure element in step <b>914</b>. Once the host key information HK<sub>SE </sub>is stored in both the HD-HK<sub>SE </sub>slot of the host device in step <b>918</b> and in the SE-HK<sub>SE </sub>slot of the secure element either prior to the aligned state <b>820</b> or in step <b>914</b>, the secure element is cryptographically bound to the host device in bound state <b>30</b>, which may be as previously described.</p><p id="p-0118" num="0117">In some embodiments, signed certificates may be used during the binding process to verify that the public keys sent between the host device and the secure element are valid. For example, a secure element certificate C<sub>SE </sub>may be signed by an HSM<sub>SE </sub>and stored in the secure element prior to the aligned state <b>820</b>. Then, the host device may verify that the secure element public key P<sub>SE </sub>is valid (i.e. sent by a legitimate secure element) in step <b>915</b> by verifying the secure element certificate C<sub>SE </sub>using a certificate authority (CA) public key that corresponds to the secure element (e.g. the CA signing-private-key used be the HSM<sub>SE </sub>to create the secure element certificate C<sub>SE</sub>). Similarly, in embodiments where the secure element creates the host key information HK<sub>SE </sub>after the aligned state <b>820</b> (e.g. in step <b>913</b>) a host device certificate C<sub>HD </sub>may be signed by an HSM<sub>HD </sub>and stored in the host device prior to the aligned state <b>820</b>. The secure element may then verify that the host device public key P<sub>HD </sub>is valid (i.e. sent by a legitimate host device) in step <b>913</b> by verifying the host device certificate C<sub>HD </sub>using a CA public key that corresponds to the host device (e.g. the CA signing-private-key used be the HSM<sub>HD </sub>to create the host device certificate C<sub>HD</sub>). In other words, signed certificates may be used by the host device and/or the secure element to verify that the device with which it is engaging is authorized to be bound to it.</p><p id="p-0119" num="0118"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates schematic block diagrams of a secure element, host device, and hardware security modules usable for cryptographic alignment, binding, and secure acquisition of proprietary information using a secure element public key and a host device private key in accordance with an embodiment of the invention. The schematic block diagrams of <figref idref="DRAWINGS">FIG. <b>10</b></figref> may schematically illustrate implementations of one or more of the methods described herein, such as the cryptographic alignment method <b>700</b>, the cryptographic binding method <b>800</b>, and the method of acquiring proprietary information <b>300</b> of <figref idref="DRAWINGS">FIGS. <b>7</b>, <b>8</b>, and <b>3</b></figref> respectively, as examples. Further, the schematic block diagrams of <figref idref="DRAWINGS">FIG. <b>10</b></figref> may be a specific implementation of other schematic block diagrams described herein, such as the schematic block diagrams of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, for example. Similarly labeled elements may be as previously described.</p><p id="p-0120" num="0119">Referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the schematic block diagrams include a secure element <b>1050</b> (SE <b>1050</b>), a secure element hardware security module <b>1070</b> (HSM<sub>SE </sub><b>1070</b>), a host device <b>1060</b> (HD <b>1060</b>), and a host device hardware security module <b>1080</b>. The secure element <b>1050</b> may be a specific implementation of the secure element <b>450</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>. In the same way, the host device <b>1060</b> may be a specific implementation of the host device <b>460</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0121" num="0120">Similar to other hardware security modules previously described, the HSM<sub>SE </sub><b>1070</b> may optionally be included at the secure element manufacturing location <b>95</b> and the HSM<sub>HD </sub><b>1080</b> may optionally be included at the host device manufacturing location <b>96</b>. The HSM<sub>SE </sub><b>1070</b> and the HSM<sub>HD </sub><b>1080</b> may be specific implementations of the HSM<sub>SE </sub><b>470</b> and the HSM<sub>HD </sub><b>480</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, respectively.</p><p id="p-0122" num="0121">A secure element private key n<sub>SE </sub>is generated in step <b>1001</b>. The secure element private key n<sub>SE </sub>is either stored in secure memory <b>52</b> of the secure element <b>1050</b> in step <b>1005</b> or used to generate a secure element public key P<sub>SE </sub>in step <b>1003</b>. If the secure element public key P<sub>SE </sub>is generated in step <b>1003</b>, the secure element public key P<sub>SE </sub>is then stored in the secure memory <b>52</b> of the secure element <b>1050</b> in step <b>1004</b>. Alternatively, after the secure element private key n<sub>SE </sub>is stored in the secure memory <b>52</b> in step <b>1005</b>, the secure element <b>1050</b> may create the secure element public key P<sub>SE </sub>internally in step <b>1003</b> and then store the secure element public key P<sub>SE </sub>in the secure memory <b>52</b> in step <b>1004</b>.</p><p id="p-0123" num="0122">Optionally, a host device public key P<sub>HD </sub>may be used in combination with the secure element private key n<sub>SE </sub>to generate host key information HK<sub>SE </sub>in step <b>1013</b>. If the host device public key P<sub>HD </sub>is not already located at the secure element manufacturing location <b>95</b> (e.g. in the HSM<sub>SE </sub><b>1070</b>) then host device public key P<sub>HD </sub>may be securely transported from a host device manufacturing location <b>96</b> to the secure element manufacturing location <b>95</b> in step <b>1006</b>. The host key information HK<sub>SE </sub>may be generated by the HSM<sub>SE </sub><b>1070</b>. Then, the host key information HK<sub>SE </sub>may be optionally be stored in a secure element host key information slot <b>56</b> (SE-HK<sub>SE </sub>slot <b>56</b>) of the secure element <b>1050</b> in step <b>1002</b>. For example, the host key information HK<sub>SE </sub>may be securely installed in the SE-HK<sub>SE </sub>slot <b>56</b> of the secure element <b>1050</b> by the HSM<sub>SE </sub><b>1070</b>. A proprietary information key K<sub>PI </sub>is wrapped to form a wrapped proprietary information key WK<sub>PI </sub>in step <b>421</b>. The wrapped proprietary information key WK<sub>PI </sub>is stored in the secure memory <b>52</b> of the secure element <b>1050</b> in step <b>422</b>.</p><p id="p-0124" num="0123">Still referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, a host device private key n<sub>HD </sub>is stored in system operational code <b>1064</b> (SOC <b>1064</b>) of the host device <b>1060</b> in step <b>1007</b>. For example, the HSM<sub>HD </sub><b>1080</b> may generate the host device private key n<sub>HD </sub>Alternatively, the host device private key n<sub>HD </sub>may be a static key known only to the HSM<sub>HD </sub><b>1080</b>. The host device public key P<sub>HD </sub>is optionally created using the host device private key n<sub>HD </sub>in step <b>1023</b> prior to step <b>1006</b>. Encrypted proprietary information CPI may optionally be stored in protected memory <b>62</b> of the host device <b>1060</b> in step <b>441</b>.</p><p id="p-0125" num="0124">The secure element <b>1050</b> may be cryptographically bound to the host device <b>1060</b> at a chipset manufacturing location <b>97</b> which may be geographically separate from (i.e. remote to) both the secure element manufacturing location <b>95</b> and the host device manufacturing location <b>96</b>. The secure element <b>1050</b> is transported from the secure element manufacturing location <b>95</b> to the chipset manufacturing location <b>97</b> in step <b>1008</b>. Similarly, the host device <b>1060</b> is transported from the host device manufacturing location <b>96</b> to the chipset manufacturing location <b>97</b> in step <b>1009</b>. At this point, the secure element <b>1050</b> and the host device <b>1060</b> are collocated at the chipset manufacturing location <b>97</b>. That is, the secure element <b>1050</b> and the host device <b>1060</b> are physically in the same location.</p><p id="p-0126" num="0125">The secure element <b>1050</b> is operatively coupled to the host device <b>1060</b> in step <b>1010</b>. If the secure element <b>1050</b> does not have a secure element public key P<sub>SE </sub>prior to step <b>1010</b>, the secure element <b>1050</b> creates the secure element public key P<sub>SE </sub>using the secure element private key n<sub>SE </sub>in step <b>1003</b>. The host device <b>1060</b> reads the secure element public key P<sub>SE </sub>from the secure element <b>1050</b> in step <b>1015</b>. The host device <b>1060</b> generates host key information HK<sub>SE </sub>using the host device private key n<sub>HD </sub>and the secure element public key P<sub>SE </sub>in step <b>1017</b> and stores the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot <b>66</b> of the host device <b>1060</b> in step <b>1018</b>. After the host key information HK<sub>SE </sub>has been installed in the HD-HK<sub>SE </sub>slot <b>66</b> of the host device <b>1060</b>, the host device private key n<sub>HD </sub>and the secure element public key P<sub>SE </sub>are optionally deleted in step <b>1019</b> to further protect the anonymity of the host key information HK<sub>SE</sub>. For example the binding process stored in the system operational code <b>1064</b> may be atomic and delete all key material as soon as it is used.</p><p id="p-0127" num="0126">If the host key information HK<sub>SE </sub>was not stored in the secure element <b>1050</b> prior to step <b>1010</b>, the secure element <b>1050</b> may create the host key information using the secure element private key n<sub>SE </sub>and the host device public key P<sub>HD </sub>in step <b>1013</b> and store the host key information HK<sub>SE </sub>in the SE-HK<sub>SE </sub>slot <b>56</b> of the secure element <b>1050</b> in step <b>1014</b>. The host device <b>1060</b> may create the host device public key P<sub>HD </sub>internally using the host device private key n<sub>HD </sub>in step <b>1035</b>. The host device <b>1060</b> may send the host device public key P<sub>HD </sub>to the secure element <b>1050</b> in step <b>1036</b> at some time after step <b>1010</b>.</p><p id="p-0128" num="0127">Once the host key information HK<sub>SE </sub>is stored in both the SE-HK<sub>SE </sub>slot <b>56</b> and the HD-HK<sub>SE </sub>slot <b>66</b>, the secure element <b>1050</b> and the host device <b>1060</b> are cryptographically bound. The host device <b>1060</b> uses the host key information HK<sub>SE </sub>stored in the HD-HK<sub>SE </sub>slot <b>66</b> to read the wrapped proprietary information key WK<sub>PI </sub>from the secure element <b>1050</b> in step <b>431</b> and instruct the secure element <b>1050</b> to unwrap the wrapped proprietary information key WK<sub>PI </sub>to generate the proprietary information key K<sub>PI </sub>in step <b>432</b>. The proprietary information key K<sub>PI </sub>is then provided to the host device <b>1060</b> in step <b>433</b>. In step <b>434</b>, the host device <b>1060</b> uses the proprietary information key K<sub>PI </sub>to decrypt the encrypted proprietary information CPI and generate the proprietary information PI.</p><p id="p-0129" num="0128">As previously noted, the methods and schematic diagrams of <figref idref="DRAWINGS">FIGS. <b>8</b>-<b>10</b></figref> may be specific implementations of the methods and schematic diagrams of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>4</b></figref>. For example, the secure element public key P<sub>SE </sub>may be a specific implementation of the binding information B<sub>SE</sub>. Additionally, the secure element private key n<sub>SE </sub>and the host device private key n<sub>HD </sub>may be specific implementations of the first secret key SK<sub>1 </sub>and the second secret key SK<sub>2 </sub>respectively.</p><p id="p-0130" num="0129">Example embodiments of the invention are summarized here. Other embodiments can also be understood from the entirety of the specification as well as the claims filed herein.</p><p id="p-0131" num="0130">Example 1. A method of cryptographically binding a secure element to a host device (HD), the method including: storing host key information HK<sub>SE </sub>in an SE-HK<sub>SE </sub>slot of the secure element; at a first location, storing binding information B<sub>SE </sub>in secure memory of the secure element, where the binding information B<sub>SE </sub>is cryptographically correlated with the host key information HK<sub>SE</sub>; at a second location remote to the first location, storing a second secret key SK<sub>2 </sub>within system operational code stored in protected memory of the host device, where the second secret key SK<sub>2 </sub>is cryptographically correlated with the host key information HK<sub>SE</sub>; and at a third location, after storing the binding information B<sub>SE</sub>, and after storing the second secret key SK<sub>2</sub>, operationally coupling the secure element to the host device, reading, by the host device, the binding information B<sub>SE </sub>from the secure element, generating, by the host device, the host key information HK<sub>SE </sub>using the binding information B<sub>SE </sub>and the second secret key SK<sub>2</sub>, and storing, by the host device, the host key information HK<sub>SE </sub>in an HD-HK<sub>SE </sub>slot of the host device, where the secure element and the host device are collocated at the third location, and where the third location is remote to both the first location and the second location.</p><p id="p-0132" num="0131">Example 2. The method of example 1, where: operationally coupling the secure element to the host device includes electrically coupling the secure element to the host device using a data bus; and reading the binding information B<sub>SE </sub>from the secure element includes transmitting the binding information B<sub>SE </sub>from the secure element to the host device through the data bus.</p><p id="p-0133" num="0132">Example 3. The method of one of examples 1 and 2, further including: deleting, by the host device, the second secret key SK<sub>2 </sub>after storing the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot.</p><p id="p-0134" num="0133">Example 4. The method of one of examples 1 to 3, where: the binding information B<sub>SE </sub>includes encrypted host key information CHK<sub>SE</sub>; the encrypted host key information CHK<sub>SE </sub>is encrypted using a symmetric-key cryptographic algorithm; and storing the host key information HK<sub>SE </sub>in the SE-HK<sub>SE </sub>slot of the secure element includes storing the host key information HK<sub>SE </sub>in the secure element at the first location.</p><p id="p-0135" num="0134">Example 5. The method of one of examples 1 to 3, where: the binding information B<sub>SE </sub>is a secure element public key P<sub>SE</sub>; the second secret key SK<sub>2 </sub>is a host device private key n<sub>HD</sub>; and generating the host key information HK<sub>SE </sub>includes creating, by the host device, the host key information HK<sub>SE </sub>using the secure element public key P<sub>SE </sub>and the host device private key n<sub>HD</sub>.</p><p id="p-0136" num="0135">Example 6. The method of one of examples 1 to 3, further including: at the first location, storing the first secret key SK<sub>1 </sub>in the secure memory of the secure element, where the first secret key SK<sub>1 </sub>is a secure element private key n<sub>SE</sub>; at the third location and after operationally coupling the secure element to the host device sending, by the host device, a host device public key P<sub>HD </sub>to the secure element, and creating, by the secure element, the host key information HK<sub>SE </sub>using the host device public key P<sub>HD </sub>and the secure element private key n<sub>SE</sub>; and where storing the host key information HK<sub>SE </sub>in the SE-HK<sub>SE </sub>slot of the secure element includes storing the host key information HK<sub>SE </sub>at the third location after creating the host key information HK<sub>SE </sub>using the host device public key P<sub>HD </sub>and the secure element private key n<sub>SE</sub>.</p><p id="p-0137" num="0136">Example 7. The method of one of examples 1 to 6, further including: generating, by a first hardware security module HSM<sub>SE </sub>at the first location, the first secret key SK<sub>1</sub>; generating, by a second hardware security module HSM<sub>HD </sub>at the second location, the second secret key SK<sub>2</sub>; and where steps performed at the third location are performed without using a hardware security module.</p><p id="p-0138" num="0137">Example 8. The method of one of examples 1 to 7, further including: storing a secure-backup-data file in secure memory of the secure element, where the secure-backup-data file includes encrypted host key backup information usable to recover host devices for which the host key information HK<sub>SE </sub>stored in the HD-HK<sub>SE </sub>slot of the host device has become corrupted.</p><p id="p-0139" num="0138">Example 9. The method of one of examples 1 to 8, further including: at the third location after operationally coupling the secure element and the host device and before reading the binding information B<sub>SE</sub>, unlocking the secure element using a batch password.</p><p id="p-0140" num="0139">Example 10. The method of one of examples 1 to 9, further including: at the first location after storing the host key information HK<sub>SE </sub>in the SE-HK<sub>SE </sub>slot of the secure element and before operationally coupling the secure element to the host device, wrapping a proprietary information key K<sub>PI </sub>to form a wrapped proprietary information key WK<sub>PI</sub>, and storing the wrapped proprietary information key WK<sub>PI </sub>in the secure memory of the secure element; loading encrypted proprietary information into the host device; and at the third location after storing the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot of the host device, reading the wrapped proprietary information key WK<sub>PI </sub>from the secure element, instructing, by the host device using the host key information HK<sub>SE </sub>stored in the HD-HK<sub>SE </sub>slot of the host device, the secure element to unwrap the wrapped proprietary information key WK<sub>PI </sub>and provide the proprietary information key K<sub>PI </sub>to the host device, and decrypting the encrypted proprietary information using the proprietary information key K<sub>PI</sub>.</p><p id="p-0141" num="0140">Example 11. The method of one of examples 1 to 10, further including: at the first location and before operationally coupling the secure element to the host device, preinstalling a wrapped license key K<sub>1 </sub>into the secure memory of the secure element, the wrapped license key K<sub>1 </sub>corresponding to proprietary executable computer code; and at the third location and after storing the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot of the host device, using, by the host device, the secure element as a hardware license to verify permission to install the proprietary executable computer code by unwrapping the wrapped license key K<sub>1 </sub>using the host key information HK<sub>SE</sub>, and installing, by the host device, the proprietary executable computer code in the host device.</p><p id="p-0142" num="0141">Example 12. The method of example 11, where the proprietary executable computer code is proprietary firmware.</p><p id="p-0143" num="0142">Example 13. The method of example 11, further including: after using the secure element as the hardware license, decrementing a counter of the secure element, where the counter tracks a quantity of installations of the proprietary executable computer code, and where the secure element is configured to disallow installation of the proprietary executable computer code when the counter is equal to zero.</p><p id="p-0144" num="0143">Example 14. A method of cryptographically aligning a secure element with a host device, the method including: generating a secure element-diversified key K<sub>SE </sub>as a function of a master key K<sub>M </sub>and a secure element unique identifier UID<sub>SE</sub>; encrypting host key information HK<sub>SE </sub>using the secure element-diversified key K<sub>SE </sub>to generate encrypted host key information CHK<sub>SE</sub>, where the host key information HK<sub>SE </sub>uniquely corresponds to the secure element; storing the host key information HK<sub>SE </sub>in a SE-HK<sub>SE </sub>slot of the secure element; storing the encrypted host key information CHK<sub>SE </sub>in secure memory of the secure element; and obfuscating the master key K<sub>M </sub>using a host device unique identifier UID<sub>HD </sub>to generate a host device-obfuscated key K<sub>HD </sub>within system operational code stored in protected memory of the host device.</p><p id="p-0145" num="0144">Example 15. The method of example 14, where the host key information HK<sub>SE </sub>includes a host message authentication code (MAC) key and a host cipher key.</p><p id="p-0146" num="0145">Example 16. The method of one of examples 14 and 15, where the secure element-diversified key K<sub>SE </sub>is an advanced encryption standard (AES) key.</p><p id="p-0147" num="0146">Example 17. The method of one of examples 14 to 16, where: generating the secure element-diversified key K<sub>SE </sub>further includes generating the secure element-diversified key K<sub>SE </sub>as a function of the master key K<sub>M</sub>, the secure element unique identifier UID<sub>SE</sub>, and a batch password; and obfuscating the master key K<sub>M </sub>further includes obfuscating the master key K<sub>M </sub>using the host device unique identifier UID<sub>HD </sub>and the batch password.</p><p id="p-0148" num="0147">Example 18. The method of one of examples 14 to 17, further including: operationally coupling the secure element to the host device; and executing the system operational code by the host device, where executing the system operational code includes reading the encrypted host key information CHK<sub>SE </sub>and the secure element unique identifier UID<sub>SE </sub>from the secure element, reversing obfuscation of the host device-obfuscated key K<sub>HD </sub>to generate the master key K<sub>M</sub>, decrypting the encrypted host key information CHK<sub>SE </sub>using the master key K<sub>M </sub>and the secure element unique identifier UID<sub>SE </sub>to generate the host key information HK<sub>SE</sub>, and storing the host key information HK<sub>SE </sub>in an HD-HK<sub>SE </sub>slot of the host device.</p><p id="p-0149" num="0148">Example 19. The method of example 18, further including: after storing the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot of the secure element and before executing the system operational code, instructing the secure element to wrap a proprietary information key K<sub>PI </sub>to form a wrapped proprietary information key WK<sub>PI</sub>, and store the wrapped proprietary information key WK<sub>PI </sub>in the secure memory of the secure element; sending encrypted proprietary information to the host device; and where executing the system operational code further includes reading the wrapped proprietary information key WK<sub>PI </sub>from the secure element, using the host key information HK<sub>SE </sub>stored in the HD-HK<sub>SE </sub>slot of the host device, instructing the secure element to e the wrapped proprietary information key WK<sub>PI </sub>and provide the proprietary information key K<sub>PI </sub>to the host device, and decrypting the encrypted proprietary information using the proprietary information key KIM</p><p id="p-0150" num="0149">Example 20. The method of example 19, where the encrypted proprietary information includes firmware to be installed on the host device.</p><p id="p-0151" num="0150">Example 21. The method of one of examples 18 and 19, further including: before executing the system operational code, sending an initiate command to the host device triggering boot-up of the system operational code, where the initiate command includes a batch password; and where executing the system operational code further includes unlocking the secure element using the batch password.</p><p id="p-0152" num="0151">Example 22. The method of one of examples 18 to 21, further including: after storing the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot of the host device, deleting the master key K<sub>M </sub>and the host device-obfuscated key K<sub>HD </sub>from the host device.</p><p id="p-0153" num="0152">Example 23. A method of cryptographically binding a secure element to a host device, the method including: storing a secure element private key n<sub>SE </sub>in secure memory of the secure element; creating a secure element public key P<sub>SE </sub>using the secure element private key n<sub>SE</sub>; storing a host device private key n<sub>HD </sub>within system operational code stored in protected memory of the host device; operationally coupling the secure element and the host device; and executing the system operational code by the host device, where executing the system operational code includes reading the secure element public key P<sub>SE </sub>from the secure element, creating host key information HK<sub>SE </sub>using the host device private key n<sub>HD </sub>and the secure element public key P<sub>SE</sub>, and storing the host key information HK<sub>SE </sub>in a HD-HK<sub>SE </sub>slot of the host device.</p><p id="p-0154" num="0153">Example 24. The method of example 23, further including: before operationally coupling the secure element to the host device, creating a host device public key P<sub>HD </sub>using the host device private key n<sub>HD</sub>, creating the host key information HK<sub>SE </sub>using the secure element private key n<sub>SE </sub>and the host device private key n<sub>HD</sub>, and storing the host key information HK<sub>SE </sub>in a SE-HK<sub>SE </sub>slot of the secure element.</p><p id="p-0155" num="0154">Example 25. The method of example 24, where creating the host device public key P<sub>HD </sub>and creating the host key information HK<sub>SE </sub>using the secure element private key n<sub>SE </sub>and the host device private key n<sub>HD </sub>are performed by a hardware security module HSM<sub>SE</sub>.</p><p id="p-0156" num="0155">Example 26. The method of one of examples 23 to 25, further including: where executing the system operational code further includes creating a host device public key P<sub>HD </sub>using the host device private key n<sub>HD</sub>, and sending the host device public key P<sub>HD </sub>to the secure element; creating, by the secure element, the host key information HK<sub>SE </sub>using the secure element private key n<sub>SE </sub>and the host device public key P<sub>HD</sub>; and storing, by the secure element, the host key information HK<sub>SE </sub>in a SE-HK<sub>SE </sub>slot of the secure element.</p><p id="p-0157" num="0156">Example 27. The method of one of examples 23 to 26, further including: after storing the host key information HK<sub>SE </sub>in the HD-HK<sub>SE </sub>slot of the host device, deleting the host device private key n<sub>HD </sub>from the host device.</p><p id="p-0158" num="0157">Example 28. The method of one of examples 23 to 27, where: the secure element private key n<sub>SE </sub>and the secure element public key P<sub>SE </sub>are a first elliptic-curve Diffie-Hellman (ECDH) key pair generated according to a predetermined set of elliptic-curve cryptography (ECC) parameters.</p><p id="p-0159" num="0158">Example 29. The method of example 28, further including: creating a host device public key P<sub>HD </sub>using the host device private key n<sub>HD</sub>, where the host device private key n<sub>HD </sub>and the host device public key P<sub>HD </sub>are a second ECDH key pair generated according to the predetermined set of ECC parameters; creating, by the secure element, the host key information HK<sub>SE </sub>using the secure element private key n<sub>SE </sub>and the host device public key P<sub>HD</sub>; and storing, by the secure element, the host key information HK<sub>SE </sub>in a SE-HK<sub>SE </sub>slot of the secure element.</p><p id="p-0160" num="0159">Example 30. The method of example 28, where the predetermined set of ECC parameters defines a prime curve over Z<sub>p</sub>.</p><p id="p-0161" num="0160">Example 31. The method of example 28, where the predetermined set of ECC parameters defines a binary curve over GF(2<sup>m</sup>).</p><p id="p-0162" num="0161">Example 32. The method of one of examples 23 to 31, further including: generating, by a secure element hardware security module, a secure element certificate; storing the secure element certificate in the secure element; generating, by a host device hardware security module, a host device certificate; storing the host device certificate in the host device; and after operationally coupling the secure element and the host device, verifying, by the host device, that the secure element is authorized to pair with the host device by validating the secure element certificate using a secure element public key, and verifying, by the secure element, that the host device is authorized to pair with the secure element by validating the host device certificate using a host device public key.</p><p id="p-0163" num="0162">Example 33. The method of one of examples 23 to 32, further including: generating the secure element private key n<sub>SE </sub>as a function of a secure element unique identifier UID<sub>SE</sub>.</p><p id="p-0164" num="0163">Example 34. The method of one of examples 23 to 33, further including: generating the host device private key n<sub>HD </sub>as a function of a host device unique identifier UID<sub>HD</sub>.</p><p id="p-0165" num="0164">Example 35. The method of one of examples 23 to 34, further including: before executing the system operational code, sending an initiate command to the host device triggering boot-up of the system operational code, where the initiate command includes a batch password; and where executing the system operational code further includes unlocking the secure element using the batch password.</p><p id="p-0166" num="0165">While this invention has been described with reference to illustrative embodiments, this description is not intended to be construed in a limiting sense. Various modifications and combinations of the illustrative embodiments, as well as other embodiments of the invention, will be apparent to persons skilled in the art upon reference to the description. For example, one or more of the embodiments of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>10</b></figref> may be combined in further embodiments. It is therefore intended that the appended claims encompass any such modifications or embodiments.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A secure element (SE) device configured to be cryptographically bound to a host device (HD), the secure element device comprising:<claim-text>an SE-HK<sub>SE </sub>slot configured to store host key information HK<sub>SE </sub>allowing only the host device to control the secure element;</claim-text><claim-text>a secure memory comprising prevention measures impeding unauthorized entities from obtaining information from the secure memory, the secure memory storing binding information B<sub>SE </sub>that is cryptographically correlated with the host key information HK<sub>SE</sub>;</claim-text><claim-text>limited functionality allowing the binding information B<sub>SE </sub>to be read from the secure memory by the host device during a binding process, the host device generating the host key information HK<sub>SE </sub>using the binding information B<sub>SE </sub>read from the secure element and a second secret key SK<sub>2</sub>; and</claim-text><claim-text>general functionality only accessible to the host device using the generated host key information HK<sub>SE</sub>.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The secure element device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the secure element device is configured to store the binding information B<sub>SE </sub>during an initialization process prior to and geographically remote from the binding process.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The secure element device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the secure element device is further configured to receive both the host key information HK<sub>SE </sub>and the binding information B<sub>SE </sub>from a hardware security module during the initialization process.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The secure element device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the secure element device is further configured to receive a first secret key SK<sub>1 </sub>generated by a hardware security module during the initialization process and store the first secret key SK<sub>1 </sub>in the secure memory.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The secure element device of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the secure element device is further configured to generate the host key information HK<sub>SE </sub>using the first secret key SK<sub>1 </sub>and store the host key information HK<sub>SE </sub>in the SE-HK<sub>SE </sub>slot during the binding process.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The secure element device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>a wrapped license key WK corresponding to proprietary executable computer code is stored in the secure memory prior to and geographically remote from the binding process; and</claim-text><claim-text>the general functionality only accessible to the host device using the generated host key information HK<sub>SE </sub>includes an instruction to unwrap the wrapped license key WK to generate a license key K so that the secure element device is used as a hardware license for the proprietary executable computer code.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The secure element device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>a counter configured to decrement after the secure element device is used as the hardware license, the secure element device being configured to disallow installation of the proprietary executable computer code when the counter is equal to zero.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A host device (HD) configured to be cryptographically bound to a secure element (SE), the host device comprising:<claim-text>protected memory configured to be protected from readout and modification;</claim-text><claim-text>system operational code stored in the protected memory and comprising a second secret key SK<sub>2</sub>, the system operational code being configured to<claim-text>read binding information B<sub>SE </sub>during a binding process, and</claim-text><claim-text>generate host key information HK<sub>SE </sub>during the binding process using the binding information B<sub>SE </sub>and the second secret key SK<sub>2</sub>, the host key information HK<sub>SE </sub>allowing only the host device to control the secure element; and</claim-text></claim-text><claim-text>an HD-HK<sub>SE </sub>slot configured to store the host key information HK<sub>SE</sub>.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The host device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the host device is configured to have the second secret key SK<sub>2 </sub>installed in the system operational code during an initialization process prior to and geographically remote from the binding process.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The host device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the host device is further configured to<claim-text>store encrypted proprietary information CPI,</claim-text><claim-text>instruct the secure element, using the host key information HK<sub>SE </sub>generated during the binding process, to provide a proprietary information key K<sub>PI </sub>to the host device, and</claim-text><claim-text>decrypt the encrypted proprietary information CPI to generate proprietary information PI using the proprietary information key K<sub>PI</sub>.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The host device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the encrypted proprietary information CPI is received by the host device during an initialization process prior to and geographically remote from the binding process.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The host device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the encrypted proprietary information CPI is received by the host device during the binding process.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The host device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the encrypted proprietary information CPI is stored in the protected memory.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The host device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the proprietary information PI is proprietary executable computer code that is installed on the host device using the secure element as a hardware license.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A secure system comprising:<claim-text>a secure element (SE) comprising<claim-text>an SE-HK<sub>SE </sub>slot configured to store host key information HK<sub>SE </sub>allowing only a cryptographically bound host device to control the secure element,</claim-text><claim-text>a secure memory comprising prevention measures impeding unauthorized entities from obtaining information from the secure memory, the secure memory storing binding information B<sub>SE </sub>that is cryptographically correlated with the host key information HK<sub>SE</sub>,</claim-text><claim-text>limited functionality allowing the binding information B<sub>SE </sub>to be read from the secure memory by the host device, and</claim-text><claim-text>general functionality accessible only using the host key information HK<sub>SE</sub>; and</claim-text></claim-text><claim-text>a host device (HD) comprising<claim-text>protected memory configured to be protected from readout and modification,</claim-text><claim-text>system operational code stored in the protected memory and comprising a secret key SK, the system operational code being configured to read the binding information B<sub>SE </sub>during a binding process, and</claim-text><claim-text>an HD-HK<sub>SE </sub>slot configured to store the host key information HK<sub>SE </sub>cryptographically binding the host device and the secure element, the host key information HK<sub>SE </sub>being generated by the host device using the binding information B<sub>SE </sub>and the secret key SK.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The secure system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein:<claim-text>the secure element is configured to store the binding information B<sub>SE </sub>during an SE initialization process prior to and geographically remote from the binding process; and</claim-text><claim-text>the host device is configured to have the secret key SK installed in the system operational code during an HD initialization process prior to and geographically remote from both the binding process and the SE initialization process.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The secure system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein:<claim-text>a wrapped license key WK<sub>PI </sub>corresponding to proprietary executable computer code PI is stored in the secure memory prior to and geographically remote from the binding process;</claim-text><claim-text>the general functionality only accessible to the host device using the host key information HK<sub>SE </sub>includes an instruction to unwrap the wrapped license key WK<sub>PI </sub>to generate a license key K<sub>PI</sub>; and</claim-text><claim-text>the host device is further configured to<claim-text>store encrypted proprietary information CPI,</claim-text><claim-text>instruct the secure element, using the host key information HK<sub>SE </sub>generated during the binding process, to unwrap the wrapped license key WK<sub>PI </sub>and provide the license key K<sub>PI </sub>to the host device, and</claim-text><claim-text>decrypt the encrypted proprietary information CPI to install the proprietary executable computer code PI using the license key K<sub>PI </sub>so that the secure element is used as a hardware license for the proprietary executable computer code PI.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The secure system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein:<claim-text>the binding information B<sub>SE </sub>is a secure element public key P<sub>SE </sub>generated using a secure element private key n<sub>SE</sub>;</claim-text><claim-text>the secret key SK is a host device private key n<sub>HD </sub>used to generate a host device public key n<sub>HD</sub>; and</claim-text><claim-text>the host key information HK<sub>SE </sub>stored in the SE-HK<sub>SE </sub>slot of the secure element is generated using the secure element private key n<sub>SE </sub>and the host device public key n<sub>HD</sub>.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The secure system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the host key information HK<sub>SE </sub>stored in the SE-HK<sub>SE </sub>slot of the secure element is generated during an initialization process prior to and geographically remote from the binding process.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The secure system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the host key information HK<sub>SE </sub>stored in the SE-HK<sub>SE </sub>slot of the secure element is generated during the binding process.</claim-text></claim></claims></us-patent-application>