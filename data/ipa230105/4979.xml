<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004980A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004980</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940132</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>23</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>30</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>4016</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2379</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2365</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>30</main-group><subgroup>0185</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>2220</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Apparatus for Fraud Detection Rule Optimization</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16985773</doc-number><date>20200805</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11449870</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17940132</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Bottomline Technologies Ltd.</orgname><address><city>Or Yehuda</city><country>IL</country></address></addressbook><residence><country>IL</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Serfaty</last-name><first-name>Avital</first-name><address><city>Ramat Hasharon</city><country>IL</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Cohen</last-name><first-name>Shahar</first-name><address><city>Qiryat Ono</city><country>IL</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Mayer</last-name><first-name>Yulia</first-name><address><city>Fair Lawn</city><state>NJ</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Amitai</last-name><first-name>Dalit</first-name><address><city>Tennafly</city><state>NJ</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Bottomline Technologies Ltd.</orgname><role>03</role><address><city>Or Yehuda</city><state>TV</state><country>IL</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An improved method and apparatus for determining if a financial transaction is fraudulent is described. The apparatus in one embodiment collects transactions off of a rail using promiscuous listening techniques. The method uses linear programming algorithms to tune the rules used for making the determination. The tuning first simulates using historical data and then creates a matrix of the rules that are processed through the linear programming algorithm to solve for the variables in the rules. With the updated rules, a second simulation is performed to view the improvement in the performance. The updated rules are then used to evaluate the transactions for fraud.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="82.55mm" wi="158.75mm" file="US20230004980A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="243.16mm" wi="169.08mm" orientation="landscape" file="US20230004980A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="233.17mm" wi="123.53mm" file="US20230004980A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="219.96mm" wi="97.79mm" file="US20230004980A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="232.83mm" wi="179.24mm" file="US20230004980A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="248.75mm" wi="180.00mm" file="US20230004980A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">PRIOR APPLICATION</heading><p id="p-0002" num="0001">This application is a continuation of U.S. Pat. No. 11,449,870, &#x201c;Fraud Detection Rule Optimization&#x201d;, issued to the inventors on Sep. 20, 2022, filed on Aug. 5, 2020, as U.S. Pat. No. 16,985,773, said patent incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><heading id="h-0003" level="1">Technical Field</heading><p id="p-0003" num="0002">The apparatuses and methods described herein generally relate to fraud detection, in particular to the use of linear and non-linear programming techniques to detect financial fraud.</p><heading id="h-0004" level="1">Description of the Related Art</heading><p id="p-0004" num="0003">The earliest history of fraud is found in Greek literature, and history includes numerous schemes and tactics for taking money from others using deceptive means. One article in Forbes Magazine set the amount of money lost to fraud at $190 billion per year in 2009, with banks absorbing $11 Billion, consumers taking a $4.8 Billion hit, and merchants absorbing the rest. The sheer magnitude of the money lost to fraud has forced banks to place an increasing emphasis on fraud detection.</p><p id="p-0005" num="0004">Today, banking fraud is a sophisticated global business. Cybercriminals are organized, coordinated, and highly specialized, thus creating a powerful network that is, in many ways, a significantly more efficient ecosystem than the banking industry. They continually reinvest their financial gains to advance technology and methods used to defeat the layers of security financial institutions put in place.</p><p id="p-0006" num="0005">The pace of fraud innovation by fraudsters and their ability to invest in attacking banks and credit unions far outweigh these institutions' abilities to invest in protecting themselves against rapidly evolving threats. Whether it's phishing scams, mobile malware, banking Trojans, Man-In-the-Browser schemes, or the many techniques for bypassing multi-factor authentication, threats span online banking, mobile banking, as well as the ACH and wire payments channels. The range and sophistication of the threats against which financial institutions must defend themselves continue to grow.</p><p id="p-0007" num="0006">The traditional approach to fraudulent activities is to manually analyze historical transactions looking for patterns or for transactions that are out of line with the norm. But these methods fail to prevent fraudulent activities, instead, they only serve to disclose what happened in the past. And the sheer volume of transactions prevents the review of more than a small sampling of the overall transaction set.</p><p id="p-0008" num="0007">There is a long-felt need to efficiently and automatically review and identify potentially fraudulent transactions in real-time as the transactions cross the payment rail. Recent software solutions analyze payments or financial transfers against a set of rules to determine a risk score. The risk score is compared to a threshold that determines whether the transaction is fraudulent. But these rules are simple and not verifiable against the reality of the actual transactions. Many of the thresholds are set based on rules of thumb rather than based on data. A method is needed to improve the rules set, to tune, and verify the set of rules to minimize false positives and false negatives.</p><p id="p-0009" num="0008">The present inventions overcome this shortcoming of the existing art.</p><heading id="h-0005" level="1">BRIEF SUMMARY OF THE INVENTIONS</heading><p id="p-0010" num="0009">An improved apparatus for detecting fraud is disclosed herein. The apparatus is made up of a p-monitor, a rail, the p-monitor connected to the rail, and a data store connected to the p-monitor, the data store containing historical data, and a draft rule set. The p-monitor creates a matrix of each rule in the draft rule set for each historical transaction in the historical data and solves the matrix for each rule score using linear programming, said rule scores copied into a model rule set. The p-monitor also monitors the rail for a new transaction, applying data from the new transaction to the model rule set to produce a new transaction score, and if the new transaction score exceeds a threshold, the p-monitor indicates that the new transaction is fraudulent.</p><p id="p-0011" num="0010">In some embodiments, the matrix is solved for a constant in one of the rules. If the p-monitor determines that the new transaction is fraudulent, the p-monitor could notify a fraud monitor that the new transaction is fraudulent, and/or the p-monitor could notify a bank that the new transaction is fraudulent. The p-monitor could request that the bank block the new transaction.</p><p id="p-0012" num="0011">In some embodiments, the p-monitor loops through each transaction in the historical data, calculating a transaction score for each historical transaction that is a sum of the rule scores for that historical transaction and comparing that score with the threshold to make a fraud determination, said fraud determination compared with an actual determination associated with the historical transaction to create a transaction accuracy score, the transaction accuracy score summed to determine a model rule set quality metric. The model rule set quality metric could be compared to an expected quality metric, and only copy the rule scores if the model rule set quality metric exceeds the expected quality metric.</p><p id="p-0013" num="0012">The p-monitor could be connected to the rail through banking software, the banking software calling the p-monitor, and passing the new transaction to the p-monitor. Or the p-monitor could receive the new transaction in a message directed, on the rail, specifically to the p-monitor for processing. In still another embodiment, the p-monitor monitors the rail for the new transaction intended for another network device.</p><p id="p-0014" num="0013">A method of detecting a fraudulent transaction on a rail is also described. The method is made up of the steps of (1) creating a matrix of each rule in a draft rule set for each historical transaction in historical data stored in a data store; (2) solving the matrix for each rule score using linear programming; (3) copying said rule scores into a model rule set; (4) monitoring the rail for a new transaction; (5) applying data from the new transaction to the model rule set; (6) producing a new transaction score from the data and the model rule set; and (7) indicating that the new transaction is fraudulent if the new transaction score exceeds a threshold.</p><p id="p-0015" num="0014">In some embodiments, the matrix is solved for a constant in one of the rules. The method could also include the step of (8) notifying a fraud monitor that the new transaction is fraudulent. In some embodiments the step of (9) notifying a bank that the new transaction is fraudulent and maybe the step of (10) requesting that the bank block the new transaction.</p><p id="p-0016" num="0015">The method could also include the steps of (2a) looping through each transaction in the historical data; (2b) calculating a transaction score for each historical transaction that is a sum of the rule scores for that historical transaction; (2c) comparing the sum of rule scores with the threshold to make a fraud determination, said fraud determination compared with an actual determination associated with the historical transaction to create a transaction accuracy score; and (2d) summing said transaction accuracy score to determine a model rule set quality metric. Optionally the method could also include the modification of step (3) with (3a) comparing the model rule set quality metric to an expected quality metric, and only loading the rule scores if the model rule set quality metric exceeds the expected quality metric.</p><p id="p-0017" num="0016">Step (4) could be modified as follows (4a) the monitoring of the rail is indirect through banking software. Or step (4) could be modified with (4b) the monitoring of the rail for the new transaction receives transactions intended for another network device.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of the components of the present system.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow chart of the rules optimization process.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow chart of the p-monitor rail monitoring process.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram of the equipment used in one embodiment.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an x-y chart of the linear analysis of fraud detection.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an x-y chart showing linear programming for fraud detection.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DETAILED DESCRIPTION</heading><p id="p-0024" num="0023">The present disclosure is now described in detail with reference to the drawings. In the drawings, each element with a reference number is similar to other elements with the same reference number independent of any letter designation following the reference number. In the text, a reference number with a specific letter designation following the reference number refers to the specific element with the number and letter designation and a reference number without a specific letter designation refers to all elements with the same reference number independent of any letter designation following the reference number in the drawings.</p><p id="p-0025" num="0024">The present inventions propose an improved solution to the monitoring of banking and financial transactions for fraudulent activities. These techniques could also be used for financial account openings, analysis of payments and invoices, in the monitoring of pharmaceutical prescriptions for illegal distributions of controlled substances, in government monitoring of various activities, such as import and exports for tariff evasions or tax avoidance, for example, or for other uses. In each case, these techniques solve the problems of improving and tuning rule sets used in the monitoring of activities.</p><p id="p-0026" num="0025">Looking at <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a system diagram is presented showing the fraud monitoring environment. A database holding the historical data <b>101</b> contains all of the transaction records for a period of time. This timeframe could be anywhere from hours to decades of data, depending on the velocity of the transactions, but typically is a unit of months, perhaps 6 or 12 months of data. In some embodiments, each transaction seen on the rail <b>106</b> is added to the historical data <b>101</b>, either through another process in the system or through the p-monitor software <b>105</b>. In some embodiments, the historical data <b>101</b> is further edited to add information or to remove outliers. Such added information may include actual fraud determinations by a fraud investigation team. For instance, if a transaction is flagged by the p-monitor software <b>105</b> as fraudulent, it is sent to the fraud monitor <b>107</b> for analysis by the fraud investigation team. This team investigates the fraud and makes the ultimate decision on whether this is a false positive or a true positive. This information may be then added to the transaction record in the historical data <b>101</b>. Similarly, if a transaction is not identified as fraud by the p-monitor software <b>105</b>, but the fraud is discovered later, by a customer or another financial institution perhaps, then the fraud investigation team may update the transaction record in the historical data <b>101</b> to reflect the false negative. These false positive and false negative records are particularly relevant to the tuning of the model rule set <b>104</b> in the next round of tuning.</p><p id="p-0027" num="0026">The objective of the process is to optimize the assignments of scores to the different incidents that the rule's engine creates. The rule sets <b>102</b>, <b>104</b> have multiple templates, where the templates might have parameters and thresholds. Different thresholds may create different incidents. Each incident has a configured score. If the sum of scores due to the created incidents accedes a pre-defined threshold, a fraud alert is created.</p><p id="p-0028" num="0027">In some embodiments, the historical data <b>101</b> is analyzed to produce statistics on the data. For instance, a count of the number of transactions, the sum of the amounts of the transactions, the number of transactions sent to blacklist destinations, etc. for a particular sending customer may be calculated and maintained as new transactions are added.</p><p id="p-0029" num="0028">A draft rule set <b>102</b> is also stored in a database. The draft rule set <b>102</b> is a set of rules that may indicate fraudulent behavior when applied to a transaction. The draft rule set <b>102</b> could originate with the supplier of the tuning software <b>103</b> and p-monitor software <b>105</b>, and may be refined by the financial institution operating the software. If the software has been installed for a period of time, the draft rule set <b>102</b> may be the result of one or more tuning iterations in the past that have refined the original rule set.</p><p id="p-0030" num="0029">In the present embodiment, each incident (i) generates a score X<sub>i</sub>. The scores for each incident for a given transaction are summed(&#x3a3;<sub>i=0</sub><sup>n</sup>X<sub>i</sub>), where n is the number of potential incidents, which might be produced by the rule set <b>102</b>, <b>104</b>, and if the sum is greater than a threshold (T), the then transaction is deemed fraudulent.</p><p id="p-0031" num="0030">The rule set may be in the form of a human-readable description of the rules, a set of mathematical formulas, or may be in the form of a matrix of parameters for the rule set. In one example of a rule, the rule may read &#x201c;WPF0201 Customer carries out a payment transaction to an account in a blacklist: If the customer's blacklist transaction count&#x3e;0 and the transaction amount is &#x3e;0, then score the transaction as 1000&#x201d;. In this example, natural language processing is used to translate the formula into computer-usable formats. In a second example of a rule, the rule could be written &#x201c;WPF0201: score=if (customer.BlackListCount&#x3e;0) and (TransactionAmount&#x3e;0) then 1000 else 0&#x201d;. In still a third embodiment, the following matrix could be used:</p><p id="p-0032" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="280pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Matrix Rule Set</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="70pt" align="center"/><colspec colname="3" colwidth="42pt" align="center"/><colspec colname="4" colwidth="42pt" align="center"/><colspec colname="5" colwidth="28pt" align="center"/><colspec colname="6" colwidth="35pt" align="center"/><colspec colname="7" colwidth="21pt" align="center"/><tbody valign="top"><row><entry/><entry/><entry/><entry>Rejected</entry><entry/><entry/><entry/></row><row><entry/><entry>Transaction</entry><entry>Transaction</entry><entry>Transaction</entry><entry>New</entry><entry>Blacklist</entry></row><row><entry>Rule</entry><entry>Amount</entry><entry>Count</entry><entry>Count</entry><entry>Payees</entry><entry>Count</entry><entry>Score</entry></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="1" colwidth="42pt" align="left"/><colspec colname="2" colwidth="70pt" align="char" char="."/><colspec colname="3" colwidth="42pt" align="center"/><colspec colname="4" colwidth="42pt" align="center"/><colspec colname="5" colwidth="28pt" align="center"/><colspec colname="6" colwidth="35pt" align="center"/><colspec colname="7" colwidth="21pt" align="char" char="."/><tbody valign="top"><row><entry>WPF0201</entry><entry>&#x3e;0</entry><entry/><entry/><entry/><entry>&#x3e;0</entry><entry>1000</entry></row><row><entry>WPF0208A</entry><entry>&#x3e;50,000 and &#x2264;80,000</entry><entry/><entry/><entry/><entry/><entry>50</entry></row><row><entry>WPF0208B</entry><entry>&#x3e;80,000</entry><entry/><entry/><entry/><entry/><entry>80</entry></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0033" num="0031">The tuning software <b>103</b> transforms the draft rule set <b>102</b> into the model rule set <b>104</b> by using the historical data <b>101</b> to tune the parameters and score for each rule in the ruleset. This transformation is performed using linear programming in the present embodiment. In other embodiments, non-linear programming is used, if there is a need for non-linear (curves, exponential, logarithmic, quadratic, etc) rules.</p><p id="p-0034" num="0032">The object of the tuning is to optimize the score value for each incident and to optimize the parameters such that the rules generate the smallest overall score for a non-fraudulent transaction without allowing a false-negative result. At the same time, the tuning is minimizing false-positive results.</p><p id="p-0035" num="0033">Essentially, this solves for each X<sub>i </sub>across a large number of transactions in the historical data <b>101</b>. Let X<sub>i </sub>be the score that should be assigned to incident i (i=1, . . . , n), let C<sub>ji </sub>be the Boolean indicator for the occurrence of incident i in transaction j, and let T be a threshold score (so that according to the rule's engine, if the sum of scores by the incidents exceeds T, the transaction is a fraud). For instance, for this example rule, if the transaction is going to a blacklisted country, then the value of the incident X<sub>i </sub>is added to the sum. If it is not going to a blacklisted country, then 0 is added to the sum.</p><p id="p-0036" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mrow>  <mi>min</mi>  <mo>&#x2062;</mo>  <mrow>   <mo>{</mo>   <mrow>    <mover>     <munder>      <mo>&#x2211;</mo>      <mrow>       <mi>i</mi>       <mo>=</mo>       <mn>1</mn>      </mrow>     </munder>     <mi>n</mi>    </mover>    <msub>     <mi>X</mi>     <mi>i</mi>    </msub>   </mrow>   <mo>}</mo>  </mrow> </mrow></math></maths></p><p id="p-0037" num="0000">Such that</p><p id="p-0038" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x3a3;<sub>i=1</sub><sup>n</sup><i>C</i><sub>ji</sub><i>&#xb7;X</i><sub>i</sub><i>&#x2265;T </i>for all transactions <i>j </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0039" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>X</i><sub>i</sub>&#x2265;0 for all <i>i </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0040" num="0034">The tuning software <b>103</b> is described in more detail in the discussion of <figref idref="DRAWINGS">FIG. <b>2</b></figref> below. The tuning software <b>103</b> outputs a model rule set <b>104</b> that is tuned with the historical data <b>101</b>.</p><p id="p-0041" num="0035">The model rule set <b>104</b> is a set of rules that may indicate fraudulent behavior when applied to a transaction. The model rule set <b>104</b> will use similar formats to the draft rule set <b>102</b>, in most embodiments. In some other embodiments, the model rule set <b>104</b> will be in a machine-readable format, perhaps the matrix format in Table 1 or machine code that is readily executable by a central processing unit <b>404</b> in the p-monitor <b>406</b>. The model rule set <b>104</b> is used by the p-monitor software <b>105</b> to analyze each transaction seen on the rail <b>106</b>.</p><p id="p-0042" num="0036">The p-monitor software <b>105</b>, in some embodiments, listens to the transactions on the rail <b>106</b> in promiscuous listener mode, retrieving all transactions that cross the rail <b>106</b>. When a transaction is seen, it is stored in the historical data <b>101</b> and the transaction is compared to the model rule set <b>104</b> to determine if the transaction is fraudulent. The details of the p-monitor software <b>105</b> are found below in conjunction with the discussion of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. In another embodiment, a bank, a financial institution, or another software package could collect the transactions and send them to the p-monitor software <b>105</b>. For instance, a bank <b>108</b> may run banking software that processes each transaction that the bank <b>108</b> receives on the rail <b>106</b>. The banking software may send each transaction to the p-monitor software before processing the transaction to see if the transaction is fraudulent.</p><p id="p-0043" num="0037">The rail <b>106</b> is a payment or banking rail used to connect banks, financial institutions, or their customers. It is a high-security network that uses encryption and limits access either physically or virtually (VPN). The physical implementation of the rail <b>106</b> could be the internet, a local area network, a wireless network, a combination of the above, or any other networking technology.</p><p id="p-0044" num="0038">If the p-monitor software <b>105</b> determines that a transaction is fraudulent, then the p-monitor software, in some embodiments, notifies the bank <b>108</b> (or financial institution or the customer) to hold the transaction. A notification is also sent to the fraud monitor <b>107</b> for investigation by the fraud investigation team. The fraud investigation team then will review the transaction and the historical data to decide on whether to cancel the transaction. The fraud investigation team will also mark the transaction as actual fraud, false-positive, or justified. A justified determination is when the transaction appears fraudulent and is not fraudulent, but the fraud investigation team wants to review this type of transaction. When tuning in the future, the justified transactions are considered fraudulent.</p><p id="p-0045" num="0039">The fraud monitor <b>107</b> could be a personal computer, laptop, smartphone, tablet, smartwatch, or similar device connected directly or indirectly through a network to the p-monitor <b>406</b>. The fraud monitor <b>107</b> has the interface between the p-monitor software and the fraud investigation team.</p><p id="p-0046" num="0040"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows the details of the tuning software <b>103</b>. The start of the rule tuning <b>201</b> process begins with defining rules <b>202</b> and defining parameters <b>203</b>. The initial rule set could come from the software vendor and then be modified by the customer. In other instances of the rule tuning process, the rules and parameters are defined by a previous iteration through this software. Each rule may create one or more incidents and might have several parameters that affect its operation. Each incident has a score value. For example, rule WPF0208 covers incidents that are generated when a customer carries out excessive payment transactions to a country where he has never made any transactions to that country before. The relevant parameters might be the lookback period (how far back do we check to see if a transaction has ever been sent to that country), the vesting period, the minimum learning period, the minimum number of transactions, the minimal total amount, the countries active list, and the set of scores. Different incidents might be created by the rule, depending for example on the payment amount. Transactions of large amounts might generate one incident, while transactions with a lower amount might generate another incident.</p><p id="p-0047" num="0041">Each parameter might have static values (for example, the lookback period may always be 180 days, and not tunable), which means that it does not participate in the optimization, or it can receive a set of values. Each such unique value is responsible for a single incident. The set of values might come from a per-customer calculation. For example, the minimum total amount might receive [V1, V2, V3] where V1 is the 50 percentile of the transaction amount of customer accounts' transactions, V2 is the 75 percentile, and V3 is the 90 percentile. The number of unique values shouldn't be too large, and it is recommended to span a range of values only to the numeric parameters (e.g., transaction amount). Each unique combination of values to the different parameters define a different incident for the rule. For example, WPF0208_V1 might be defined as the incident that is generated by rule WPF0208 when the transaction amount parameter receives V1 (assuming that all the other parameters in this rule are static).</p><p id="p-0048" num="0042">Once the rules, parameters, and scores are set, a simulation <b>204</b> is run on the draft rule set <b>102</b> using the historical data <b>101</b>, creating a table with all of the rules and transactions. The resulting table may look similar to Table 2.</p><p id="p-0049" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="315pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Simulation result matrix</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="9"><colspec colname="1" colwidth="42pt" align="center"/><colspec colname="2" colwidth="35pt" align="center"/><colspec colname="3" colwidth="42pt" align="center"/><colspec colname="4" colwidth="42pt" align="center"/><colspec colname="5" colwidth="35pt" align="center"/><colspec colname="6" colwidth="35pt" align="center"/><colspec colname="7" colwidth="21pt" align="center"/><colspec colname="8" colwidth="35pt" align="center"/><colspec colname="9" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>Transaction</entry><entry>WPF0201</entry><entry>WPF0208A</entry><entry>WPF0208B</entry><entry>WPF0209</entry><entry>WPF0211</entry><entry/><entry>Calculated</entry><entry>Actual</entry></row><row><entry>ID</entry><entry>Incident</entry><entry>Incident</entry><entry>Incident</entry><entry>Incident</entry><entry>Incident</entry><entry>Score</entry><entry>Fraud</entry><entry>Fraud</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="9"><colspec colname="1" colwidth="42pt" align="center"/><colspec colname="2" colwidth="35pt" align="char" char="."/><colspec colname="3" colwidth="42pt" align="char" char="."/><colspec colname="4" colwidth="42pt" align="char" char="."/><colspec colname="5" colwidth="35pt" align="char" char="."/><colspec colname="6" colwidth="35pt" align="char" char="."/><colspec colname="7" colwidth="21pt" align="char" char="."/><colspec colname="8" colwidth="35pt" align="center"/><colspec colname="9" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>10201</entry><entry>0</entry><entry>50</entry><entry>0</entry><entry>0</entry><entry>1000</entry><entry>1050</entry><entry>YES</entry><entry>NO</entry></row><row><entry>10202</entry><entry>1000</entry><entry>0</entry><entry>80</entry><entry>0</entry><entry>0</entry><entry>1080</entry><entry>YES</entry><entry>YES</entry></row><row><entry>10215</entry><entry>0</entry><entry>0</entry><entry>0</entry><entry>0</entry><entry>0</entry><entry>0</entry><entry>NO</entry><entry>NO</entry></row><row><entry namest="1" nameend="9" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0050" num="0043">In Table 2, a subset of the transactions rules and incidents are listed, as the number of transactions could be in the millions and the number of incidents could number up to several hundred. The transaction ID comes from either the actual transaction number or from a unique identifier in the historical data <b>101</b>. The value for each cell is the score that is associated with the incident. For example, in transaction 10202, the customer is trying to send $85,000 and has sent money to a blacklist destination within the past 180 days. The result for rule WPF0201: score=if (customer.BlackListCount&#x3e;0) and (TransactionAmount&#x3e;0) then 1000 else 0 will be 1000, because of the blacklist history and the transaction amount is greater than 0. WPF0208A is 0 because the transaction amount is not between $50,000 and $80,000, and WPF0208B is 80 because the transaction is greater than $80,000 (rule WPF0208 produces an incident with a score of 50 if the transaction amount is over $50,000 and an incident with a score of 80 if over $80,000). The sum of 1000, 0, and 80 is 1080, the score for this transaction. Since the score is greater than T, the fraud threshold of 1000, we calculate that the transaction is a fraud. This matches the actual fraud for this transaction, so the model produces a true fraud. Transaction 10201 calculates 1050, over the fraud threshold T, so we calculate that it is fraudulent, but the actual determination is that the transaction is not fraudulent, so we have a False Positive. Once the simulation is complete, an accuracy metric is calculated by calculating the percentage of False Positives and False Negatives. These numbers represent the quality of the ruleset.</p><p id="p-0051" num="0044">Next, a linear programming matrix is initialized <b>205</b> to zero, and then the linear programming matrix is filled and solved for the minimum rule score values and the minimum constants required, using the PuLP linear programming package in one embodiment. Other embodiments might be using different software for solving the linear program. For each transaction <b>206</b> in the historical data <b>101</b>, loop through analyzing each rule. For each rule <b>207</b> in the draft rule set <b>102</b>, loop through the incidents, testing the conditions <b>208</b> to see if the conditions are met and if so, the incident is added to the matrix <b>209</b> and the next rule is retrieved <b>221</b>. In the PuLP embodiment, the entire row of the matrix is a string containing the formula to solve, so the addition of the rule is a concatenation of the string containing that rule. The values are not plugged in, the rule is simple: WPF0201: score=if (customer.BlackListCount&#x3e;0) and (TransactionAmount&#x3e;0) then 1000 else 0 will be 1000. Other formats could be used without detracting from the inventions. When all rules are processed, the next transaction <b>231</b> is retrieved.</p><p id="p-0052" num="0045">Once all of the rules are entered for all transactions, the linear program (as stored in the matrix) is solved <b>214</b> by using the PuLP solve( ) function. Other linear programming packages could also be used without detracting from these inventions.</p><p id="p-0053" num="0046">The PuLP package uses algorithms such as the Revised Simplex Method or Interior Point Methods for simple and well-understood matrices. More complicated problems use heuristic methods that do not guarantee optimality. Other algorithms for solving linear programming problems include George Dantzig's simplex algorithm or a criss-cross algorithm.</p><p id="p-0054" num="0047">Once the linear program is solved <b>214</b>, each calculated parameter and the calculated score for each rule are copied back into the draft rule set <b>102</b> creating the model rule set <b>104</b>.</p><p id="p-0055" num="0048">The model rule set <b>104</b> is then run through the simulation <b>210</b>, using the historical data <b>101</b>, in the same way, the simulation was performed in <b>204</b>. Once the simulation is complete, an accuracy metric is calculated by calculating the percentage of False Positives and False Negatives. These numbers represent the quality of the model rule set <b>104</b>. If the quality numbers did not improve, if the linear program could not be solved, or if the quality numbers are still not at an acceptable level <b>211</b>, reinitialize the matrix <b>205</b> with a new rules set <b>213</b> (changing various C<sub>ij </sub>constraints or eliminating one or more rules) and rerun the linear programming using the model rule set <b>104</b>.</p><p id="p-0056" num="0049">If the results are acceptable <b>211</b>, return <b>212</b> the model rule set <b>104</b> to the calling routine where it is saved.</p><p id="p-0057" num="0050"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a flow chart of the p-monitor software <b>105</b> using the model rule set <b>104</b> to determine if transactions on the rail <b>106</b> are fraudulent. The p-monitor software <b>301</b> begins by collecting a transaction from the rail <b>302</b>. In this embodiment, the p-monitor <b>406</b> listens to all traffic on the rail <b>106</b> in promiscuous listener mode and sorts through the network packets for application-layer transactions. In other embodiments, the transactions are sent to the p-monitor software <b>105</b> either by calling the p-monitor software <b>105</b> as a subroutine or by sending transaction messages to the p-monitor software <b>105</b>, operating as software-as-a-service.</p><p id="p-0058" num="0051">Once the p-monitor software <b>105</b> has the transaction, the transaction is sent for storage <b>303</b> in the historical data <b>101</b>, and various statistics in the historical data <b>101</b> are updated. For instance, the countries where the customer sends transactions are updated, and the count of transactions per country is updated. In some embodiments, step <b>302</b> is performed in a calling routine. In other embodiments, the historical data is not updated. In still other embodiments, the transaction is stored, but the statistics are not updated immediately but are batched for updating later.</p><p id="p-0059" num="0052">The transaction is next run through the model rule set <b>304</b>. Each rule in the model rule set <b>104</b> is first examined to see if the conditions are met (CO and if the conditions are met, then the score is calculated according to the score of the incident (X<sub>i</sub>). The scores for the incidents are then summed and compared to the threshold T.</p><p id="p-0060" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mrow>  <mi>FRAUD</mi>  <mo>=</mo>  <mrow>   <mi>T</mi>   <mo>&#x2264;</mo>   <mrow>    <munderover>     <mo>&#x2211;</mo>     <mrow>      <mi>i</mi>      <mo>=</mo>      <mn>1</mn>     </mrow>     <mi>n</mi>    </munderover>    <mrow>     <msub>      <mi>C</mi>      <mi>i</mi>     </msub>     <mo>&#x2062;</mo>     <msub>      <mi>X</mi>      <mi>i</mi>     </msub>    </mrow>   </mrow>  </mrow> </mrow></math></maths></p><p id="p-0061" num="0053">If the transaction is not determined to be fraudulent <b>305</b>, then the p-monitor software <b>105</b> waits for the next transaction <b>310</b>.</p><p id="p-0062" num="0054">If the transaction is fraudulent <b>305</b>, then the transaction is sent <b>306</b> to the fraud monitor <b>107</b> so that the fraud investigation team can research the transaction, verify that this is a true positive, and mark false positives. The investigation team may also inform law enforcement, close accounts, and take other measures to prevent the recurrence of the fraud.</p><p id="p-0063" num="0055">In addition, the bank <b>108</b> is notified to block the transaction <b>307</b>, in most embodiments. This may involve sending a message to the sending and receiving financial institutions requesting that the transaction be canceled. In some embodiments, the p-monitor software <b>105</b> simply returns an indication that the transaction is fraudulent, and the calling software handles the canceling of the transaction and the notifications.</p><p id="p-0064" num="0056"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows one possible physical embodiment of the fraud monitoring system. The rail <b>401</b> (see also <b>106</b>) is a network, such as the Ethernet (IEEE 802.3), Wi-Fi (IEEE 802.11), token ring, fiber optic, cellular in the form of a local area network, a wireless network, a wide area network or similar. The rail <b>401</b> in this embodiment has a tap <b>402</b> allowing the p-monitor <b>406</b> to access the rail <b>401</b>. The rail <b>401</b> could be a payment network, a banking network, a financial transaction network, etc.</p><p id="p-0065" num="0057">The rail <b>401</b> is connected to a merchant <b>410</b> and to a bank <b>409</b>. In a typical embodiment, there would be numerous merchants and could be a number of banks as well. The merchant <b>410</b> would send a payment transaction message to the bank <b>409</b> over the rail <b>401</b>, instructing that a payment be made. The p-monitor <b>406</b> listens to the rail <b>401</b> and sees the transaction, and determines if it is fraudulent. If so, the p-monitor <b>406</b> sends the bank <b>409</b> a message over the rail <b>401</b> stopping the transaction.</p><p id="p-0066" num="0058">The tap <b>402</b> connects to a promiscuous transceiver <b>403</b>, a wired or wireless receiver/transmitter that is configured to receive all rail <b>401</b> traffic.</p><p id="p-0067" num="0059">The p-monitor <b>406</b> includes a promiscuous transceiver <b>403</b>, a central processing unit <b>404</b> for comparing the rules to the transactions and for operating a promiscuous network stack. This central processing unit <b>404</b> could be a high-performance, multi-core device for handling the volume of transactions. In some embodiments, the central processing unit <b>404</b> could be a combination of ASICs for processing the network stacks and ASICs for high-performance comparison of the transactions to the rules sets. A microprocessor may also be part of this ASIC combination to manage the processing. The p-monitor <b>406</b> also includes memory <b>405</b> for storing the data while processing. In this embodiment, the transceiver <b>403</b>, the central processing unit <b>404</b>, and the memory <b>405</b> are mechanically and electrically connected within the p-monitor <b>406</b>. The p-monitor <b>406</b> runs the p-monitor software <b>105</b>, and in some embodiments also runs the tuning software <b>103</b>.</p><p id="p-0068" num="0060">The p-monitor <b>406</b> is connected, electrically, optically, or wirelessly, to the rules data store <b>407</b> and to the historical data store <b>408</b>. The rules data store <b>407</b> could contain both the draft rules <b>101</b> and the model rules <b>104</b> in some embodiments. The historical data <b>101</b> is stored in the historical data store <b>408</b>. In some embodiments, the historical data store <b>408</b> and the rules data store <b>407</b> could be the same physical device. Both data stores <b>407</b>,<b>408</b> could be a magnetic hard drive, an optical drive, a solid-state drive, a RAM, or a similar data storage device.</p><p id="p-0069" num="0061"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a chart of the linear analysis of the fraud detection. The sum of the scores from each rule (X<sub>i</sub>) is plotted on the line t, and if the sum is less than T (1000 in this embodiment), then no fraud is determined, otherwise, the transaction is determined to be fraudulent.</p><p id="p-0070" num="0062"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an x-y chart demonstrating, in graphical form, how linear programming is used in fraud detection. The x-axis <b>601</b> runs from zero upwards and represents the number of false positives. The y-axis <b>602</b> runs from zero upwards and represents the number of false negatives. The goal is to minimize false positives and false negatives. In some embodiments, the goal is to minimize false positives while preventing any false negatives. In other embodiments, some false negatives may be permitted. The curve of the ratio <b>603</b> of false positives to false negatives is seen as a solid line in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. Through linear programming, the algorithms seek to minimize the false positives and false negatives while remaining within the constraints. This points to the solid circle <b>607</b>. The constraints are then adjusted using the tuning software <b>103</b> to focus the rules to this solution <b>607</b>.</p><p id="p-0071" num="0063">It should be appreciated that many of the elements discussed in this specification may be implemented in a hardware circuit(s), a circuitry executing software code or instructions which are encoded within computer-readable media accessible to the circuitry, or a combination of a hardware circuit(s) and a circuitry or control block of an integrated circuit executing machine-readable code encoded within a computer-readable media. As such, the term circuit, module, server, application, or other equivalent description of an element as used throughout this specification is, unless otherwise indicated, intended to encompass a hardware circuit (whether discrete elements or an integrated circuit block), a circuitry or control block executing code encoded in a computer-readable media, or a combination of a hardware circuit(s) and a circuitry and/or control block executing such code.</p><p id="p-0072" num="0064">All ranges and ratio limits disclosed in the specification and claims may be combined in any manner. Unless specifically stated otherwise, references to &#x201c;a,&#x201d; &#x201c;an,&#x201d; and/or &#x201c;the&#x201d; may include one or more than one, and that reference to an item in the singular may also include the item in the plural.</p><p id="p-0073" num="0065">Although the inventions have been shown and described with respect to a certain embodiment or embodiments, equivalent alterations and modifications will occur to others skilled in the art upon the reading and understanding of this specification and the annexed drawings. In particular regard to the various functions performed by the above-described elements (components, assemblies, devices, compositions, etc.), the terms (including a reference to a &#x201c;means&#x201d;) used to describe such elements are intended to correspond, unless otherwise indicated, to any element which performs the specified function of the described element (i.e., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary embodiment or embodiments of the inventions. In addition, while a particular feature of the inventions may have been described above with respect to only one or more of several illustrated embodiments, such feature may be combined with one or more other features of the other embodiments, as may be desired and advantageous for any given or particular application.</p><p id="p-0074" num="0066">The above description of the embodiments, alternative embodiments, and specific examples, are given by way of illustration and should not be viewed as limiting. Further, many changes and modifications within the scope of the present embodiments may be made without departing from the spirit thereof, and the present inventions include such changes and modifications.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230004980A1-20230105-M00001.NB"><img id="EMI-M00001" he="7.79mm" wi="76.20mm" file="US20230004980A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230004980A1-20230105-M00002.NB"><img id="EMI-M00002" he="7.79mm" wi="76.20mm" file="US20230004980A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A p-monitor comprising a central processing unit and non-transitory computer readable memory programmed to:<claim-text>create a matrix of each rule in a draft rule set for each historical transaction in historical data stored in a data store;</claim-text><claim-text>solve the matrix for each rule score using linear programming;</claim-text><claim-text>copy said rule scores into a model rule set;</claim-text><claim-text>monitor a rail for a new transaction;</claim-text><claim-text>apply data from the new transaction to the model rule set;</claim-text><claim-text>produce a new transaction score from the data and the model rule set; and</claim-text><claim-text>indicate that the new transaction is fraudulent if the new transaction score exceeds a threshold.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The p-monitor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the matrix is solved for a constant in one of the rules.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The p-monitor of <claim-ref idref="CLM-00001">claim 1</claim-ref> further programmed to notify a fraud monitor that the new transaction is fraudulent.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The p-monitor of <claim-ref idref="CLM-00001">claim 1</claim-ref> further programmed to notify a bank that the new transaction is fraudulent.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The p-monitor of <claim-ref idref="CLM-00004">claim 4</claim-ref> further programmed to request that the bank block the new transaction.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The p-monitor of <claim-ref idref="CLM-00001">claim 1</claim-ref> further programmed to:<claim-text>loop through each transaction in the historical data;</claim-text><claim-text>calculate a transaction score for each historical transaction that is a sum of the rule scores for that historical transaction;</claim-text><claim-text>compare the sum of rule scores with the threshold to make a fraud determination, said fraud determination compared with an actual determination associated with the historical transaction to create a transaction accuracy score; and</claim-text><claim-text>sum said transaction accuracy score to determine a model rule set quality metric.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The p-monitor of <claim-ref idref="CLM-00006">claim 6</claim-ref> further programmed to compare the model rule set quality metric to an expected quality metric, and only copy the rule scores if the model rule set quality metric exceeds the expected quality metric.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The p-monitor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the monitoring of the rail is indirect through banking software.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The p-monitor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the monitoring of the rail for the new transaction receives transactions intended for another network device.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. An apparatus comprising:<claim-text>a p-monitor;</claim-text><claim-text>a rail transceiver, the p-monitor connected to the rail transceiver, the rail transceiver configured to monitor a rail for a new transaction and provide the new transaction to the p-monitor;</claim-text><claim-text>a data store connected to the p-monitor, the data store containing historical data and a draft rule set;</claim-text><claim-text>the p-monitor is configured to:<claim-text>create a matrix of each rule in the draft rule set for each historical transaction in the historical data;</claim-text><claim-text>solve the matrix for each rule score using linear programming, said rule scores used to form a model rule set;</claim-text><claim-text>apply data from the new transaction to the model rule set to produce a new transaction score; and</claim-text><claim-text>if the new transaction score exceeds a threshold, indicate that the new transaction is fraudulent.</claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the matrix is solved for a constant in one of the rules.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the p-monitor notifies a fraud monitor that the new transaction is fraudulent.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the p-monitor notifies a bank that the new transaction is fraudulent.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein the p-monitor requests that the bank block the new transaction.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the p-monitor loops through each transaction in the historical data, calculating a transaction score for each historical transaction that is a sum of the rule scores for that historical transaction and comparing that score with the threshold to make a fraud determination, said fraud determination compared with an actual determination associated with the historical transaction to create a transaction accuracy score, said transaction accuracy score summed to determine a model rule set quality metric.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the model rule set quality metric is compared to an expected quality metric, and only copies the rule scores if the model rule set quality metric exceeds the expected quality metric.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the p-monitor is connected to the rail transceiver through banking software, said banking software configured to receive the new transaction from the rail transceiver and pass the new transaction to the p-monitor.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the rail transceiver receives the new transaction in a message directed specifically to the p-monitor for processing.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the rail transceiver monitors the rail for the new transaction intended for another network device.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. An apparatus comprising:<claim-text>a p-monitor;</claim-text><claim-text>a rail transceiver, the p-monitor connected to the rail transceiver, the rail transceiver configured to monitor a rail for a new transaction and provide the new transaction to the p-monitor;</claim-text><claim-text>a data store connected to the p-monitor, the data store containing historical data and a draft rule set;</claim-text><claim-text>the p-monitor including:<claim-text>a means for creating a matrix of each rule in the draft rule set for each historical transaction in the historical data;</claim-text><claim-text>a means for solving the matrix for each rule score using linear programming, said rule scores used to form a model rule set;</claim-text><claim-text>a means for producing a new transaction score by applying data from the new transaction to the model rule set; and</claim-text><claim-text>if the new transaction score exceeds a threshold, indicate that the new transaction is fraudulent.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>