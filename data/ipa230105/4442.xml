<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004443A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004443</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17939852</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>71</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>5054</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0816</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>5041</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>38</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>4401</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0806</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>48</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>07</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>901</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>445</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>451</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0484</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>36</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>1008</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>1031</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>566</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5061</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>71</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>5054</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0816</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>5048</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>5096</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>3836</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>4411</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5027</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5072</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5022</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5077</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0806</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>4856</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5038</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>505</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>0757</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>327</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>9024</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5011</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>44505</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>485</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180201</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>451</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0484</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>34</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>1469</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>3664</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>3684</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>1008</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>1031</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>5041</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>566</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>61</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">TECHNIQUES FOR IMPLEMENTING ROLLBACK OF INFRASTRUCTURE CHANGES IN A CLOUD INFRASTRUCTURE ORCHESTRATION SERVICE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16925108</doc-number><date>20200709</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11467879</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17939852</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62963335</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963413</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963456</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963477</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963478</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963480</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963452</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963486</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963489</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963481</doc-number><date>20200120</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62963491</doc-number><date>20200120</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Oracle International Corporation</orgname><address><city>Redwood Shores</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Jablonski</last-name><first-name>Greg Mark</first-name><address><city>Seattle</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Glass</last-name><first-name>Nathaniel Martin</first-name><address><city>Bellevue</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Barsalou</last-name><first-name>Eric Tyler</first-name><address><city>Seattle</city><state>WA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Oracle International Corporation</orgname><role>02</role><address><city>Redwood Shores</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Techniques for implementing rollback of infrastructure changes in an infrastructure orchestration service are described. In certain examples, an infrastructure orchestration service is disclosed that manages both provisioning and deploying of infrastructure assets within a cloud environment. The service receives a plan comprising a set of instructions associated with a set of infrastructure assets of an execution target and identifies a first state of the set of infrastructure assets. The service executes the set of instructions in the plan to achieve a second state for the set of infrastructure assets. Based in part on the executing, the service receives a trigger for rolling back the plan to restore the set of infrastructure assets in the plan to the first state and executes a rollback plan for the plan. The service then transmits a result associated with the execution of the rollback plan.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="101.26mm" wi="158.75mm" file="US20230004443A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="229.62mm" wi="162.90mm" orientation="landscape" file="US20230004443A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="250.61mm" wi="157.23mm" orientation="landscape" file="US20230004443A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="236.73mm" wi="153.08mm" orientation="landscape" file="US20230004443A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="256.88mm" wi="151.55mm" orientation="landscape" file="US20230004443A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="263.65mm" wi="170.01mm" orientation="landscape" file="US20230004443A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="246.63mm" wi="163.49mm" file="US20230004443A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="249.51mm" wi="153.84mm" file="US20230004443A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="240.88mm" wi="170.86mm" file="US20230004443A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="224.11mm" wi="169.08mm" orientation="landscape" file="US20230004443A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="229.45mm" wi="166.79mm" file="US20230004443A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="250.19mm" wi="163.49mm" orientation="landscape" file="US20230004443A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="262.21mm" wi="171.11mm" orientation="landscape" file="US20230004443A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present application is a continuation of, and claims the benefit of and priority to, U.S. patent application Ser. No. 16/925,108 filed on Jul. 9, 2020, the entire contents of which are incorporated herein by reference for all purposes.</p><p id="p-0003" num="0002">U.S. patent application Ser. No. 16/925,108 is a non-provisional application of, and claims the benefit and priority under 35 U.S.C. 119(e) of the following U.S. Provisional applications, the entire contents of which are incorporated by reference for all purposes:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0003">U.S. Provisional Application No. 62/963,335, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR DEPLOYING INFRASTRUCTURE RESOURCES WITH A DECLARATIVE PROVISIONING TOOL&#x201d;;</li>    <li id="ul0001-0002" num="0004">U.S. Provisional Application No. 62/963,413, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR DETECTING DRIFT IN A DEPLOYMENT ORCHESTRATOR&#x201d;;</li>    <li id="ul0001-0003" num="0005">U.S. Provisional Application No. 62/963,456, filed Jan. 20, 2020, entitled &#x201c;USER INTERFACE TECHNIQUES FOR AN INFRASTRUCTURE ORCHESTRATION SERVICE&#x201d;;</li>    <li id="ul0001-0004" num="0006">U.S. Provisional Application No. 62/963,477, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR UTILIZING DIRECTED ACYCLIC GRAPHS FOR DEPLOYMENT INSTRUCTIONS&#x201d;;</li>    <li id="ul0001-0005" num="0007">U.S. Provisional Application No. 62/963,478, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR RESOLVING APPLICATION UPDATES&#x201d;;</li>    <li id="ul0001-0006" num="0008">U.S. Provisional Application No. 62/963,480, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR MANAGING DEPENDENCIES OF AN ORCHESTRATION SERVICE&#x201d;;</li>    <li id="ul0001-0007" num="0009">U.S. Provisional Application No. 62/963,452, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR ROLLBACK OF AN INFRASTRUCTURE ORCHESTRATION SERVICE&#x201d;;</li>    <li id="ul0001-0008" num="0010">U.S. Provisional Application No. 62/963,486 filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR DEPLOYING INFRASTRUCTURE COMPONENTS IN PHASES&#x201d;;</li>    <li id="ul0001-0009" num="0011">U.S. Provisional Application No. 62/963,489, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR MANAGING LONG-RUNNING TASKS WITH A DECLARATIVE PROVISIONER&#x201d;;</li>    <li id="ul0001-0010" num="0012">U.S. Provisional Application No. 62/963,481, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR TRANSFERRING DATA ACROSS AIR GAPS&#x201d;; and</li>    <li id="ul0001-0011" num="0013">U.S. Provisional Application No. 62/963,491, filed Jan. 20, 2020, entitled &#x201c;TECHNIQUES FOR PREVENTING CONCURRENT EXECUTION OF DECLARATIVE INFRASTRUCTURE PROVISIONERS&#x201d;.</li></ul></p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0004" num="0014">Today, cloud infrastructure services utilize many individual services to provision and deploy code and configuration (respectively) across the cloud infrastructure service's many regions. These tools require significant manual effort to use, especially given that provisioning is generally declarative and deploying code is imperative. Additionally, as the number of service teams and regions grows, the cloud infrastructure service will need to continue to grow. Some cloud infrastructure service's strategies of deploying to a larger number of smaller regions includes per-region expenditures, which may not scale well.</p><heading id="h-0003" level="1">BRIEF SUMMARY</heading><p id="p-0005" num="0015">Techniques for implementing rollback of infrastructure changes in an infrastructure orchestration service are described. In certain examples, an infrastructure orchestration service is disclosed that manages both provisioning and deploying of infrastructure assets within a cloud environment. The service receives a plan comprising a set of instructions associated with a set of infrastructure assets of an execution target and identifies a first state of the set of infrastructure assets. The service executes the set of instructions in the plan to achieve a second state for the set of infrastructure assets. Based at least in part on the executing, the service receives a trigger for rolling back the plan to restore the set of infrastructure assets in the plan to the first state and executes a rollback plan for the plan. The service then transmits a result associated with the execution of the rollback plan.</p><p id="p-0006" num="0016">These illustrative embodiments are mentioned not to limit or define the disclosure, but to provide examples to aid understanding thereof. Additional embodiments are discussed in the Detailed Description, and further description is provided there.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0017">To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the figure number in which that element is first introduced.</p><p id="p-0008" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an architecture for implementing at least some elements of a cloud infrastructure orchestration service, according to at least one embodiment.</p><p id="p-0009" num="0019"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of an architecture for implementing at least some elements of a cloud infrastructure orchestration service, according to at least one embodiment.</p><p id="p-0010" num="0020"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow diagram for illustrating an example flock, according to at least one embodiment.</p><p id="p-0011" num="0021"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram for illustrating an example flock, according to at least one embodiment.</p><p id="p-0012" num="0022"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts a combination block diagram of an architecture for implementing at least some elements of a cloud infrastructure orchestration service, according to at least one embodiment.</p><p id="p-0013" num="0023"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an example of a process for executing a rollback plan for a plan based at least in part on receiving a trigger, according to certain embodiments.</p><p id="p-0014" num="0024"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an example of a process for receiving a trigger that causes an execution of a rollback plan for a plan executed in a pre-production test environment, according to certain embodiments.</p><p id="p-0015" num="0025"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts an example of a process for receiving a trigger that causes an execution of a rollback plan of a plan executed in an actual production environment, according to certain embodiments.</p><p id="p-0016" num="0026"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts a schematic diagram of an example user interface (UI), according to at least one embodiment.</p><p id="p-0017" num="0027"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram of a distributed system, according to at least one embodiment.</p><p id="p-0018" num="0028"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an example computer system, in which various embodiments of the present disclosure may be implemented.</p><p id="p-0019" num="0029"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram of one or more components of a system environment by which services provided by one or more components of an embodiment system may be offered as cloud services, according to at least one embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0020" num="0030">In some examples, infrastructure as a service (IaaS) is one particular type of cloud computing. IaaS can be configured to provide virtualized computing resources over a public network (e.g., the Internet). In some examples, IaaS is one of the three main categories (or sub-categories) of cloud computing services. Most consider the other main categories to be software as a service (SaaS) and platform as a service (PaaS), and sometimes SaaS may be considered a broader category, encompassing both PaaS and IaaS, with even some considering IaaS to be a sub-category of PaaS as well.</p><p id="p-0021" num="0031">In an IaaS model, a cloud computing provider can host the infrastructure components (e.g., servers, storage devices, network nodes (e.g., hardware), deployment software, platform virtualization (e.g., a hypervisor layer), or the like).</p><p id="p-0022" num="0032">In some cases, an IaaS provider may also supply a variety of services to accompany those infrastructure components (e.g., billing, monitoring, logging, security, load balancing and clustering, etc.). Thus, as these services may be policy-driven, IaaS users may be able to implement policies to drive load balancing to maintain application availability and performance.</p><p id="p-0023" num="0033">In some instances, IaaS customers may access resources and services through a wide area network (WAN), such as the Internet, and can use the cloud provider's services to install the remaining elements of an application stack. For example, the user can log in to the IaaS platform to create virtual machines (VMs), install operating systems (OSs) in each VM, deploy middleware, such as databases, create storage buckets for workloads and backups, and install even install enterprise software into that VM. Customers can then use the provider's services to perform various functions, including balancing network traffic, troubleshooting application issues, monitoring performance, managing disaster recovery, etc.</p><p id="p-0024" num="0034">In most cases, a cloud computing model will require the participation of a cloud provider. The cloud provider may, but need not be, a third-party service that specializes in providing (e.g., selling) IaaS. An entity might also opt to deploy a private cloud, becoming its own provider of infrastructure services.</p><p id="p-0025" num="0035">In some examples, IaaS deployment is the process of putting a new application, or a new version, onto a prepared application server or the like. It may also include the process of preparing the server (e.g., installing libraries, daemons, etc.). This is often managed by the cloud provider, below the hypervisor layer (e.g., the servers, storage, network hardware, and virtualization). Thus, the customer may be responsible for handling (OS), middleware, and/or application deployment (e.g., on self-service virtual machines (e.g., that can be spun up on demand) or the like.</p><p id="p-0026" num="0036">In some examples, IaaS provisioning may refer to acquiring computers or virtual hosts for use, and even installing needed libraries or services on them. In most cases, deployment does not include provisioning, and the provisioning may need to be performed first.</p><p id="p-0027" num="0037">In some cases, there are two different problems for IaaS provisioning. First, there is the initial challenge of provisioning the initial set of infrastructure before anything is running. Second, there is the challenge of evolving the existing infrastructure (e.g., adding new services, changing services, removing services, etc.) once everything has been provisioned. In some cases, these two challenges may be addressed by enabling the configuration of the infrastructure to be defined declaratively. In other words, the infrastructure (e.g., what components are needed and how they interact) can be defined by one or more configuration files. Thus, the overall topology of the infrastructure (e.g., what resources depend on which, and how they each work together) can be described declaratively. In some instances, once the topology is defined, a workflow can be generated that creates and/or manages the different components described in the configuration files.</p><p id="p-0028" num="0038">In some examples, an infrastructure may have many interconnected elements. For example, there may be one or more virtual private clouds (VPCs) (e.g., a potentially on-demand pool of configurable and/or shared computing resources), also known as a core network. In some examples, there may also be one or more security group rules provisioned to define how the security of the network will be set up and one or more virtual machines (VMs). Other infrastructure elements may also be provisioned, such as a load balancer, a database, or the like. As more and more infrastructure elements are desired and/or added, the infrastructure may incrementally evolve.</p><p id="p-0029" num="0039">As noted above, one way to provision the infrastructure is to describe it declaratively. As such, the configuration file may be a declarative file that merely describes each of the infrastructure components noted above and how they interact. The configuration file can describe the resource and the relevant fields needed to create the element, and then as other elements can be described that reference the previously described elements. In some examples, a provisioning tool can then generate a workflow for creating and managing the elements that are described in the configuration file.</p><p id="p-0030" num="0040">In some instances, the workflow of the provisioning tool may be configured to perform various commands. One function that can be performed is view reconciliation, where the provisioning tool can compare the view of the current infrastructure (e.g., the expected state of the infrastructure) with how the infrastructure is actually running. In some instances, performing the view reconciliation function may include querying various resource providers or infrastructure resources to identify what resources are actually running. Another function that the provisioning tool can perform is plan generation, where the provisioning tool can compare the actually running infrastructure components with what the provisioning tool wants the state to look like (e.g., the desired configuration). In other words, the plan generation function can determine what changes need to be made to bring the resources up to the most current expectations. In some instances, a third function is the execution (e.g., apply) function, where the provisioning tool can execute the plan generated by the plan generation function.</p><p id="p-0031" num="0041">In general, provisioning tools may be configured take the configuration file, parse the declarative information included therein, and programmatically/automatically determine the order in which the resources need to be provisioned in order to execute the plan. For example, if the VPC needs to be booted before the security group rules and VMs are booted, then the provisioning tool will be able to make that determination and implement the booting in that order without user intervention and/or without that information necessarily being included in the configuration file.</p><p id="p-0032" num="0042">In some instances, continuous deployment techniques may be employed to enable deployment of infrastructure code across various virtual computing environments. Additionally, the described techniques can enable infrastructure management within these environments. In some examples, service teams can write code that is desired to be deployed to one or more, but often many, different production environments (e.g., across various different geographic locations, sometimes spanning the entire world). However, in some examples, the infrastructure on which the code will be deployed must first be set up. In some instances, the provisioning can be done manually, a provisioning tool may be utilized to provision the resources, and/or deployment tools may be utilized to deploy the code once the infrastructure is provisioned.</p><p id="p-0033" num="0043">As noted above, generally there are two different tools used to handle each of the provisioning of infrastructure resources and the deployments of code to control the infrastructure resources, with orchestration between the two tools being performed manually. However, at scale, manual implementation always leads to deviations. Thus, an automated tool that can both provision and deploy a virtual infrastructure enables more efficient and reliable techniques for implementing a virtual cloud environment.</p><p id="p-0034" num="0044">In some examples, when two tools are used, issues can arise when a user manually makes changes to the code between the provisioning phase and the deployment phase. As described herein, a technique that uses a single tool for both provisioning and deploying can alleviate that by automating the process, such that there isn't an opportunity for manual code changes. It may be the case, that a slight change to the way in which one user codes something, can create major issues in the deployment phase. In some examples, the first time an operator performs an action in a new region (e.g., a typo in the code), the object that was coded with the typo may be that way forever. If the application is deployed with that typo, and the application is not sensitive to that typo (e.g., it still works), it is possible that some time down the road, an additional code change could become sensitive to that typo, and crash the entire system. Thus, the techniques provided herein can remove the gap between provisioning and deployment that can often lead to problems.</p><p id="p-0035" num="0045">In general, modeling deployments is declarative such that a configuration file can be used to declare the infrastructure resources. For example, create, read, update, delete (CRUD) instructions are generally used to generate deployment files using general Representational State Transfer (REST) concepts (e.g., REST Application Programming Interfaces (APIs)). However, deployment itself doesn't generally follow the same concept. Additionally, while the infrastructure provisioning tools tend to be really powerful and/or expressive, the tools for deployment tend to be much more restrictive regarding the operations they can perform (e.g., they are imperative as opposed to declarative). Thus, there has been a long-felt need for a tool that can handle both functional requirements (e.g., provisioning and deployment of infrastructure elements) within a cloud environment.</p><p id="p-0036" num="0046">In some examples, techniques for implementing a cloud infrastructure orchestration service (CIOS) are described herein. Such techniques, as described briefly above, can be configured to manage both provisioning and deploying of infrastructure assets within a cloud environment. In some instances, the CIOS can include two classes of service: the Central and Regional components (e.g., CIOS Central and CIOS Regional). Additional details related to the techniques employed by the CIOS Central and CIOS Regional components for provisioning and deploying of infrastructure assets within a cloud environment is described in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>2</b></figref> below.</p><p id="p-0037" num="0047">In certain embodiments, the CIOS Regional component is configured to manage regional instances and/or deployments of CIOS Central and store and manage execution plans that pertain to a particular region. In certain examples, the CIOS Regional System is configured to orchestrate (e.g., co-ordinate) the execution of a plan to provision and deploy the infrastructure resources defined in a configuration file by breaking the plan down into a series of tasks.</p><p id="p-0038" num="0048">The following terms will be used throughout the present disclosure:<ul id="ul0002" list-style="none">    <li id="ul0002-0001" num="0000">    <ul id="ul0003" list-style="none">        <li id="ul0003-0001" num="0049">Infrastructure component&#x2014;A long-lived piece of infrastructure that supports running code.        <ul id="ul0004" list-style="none">            <li id="ul0004-0001" num="0050">Examples: a deployment application, a load balancer, a domain name system (DNS) entry, an object storage bucket, etc.</li>        </ul>        </li>        <li id="ul0003-0002" num="0051">Artifact&#x2014;Code being deployed to a deployment application or a Kubernetes engine cluster, or configuration information (hereinafter, &#x201c;config&#x201d;) being applied to an infrastructure component. These may be read-only resources.</li>        <li id="ul0003-0003" num="0052">Deployment task&#x2014;A short-lived task that is often associated with deploying or testing code. Additionally, the deployment tasks are modeled as resources that live no longer than the release that creates them.        <ul id="ul0005" list-style="none">            <li id="ul0005-0001" num="0053">Examples: &#x201c;deploy $artifact to $environment,&#x201d; &#x201c;watch $alarm for 10 minutes,&#x201d; &#x201c;execute $testSuite,&#x201d; or &#x201c;wait for $manualApproval&#x201d;</li>            <li id="ul0005-0002" num="0054">For example, CIOS can model a deployment orchestrator deployment as the creation of a resource that transitions to the Available state when it completes.</li>            <li id="ul0005-0003" num="0055">Because CIOS maintains the state of its associated declarative provisioner, CIOS can control the lifecycle of these short-lived resources as it relates to releases.</li>        </ul>        </li>        <li id="ul0003-0004" num="0056">Resource&#x2014;a CRUD'able resource.        <ul id="ul0006" list-style="none">            <li id="ul0006-0001" num="0057">CIOS models each of the constructs listed above as a resource. The next section discusses this modeling in detail.</li>        </ul>        </li>        <li id="ul0003-0005" num="0058">Flock&#x2014;CIOS's model encapsulating a control plane and all its components. Exists primarily to model ownership of and point at the infrastructure components.</li>        <li id="ul0003-0006" num="0059">Flock config&#x2014;Describes the set of all infrastructure components, artifacts, and deployment tasks associated with a single service.        <ul id="ul0007" list-style="none">            <li id="ul0007-0001" num="0060">Each Flock has exactly one Flock configuration. Flock configurations are checked in to source control.</li>            <li id="ul0007-0002" num="0061">Flock configurations are declarative. They expect CIOS to provide realm, region, ad, and artifact versions as input.</li>            <li id="ul0007-0003" num="0062">Flocks are granular&#x2014;a Flock consists of a single service and supporting infrastructure.</li>        </ul>        </li>        <li id="ul0003-0007" num="0063">State&#x2014;A point-in-time snapshot of the state of every resource in the flock.</li>        <li id="ul0003-0008" num="0064">Release&#x2014;A tuple of a specific version of a flock configuration and a specific version of every artifact that it references.        <ul id="ul0008" list-style="none">            <li id="ul0008-0001" num="0065">Think of a release as describing a state that may not yet exist.</li>        </ul>        </li>        <li id="ul0003-0009" num="0066">Release plan&#x2014;The set of steps that the CIOS would take to transition all regions from their current state to the state described by a release.        <ul id="ul0009" list-style="none">            <li id="ul0009-0001" num="0067">Release plans have a finite number of steps and a well-defined start and end time.</li>        </ul>        </li>        <li id="ul0003-0010" num="0068">Apply&#x2014;This is a noun. A single attempt to execute a Release plan. An Execution changes the current State of the Flock.</li>    </ul>    </li></ul></p><p id="p-0039" num="0069">CIOS can be described as an orchestration layer that applies configuration to downstream systems (e.g., world-wide). It is designed to allow world-wide infrastructure provisioning and code deployment with no manual effort from service teams (e.g., beyond an initial approval in some instances). The high level responsibilities of CIOS include, but are not limited to:<ul id="ul0010" list-style="none">    <li id="ul0010-0001" num="0000">    <ul id="ul0011" list-style="none">        <li id="ul0011-0001" num="0070">Providing teams with a view in to the current state of resources managed by CIOS, including any in-flight change activity.</li>        <li id="ul0011-0002" num="0071">Helping teams plan and release new changes.</li>        <li id="ul0011-0003" num="0072">Coordinating activity across various downstream systems within a region to execute approved release plans with no human intervention.</li>        <li id="ul0011-0004" num="0073">Coordinating activity across regions/realms to execute approved release plans world-wide.</li>    </ul>    </li></ul></p><p id="p-0040" num="0074">In some examples, CIOS handles onboarding by enabling teams to provide CIOS with configuration information via checked-in code. Additionally, CIOS can automate more things, so this is a heavier-weight exercise than in previous implementations. In some instances, CIOS handles pre-deployment by offering teams the ability to automatically deploy and test code. In some instances, CIOS can handle the writing of change management (CM) policy by enabling automatically generating plans to roll out new artifacts (e.g., world-wide) when a team builds them. It can do this by inspecting the current state of each region and the current CIOS configuration (which, can itself be an artifact). Additionally, teams can inspect these plans, and may iterate on them by changing the CIOS configuration and asking CIOS to re-plan. Once the team is satisfied with a plan, they can create a &#x201c;release&#x201d; that references the plan. The plan can then be marked as approved or rejected. While teams can still write CMs, they are just pointers to the CIOS plan. Thus, teams can spend less time reasoning about the plan. Plans are more accurate because they are machine generated. Plans are almost too detailed for human consumption; however, it can be displayed via a sophisticated user interface (UI).</p><p id="p-0041" num="0075">In some examples, CIOS can handle execution of CMs by automatically executing the deployment plan. Once release plan has been created and approved, engineers no longer participate in CMs unless CIOS initiates roll-back. In some cases, this may require teams to automate tasks that are currently manual. In some examples, CIOS can handle rolling back a change management (CM) by automatically generating a plan that returns the flock to its original (e.g., pre-release) state when CIOS detects service health degradation while executing. In some examples, CIOS can handle deploying emergent/tactical changes by receiving a release plan that is scoped to a subset of regions and/or a subset of the resources managed by CIOS, and then executing the plan.</p><p id="p-0042" num="0076">Additionally, CIOS may support primitives necessary to define fully automated world-wide deployments. For example, CIOS can measure service health by monitoring alarms and executing integration tests. CIOS can help teams quickly define roll-back behavior in the event of service degradation, then can execute it automatically. CIOS can automatically generate and display release plans and can track approval. In some instances, the language that teams use to describe desired deployment behavior may be declarative. CIOS can combine the functionality of code deployment and infrastructure configuration (e.g., provisioning) in one system. CIOS also supports flexible ordering across regions, and across components within a region. Teams can express ordering via checked-in configuration. Teams may call CIOS's planning and release APIs programmatically.</p><p id="p-0043" num="0077"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts an architecture <b>100</b> for illustrating techniques for implementing at least CIOS Central <b>102</b>. In some examples, CIOS Central <b>102</b> can be the service that handles operations at the level of a &#x201c;Flock.&#x201d; CIOS Central <b>102</b> has a few responsibilities, including but not limited to:<ul id="ul0012" list-style="none">    <li id="ul0012-0001" num="0000">    <ul id="ul0013" list-style="none">        <li id="ul0013-0001" num="0078">Serving as an authentication gateway for Flock metadata changes and release operations.</li>        <li id="ul0013-0002" num="0079">Storing an authoritative mapping of Flock metadata to the deployment artifacts and CIOS repositories for the flock.</li>        <li id="ul0013-0003" num="0080">Coordinating global Releases across Phases and Targets.</li>        <li id="ul0013-0004" num="0081">Synchronization to enforce policies like &#x201c;no more than one ongoing release to a Flock at a time.&#x201d;</li>        <li id="ul0013-0005" num="0082">Detecting changes to Flock configuration (configuration) and artifacts, and triggering a release generation on such changes.</li>    </ul>    </li></ul></p><p id="p-0044" num="0083">In some examples, a source code version-control management service (SCVMS) <b>104</b> can be configured to store authoritative Flock configuration and an artifact notification service (ANS) <b>106</b> can be subscribed to by CIOS Central <b>102</b>, so that CIOS Central <b>102</b> can be informed of new artifact builds. The CIOS Central <b>102</b> can then map incoming changes against the affected flocks, and initiate release planning where desired. Additionally, in some examples, an artifact push service (APS) can be invoked by CIOS Central <b>102</b>, before a release to a target, to ensure any artifacts required for a successful release are present in the target's region ahead of release.</p><p id="p-0045" num="0084">In some examples, customers (e.g., engineers) <b>108</b> can call CIOS Central <b>102</b> to CRUD flocks and/or releases, and to view the status of ongoing CIOS activity. Flock management service <b>110</b> can include one or more API's to manipulate flocks, view/plan/approve service <b>112</b> can include CRUD API's to create and approve plans, and to view a central copy of the state of all CIOS-managed resources, change monitoring service <b>114</b> can watch SCVMS <b>104</b> for changes to flock configuration, and can receive notifications about changes to other artifacts from ANS <b>106</b>, and state ingester service <b>116</b> can create copies of regional state in CIOS Central database (DB) <b>118</b> so that view/plan/approve <b>112</b> can expose them. In some examples, the CIOS Central DB <b>118</b> can be a DB of flocks, plans, and state. Flock information can be authoritative; while everything else may be a stale copy of data from CIOS Regional <b>120</b>.</p><p id="p-0046" num="0085">In some examples, engineer <b>108</b> can perform an API call for the flock management service <b>110</b> (e.g., through the ingress proxy fleet <b>122</b>) to create a list of flocks. The protocol for making such an API call can be hypertext transport protocol secure (HTTPS) or the like. Relevant access control lists (ACLs) for this operation can include a local area network (LAN) <b>124</b> or other private connection. For example, CIOS may manage/control a network-connectivity alternative to using the public Internet for connecting a customer's on-premises data center or network with CIOS (e.g., a dedicated, leased, and/or private connection). Additionally, authentication and authorization (e.g., of the engineer <b>108</b>) may be performed by a reservation system portal that allows users to manage machine infrastructure (e.g., reservation service). In some instances, CIOS Central <b>102</b> can store flock metadata, plans, and state in the Central DB <b>118</b>, using Java database connectivity (JDBC) or the like. In some examples, ANS <b>106</b> can be configured to notify the change monitoring service <b>114</b> when new artifacts have been published. The ANS <b>106</b> may use HTTPS, and both authentication and authorization may be handled by a mutual transport layer security service. Additionally, in some instances, the change monitoring service <b>114</b> can poll the SCVMS <b>104</b> for flock configuration changes. This polling can be performed using secure shell (SSH) or other protocols. Authentication of the change monitoring service <b>114</b> may be handled by a CIOS system account and authorization may be handled by SCVMS <b>104</b>.</p><p id="p-0047" num="0086">In some examples, the engineer <b>108</b> can use the view/plan/approve service <b>112</b> to do one or more of the following operations. The engineer <b>108</b> can plan and/or approve by calling CIOS Central <b>102</b> to generate and approve plans. The engineer <b>108</b> can view by calling CIOS Central <b>102</b> to view the status of ongoing CIOS activity world-wide. Additionally, the engineer <b>108</b> can CIOS Central <b>102</b> to view a replica of the state of CIOS-managed resources world-wide. These API calls (or the like) can be performed via the HTTPS protocol or similar protocols. Additionally, relevant ACLs can be controlled by LAN <b>124</b>, and both authentication and authorization can be handled by the reservation service. In some examples, the view/plan/approve service <b>112</b> can request planning and push plan approval to all regions of CIOS Regional <b>120</b> (e.g., using HTTPS or the like). Relevant ACLs can be controlled using a security list managed by the wide area network (WAN) gateway <b>126</b>. Authentication can be handled by mutual transport layer security and authorization can be handled by various identity policies. Further, the state ingester service <b>116</b> can watch CIOS Regional <b>120</b> for job status or state changes, so that CIOS can provide a central view of them upon request (e.g., also using HTTPS or the like). ACLSs for this can also be handled by the WAN gateway <b>126</b>, and both authentication and authorization can be handled by mutual transport layer security services.</p><p id="p-0048" num="0087"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an architecture <b>200</b> for illustrating techniques for implementing at least CIOS Regional <b>120</b>. In some examples, CIOS Regional <b>120</b> is where much of the work of declarative provisioning and planning, as well as approved release application can occur. In some instances, each instance of CIOS Regional <b>120</b> may have a CIOS regional front end that can handle operations at the level of &#x201c;Execution Targets.&#x201d; It can be configured to perform the following:<ul id="ul0014" list-style="none">    <li id="ul0014-0001" num="0000">    <ul id="ul0015" list-style="none">        <li id="ul0015-0001" num="0088">Handling all CIOS Authentication for incoming operations from CIOS Central <b>102</b>.</li>        <li id="ul0015-0002" num="0089">Enforcing a rule that only one &#x201c;execution&#x201d; (plan/import resources/apply plan) can be ongoing for a given Execution target at a time.</li>        <li id="ul0015-0003" num="0090">Managing binary artifact storage for declarative provisioning artifacts used for input and output during declarative infrastructure provisioning execution. Examples of input are declarative infrastructure provisioning configuration files and an input state file. Typical output is a final state file.</li>        <li id="ul0015-0004" num="0091">Requesting work from and polls for results from the CIOS Executor for any given execution.</li>    </ul>    </li></ul></p><p id="p-0049" num="0092">In some instances, the CIOS regional Frontend may be dependent on an Executor <b>206</b> (also referred to herein as a &#x201c;scheduler), which can handle the actual execution. The Executor, in some examples, operates at the level of &#x201c;Execution,&#x201d; and it can:<ul id="ul0016" list-style="none">    <li id="ul0016-0001" num="0000">    <ul id="ul0017" list-style="none">        <li id="ul0017-0001" num="0093">Track a pool of available Worker nodes</li>        <li id="ul0017-0002" num="0094">Query incoming job requests, and assigns them to eligible workers as available</li>        <li id="ul0017-0003" num="0095">Track worker status and Execution updates for reporting to clients</li>        <li id="ul0017-0004" num="0096">Detect dead nodes via a leasing protocol, and can fail tasks assigned to dead nodes, depending on task status.</li>        <li id="ul0017-0005" num="0097">Provide facilities to cancel/kill/pause/resume Executions, and can map those onto facilities to pass cancellation/kill/resumption info on to Worker nodes.</li>    </ul>    </li></ul></p><p id="p-0050" num="0098">In some instances, the CIOS Executor can depend on CIOS Workers, which can assign tasks for execution to Workers, and provide a facility for Workers to update job progress. The worker service operates at the granularity of &#x201c;Task.&#x201d; Each worker is an agent executing Tasks assigned to that worker and reporting Task status and output. Each worker can:<ul id="ul0018" list-style="none">    <li id="ul0018-0001" num="0000">    <ul id="ul0019" list-style="none">        <li id="ul0019-0001" num="0099">Poll Executor Worker APIs for assigned work items, and take action to make the assign state match its local state:        <ul id="ul0020" list-style="none">            <li id="ul0020-0001" num="0100">start containers for polls task items that do not exist locally</li>            <li id="ul0020-0002" num="0101">kill containers for locally running containers that have no corresponding assigned task item</li>        </ul>        </li>        <li id="ul0019-0002" num="0102">Report status for jobs</li>        <li id="ul0019-0003" num="0103">Stage input and output for job container execution</li>        <li id="ul0019-0004" num="0104">Launch and monitor declarative infrastructure provisioning containers for doing the real work of a Release for an Execution Target.</li>    </ul>    </li></ul></p><p id="p-0051" num="0105">CIOS Workers may depend on CIOS Executor to poll work from and report results to the worker endpoint of the CIOS Executor. The Worker may rely on the Executor for all coordination. Additionally, the CIOS Workers may also depend on CIOS Regional <b>202</b>, where the Worker services reads input from and writes output to one or more APIs that are associated with the Regional Frontend service. Examples of input are configuration and starting state files and import mappings. Examples of output are declarative provisioning process, output declarative provisioning state files, and import result states.</p><p id="p-0052" num="0106">In some examples, CIOS Regional <b>202</b> can be a regional service for managing regional instances/deployments of CIOS. CIOS Regional <b>202</b> covers responsibility for authoritatively storing and managing plans and stat that pertains to a particular region. A Regional DB <b>204</b> may be a CIOS DB for the state and plans in the particular region. This is the authoritative copy of the region's subset of the Central DB <b>118</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Scheduler <b>206</b> can be responsible for managing worker fleet capacity, assigning tasks to workers, and keeping track of task state. In some instances, Task DB <b>208</b> is another CIOS DB for task state. Data in this DB is mostly for operational purposes. Additionally, Worker <b>210</b> can be a fleet of java virtual machines (JVMs) that manage declarative provisioning images. These receive instructions from the Scheduler <b>206</b> and communicate results to both the Scheduler <b>206</b> and CIOS Regional <b>202</b>. A CIOS container <b>212</b> can run declarative provisioning actions in its own private docker <b>214</b> container. This container does not need to contain secrets. Additionally, in some examples, a signing proxy <b>216</b> can be configured to prevent secret exfiltration via a declarative provisioning tool, in order to avoid putting secrets in the declarative provisioning Image. Instead, CIOS can perform request signing or initiate a mutual transport layer security (mTLS) service in a proxy. This also makes it easier to use FIPS-compliant crypto libraries.</p><p id="p-0053" num="0107">In some examples, CIOS Central <b>102</b> can call CIOS Regional <b>202</b> to create plans, push approvals, watch job status (service principal), and extract declarative provisioner state (service principal). An ingress proxy <b>218</b> can be configured as the ACL and various identity policies may be used for both authentication and authorization. Alternatively, in some examples, the ingress proxy <b>218</b> may be replaced with a load balancer configured to balance the load incoming requests, plans, etc. In some instances, CIOS Regional <b>202</b> may run a declarative provisioner by asking the scheduler <b>206</b> to do so. Worker <b>210</b> can ask Scheduler <b>206</b> what it should be running, and can report status to Scheduler <b>206</b> when done. In some cases, mTLS may handle both authentication and authorization for CIOS Regional <b>202</b> and Worker <b>210</b>. Additionally, when Worker <b>210</b> needs to run a declarative provisioner, it does so in docker containers by interacting with the local docker <b>214</b>. Authentication for this stage may be handled by a local unix socket. A docker protocol may be used for this last step; however, HTTPS may be utilized for the previous ones.</p><p id="p-0054" num="0108">In some examples, the CIOS container <b>212</b> enables a declarative provisioner to interact (via API) with the signing proxy <b>216</b>, while the declarative provisioner thinks it's calling various CIOS services. The signing proxy <b>216</b> listens on one ephemeral port per calling instance of declarative provisioner, known only to that declarative provisioner. The signing proxy <b>216</b> can initiate requests signatures or mTLS, and can pass the declarative provisioner's calls through to other CIOS services within the service enclave. In some instances, the signing proxy <b>216</b> can also communicate with one or more public CIOS services <b>220</b>. For example, the Signing Proxy <b>216</b> will use the internal endpoint of public services where possible. For services with no internal endpoint, it must use the egress proxy <b>222</b> to reach the external endpoint. This use of the signing proxy <b>216</b> may not be for cross-region communication; for example, an egress proxy whitelist in each region may only be for that region's public IP ranges. In some examples, Worker <b>210</b> may then persist state and logs from a declarative provisioner in CIOS Regional <b>202</b> so that they can be exfiltrated to CIOS Central <b>102</b>.</p><p id="p-0055" num="0109">Using CIOS, there are a few phases of a representative customer experience: onboarding, pre-release, world-wide release, and tactical release. For the pre-release phase, the below is an example of what happens between a new artifact being built and releasing artifacts to release one (e.g., R1). This should replace some or most of current change management processes. As relevant artifacts are built, CIOS can automatically generate releases using &#x201c;the latest version of everything in the flock.&#x201d; A release is a specific version of the flock config with specific inputs (e.g. artifact versions, realm, region, and ad). A release contains one roll-forward plan per region and metadata describing region ordering. Each regional plan is the set of operations a declarative provisioner would take to realize the flock configuration in that region. Teams with pre-release environments can use CIOS to automatically release and test software in said environments. Teams can configure CIOS to automatically test the roll-back plan. Teams will be able to inspect and approve releases through the CIOS UI. Teams can approve some but not all of the regional plans within a release. If &#x201c;the latest version of everything&#x201d; yielded no suitable plans, teams can ask CIOS to generate a plan for cherry-picked artifact versions.</p><p id="p-0056" num="0110">For the world-wide release phase, the below is an example of how a team executes tomorrow's version of today's &#x201c;normal CM.&#x201d; Once a release is approved, CIOS pushes each approved regional plan to the respective region. CIOS acts independently within each region to apply approved plans. CIOS will only perform the set of actions explicitly described in that region's plan. Instead of &#x201c;thinking independently,&#x201d; it will fail. CIOS UI shows teams the progress of the execution. CIOS UI prompts teams when manual approvals are required. If execution fails because of an outage in CIOS or in a downstream service, CIOS can notify the team and can prompt them for next steps (e.g., abort, retry). CIOS does perform retries, but some downstream system outages will exceed its willingness to retry. If execution fails because of service health degradation or a test failure, CIOS will assist teams with rolling the flock back to its starting state. CIOS will notify (e.g., page) teams when it initiates automatic rollback. Teams must approve the roll-back plan, then CIOS will execute it.</p><p id="p-0057" num="0111">For the tactical release phase, the below is an example of how a team can execute tomorrow's version of an &#x201c;emergent CM.&#x201d; When generating a plan, teams may ask CIOS to target the plan at specific resources in several ways: topologically (e.g., realm, region, AD, etc.), by resource type (e.g., &#x201c;only metrics configs&#x201d; or &#x201c;only deployment orchestration service deployments&#x201d;, etc), or combinations of the above (e.g., in a disjunctive manner). Teams approve tactical releases just like world-wide releases. CIOS orchestrates them similarly. If a team needs to deploy a tactical release while there is an active a world-wide release, CIOS will stop executing the world-wide release in the targeted regions, then start executing the tactical release.</p><p id="p-0058" num="0112">In some examples, a declarative provisioner's state (e.g., traditionally a file) is an authoritative record of the set of resources managed by the declarative provisioner. It contains the mapping between the logical identifier of each resource from the configuration file and the actual identifier of the resource. When the declarative provisioner is creating a resource, certain kinds of failure can prevent the actual identifier from being recorded in the state. When this happens, the actual identifier is lost to the declarative provisioner. These can be called &#x201c;orphaned resources.&#x201d;</p><p id="p-0059" num="0113">For most resources, orphans represent waste&#x2014;the declarative provisioner launched (for example) an instance that it forgot about, but will launch another instance instead the next time it is run. For resources with uniqueness constraints or client-supplied identifiers, orphans prevent the declarative provisioner from making forward progress. For example, if the declarative provisioner creates a user &#x2018;nglass&#x2019; and a failure orphans it, the next run of the declarative provisioner will attempt to create &#x2018;nglass&#x2019; and fail because a user with that username already exists. In some cases, orphans are only a problem when adding new resources to the state. In some instances, the declarative provisioner's refresh behavior may naturally recover from failures to record updates and deletions.</p><p id="p-0060" num="0114">CIOS needs to be robust in the event of downstream service outages or outages of CIOS itself. Because CIOS can leverage a declarative provisioner to apply changes, this means there should be robustness around running the declarative provisioner and maintaining the declarative provisioner state. The declarative provisioner providers perform &#x2018;small scale&#x2019; retries&#x2014;enough to avoid outages lasting for small numbers of minutes. For example, a cloud provider will retry for up to 30 minutes. Downstream system outages lasting longer than 30 minutes will cause the declarative provisioner to fail. When the declarative provisioner fails, it records all changes it successfully made in the state, then exits. To retry, CIOS must re-execute the declarative provisioner. Re-executing the declarative provisioner also allows CIOS to retry in the event of a failure in CIOS itself. In some instances, CIOS can run the following operations in a loop:<ul id="ul0021" list-style="none">    <li id="ul0021-0001" num="0000">    <ul id="ul0022" list-style="none">        <li id="ul0022-0001" num="0115">Refresh&#x2014;the declarative provisioner calls GET APIs to retrieve a fresh snapshot of every resource described in its state.</li>        <li id="ul0022-0002" num="0116">Plan&#x2014;the declarative provisioner generates a plan (a concrete set of API calls) that will realize the desired state, given the recently-refreshed current state.</li>        <li id="ul0022-0003" num="0117">Apply&#x2014;the declarative provisioner executes the set of steps in the plan.</li>    </ul>    </li></ul></p><p id="p-0061" num="0118">CIOS may always run all three of these steps when executing the declarative provisioner. The refresh operation helps recover from any updates or deletions that weren't recorded. CIOS inspects the result of the plan operation and compares it to the approved release plan. If the newly generated plan contains operations that were not in the approved release plan, CIOS may fail and may notify the service team.</p><p id="p-0062" num="0119"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts a directed acyclic graph (DAG) <b>300</b> for illustrating an example flock <b>302</b>. The progression of code/config from check-in to production, for a single flock config in CIOS, can be described all the way from the first testing deployment to the last prod deployment. Internally, CIOS calls each element in the progression an ExecutionTarget (ET)&#x2014;this is all over our internal APIs, but does not leak out in to the flock config. CIOS executes ETs based at least in part on the DAG <b>200</b> defined in the flock config. Each ET (e.g., ET-1, ET-2, ET-3, ET-4, ET-5, ET-6, and ET-7) is, roughly, one copy of the service described by the flock config.</p><p id="p-0063" num="0120"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a DAG <b>400</b> for illustrating and example flock <b>402</b>. In the flock config, CIOS is very opinionated about how teams express this progression&#x2014;they must model it using cloud infrastructure tenancies and regions. Teams should not model progression using realms. CIOS allows teams to use many tenancies within a realm and many regions within a tenancy. However, CIOS does not allow teams to use the same region twice within a tenancy (though they may use the same region twice within a realm&#x2014;in different tenancies). DAG <b>400</b> illustrates a version of DAG <b>300</b> from <figref idref="DRAWINGS">FIG. <b>3</b></figref>, expressed with tenancies and regions. This example is for an overlay service, where pre-prod ETs are in a prod region. A service enclave service would have the unstable and stable tenancies in release one. In DAG <b>400</b>, IAD is a regional airport code for Dulles airport in Washington, D.C., YYZ is a regional airport code for Toronto, Ontario, PHX, LHR, and FRA, are regional airport codes for Phoenix, London, and Frankfurt, respectively, and LUF and LFI are for two different air force bases.</p><p id="p-0064" num="0121">In one embodiment, CIOS and/or other techniques described herein are an improvement on each of Terraform (a declarative provisioning tool), Tanden, and the Oracle Deployment Orchestrator (ODO). Additionally, in some examples, CIOS and/or other techniques described herein can be implemented using at least portions of the Terraform, Tanden, and ODO tools.</p><p id="p-0065" num="0122">In certain embodiments, the CIOS described herein discloses techniques for rolling back infrastructure changes associated with infrastructure assets provisioned and/or deployed by CIOS. The infrastructure assets may include infrastructure resources such as, for instance, virtual private clouds, virtual machines, load balancers, databases, deployment configurations, infrastructure code, software applications and the like. In certain embodiments, the CIOS implements a rollback procedure for rolling back (i.e., restoring) a set of infrastructure assets to a previous state from a failure that occurs at any point during the provisioning and/or deployment process. Existing declarative provisioning tools (e.g., Terraform) do not have the ability to automatically handle rollback operations when a failure occurs during a provisioning and/or deployment process because these tools generally cannot keep track of previous configurations that were used previously to achieve a state prior to the current state. Since a rollback operation partially consists of applying a previous configuration, existing provisioning tools cannot perform rollbacks because they don't have access to any previous configurations. In other words, existing declarative provisioning tools are stateless with respect to previous invocations. They can keep track of a current view of the state of the resources they manage, but cannot keep track of a history of actions that led to that state.</p><p id="p-0066" num="0123">One technical improvement realized by the techniques described herein is the ability to provide a CIOS system with the ability to automatically handle rollbacks that existing declarative infrastructure provisioning tools are not designed to handle. The CIOS system described herein is capable of capturing a full history of configurations, so that prior configurations are available to be rolled back to. The CIOS system is capable of keeping track of a lineage of configurations, so that it can identify and access those configurations and use them again. The CIOS system keeps track of invocations (actions) including whether they are successful or not, so CIOS can, as a &#x201c;best guess&#x201d;, select the last successfully used configuration as the one to roll back to.</p><p id="p-0067" num="0124">Additionally, existing provisioning tools often require a user to provide inputs to a configuration to bind to the variables in the configuration. These tools generally cannot capture these inputs beyond using them to generate a plan that informs the tool about the changes it will make. Therefore, these tools cannot accurately replay configurations to try to get back to a previously good known state because they are not aware of what values to bind to those variables. The disclosed CIOS system, in addition to a history of invocations, can also keep track of those variable inputs, so that in addition to using a previous configuration to try to roll back to a known good state, it can use the same variables to achieve that state.</p><p id="p-0068" num="0125">In certain examples, CIOS implements a rollback plan for rolling back (i.e., restoring or reverting) a set of infrastructure assets defined in a plan to a previous state from a failure that occurs at any point during the provisioning and/or deployment process. In one example, CIOS implements a &#x201c;rollback plan&#x201d; for rolling back a provisioned set of infrastructure resources defined in a plan. In other examples, CIOS implements a &#x201c;rollback plan&#x201d; for rolling back a set of software artifacts (e.g., applications, infrastructure code) deployed on a set of provisioned infrastructure resources. The rollback plan implements a &#x201c;rollback operation&#x201d; to roll back the plan to a previous version that identifies a first state of the set of infrastructure assets defined in the plan prior to the execution of the plan. In certain examples, CIOS transmits a result associated with the execution of the rollback plan to a user of the CIOS. The result is indicative of a successful or failed execution of the rollback plan and is displayed via a user interface of the CIOS to the user.</p><p id="p-0069" num="0126"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts a block diagram <b>500</b> of an architecture for implementing at least some elements of the CIOS, according to at least one embodiment. The block diagram <b>500</b> shows at least portions of both a CIOS central <b>502</b> (e.g., CIOS central <b>102</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and a CIOS region <b>504</b>. The CIOS central <b>502</b> can include a control plane <b>506</b> (e.g., the control plane <b>110</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), a view/plan/approve service <b>508</b> (e.g., the view/plan/approve service <b>112</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), a change management service <b>510</b> (e.g., the change management service <b>114</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), a state ingester service <b>512</b> (e.g., the state ingester service <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and an apply plan/apply rollback plan service <b>509</b>.</p><p id="p-0070" num="0127">In certain embodiments, a user <b>514</b> may submit a &#x201c;plan creation request&#x201d; to the CIOS Central <b>502</b>. The &#x201c;plan creation request&#x201d; may include a configuration file that declaratively describes the configuration of a set of infrastructure assets (also referred to herein as &#x201c;infrastructure elements&#x201d;) to be created (e.g., provisioned) and/or deployed to one or more execution targets. An execution target as described herein may be associated with a region that comprises at least one physical location. The infrastructure assets may include, without limitation, infrastructure resources such as virtual private clouds (VPCs) (e.g., a potentially on-demand pool of configurable and/or shared computing resources), security group rules (that define how the security of the network will be set up), virtual machines (VMs), load balancers, databases, deployment configurations and so on and software artifacts (e.g., applications, infrastructure code) that are deployed on the infrastructure resources. In certain examples, the configuration file may describe how the infrastructure assets interact with one another and the relevant fields needed to create each infrastructure asset. For instance, the configuration file may describe a VPC resource and the fields required to create the VPC resource. As the infrastructure incrementally evolves, the user may update the configuration file to add new infrastructure elements and also reference the new elements with previously described elements in the infrastructure.</p><p id="p-0071" num="0128">The view/plan/approve service <b>508</b> in the CIOS Central <b>502</b> receives the &#x201c;plan creation request&#x201d; from user <b>514</b> (via LAN gateway <b>516</b>) and creates a &#x201c;plan&#x201d; based at least in part on the set of infrastructure assets defined in the configuration file. In certain examples, the plan may be scoped to &#x201c;provision a set of infrastructure resources&#x201d; to a region or to a subset of regions managed by the CIOS Central <b>502</b> and is referred to herein as an &#x201c;infrastructure release plan.&#x201d; In other examples, the plan may be scoped to &#x201c;deploy a set of software artifacts (i.e., applications)&#x201d; to a region or to a subset of regions managed by the CIOS Central <b>502</b> and is referred to herein as an &#x201c;application release plan.&#x201d; In some examples, an application release plan can include a first set of declarative instructions for provisioning a set of infrastructure resources to an execution target or a second set of declarative instructions for deploying a set of software artifacts (i.e., applications) on the set of provisioned infrastructure resources to the execution target.</p><p id="p-0072" num="0129">Once a plan has been created and/or generated as described above, the user <b>514</b> can approve the plan. The CIOS Central <b>502</b> then submits the approved plan to the apply plan/apply rollback plan service <b>509</b> which comprises instructions for executing the plan and executing a roll back plan for the plan. The apply plan/apply rollback plan service <b>509</b> transmits the approved plan to the CIOS Regional <b>504</b> (e.g., CIOS regional <b>202</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>), for execution via WAN gateway <b>518</b> (e.g., the WAN gateway <b>126</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>). In certain examples, the execution of the plan by CIOS Regional <b>504</b> may involve receiving a trigger from CIOS Central <b>502</b> to initiate and execute a rollback plan to restore the set of infrastructure assets defined in the plan to their original state. Details related to processing performed by the CIOS Regional <b>504</b> for executing a rollback plan are described below with respect to the flowcharts depicted in <figref idref="DRAWINGS">FIGS. <b>6</b>-<b>8</b></figref> and the accompanying description.</p><p id="p-0073" num="0130">In certain embodiments, the CIOS regional <b>520</b> can be a computing device that generates status reports and keeps track of tasks coming into the CIOS region <b>504</b>. The CIOS regional <b>520</b> can transmit tasks from a plan to a scheduler <b>522</b> (e.g., the scheduler <b>206</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>), which can be a computing device that can assign tasks to a worker <b>524</b> (e.g., the worker <b>210</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>), typically to a worker with the least amount of work. In some embodiments, the CIOS regional <b>520</b> and the scheduler <b>522</b> can be on the same computing device. The worker <b>524</b> can be a computing device that can execute tasks assigned by the scheduler <b>522</b>, as well as plugins, and the worker <b>524</b> may be part of a worker fleet, which can include many workers <b>524</b>. The worker <b>524</b> can interact with a CIOS container <b>526</b> (e.g., CIOS container <b>212</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>), which can exist within a docker <b>528</b> (e.g., the docker <b>214</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). CIOS container <b>526</b> can check for a difference in a desired state of an execution target compared to an actual state of the execution target related to the task assigned to the worker <b>524</b>. If CIOS container <b>526</b> identifies the difference, the worker <b>524</b> may execute the task, and if CIOS container <b>526</b> does not identify the difference, the worker <b>524</b> may not execute the task. By executing the task, an API call to cloud services can be made, and the API call may go through a signing proxy <b>530</b> (e.g., the signing proxy <b>216</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The signing proxy <b>530</b> can be a generic HTTP proxy, and the signing proxy <b>530</b> can control outgoing network traffic of the CIOS region <b>504</b>.</p><p id="p-0074" num="0131"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an example of a process <b>600</b> for executing a rollback plan based at least in part on receiving a trigger, according to certain embodiments. The processing depicted in <figref idref="DRAWINGS">FIG. <b>6</b></figref> may be implemented in software (e.g., code, instructions, program) executed by one or more processing units (e.g., processors, cores) of the respective systems, hardware, or combinations thereof. The software may be stored on a non-transitory storage medium (e.g., on a memory device). The process <b>600</b> presented in <figref idref="DRAWINGS">FIG. <b>6</b></figref> and described below is intended to be illustrative and non-limiting. Although <figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts the various processing steps occurring in a particular sequence or order, this is not intended to be limiting. In certain alternative embodiments, the steps may be performed in some different order or some steps may also be performed in parallel. In certain embodiments, such as in the embodiment depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the processing depicted in <figref idref="DRAWINGS">FIG. <b>6</b></figref> may be performed by CIOS Regional <b>504</b>.</p><p id="p-0075" num="0132">In certain embodiments, processing is initiated at block <b>602</b> when CIOS Regional <b>504</b> receives a plan comprising a set of instructions associated with a set of infrastructure assets of an execution target. In certain examples, the set of instructions comprise declarative instructions that declaratively describe the configuration of the set of infrastructure assets and the manner in which the assets interact with one another.</p><p id="p-0076" num="0133">At block <b>604</b>, CIOS Regional <b>504</b> identifies a first state of the set of infrastructure assets. For example, the first state may correspond to an initial state of a set of infrastructure resources defined in the plan prior to execution of the plan.</p><p id="p-0077" num="0134">At block <b>606</b>, CIOS Regional <b>504</b> executes the set of instructions in the plan to achieve a second state for the set of infrastructure assets. For example, the second state may corresponds to a state of a set of infrastructure resources in the plan after execution of the plan.</p><p id="p-0078" num="0135">At block <b>608</b>, based at least in part on the executing performed in block <b>606</b>, CIOS Regional <b>504</b> receives a trigger (from CIOS Central <b>502</b>) for rolling back the plan to restore the set of infrastructure assets in the plan to the first state. In some instances, a trigger identifies a configuration parameter in the configuration file of the plan that indicates that the plan is being executed in a pre-production test environment. Based at least in part on the identification of the configuration parameter, CIOS Central <b>502</b> transmits instructions to CIOS Regional <b>504</b> to automatically execute a rollback plan for the plan to determine if the infrastructure assets can be safely rolled back. In other instances, a trigger may involve the identification (by CIOS Central <b>502</b>) of an &#x201c;error&#x201d; (failure) in the execution of the plan in an actual production environment which causes a rollback plan for the plan to be executed. By way of example, an error may be detected during the provisioning of an infrastructure resource or during the deployment of a software artifact. For instance, the error may be caused as a result of an update to the configuration of an infrastructure resource that is made by the user during the provisioning process which causes the rollback plan to be executed. Details related to the processing performed by CIOS Regional <b>504</b> based at least in part on receiving a trigger from CIOS Central <b>502</b> for rolling back a plan are described below with respect to the flowcharts depicted in <figref idref="DRAWINGS">FIGS. <b>7</b> and <b>8</b></figref> and the accompanying description.</p><p id="p-0079" num="0136">At block <b>610</b>, based at least in part on receiving the trigger in block <b>608</b>, CIOS Regional <b>504</b> executes the rollback plan for the plan.</p><p id="p-0080" num="0137">At block <b>612</b>, CIOS Regional <b>504</b> transmits a result associated with the execution of the rollback plan to CIOS Central <b>502</b>. In certain embodiments, and as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a user interface (UI) <b>900</b> may be presented to a user (e.g., user <b>514</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) by CIOS Central <b>502</b> to display the result associated with the execution of the rollback plan. The result may indicate a successful or a failed execution of the rollback plan to the user.</p><p id="p-0081" num="0138"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an example of a process <b>700</b> for receiving a trigger that causes an execution of a rollback plan for a plan executed in a pre-production test environment, according to certain embodiments. The processing depicted in <figref idref="DRAWINGS">FIG. <b>7</b></figref> may be implemented in software (e.g., code, instructions, program) executed by one or more processing units (e.g., processors, cores) of the respective systems, hardware, or combinations thereof. The software may be stored on a non-transitory storage medium (e.g., on a memory device). The process <b>700</b> presented in <figref idref="DRAWINGS">FIG. <b>7</b></figref> and described below is intended to be illustrative and non-limiting. Although <figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts the various processing steps occurring in a particular sequence or order, this is not intended to be limiting. In certain alternative embodiments, the steps may be performed in some different order or some steps may also be performed in parallel.</p><p id="p-0082" num="0139">In certain embodiments, the processing depicted in <figref idref="DRAWINGS">FIG. <b>7</b></figref> is initiated at block <b>702</b> when CIOS Regional <b>504</b> receives a trigger from CIOS Central <b>502</b> for rolling back the plan (as a result of the processing performed in block <b>608</b>). As previously described, in some instances, the trigger identifies a configuration parameter in the configuration file that indicates that that the plan is being executed in a pre-production test environment and that a rollback plan for the plan should be tested (i.e., executed) to rollback (i.e., revert) the plan to its previous (first) state that existed prior to the execution of the plan. Based at least in part on the identification of the configuration parameter, CIOS Central <b>502</b> transmits instructions to CIOS Regional <b>504</b> to automatically execute a rollback plan for the plan to determine if the infrastructure assets can be safely rolled back. In certain examples, the configuration parameter is a &#x201c;practice rollback flag&#x201d; parameter that is &#x201c;marked&#x201d; or &#x201c;set&#x201d; in the configuration file that indicates to CIOS Regional <b>504</b> that the plan is being executed in a pre-production configuration environment, i.e., prior to its implementation in an actual production environment. When CIOS Regional <b>504</b> sees that the &#x201c;practice rollback flag&#x201d; configuration parameter is &#x201c;marked&#x201d; or &#x201c;set&#x201d; in the configuration file, it automatically executes a rollback plan to determine if the plan can be safely &#x201c;rolled back&#x201d; or &#x201c;reverted&#x201d; to a previous version that existed prior to the execution of the plan.</p><p id="p-0083" num="0140">At block <b>704</b>, CIOS Regional <b>504</b> tests the rollback plan by automatically executing the rollback plan. In certain examples, testing the rollback plan includes performing the following operations:</p><p id="p-0084" num="0141">(1) Determining (at block <b>706</b>) that a first roll forward (i.e., first execution of the plan) was successful.</p><p id="p-0085" num="0142">(2) Performing a rollback operation (at block <b>708</b>) that rolls back (i.e., reverts) the plan to a previous version that identifies the first state of the set of infrastructure assets defined in the plan prior to the first execution of the plan; and</p><p id="p-0086" num="0143">(3) Performing a second roll-forward operation (at block <b>710</b>) that re-executes the plan to achieve the second state of the set of infrastructure assets.</p><p id="p-0087" num="0144">As noted above, in certain examples, the plan may be an &#x201c;infrastructure release plan&#x201d; that is scoped to &#x201c;provision a set of infrastructure resources&#x201d; to a region or to a subset of regions managed by CIOS Central <b>502</b>. In this case, testing a rollback plan for the &#x201c;infrastructure release plan&#x201d; (e.g., at block <b>704</b>) may involve determining if a provisioned set of infrastructure resources can be safely and successfully rolled back to a previous version of the &#x201c;infrastructure release plan&#x201d; followed by a successful re-execution of the plan to achieve the second state of the set of infrastructure resources (i.e., the provisioned set of infrastructure resources). In other examples, the plan may be an &#x201c;application release plan&#x201d; that is scoped to &#x201c;deploy a set of software artifacts (i.e., applications)&#x201d; to a region or to a subset of regions managed by CIOS Central <b>502</b>. In this case, testing a rollback plan for the &#x201c;application release plan&#x201d; (e.g., at block <b>704</b>) may involve determining if a deployed set of software artifacts can be safely and successfully rolled back to a previous version of the &#x201c;application release plan&#x201d; followed by a successful re-execution of the plan.</p><p id="p-0088" num="0145">At block <b>710</b>, CIOS Regional <b>504</b> transmits a result associated with the execution of the rollback plan to CIOS Central <b>502</b>. In certain embodiments, and as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a user interface (UI) <b>900</b> may be presented to a user (e.g., user <b>514</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) by CIOS Central <b>502</b> to display the result associated with the execution of the rollback plan. The result may indicate a successful or a failed execution of the rollback plan to the user.</p><p id="p-0089" num="0146"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts an example of a process <b>800</b> for detecting a trigger that causes an execution of a rollback plan of a plan executed in an actual production environment, according to certain embodiments. The processing depicted in <figref idref="DRAWINGS">FIG. <b>8</b></figref> may be implemented in software (e.g., code, instructions, program) executed by one or more processing units (e.g., processors, cores) of the respective systems, hardware, or combinations thereof. The software may be stored on a non-transitory storage medium (e.g., on a memory device). The process <b>800</b> presented in <figref idref="DRAWINGS">FIG. <b>8</b></figref> and described below is intended to be illustrative and non-limiting. Although <figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts the various processing steps occurring in a particular sequence or order, this is not intended to be limiting. In certain alternative embodiments, the steps may be performed in some different order or some steps may also be performed in parallel.</p><p id="p-0090" num="0147">In certain embodiments, the processing depicted in <figref idref="DRAWINGS">FIG. <b>8</b></figref> is initiated at block <b>802</b> when CIOS Regional <b>504</b> receives a trigger for rolling back the plan (as a result of the processing performed in block <b>608</b>). In this embodiment, the trigger identifies an &#x201c;error&#x201d; that is detected by CIOS Central <b>502</b> during the execution of the plan (e.g., during provisioning of an infrastructure resource at the execution target or during deployment of a software artifact at the execution target). As an example, the error may occur as a result of an update made by a user <b>514</b> to the configuration of an infrastructure resource during execution of the plan. For instance, the user may update a configuration of an infrastructure resource (e.g., a load balancer) in the configuration file of a plan which in turn may cause a failure of the execution of the plan while the declarative provisioner is attempting to provision the infrastructure resource with the updated configuration.</p><p id="p-0091" num="0148">In response to receiving the trigger, at block <b>804</b>, CIOS Regional <b>504</b> determines if a rollback plan for the plan can be automatically executed. A rollback plan can be automatically executed in instances when CIOS Regional <b>504</b> can determine the configuration values to roll back to. However, a rollback plan cannot be automatically executed when there have been no previously successful invocations for the target (i.e., is no known good configuration to roll back to). A rollback plan cannot be automatically executed in instances when a new version of a deployed software artifact (i.e., application/code) changes a database schema to a different schema that an earlier version of the software artifact is not aware of or cannot support. Other instances in which a rollback plan cannot be automatically executed include, but are not limited to, rollback operations that result in the deployment of unsupported software, when a version of software to roll back to is no longer supported (e.g. because a service the application depends on has had its endpoint, protocol, or API changed, and the old version to rollback to uses a deprecated endpoint, protocol, or API), when rolling back would destroy stateful infrastructure, e.g. if rolling back would delete a database that was created during the roll forward and which now contains customer data and so on.</p><p id="p-0092" num="0149">If a rollback plan cannot be automatically executed, at block <b>808</b>, CIOS Regional <b>504</b> transmits an alert to a user of CIOS Central <b>502</b> to indicate the error (i.e., a failure) in the execution of the plan. Various different techniques may be used to transmit an alert to a user. In certain embodiments, and as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a user interface (UI) <b>900</b> may be presented to the user (e.g., user <b>514</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) by CIOS Central <b>502</b> as part of the workflow performed by the apply plan/apply rollback plan service <b>509</b>. In certain examples, and as will be described in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the UI may be updated to display alert information (e.g., a failed status <b>946</b>) along with other information associated with the execution of a plan. In response to the alert information, user <b>514</b> can manually inspect the executed plan to determine if the plan can be safely rolled back or &#x201c;reverted&#x201d; to a previous version/state of the infrastructure resources that existed prior to the execution of the plan.</p><p id="p-0093" num="0150">At block <b>810</b>, user input from a user is received. For example, as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a user <b>514</b> may use UI <b>900</b> to select an option (e.g., <b>947</b>) to send a request to CIOS Central <b>502</b> to execute a rollback plan for the plan by selecting a &#x201c;rollback plan&#x201d; option via the UI.</p><p id="p-0094" num="0151">At block <b>812</b>, CIOS Regional <b>504</b> executes the rollback plan in response to the user input. In certain examples, executing the rollback plan involves performing the following operations:</p><p id="p-0095" num="0152">(1) A rollback operation that rolls back (i.e., reverts) the plan to a previous version that identifies the first state of the set of infrastructure assets defined in the plan prior to the execution of the plan; and</p><p id="p-0096" num="0153">(2) A roll-forward operation that re-executes the plan to achieve the second state of the set of infrastructure assets.</p><p id="p-0097" num="0154">Additionally, in some examples, a user may be able to specify different deployment orderings in the execution of a plan which in turn can determine the order of execution of the rollback and/or roll-forward operations executed for the plan. For instance, a roll-forward operation may be configured with one deployment ordering, but a rollback operation may be configured with a different deployment ordering. Alternatively, or in addition, a rollback operation may include a first deployment ordering, and subsequent rollback operations may be configured with different orderings in the rollback plan. By way of example, a deployment ordering may specify a dependency between a set of infrastructure assets (e.g., applications) to be provisioned and/or deployed as part of executing a roll forward operation. For instance, a deployment ordering in a plan may specify that application A should be deployed prior to applications B and C since applications B and C both depend on application A. However, a rollback operation may be executed in the reverse order by executing rollback operations to restore the state of the infrastructure resources associated with the deployment of applications C and B respectively prior to executing a rollback operation to restore the state of the infrastructure resources associated with application A.</p><p id="p-0098" num="0155">In certain examples, the rollback plan executed by CIOS Regional <b>504</b> may be executed for an &#x201c;infrastructure release plan&#x201d; or for an &#x201c;application release plan.&#x201d; A rollback plan for an &#x201c;infrastructure release plan&#x201d; may involve determining if a provisioned set of infrastructure resources can be safely and successfully rolled back to a previous version of the &#x201c;infrastructure release plan&#x201d; followed by a successful re-execution (roll-forward) of the plan to achieve the second state of the set of infrastructure resources (i.e., the provisioned set of infrastructure resources). A rollback plan for an &#x201c;application release plan&#x201d; may involve determining if a deployed set of software artifacts can be safely and successfully rolled back to a previous version of the &#x201c;application release plan&#x201d; followed by a successful re-execution (roll-forward) of the plan to achieve the second state of the deployed set of software artifacts.</p><p id="p-0099" num="0156">At block <b>814</b>, the result of the execution of the rollback plan is transmitted to the user via the user interface of CIOS Central <b>502</b>. By way of example, the result may indicate a successful or a failed execution of the rollback plan to the user.</p><p id="p-0100" num="0157">If a rollback plan can be automatically executed at block <b>804</b>, in certain examples, at block <b>806</b>, CIOS Regional <b>504</b> automatically executes the rollback plan and transmits the result of the execution to a user via a user interface of CIOS Central <b>502</b>.</p><p id="p-0101" num="0158"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts a schematic diagram of an example user interface (UI) <b>900</b>, according to at least one embodiment. The UI <b>900</b> can include any suitable combination of an infrastructure area <b>902</b>, an application area <b>904</b>, and a task area <b>906</b>. The UI <b>900</b> can include the infrastructure area <b>902</b>, the application area <b>904</b>, and the task area <b>906</b> as depicted and arranged in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, or these areas may be differently arranged within the UI <b>900</b>.</p><p id="p-0102" num="0159">The infrastructure area <b>902</b> can be located at any suitable location of the UI <b>900</b>. As depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the infrastructure area <b>902</b> is positioned in the upper left corner of the UI <b>900</b>. The infrastructure area <b>902</b> can include infrastructure release data (e.g., a release name, a number of execution targets to which the infrastructure components of the release are to be provisioned, one or more indicators of progress associated with performing the release, an indicator of the latest infrastructure release, and the like) corresponding to any suitable number of infrastructure releases. As noted above in the description of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a &#x201c;release&#x201d; may be used to refer to a specific version of a flock configuration. A release contains a plan per region and metadata describing region ordering. Each plan comprises a set of operations (set of declarative instructions) a declarative provisioner would take to realize the flock configuration in that region.</p><p id="p-0103" num="0160">As depicted, the infrastructure area <b>902</b> presents infrastructure release data corresponding to six releases entitled &#x201c;Lovable,&#x201d; &#x201c;Excited,&#x201d; &#x201c;Elegant,&#x201d; &#x201c;Nuclear,&#x201d; &#x201c;Strange,&#x201d; and &#x201c;Aqueous.&#x201d; Entry <b>908</b> presents infrastructure release data corresponding to the release &#x201c;Lovable&#x201d; and includes a percentage (e.g., 75%) and a progress bar <b>910</b>, each indicating that 75% of the release has been performed. It should be appreciated that the percentage and the progress bar <b>910</b> are example user interface elements for depicting release progress, but that any suitable user interface element may be utilized to represent such progress (e.g., visually, textually, etc.). By way of example, the progress of a corresponding infrastructure release may additionally, or alternatively, be represented by a number, a chart, or any other suitable user interface element for displaying progress. In some embodiments, a particular infrastructure release may be identified as a latest release using label <b>912</b> or another suitable user interface element including an icon, a checkmark, or the like. As depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, entry <b>908</b> includes a target count indicating a number of execution targets (e.g., <b>15</b>) to which infrastructure components corresponding to the Lovable release are to be provisioned. It is contemplated that the infrastructure release data provided in each entry of the infrastructure area <b>902</b> may be differently arranged and may include more or less attributes of the infrastructure release data corresponding to each release than the number of attributes depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0104" num="0161">In some embodiments, the UI <b>900</b> may include the application area <b>904</b>. The application area <b>904</b> can be located at any suitable location of the UI <b>900</b>. In the example depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the application area <b>904</b> is positioned in the upper right corner of the UI <b>900</b>. The application area <b>904</b> can include application release data (e.g., an application release name, a number of execution targets to which software artifacts of the release are to be deployed, one or more indicators of progress associated with performing the release (e.g., deploying the software artifacts), an indicator of the latest application release, and the like) corresponding to any suitable number of application releases. As depicted, the application area <b>904</b> presents application release data corresponding to six application releases entitled &#x201c;Chuck,&#x201d; &#x201c;Bob,&#x201d; &#x201c;Felipe,&#x201d; &#x201c;Asa,&#x201d; &#x201c;Strange,&#x201d; and &#x201c;Errol.&#x201d; Entry <b>914</b> presents application release data corresponding to the application release &#x201c;Chuck&#x201d; and includes a percentage (e.g., 60%) and a progress bar <b>916</b> indicating that 60% of the application release has been performed. It should be appreciated that the percentage and the progress bar <b>916</b> are example user interface elements for depicting application release progress, but that any suitable user interface element may be utilized to represent such progress (e.g., visually, textually, etc.). By way of example, the progress of a corresponding application release may additionally, or alternatively be represented by a number, a chart, or any other suitable user interface element for displaying progress. In some embodiments, a particular infrastructure release may be identified as a latest release using label <b>918</b> or another suitable user interface element including an icon, a checkmark, or the like. As depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, entry <b>914</b> includes a target count indicating a number of execution targets (e.g., 12) to which artifacts (e.g., application code) corresponding to the Chuck release are to be provisioned. It is contemplated that the application release data provided in each entry of the application area <b>904</b> may be differently arranged and may include more or fewer attributes of the application release data corresponding to each release.</p><p id="p-0105" num="0162">In some embodiments, the UI <b>900</b> may include the task area <b>906</b>. The task area <b>906</b> can be located at any suitable location of the UI <b>900</b>. In the example depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, it is positioned toward the lower half of the UI <b>900</b>. The task area <b>906</b> can include target release information corresponding to each execution target of a flock. Each execution target of the examples provided herein may correspond to a region. A region in the examples herein may comprise at least one physical location. The target release information can include an identifier for an infrastructure release, a status (e.g., a visual representation of status) corresponding to the progress of provisioning to the execution target the infrastructure components of the infrastructure release, an identifier for an application release, and a status (e.g., a visual representation of status) indicating the progress of deploying artifacts (e.g., application code) corresponding to that application release. The task area <b>906</b> can include any suitable number and combination of columns such as an execution target column <b>920</b>, infrastructure change column <b>922</b>, and/or application change column <b>924</b>. The execution target column <b>920</b> can be organized by phases, where phases can indicate an order by which releases (e.g., including provisioning a set of infrastructure components and/or deploying a set of software artifacts) are to be performed across execution targets. In the UI <b>900</b>, there are four phases depicted: phase I, phase II, phase III, and phase IV. In some embodiments, phase I must be completed before the deployment enters phase II, phase II before phase III, and so on. As depicted phases I and II include one execution target each, phase III includes 4 execution targets, and phase IV includes 12 execution targets. The execution targets can be applied in parallel.</p><p id="p-0106" num="0163">Each row of the task area <b>906</b> may correspond to a phase and/or an execution target. By way of example, entry <b>926</b> may correspond to a phase (e.g., phase I) and a single execution target of that phase. Entry <b>928</b> may correspond to phase III. Entry <b>930</b> may correspond to phase IV. By default, the entries corresponding to the execution targets of a phase may be hidden. Selection of an entry corresponding to a phase may cause rows corresponding to corresponding execution targets of that phase to appear. By way of example, entry <b>932</b> may be initially hidden and only entry <b>930</b> may be displayed. In some embodiments, once entry <b>930</b> is selected, entry <b>932</b> may be presented. The entry <b>932</b> depicts a particular execution target/region of phase IV to which an infrastructure release (e.g., &#x201c;Lovable&#x201d;) and an application release (e.g., &#x201c;Chuck&#x201d;) correspond.</p><p id="p-0107" num="0164">The infrastructure change column <b>922</b> can include a name of an infrastructure release and a status of the infrastructure release for each phase or execution target. In some embodiments, a phase which includes more than one execution target may correspond to one or more infrastructure and/or application releases. Thus, in some embodiments, infrastructure change column <b>922</b> may include data indicating a number of differing infrastructure releases utilized by the execution targets of a phase. By way of example, indicator <b>934</b> may be presented to indicate that there are three different infrastructure releases to be released to the execution targets of phase IV. Status indicators <b>936</b> may also be presented within infrastructure change column to indicate a status for each infrastructure release to each execution target of the phase. The status indicators <b>936</b> may individually indicate that releases to one or more execution targets has encountered an error, is in progress, or has completed. Similarly, application change column <b>924</b> can include indicator <b>938</b> to indicate one application release is to be utilized for every execution target of phase IV and status indicator <b>940</b> to indicate a status of each application release for each execution target of phase IV. For entries corresponding to a single execution target (e.g., entry <b>932</b>), the infrastructure change column <b>922</b> may present the name of the infrastructure release and a status. In some embodiments, the status (e.g., &#x201c;Done,&#x201d; &#x201c;Failed,&#x201d; &#x201c;In Progress,&#x201d; &#x201c;Pending Review,&#x201d; or the like) may be presented textually as depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref> or the status may be presented differently. For entries corresponding to a single execution target, the application change column <b>924</b> can similarly include a name of an application release (e.g., &#x201c;Chuck&#x201d;) and a status of the application release (e.g., &#x201c;Done,&#x201d; &#x201c;Failed,&#x201d; &#x201c;In Progress,&#x201d; &#x201c;Pending Review,&#x201d; or the like). The statuses displayed for an application release can be the same or different from the statuses provided for an infrastructure release. In some embodiments, selecting an entry (e.g., selecting entry <b>942</b>) may cause the entry to be visually modified (e.g., a background of the entry may be modified) to indicate the selection. One example modification corresponding to selection of entry <b>942</b> is depicted in <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0108" num="0165">In some embodiments, if the release fails in at least one aspect, the status of this failure may be indicated at the UI <b>900</b>. By way of example, a failure of infrastructure component provisioning is indicated at <b>946</b> and a failure of a software artifact deployment is indicated at <b>948</b>. In some embodiments, in response to detecting a failure of an infrastructure component provisioning, user input may be received to execute a rollback of an infrastructure release by selecting an &#x201c;infrastructure rollback plan&#x201d; button <b>947</b> via the UI <b>900</b>. Similarly, in response to detecting a failure of a software artifact deployment, user input may be received to execute a rollback of an application release by selecting an &#x201c;application rollback plan&#x201d; button <b>949</b> via the UI <b>900</b>. In other examples, in response to detecting a failure, the user may additionally be provided other options such as, for instance, to perform a remedial action (e.g., reattempting the provisioning and/or deployment task corresponding to the execution target, canceling the provisioning and/or deployment task corresponding to the execution target, modifying the provisioning and/or deployment task corresponding to the execution target, and the like).</p><heading id="h-0006" level="2">Illustrative Systems</heading><p id="p-0109" num="0166"><figref idref="DRAWINGS">FIGS. <b>10</b>-<b>12</b></figref> illustrate aspects of example environments for implementing aspects of the present disclosure in accordance with various embodiments. <figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts a simplified diagram of a distributed system <b>1000</b> for implementing an embodiment of the present disclosure. In the illustrated embodiment, the distributed system <b>1000</b> includes one or more client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and <b>1008</b>, which are configured to execute and operate a client application such as a web browser, proprietary client (e.g., Oracle Forms), or the like over one or more network(s) <b>1010</b>. The server <b>1012</b> may be communicatively coupled with the remote client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and <b>1008</b> via network <b>1010</b>.</p><p id="p-0110" num="0167">In various embodiments, the server <b>1012</b> may be adapted to run one or more services or software applications such as services and applications that provide resource provisioning and deployment services. In certain embodiments, the server <b>1012</b> may also provide other services or software applications can include non-virtual and virtual environments. In some embodiments, these services may be offered as web-based or cloud services or under a Software as a Service (SaaS) model to the users of the client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and/or <b>1008</b>. Users operating the client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and/or <b>1008</b> may in turn utilize one or more client applications to interact with the server <b>1012</b> to utilize the services provided by these components.</p><p id="p-0111" num="0168">In the configuration depicted in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the software components <b>1018</b>, <b>1020</b> and <b>1022</b> of system <b>1000</b> are shown as being implemented on the server <b>1012</b>. In other embodiments, one or more of the components of the system <b>1000</b> and/or the services provided by these components may also be implemented by one or more of the client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and/or <b>1008</b>. Users operating the client computing devices may then utilize one or more client applications to use the services provided by these components. These components may be implemented in hardware, firmware, software, or combinations thereof. It should be appreciated that various different system configurations are possible, which may be different from distributed system <b>1000</b>. The embodiment shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> is thus one example of a distributed system for implementing an embodiment system and is not intended to be limiting.</p><p id="p-0112" num="0169">The client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and/or <b>1008</b> may include various types of computing systems. For example, client device may include portable handheld devices (e.g., an iPhone&#xae;, cellular telephone, an iPad&#xae;, computing tablet, a personal digital assistant (PDA)) or wearable devices (e.g., a Google Glass&#xae; head mounted display), running software such as Microsoft Windows Mobile&#xae;, and/or a variety of mobile operating systems such as iOS, Windows Phone, Android, BlackBerry <b>10</b>, Palm OS, and the like. The devices may support various applications such as various Internet-related apps, e-mail, short message service (SMS) applications, and may use various other communication protocols. The client computing devices may also include general purpose personal computers including, by way of example, personal computers and/or laptop computers running various versions of Microsoft Windows&#xae;, Apple Macintosh&#xae;, and/or Linux operating systems. The client computing devices can be workstation computers running any of a variety of commercially-available UNIX&#xae; or UNIX-like operating systems, including without limitation the variety of GNU/Linux operating systems, such as for example, Google Chrome OS. Client computing devices may also include electronic devices such as a thin-client computer, an Internet-enabled gaming system (e.g., a Microsoft Xbox gaming console with or without a Kinect&#xae; gesture input device), and/or a personal messaging device, capable of communicating over the network(s) <b>1010</b>.</p><p id="p-0113" num="0170">Although distributed system <b>1000</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> is shown with four client computing devices, any number of client computing devices may be supported. Other devices, such as devices with sensors, etc., may interact with the server <b>1012</b>.</p><p id="p-0114" num="0171">The network(s) <b>1010</b> in the distributed system <b>1000</b> may be any type of network familiar to those skilled in the art that can support data communications using any of a variety of available protocols, including without limitation TCP/IP (transmission control protocol/Internet protocol), SNA (systems network architecture), IPX (Internet packet exchange), AppleTalk, and the like. Merely by way of example, the network(s) <b>1010</b> can be a local area network (LAN), networks based at least in part on Ethernet, Token-Ring, a wide-area network, the Internet, a virtual network, a virtual private network (VPN), an intranet, an extranet, a public switched telephone network (PSTN), an infra-red network, a wireless network (e.g., a network operating under any of the Institute of Electrical and Electronics (IEEE) 1002.11 suite of protocols, Bluetooth&#xae;, and/or any other wireless protocol), and/or any combination of these and/or other networks.</p><p id="p-0115" num="0172">The server <b>1012</b> may be composed of one or more general purpose computers, specialized server computers (including, by way of example, PC (personal computer) servers, UNIX&#xae; servers, mid-range servers, mainframe computers, rack-mounted servers, etc.), server farms, server clusters, or any other appropriate arrangement and/or combination. The server <b>1012</b> can include one or more virtual machines running virtual operating systems, or other computing architectures involving virtualization. One or more flexible pools of logical storage devices can be virtualized to maintain virtual storage devices for the server. Virtual networks can be controlled by the server <b>1012</b> using software defined networking. In various embodiments, the server <b>1012</b> may be adapted to run one or more services or software applications described in the foregoing disclosure. For example, the server <b>1012</b> may correspond to a server for performing processing as described above according to an embodiment of the present disclosure.</p><p id="p-0116" num="0173">The server <b>1012</b> may run an operating system including any of those discussed above, as well as any commercially available server operating system. Server <b>1012</b> may also run any of a variety of additional server applications and/or mid-tier applications, including HTTP (hypertext transport protocol) servers, FTP (file transfer protocol) servers, CGI (common gateway interface) servers, JAVA&#xae; servers, database servers, and the like. Example database servers include without limitation those commercially available from Oracle, Microsoft, Sybase, IBM (International Business Machines), and the like.</p><p id="p-0117" num="0174">In some implementations, the server <b>1012</b> may include one or more applications to analyze and consolidate data feeds and/or event updates received from users of the client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and <b>1008</b>. As an example, data feeds and/or event updates may include, but are not limited to, Twitter&#xae; feeds, Facebook&#xae; updates or real-time updates received from one or more third party information sources and continuous data streams, which may include real-time events related to sensor data applications, financial tickers, network performance measuring tools (e.g., network monitoring and traffic management applications), clickstream analysis tools, automobile traffic monitoring, and the like. The server <b>1012</b> may also include one or more applications to display the data feeds and/or real-time events via one or more display devices of the client computing devices <b>1002</b>, <b>1004</b>, <b>1006</b>, and <b>1008</b>.</p><p id="p-0118" num="0175">The distributed system <b>1000</b> may also include one or more databases <b>1014</b> and <b>1016</b>. These databases may provide a mechanism for storing information such as user identity information, configuration files, state information and other information used by embodiments of the present disclosure. Databases <b>1014</b> and <b>1016</b> may reside in a variety of locations. By way of example, one or more of databases <b>1014</b> and <b>1016</b> may reside on a non-transitory storage medium local to (and/or resident in) the server <b>1012</b>. Alternatively, the databases <b>1014</b> and <b>1016</b> may be remote from the server <b>1012</b> and in communication with the server <b>1012</b> via a network-based or dedicated connection. In one set of embodiments, the databases <b>1014</b> and <b>1016</b> may reside in a storage-area network (SAN). Similarly, any necessary files for performing the functions attributed to the server <b>1012</b> may be stored locally on the server <b>1012</b> and/or remotely, as appropriate. In one set of embodiments, the databases <b>1014</b> and <b>1016</b> may include relational databases, such as databases provided by Oracle, that are adapted to store, update, and retrieve data in response to SQL-formatted commands.</p><p id="p-0119" num="0176"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates an example computer system <b>1100</b> that may be used to implement an embodiment of the present disclosure. In some embodiments, computer system <b>1100</b> may be used to implement any of the various servers and computer systems described above. As shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, computer system <b>1100</b> includes various subsystems including a processing subsystem <b>1104</b> that communicates with a number of peripheral subsystems via a bus subsystem <b>1102</b>. These peripheral subsystems may include a processing acceleration unit <b>1106</b>, an I/O subsystem <b>1108</b>, a storage subsystem <b>1118</b> and a communications subsystem <b>1124</b>. Storage subsystem <b>1118</b> may include tangible computer-readable storage media <b>1122</b> and a system memory <b>1110</b>.</p><p id="p-0120" num="0177">Bus subsystem <b>1102</b> provides a mechanism for letting the various components and subsystems of computer system <b>1100</b> communicate with each other as intended. Although bus subsystem <b>1102</b> is shown schematically as a single bus, alternative embodiments of the bus subsystem may utilize multiple buses. Bus subsystem <b>1102</b> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. For example, such architectures may include an Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus, which can be implemented as a Mezzanine bus manufactured to the IEEE P1386.1 standard, and the like.</p><p id="p-0121" num="0178">Processing subsystem <b>1104</b> controls the operation of computer system <b>1100</b> and may comprise one or more processing units <b>1132</b>, <b>1134</b>, etc. A processing unit may include be one or more processors, including single core or multicore processors, one or more cores of processors, or combinations thereof. In some embodiments, processing subsystem <b>1104</b> can include one or more special purpose co-processors such as graphics processors, digital signal processors (DSPs), or the like. In some embodiments, some or all of the processing units of processing subsystem <b>1104</b> can be implemented using customized circuits, such as application specific integrated circuits (ASICs), or field programmable gate arrays (FPGAs).</p><p id="p-0122" num="0179">In some embodiments, the processing units in processing subsystem <b>1104</b> can execute instructions stored in system memory <b>1110</b> or on computer readable storage media <b>1122</b>. In various embodiments, the processing units can execute a variety of programs or code instructions and can maintain multiple concurrently executing programs or processes. At any given time, some or all of the program code to be executed can be resident in system memory <b>1110</b> and/or on computer-readable storage media <b>1110</b> including potentially on one or more storage devices. Through suitable programming, processing subsystem <b>1104</b> can provide various functionalities described above for dynamically modifying documents (e.g., webpages) responsive to usage patterns.</p><p id="p-0123" num="0180">In certain embodiments, a processing acceleration unit <b>1106</b> may be provided for performing customized processing or for off-loading some of the processing performed by processing subsystem <b>1104</b> so as to accelerate the overall processing performed by computer system <b>1100</b>.</p><p id="p-0124" num="0181">I/O subsystem <b>1108</b> may include devices and mechanisms for inputting information to computer system <b>1100</b> and/or for outputting information from or via computer system <b>1100</b>. In general, use of the term &#x201c;input device&#x201d; is intended to include all possible types of devices and mechanisms for inputting information to computer system <b>1100</b>. User interface input devices may include, for example, a keyboard, pointing devices such as a mouse or trackball, a touchpad or touch screen incorporated into a display, a scroll wheel, a click wheel, a dial, a button, a switch, a keypad, audio input devices with voice command recognition systems, microphones, and other types of input devices. User interface input devices may also include motion sensing and/or gesture recognition devices such as the Microsoft Kinect&#xae; motion sensor that enables users to control and interact with an input device, the Microsoft Xbox&#xae; 360 game controller, devices that provide an interface for receiving input using gestures and spoken commands. User interface input devices may also include eye gesture recognition devices such as the Google Glass&#xae; blink detector that detects eye activity (e.g., &#x201c;blinking&#x201d; while taking pictures and/or making a menu selection) from users and transforms the eye gestures as input into an input device (e.g., Google Glass&#xae;). Additionally, user interface input devices may include voice recognition sensing devices that enable users to interact with voice recognition systems (e.g., Siri&#xae; navigator), through voice commands.</p><p id="p-0125" num="0182">Other examples of user interface input devices include, without limitation, three dimensional (3D) mice, joysticks or pointing sticks, gamepads and graphic tablets, and audio/visual devices such as speakers, digital cameras, digital camcorders, portable media players, webcams, image scanners, fingerprint scanners, barcode reader 3D scanners, 3D printers, laser rangefinders, and eye gaze tracking devices. Additionally, user interface input devices may include, for example, medical imaging input devices such as computed tomography, magnetic resonance imaging, position emission tomography, medical ultrasonography devices. User interface input devices may also include, for example, audio input devices such as MIDI keyboards, digital musical instruments and the like.</p><p id="p-0126" num="0183">User interface output devices may include a display subsystem, indicator lights, or non-visual displays such as audio output devices, etc. The display subsystem may be a cathode ray tube (CRT), a flat-panel device, such as that using a liquid crystal display (LCD) or plasma display, a projection device, a touch screen, and the like. In general, use of the term &#x201c;output device&#x201d; is intended to include all possible types of devices and mechanisms for outputting information from computer system <b>1100</b> to a user or other computer. For example, user interface output devices may include, without limitation, a variety of display devices that visually convey text, graphics and audio/video information such as monitors, printers, speakers, headphones, automotive navigation systems, plotters, voice output devices, and modems.</p><p id="p-0127" num="0184">Storage subsystem <b>1118</b> provides a repository or data store for storing information that is used by computer system <b>1100</b>. Storage subsystem <b>1118</b> provides a tangible non-transitory computer-readable storage medium for storing the basic programming and data constructs that provide the functionality of some embodiments. Software (programs, code modules, instructions) that when executed by processing subsystem <b>1104</b> provide the functionality described above may be stored in storage subsystem <b>1118</b>. The software may be executed by one or more processing units of processing subsystem <b>1104</b>. Storage subsystem <b>1118</b> may also provide a repository for storing data used in accordance with the present disclosure.</p><p id="p-0128" num="0185">Storage subsystem <b>1118</b> may include one or more non-transitory memory devices, including volatile and non-volatile memory devices. As shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, storage subsystem <b>1118</b> includes a system memory <b>1110</b> and a computer-readable storage media <b>1122</b>. System memory <b>1110</b> may include a number of memories including a volatile main random access memory (RAM) for storage of instructions and data during program execution and a non-volatile read only memory (ROM) or flash memory in which fixed instructions are stored. In some implementations, a basic input/output system (BIOS), containing the basic routines that help to transfer information between elements within computer system <b>1100</b>, such as during start-up, may be stored in the ROM. The RAM may contain data and/or program modules that are presently being operated and executed by processing subsystem <b>1104</b>. In some implementations, system memory <b>1110</b> may include multiple different types of memory, such as static random access memory (SRAM) or dynamic random access memory (DRAM).</p><p id="p-0129" num="0186">By way of example, and not limitation, as depicted in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, system memory <b>1110</b> may store application programs <b>1112</b>, which may include client applications, Web browsers, mid-tier applications, relational database management systems (RDBMS), etc., program data <b>1114</b>, and an operating system <b>1116</b>. By way of example, operating system <b>1116</b> may include various versions of Microsoft Windows&#xae;, Apple Macintosh&#xae;, and/or Linux operating systems, a variety of commercially-available UNIX&#xae; or UNIX-like operating systems (including without limitation the variety of GNU/Linux operating systems, the Google Chrome&#xae; OS, and the like) and/or mobile operating systems such as iOS, Windows&#xae; Phone, Android&#xae; OS, BlackBerry&#xae; 10 OS, and Palm&#xae; OS operating systems.</p><p id="p-0130" num="0187">Computer-readable storage media <b>1122</b> may store programming and data constructs that provide the functionality of some embodiments. Software (programs, code modules, instructions) that when executed by processing subsystem <b>1104</b> a processor provide the functionality described above may be stored in storage subsystem <b>1118</b>. By way of example, computer-readable storage media <b>1122</b> may include non-volatile memory such as a hard disk drive, a magnetic disk drive, an optical disk drive such as a CD ROM, DVD, a Blu-Ray&#xae; disk, or other optical media. Computer-readable storage media <b>1122</b> may include, but is not limited to, Zip&#xae; drives, flash memory cards, universal serial bus (USB) flash drives, secure digital (SD) cards, DVD disks, digital video tape, and the like. Computer-readable storage media <b>1122</b> may also include, solid-state drives (SSD) based at least in part on non-volatile memory such as flash-memory based SSDs, enterprise flash drives, solid state ROM, and the like, SSDs based at least in part on volatile memory such as solid state RAM, dynamic RAM, static RAM, DRAM-based SSDs, magnetoresistive RAM (MRAM) SSDs, and hybrid SSDs that use a combination of DRAM and flash memory based SSDs. Computer-readable media <b>1122</b> may provide storage of computer-readable instructions, data structures, program modules, and other data for computer system <b>1100</b>.</p><p id="p-0131" num="0188">In certain embodiments, storage subsystem <b>1100</b> may also include a computer-readable storage media reader <b>1120</b> that can further be connected to computer-readable storage media <b>1122</b>. Together and, optionally, in combination with system memory <b>1110</b>, computer-readable storage media <b>1122</b> may comprehensively represent remote, local, fixed, and/or removable storage devices plus storage media for storing computer-readable information.</p><p id="p-0132" num="0189">In certain embodiments, computer system <b>1100</b> may provide support for executing one or more virtual machines. Computer system <b>1100</b> may execute a program such as a hypervisor for facilitating the configuring and managing of the virtual machines. Each virtual machine may be allocated memory, compute (e.g., processors, cores), I/O, and networking resources. Each virtual machine may run its own operating system, which may be the same as or different from the operating systems executed by other virtual machines executed by computer system <b>1100</b>. Accordingly, multiple operating systems may potentially be run concurrently by computer system <b>1100</b>. Each virtual machine generally runs independently of the other virtual machines.</p><p id="p-0133" num="0190">Communications subsystem <b>1124</b> provides an interface to other computer systems and networks. Communications subsystem <b>1124</b> serves as an interface for receiving data from and transmitting data to other systems from computer system <b>1100</b>. For example, communications subsystem <b>1124</b> may enable computer system <b>1100</b> to establish a communication channel to one or more client devices via the Internet for receiving and sending information from and to the client devices. Additionally, communication subsystem <b>1124</b> may be used to communicate notifications of successful logins or notifications to re-enter a password from the privileged account manager to the requesting users.</p><p id="p-0134" num="0191">Communication subsystem <b>1124</b> may support both wired and/or wireless communication protocols. For example, in certain embodiments, communications subsystem <b>1124</b> may include radio frequency (RF) transceiver components for accessing wireless voice and/or data networks (e.g., using cellular telephone technology, advanced data network technology, such as 3G, 4G or EDGE (enhanced data rates for global evolution), WiFi (IEEE 802.11 family standards, or other mobile communication technologies, or any combination thereof), global positioning system (GPS) receiver components, and/or other components. In some embodiments communications subsystem <b>1124</b> can provide wired network connectivity (e.g., Ethernet) in addition to or instead of a wireless interface.</p><p id="p-0135" num="0192">Communication subsystem <b>1124</b> can receive and transmit data in various forms. For example, in some embodiments, communications subsystem <b>1124</b> may receive input communication in the form of structured and/or unstructured data feeds <b>1126</b>, event streams <b>1128</b>, event updates <b>1130</b>, and the like. For example, communications subsystem <b>1124</b> may be configured to receive (or send) data feeds <b>1126</b> in real-time from users of social media networks and/or other communication services such as Twitter&#xae; feeds, Facebook&#xae; updates, web feeds such as Rich Site Summary (RSS) feeds, and/or real-time updates from one or more third party information sources.</p><p id="p-0136" num="0193">In certain embodiments, communications subsystem <b>1124</b> may be configured to receive data in the form of continuous data streams, which may include event streams <b>1128</b> of real-time events and/or event updates <b>1130</b>, that may be continuous or unbounded in nature with no explicit end. Examples of applications that generate continuous data may include, for example, sensor data applications, financial tickers, network performance measuring tools (e.g. network monitoring and traffic management applications), clickstream analysis tools, automobile traffic monitoring, and the like.</p><p id="p-0137" num="0194">Communications subsystem <b>1124</b> may also be configured to output the structured and/or unstructured data feeds <b>1126</b>, event streams <b>1128</b>, event updates <b>1130</b>, and the like to one or more databases that may be in communication with one or more streaming data source computers coupled to computer system <b>1100</b>.</p><p id="p-0138" num="0195">Computer system <b>1100</b> can be one of various types, including a handheld portable device (e.g., an iPhone&#xae; cellular phone, an iPad&#xae; computing tablet, a PDA), a wearable device (e.g., a Google Glass&#xae; head mounted display), a personal computer, a workstation, a mainframe, a kiosk, a server rack, or any other data processing system.</p><p id="p-0139" num="0196">Due to the ever-changing nature of computers and networks, the description of computer system <b>1100</b> depicted in <figref idref="DRAWINGS">FIG. <b>11</b></figref> is intended only as a specific example. Many other configurations having more or fewer components than the system depicted in <figref idref="DRAWINGS">FIG. <b>11</b></figref> are possible. Based at least in part on the disclosure and teachings provided herein, a person of ordinary skill in the art will appreciate other ways and/or methods to implement the various embodiments.</p><p id="p-0140" num="0197">Systems depicted in some of the figures may be provided in various configurations. In some embodiments, the systems may be configured as a distributed system where one or more components of the system are distributed across one or more networks in one or more cloud infrastructure systems.</p><p id="p-0141" num="0198">A cloud infrastructure system is a collection of one or more server computing devices, network devices, and/or storage devices. These resources may be divided by cloud services providers and allotted to its customers in some manner. For example, a cloud services provider, such as Oracle Corporation of Redwood Shores, Calif., may offer various types of cloud services including but not limited to one or more services provided under Software as a Service (SaaS) category, services provided under Platform as a Service (PaaS) category, services provided under Infrastructure as a Service (IaaS) category, or other categories of services including hybrid services. Examples of SaaS services include, without limitation, capabilities to build and deliver a suite of on-demand applications such as Oracle Fusion applications. SaaS services enable customers to utilize applications executing on the cloud infrastructure system without the need for customers to purchase software for the applications. Examples of PaaS services include without limitation services that enable organizations (such as Oracle) to consolidate existing applications on a shared, common architecture, as well as the ability to build new applications that leverage the shared services provided by the platform such as Oracle Java Cloud Service (JCS), Oracle Database Cloud Service (DBCS), and others. IaaS services may facilitate the management and control of the underlying computing resources, such as storage, networks, and other fundamental computing resources for customers utilizing services provided by the SaaS platform and the PaaS platform.</p><p id="p-0142" num="0199"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a simplified block diagram of one or more components of a system environment <b>1200</b> by which services provided by one or more components of an embodiment system may be offered as cloud services, in accordance with an embodiment of the present disclosure. In the illustrated embodiment, system environment <b>1200</b> includes one or more client computing devices <b>1204</b>, <b>1206</b>, and <b>1208</b> that may be used by users to interact with a cloud infrastructure system <b>1202</b> that provides cloud services. The client computing devices may be configured to operate a client application such as a web browser, a proprietary client application (e.g., Oracle Forms), or some other application, which may be used by a user of the client computing device to interact with cloud infrastructure system <b>1202</b> to use services provided by cloud infrastructure system <b>1202</b>.</p><p id="p-0143" num="0200">It should be appreciated that cloud infrastructure system <b>1202</b> depicted in the figure may have other components than those depicted. Further, the embodiment shown in the figure is only one example of a cloud infrastructure system that may incorporate an embodiment of the disclosure. In some other embodiments, cloud infrastructure system <b>1202</b> may have more or fewer components than shown in the figure, may combine two or more components, or may have a different configuration or arrangement of components.</p><p id="p-0144" num="0201">Client computing devices <b>1204</b>, <b>1206</b>, and <b>1208</b> may be devices similar to those described above for <b>802</b>, <b>804</b>, <b>806</b>, and <b>808</b>.</p><p id="p-0145" num="0202">Although example system environment <b>1200</b> is shown with three client computing devices, any number of client computing devices may be supported. Other devices such as devices with sensors, etc. may interact with cloud infrastructure system <b>1202</b>.</p><p id="p-0146" num="0203">Network(s) <b>1210</b> may facilitate communications and exchange of data between clients <b>1204</b>, <b>1206</b>, and <b>1208</b> and cloud infrastructure system <b>1202</b>. Each network may be any type of network familiar to those skilled in the art that can support data communications using any of a variety of commercially-available protocols, including those described above for network(s) <b>1010</b>.</p><p id="p-0147" num="0204">Cloud infrastructure system <b>1202</b> may comprise one or more computers and/or servers that may include those described above for server <b>1012</b>.</p><p id="p-0148" num="0205">In certain embodiments, services provided by the cloud infrastructure system may include a host of services that are made available to users of the cloud infrastructure system on demand, such as online data storage and backup solutions, Web-based e-mail services, hosted office suites and document collaboration services, database processing, managed technical support services, and the like. Services provided by the cloud infrastructure system can dynamically scale to meet the needs of its users. A specific instantiation of a service provided by cloud infrastructure system is referred to herein as a &#x201c;service instance.&#x201d; In general, any service made available to a user via a communication network, such as the Internet or from a cloud service provider's system is referred to as a &#x201c;cloud service.&#x201d; In a public cloud environment, servers and systems that make up the cloud service provider's system are different from the customer's own on-premises servers and systems. For example, a cloud service provider's system may host an application, and a user may, via a communication network such as the Internet, on demand, order and use the application.</p><p id="p-0149" num="0206">In some examples, a service in a computer network cloud infrastructure may include protected computer network access to storage, a hosted database, a hosted web server, a software application, or other service provided by a cloud vendor to a user, or as otherwise known in the art. For example, a service can include password-protected access to remote storage on the cloud through the Internet. As another example, a service can include a web service-based hosted relational database and a script-language middleware engine for private use by a networked developer. As another example, a service can include access to an email software application hosted on a cloud vendor's web site.</p><p id="p-0150" num="0207">In certain embodiments, cloud infrastructure system <b>1202</b> may include a suite of applications, middleware, and database service offerings that are delivered to a customer in a self-service, subscription-based, elastically scalable, reliable, highly available, and secure manner. An example of such a cloud infrastructure system is the Oracle Public Cloud provided by the present assignee.</p><p id="p-0151" num="0208">In various embodiments, cloud infrastructure system <b>1202</b> may be adapted to automatically provision, manage and track a customer's subscription to services offered by cloud infrastructure system <b>1202</b>. Cloud infrastructure system <b>1202</b> may provide the cloud services via different deployment models. For example, services may be provided under a public cloud model in which cloud infrastructure system <b>1202</b> is owned by an organization selling cloud services (e.g., owned by Oracle) and the services are made available to the general public or different industry enterprises. As another example, services may be provided under a private cloud model in which cloud infrastructure system <b>1202</b> is operated solely for a single organization and may provide services for one or more entities within the organization. The cloud services may also be provided under a community cloud model in which cloud infrastructure system <b>1202</b> and the services provided by cloud infrastructure system <b>1202</b> are shared by several organizations in a related community. The cloud services may also be provided under a hybrid cloud model, which is a combination of two or more different models.</p><p id="p-0152" num="0209">In some embodiments, the services provided by cloud infrastructure system <b>1202</b> may include one or more services provided under Software as a Service (SaaS) category, Platform as a Service (PaaS) category, Infrastructure as a Service (IaaS) category, or other categories of services including hybrid services. A customer, via a subscription order, may order one or more services provided by cloud infrastructure system <b>1202</b>. Cloud infrastructure system <b>1202</b> then performs processing to provide the services in the customer's subscription order.</p><p id="p-0153" num="0210">In some embodiments, the services provided by cloud infrastructure system <b>1202</b> may include, without limitation, application services, platform services and infrastructure services. In some examples, application services may be provided by the cloud infrastructure system via a SaaS platform. The SaaS platform may be configured to provide cloud services that fall under the SaaS category. For example, the SaaS platform may provide capabilities to build and deliver a suite of on-demand applications on an integrated development and deployment platform. The SaaS platform may manage and control the underlying software and infrastructure for providing the SaaS services. By utilizing the services provided by the SaaS platform, customers can utilize applications executing on the cloud infrastructure system. Customers can acquire the application services without the need for customers to purchase separate licenses and support. Various different SaaS services may be provided. Examples include, without limitation, services that provide solutions for sales performance management, enterprise integration, and business flexibility for large organizations.</p><p id="p-0154" num="0211">In some embodiments, platform services may be provided by the cloud infrastructure system via a PaaS platform. The PaaS platform may be configured to provide cloud services that fall under the PaaS category. Examples of platform services may include without limitation services that enable organizations (such as Oracle) to consolidate existing applications on a shared, common architecture, as well as the ability to build new applications that leverage the shared services provided by the platform. The PaaS platform may manage and control the underlying software and infrastructure for providing the PaaS services. Customers can acquire the PaaS services provided by the cloud infrastructure system without the need for customers to purchase separate licenses and support. Examples of platform services include, without limitation, Oracle Java Cloud Service (JCS), Oracle Database Cloud Service (DBCS), and others.</p><p id="p-0155" num="0212">By utilizing the services provided by the PaaS platform, customers can employ programming languages and tools supported by the cloud infrastructure system and also control the deployed services. In some embodiments, platform services provided by the cloud infrastructure system may include database cloud services, middleware cloud services (e.g., Oracle Fusion Middleware services), and Java cloud services. In one embodiment, database cloud services may support shared service deployment models that enable organizations to pool database resources and offer customers a Database as a Service in the form of a database cloud. Middleware cloud services may provide a platform for customers to develop and deploy various business applications, and Java cloud services may provide a platform for customers to deploy Java applications, in the cloud infrastructure system.</p><p id="p-0156" num="0213">Various different infrastructure services may be provided by an IaaS platform in the cloud infrastructure system. The infrastructure services facilitate the management and control of the underlying computing resources, such as storage, networks, and other fundamental computing resources for customers utilizing services provided by the SaaS platform and the PaaS platform.</p><p id="p-0157" num="0214">In certain embodiments, cloud infrastructure system <b>1202</b> may also include infrastructure resources <b>1230</b> for providing the resources used to provide various services to customers of the cloud infrastructure system. In one embodiment, infrastructure resources <b>1230</b> may include pre-integrated and optimized combinations of hardware, such as servers, storage, and networking resources to execute the services provided by the PaaS platform and the SaaS platform.</p><p id="p-0158" num="0215">In some embodiments, resources in cloud infrastructure system <b>1202</b> may be shared by multiple users and dynamically re-allocated per demand. Additionally, resources may be allocated to users in different time zones. For example, cloud infrastructure system <b>1230</b> may enable a first set of users in a first time zone to utilize resources of the cloud infrastructure system for a specified number of hours and then enable the re-allocation of the same resources to another set of users located in a different time zone, thereby maximizing the utilization of resources.</p><p id="p-0159" num="0216">In certain embodiments, a number of internal shared services <b>1232</b> may be provided that are shared by different components or modules of cloud infrastructure system <b>1202</b> and by the services provided by cloud infrastructure system <b>1202</b>. These internal shared services may include, without limitation, a security and identity service, an integration service, an enterprise repository service, an enterprise manager service, a virus scanning and white list service, a high availability, backup and recovery service, service for enabling cloud support, an email service, a notification service, a file transfer service, and the like.</p><p id="p-0160" num="0217">In certain embodiments, cloud infrastructure system <b>1202</b> may provide comprehensive management of cloud services (e.g., SaaS, PaaS, and IaaS services) in the cloud infrastructure system. In one embodiment, cloud management functionality may include capabilities for provisioning, managing and tracking a customer's subscription received by cloud infrastructure system <b>1202</b>, and the like.</p><p id="p-0161" num="0218">In one embodiment, as depicted in the figure, cloud management functionality may be provided by one or more modules, such as an order management module <b>1220</b>, an order orchestration module <b>1222</b>, an order provisioning module <b>1224</b>, an order management and monitoring module <b>1226</b>, and an identity management module <b>1228</b>. These modules may include or be provided using one or more computers and/or servers, which may be general purpose computers, specialized server computers, server farms, server clusters, or any other appropriate arrangement and/or combination.</p><p id="p-0162" num="0219">In example operation <b>1234</b>, a customer using a client device, such as client device <b>1204</b>, <b>1206</b> or <b>1208</b>, may interact with cloud infrastructure system <b>1202</b> by requesting one or more services provided by cloud infrastructure system <b>1202</b> and placing an order for a subscription for one or more services offered by cloud infrastructure system <b>1202</b>. In certain embodiments, the customer may access a cloud User Interface (UI), cloud UI <b>1212</b>, cloud UI <b>1214</b> and/or cloud UI <b>1216</b> and place a subscription order via these UIs. The order information received by cloud infrastructure system <b>1202</b> in response to the customer placing an order may include information identifying the customer and one or more services offered by the cloud infrastructure system <b>1202</b> that the customer intends to subscribe to.</p><p id="p-0163" num="0220">After an order has been placed by the customer, the order information is received via the cloud UIs, <b>1212</b>, <b>1214</b> and/or <b>1216</b>.</p><p id="p-0164" num="0221">At operation <b>1236</b>, the order is stored in order database <b>1218</b>. Order database <b>1218</b> can be one of several databases operated by cloud infrastructure system <b>1218</b> and operated in conjunction with other system elements.</p><p id="p-0165" num="0222">At operation <b>1238</b>, the order information is forwarded to an order management module <b>1220</b>. In some instances, order management module <b>1220</b> may be configured to perform billing and accounting functions related to the order, such as verifying the order, and upon verification, booking the order.</p><p id="p-0166" num="0223">At operation <b>1240</b>, information regarding the order is communicated to an order orchestration module <b>1222</b>. Order orchestration module <b>1222</b> may utilize the order information to orchestrate the provisioning of services and resources for the order placed by the customer. In some instances, order orchestration module <b>1222</b> may orchestrate the provisioning of resources to support the subscribed services using the services of order provisioning module <b>1224</b>.</p><p id="p-0167" num="0224">In certain embodiments, order orchestration module <b>1222</b> enables the management of business processes associated with each order and applies business logic to determine whether an order should proceed to provisioning. At operation <b>1242</b>, upon receiving an order for a new subscription, order orchestration module <b>1222</b> sends a request to order provisioning module <b>1224</b> to allocate resources and configure those resources needed to fulfill the subscription order. Order provisioning module <b>1224</b> enables the allocation of resources for the services ordered by the customer. Order provisioning module <b>1224</b> provides a level of abstraction between the cloud services provided by cloud infrastructure system <b>1200</b> and the physical implementation layer that is used to provision the resources for providing the requested services. Order orchestration module <b>1222</b> may thus be isolated from implementation details, such as whether or not services and resources are actually provisioned on the fly or pre-provisioned and only allocated/assigned upon request.</p><p id="p-0168" num="0225">At operation <b>1244</b>, once the services and resources are provisioned, a notification of the provided service may be sent to customers on client devices <b>1204</b>, <b>1206</b> and/or <b>1208</b> by order provisioning module <b>1224</b> of cloud infrastructure system <b>1202</b>. At operation <b>1246</b>, the customer's subscription order may be managed and tracked by an order management and monitoring module <b>1226</b>. In some instances, order management and monitoring module <b>1226</b> may be configured to collect usage statistics for the services in the subscription order, such as the amount of storage used, the amount data transferred, the number of users, and the amount of system up time and system down time.</p><p id="p-0169" num="0226">In certain embodiments, cloud infrastructure system <b>1200</b> may include an identity management module <b>1228</b>. Identity management module <b>1228</b> may be configured to provide identity services, such as access management and authorization services in cloud infrastructure system <b>1200</b>. In some embodiments, identity management module <b>1228</b> may control information about customers who wish to utilize the services provided by cloud infrastructure system <b>1202</b>. Such information can include information that authenticates the identities of such customers and information that describes which actions those customers are authorized to perform relative to various system resources (e.g., files, directories, applications, communication ports, memory segments, etc.) Identity management module <b>1228</b> may also include the management of descriptive information about each customer and about how and by whom that descriptive information can be accessed and modified.</p><p id="p-0170" num="0227">Although specific embodiments of the disclosure have been described, various modifications, alterations, alternative constructions, and equivalents are also encompassed within the scope of the disclosure. Embodiments of the present disclosure are not restricted to operation within certain specific data processing environments, but are free to operate within a plurality of data processing environments. Additionally, although embodiments of the present disclosure have been described using a particular series of transactions and steps, it should be apparent to those skilled in the art that the scope of the present disclosure is not limited to the described series of transactions and steps. Various features and aspects of the above-described embodiments may be used individually or jointly.</p><p id="p-0171" num="0228">Further, while embodiments of the present disclosure have been described using a particular combination of hardware and software, it should be recognized that other combinations of hardware and software are also within the scope of the present disclosure. Embodiments of the present disclosure may be implemented only in hardware, or only in software, or using combinations thereof. The various processes described herein can be implemented on the same processor or different processors in any combination. Accordingly, where components or modules are described as being configured to perform certain operations, such configuration can be accomplished, e.g., by designing electronic circuits to perform the operation, by programming programmable electronic circuits (such as microprocessors) to perform the operation, or any combination thereof. Processes can communicate using a variety of techniques including but not limited to conventional techniques for inter process communication, and different pairs of processes may use different techniques, or the same pair of processes may use different techniques at different times.</p><p id="p-0172" num="0229">The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. It will, however, be evident that additions, subtractions, deletions, and other modifications and changes may be made thereunto without departing from the broader spirit and scope as set forth in the claims. Thus, although specific disclosure embodiments have been described, these are not intended to be limiting. Various modifications and equivalents are within the scope of the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method, comprising:<claim-text>executing, by a computer system, a regional service for provisioning a set of infrastructure assets of an execution target of a central infrastructure orchestration service;</claim-text><claim-text>receiving, by the computer system, a plan comprising a set of instructions for provisioning the set of infrastructure assets of the execution target from the central infrastructure orchestration service;</claim-text><claim-text>identifying, by the computer system, a first state of the set of infrastructure assets;</claim-text><claim-text>executing, by the computer system, the set of instructions in the plan to achieve a second state for the set of infrastructure assets;</claim-text><claim-text>based at least in part on the executing, receiving, by the computer system, a trigger for rolling back the plan to restore the set of infrastructure assets in the plan to the first state;</claim-text><claim-text>in accordance with receiving the trigger, executing, by the computer system, a rollback plan for the plan; and</claim-text><claim-text>transmitting, by the computer system, a result associated with the execution of the rollback plan.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the set of instructions comprise a set of declarative instructions for provisioning the set of infrastructure assets of the execution target, wherein the execution target is associated with a predefined region managed by the central infrastructure orchestration service and comprises at least one physical location for provisioning the set of infrastructure assets.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the set of instructions comprise a set of declarative instructions comprising at least one of:<claim-text>a first set of declarative instructions for provisioning the set of infrastructure assets of the execution target; or</claim-text><claim-text>a second set of declarative instructions for deploying a set of software artifacts onto the set of provisioned infrastructure assets of the execution target, wherein the execution target is associated with a predefined region comprising at least one physical location for deploying the set of software artifacts.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the trigger identifies a configuration parameter in a configuration file of the plan that indicates that the plan is being executed in a pre-production test environment.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising automatically executing, by the computer system, the rollback plan for the plan based on the identified configuration parameter.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein automatically executing, by the computer system, the rollback plan comprises:<claim-text>executing a rollback operation to roll back the plan to a previous version that identifies the first state of the set of infrastructure assets defined in the plan prior to the execution of the plan; and</claim-text><claim-text>executing a roll-forward operation to re-execute the plan to achieve the second state of the set of infrastructure assets.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the trigger identifies an error detected during provisioning of at least one infrastructure asset of the set of infrastructure assets of the execution target; and<claim-text>responsive to receiving the trigger, automatically executing, by the computer system, the rollback plan.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the error is caused as a result of an update to a configuration of the infrastructure asset during the execution of the plan, wherein the update is performed by a user of the computer system.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the trigger identifies an error detected during deployment of at least one software artifact of the set of infrastructure assets of the execution target; and<claim-text>responsive to receiving the trigger, automatically executing, by the computer system, the rollback plan.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the trigger identifies an error detected during provisioning of at least one infrastructure asset of the set of infrastructure assets of the execution target; and<claim-text>responsive to receiving the trigger:<claim-text>transmitting, by the computing system, an indication of the error to a user interface;</claim-text><claim-text>responsive to the indication of the error, receiving, by the computing system, user input indicative of executing the rollback plan; and</claim-text><claim-text>executing, by the computing system, the rollback plan in response to the user input.</claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the trigger identifies an error detected during deployment of at least one software artifact of the set of infrastructure assets of the execution target; and<claim-text>responsive to receiving the trigger:<claim-text>transmitting, by the computing system, an indication of the error to a user interface;</claim-text><claim-text>responsive to the indication of error, receiving, by the computing system, user input indicative of executing the rollback plan for the plan; and</claim-text><claim-text>executing, by the computing system, the rollback plan in response to the user input.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A cloud infrastructure orchestration system, comprising:<claim-text>a processor; and</claim-text><claim-text>a memory storing instructions that, when executed by the processor, configure the cloud infrastructure orchestration system to:</claim-text><claim-text>execute a regional service for provisioning a set of infrastructure assets of an execution target of a central infrastructure orchestration service;<claim-text>receive a plan comprising a set of instructions for provisioning the set of infrastructure assets of the execution target from the central infrastructure orchestration service;</claim-text><claim-text>identify a first state of the set of infrastructure assets;</claim-text><claim-text>execute the set of instructions in the plan to achieve a second state for the set of infrastructure assets;</claim-text><claim-text>based at least in part on the instructions to execute, receive a trigger for rolling back the plan to restore the set of infrastructure assets in the plan to the first state;</claim-text><claim-text>based at least in part on the instructions to receive, execute a rollback plan for the plan; and</claim-text><claim-text>provide a result associated with the execution of the rollback plan.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the set of instructions comprise a set of declarative instructions for provisioning the set of infrastructure assets of the execution target, wherein the execution target is associated with a predefined region managed by the central infrastructure orchestration service and comprises at least one physical location for provisioning the set of infrastructure assets.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the set of instructions comprise a set of declarative instructions comprising at least one of:<claim-text>a first set of declarative instructions for provisioning the set of infrastructure assets of the execution target; or</claim-text><claim-text>a second set of declarative instructions for deploying the set of software artifacts onto the set of provisioned infrastructure assets of the execution target, wherein the execution target is associated with a predefined region comprising at least one physical location for deploying the set of software artifacts.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the trigger identifies an error detected during provisioning of at least one infrastructure asset of the set of infrastructure assets of the execution target; and<claim-text>responsive to receiving the trigger, automatically executing, by the computer system, the rollback plan.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the trigger identifies an error detected during provisioning of at least one infrastructure asset of the set of infrastructure assets of the execution target; and<claim-text>responsive to receiving the trigger:<claim-text>transmitting, by the computing system, an indication of the error to a user interface;</claim-text><claim-text>responsive to the indication of the error, receiving user input indicative of executing the rollback plan; and</claim-text><claim-text>executing the rollback plan in response to the user input.</claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory computer-readable medium having program code that is stored thereon, the program code executable by one or more processing devices for performing operations comprising:<claim-text>executing a regional service for provisioning a set of infrastructure assets of an execution target of a central infrastructure orchestration service;</claim-text><claim-text>receiving a plan comprising a set of instructions for provisioning the set of infrastructure assets of the execution target from the central infrastructure orchestration service;</claim-text><claim-text>identifying a first state of the set of infrastructure assets;</claim-text><claim-text>executing the set of instructions in the plan to achieve a second state for the set of infrastructure assets;</claim-text><claim-text>based at least in part on the executing, receiving a trigger for rolling back the plan to restore the set of infrastructure resources in the plan to the first state;</claim-text><claim-text>based at least in part on the receiving, executing a rollback plan for the plan; and</claim-text><claim-text>providing a result associated with the execution of the rollback plan via a user interface of the computer system.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-readable storage medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein trigger identifies a configuration parameter in a configuration file of the plan that indicates that the plan is being executed in a pre-production test environment.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref> further comprising automatically executing the rollback plan for the plan based on the identified configuration parameter.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-readable storage medium of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein automatically executing the rollback plan comprises:<claim-text>executing a rollback operation to roll back the plan to a previous version that identifies the first state of the set of infrastructure assets defined in the plan prior to the execution of the plan; and</claim-text><claim-text>executing a roll-forward operation to re-execute the plan to achieve the second state of the set of infrastructure assets.</claim-text></claim-text></claim></claims></us-patent-application>