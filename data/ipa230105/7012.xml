<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007013A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007013</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17862948</doc-number><date>20220712</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>028</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>045</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1408</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>028</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>145</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>045</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">VISUALIZATION TOOL FOR REAL-TIME NETWORK RISK ASSESSMENT</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16863933</doc-number><date>20200430</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11388176</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17862948</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62943122</doc-number><date>20191203</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SONICWALL INC.</orgname><address><city>Milpitas</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Conner</last-name><first-name>F. William</first-name><address><city>Dallas</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>NguyenLe</last-name><first-name>MinhDung Joe</first-name><address><city>San Ramon</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Dhablania</last-name><first-name>Atul</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Chio</last-name><first-name>Richard</first-name><address><city>Union City</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Jose</last-name><first-name>Justin</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Dampanaboina</last-name><first-name>Lalith Kumar</first-name><address><city>Milpitas</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present disclosure relates to methods and apparatus that collect data regarding malware threats, that organizes this collected malware threat data, and that provides this data to computers or people such that damage associated with these software threats can be quantified and reduced. The present disclosure is also directed to preventing the spread of malware before that malware can damage computers or steal computer data. Methods consistent with the present disclosure may optimize tests performed at different levels of a multi-level threat detection and prevention system. As such, methods consistent with the present disclosure may collect data from various sources that may include endpoint computing devices, firewalls/gateways, or isolated (e.g. &#x201c;sandbox&#x201d;) computers. Once this information is collected, it may then be organized, displayed, and analyzed in ways that were not previously possible.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="191.43mm" wi="158.75mm" file="US20230007013A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="240.20mm" wi="160.53mm" file="US20230007013A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="156.38mm" wi="154.86mm" file="US20230007013A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="238.84mm" wi="176.78mm" file="US20230007013A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="226.40mm" wi="153.67mm" file="US20230007013A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="217.34mm" wi="151.81mm" file="US20230007013A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="179.24mm" wi="125.39mm" file="US20230007013A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="166.03mm" wi="141.56mm" file="US20230007013A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">The present application is a continuation and claims the priority benefit of U.S. nonprovisional patent application Ser. No. 16/863,933 filed Apr. 30, 2020 entitled &#x201c;Visualization Tool for Real-Time Network Risk Assessment,&#x201d; now U.S. patent application Ser. No. 11,388,176, which claims the priority benefit of U.S. provisional application No. 62/943,122 filed Dec. 3, 2019, the disclosures of which are incorporated herein by reference for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading><heading id="h-0003" level="1">Field of Invention</heading><p id="p-0003" num="0002">The present disclosure generally relates to quantifying the spread of malware through computer networks. More specifically, the present disclosure relates to identifying anti malware assets in different locations that are currently detecting specific types of malware.</p><heading id="h-0004" level="1">Description of the Related Art</heading><p id="p-0004" num="0003">Computer systems and computer networks today are vulnerable and may be exploited by different types of software threats. Such software threats are commonly referred to as malware. Malware may come in any forms or types that may be classified as ransomware, viruses, computer worms, Trojans, adware, and spyware. Malware includes all software written with executable code directed to secretly manipulating, altering, disrupting, and/or damaging computer systems or computer data. Malware attacks may target computers belonging to individuals or organizations for social, political, economic, and/or monetization purposes. Malware is typically distributed by parties with nefarious intent. Malware is commonly used steal or destroy computer data or to snoop or spy the actions of a user when the user operates a computer. Malware, such as a computer virus, may also to self-replicate when spreading to other computers. Malware may also be used to steal personal or financial information (spyware/Trojans), or to blackmail computer users by denying access to their own data unless or until a fee is paid (ransomware). Malware can reside in sets of data packets transferred between computers or can reside in a data storage device in the form of a file or other data, for example.</p><p id="p-0005" num="0004">As mentioned above, viruses are software programs that can often replicate themselves as these viruses attempt and infect computers, to disrupt the operations of computers, or destroy computer data. Viruses can be used to gain administrative control of a computer to force computers to download and execute other malicious programs, spread infection to other computers, or destroy sensitive user data. Trojans are often designed to extract sensitive data from a computer or computer network. Trojans may take control of an infected system and open a back door for an attacker to access later. Trojans are often used the in creation of botnets. Spyware is typically used to infect web browsers, sometimes making them nearly inoperable. Spyware may sometimes be disguised as a legitimate software application that appears to provide a benefit while secretly recording behavior and usage patterns. As such, malware is typically distributed by parties with nefarious intent. Furthermore, newly developed malware is increasingly difficult to identify. Frequently, until a particular sort of malware has been identified and characterized, conventional techniques that identify whether a communication includes malware can miss detecting the presence of that malware in the communication. This may occur when information in one or more received data packets is hidden or when the malware is not identifiable by a signature associated with the information in the received data packets.</p><p id="p-0006" num="0005">Presently, thousands of new malware samples are discovered all over the internet each day. According to the popular malware detection website Virustotal.com, an average number of unique malware samples identified daily are above 800,000. This huge number of malware samples traversing the internet poses a significant challenge for detection using known pattern matching methods employed by traditional anti-malware solutions. Significantly, almost all the new malware samples observed each day are actually repackaged versions of known malware. Individuals that generate malware today often obfuscate the presence of malicious code by packing it within other executable code or by compressing it. In certain instances this is performed using binary packing software or a form of software that is referred to as &#x201c;protector&#x201d; software. This packing or &#x201c;protecting&#x201d; function may reorganize or manipulate a piece of original malware code into a structure that cannot be detected using conventional packet scanning. As such, repackaged versions of old malware can successfully evade detection when conventional scanning techniques such as deep packet inspection (DPI) are used. DPI relies on pattern matching data included in a set of data packets with attributes associated with or signatures generated from previously identified malicious code.</p><p id="p-0007" num="0006">When a repackaged malware is received, it may be executed by a computing device. In certain instances malware reveals (unpacks) its internal malicious code and associated data in process memory after which the malicious code may then executed by a processor at the computing device. The difficulty in detecting repackaged malware is compounded by the fact that memory extraction of code and data does not generate any operating system events, such as a system call or call-backs which can be intercepted externally. Hence, malicious code can silently be extracted, executed and removed from memory.</p><p id="p-0008" num="0007">Since malware can and is used by those to steal or destroy computer data and since repackaged malware can avoid detection when conventional techniques are used, what are needed are detection methods that do not depend on the content of a set of computer data. Because of the threats posed by malware today, companies like Sonic Wall Inc. collect data from various sources when tracking what forms of malware are impacting computers in different regions of the World. Knowing what types of malware that are currently being deployed in particular locations can provide a way to help prevent the spread of that malware to computers in different regions of the World.</p><p id="p-0009" num="0008">While data are currently being collected regarding locations where certain particular types of malware are currently infecting computers, organizing and reviewing this data provides those chartered with the responsibility of preventing the spread of malware with logistical difficulties. Simply put, the volume of data generated each day regarding the distribution of malware throughout the World is so large (hundreds of thousands to millions of instances) that identifying the extent of a particular threat is very difficult. Furthermore, the tracking and analysis of vast numbers of different types of malware make the tracking on malware by persons impossible. What are needed are new methods and apparatus that collect data regarding malware threats. What are also needed are view ways of organizing and presenting malware threat data such that the vast amount of malware threat data can be acted upon to reduce the impact of malware being distributed throughout the World. Identifying the extent of the spread of malware may also help identify how to improve programs or systems that identify, block, isolate, or destroy malware. Because of this, new methods and systems that process threat data such that this threat data can be easily evaluated are also required.</p><heading id="h-0005" level="1">SUMMARY OF THE CLAIMED INVENTION</heading><p id="p-0010" num="0009">The presently claimed invention relates to a system, a method, and a non-transitory computer readable storage medium executing functions consistent tracking and preventing the spread of malware. A system consistent with the present disclosure may include a computer that evaluates malware test data received from computing devices test computer data for the presence of malware. As such, this system may include a first set of computers that form a first test layer and a second set of computers that form a second test layer. Computers associated with the first test layer may perform a first set of anti-malware tests and computers associated with the second test layer may perform a second set of anti-malware tests. Test data sent from the first set of computers and sent from the second set of computers may be received by the evaluation computer such that the evaluation computer can identify malware types that were detected by the first and the second set of computers. Evaluation of this test data may be used to generate visualizations that illustrate a first set and a second set of malware test vectors, that identify a first set of malware types detected by the first set of computers, and that identify a second set of malware types detected by the second set of computers. The evaluation computer of the presently claimed system may also display the generated visualization on a display and that display may be updated continuously as additional test data is received.</p><p id="p-0011" num="0010">A method consistent with the present disclosure may receive a first set of test data from a first set of computing devices and may receive a second set of test data from a second set of computing devices. Here again the first set of computing devices may be associated with a first test level and the second set of computing devices may be associated with a second test level. After the test data is received, the presently claimed method may identify sets of malware types that were detected by the first and the second set of computing devices. Here again an evaluation of this test data may be used to generate visualization that illustrates a first set and a second set of malware test vectors, that identify a first set of malware types detected by the first set of computing devices, and that identify a second set of malware types detected by the second set of computing devices. Once generated, this visualization may be displayed on a display. Furthermore, information displayed on the display may be updated continuously as additional test data is received.</p><p id="p-0012" num="0011">When the presently claimed invention is performed as a non-transitory computer-readable storage medium, a computer executing instructions out of a memory may implement a method consistent with the present disclosure that receives a first set of test data from a first set of computing devices and that receives a second set of test data from a second set of computing devices. Here again, the first set of computing devices may be associated with a first test level and the second set of computing devices may be associated with a second test level. After the test data is received, the presently claimed method may identify sets of malware types that were detected by the first and the second set of computers. The processor executing instructions may then use the received test data to generate a visualization that illustrates a first set and a second set of malware test vectors that identify a first set of malware types detected by the first set of computing devices and that identify a second set of malware types detected by the second set of computing devices. Once generated, this visualization may be displayed on a display for review. Furthermore, information displayed on the display may be updated continuously as additional test data is received.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system that may be used to receive and organize locations where particular types of malware are identified and blocked.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an exemplary method consistent with the present disclosure that receives, organizes, and presents information received from different anti-malware agents or test computers.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a World map that may be used to identify and map locations where malware has been detected.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a computer or datacenter that is protected from malware by several different layers of protection.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a computing device or computer network that is currently protected by two of the three protection layers of <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates various different steps that may be performed by methods or apparatus consistent with the present disclosure as a user interacts with a user interface consistent with the present disclosure.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a computing system that may be used to implement an embodiment of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DETAILED DESCRIPTION</heading><p id="p-0020" num="0019">The present disclosure relates to methods and apparatus that collect, organize, and analyze data regarding malware threats such that the spread of malware can be quantified and damage associated with that malware can be prevented. The present disclosure is also directed to preventing the spread of malware before that malware can steal data or damage computers. Methods consistent with the present disclosure may be directed to optimizing tests performed at different levels of a multi-level threat detection and prevention system. As such, methods consistent with the present disclosure may collect data from various sources when organizing threat data for display on a display. Such threat data may be collected various sources that may include computers that run anti-malware software, firewalls or gateways that reside at a boundary between a private computer network and a public computer network, wireless mesh nodes that perform an anti-malware function, or from isolated computers that allow received software to operate as the behavior of that software is monitored to see if that software performs a malicious or suspicious act (e.g. a &#x201c;sandbox&#x201d; computer). As such, sources of malware data may be identified using apparatus or software that evaluates malware test data received from various sources when quantifying the spread of malware. Since methods consistent with the present disclosure can graphically illustrate the spread of large amounts of malware being distributed throughout the World instantaneously (by depicting hundreds, thousands, to millions of malware intrusions per second), methods and apparatus consistent with the present disclosure can protect computers in ways that were not previously possible.</p><p id="p-0021" num="0020">Methods and apparatus consistent with the present disclosure may receive data that identifies a type of malware, locations where that type of malware are currently being detected, and may identify how fast particular types of malware are spreading. Once malware test data is received, it may be organized by malware type and regions where that malware is being distributed in real-time or in near-real-time. The collected data may also be evaluated to identify a number of incidents of detection of a particular type of malware as that malware spreads to different locations. In certain instances, the operation of one or more different sources of malware data may be disabled (turned off) such that a measure of effectiveness of a particular anti-malware apparatus or software can be identified.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system that may be used to receive and organize malware test data when locations where particular types of malware are identified and blocked. <figref idref="DRAWINGS">FIG. <b>1</b></figref> includes cloud or Internet <b>110</b>, private network <b>120</b>, sandbox computer <b>130</b>, wireless mesh network <b>140</b>, data source <b>150</b>, and anti-malware evaluation system <b>160</b>. Private network <b>120</b> includes firewall/gateway <b>120</b>A and computing devices <b>120</b>B-<b>120</b>E (<b>120</b>B, <b>120</b>B, <b>120</b>C, <b>120</b>D, &#x26; <b>120</b>E). Wireless mesh network <b>140</b> may include mesh point portal <b>140</b>B, mesh points <b>140</b>C &#x26; <b>140</b>D, and computing devices <b>140</b>E &#x26; <b>140</b>F.</p><p id="p-0023" num="0022">When computing devices <b>120</b>B-<b>120</b>E of private network <b>120</b> or computing devices <b>140</b>E-<b>140</b>F attempt to access data residing at or originating from data source <b>150</b> via cloud or Internet <b>110</b>, the requested data may be analyzed for threats. Data source <b>150</b> is representative of any number of sources of data such as a web server, email server, file server, cloud storage or the like. As varied as data source <b>150</b> may be, the data retrieved from that source is equally diverse. In that regard, data from data source <b>150</b> may include webpages, data in webpages, email, video, audio, and data files, file attachments such as word documents or PDFs, or servers or gateways allowing access to other networks and credentials that might be exchanged with respect to accessing the same.</p><p id="p-0024" num="0023">Data retrieved from or delivered by data source <b>150</b> may encompass one or more forms of malware. As such, inbound data from data source <b>150</b> or a proxy thereof may be tested at firewall/gateway <b>120</b>A utilizing one or more anti-malware apparatus or software implementations. Similar testing may occur at the likes of wireless mesh portal <b>140</b>B or at computing devices <b>120</b>B-<b>120</b>E, one or more of which may be configured with or otherwise have access to anti-malware apparatus or software implementations, including sandbox computer <b>130</b> or anti-malware evaluation system <b>160</b>.</p><p id="p-0025" num="0024">In certain instances, data from a data request may be sent to sandbox computer <b>130</b> that may perform a series of runtime tests on received data. Such a request may be passed to sandbox computer by firewall/gateway <b>120</b>A, mesh portal <b>140</b>B, or one or more of computing devices <b>120</b>B-E or meshed computing devices <b>140</b>E-F. Sandbox computer <b>130</b> may retrieve the requested data when preparing to perform the runtime tests from a quarantine data retention source (not shown) or through a further request to data source <b>150</b>. Sandbox computer <b>130</b> may examine runtime tests without the threat of infecting a larger network (like network <b>120</b>) and then pass the results of said analyses to an anti-malware evaluation system <b>160</b> for use in the future or to otherwise aid in inoculating a network from inbound malware traffic.</p><p id="p-0026" num="0025">Data received from data source <b>150</b> may also be tested by firewall/gateway <b>120</b>A or may be tested by computers at wireless mesh network <b>140</b>. In certain instances, individual computing devices that generate data requests may also perform tests on received data. As such, computing devices <b>120</b>B-<b>120</b>E and <b>140</b>E-<b>140</b>F may test received data when looking for malware.</p><p id="p-0027" num="0026">Data from tests performed by firewall/gateway <b>120</b>A, by sandbox computer <b>130</b>, by computers at wireless mesh network <b>140</b>, or by requesting computing devices <b>120</b>B-<b>120</b>E and <b>140</b>E-<b>140</b>F may be passed to or operate in conjunction with anti-malware evaluation system <b>160</b>. This data may be passed to anti-malware evaluation system <b>160</b> in real time or in near-real time from each respective device that performs anti-malware tests. The test data passed to anti-malware evaluation system <b>160</b> may include a test result, information that identifies data source <b>150</b>, or information that identifies a location where a data request originated some or all of which may have been generated in conjunction or as a result of runtime testing at sandbox computer <b>130</b>.</p><p id="p-0028" num="0027">Evaluation system <b>160</b> may then identify a network location affected by the malware, identify malware types affecting particular parts of a network, identify a test type or test location, and/or identify a time when a particular type of malware was detected. Analysis performed at anti-malware evaluation system <b>160</b> may then analyze data received throughout a region of the World when identifying types of malware, specific tests that detected that malware, locations where requests for the malware originated, and sources of malware affecting that World region. Anti-malware evaluation system <b>160</b> may then generate a visualization that graphically illustrates dynamic conditions as different types of malware are detected around the World.</p><p id="p-0029" num="0028">The terms &#x201c;access point&#x201d; or &#x201c;wireless access point&#x201d; in the present disclosure refer to a device that may be wirelessly communicatively coupled to a computer directly with or without wireless communications passing through another wireless device. The terms &#x201c;access point&#x201d; or &#x201c;wireless access point&#x201d; may refer to either a mesh portal or mesh point. The term &#x201c;mesh portal&#x201d; may relate to a wireless device that performs functions that a mesh point need not perform. Both mesh portals and mesh points may perform functions consistent with a wireless access point because both mesh portals and mesh points may act as a wireless access point that directly wirelessly communicates with a computer such as computing device <b>140</b>E of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0030" num="0029">The terms &#x201c;mesh node&#x201d; in the present disclosure may be used to refer to either a mesh portal or a mesh point that uses wireless communications to transmit and receive wireless computer network messages and data. A mesh portal may be configured to transmit and receive data network communication traffic between two different types of computer networks, for example, between a network that communicates over wires and a network that uses wireless 802.11 signals. As such, mesh point portal <b>140</b>B of <figref idref="DRAWINGS">FIG. <b>1</b></figref> may communicate via cloud/Internet <b>110</b> using Ethernet connections and may communicate with mesh points <b>140</b>C-D using 802.11 compliant signals. Alternatively or additionally, a mesh portal (e.g. <b>140</b>B of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) may transmit and receive data network communication traffic between a cellular network and an 802.11 network. While mesh portals include different functionality as compared to a mesh point, certain mesh points may be configured to assume the role of a mesh portal.</p><p id="p-0031" num="0030">Typically the terms &#x201c;firewall&#x201d; or &#x201c;gateway&#x201d; in the present disclosure (e.g. firewall/gateway <b>120</b>A of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) may refer to computing devices that communicate over wired network connections. In certain instances, however, a mesh node may include functionality consistent with a firewall or gateway. In certain instances, functions conventionally associated with a firewall or gateway may be performed by a mesh portal or by mesh point. In these instances, a mesh portal or a mesh point may perform functions consistent with evaluating content ratings, deep packet inspection, or may include anti-virus program code.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an exemplary method consistent with the present disclosure that receives, organizes, and presents information received from different anti-malware agents or test computers. <figref idref="DRAWINGS">FIG. <b>2</b></figref> includes step <b>210</b> where information relating to malware may be received, for example, by anti-malware evaluation system <b>150</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Step <b>220</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may then identify locations where this malware was found. Alternatively or additionally, step <b>220</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may identify a location where a data request originated, a network location affected by the malware, a malware type, a test type or test location, and/or a time stamp that identifies a time when a test detected malware. Next in step <b>230</b> the received information may be organized and a visualization of that data may be generated and displayed in step <b>240</b>. Then, in optional step <b>250</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> a particular type of malware detection agent may be shut down (turned off) and additional malware test data/information may be received in step <b>260</b> reflecting the results of said adjustment. After step <b>260</b> program flow may move back to step <b>220</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, after which that information may be organized and used to generate additional visualizations.</p><p id="p-0033" num="0032">The steps of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be executed iteratively when the performance of different discrete anti-malware agents are evaluated. As such, step <b>250</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may turn on an anti-malware agent that was previously shut down and then shut down a different anti-malware agent. The turning on or off of certain specific tests or test layers and collecting of test data that correspond to those changing conditions may be used to help identify strengths and weakness associated with different specific computing devices that perform anti-malware tests.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a World map that may be used to identify and map locations where malware has been detected. <figref idref="DRAWINGS">FIG. <b>3</b></figref> includes circles <b>310</b> that include a smaller circle and a larger circle. The size of a circle may correspond to an area where a particular type of malware has been detected. The smaller circle of circles <b>310</b> may identify a region where a particular virus has been identified and as that virus propagates through the internet, the larger circle of circles <b>310</b> may indicate that the virus has spread from central Europe into Western Europe and into Ukraine, for example. Characteristics of malware circles <b>310</b> (e.g. a line weight of circles <b>310</b>, a color of circles <b>310</b>, and the solid line of circles <b>310</b>) may correspond to a type of malware or to a type of anti-malware agent that discovered malware or the scale or infectiousness thereof.</p><p id="p-0035" num="0034">Item <b>310</b>-V<b>1</b> is a malware vector that indicates that the malware associated with circles <b>310</b> has moved to the Eastern United States as indicated by circle <b>320</b>. Similarly, malware vector <b>310</b>-V<b>2</b> indicates that the malware associated with circles <b>310</b> has moved to Australia as indicated by circle <b>330</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Visualizations consistent with the present disclosure may be used to identify locations where particular types of malware have been detected, may identify the extent of the spread of a particular type of malware in a region (e.g. Europe), and may include vectors that identify malware jumping from one region to another (e.g. from Europe to the Eastern U.S.A.). Various forms of data may be reflected by the weight, color, or pattern of a vector line. That data be access either through color coding, hovering over a particular vector, or clicking on the same. That data related to vectors (as well as circles <b>310</b>) may be displayed in popup bubbles, pre-existing windows, or other forms of display.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>3</b></figref> also illustrates a second type of malware that has been identified in China. This second type of malware may be identified graphically using the dashed circles (<b>340</b>, <b>350</b>, <b>360</b>, &#x26; <b>370</b>) and dashed malware vectors (<b>320</b>-V<b>1</b>, <b>320</b>-V<b>2</b> &#x26; <b>350</b>-V<b>1</b>) included in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Note that this second type of malware begins to spread in China as indicated by the circles <b>340</b> with increasing diameter. This second type of malware then spreads to Brazil via vector <b>320</b>-V<b>1</b> and to Japan via vector <b>320</b>-V<b>2</b>. Note that the spread of this second type of malware to Brazil and to Japan are indicated by circles <b>350</b> and <b>360</b> respectively. <figref idref="DRAWINGS">FIG. <b>3</b></figref> also illustrates that the second type of malware has spread to the Western U.S.A. via threat vector <b>350</b>-V<b>1</b>. Note that the spread of this second type of malware to Brazil, to Japan, and to the Western U.S.A. are indicated by circles <b>350</b>, <b>360</b>, and <b>370</b>. Through use of display data, circles, weight lines, color coding, vectors and the like, outbreaks of malware may be identified and contact traced throughout the world. The scale of the map shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> may likewise be scaled up or down to reflect varying details of information that can range from countries, to states, to municipalities, to wide area networks, to local area networks, and even individual computing devices.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a computer or datacenter that is protected from malware by several different layers of protection. These layers of protection that may be provided by anti-malware tools can be graphically displayed vis-&#xe0;-vis computer or datacenter <b>410</b> is protected by an outer layer or shell <b>420</b>, a middle layer <b>430</b>, and an inner layer <b>440</b> of malware protection. Layers may be representative of not only particular tools, but also portions of network relative computing device or datacenter <b>410</b>.</p><p id="p-0038" num="0037">Arrowed lines <b>450</b>, <b>460</b>, and <b>470</b> represent different types of malware that are attempting to attack computer or datacenter <b>410</b>. Note that each layer or shell of malware protection <b>420</b>, <b>430</b>, and <b>440</b> and each type of malware threat <b>450</b>, <b>460</b>, and <b>470</b> are represented by different line weights/widths in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Here again methods consistent with the present disclosure may alternatively use color codes or other forms of visual display instead of line weights/widths to identify different malware protection layers or different types of malware threats.</p><p id="p-0039" num="0038">Note that <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates anti-malware layer <b>420</b> stopping malware <b>450</b> from attacking computer or datacenter <b>410</b>, illustrates anti-malware layer <b>430</b> stopping malware <b>460</b> from attacking computer/datacenter <b>410</b>, and illustrates anti-malware layer <b>440</b> stopping malware <b>470</b> from attacking computer/datacenter <b>410</b>. Functions consistent with anti-malware layer <b>420</b> may be performed by a computing device at a computer network like firewall/gateway <b>120</b>A or anti-malware agents operational at wireless mesh network <b>140</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Functions that may be performed by anti-malware layer <b>420</b> may include content filtering using universal resource locators (URL), deep packet inspection (DPI), botnet filtering, firewall/gateway virus inspection scanning, and intrusion prevention. As such a firewall or gateway device may comprise a first layer of defense, where that firewall/gateway or computer performs a set of tests that may not include executing program code in an isolated secure environment (e.g. a sandbox computer).</p><p id="p-0040" num="0039">One of ordinary skill in the art would understand that looking up a URL or domain associated with a request for data may be a first anti-malware test of a plurality of anti-malware tests. When a request to access data stored at a URL or domain is listed in a blacklist, the access request can be blocked by the firewall/gateway. In certain instances a list of URLs or domains associated with malware or other undesired content may be updated over time.</p><p id="p-0041" num="0040">DPI refers to the scanning of data included in a set of data or data packets for patterns that are known to be associated with malware. Methods consistent with the present disclosure may perform DPI scans on unencrypted data or may perform DPI scans on data transmitted according via a secure socket layer (SSL) or communication session, such DPI scans may be referred to as DPI-SSL scans.</p><p id="p-0042" num="0041">Botnet filtering may be performed by a processor executing instructions that check to see if data is being sent from a protected computer to computing devices outside of a protected network. For example, botnet filters may be used to identify and block outgoing communications that include passwords, credit card numbers, key strokes, or other proprietary or sensitive data.</p><p id="p-0043" num="0042">The presence of a virus at a firewall/gateway may be identified using DPI or may be identified by identifying certain types of suspicious activity. For example, an anti-virus program may identify that as a piece of program code has been replicated or may identify that a piece of program code has been attached to a legitimate document.</p><p id="p-0044" num="0043">Intrusion detection may include identifying that data being sent to computer outside of a protected network does not conform to a set of rules. For example, when a particular operation should send no more than X bytes of data to an external computer, intrusion detection software may identify when such an operation attempts to send more than X bytes of data to the external computer when that operation is performed. Accordingly, operations performed by anti-malware layer <b>420</b> may be limited to a set of specific types of operations.</p><p id="p-0045" num="0044">The second layer, item <b>430</b> illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref> may perform a second set of anti-malware operations/tests and these operations may be performed at computing device that is remote from a particular protected network. Such remote computing devices can perform functions related to more advanced DPI, extended URL/domain name checking, email security, or include functions performed by an isolated computer (e.g. a sandbox computer). In certain instances, anti-malware functions performed at an external computer may overlap with functions performed at a firewall/gateway.</p><p id="p-0046" num="0045">Additionally or alternatively, functions performed by an external computer may be tuned to identify recently identified threats or may identify threats for a first time. For example, a sandbox computer may be used to identify a new malware threat, DPI signatures associated with that new malware threat may be updated and stored at the remote computer, and the operation of DPI scanners at the remote computer may be updated to identify this new malware using DPI signatures. In certain instances, the remote computer may have access to a larger set of malware associated DPI signatures that a set of malware signatures currently stored at a firewall.</p><p id="p-0047" num="0046">Similarly an external computer may be aware of URLs/domains that recently have been assigned a bad reputation at a time when a firewall currently store no data identifying that these URLs/domains have been assigned the bad reputation. Over time, of course recently identified DPI patterns or URLs/domains may be sent to firewalls such that operations of those firewalls can be enhanced overtime. Suspicious activity can also be identified by computers that are remote to a firewall or secure network.</p><p id="p-0048" num="0047">Such suspicious activity can be performed by an isolated computer (e.g. a sandbox computer) that allows computer data be manipulated or executed by a processor. Suspicious activity identify by a sandbox computer may include identifying that program code has changed state (e.g. from non-executable code to executable code), that may include overwriting certain portions of memory that should not be overwritten under normal circumstances, may include identifying that a certain set of program code is attempting to send data to another computer in violation of a rule, or by identifying that a set of computer data performs a function of self-replication.</p><p id="p-0049" num="0048">Computers external to a computer network may also be used to perform security functions that test email for threats. Such email tests may identify whether an email is hosted on an external server or by a computer inside of a protected network, data sent to or from particular email addresses or domains may be tested. In such instances, tests performed by this external computer may include DPI performed on email or email attachments, URL/domain name checks on attachment or links that are included in email, or may include allowing data included in an email or email attachment to be processed or executed by an isolated sandbox computer. As such, operations performed at layer <b>430</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref> may include any form of malware test desired or that is configured to be performed at the external computer. Such external computers may be computers accessible via the Internet and such external computers may be located in the Cloud.</p><p id="p-0050" num="0049">The third layer, item <b>440</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref> that may include software operational on an endpoint device that tests computer data to see if it includes malware. Endpoint devices include computers, laptops, tablet computers, smartphones, or any computing device that may not always be contained within a secure network. As such, endpoint devices can be personal computers or general purpose computing devices that do not provide services for other computers. Endpoint devices may be computing devices <b>120</b>B-<b>120</b>E or <b>140</b>E &#x26; <b>140</b>F of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Endpoints may, thus, be client devices that do not provide the functionally of computer server or firewall/gateway for other client devices. Even though endpoint devices may not provide functionality of a firewall or gateway for other client devices, endpoint devices may be configured with a software firewall that performs tests on computer data received by an endpoint device. Tests performed by such a software firewall may include URL/domain name reputation checking, DPI scanning, antivirus tests, and anti-bot testing.</p><p id="p-0051" num="0050">Since the third layer <b>440</b> of testing includes tests that may be performed at an endpoint device, this third layer <b>440</b> may also protect computers from malware even when those computers are not contained within a protected network. Functionality that may also be associated with this third layer <b>440</b> of protection includes rolling back a software configuration at an endpoint computer. Such a rollback may restore a software configuration at an endpoint computer to a state that is free of malware after that endpoint computer has been compromised by malware. In such instances the restored software configuration may be equivalent to a software configuration at the endpoint device from a point in time before the malware compromised the endpoint computer.</p><p id="p-0052" num="0051">In certain instances, protection layer <b>440</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref> may also include functionality that sends computer data to a computer in the Internet or cloud that performs additional tests. Such additional test may be consistent with tests performed by protection layer <b>430</b> that were previously discussed. As such, protection layer <b>440</b> may perform software firewall functions that are similar to protections provided by a firewall of protection layer <b>420</b>. Software functionality consistent with protection layer <b>440</b> may be performed when an endpoint computer is contained within a secure network when three different protection layer (<b>420</b>, <b>430</b>, and <b>440</b>) each operate to prevent malware from attacking or infecting computing devices. Alternatively, when an endpoint computer is not located within a protected network, functionality consistent with layer <b>440</b> or consistent with both layer <b>440</b> and <b>430</b> may be performed.</p><p id="p-0053" num="0052">As attacks may be identified from information received from malware agents at various locations, malware threats <b>450</b>, <b>460</b>, and <b>470</b> may be illustrated as being stopped by or passing through a protection layer/shell not only as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> but in the context of a methodology like that disclosed in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. As previously mentioned threat <b>450</b> is stopped by protection layer <b>420</b>, thread <b>460</b> is stopped by protection layer <b>430</b>, and threat <b>470</b> is stopped by protection layer <b>470</b>. Illustrations consistent with <figref idref="DRAWINGS">FIG. <b>4</b></figref> may be generated in real-time or in near-real-time as threat data is collected by monitoring computers (e.g. anti-malware evaluation system <b>160</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) over time. Such illustrations may be dynamic and may show threats <b>450</b>, <b>460</b>, and <b>470</b> moving toward and through or toward a protection both locally and globally as a result of evaluation like that of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0054" num="0053">Method and apparatus consistent with the present disclosure may be used to identify that a certain type of threat is targeting one or more particular computer networks. In an instance when the first protection layer <b>420</b> is observed as currently not stopping a particular type or instance of malware, yet the second layer <b>430</b> is observed as currently stopping that particular type or instance of malware, functionality at protection layer <b>420</b> may be updated to include tests or data that allow protection layer <b>420</b> to identify this particular type or instance of malware. In such an instance a processor executing instructions of tests performed by protection layer <b>430</b> may identify that DPI signature data should be provided to firewalls executing tests performed by protection layer <b>420</b>.</p><p id="p-0055" num="0054">This processor may then cause these identified DPI signatures to be sent to particular firewalls such that those particular firewalls could identify a particular type or instance of malware. Such an automatic functionality could reduce an amount of work that need be performed at a remote computer at the Internet or cloud by updating anti-malware capabilities at firewall or software firewall dynamically, for example, when a load factor at the remote computer increases to a threshold level. Because of this, analytical tools like the methodology of <figref idref="DRAWINGS">FIG. <b>2</b></figref> and associated with the present disclosure may be used to balance an amount of work performed by computing devices that reside at any protection layer. Furthermore, threat data and generated graphical data may be stored for later reference and this data may be reviewed by intelligent machine processes or by humans when those machines or humans identify patterns associated with the spread of malware.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a computing device or computer network that is currently protected by two of the three protection layers of <figref idref="DRAWINGS">FIG. <b>4</b></figref>. <figref idref="DRAWINGS">FIG. <b>5</b></figref> includes protection layer <b>520</b> that may provide protection consistent with protection layer <b>430</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref> and protection layer <b>540</b> that may provide protection consistent with protection layer <b>440</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>. <figref idref="DRAWINGS">FIG. <b>5</b></figref> also includes computer or computer network <b>510</b> protected by protection layers <b>520</b> and <b>540</b>. The illustration depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may have been generated using data from anti-malware agents after the second protection layer <b>430</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref> had been disabled (turned off) as discussed in respect to step <b>250</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0057" num="0056">Tools consistent with evaluating current conditions of the movement of malware through a protection infrastructure may include the ability to turn on or turn off any protection layer when the performances of one or more of a set of protection layers are evaluated. Such an analysis tools may be used to improve the operation of a multi-layer protection system by optimizing which layer should perform one or more types of tests versus another protection layer. Tools consistent with the present disclosure may include a user interface from which settings or conditions may be entered or identified. One of these settings or conditions may cause the functionality of a protection level to be disabled. The disabling or enabling of a particular protection layer test capabilities may be performed by an authorized user entering information into a user interface. A particular protection layer may be disabled at one or more specific networks or protection layers may be disabled throughout an area according to user input.</p><p id="p-0058" num="0057">Data analysis methods consistent with the present disclosure may be used to generate and display visual representations of in real-time or near-real-time threat data that could not otherwise be interpreted by people. Visualizations may be generated that show the movement of malware across the entire World as that malware spreads. Visualizations consistent with the present disclosure may allow users to view the movement of malware through a region or may allow users to identify what types or variants of malware are currently attacking particular individual networks. For example visualizations may depict the movement of malware in a map of the entire World, such as the map illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Visualizations may identify malware attacks that are occurring in a particular region (country, state, or municipality), or may illustrate malware attacking a particular network, such as a local area network (LAN) or wide area network (WAN) of a particular company. As such, a user interface may receive inputs that identify a particular region or a particular network and that cause a visualization to display malware information according to those user inputs.</p><p id="p-0059" num="0058">When methods or apparatus consistent with the present disclosure identify that variants of a particular type of malware are currently being deployed, anti-malware protection tests at certain levels of a multi-level anti-malware system may not be able to identify each and every variant form of a particular type of malware. In such instances, a number of remote computers located within a region may be increased to keep up with increased demands for being able to identify a new malware variant.</p><p id="p-0060" num="0059">For example, a variant of a first malware instance may be easily identified using DPI when a second variant of the first malware instance would evade detection by DPI inspection. This can occur, when a virus is packaged within different types of computer data or when executable code of a virus is encrypted or hidden by code that causes the virus to be unpacked from other computer data. In instances when many variants of a particular type or instance of malware are propagating through computer networks, an increase in an amount of work required to identify these threats may be required. When a workload at a particular computing device increases to or beyond a threshold level, additional computers capable of performing tests may be directed to analyzing computer data for potential threats.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates various different steps that may be performed by methods or apparatus consistent with the present disclosure as a user interacts with a user interface consistent with the present disclosure. <figref idref="DRAWINGS">FIG. <b>6</b></figref> begins with step <b>610</b> where an input may be received via a user interface. The input received in step <b>610</b> of <figref idref="DRAWINGS">FIG. <b>6</b></figref> could identify a region (the World, a country, a state, a city) or could identify a particular network, sub-net, or computing device. When a user input identifies a particular network, that network could be associated with a network that the user is chartered to support. For example, an administrator of a network associated with company ABC could enter a selection that results in visualizations being generated that identify malware threats that are currently affecting the computer network of company ABC.</p><p id="p-0062" num="0061">Next step <b>620</b> may identify data that is consistent with a received input and then malware data or information may be received and organized in step <b>630</b> of FIG. The data received and organized in step <b>630</b> may be data consistent with the input received in step <b>610</b>. For example, a user may have selected to view malware activity currently impacting computers in New York State or at government organizations in Washington D.C. and malware data associated with a selection may be used to generate and display a visualization of malware information in step <b>640</b> of <figref idref="DRAWINGS">FIG. <b>6</b></figref>. Visualizations generated in step <b>640</b> of <figref idref="DRAWINGS">FIG. <b>6</b></figref> may be consistent with the visualizations illustrated in <figref idref="DRAWINGS">FIG. <b>3</b>, <b>4</b></figref>, or <b>5</b> of this disclosure.</p><p id="p-0063" num="0062">Here again, these visualizations may use various colors or line weights when illustrating the spread of different types or instances of malware. After step <b>640</b> program flow moves to determination step <b>650</b> that identifies whether a new input has been received via the user interface. When step <b>640</b> identifies that no new input has been received via the user interface, program flow may move back to step <b>630</b> where data is received and organized according to a current set of selections or inputs, after which an updated visualization can be generated and displayed in step <b>640</b>. When determination step <b>650</b> identifies that a new input has been received via the user interface, program flow may move back to step <b>620</b>, where data consistent with the newly received input may be identified. A change in an input or selections received via the user interface may cause malware data associated with a different area or with a different particular network to be organized and displayed in a generated visualization.</p><p id="p-0064" num="0063">Data sent through networks of any kind may be analyzed for malware threats. Such networks may include cellular networks, networks associated with access or email providers, corporate data networks, or home data networks. In certain instances, malware threat data may identify a type of communication that is currently spreading a form of malware. For example, email or data sent via a particular cellular provider may be identified as a currently critical threat vector. Such determinations may result in warning message being sent to user devices that identify that a certain type of malware is spreading and these messages may be used to warn users not to open certain attachments.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a computing system that may be used to implement an embodiment of the present invention. The computing system <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref> includes one or more processors <b>710</b> and main memory <b>720</b>. Main memory <b>720</b> stores, in part, instructions and data for execution by processor <b>710</b>. Main memory <b>720</b> can store the executable code when in operation. The system <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref> further includes a mass storage device <b>730</b>, portable storage medium drive(s) <b>740</b>, output devices <b>750</b>, user input devices <b>760</b>, a graphics display <b>770</b>, peripheral devices <b>780</b>, and network interface <b>795</b>.</p><p id="p-0066" num="0065">The components shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> are depicted as being connected via a single bus <b>790</b>. However, the components may be connected through one or more data transport means. For example, processor unit <b>710</b> and main memory <b>720</b> may be connected via a local microprocessor bus, and the mass storage device <b>730</b>, peripheral device(s) <b>780</b>, portable storage device <b>740</b>, and display system <b>770</b> may be connected via one or more input/output (I/O) buses.</p><p id="p-0067" num="0066">Mass storage device <b>730</b>, which may be implemented with a magnetic disk drive or an optical disk drive, is a non-volatile storage device for storing data and instructions for use by processor unit <b>710</b>. Mass storage device <b>730</b> can store the system software for implementing embodiments of the present invention for purposes of loading that software into main memory <b>720</b>.</p><p id="p-0068" num="0067">Portable storage device <b>740</b> operates in conjunction with a portable non-volatile storage medium, such as a FLASH memory, compact disk or Digital video disc, to input and output data and code to and from the computer system <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>. The system software for implementing embodiments of the present invention may be stored on such a portable medium and input to the computer system <b>700</b> via the portable storage device <b>740</b>.</p><p id="p-0069" num="0068">Input devices <b>760</b> provide a portion of a user interface. Input devices <b>760</b> may include an alpha-numeric keypad, such as a keyboard, for inputting alpha-numeric and other information, or a pointing device, such as a mouse, a trackball, stylus, or cursor direction keys. Additionally, the system <b>700</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> includes output devices <b>750</b>. Examples of suitable output devices include speakers, printers, network interfaces, and monitors.</p><p id="p-0070" num="0069">Display system <b>770</b> may include a liquid crystal display (LCD), a plasma display, an organic light-emitting diode (OLED) display, an electronic ink display, a projector-based display, a holographic display, or another suitable display device. Display system <b>770</b> receives textual and graphical information, and processes the information for output to the display device. The display system <b>770</b> may include multiple-touch touchscreen input capabilities, such as capacitive touch detection, resistive touch detection, surface acoustic wave touch detection, or infrared touch detection. Such touchscreen input capabilities may or may not allow for variable pressure or force detection.</p><p id="p-0071" num="0070">Peripherals <b>780</b> may include any type of computer support device to add additional functionality to the computer system. For example, peripheral device(s) <b>780</b> may include a modem or a router.</p><p id="p-0072" num="0071">Network interface <b>795</b> may include any form of computer interface of a computer, whether that be a wired network or a wireless interface. As such, network interface <b>795</b> may be an Ethernet network interface, a BlueTooth&#x2122; wireless interface, an 802.11 interface, or a cellular phone interface.</p><p id="p-0073" num="0072">The components contained in the computer system <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref> are those typically found in computer systems that may be suitable for use with embodiments of the present invention and are intended to represent a broad category of such computer components that are well known in the art. Thus, the computer system <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref> can be a personal computer, a hand held computing device, a telephone (&#x201c;smart&#x201d; or otherwise), a mobile computing device, a workstation, a server (on a server rack or otherwise), a minicomputer, a mainframe computer, a tablet computing device, a wearable device (such as a watch, a ring, a pair of glasses, or another type of jewelry/clothing/accessory), a video game console (portable or otherwise), an e-book reader, a media player device (portable or otherwise), a vehicle-based computer, some combination thereof, or any other computing device. The computer can also include different bus configurations, networked platforms, multi-processor platforms, etc. The computer system <b>700</b> may in some cases be a virtual computer system executed by another computer system. Various operating systems can be used including Unix, Linux, Windows, Macintosh OS, Palm OS, Android, iOS, and other suitable operating systems.</p><p id="p-0074" num="0073">The present invention may be implemented in an application that may be operable using a variety of devices. Non-transitory computer-readable storage media refer to any medium or media that participate in providing instructions to a central processing unit (CPU) for execution. Such media can take many forms, including, but not limited to, non-volatile and volatile media such as optical or magnetic disks and dynamic memory, respectively. Common forms of non-transitory computer-readable media include, for example, a FLASH memory, a flexible disk, a hard disk, magnetic tape, any other magnetic medium, a CD-ROM disk, digital video disk (DVD), any other optical medium, RAM, PROM, EPROM, a FLASHEPROM, and any other memory chip or cartridge.</p><p id="p-0075" num="0074">While various flow diagrams provided and described above may show a particular order of operations performed by certain embodiments of the invention, it should be understood that such order is exemplary (e.g., alternative embodiments can perform the operations in a different order, combine certain operations, overlap certain operations, etc.).</p><p id="p-0076" num="0075">The foregoing detailed description of the technology herein has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the technology to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. The described embodiments were chosen in order to best explain the principles of the technology and its practical application to thereby enable others skilled in the art to best utilize the technology in various embodiments and with various modifications as are suited to the particular use contemplated. It is intended that the scope of the technology be defined by the claim.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for visualizing the spread of malware, the method comprising:<claim-text>generating a visualization that illustrates malware test vectors that identify malware detected by execution of differing sets of preventative program code;</claim-text><claim-text>displaying the visualization on a display screen; and</claim-text><claim-text>continually updating the visualization displayed on the display screen to include additional malware test vectors as the additional malware test vectors are identified by the differing sets of preventative program code.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the visualization includes information reflecting program code that stopped the spread of malware.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>receiving an input that disables a particular set of preventative program code;</claim-text><claim-text>receiving new malware test vectors resulting from disabling the particular set of preventative program code;</claim-text><claim-text>generating a new visualization that illustrates the new malware test vectors from disabling the particular set of preventative program code; and</claim-text><claim-text>displaying the new visualization on the display screen.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the visualization includes a geographical map.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising identifying deep packet inspection (DPI) signature data characteristic of a new malware type.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising: matching DPI signatures generated on received data with the DPI signature of the new malware type.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>identifying areas associated with the spreading of a detected malware type;</claim-text><claim-text>identifying that the detected malware type has spread to a second location; and</claim-text><claim-text>updating the visualization to include a vector that illustrates that the detected malware type has spread from a first location to the second location.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>generating a new visualization that includes a map and locations where each of a respective type of malware is identified as being detected at a first point in time;</claim-text><claim-text>displaying the new visualization on the display screen;</claim-text><claim-text>generating a second new visualization that includes updated location information on the map, the updated location information providing an indication of a movement of at least one malware type of the respective types of malware from a first location on the map to a second location on the map; and</claim-text><claim-text>displaying the second new visualization on the display screen.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating the visualization also includes identifying colors for illustrating respective members of the malware test vectors.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the generated visualization includes the identified colors for each of the respective members of the malware test vectors.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system for visualizing the spread of malware, the system comprising:<claim-text>a processor that executes instructions stored in memory to generate a visualization that illustrates malware test vectors identifying malware detected by the execution of differing sets of preventative program code; and</claim-text><claim-text>a display screen that displays the visualization, wherein the processor executes further instructions to continually update the visualization displayed on the display screen to include additional malware test vectors as the additional malware test vectors are identified by the differing sets of preventative program code.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the visualization includes information reflecting program code that stopped the spread of malware.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising an interface that receives:<claim-text>input that disables a particular set of preventative program code, and</claim-text><claim-text>new malware test vectors resulting from disabling the particular set of preventative program code; wherein the processor executes further instructions to generate a new visualization generated that illustrates the new malware test vectors resulting from disabling the particular set of preventative program code, and wherein the display screen displays the new visualization.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the visualization includes a geographical map.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor executes further instructions to identify deep packet inspection (DPI) signature data characteristic of a new malware type.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor executes further instructions to match DPI signatures generated on received data with the DPI signature of the new malware type.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor executes further instructions to:<claim-text>identify area data associated with the spreading of a detected malware type;</claim-text><claim-text>identify that the detected malware type has spread to a second location; and</claim-text><claim-text>update the visualization to include a new vector illustrating that the detected malware type has spread from a first location to the second location.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processor executes further instructions to:<claim-text>generate a new visualization that includes a map and locations where each of a respective type of malware is identified as being detected at a first point in time, wherein the display screen displays the new visualization; and</claim-text><claim-text>generate a second new visualization that includes updated location information on the map, the updated location information providing an indication of a movement of at least one malware type of the respective types of malware from a first location on the map to a second location on the map, wherein the display screen displays the second new visualization.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processor generates the visualization by identifying colors for illustrating respective members of the malware test vectors, wherein the visualization includes the identified colors for each of the respective members of the malware test vectors.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer-readable storage medium having embodied thereon a program to implement a method visualizing the spread of malware, the method comprising:<claim-text>generating a visualization that illustrates malware test vectors that identify malware detected by the execution of differing sets of preventative program code;</claim-text><claim-text>displaying the visualization on a display screen; and</claim-text><claim-text>continually updating the visualization displayed on the display screen to include additional malware test vectors as the additional malware test vectors are identified by the differing sets of preventative program code.</claim-text></claim-text></claim></claims></us-patent-application>