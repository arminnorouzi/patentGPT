<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007340A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007340</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941795</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>4402</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>442</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>437</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>44029</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>44209</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>437</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">TRICK PLAY AND TRICK RATE SUPPORT FOR HLS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17119386</doc-number><date>20201211</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11477522</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17941795</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62946936</doc-number><date>20191211</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63030771</doc-number><date>20200527</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>ARRIS Enterprises LLC</orgname><address><city>Suwanee</city><state>GA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KALAICHELVAN</last-name><first-name>Kaliraj</first-name><address><city>San Diego</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>FRANKS</last-name><first-name>Bill</first-name><address><city>San Diego</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>ARRIS Enterprises LLC</orgname><role>02</role><address><city>Suwanee</city><state>GA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method and system for rendering a HTTP Live Streaming video stream on a display includes a player receiving a master manifest from a network device in response to selecting a video channel. The player also receives a plurality of variant manifests referenced by the master manifest from the network device, where each of the variant manifests references video files each of which having a different bit rate for the same video stream. The player simultaneously maintains the variant manifests in the player. The player determines an effective start time of the video stream based upon the selecting video channel where the effective start time is a time later than an earliest time referenced in the plurality of variant manifests. The player enables reverse of the video stream based upon one of the variant manifests to as early as the effective start time and not enabling reverse of the video stream based upon one of the variant manifests to a time earlier than the effective start time.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="151.89mm" wi="121.75mm" file="US20230007340A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="230.21mm" wi="135.47mm" orientation="landscape" file="US20230007340A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="159.43mm" wi="156.38mm" orientation="landscape" file="US20230007340A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="206.25mm" wi="152.06mm" orientation="landscape" file="US20230007340A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="144.02mm" wi="95.33mm" file="US20230007340A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="138.01mm" wi="95.84mm" file="US20230007340A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="166.54mm" wi="92.96mm" file="US20230007340A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="136.57mm" wi="100.50mm" file="US20230007340A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="146.56mm" wi="99.74mm" file="US20230007340A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="154.52mm" wi="103.63mm" file="US20230007340A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="201.34mm" wi="130.39mm" orientation="landscape" file="US20230007340A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="160.53mm" wi="91.52mm" file="US20230007340A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="158.67mm" wi="137.58mm" file="US20230007340A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="151.38mm" wi="135.55mm" file="US20230007340A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="86.70mm" wi="82.47mm" file="US20230007340A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="177.38mm" wi="123.78mm" file="US20230007340A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/119,386 filed Dec. 11, 2020, which claims the benefit of U.S. Provisional Patent Application Ser. No. 62/946,936 filed Dec. 11, 2019 and entitled &#x201c;Trick Play and Trick Rate Support for HLS Live Sliding Window Playlists&#x201d; and U.S. Provisional Patent Application Ser. No. 63/030,771 filed May 27, 2020 and entitled &#x201c;TRICK PLAY AND TRICK RATE SUPPORT FOR HLS&#x201d; The complete disclosure of the above application is hereby incorporated by reference for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The subject matter of this application relates to HLS media streams.</p><p id="p-0004" num="0003">Cable system operators and other network operators provide streaming media to a gateway device for distribution in a consumer's home. The gateway device offers a singular point to access different types of content, such as live content, on-demand content, online content, over-the-top content, and content stored on a local or a network based digital video recorder. The gateway enables a connection to home network devices. The connection may include, for example, connection to a WiFi router or a Multimedia over Coax Alliance (MoCA) connection that provide IP over in-home coaxial cabling.</p><p id="p-0005" num="0004">Consumers prefer to use devices that are compliant with standard protocols to access streaming video from the gateway device, so that all the devices within the home are capable of receiving streaming video content provided from the same gateway device. HTTP Live Streaming (HLS) is an adaptive streaming communications protocol created by Apple to communicate with iOS, Apple TV devices, and Macs running OSX Snow Leopard or later. HLS is capable of distributing both live and on-demand files, and is the sole technology available for adaptively streaming to Apple devices.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0006" num="0005">For a better understanding of the invention, and to show how the same may be carried into effect, reference will now be made, by way of example, to the accompanying drawings, in which:</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an overview of a cable system.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates HLS streaming video content.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a HLS mater playlist.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a HLS VOD playlist.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an event playlist.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an updated event playlist.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a sliding window playlist.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an updated sliding window playlist.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a further updated sliding window playlist.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates anchoring of playlists.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a player and a network device.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a player with VOD playlists.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates a player with event playlists.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>14</b></figref> illustrates a player with sliding window playlists.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>15</b></figref> illustrates effective start time for playlists.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>16</b></figref> illustrates a HLS player.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>17</b></figref> illustrates a HLS sliding playlist to event playlist conversion system.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0024" num="0023">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a cable system overview is illustrated with a cable network connection provided to a gateway <b>100</b> of a cable customer's home <b>102</b>. The cable network connection provided to the gateway <b>100</b> may be from a cable system operator or other streaming content provider, such as a satellite system. The gateway <b>100</b> provides content to devices in a home network <b>104</b> in the consumer's home <b>102</b>. The home network <b>104</b> may include a router <b>106</b> that receives IP content from the gateway <b>100</b> and distributes the content over a WiFi or a cable connection to client devices <b>111</b>, <b>112</b>, <b>113</b>. The router <b>106</b> may be included as part of the gateway <b>100</b>. In general, the cable network connection, or other types of Internet or network connection, provides streaming media content to client devices in any suitable manner. The streaming media content may be in the form of HTTP Live Streaming (HLS).</p><p id="p-0025" num="0024">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, at a high level HLS enables adaptive streaming of video content, by creating multiple files for distribution to a media player, which adaptively changes media streams being obtained to optimize the playback experience. HLS is a HTTP-based technology so that no streaming server is required, so all the switching logic resides on the player. To distribute content to HLS players, the video content is encoded into multiple files at different data rates and divided into short chucks, each of which is typically between 5-10 seconds long. The chunks are loaded onto a HTTP server along with a text based manifest file with a .M3U8 extension that directs the player to additional manifest files for each of the encoded media streams. The short video content media files are generally referred to as &#x201c;chunked&#x201d; files.</p><p id="p-0026" num="0025">The player monitors changing bandwidth conditions over time to the player. If the change in bandwidth conditions indicates that the stream should be changed to a different bit rate, the player checks the master manifest file for the location of additional streams having different bit rates. Using a stream specific manifest file for a selected different stream, the URL of the next chuck of video data is requested. In general, the switching between video streams by the player is seamless to the viewer.</p><p id="p-0027" num="0026">A master playlist (e.g., manifest file) describes all of the available variants for the content. Each variant is a version of the stream at a particular bit rate and is contained in a separate variant playlist (e.g., manifest file). The client switches to the most appropriate variant based on the measured network bit rate to the player. The client's player is tuned to minimize playback stalling to give the viewer the best possible streaming experience. The master playlist isn't typically re-read. Once the player has read the master playlist, it assumes the set of variants isn't changing. The stream ends as soon as the client sees the EXT-X-ENDLIST tag on one of the individual variant playlists.</p><p id="p-0028" num="0027">For example, the master playlist may include a set of three variant playlists. A low index playlist, having a relatively low bit rate, may reference a set of respective chunk files. A medium index playlist, having a medium bit rate, may reference a set of respective chunk files. A high index playlist, having a relatively high bit rate, may reference a set of respective chunk files.</p><p id="p-0029" num="0028">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, an exemplary master playlist that defines five different variants is illustrated. Exemplary tags used in the master playlist may include one or more of the following.</p><p id="p-0030" num="0029">EXTM3U: Indicates that the playlist is an extended M3U file. This type of file is distinguished from a basic M3U file by changing the tag on the first line to EXTM3U. All HLS playlists start with this tag.</p><p id="p-0031" num="0030">EXT-X-STREAM-INF: Indicates that the next URL in the playlist file identifies another playlist file. The EXT-X-STREAM-INF tag has the following parameters.</p><p id="p-0032" num="0031">AVERAGE-BANDWIDTH: An integer that represents the average bit rate for the variant stream.</p><p id="p-0033" num="0032">BANDWIDTH: An integer that is the upper bound of the overall bitrate for each media file, in bits per second. The upper bound value is calculated to include any container overhead that appears or will appear in the playlist.</p><p id="p-0034" num="0033">FRAME-RATE: A floating-point value that describes the maximum frame rate in a variant stream.</p><p id="p-0035" num="0034">HDCP-LEVEL: Indicates the type of encryption used. Valid values are TYPE-0 and NONE. Use TYPE-0 if the stream may not play unless the output is protected by HDCP.</p><p id="p-0036" num="0035">RESOLUTION: The optional display size, in pixels, at which to display all of the video in the playlist. This parameter should be included for any stream that includes video.</p><p id="p-0037" num="0036">VIDEO-RANGE: A string with valid values of SDR or PQ. If transfer characteristic codes 1, 16, or 18 aren't specified, then this parameter must be omitted.</p><p id="p-0038" num="0037">CODECS: (Optional, but recommended) A quoted string containing a comma-separated list of formats, where each format specifies a media sample type that's present in a media segment in the playlist file. Valid format identifiers are those in the ISO file format name space defined by RFC 6381 [RFC6381].</p><p id="p-0039" num="0038">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, one of the types of video playlists include a video on demand (VOD) playlist. For VOD sessions, media files are available representing the entire duration of the presentation. The index file is static and contains a complete list of URLs to all media files created since the beginning of the presentation. This kind of session allows the client full access to the entire program.</p><p id="p-0040" num="0039">Exemplary tags used in the VOD playlist may include one or more of the following.</p><p id="p-0041" num="0040">EXTM3U: Indicates that the playlist is an extended M3U file. This type of file is distinguished from a basic M3U file by changing the tag on the first line to EXTM3U. All HLS playlists start with this tag.</p><p id="p-0042" num="0041">EXT-X-PLAYLIST-TYPE: Provides mutability information that applies to the entire playlist file. This tag may contain a value of either EVENT or VOD. If the tag is present and has a value of EVENT, the server must not change or delete any part of the playlist file (although it may append lines to it). If the tag is present and has a value of VOD, the playlist file must not change.</p><p id="p-0043" num="0042">EXT-X-TARGETDURATION: Specifies the maximum media-file duration.</p><p id="p-0044" num="0043">EXT-X-VERSION: Indicates the compatibility version of the playlist file. The playlist media and its server must comply with all provisions of the most recent version of the IETF Internet-Draft of the HTTP Live Streaming specification that defines that protocol version.</p><p id="p-0045" num="0044">EXT-X-MEDIA-SEQUENCE: Indicates the sequence number of the first URL that appears in a playlist file. Each media file URL in a playlist has a unique integer sequence number. The sequence number of a URL is higher by 1 than the sequence number of the URL that preceded it. The media sequence numbers have no relation to the names of the files.</p><p id="p-0046" num="0045">EXTINF: A record marker that describes the media file identified by the URL that follows it. Each media file URL must be preceded by an EXTINF tag. This tag contains a duration attribute that's an integer or floating-point number in decimal positional notation that specifies the duration of the media segment in seconds. This value must be less than or equal to the target duration.</p><p id="p-0047" num="0046">EXT-X-ENDLIST: Indicates that no more media files will be added to the playlist file.</p><p id="p-0048" num="0047">The VOD playlist example in <figref idref="DRAWINGS">FIG. <b>4</b></figref> uses full pathnames for the media file playlist entries. While this is allowed, using relative pathnames is preferable. Relative pathnames are more portable than absolute pathnames and are relative to the URL of the playlist file. Using full pathnames for the individual playlist entries often results in more text than using relative pathnames.</p><p id="p-0049" num="0048">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, an event playlist is specified by the EXT-X-PLAYLIST-TYPE tag with a value of EVENT. It doesn't initially have an EXT-X-ENDLIST tag, indicating that new media files will be added to the playlist as they become available.</p><p id="p-0050" num="0049">Exemplary tags used in the EVENT playlist may include one or more of the following.</p><p id="p-0051" num="0050">EXTM3U: Indicates that the playlist is an extended M3U file. This type of file is distinguished from a basic M3U file by changing the tag on the first line to EXTM3U. All HLS playlists start with this tag.</p><p id="p-0052" num="0051">EXT-X-PLAYLIST-TYPE: Provides mutability information that applies to the entire playlist file. This tag may contain a value of either EVENT or VOD. If the tag is present and has a value of EVENT, the server must not change or delete any part of the playlist file (although it may append lines to it). If the tag is present and has a value of VOD, the playlist file must not change.</p><p id="p-0053" num="0052">EXT-X-TARGETDURATION: Specifies the maximum media-file duration.</p><p id="p-0054" num="0053">EXT-X-VERSION: Indicates the compatibility version of the playlist file. The playlist media and its server must comply with all provisions of the most recent version of the IETF Internet-Draft of the HTTP Live Streaming specification that defines that protocol version.</p><p id="p-0055" num="0054">EXT-X-MEDIA-SEQUENCE: Indicates the sequence number of the first URL that appears in a playlist file. Each media file URL in a playlist has a unique integer sequence number. The sequence number of a URL is higher by 1 than the sequence number of the URL that preceded it. The media sequence numbers have no relation to the names of the files.</p><p id="p-0056" num="0055">EXTINF: A record marker that describes the media file identified by the URL that follows it. Each media file URL must be preceded by an EXTINF tag. This tag contains a duration attribute that's an integer or floating-point number in decimal positional notation that specifies the duration of the media segment in seconds. This value must be less than or equal to the target duration.</p><p id="p-0057" num="0056">Items are not removed from the playlist when using the EVENT tag; rather new segments are appended to the end of the file. New segments are added to the end of the file until the event has concluded, at which time the EXT-X-ENDLIST tag may be appended. Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the same playlist is shown after it's been updated with new media URIs and the event has ended. Event playlists are typically used when you want to allow the user to seek to any point in the event, such as for a concert or sports event.</p><p id="p-0058" num="0057">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a live playlist (sliding window) is an index file that is updated by removing media URIs from the file as new media files are created and made available. The EXT-X-ENDLIST tag isn't present in the live playlist, indicating that new media files will be added to the index file as they become available.</p><p id="p-0059" num="0058">Exemplary tags used in the live playlist may include one or more of the following.</p><p id="p-0060" num="0059">EXTM3U: Indicates that the playlist is an extended M3U file. This type of file is distinguished from a basic M3U file by changing the tag on the first line to EXTM3U. All HLS playlists must start with this tag.</p><p id="p-0061" num="0060">EXT-X-TARGETDURATION: Specifies the maximum media-file duration.</p><p id="p-0062" num="0061">EXT-X-VERSION: Indicates the compatibility version of the playlist file. The playlist media and its server must comply with all provisions of the most recent version of the IETF Internet-Draft of the HTTP Live Streaming specification that defines that protocol version.</p><p id="p-0063" num="0062">EXT-X-MEDIA-SEQUENCE: Indicates the sequence number of the first URL that appears in a playlist file. Each media file URL in a playlist has a unique integer sequence number. The sequence number of a URL is higher by 1 than the sequence number of the URL that preceded it. The media sequence numbers have no relation to the names of the files.</p><p id="p-0064" num="0063">EXTINF: A record marker that describes the media file identified by the URL that follows it. Each media file URL must be preceded by an EXTINF tag. This tag contains a duration attribute that's an integer or floating-point number in decimal positional notation that specifies the duration of the media segment in seconds. This value must be less than or equal to the target duration. In addition, the live playlist can use an EXT-X-ENDLIST tag to signal the end of the content. Also, the live playlist preferably does not include the EXT-X-PLAYLIST-TYPE type.</p><p id="p-0065" num="0064">Referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the same playlist of <figref idref="DRAWINGS">FIG. <b>7</b></figref> is shown after it has been updated with new media URIs.</p><p id="p-0066" num="0065">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the playlist <figref idref="DRAWINGS">FIG. <b>8</b></figref> continues to be updated as new media URIs are added.</p><p id="p-0067" num="0066">Referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, in general as it may be observed, the VOD playlist is anchored at both ends (i.e., the head and the tail) and is not updated. As is may be observed, the event playlist is anchored at one end (i.e., the head end) and the other end grows over time (i.e., the tail end). As it may bs observed, a sliding window playlist is not ancored at either end.</p><p id="p-0068" num="0067">In the environment of a mobile device, such as a mobile telephone, viewers tend to view the media content on the display of the mobile device. To change what the viewer is watching the viewers tend to interact with the media content by using a finger for navigation. As the finger is dragged to the left on the display a series of thumbnails are typically presented as the playtime is moved back in time. As the finger is dragged to the right on the display a series of thumbnails are typically presented as the playtime is moved forward in time. While this interface paradigm is suitable for the mobile device, a viewer of video content on a display device interconnected to the cable network typically prefers to use fast forward (such as 2&#xd7;, 4&#xd7;, 6&#xd7;), reposition, and fast reverse (such as 2&#xd7;, 4&#xd7;, 6&#xd7;) to seek different portions of the video content. To facilitate such fast forward and fast reverse of content, the same video content may be provided to the customer's player based upon the playlist, and only a portion of it is rendered to provide the desired viewing experience. In some cases, the fast forward and fast reverse may be achieved by using an I-frame (i.e., intra-coded frame) only playlist, which includes an EXT-X-I-FRAMES-ONLY tag.</p><p id="p-0069" num="0068">In general, for a VOD playlist, the viewer may fast forward or fast reverse to any location that is defined within the VOD playlist, which typically includes the entire program. In general, for an event playlist, the viewer may fast reverse and fast forward to any location that is defined within the event playlist, from the head anchor to the current tail of the video content that is included within the latest playlist obtained. In general, for a sliding window playlist, the consumer may fast reverse and fast forward to any location that is defined within the sliding window playlist. The content prior to the sliding window is not generally available based upon the sliding window, nor is content after the sliding window being generally available based upon the sliding window. To obtain an updated list of available content, the corresponding updated playlist is periodically requested from the server, which increases the burden on the resources of the server and associated bandwidth to provide the playlist.</p><p id="p-0070" num="0069">From a viewer's perspective for a cable interconnection, they receive video content in the form of HLS video content from the time that they tune to the channel until a time that they tune to another channel. In this manner, the viewer's perspective is that they should be able to rewind or fast rewind through the content that has been received from the time that they tuned to the channel until the current time. Also, the viewer's perspective is that they should be able to fast forward to what would otherwise be the current content if previously rewound, paused, or fast rewound. This permits the viewer to pause the content and continue watching the content at a later time, while remaining tuned to the same channel This permits the viewer to rewind the content to view a particular event over again, such as a touchdown play in football, and then to continue viewing the content again in an uninterrupted manner. Preferably, independent of the particular playlist being used, the viewer is restrained to viewing only that portion of the video content that corresponds to the time duration that the viewer started viewing a particular channel to the time the viewer ended viewing the particular channel, together with the ability to fast forward, rewind, fast rewind, etc. over such a time window.</p><p id="p-0071" num="0070">Referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, a player <b>1160</b> obtains a master playlist (e.g., manifest file) from a network device <b>1100</b> (which may include one or more different devices, collectively referred to as a network device) which references each of the variant playlists (e.g., manifest file) for the particular type of playlist (e.g., VOD playlist, event playlist, sliding window playlist) for a particular video content, such as a streaming video channel of a cable system. Based upon the master playlist <b>1110</b> the player further obtains each of the variants <b>1120</b> for the particular type of playlist, such as the variant playlist for each of the different bitrates that are indicated as available. For example, this may include a low bitrate playlist, a medium bitrate playlist, and a high bitrate playlist that are representative of a video stream of all the frames of the video content, albeit at different bitrates. For example, this may also include particular playlist(s), such as a playlist composed of &#x201c;I&#x201d; frames of the video content. Further, in the event that the different playlists are updated as a result of additional content being made available, the player periodically requests an updated playlist for each of the variants. An audio playlist(s) <b>1130</b> associated with the audio stream is likewise requested. In this manner, the player <b>1160</b> obtains the master playlist <b>1110</b> and the variant playlists <b>1120</b>, which are maintained simultaneously and each selectively updated by the player <b>1160</b>. The network device <b>1100</b>, or any other suitable network device, may also include the &#x201c;chunk&#x201d; .ts files <b>1140</b> for each of the respective playlists.</p><p id="p-0072" num="0071">Referring to <figref idref="DRAWINGS">FIG. <b>12</b></figref>, in the case of a VOD playlist, the respective playlists are fixed for the video content, and the player obtains the respective playlists which are simultaneously stored. By way of example, the player may receive the master playlist and three variant playlists, namely, a low bitrate VOD playlist, a medium bitrate VOD playlist, and a high bitrate VOD playlist, together with an audio playlist which are all simultaneously maintained in the player. The player uses the stored playlists to determine which video &#x201c;chunk&#x201d; files to request based upon changing bandwidth conditions over time. The player also uses the stored VOD playlists to determine which video &#x201c;chunk&#x201d; files to request based upon user selected playback options, such as fast forward, rewind, and fast rewind.</p><p id="p-0073" num="0072">Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, in the case of an event playlist, the respective playlists are periodically modified over time for the video content, and the player obtains the respective playlists which are simultaneously stored. By way of example, the player may receive the master playlist and three variant playlists, namely, a low bitrate event playlist, a medium bitrate event playlist, and a high bitrate event playlist, together with an audio playlist which are all simultaneously maintained in the player. The player uses the stored event playlists to determine which video &#x201c;chunk&#x201d; files to request based upon changing bandwidth conditions over time. The player also uses the stored playlists to determine which video &#x201c;chunk&#x201d; files to request based upon user selected playback options, such as fast forward, rewind, and fast rewind. As time progresses, the player requests updated playlists to supplement and/or replace the existing variant event playlists and audio playlist.</p><p id="p-0074" num="0073">Referring to <figref idref="DRAWINGS">FIG. <b>14</b></figref>, in the case of a sliding window playlist, the respective playlists are modified over time for the video content, and the player obtains the respective playlists which are simultaneously stored. By way of example, the player may receive the master playlist and three variant playlists, namely, a low bitrate event playlist, a medium bitrate event playlist, and a high bitrate event playlist, together with an audio playlist which are all simultaneously maintained in the player. The player uses the stored sliding window playlists to determine which video &#x201c;chunk&#x201d; files to request based upon changing bandwidth conditions over time. The player also uses the stored playlists to determine which video &#x201c;chunk&#x201d; files to request based upon user selected playback options, such as fast forward, rewind, and fast rewind. As time progresses, the player requests updated playlists to supplement and/or replace the existing variant sliding window playlists and audio playlist. In addition, since an updated sliding window playlist removes earlier portions of the playlist when it is updated and adds later portions to the playlist when it is updated, the updated sliding window playlists in the player are updated with the earlier portions of the playlists being retained so that cumulative sliding window playlists are created. In this manner, even when using sliding window playlists, cumulative playlists are created based upon the first playlists received.</p><p id="p-0075" num="0074">Referring to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, independent of whether the user is receiving VOD playlists, event playlists, sliding window playlists, or otherwise, it is desirable for the player to determine an effective start time associated with each of the respective playlists that is coincides with when the user tuned to the particular video content or otherwise the channel. While the respective playlists may extend prior to this effective start time, the player maintains the effective start time until such a time that the user switches to a different channel. For example, the VOD playlists, the effective start time may be at a time later than the anchor time of the VOD playlists. For example, the event playlists, the effective start time may be at a time later than the anchor time of the event playlists. For example, the sliding window playlists, the effective start time may be at a time later than the initially received time of the first sliding window playlists, with additional updated sliding window playlists supplementing the player's sliding window playlists. The effective start time is used as an initial time that the player uses as the earliest time that the user may rewind to or otherwise review previous video content in some manner. It is noted from the perspective of the player, it has no context about when a program starts and ends, and accordingly the effective start time does not necessarily coincide with the start of a program. In other words, the player is only aware that it is receiving playlists and video content after switching to a channel, although not generally aware of the program boundaries.</p><p id="p-0076" num="0075">After the user switches to a different channel, the player may discard the previous master manifest and the variant playlists. Upon switching to a different channel, the player may consider that time as the effective start time for the different channel that is switched to. In this manner, the switching between channels may be considered as a boundary condition between the playlists that are to be retained.</p><p id="p-0077" num="0076">Referring to <figref idref="DRAWINGS">FIG. <b>16</b></figref>, the player may support traditional normal rate of playing video content upon switching to a particular video content. The player may also support various trick play modes that are consistent with that historically expected by a viewer based upon a cable network that provides video content using broadcast channels.</p><p id="p-0078" num="0077">For example, the player may include reposition and fast reverse (such as 2&#xd7;, 4&#xd7;, 6&#xd7;) of video content at any desirable location in the playlists to an earlier location up to as early as the effective start time. The player inhibits further reposition and fast reverse (such as 2&#xd7;, 4&#xd7;, 6&#xd7;) to any location earlier than the effective start time, even if the playlists include information regarding video files at locations earlier than the effective start time.</p><p id="p-0079" num="0078">For example, the player permits fast forward (such as 2&#xd7;, 4&#xd7;, 6&#xd7;) to any location that would be consistent with the current play time that the video content is being provided as &#x201c;live&#x201d; content from the video content source.</p><p id="p-0080" num="0079">The player may pause the playing of video content and unpause the playing of the video content at a later time. While paused, the player may continue to receive the updated playlists for the content that is available to be viewed by the user after unpausing the playing of the video content.</p><p id="p-0081" num="0080">With the periodic acquisition of all of the desired variant playlists, such as two or more of the variant playlists up to all of the variant playlists, the player will maintain all the necessary information to be able to switch between different bitrate streams that are available for all of the potentially selected content (e.g., from the effective start time to the current play time). Maintaining the necessary information alleviates the need to request variant playlists that would otherwise not be retained in the player, and in many cases attempt to request variant playlists for portions of the video content that are no longer available from a network device. By way of example, while fast reversing the player may select a different set of video files based upon a different playlist than being currently used for normal video play. By way of example, if the bandwidth changes over time and previous content is desired, the player may select lower bit rate video files based upon a different variant playlist to play or otherwise the previous video content. The acquisition of the variant playlists over time enables the player to obtain any of the previously available content from the effective start time in a HLS compliant manner that is independent of any particular HLS implementation.</p><p id="p-0082" num="0081">In some cases, the master manifest may be modified to include one or more of the variant playlists therein. Preferably, the master manifest is provided to the player with the variant playlists included therein. In this manner, the player uses a single master manifest to determine the appropriate video files to accommodate the playing of the video content, inclusive of trick play, from the effective start time to the current play time. The single master manifest may be updated in a manner that maintains any variant playlists that are included therein from the effective start time to the current play time.</p><p id="p-0083" num="0082">Referring to <figref idref="DRAWINGS">FIG. <b>17</b></figref>, in some cases, upon the player switching to a different channel the gateway receives a master manifest, and a plurality of or otherwise all of the respective sliding window playlists. Each of the sliding window playlists may be converted into a corresponding event playlist by the gateway. In this manner, an anchor point based upon the switching to the different channel is created, and preferably the anchor point of the event playlists is selected to be the time of the switching to the different channel. If there are previous times before the switching time in the sliding window playlists, they may be discarded or otherwise not used, if desired. If the player switches to a different channel, then the gateway receives a different master manifest, receives different sliding window playlists, and converts the different sliding window playlists to event playlists. As the gateway receives new sliding window playlists, the event playlists are supplemented with the additional information for the additional video content. The resulting event playlists are used to select appropriate video content.</p><p id="p-0084" num="0083">In another embodiment, the player is most often playing the video content at a normal play rate based upon one of the variant playlists. The gateway preferably updates the variant playlist that is currently being used on a relatively frequent basis for identifying the video files that are to be played. In this manner, the gateway would likely make relatively frequent requests for an updated variant playlist for the video files currently being used. In addition, the gateway preferably updates the variant playlists that are not currently being used on a relatively infrequent basis for identifying the video files that may be used in the future as a result of trick play. In this manner, the gateway would likely make relatively infrequent requests for updated variant playlist for the video files not currently being used. This reduces the stress on the network device that is providing the variant playlists and associated bandwidth limitations, especially in the case of thousands or tens of thousands of such gateways making such requests.</p><p id="p-0085" num="0084">In another embodiment, the server could include a predictable file naming structure for the files, such as a sequential numbering low_000001, low_000002, low_00000; medium_000001, medium_000002, medium_000003; high_000001, high_000002, high_000003, etc. In this manner, the player would be able to infer the file names of available files referenced in a variant manifest that has not yet been requested or otherwise obtained. In this manner, the player may reduce the rate at which the variant manifests are requested by relying, at least in part, upon the file naming structure.</p><p id="p-0086" num="0085">Moreover, each functional block or various features in each of the aforementioned embodiments may be implemented or executed by a circuitry, which is typically an integrated circuit or a plurality of integrated circuits. The circuitry designed to execute the functions described in the present specification may comprise a general-purpose processor, a digital signal processor (DSP), an application specific or general application integrated circuit (ASIC), a field programmable gate array (FPGA), or other programmable logic devices, discrete gates or transistor logic, or a discrete hardware component, or a combination thereof. The general-purpose processor may be a microprocessor, or alternatively, the processor may be a conventional processor, a controller, a microcontroller or a state machine. The general-purpose processor or each circuit described above may be configured by a digital circuit or may be configured by an analogue circuit. Further, when a technology of making into an integrated circuit superseding integrated circuits at the present time appears due to advancement of a semiconductor technology, the integrated circuit by this technology is also able to be used.</p><p id="p-0087" num="0086">It will be appreciated that the invention is not restricted to the particular embodiment that has been described, and that variations may be made therein without departing from the scope of the invention as defined in the appended claims, as interpreted in accordance with principles of prevailing law, including the doctrine of equivalents or any other principle that enlarges the enforceable scope of a claim beyond its literal scope. Unless the context indicates otherwise, a reference in a claim to the number of instances of an element, be it a reference to one instance or more than one instance, requires at least the stated number of instances of the element but is not intended to exclude from the scope of the claim a structure or method having more instances of that element than stated. The word &#x201c;comprise&#x201d; or a derivative thereof, when used in a claim, is used in a nonexclusive sense that is not intended to exclude the presence of other elements or steps in a claimed structure or method.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-15" num="01-15"><claim-text><b>1</b>-<b>15</b>. (canceled)</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A method for providing a HTTP Live Streaming video stream for being rendered a display comprising:<claim-text>(a) a computing device receiving a master manifest from a network device in response to receiving a selection of a video channel, that is different than an immediately previous video channel for being rendered on said display, at a start time coinciding with said selection of said video channel for said computing device for rendering said HTTP Live Streaming video stream on said display;</claim-text><claim-text>(b) said computing device selecting among a plurality of variant manifests referenced by said master manifest from said network device, where each of said variant manifests references video files each of which having a different bit rate for the same video stream, where said start time for each of said variant manifests is at a temporally later time for rendering said HTTP Live Streaming video stream than an earliest time included in a respective said variant manifest for rendering said HTTP Live Streaming video stream;</claim-text><claim-text>(c) simultaneously maintaining said plurality variant manifests in said computing device;</claim-text><claim-text>(d) determining an effective start time of said video stream coinciding with said start time of said video channel;</claim-text><claim-text>(e) said computing device enabling reverse of said video stream based upon one of said variant manifests to as early as said effective start time and not enabling reverse of said video stream based upon one of said variant manifests to a time earlier than said effective start time, where said one of said variant manifests includes references to video files of said time earlier than said effective start time.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein one of said variant playlists is obtained at a greater frequency than another one of said variant playlists.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> further comprising said computing device switching between a first of said variant manifests to a second of said variant manifests based upon a change in bandwidth.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said master manifest includes an EXTM3U tag.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein each of said variant manifests includes an EXT-X-PLAYLIST-TYPE tag that has a value of EVENT.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein each of said variant manifests includes an EXT-X-PLAYLIST-TYPE tag that has a value of VOD.</claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein each of said variant manifests is free from including an EXT-X-PLAYLIST-TYPE tag.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said computing device enabling another reverse faster than said reverse of said video stream based upon one of said variant manifests to as early as said effective start time.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> further comprising updating each of said variant manifests with additional information obtained from said network device.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said variant manifests are simultaneously maintained until said computing device switches to a different said video stream not associated with said variant manifests.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said computing device enabling fast forward of said video stream based upon one of said variant manifests to as late as a current play time.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The method of <claim-ref idref="CLM-00026">claim 26</claim-ref> wherein said current play time matches a live position.</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said master manifest is modified to include said variant manifests.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein each of said variant manifests is free from including an EXT-X-PLAYLIST tag when received and each of which is modified to a modified variant manifest that includes an EXT-X-PLAYLIST-TYPE tag that has a value of EVENT.</claim-text></claim></claims></us-patent-application>