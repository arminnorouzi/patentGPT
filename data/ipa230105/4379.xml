<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004380A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004380</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930957</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>30</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>30</main-group><subgroup>01</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AUTOMATICALLY PRODUCING AND CODE-SIGNING BINARIES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17160950</doc-number><date>20210128</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11474806</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930957</doc-number></document-id></child-doc></relation></continuation><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>16892107</doc-number><date>20200603</date></document-id><parent-status>ABANDONED</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17160950</doc-number></document-id></child-doc></relation></continuation-in-part><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>16688504</doc-number><date>20191119</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>16892107</doc-number></document-id></child-doc></relation></continuation-in-part></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>salesforce.com, inc.</orgname><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Brak</last-name><first-name>Claudia</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Holly</last-name><first-name>Steven</first-name><address><city>Laguna Niguel</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Simmons</last-name><first-name>Brian</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Mehta</last-name><first-name>Jayal</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Thakkar</last-name><first-name>Urvin</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>salesforce.com, inc.</orgname><role>02</role><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A mobile application development environment may be maintained in association with a computing platform. A request to produce a binary of a first mobile application may be processed. The binary and a package configurable to cause the binary to have code-sign credentials associated with a first organization when the binary is uploaded to a mobile application provider may be produced. The binary and the package may be provided to the first organization.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="68.41mm" wi="158.75mm" file="US20230004380A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="240.96mm" wi="123.78mm" file="US20230004380A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="255.86mm" wi="159.51mm" orientation="landscape" file="US20230004380A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="244.18mm" wi="130.73mm" orientation="landscape" file="US20230004380A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="237.83mm" wi="169.59mm" orientation="landscape" file="US20230004380A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="255.02mm" wi="164.51mm" file="US20230004380A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="243.92mm" wi="168.06mm" file="US20230004380A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="188.38mm" wi="133.94mm" file="US20230004380A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This patent document is a continuation application and, pursuant to 35 U.S.C. &#xa7; 120, is entitled to and claims the benefit of earlier filed application U.S. application Ser. No. 17/160,950 (Atty Docket No. SFDCP063) by Brak et al., titled &#x201c;AUTOMATICALLY PRODUCING AND CODE-SIGNING BINARIES&#x201d;, filed Jan. 28, 2021, which is a continuation-in-part of and claims priority to U.S. patent application Ser. No. 16/892,107 (Attorney Docket No. A4734US_SFDCP043) by Brak et al., titled &#x201c;AUTOMATICALLY PRODUCING MOBILE APPLICATION BINARIES&#x201d;, filed Jun. 3, 2020, which is a continuation-in-part of and claims priority to U.S. patent application Ser. No. 16/688,504 (Attorney Docket No. A4537US_SFDCP031) by Brak et al., titled &#x201c;PRODUCING MOBILE APPLICATIONS&#x201d;, filed Nov. 19, 2019. U.S. patent application Ser. No. 16/688,504 and U.S. patent application Ser. No. 16/892,107 all of which are hereby incorporated by reference in their entirety and for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">COPYRIGHT NOTICE</heading><p id="p-0003" num="0002">A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the United States Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever</p><heading id="h-0003" level="1">FIELD OF TECHNOLOGY</heading><p id="p-0004" num="0003">This patent document relates generally mobile applications and more specifically to producing mobile applications.</p><heading id="h-0004" level="1">BACKGROUND</heading><p id="p-0005" num="0004">&#x201c;Cloud computing&#x201d; services provide shared resources, applications, and information to computers and other devices upon request. In cloud computing environments, services can be provided by one or more servers accessible over the Internet rather than installing software locally on in-house computer systems. Users can interact with cloud computing services to undertake a wide range of tasks in association with production of mobile applications.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0006" num="0005">The included drawings are for illustrative purposes and serve only to provide examples of possible structures and operations for the disclosed inventive systems, apparatus, methods and computer program products for automatically producing mobile application binaries. These drawings in no way limit any changes in form and detail that may be made by one skilled in the art without departing from the spirit and scope of the disclosed implementations.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a flowchart of an example of a method for automatically producing and code-signing mobile application binaries, in accordance with some implementations.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a block diagram of an example of a mobile application development environment, in accordance with some implementations.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example of a Graphical User Interface (GUI), in accordance with some implementations.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example of a GUI, in accordance with some implementations.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of an example of an environment that includes an on-demand database service configured in accordance with some implementations.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> shows a system diagram of an example of architectural components of an on-demand database service environment, configured in accordance with some implementations.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> shows a system diagram further illustrating an example of architectural components of an on-demand database service environment, in accordance with some implementations.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates one example of a computing device, configured in accordance with some implementations.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0015" num="0014">Some implementations of the disclosed systems, apparatus, methods and computer program products are configured for automatically producing and code-signing mobile application binaries. As described in further detail below, such binary production and uploading techniques may be implemented alone or in association with any type of computing platform such as a Customer Relationship Management (CRM) Platform, a social networking system, any type of consumer or business software, etc. While CRM platforms (such as those provided by salesforce.com&#xae;, inc.) are discussed herein as an example of such a computing platform, one having skill in the art can appreciate that the examples of computing platforms described herein may be substituted for any suitable computing platform such as those described above.</p><p id="p-0016" num="0015">Existing automated binary production methods often require a computing platform to access an organization's sensitive information when the organization requests binary production. For example, such an organization may need to give the computing platform access to accounts for mobile application providers, such as the Apple&#xae; App Store or the Google&#xae; Play Store. Such a framework creates a variety of concerns&#x2014;e.g., a requesting organization's app store account may become susceptible to any security vulnerabilities of the computing platform. Accordingly, many organizations with sensitive security needs may not be able to take advantage of automated binary production techniques, losing valuable productivity. By way of illustration, General Elizabeth Bennet leads Health Security Services (HSS), an elite government unit charged with the management of health security for a nation. Due to a global pandemic, neither General Bennet nor any employees of HSS have spare time to spend on producing mobile applications. Nevertheless, HSS is in desperate need of an employee mobile application to meet its organizational demands. Unfortunately, HSS cannot risk giving any computing platform access to any of its mobile application provider accounts; and, therefore, cannot use existing automated binary production methods. This situation results in organizational strain, hampering HSS's ability to combat the pandemic.</p><p id="p-0017" num="0016">By contrast, the disclosed techniques may be implemented to mitigate the above-described security concerns. For instance, computing platforms can generate binaries and provide these binaries to a requesting organization along with a package that causes the binary to have the requesting organization's code-signing certificate, as described in further detail below. The binary can then be uploaded to the account of the requesting organization without providing the computing platform access to the account. Returning to the example described in the preceding paragraph, HSS may use the disclosed techniques to request automated production of a binary for the HSS employee mobile application for upload to the Apple&#xae; App Store. The computing platform may provide the binary to HSS along with an automatically generated package. The package may be used by HSS to cause the binary to have HSS's code-sign credentials. The binary may then be uploaded to the Apple&#xae; App Store without allowing the computing platform to have any access whatsoever to HSS's Apple&#xae; App Store account, thus eliminating the security vulnerabilities described above.</p><p id="p-0018" num="0017">In some implementations, all management and distribution of the HSS employee mobile application may be handled entirely by HSS itself. In this example, only production is handled by a computing platform. HSS may freely distribute the employee mobile application any way the organization deems fit. For example, HSS may distribute the employee mobile application in bulk via Mobile Device Management (MDM) to all official HSS devices.</p><p id="p-0019" num="0018">Also or alternatively, the framework described herein may be flexible. For example, as described below, binaries and packages may be automatically produced to meet different requirements of different mobile application providers. Additionally, even though mobile applications may be fully managed directly by an organization, a computing platform may provide fully automated updates.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a flowchart of an example of a method for automatically producing mobile application binaries, performed in accordance with some implementations. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is described in the context of <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>4</b></figref>. <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a block diagram of an example of a mobile application development environment, in accordance with some implementations. <figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example of a Graphical User Interface (GUI), in accordance with some implementations. <figref idref="DRAWINGS">FIG. <b>4</b></figref> shows another example of a GUI, in accordance with some implementations.</p><p id="p-0021" num="0020">At <b>104</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a mobile application development environment may be maintained. In some implementations, the mobile application development environment may be maintained in association with a computing platform. By way of example, in mobile application development environment <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, organizations <b>204</b> (<i>a</i>)-(<i>n</i>) interact with computing platform <b>208</b>. As discussed above, the computing platform <b>208</b> may be any type of computing platform and may have a variety of components such as a Customer Relationship Management (CRM) Platform, a social networking system, any type of consumer or business software, etc.</p><p id="p-0022" num="0021">The computing platform <b>208</b> includes a mobile application development module <b>212</b>, which may perform the automated application production and/or deployment techniques disclosed herein. For instance, in some implementations, users affiliated with the organizations <b>204</b> (<i>a</i>)-(<i>n</i>) may request production of mobile application binaries. The mobile application development module <b>212</b> may process such requests to generate such binaries. By way of example, HSS may use a CRM platform, such as one provided by salesforce.com&#xae;, to host a &#x201c;community,&#x201d; e.g., a customizable branded space for its employees, customers, and partners to connect. The community may be designable and/or customizable by authorized users affiliated with HSS. On behalf of HSS, General Bennet may request production of the HSS employee mobile application binary. In response to General Bennet's request, as discussed below, the mobile application development module <b>212</b> may access data stored in data storage <b>220</b> that defines the HSS community such as information defining the content, design, and/or layout of the community. The mobile application development module <b>212</b> may use this information, as well as any other information entered by General Bennet, to produce the binary of the HSS employee mobile application. For example, the mobile application development module <b>212</b> may use data stored in any of the data storage <b>220</b> to convert a web version of the HSS community into a binary of a mobile application such that the mobile application has the same or similar content, design, and/or layout as the web version of the HSS community.</p><p id="p-0023" num="0022">In some implementations, users affiliated with the organizations <b>204</b> (<i>a</i>)-(<i>n</i>) may provide metadata to the mobile application development module <b>212</b>. By way of example, on behalf of HSS, General Bennet may provide metadata to the mobile application development module <b>212</b> to define a HSS mobile application. As described below, the mobile application development module <b>212</b> may process metadata to automatically produce mobile applications for organizations <b>204</b> (<i>a</i>)-(<i>n</i>) providing the metadata. Returning to the above example, the mobile application development module <b>212</b> to may process the metadata provided by General Bennet to produce a HSS mobile application.</p><p id="p-0024" num="0023">In some implementations, the mobile application development module <b>212</b> may automatically provide mobile applications to mobile application provider(s) <b>216</b>, which may be any provider capable of providing mobile applications such as the Apple&#xae; App Store, the Android&#xae; app store, etc. Returning to the above example, the mobile application development module <b>212</b> may then provide the HSS mobile application Apple&#xae; app store.</p><p id="p-0025" num="0024">In some implementations, the mobile application development module <b>212</b> may automatically provide ongoing maintenance and updates to features of mobile applications. Such maintenance and updates may be automatically performed without requiring users to provide additional metadata. By way of example, as compatibility requirements (e.g., with iOS&#xae; or Android&#xae;) change, the mobile application development module <b>212</b> may automatically update existing mobile applications (e.g., mobile applications that were developed in the mobile application development environment <b>200</b>) using existing metadata to bring the mobile applications into compliance with the changing compatibility requirements. In another example, in response to new security updates being issued, the mobile application development module <b>212</b> may automatically update existing mobile applications using existing metadata.</p><p id="p-0026" num="0025">In some implementations, the computing platform <b>208</b> may be provided to the organizations <b>204</b> (<i>a</i>)-(<i>n</i>) via an on-demand computing environment, as discussed further below in the context of <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>14</b></figref>. By way of example, the computing platform <b>208</b> may be provided to the organizations <b>204</b> (<i>a</i>)-(<i>n</i>) in a multi-tenant database system, as described below. Similar to tenant data storage <b>1222</b> of <figref idref="DRAWINGS">FIG. <b>12</b></figref>, data storage <b>220</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may store data of the organizations <b>204</b> (<i>a</i>)-(<i>n</i>) in a multi-tenant architecture. The mobile application development module <b>212</b> may access the data storage <b>220</b> and use an organizations <b>204</b> (<i>a</i>)-(<i>n</i>) data when producing a mobile application. Similarly, the mobile application development module <b>212</b> may store metadata defining an organizations <b>204</b> (<i>a</i>)-(<i>n</i>) mobile application in the data storage <b>220</b>. Returning to the above example, the mobile application development module <b>212</b> may access HSS's data, which is stored in the data storage <b>220</b>, when producing the HSS mobile application. Once General Bennet has provided metadata to define the HSS mobile application, the mobile application development module <b>212</b> may cause the metadata to be stored in the data storage <b>220</b>.</p><p id="p-0027" num="0026">In some implementations, requests to produce mobile application binaries may be entered via a user interface. By way of example, such a user interface may include input areas configured to receive input from a user to enter metadata to define a mobile application. By way of example, referring now to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, General Bennet may be using her computing device to interact with the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. General Bennet may navigate to home page <b>300</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. She may then click or tap &#x201c;get started&#x201d; button <b>304</b> to navigate to a mobile application development environment.</p><p id="p-0028" num="0027">Returning to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, at <b>108</b>, a request to produce a binary of a mobile application (e.g., the HSS employee application) is processed. By way of example, using her computing device, General Bennet may request to produce a binary of the HSS employee application via a user interface of the mobile application development environment <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0029" num="0028">At <b>112</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the binary (e.g., the binary of the HSS employee mobile application) and a package may be produced. By way of illustration, the mobile application development module <b>212</b> of the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may automatically produce the binary of the HSS mobile application and the package using the techniques described above.</p><p id="p-0030" num="0029">In some implementations, the binary of the first mobile application may be produced in response to the request being processed at <b>112</b>. By way of example, in response to General Bennet's request, the mobile application development module <b>212</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may use data stored in any of the data storage <b>220</b> to convert a web version of the HSS community into a binary of a mobile application such that the mobile application has the same or similar content, design, and/or layout as the web version of the HSS community, as described above.</p><p id="p-0031" num="0030">In some implementations, as discussed above, the package may include a script configurable to cause the binary to have the code-sign credentials of HSS for one or more mobile application providers. Such a script may vary based on the mobile application provider to which a binary is to be uploaded. By way of example, General Bennet may request that the binary of the HSS employee mobile application be produced for upload to the Apple&#xae; App Store. Since unsigned binaries may not be produced for the Apple&#xae; App Store, the binary of the HSS employee mobile application may initially be code-signed by the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> when the binary is provided to HSS. In this case, the script may cause the code-sign credentials associated with the binary to change from code-sign credentials associated with the computing platform <b>208</b> to the code-sign credentials associated with HSS.</p><p id="p-0032" num="0031">In an alternative example to that described in the preceding paragraph, General Bennet may request that the binary of the HSS employee mobile application be produced for upload to the Google&#xae; Play Store. Unsigned binaries may be produced for the Google&#xae; Play Store. Therefore, initial code-signing by the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may not be necessary. As such, in this case, the script may simply cause the binary to be code-signed by HSS rather than changing the code-sign certificate from that of the computing platform <b>208</b> to that of HSS.</p><p id="p-0033" num="0032">In some implementations, as discussed above, the package produced at <b>112</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> may include instructions explaining how to execute the script to cause the binary to have the code-sign credentials of the requesting organization. By way of example, General Bennet may request that the binary of the HSS employee mobile application be produced for upload to the Apple&#xae; App Store. As such, the instructions may direct that General Bennet navigate to user interface (UI) <b>400</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The instructions may direct General Bennet to register an &#x201c;App ID&#x201d; for the HSS employee mobile application by entering a description a description of the HSS employee mobile application into field <b>404</b>. The instructions may direct General Bennet to enter a &#x201c;Bundle ID&#x201d; into field <b>408</b>. The instructions may direct General Bennet to enable capabilities <b>412</b> that the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> has included in the binary of the HSS employee mobile application. Once specification of the App ID is complete, the instructions may direct General Bennet to click or tap continue button <b>416</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0034" num="0033">In some implementations, the HSS employee mobile application may have push notification capabilities. As such, the instructions may direct General Bennet to create another certificate for a push notification extension. The instructions may the direct General Bennet to combine the push notification extension with the App ID described in the preceding paragraph. The instructions may then direct General Bennet to create provisioning profiles for the push notification extension and main HSS employee mobile application. Such provisioning profiles and the HSS signing certificate name may serve as inputs to the script described above. As such, the script may be executed using these inputs to cause the code-signing certificate of the binary of the HSS employee mobile application to be changed from the code-signing certificate of the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to the code-signing certificate of HSS.</p><p id="p-0035" num="0034">One having skill in the art may appreciate that the instructions and scripts described herein are simply explanatory examples and may vary depending on which mobile application provider is used. For example, the techniques described in the context of producing the binary and the package at <b>112</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be suitably modified to produce a suitable script that is executable to cause the binary to be code-signed by HSS and uploaded to the Google&#xae; Play Store or any other mobile application provider.</p><p id="p-0036" num="0035">At <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> the binary and the package may be provided to the organization. By way of example, the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may provide the package and the HSS employee mobile application binary to the HSS organization through a data network. General Bennet, for instance, may access the package and then HSS employee mobile application binary through a portal hosted by the computing platform <b>208</b>.</p><p id="p-0037" num="0036">In some implementations, at <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, it may be determined that the organization requesting binary production at <b>108</b> is a new customer of the computing platform. By way of illustration, Eyre Books is a small Braille Book publisher. Jane, the Chief Executive Officer (CEO) of Eyre Books, may use the disclosed techniques to develop a new Eyre Books mobile application binary. Eyre Books may be a new customer of the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and may not have any relationships with any mobile application providers yet. Accordingly, the computing platform <b>208</b> may make the determination that Eyre Books is a new customer of the computing platform <b>208</b>.</p><p id="p-0038" num="0037">In some implementations, at <b>124</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, assistance may be automatically provided the organization requesting binary production at <b>108</b>. By way of example, responsive to determining, at <b>120</b>, that the Eyre Books is a new customer of the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the computing platform <b>208</b> may provide assistance to Eyre Books. For instance, the computing platform <b>208</b> may automatically generate instructions for Eyre Books to create signing certificates for a variety of mobile application providers. Such instructions may be available through a portal hosted by the computing platform <b>208</b>.</p><p id="p-0039" num="0038">In some implementations, at <b>128</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an updated version of the binary may be automatically produced. For instance, the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may add new capabilities to be included in produced mobile application binaries. By way of illustration, the initial iOS&#xae; version of the HSS employee mobile application may not be compatible with Apple's&#xae; Siri&#xae; capabilities. After production of the binary for the first iOS&#xae; version of the HSS employee mobile application, the computing platform <b>208</b> may gain the capability of producing Siri&#xae; compatible mobile application binaries. Accordingly, after the addition of this new capability, the computing platform <b>208</b> may automatically produce a binary of an updated version of the HSS employee mobile application that is Siri&#xae; compatible using the techniques described above.</p><p id="p-0040" num="0039">Returning to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in some implementations, at <b>132</b>, the updated version of the binary may be provided to an organization. Returning to the example of the preceding paragraph, the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may provide the binary of the updated version of the HSS employee mobile application to the HSS organization through a data network, as described above.</p><p id="p-0041" num="0040">In some implementations, updated versions of binaries may be provided to organizations along with assistance in adding new capabilities. Returning again to the example of the preceding paragraph, the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may provide the binary of the updated version of the HSS employee mobile application to the HSS organization along with release notes explaining the updates to the HSS employee mobile application. The computing platform <b>208</b> may also provide instructions to navigate to the UI <b>400</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and click or tap checkbox <b>420</b> to enable SiriKit. With SiriKit enabled, the binary of the updated version of the HSS employee mobile application may be automatically code-signed to HSS using the techniques described above, and uploaded to the Apple&#xae; App Store.</p><p id="p-0042" num="0041">As discussed above, in some implementations, after the binary production process is complete, the computing platform <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may completely cease to play a role in production and distribution of a mobile application, allowing distribution to be handled solely by an organization affiliated with the mobile application. By way of example, as a sophisticated organization with its own relationship with mobile application providers, HSS may only use the disclosed techniques for production of a mobile application binary of the HSS Employee mobile application. After the HSS Employee mobile application has been produced by the computing platform <b>208</b>, HSS may completely take over distribution of the HSS Employee mobile application themselves. Accordingly, as described above, HSS may deal directly with mobile application providers in bringing the HSS Employee mobile application into accordance with the mobile application providers' rules. Furthermore, HSS may change the HSS Employee mobile application themselves and provide the HSS Employee mobile application in new regions without having to return to the computing platform <b>208</b> to update the HSS Employee mobile application.</p><p id="p-0043" num="0042">The disclosed mobile application production and distribution techniques may be applied differently depending on the type and/or needs of organizations that are implementing the disclosed techniques. As discussed above, distribution may be handled exclusively by an organization. On the other hand, in some implementations, a computing platform may provide automated distribution of mobile applications. By way of illustration, Jane, may use the disclosed techniques to develop a new Eyre Books mobile application binary. As described above, the binary may be automatically produced. However, in addition to binary production and uploading, the disclosed techniques may also be used for automated distribution of the Eyre Books mobile application to a mobile application provider, allowing employees and/or customers to download the application. By way of illustration, unlike sophisticated organizations like HSS, as described above, less sophisticated organizations like Eyre Books may wish to use the disclosed techniques in parallel with automated distribution. For instance, once mobile application binary production for the Eyre Books mobile application is complete, an authorized user of the computing platform affiliated with Eyre Books may select their distribution preferences by selecting a distribution type. As the Eyre Books mobile application may then be automatically distributed to mobile application provider(s) in accordance with Eyre Books' distribution preferences.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of an example of an environment <b>510</b> that includes an on-demand database service configured in accordance with some implementations. Environment <b>510</b> may include user systems <b>512</b>, network <b>514</b>, database system <b>516</b>, processor system <b>517</b>, application platform <b>518</b>, network interface <b>520</b>, tenant data storage <b>522</b>, tenant data <b>523</b>, system data storage <b>524</b>, system data <b>525</b>, program code <b>526</b>, process space <b>528</b>, User Interface (UI) <b>530</b>, Application Program Interface (API) <b>532</b>, PL/SOQL <b>534</b>, save routines <b>536</b>, application setup mechanism <b>538</b>, application servers <b>550</b>-<b>1</b> through <b>550</b>-N, system process space <b>552</b>, tenant process spaces <b>554</b>, tenant management process space <b>560</b>, tenant storage space <b>562</b>, user storage <b>564</b>, and application metadata <b>566</b>. Some of such devices may be implemented using hardware or a combination of hardware and software and may be implemented on the same physical device or on different devices. Thus, terms such as &#x201c;data processing apparatus,&#x201d; &#x201c;machine,&#x201d; &#x201c;server&#x201d; and &#x201c;device&#x201d; as used herein are not limited to a single hardware device, but rather include any hardware and software configured to provide the described functionality.</p><p id="p-0045" num="0044">An on-demand database service, implemented using system <b>516</b>, may be managed by a database service provider. Some services may store information from one or more tenants into tables of a common database image to form a multi-tenant database system (MTS). As used herein, each MTS could include one or more logically and/or physically connected servers distributed locally or across one or more geographic locations. Databases described herein may be implemented as single databases, distributed databases, collections of distributed databases, or any other suitable database system. A database image may include one or more database objects. A relational database management system (RDBMS) or a similar system may execute storage and retrieval of information against these objects.</p><p id="p-0046" num="0045">In some implementations, the application platform <b>518</b> may be a framework that allows the creation, management, and execution of applications in system <b>516</b>. Such applications may be developed by the database service provider or by users or third-party application developers accessing the service. Application platform <b>518</b> includes an application setup mechanism <b>538</b> that supports application developers' creation and management of applications, which may be saved as metadata into tenant data storage <b>522</b> by save routines <b>536</b> for execution by subscribers as one or more tenant process spaces <b>554</b> managed by tenant management process <b>560</b> for example. Invocations to such applications may be coded using PL/SOQL <b>534</b> that provides a programming language style interface extension to API <b>532</b>. A detailed description of some PL/SOQL language implementations is discussed in commonly assigned U.S. Pat. No. 7,730,478, titled METHOD AND SYSTEM FOR ALLOWING ACCESS TO DEVELOPED APPLICATIONS VIA A MULTI-TENANT ON-DEMAND DATABASE SERVICE, by Craig Weissman, issued on Jun. 1, 2010, and hereby incorporated by reference in its entirety and for all purposes. Invocations to applications may be detected by one or more system processes. Such system processes may manage retrieval of application metadata <b>566</b> for a subscriber making such an invocation. Such system processes may also manage execution of application metadata <b>566</b> as an application in a virtual machine.</p><p id="p-0047" num="0046">In some implementations, each application server <b>550</b> may handle requests for any user associated with any organization. A load balancing function (e.g., an F5 Big-IP load balancer) may distribute requests to the application servers <b>550</b> based on an algorithm such as least-connections, round robin, observed response time, etc. Each application server <b>550</b> may be configured to communicate with tenant data storage <b>522</b> and the tenant data <b>523</b> therein, and system data storage <b>524</b> and the system data <b>525</b> therein to serve requests of user systems <b>512</b>. The tenant data <b>523</b> may be divided into individual tenant storage spaces <b>562</b>, which can be either a physical arrangement and/or a logical arrangement of data. Within each tenant storage space <b>562</b>, user storage <b>564</b> and application metadata <b>566</b> may be similarly allocated for each user. For example, a copy of a user's most recently used (MRU) items might be stored to user storage <b>564</b>. Similarly, a copy of MRU items for an entire tenant organization may be stored to tenant storage space <b>562</b>. A UI <b>530</b> provides a user interface and an API <b>532</b> provides an application programming interface to system <b>516</b> resident processes to users and/or developers at user systems <b>512</b>.</p><p id="p-0048" num="0047">System <b>516</b> may implement a web-based mobile application production and/or deployment system. For example, in some implementations, system <b>516</b> may include application servers configured to implement and execute a variety of software applications. The application servers may be configured to provide related data, code, forms, web pages and other information to and from user systems <b>512</b>. Additionally, the application servers may be configured to store information to, and retrieve information from a database system. Such information may include related data, objects, and/or Webpage content. With a multi-tenant system, data for multiple tenants may be stored in the same physical database object in tenant data storage <b>522</b>, however, tenant data may be arranged in the storage medium(s) of tenant data storage <b>522</b> so that data of one tenant is kept logically separate from that of other tenants. In such a scheme, one tenant may not access another tenant's data, unless such data is expressly shared.</p><p id="p-0049" num="0048">Several elements in the system shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> include conventional, well-known elements that are explained only briefly here. For example, user system <b>512</b> may include processor system <b>512</b>A, memory system <b>512</b>B, input system <b>512</b>C, and output system <b>512</b>D. A user system <b>512</b> may be implemented as any computing device(s) or other data processing apparatus such as a mobile phone, laptop computer, tablet, desktop computer, or network of computing devices. User system <b>12</b> may run an internet browser allowing a user (e.g., a subscriber of an MTS) of user system <b>512</b> to access, process and view information, pages and applications available from system <b>516</b> over network <b>514</b>. Network <b>514</b> may be any network or combination of networks of devices that communicate with one another, such as any one or any combination of a LAN (local area network), WAN (wide area network), wireless network, or other appropriate configuration.</p><p id="p-0050" num="0049">The users of user systems <b>512</b> may differ in their respective capacities, and the capacity of a particular user system <b>512</b> to access information may be determined at least in part by &#x201c;permissions&#x201d; of the particular user system <b>512</b>. As discussed herein, permissions generally govern access to computing resources such as data objects, components, and other entities of a computing system, such as a mobile application production and/or deployment system, a social networking system, and/or a CRM database system. &#x201c;Permission sets&#x201d; generally refer to groups of permissions that may be assigned to users of such a computing environment. For instance, the assignments of users and permission sets may be stored in one or more databases of System <b>516</b>. Thus, users may receive permission to access certain resources. A permission server in an on-demand database service environment can store criteria data regarding the types of users and permission sets to assign to each other. For example, a computing device can provide to the server data indicating an attribute of a user (e.g., geographic location, industry, role, level of experience, etc.) and particular permissions to be assigned to the users fitting the attributes. Permission sets meeting the criteria may be selected and assigned to the users. Moreover, permissions may appear in multiple permission sets. In this way, the users can gain access to the components of a system.</p><p id="p-0051" num="0050">In some an on-demand database service environments, an Application Programming Interface (API) may be configured to expose a collection of permissions and their assignments to users through appropriate network-based services and architectures, for instance, using Simple Object Access Protocol (SOAP) Web Service and Representational State Transfer (REST) APIs.</p><p id="p-0052" num="0051">In some implementations, a permission set may be presented to an administrator as a container of permissions. However, each permission in such a permission set may reside in a separate API object exposed in a shared API that has a child-parent relationship with the same permission set object. This allows a given permission set to scale to millions of permissions for a user while allowing a developer to take advantage of joins across the API objects to query, insert, update, and delete any permission across the millions of possible choices. This makes the API highly scalable, reliable, and efficient for developers to use.</p><p id="p-0053" num="0052">In some implementations, a permission set API constructed using the techniques disclosed herein can provide scalable, reliable, and efficient mechanisms for a developer to create tools that manage a user's permissions across various sets of access controls and across types of users. Administrators who use this tooling can effectively reduce their time managing a user's rights, integrate with external systems, and report on rights for auditing and troubleshooting purposes. By way of example, different users may have different capabilities with regard to accessing and modifying application and database information, depending on a user's security or permission level, also called authorization. In systems with a hierarchical role model, users at one permission level may have access to applications, data, and database information accessible by a lower permission level user, but may not have access to certain applications, database information, and data accessible by a user at a higher permission level.</p><p id="p-0054" num="0053">As discussed above, system <b>516</b> may provide on-demand database service to user systems <b>512</b> using an MTS arrangement. By way of example, one tenant organization may be a company that employs a sales force where each salesperson uses system <b>516</b> to manage their sales process. Thus, a user in such an organization may maintain contact data, leads data, customer follow-up data, performance data, goals and progress data, etc., all applicable to that user's personal sales process (e.g., in tenant data storage <b>522</b>). In this arrangement, a user may manage his or her sales efforts and cycles from a variety of devices, since relevant data and applications to interact with (e.g., access, view, modify, report, transmit, calculate, etc.) such data may be maintained and accessed by any user system <b>512</b> having network access.</p><p id="p-0055" num="0054">When implemented in an MTS arrangement, system <b>516</b> may separate and share data between users and at the organization-level in a variety of manners. For example, for certain types of data each user's data might be separate from other users' data regardless of the organization employing such users. Other data may be organization-wide data, which is shared or accessible by several users or potentially all users form a given tenant organization. Thus, some data structures managed by system <b>516</b> may be allocated at the tenant level while other data structures might be managed at the user level. Because an MTS might support multiple tenants including possible competitors, the MTS may have security protocols that keep data, applications, and application use separate. In addition to user-specific data and tenant-specific data, system <b>516</b> may also maintain system-level data usable by multiple tenants or other data. Such system-level data may include industry reports, news, postings, and the like that are sharable between tenant organizations.</p><p id="p-0056" num="0055">In some implementations, user systems <b>512</b> may be client systems communicating with application servers <b>550</b> to request and update system-level and tenant-level data from system <b>516</b>. By way of example, user systems <b>512</b> may send one or more queries requesting data of a database maintained in tenant data storage <b>522</b> and/or system data storage <b>524</b>. An application server <b>550</b> of system <b>516</b> may automatically generate one or more SQL statements (e.g., one or more SQL queries) that are designed to access the requested data. System data storage <b>524</b> may generate query plans to access the requested data from the database.</p><p id="p-0057" num="0056">The database systems described herein may be used for a variety of database applications. By way of example, each database can generally be viewed as a collection of objects, such as a set of logical tables, containing data fitted into predefined categories. A &#x201c;table&#x201d; is one representation of a data object, and may be used herein to simplify the conceptual description of objects and custom objects according to some implementations. It should be understood that &#x201c;table&#x201d; and &#x201c;object&#x201d; may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields. For example, a CRM database may include a table that describes a customer with fields for basic contact information such as name, address, phone number, fax number, etc. Another table might describe a purchase order, including fields for information such as customer, product, sale price, date, etc. In some multi-tenant database systems, standard entity tables might be provided for use by all tenants. For CRM database applications, such standard entities might include tables for case, account, contact, lead, and opportunity data objects, each containing pre-defined fields. It should be understood that the word &#x201c;entity&#x201d; may also be used interchangeably herein with &#x201c;object&#x201d; and &#x201c;table&#x201d;.</p><p id="p-0058" num="0057">In some implementations, tenants may be allowed to create and store custom objects, or they may be allowed to customize standard entities or objects, for example by creating custom fields for standard objects, including custom index fields. Commonly assigned U.S. Pat. No. 7,779,039, titled CUSTOM ENTITIES AND FIELDS IN A MULTI-TENANT DATABASE SYSTEM, by Weissman et al., issued on Aug. 17, 2010, and hereby incorporated by reference in its entirety and for all purposes, teaches systems and methods for creating custom objects as well as customizing standard objects in an MTS. In certain implementations, for example, all custom entity data rows may be stored in a single multi-tenant physical table, which may contain multiple logical tables per organization. It may be transparent to customers that their multiple &#x201c;tables&#x201d; are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> shows a system diagram of an example of architectural components of an on-demand database service environment <b>600</b>, configured in accordance with some implementations. A client machine located in the cloud <b>604</b> may communicate with the on-demand database service environment via one or more edge routers <b>608</b> and <b>612</b>. A client machine may include any of the examples of user systems <b>512</b> described above. The edge routers <b>608</b> and <b>612</b> may communicate with one or more core switches <b>620</b> and <b>624</b> via firewall <b>616</b>. The core switches may communicate with a load balancer <b>628</b>, which may distribute server load over different pods, such as the pods <b>640</b> and <b>644</b> by communication via pod switches <b>632</b> and <b>636</b>. The pods <b>640</b> and <b>644</b>, which may each include one or more servers and/or other computing resources, may perform data processing and other operations used to provide on-demand services. Components of the environment may communicate with a database storage <b>656</b> via a database firewall <b>648</b> and a database switch <b>652</b>.</p><p id="p-0060" num="0059">Accessing an on-demand database service environment may involve communications transmitted among a variety of different components. The environment <b>600</b> is a simplified representation of an actual on-demand database service environment. For example, some implementations of an on-demand database service environment may include anywhere from one to many devices of each type. Additionally, an on-demand database service environment need not include each device shown, or may include additional devices not shown, in <figref idref="DRAWINGS">FIGS. <b>6</b>A and <b>6</b>B</figref>.</p><p id="p-0061" num="0060">The cloud <b>604</b> refers to any suitable data network or combination of data networks, which may include the Internet. Client machines located in the cloud <b>604</b> may communicate with the on-demand database service environment <b>600</b> to access services provided by the on-demand database service environment <b>600</b>. By way of example, client machines may access the on-demand database service environment <b>600</b> to retrieve, store, edit, and/or process a variety of information.</p><p id="p-0062" num="0061">In some implementations, the edge routers <b>608</b> and <b>612</b> route packets between the cloud <b>604</b> and other components of the on-demand database service environment <b>600</b>. The edge routers <b>608</b> and <b>612</b> may employ the Border Gateway Protocol (BGP). The edge routers <b>608</b> and <b>612</b> may maintain a table of IP networks or &#x2018;prefixes&#x2019;, which designate network reachability among autonomous systems on the internet.</p><p id="p-0063" num="0062">In one or more implementations, the firewall <b>616</b> may protect the inner components of the environment <b>600</b> from internet traffic. The firewall <b>616</b> may block, permit, or deny access to the inner components of the on-demand database service environment <b>600</b> based upon a set of rules and/or other criteria. The firewall <b>616</b> may act as one or more of a packet filter, an application gateway, a stateful filter, a proxy server, or any other type of firewall.</p><p id="p-0064" num="0063">In some implementations, the core switches <b>620</b> and <b>624</b> may be high-capacity switches that transfer packets within the environment <b>600</b>. The core switches <b>620</b> and <b>624</b> may be configured as network bridges that quickly route data between different components within the on-demand database service environment. The use of two or more core switches <b>620</b> and <b>624</b> may provide redundancy and/or reduced latency.</p><p id="p-0065" num="0064">In some implementations, communication between the pods <b>640</b> and <b>644</b> may be conducted via the pod switches <b>632</b> and <b>636</b>. The pod switches <b>632</b> and <b>636</b> may facilitate communication between the pods <b>640</b> and <b>644</b> and client machines, for example via core switches <b>620</b> and <b>624</b>. Also or alternatively, the pod switches <b>632</b> and <b>636</b> may facilitate communication between the pods <b>640</b> and <b>644</b> and the database storage <b>656</b>. The load balancer <b>628</b> may distribute workload between the pods, which may assist in improving the use of resources, increasing throughput, reducing response times, and/or reducing overhead. The load balancer <b>628</b> may include multilayer switches to analyze and forward traffic.</p><p id="p-0066" num="0065">In some implementations, access to the database storage <b>656</b> may be guarded by a database firewall <b>648</b>, which may act as a computer application firewall operating at the database application layer of a protocol stack. The database firewall <b>648</b> may protect the database storage <b>656</b> from application attacks such as structure query language (SQL) injection, database rootkits, and unauthorized information disclosure. The database firewall <b>648</b> may include a host using one or more forms of reverse proxy services to proxy traffic before passing it to a gateway router and/or may inspect the contents of database traffic and block certain content or database requests. The database firewall <b>648</b> may work on the SQL application level atop the TCP/IP stack, managing applications' connection to the database or SQL management interfaces as well as intercepting and enforcing packets traveling to or from a database network or application interface.</p><p id="p-0067" num="0066">In some implementations, the database storage <b>656</b> may be an on-demand database system shared by many different organizations. The on-demand database service may employ a single-tenant approach, a multi-tenant approach, a virtualized approach, or any other type of database approach. Communication with the database storage <b>656</b> may be conducted via the database switch <b>652</b>. The database storage <b>656</b> may include various software components for handling database queries. Accordingly, the database switch <b>652</b> may direct database queries transmitted by other components of the environment (e.g., the pods <b>640</b> and <b>644</b>) to the correct components within the database storage <b>656</b>.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> shows a system diagram further illustrating an example of architectural components of an on-demand database service environment, in accordance with some implementations. The pod <b>644</b> may be used to render services to user(s) of the on-demand database service environment <b>600</b>. The pod <b>644</b> may include one or more content batch servers <b>664</b>, content search servers <b>668</b>, query servers <b>682</b>, file servers <b>686</b>, access control system (ACS) servers <b>680</b>, batch servers <b>684</b>, and app servers <b>688</b>. Also, the pod <b>644</b> may include database instances <b>690</b>, quick file systems (QFS) <b>692</b>, and indexers <b>694</b>. Some or all communication between the servers in the pod <b>644</b> may be transmitted via the switch <b>636</b>.</p><p id="p-0069" num="0068">In some implementations, the app servers <b>688</b> may include a framework dedicated to the execution of procedures (e.g., programs, routines, scripts) for supporting the construction of applications provided by the on-demand database service environment <b>600</b> via the pod <b>644</b>. One or more instances of the app server <b>688</b> may be configured to execute all or a portion of the operations of the services described herein.</p><p id="p-0070" num="0069">In some implementations, as discussed above, the pod <b>644</b> may include one or more database instances <b>690</b>. A database instance <b>690</b> may be configured as an MTS in which different organizations share access to the same database, using the techniques described above. Database information may be transmitted to the indexer <b>694</b>, which may provide an index of information available in the database <b>690</b> to file servers <b>686</b>. The QFS <b>692</b> or other suitable filesystem may serve as a rapid-access file system for storing and accessing information available within the pod <b>644</b>. The QFS <b>692</b> may support volume management capabilities, allowing many disks to be grouped together into a file system. The QFS <b>692</b> may communicate with the database instances <b>690</b>, content search servers <b>668</b> and/or indexers <b>694</b> to identify, retrieve, move, and/or update data stored in the network file systems (NFS) <b>696</b> and/or other storage systems.</p><p id="p-0071" num="0070">In some implementations, one or more query servers <b>682</b> may communicate with the NFS <b>696</b> to retrieve and/or update information stored outside of the pod <b>644</b>. The NFS <b>696</b> may allow servers located in the pod <b>644</b> to access information over a network in a manner similar to how local storage is accessed. Queries from the query servers <b>622</b> may be transmitted to the NFS <b>696</b> via the load balancer <b>628</b>, which may distribute resource requests over various resources available in the on-demand database service environment <b>600</b>. The NFS <b>696</b> may also communicate with the QFS <b>692</b> to update the information stored on the NFS <b>696</b> and/or to provide information to the QFS <b>692</b> for use by servers located within the pod <b>644</b>.</p><p id="p-0072" num="0071">In some implementations, the content batch servers <b>664</b> may handle requests internal to the pod <b>644</b>. These requests may be long-running and/or not tied to a particular customer, such as requests related to log mining, cleanup work, and maintenance tasks. The content search servers <b>668</b> may provide query and indexer functions such as functions allowing users to search through content stored in the on-demand database service environment <b>600</b>. The file servers <b>686</b> may manage requests for information stored in the file storage <b>698</b>, which may store information such as documents, images, basic large objects (BLOBS), etc. The query servers <b>682</b> may be used to retrieve information from one or more file systems. For example, the query system <b>682</b> may receive requests for information from the app servers <b>688</b> and then transmit information queries to the NFS <b>696</b> located outside the pod <b>644</b>. The ACS servers <b>680</b> may control access to data, hardware resources, or software resources called upon to render services provided by the pod <b>644</b>. The batch servers <b>684</b> may process batch jobs, which are used to run tasks at specified times. Thus, the batch servers <b>684</b> may transmit instructions to other servers, such as the app servers <b>688</b>, to trigger the batch jobs.</p><p id="p-0073" num="0072">While some of the disclosed implementations may be described with reference to a system having an application server providing a front end for an on-demand database service capable of supporting multiple tenants, the disclosed implementations are not limited to multi-tenant databases nor deployment on application servers. Some implementations may be practiced using various database architectures such as ORACLE&#xae;, DB2&#xae; by IBM and the like without departing from the scope of present disclosure.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates one example of a computing device. According to various embodiments, a system <b>700</b> suitable for implementing embodiments described herein includes a processor <b>701</b>, a memory module <b>703</b>, a storage device <b>705</b>, an interface <b>711</b>, and a bus <b>715</b> (e.g., a PCI bus or other interconnection fabric.) System <b>700</b> may operate as variety of devices such as an application server, a database server, or any other device or service described herein. Although a particular configuration is described, a variety of alternative configurations are possible. The processor <b>701</b> may perform operations such as those described herein. Instructions for performing such operations may be embodied in the memory <b>703</b>, on one or more non-transitory computer readable media, or on some other storage device. Various specially configured devices can also be used in place of or in addition to the processor <b>701</b>. The interface <b>711</b> may be configured to send and receive data packets over a network. Examples of supported interfaces include, but are not limited to: Ethernet, fast Ethernet, Gigabit Ethernet, frame relay, cable, digital subscriber line (DSL), token ring, Asynchronous Transfer Mode (ATM), High-Speed Serial Interface (HSSI), and Fiber Distributed Data Interface (FDDI). These interfaces may include ports appropriate for communication with the appropriate media. They may also include an independent processor and/or volatile RAM. A computer system or computing device may include or communicate with a monitor, printer, or other suitable display for providing any of the results mentioned herein to a user.</p><p id="p-0075" num="0074">Any of the disclosed implementations may be embodied in various types of hardware, software, firmware, computer readable media, and combinations thereof. For example, some techniques disclosed herein may be implemented, at least in part, by computer-readable media that include program instructions, state information, etc., for configuring a computing system to perform various services and operations described herein. Examples of program instructions include both machine code, such as produced by a compiler, and higher-level code that may be executed via an interpreter. Instructions may be embodied in any suitable language such as, for example, Apex, Java, Python, C++, C, HTML, any other markup language, JavaScript, ActiveX, VBScript, or Perl. Examples of computer-readable media include, but are not limited to: magnetic media such as hard disks and magnetic tape; optical media such as flash memory, compact disk (CD) or digital versatile disk (DVD); magneto-optical media; and other hardware devices such as read-only memory (&#x201c;ROM&#x201d;) devices and random-access memory (&#x201c;RAM&#x201d;) devices. A computer-readable medium may be any combination of such storage devices.</p><p id="p-0076" num="0075">In the foregoing specification, various techniques and mechanisms may have been described in singular form for clarity. However, it should be noted that some embodiments include multiple iterations of a technique or multiple instantiations of a mechanism unless otherwise noted. For example, a system uses a processor in a variety of contexts but can use multiple processors while remaining within the scope of the present disclosure unless otherwise noted. Similarly, various techniques and mechanisms may have been described as including a connection between two entities. However, a connection does not necessarily mean a direct, unimpeded connection, as a variety of other entities (e.g., bridges, controllers, gateways, etc.) may reside between the two entities.</p><p id="p-0077" num="0076">In the foregoing specification, reference was made in detail to specific embodiments including one or more of the best modes contemplated by the inventors. While various implementations have been described herein, it should be understood that they have been presented by way of example only, and not limitation. For example, some techniques and mechanisms are described herein in the context of on-demand computing environments that include MTSs. However, the techniques of disclosed herein apply to a wide variety of computing environments. Particular embodiments may be implemented without some or all of the specific details described herein. In other instances, well known process operations have not been described in detail in order to avoid unnecessarily obscuring the disclosed techniques. Accordingly, the breadth and scope of the present application should not be limited by any of the implementations described herein, but should be defined only in accordance with the claims and their equivalents.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computing system comprising:<claim-text>one or more computer processors; and</claim-text><claim-text>a computer-readable storage medium comprising instructions for controlling the one or more computer processors, the instructions being configurable to cause:<claim-text>maintaining a mobile application development environment associated with a computing platform, the mobile application development environment configurable to produce mobile applications based on information provided to the computing platform;</claim-text><claim-text>processing, from a first organization, a request to produce a binary of a first mobile application, wherein the first mobile application is associated with the first organization;</claim-text><claim-text>responsive to processing the request, automatically producing, by the computing platform:<claim-text>the binary of the first mobile application for upload to a mobile application provider, the first organization being different from the mobile application provider, and</claim-text><claim-text>a package configurable to cause the binary to have code-sign credentials associated with the first organization when the binary is uploaded to the mobile application provider, wherein the package is unsigned and the package comprises a script configurable to cause the binary to have the code-sign credentials associated with the first organization; and</claim-text></claim-text><claim-text>providing, to the first organization, the binary and the package, wherein the script is configurable, when executed, to cause the binary to have the code-sign credentials associated with the first organization.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the package comprises instructions explaining how to cause the binary to have the code-sign credentials associated with the first organization.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the package comprises a first package, the script comprises a first script, and the mobile application provider comprises a first mobile application provider, further configurable to cause:<claim-text>automatically producing, by the computing platform:<claim-text>a second package configurable to cause the binary to have code-sign credentials associated with the first organization when the binary is uploaded to a second mobile application provider, wherein the package comprises a second script configurable to cause the binary to have the code-sign credentials associated with the first organization; and</claim-text><claim-text>providing, to the first organization, the binary and the package, wherein the binary is code-signed by the computing platform when the binary is provided to the first organization and the second script causes code-sign credentials associated with the binary to change from code-sign credentials associated with the computing platform to the code-sign credentials associated with the first organization.</claim-text></claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the computing system being further configurable to cause:<claim-text>automatically producing an updated version of the binary; and</claim-text><claim-text>providing, to the first organization, the updated version of the binary.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computing system of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the updated version of the binary is provided to the first organization without requiring the first organization to provide additional information to the computing platform.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the computing system being further configurable to cause:<claim-text>determining that the first organization is a new customer of the computing platform; and</claim-text><claim-text>automatically providing, responsive to determining that the first organization is the new customer of the computing platform, assistance in creating a signing certificate for the mobile application provider.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computing platform comprises a customer relationship management (CRM) platform and the binary is produced based on a customizable branded space associated with the first organization, the customizable branded space being hosted by the CRM platform.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method comprising:<claim-text>maintaining a mobile application development environment associated with a computing platform, the mobile application development environment configurable to produce mobile applications based on information provided to the computing platform;</claim-text><claim-text>processing, from a first organization, a request to produce a binary of a first mobile application, wherein the first mobile application is associated with the first organization;</claim-text><claim-text>responsive to processing the request, automatically producing, by the computing platform:<claim-text>the binary of the first mobile application for upload to a mobile application provider, the first organization being different from the mobile application provider, and</claim-text><claim-text>a package configurable to cause the binary to have code-sign credentials associated with the first organization when the binary is uploaded to the mobile application provider, wherein the package is unsigned and the package comprises a script configurable to cause the binary to have the code-sign credentials associated with the first organization; and</claim-text></claim-text><claim-text>providing, to the first organization, the binary and the package, wherein the script is configurable, when executed, to cause the binary to have the code-sign credentials associated with the first organization.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the package comprises instructions explaining how to cause the binary to have the code-sign credentials associated with the first organization.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the package comprises a first package, the script comprises a first script, and the mobile application provider comprises a first mobile application provider, further comprising:<claim-text>automatically producing, by the computing platform:<claim-text>a second package configurable to cause the binary to have code-sign credentials associated with the first organization when the binary is uploaded to a second mobile application provider, wherein the package comprises a second script configurable to cause the binary to have the code-sign credentials associated with the first organization; and</claim-text><claim-text>providing, to the first organization, the binary and the package, wherein the binary is code-signed by the computing platform when the binary is provided to the first organization and the second script causes code-sign credentials associated with the binary to change from code-sign credentials associated with the computing platform to the code-sign credentials associated with the first organization.</claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, the method further comprising:<claim-text>automatically producing an updated version of the binary; and</claim-text></claim-text><claim-text>providing, to the first organization, the updated version of the binary.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the updated version of the binary is provided to the first organization without requiring the first organization to provide additional information to the computing platform.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, the method further comprising:<claim-text>determining that the first organization is a new customer of the computing platform; and</claim-text><claim-text>automatically providing, responsive to determining that the first organization is the new customer of the computing platform, assistance in creating a signing certificate for the mobile application provider.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the computing platform comprises a customer relationship management (CRM) platform and the binary is produced based on a customizable branded space associated with the first organization, the customizable branded space being hosted by the CRM platform.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer program product comprising computer-readable program code capable of being executed by one or more processors when retrieved from a non-transitory computer-readable medium, the program code comprising instructions configurable to cause:<claim-text>maintaining a mobile application development environment associated with a computing platform, the mobile application development environment configurable to produce mobile applications based on information provided to the computing platform;</claim-text><claim-text>processing, from a first organization, a request to produce a binary of a first mobile application, wherein the first mobile application is associated with the first organization;</claim-text><claim-text>responsive to processing the request, automatically producing, by the computing platform:<claim-text>the binary of the first mobile application for upload to a mobile application provider, the first organization being different from the mobile application provider, and</claim-text><claim-text>a package configurable to cause the binary to have code-sign credentials associated with the first organization when the binary is uploaded to the mobile application provider, wherein the package is unsigned and the package comprises a script configurable to cause the binary to have the code-sign credentials associated with the first organization; and</claim-text></claim-text><claim-text>providing, to the first organization, the binary and the package, wherein the script is configurable, when executed, to cause the binary to have the code-sign credentials associated with the first organization.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer program product of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the package comprises instructions explaining how to cause the binary to have the code-sign credentials associated with the first organization.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer program product of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the package comprises a first package, the script comprises a first script, and the mobile application provider comprises a first mobile application provider, further configurable to cause:<claim-text>automatically producing, by the computing platform:<claim-text>a second package configurable to cause the binary to have code-sign credentials associated with the first organization when the binary is uploaded to a second mobile application provider, wherein the package comprises a second script configurable to cause the binary to have the code-sign credentials associated with the first organization; and</claim-text><claim-text>providing, to the first organization, the binary and the package, wherein the binary is code-signed by the computing platform when the binary is provided to the first organization and the second script causes code-sign credentials associated with the binary to change from code-sign credentials associated with the computing platform to the code-sign credentials associated with the first organization.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer program product of <claim-ref idref="CLM-00015">claim 15</claim-ref>, instructions further configurable to cause:<claim-text>automatically producing an updated version of the binary; and</claim-text><claim-text>providing, to the first organization, the updated version of the binary.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer program product of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the updated version of the binary is provided to the first organization without requiring the first organization to provide additional information to the computing platform.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer program product of <claim-ref idref="CLM-00015">claim 15</claim-ref>, instructions further configurable to cause:<claim-text>determining that the first organization is a new customer of the computing platform; and</claim-text><claim-text>automatically providing, responsive to determining that the first organization is the new customer of the computing platform, assistance in creating a signing certificate for the mobile application provider.</claim-text></claim-text></claim></claims></us-patent-application>