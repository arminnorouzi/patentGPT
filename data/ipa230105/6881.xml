<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006882A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006882</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942211</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>69</main-group><subgroup>165</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>52</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0823</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>47</main-group><subgroup>28</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>69</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0886</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>69</main-group><subgroup>165</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>52</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0836</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>47</main-group><subgroup>286</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>69</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>104</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD AND SYSTEM FOR NODE DISCOVERY AND SELF-HEALING OF BLOCKCHAIN NETWORKS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16567112</doc-number><date>20190911</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11477084</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942211</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15211076</doc-number><date>20160715</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10454765</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16567112</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Mastercard International Incorporated</orgname><address><city>Purchase</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>DAVIS</last-name><first-name>Steven C.</first-name><address><city>Saint Peters</city><state>MO</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for automatic configuration of a communication network includes: generating a request message, the request message including a communication address associated; transmitting the generated request message as a broadcast message to a plurality of computing devices using a predefined user datagram protocol (UDP) port, the message being broadcast with a predetermined time to live; receiving agreement messages from computing devices transmitted by the respective computing device using the predefined UDP port, each agreement message including a communication address associated with the respective computing device and a specified transmission control protocol (TCP) port; identifying at least one of the one or more agreement messages for establishment of communication; and establishing a communication connection to the computing device associated with each identified agreement message using the specific TCP port.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="116.16mm" wi="158.75mm" file="US20230006882A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="202.10mm" wi="140.29mm" orientation="landscape" file="US20230006882A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="148.84mm" wi="143.17mm" orientation="landscape" file="US20230006882A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="182.71mm" wi="134.79mm" orientation="landscape" file="US20230006882A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="207.01mm" wi="140.72mm" orientation="landscape" file="US20230006882A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="207.09mm" wi="136.48mm" orientation="landscape" file="US20230006882A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="207.26mm" wi="143.17mm" orientation="landscape" file="US20230006882A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="207.26mm" wi="143.17mm" orientation="landscape" file="US20230006882A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="204.81mm" wi="153.33mm" orientation="landscape" file="US20230006882A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">The present disclosure relates to the automatic configuration of a communication network, specifically the discovery and self-configuration and self-healing of communication networks, including blockchain networks, that are partition-resistant via the use of multiple connection times and varying times to live.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Communication networks are often established for a wide variety of different reasons. Some communication networks may be small, local area networks used for connecting devices in a home or business, whereas other communication networks may be large networks of interconnected systems and devices that span cities, countries, or the world. In some types of networks, such as blockchain networks, a new device or system that wants to connect into the network must first connect to one of a handful of previously identified hosting systems. These previously identified systems are often either hard-coded into the connection program or their connection information is manually entered by an operator when the connection is being established.</p><p id="p-0004" num="0003">In either instance, the connection of a device or system into the communication network requires prior knowledge of specific communication addresses. In such cases, if a new device or system wants to participate in the communication network, such information must first be obtained. As a result, automatic configuration of such networks is impossible without first establishing the hosting systems, obtaining their communication information, and hard-coding the connection programs to utilize the connection information. Furthermore, any changes to the connection information of the hosting systems after the communication network is established would result in a node being unable to reconnect if the connection is lost, and require that node to have their connection program updated with the changed connection information. For communication networks that may span thousands or millions of computing devices over great distances, such detailed configuration that can require constant updating may be inefficient and unreliable.</p><p id="p-0005" num="0004">Thus, there is a need for a technological solution to provide for efficient automatic configuration and self-healing of communication networks that do not require the use of hard-coded or manually entered communication addresses, where a device or system may be automatically connected into the network without the use of and previously identified communication addresses.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">The present disclosure provides a description of systems and methods for the automatic configuration of a communication network and configuration of a partition-resistant communication network.</p><p id="p-0007" num="0006">A method for automatic configuration of a communication network includes: generating, by a generation module of a processing server, a request message, wherein the request message includes at least a communication address associated with the processing server; electronically transmitting, by a transmitting device of the processing server, the generated request message as a broadcast message to a plurality of computing devices using a predefined user datagram protocol (UDP) port, wherein the broadcast message is transmitted with a predetermined time to live; receiving, by a receiving device of the processing server, one or more agreement messages, wherein each agreement message is received from one of the plurality of computing devices, is transmitted by the respective computing device using the predefined UDP port, and includes at least a communication address associated with the respective computing device and a specified transmission control protocol (TCP) port; identifying, by a data identification module of the processing server, at least one of the one or more agreement messages for establishment of communication; and establishing, by a communications module of the processing server, a communication connection to the computing device associated with each of the at least one identified agreement messages using the specific TCP port included in the respective agreement message.</p><p id="p-0008" num="0007">A method for configuration of a partition-resistant communication network includes: generating, by a generation module of a processing server, a request message, wherein the request message includes at least a communication address associated with the processing server; electronically transmitting, by a transmitting device of the processing server, the generated request message to a plurality of computing devices; receiving, by a receiving device of the processing server, a set of agreement messages, wherein each agreement message is received from one of the plurality of computing devices and includes at least a communication address associated with the respective computing device and a specified transmission control protocol (TCP) port; identifying, by a data identification module of the processing server, one distant computing device and at least one local computing device of the plurality of computing devices where from each an agreement message is received, wherein the distant computing device has a greater geographic distance to the processing server than each of the at least one local computing devices; and establishing, by a communications module of the processing server, a communication connection to the distant computing device and each of the at least one local computing devices using the specific TCP port included in the respective agreement message.</p><p id="p-0009" num="0008">A system for automatic configuration of a communication network includes: a generation module of a processing server configured to generate a request message, wherein the request message includes at least a communication address associated with the processing server; a transmitting device of the processing server configured to electronically transmit the generated request message as a broadcast message to a plurality of computing devices using a predefined user datagram protocol (UDP) port, wherein the broadcast message is transmitted with a predetermined time to live; a receiving device of the processing server configured to receive one or more agreement messages, wherein each agreement message is received from one of the plurality of computing devices, is transmitted by the respective computing device using the predefined UDP port, and includes at least a communication address associated with the respective computing device and a specified transmission control protocol (TCP) port; a data identification module of the processing server configured to identify at least one of the one or more agreement messages for establishment of communication; and a communications module of the processing server configured to establish a communication connection to the computing device associated with each of the at least one identified agreement messages using the specific TCP port included in the respective agreement message.</p><p id="p-0010" num="0009">A system for configuration of a partition-resistant communication network includes: a generation module of a processing server configured to generate a request message, wherein the request message includes at least a communication address associated with the processing server; a transmitting device of the processing server configured to electronically transmit the generated request message to a plurality of computing devices; a receiving device of the processing server configured to receive a set of agreement messages, wherein each agreement message is received from one of the plurality of computing devices and includes at least a communication address associated with the respective computing device and a specified transmission control protocol (TCP) port; a data identification module of the processing server configured to identify one distant computing device and at least one local computing device of the plurality of computing devices where from each an agreement message is received, wherein the distant computing device has a greater geographic distance to the processing server than each of the at least one local computing devices; and a communications module of the processing server configured to establish a communication connection to the distant computing device and each of the at least one local computing devices using the specific TCP port included in the respective agreement message.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWING FIGURES</heading><p id="p-0011" num="0010">The scope of the present disclosure is best understood from the following detailed description of exemplary embodiments when read in conjunction with the accompanying drawings. Included in the drawings are the following figures:</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating a high level system architecture for the automatic configuration of a partition-resistant communication network in accordance with exemplary embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating the processing server of <figref idref="DRAWINGS">FIG. <b>1</b></figref> for the automatic configuration of a partition-resistant communication network in accordance with exemplary embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow diagram illustrating a process for the automatic connection of the processing server of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to a computing device in a communication network using the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref> in accordance with exemplary embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram illustrating a process for the automatic configuration of a partition-resistant communication network via the use of a distant computing device in the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref> in accordance with exemplary embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flow diagram illustrating a process for the automatic configuration of a communication network involving the processing server of <figref idref="DRAWINGS">FIG. <b>2</b></figref> in accordance with exemplary embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow chart illustrating an exemplary method for automatic configuration of a communication network in accordance with exemplary embodiments.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart illustrating an exemplary method for configuration of a partition-resistant communication network in accordance with exemplary embodiments.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating a computer system architecture in accordance with exemplary embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0020" num="0019">Further areas of applicability of the present disclosure will become apparent from the detailed description provided hereinafter. It should be understood that the detailed description of exemplary embodiments are intended for illustration purposes only and are, therefore, not intended to necessarily limit the scope of the disclosure.</p><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><heading id="h-0006" level="1">Glossary of Terms</heading><p id="p-0021" num="0020">Blockchain&#x2014; A public ledger of all transactions of a blockchain-based currency. One or more computing devices may comprise a blockchain network, which may be configured to process and record transactions as part of a block in the blockchain. Once a block is completed, the block is added to the blockchain and the transaction record thereby updated. In many instances, the blockchain may be a ledger of transactions in chronological order, or may be presented in any other order that may be suitable for use by the blockchain network. In some configurations, transactions recorded in the blockchain may include a destination address and a currency amount, such that the blockchain records how much currency is attributable to a specific address. In some instances, the transactions are financial and others not financial, or might include additional or different information, such as a source address, timestamp, etc. In some embodiments, a blockchain may also or alternatively include nearly any type of data as a form of transaction that is or needs to be placed in a permissionless, distributed database that maintains a continuously growing list of data records hardened against tampering and revision, even by its operators, and may be confirmed and validated by the blockchain network through proof of work and/or any other suitable verification techniques associated therewith. In some cases, data regarding a given transaction may further include additional data that is not directly part of the transaction appended to transaction data. In some instances, the inclusion of such data in a blockchain may constitute a transaction. In such instances, a blockchain may not be directly associated with a specific digital, virtual, fiat, or other type of currency. In some cases, participation in a blockchain (e.g., as a node submitting and/or confirming transactions) may be permissionless (e.g., not moderated or restricted). In other cases, a blockchain may be a permissioned blockchain where only authorized computing devices may operate as nodes, where a level of participation may be based on permissions associated therewith.</p><heading id="h-0007" level="2">System for Automatic Configuration of Partition-Resistant Communication Networks</heading><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system <b>100</b> for the automatic configuration of a communication network, including the automatic configuration of a partition-resistant communication network, through the use of broadcast request messages via predefined communication ports.</p><p id="p-0023" num="0022">The system <b>100</b> may include a processing server <b>102</b>. The processing server <b>102</b>, discussed in more detail below, may be configured to automatically configure itself for participation in a communication network. In some embodiments, the automatic configuration performed by the processing server <b>102</b> may increase the resistance of the communication network against network partitions that may occur as a result of loss of communications between other nodes in the communication network.</p><p id="p-0024" num="0023">The system <b>100</b> may also include a plurality of computing devices <b>104</b>, illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as computing devices <b>104</b><i>a</i>, <b>104</b><i>b</i>, <b>104</b><i>c</i>, <b>104</b><i>d</i>, and <b>104</b><i>e</i>. Each computing device <b>104</b> may be a node in a communication network that is automatically configured using the methods discussed herein. A computing device <b>104</b> may be any type of computing device suitable for performing the functions discussed herein, such as a desktop computer, laptop computer, notebook computer, tablet computer, application-specific integrated-circuit, cellular phone, smart phone, smart television, smart watch, wearable computing device, implantable computing device, etc. Communication networks that may be suitable for automatic configuration using the methods discussed herein may include, for example, blockchain networks, local area networks, wireless area networks, etc.</p><p id="p-0025" num="0024">The processing server <b>102</b> may be configured to automatically connect with one or more of the computing devices <b>104</b> using the methods discussed herein. The processing server <b>102</b> may generate a request message. The request message may include at least a communication address associated with the processing server <b>102</b>. The communication address may be an internet protocol address, media access control address, or other type of address that may be used in identification of the processing server <b>102</b> for the establishing of communication in the communication network. In instances where the communication network may be a blockchain network, the communication address may be a blockchain network address, which may be derived using a public key of a key pair associated with the processing server <b>102</b>, which may be derived using one or more algorithms associated with the blockchain network.</p><p id="p-0026" num="0025">In some instances, the request message may also include additional information. The additional information may include, for example, a timestamp, a network identifier, one or more service indicators, and a host address. The timestamp may be a representation of the time at which the request message is generated, which may be represented in any suitable format (e.g., in seconds since the start of the UNIX epoch, a predefined DateTime format, etc.). The network identifier may be an identification value associated with the communication network to which the processing server <b>102</b> is wanting to join, such as an identifier associated with a blockchain network. Service indicators may be identification value that indicate a level of service of the processing server <b>102</b> in the communication network. For example, if the communication network is a blockchain network for a permissioned blockchain, the service indicators may indicate the types of nodes the processing server <b>102</b> may be configured to operate as (e.g., a client node, audit node, member node, etc.). The host address may be a secondary communication address for the processing server <b>102</b>, such as in instances where the request message may include a different communication address due to the communication configuration of the processing server <b>102</b>, such as communications made from the processing server <b>102</b> pass through a router that includes a different communication address in the request message. In embodiments where the communication network is a blockchain network, the additional information may also include data associated with the corresponding blockchain, such as a block height, number of blocks, hash value of the most recently added block, etc.</p><p id="p-0027" num="0026">The processing server <b>102</b> may be configured to broadcast the generated request message via a predefined user datagram protocol (UDP) port. In some embodiments, the processing server <b>102</b> may broadcast the request message using a multicast technique. The UDP port may be predefined by the communication network, such that any node in the communication network (e.g., computing device <b>104</b>), or wishing to join the communication network (e.g., the processing server <b>102</b>), may be informed of the UDP port using any suitable method. Each of the computing devices <b>104</b> in the communication network may listen on the predefined UDP port for the broadcast request message.</p><p id="p-0028" num="0027">A computing device <b>104</b> may receive the request message via the predefined UDP port. The computing device <b>104</b> may then determine if they want to establish a connection to the processing server <b>102</b>. Such a determination may be made using any suitable criteria, such as, for example, a predefined maximum number of connections and the existing number of connections by the computing device <b>104</b> in the communication network. For instance, a computing device <b>104</b> may already be connected to eight other nodes in the communication network, and may refrain from establishing another connection. If a computing device <b>104</b> decides, based on the determination, to connect to the processing server <b>102</b>, the computing device <b>104</b> may generate an agreement message.</p><p id="p-0029" num="0028">The agreement message may include at least a communication address associated with the computing device <b>104</b> and a transmission control protocol (TCP) port. The TCP port may be a port of the computing device <b>104</b> with which the computing device <b>104</b> may be configured to perform two-way communications with the processing server <b>102</b>, if such a communication is established, as part of the communication network. In some instances, the agreement message may include a plurality of TCP ports, such as in instances where the computing device <b>104</b> may utilize more than one TCP port as part of the communication network. In cases where the communication network is a blockchain network, the communication address for the computing device <b>104</b> may be the blockchain address derived using a public key associated with the computing device <b>104</b> in the blockchain network. In some embodiments, the request message may also include additional information, such as one or more service indicators, a secondary communication address, a timestamp, a network identifier, data associated with a blockchain, etc.</p><p id="p-0030" num="0029">The computing device <b>104</b> may then electronically transmit the agreement message back to the processing server <b>102</b> using the predefined UDP port. The processing server <b>102</b> may then receive the agreement message. The processing server <b>102</b> may receive a plurality of different agreement messages, one from each computing device <b>104</b> that is amenable to the establishing of a connection as part of the communication network. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the processing server <b>102</b> may receive an agreement message from computing devices <b>104</b><i>a</i>, <b>104</b><i>b</i>, <b>104</b><i>d</i>, and <b>104</b><i>e</i>. Once the processing server <b>102</b> has received an agreement message, the processing server <b>102</b> may establish a communication connection with the associated computing device <b>104</b> using one of the TCP ports indicated in the agreement message. In some embodiments, the request message broadcast by the processing server <b>102</b> may include one or more TCP ports for use by the processing server <b>102</b>. In such embodiments, the agreement messages may indicate at least one of the provided TCP ports, which may be used by the processing server <b>102</b> in establishing the communications.</p><p id="p-0031" num="0030">In some embodiments, the communication network may require a predefined number of connections for participation in the communication network. In such embodiments, the processing server <b>102</b> may establish at the least the predefined number of connections upon the receipt of the agreement messages. In cases where the processing server <b>102</b> may not receive enough agreement messages, the processing server <b>102</b> may repeat the broadcast of the request message until at least the required number of agreement messages have been received. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the predefined number of connections may be no higher than four, such that the connections established by the processing server <b>102</b> with the computing devices <b>104</b> is suitable for participation in the communication network.</p><p id="p-0032" num="0031">In some embodiments, the processing server <b>102</b> may utilize a time to live value in automatically configuring its connection to the communication network. In such an embodiments, the processing server <b>102</b> may first broadcast the request message via the predefined UDP port using a first time to live value. If the processing server <b>102</b> does not receive a suitable number of agreement messages in response, the processing server <b>102</b> may repeat the broadcast of the request message using a second, higher, time to live value. The higher time to live value may result in the request message reaching a larger number of computing devices <b>104</b>, which may, in turn, result in the receipt of more agreement messages. The processing server <b>102</b> may continue to rebroadcast the request message with increasingly higher time to live values until a suitable number of agreement messages is received.</p><p id="p-0033" num="0032">In some cases, the processing server <b>102</b> may establish communication connections with computing devices <b>104</b> that return agreement messages prior to increasing the time to live. For example, the communication network may require at least four communications for participation. The processing server <b>102</b> may broadcast the request message using a first time to live, which may be replied to via agreement messages by the computing devices <b>104</b><i>a </i>and <b>104</b><i>e</i>. The processing server <b>102</b> may establish communication connections with the computing devices <b>104</b><i>a </i>and <b>104</b><i>e </i>before rebroadcasting the request message with a higher time to live. The processing server <b>102</b> may then continue to repeat the process until the predefined number of communications is established (e.g., with computing devices <b>104</b><i>b </i>and <b>104</b><i>d</i>).</p><p id="p-0034" num="0033">In other cases, the processing server <b>102</b> may not establish communication connections until enough agreement messages for the predefined number of connections have been received. In some such cases, the processing server <b>102</b> may prioritize agreement messages based on receipt. For instance, in the above example, the processing server <b>102</b> may rebroadcast the request message with a high enough time to live to receive six different agreement messages. The processing server <b>102</b> may prioritize agreement messages received from the computing devices <b>104</b><i>a </i>and <b>104</b><i>e</i>, since they were already received when a lower time to live was used.</p><p id="p-0035" num="0034">In some embodiments, the processing server <b>102</b> may be configured to connect to computing devices <b>104</b> in such a way as to automatically configure the communication network to be resistant to network partitioning. In such embodiments, the processing server <b>102</b> may connect to at least one computing device <b>104</b> that has a large geographic distance between itself and the processing server <b>102</b>. The use of a larger geographic distance may result in a higher likelihood that communication in the communication network is maintained in instances where communication connections may be broken between nodes due to physical intervention.</p><p id="p-0036" num="0035">For instance, in the example illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the processing server <b>102</b> may establish communication connections with &#x201c;local&#x201d; computing devices <b>104</b><i>a</i>, <b>104</b><i>d</i>, and <b>104</b><i>e</i>, which may be the three computing devices <b>104</b> with the closest geographic proximity to the processing server <b>102</b> that returned agreement messages to the processing server <b>102</b>, but may also establish a communication connection to the &#x201c;distant&#x201d; computing device <b>104</b><i>b</i>, which may have a significantly greater geographic distance to the processing server <b>102</b>. For example, the processing server <b>102</b> may be located in the United States with each of the computing devices <b>104</b><i>a</i>, <b>104</b><i>c</i>, <b>104</b><i>d</i>, and <b>104</b><i>e </i>being located in the same state, while the computing device <b>104</b><i>b </i>may be located in the United Kingdom. Such configurations, when used by multiple computing devices <b>104</b> in the communication network, may increase the resistance of the network to partitioning.</p><p id="p-0037" num="0036">Determination of the geographic distance may be made using any suitable criteria. In some instances, the agreement messages returned by computing devices <b>104</b> may include geographic information, such as a geographic location in a suitable representation (e.g., latitude and longitude, zip code or postal code, city, state, country, municipality, etc.). In other instances, the processing server <b>102</b> may be configured to identify the geographic location of a computing device <b>104</b> that returned an agreement message using the communication address. For example, the processing server <b>102</b> may include a location database, discussed in more detail below, which may include a lookup table of internet protocol addresses or data included therein and corresponding geographic locations. The processing server <b>102</b> may thus identify a geographic location for a computing device <b>104</b> using the agreement message, and may determine therefrom which computing devices <b>104</b> to establish a connection to.</p><p id="p-0038" num="0037">In some embodiments, the processing server <b>102</b> may be configured to identify a distant computing device (e.g., the computing device <b>104</b><i>b</i>) via the use of varying times to live. For instance, the processing server <b>102</b> may use a first time to live when broadcasting the request message, which may be responded to by the computing devices <b>104</b><i>a</i>, <b>104</b><i>d</i>, and <b>104</b><i>e</i>. The processing server <b>102</b> may then use a significantly higher second time to live in a rebroadcast of the request message, which may be responded to by the computing device <b>104</b><i>b</i>. The processing server <b>102</b> may thus infer a greater geographic distance for the computing device <b>104</b><i>b </i>as a result of the higher time to live. In some cases, the processing server <b>102</b> may use a series of increasing times to live, to strengthen the inference of a greater geographic distance. For example, the processing server <b>102</b> may use five different increasing times to live when rebroadcasting, and may connect to the computing device <b>104</b><i>b </i>as a computing device <b>104</b> that only responds to the highest time to live.</p><p id="p-0039" num="0038">Methods and systems discussed herein may enable the automatic configuration of a communication network that does not utilize any predefined communication addresses and that may be performed without manual input of communication addresses. This may result in a more efficient establishing of a communication network that may be successful even in instances where communication addresses may regularly change. In addition, this may also increase the efficiency and effectiveness of self-healing in the communication network, as any node in the communication network may be able to automatically rejoin the network if connections are lost or automatically establish new connections if a connection is dropped. The methods and systems discussed herein may also provide greater resistance against network partitioning due to the use of communication connections to computing devices <b>104</b> (e.g., the computing device <b>104</b><i>b</i>) that have a greater geographic distance to the processing server <b>102</b>, which, when combined with the automatic configuration, may result in a faster, yet more robust, automatically configured communication network than provided via traditional methods.</p><heading id="h-0008" level="2">Processing Server</heading><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an embodiment of a processing server <b>102</b> of the processing system <b>102</b> in the system <b>100</b>. It will be apparent to persons having skill in the relevant art that the embodiment of the processing server <b>102</b> illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> is provided as illustration only and may not be exhaustive to all possible configurations of the processing system <b>102</b> suitable for performing the functions as discussed herein. For example, the computer system <b>800</b> illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref> and discussed in more detail below may be a suitable configuration of the processing server <b>102</b>.</p><p id="p-0041" num="0040">The processing server <b>102</b> may include a receiving device <b>202</b>. The receiving device <b>202</b> may be configured to receive data over one or more networks via one or more network protocols. The receiving device <b>202</b> may be configured to receive data from computing devices <b>104</b> and other devices and systems via suitable communication networks and corresponding network protocols. In some embodiments, the receiving device <b>202</b> may be comprised of multiple devices, such as different receiving devices for receiving data over different networks, such as a first receiving device for receiving data over a local area network and a second receiving device for receiving data via a blockchain network. The receiving device <b>202</b> may receive electronically transmitted data signals, where data may be superimposed or otherwise encoded on the data signal and decoded, parsed, read, or otherwise obtained via receipt of the data signal by the receiving device <b>202</b>. In some instances, the receiving device <b>202</b> may include a parsing module for parsing the received data signal to obtain the data superimposed thereon. For example, the receiving device <b>202</b> may include a parser program configured to receive and transform the received data signal into usable input for the functions performed by the processing device to carry out the methods and systems described herein.</p><p id="p-0042" num="0041">The receiving device <b>202</b> may be configured to receive data signals electronically transmitted by computing devices <b>104</b>. The data signals may be superimposed or otherwise encoded with agreement messages, which may be received via a predefined UDP port. Agreement messages may include at least one or more TCP ports and a communication address, and may also include a timestamp, network identifier, blockchain data, service indicators, additional communication addresses, etc. The receiving device <b>202</b> may also be configured to receive data signals from computing devices <b>104</b> via a TCP port using a communication connection established therewith. In embodiments where the processing server <b>102</b> may operate as a computing device <b>104</b>, the receiving device <b>202</b> may be configured to receive request messages broadcast using a predefined UDP port, which may be responded to by the processing server <b>102</b> for connecting to new nodes attempting to join the communication network.</p><p id="p-0043" num="0042">The processing server <b>102</b> may also include a communication module <b>204</b>. The communication module <b>204</b> may be configured to transmit data between modules, engines, databases, memories, and other components of the processing server <b>102</b> for use in performing the functions discussed herein. The communication module <b>204</b> may be comprised of one or more communication types and utilize various communication methods for communications within a computing device. For example, the communication module <b>204</b> may be comprised of a bus, contact pin connectors, wires, etc. In some embodiments, the communication module <b>204</b> may also be configured to communicate between internal components of the processing server <b>102</b> and external components of the processing server <b>102</b>, such as externally connected databases, display devices, input devices, etc. The processing server <b>102</b> may also include a processing device. The processing device may be configured to perform the functions of the processing server <b>102</b> discussed herein as will be apparent to persons having skill in the relevant art. In some embodiments, the processing device may include and/or be comprised of a plurality of engines and/or modules specially configured to perform one or more functions of the processing device, such as a querying module <b>210</b>, generation module <b>212</b>, data identification module <b>214</b>, etc. As used herein, the term &#x201c;module&#x201d; may be software or hardware particularly programmed to receive an input, perform one or more processes using the input, and provide an output. The input, output, and processes performed by various modules will be apparent to one skilled in the art based upon the present disclosure.</p><p id="p-0044" num="0043">The processing server <b>102</b> may include a location database <b>206</b>. The location database <b>206</b> may be configured to store a plurality of location profiles <b>208</b> using a suitable data storage format and schema. The location database <b>206</b> may be a relational database that utilizes structured query language for the storage, identification, modifying, updating, accessing, etc. of structured data sets stored therein. Each location profile <b>208</b> may be a structured data set configured to store data related to geographic locations and communication addresses. Each location profile <b>208</b> may include at least a geographic location and a communication address designator. The geographic location may be any suitable representation of a geographic location. The communication address designator may be a value included in or comprising a communication address. For instance, if the communication address is an internet protocol address, the communication address designator may be one, two, or three parts of an internet protocol version 4 or version 6 address. In some instances, a location profile <b>208</b> may include a plurality of communication addresses associated with the included geographic location, which may be identified via any suitable method.</p><p id="p-0045" num="0044">The processing server <b>102</b> may include a querying module <b>210</b>. The querying module <b>210</b> may be configured to execute queries on databases to identify information. The querying module <b>210</b> may receive one or more data values or query strings, and may execute a query string based thereon on an indicated database, such as the location database <b>206</b>, to identify information stored therein. The querying module <b>210</b> may then output the identified information to an appropriate engine or module of the processing server <b>102</b> as necessary. The querying module <b>210</b> may, for example, execute a query on the location database <b>206</b> to identify a location profile <b>208</b> associated with a communication address included in a received agreement message to determine a geographic distance to the computing device <b>104</b> associated therewith, for use in establishing connections to the communication network.</p><p id="p-0046" num="0045">The processing server <b>102</b> may also include a generation module <b>212</b>. The generation module <b>212</b> may be configured to generate request and agreement messages for use in performing the functions of the processing server <b>102</b> as discussed herein. The generation module <b>212</b> may receive a request, may generate a message based on that request, and may output the generated message to another module or engine of the processing server <b>102</b>. For example, the generation module <b>212</b> may be instructed to generate a request message. The request message may include at least a communication address associated with the processing server <b>102</b>, and may also include additional data including one or more TCP ports, a network identifier, a timestamp, blockchain data, one or more service indicators, etc. In embodiments where the communication network may be a blockchain network, the generation module <b>212</b> may also be configured to generate a blockchain address. The blockchain address may be generated using a public key of a key pair that may be associated with the processing server <b>102</b>, such as may be stored in the memory <b>218</b>, discussed below. In some cases, the blockchain address may be generated using one or more specific algorithms, such as may be associated with the blockchain network. In some cases, the generation module <b>212</b> may be configured to generate an agreement message, such as in cases where the processing server <b>102</b> acts as a computing device <b>104</b> to further nodes trying to join the communication network.</p><p id="p-0047" num="0046">The processing server <b>102</b> may also include a data identification module <b>214</b>. The data identification module <b>214</b> may be configured to receive one or more data values as input, may identify data based on the input data values, and may output the identified data to another module or engine of the processing server <b>102</b>. The data identification module <b>214</b> may, for example, be configured to identify one or more computing devices <b>104</b> with which to establish a connection. Computing devices <b>104</b> may be identified based on received agreement messages, and may be further based on prioritization and/or geographic distance. For instance, the data identification module <b>214</b> may be configured to identify a plurality of local computing devices <b>104</b> and at least one distance computing device <b>104</b> based on geographic locations and/or times to live used in prompting corresponding agreement messages. The data identification module <b>214</b> may also be configured to identify prioritized computing devices <b>104</b> for connection based on agreement messages received at varying times to live, such as discussed in more detail above.</p><p id="p-0048" num="0047">The processing server <b>102</b> may also include a transmitting device <b>216</b>. The transmitting device <b>216</b> may be configured to transmit data over one or more networks via one or more network protocols. The transmitting device <b>216</b> may be configured to transmit data to computing devices <b>104</b>, and other entities via suitable communication networks and corresponding network protocols. In some embodiments, the transmitting device <b>216</b> may be comprised of multiple devices, such as different transmitting devices for transmitting data over different networks, such as a first transmitting device for transmitting data over a local area network and a second transmitting device for transmitting data via a blockchain network. The transmitting device <b>216</b> may electronically transmit data signals that have data superimposed that may be parsed by a receiving computing device. In some instances, the transmitting device <b>216</b> may include one or more modules for superimposing, encoding, or otherwise formatting data into data signals suitable for transmission.</p><p id="p-0049" num="0048">The transmitting device <b>216</b> may be configured to electronically transmit data signals that are superimposed or otherwise encoded with request messages to computing devices <b>104</b> via a broadcast using a predefined UDP port. The transmitting device <b>216</b> may also be configured to electronically transmit data signals to computing devices <b>104</b> via a specific TCP port using a communication connection established therewith. In embodiments where the processing server <b>102</b> may act as a computing device <b>104</b>, the transmitting device <b>216</b> may also be configured to electronically transmit data signals superimposed or otherwise encoded with agreement messages to other computing devices <b>104</b> via the predefined UDP port.</p><p id="p-0050" num="0049">The processing server <b>102</b> may also include a memory <b>218</b>. The memory <b>218</b> may be configured to store data for use by the processing server <b>102</b> in performing the functions discussed herein. The memory <b>218</b> may be configured to store data using suitable data formatting methods and schema and may be any suitable type of memory, such as read-only memory, random access memory, etc. The memory <b>218</b> may include, for example, encryption keys and algorithms, communication protocols and standards, data formatting standards and protocols, program code for modules and application programs of the processing device, and other data that may be suitable for use by the processing server <b>102</b> in the performance of the functions disclosed herein as will be apparent to persons having skill in the relevant art. In some embodiments, the memory <b>218</b> may be comprised of or may otherwise include a relational database that utilizes structured query language for the storage, identification, modifying, updating, accessing, etc. of structured data sets stored therein.</p><heading id="h-0009" level="2">Process for Automatic Configuration of a Network Communication</heading><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a process <b>300</b> for the automatic configuration of a connection by the processing server <b>102</b> to a computing device <b>104</b> in the communication network illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> via the UDP broadcast of a request message.</p><p id="p-0052" num="0051">In step <b>302</b>, the generation module <b>212</b> of the processing server <b>102</b> may generate a request message. The request message may include at least a communication address associated with the processing server <b>102</b>. In embodiments where the communication network may be a blockchain network, the communication address may be generated by the generation module <b>212</b> via one or more predefined algorithms using a public key associated with the processing server <b>102</b>, such as may be stored in the memory <b>218</b> therein. The request message may also include a timestamp, network identifier, blockchain data, one or more available TCP ports, and one or more additional communication addresses. In some instances, the request message may also include one or more service indicators, which may indicate services performed by and/or requested by the processing server <b>102</b> in associated with the communication network.</p><p id="p-0053" num="0052">In step <b>304</b>, the transmitting device <b>216</b> of the processing server <b>102</b> may electronically broadcast the request message via a predefined UDP port associated with the communication network. The computing device <b>104</b> may listen for messages broadcast using that predefined UDP port and may, as a result, receive the request message broadcast from the processing server <b>102</b>. In step <b>306</b>, the computing device <b>104</b> may determine if the processing server <b>102</b> is suitable for a connection. The determination may be based on, for example, the number of connections to the communication network already established by the computing device <b>104</b> and the services indicated by the processing server <b>102</b>. For instance, the computing device <b>104</b> may not find the connection suitable if the processing server <b>102</b> does not provide a service needed by the computing device <b>104</b>, or if the processing server <b>102</b> requires a service not provided by the computing device <b>104</b>.</p><p id="p-0054" num="0053">If the computing device <b>104</b> determines that it is suitable for the connection, then, in step <b>308</b>, the computing device <b>104</b> may generate an agreement message. The agreement message may include at least a communication address associated with the computing device <b>104</b> and one or more TCP ports available for communication with the computing device <b>104</b>. In instances where the communication network is a blockchain network, the communication address may be a blockchain address derived by the computing device <b>104</b> using a public key associated therewith. The agreement message may, in some instances, also include a timestamp, network identifier, blockchain data, and one or more service indicators, which may indicate services performed by and/or requested by the computing device <b>104</b>. In step <b>310</b>, the computing device <b>104</b> may directly transmit (e.g., not a broadcast transmission) the agreement message to the processing server <b>102</b> via the predefined UDP port, to be received by the receiving device <b>202</b> thereof.</p><p id="p-0055" num="0054">In step <b>312</b>, the data identification module <b>214</b> of the processing server <b>102</b> may determine if the computing device <b>104</b> is suitable for connection. The suitability may be based on any suitable criteria, such as the service indicators included in the request message, a geographic location of the computing device <b>104</b> (e.g., identified via a location profile <b>208</b> queried by the querying module <b>210</b> using the communication address), availability of the TCP ports included in the agreement message at the processing server <b>102</b>, etc. If the computing device <b>104</b> is determined to be suitable, then, in step <b>314</b>, the processing server <b>102</b> and computing device <b>104</b> may establish a communication connection via one of the TCP ports indicated in the agreement message. In embodiments where the communication network is a blockchain network, future transmissions made using the established TCP communication connection may be signed using private keys in the key pairs associated with the respective entities.</p><heading id="h-0010" level="2">Process for Automatic Configuration of a Partition-Resistant Network</heading><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a process for the automatic configuration of the partition-resistant network of the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0057" num="0056">In step <b>402</b>, a local computing device <b>104</b><i>a </i>and a distant computing device <b>104</b><i>b</i>, relative to geographic distance from the processing server <b>102</b>, may establish a TCP communication connection. The TCP communication connection may be established between the local computing device <b>104</b> and distant computing device <b>104</b><i>b </i>using the processes discussed herein, such as the process <b>300</b> illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> and discussed above.</p><p id="p-0058" num="0057">In step <b>404</b>, the transmitting device <b>216</b> of the processing server <b>102</b> may broadcast a request message via a predefined UDP port for requesting automatic configuration for connection into the communication network. In step <b>406</b>, the local computing device <b>104</b><i>a </i>may receive the request message, which may include at least a communication address associated with the processing server <b>102</b>. The local computing device <b>104</b><i>a </i>may agree to establish a connection with the processing server <b>102</b> in the communication network and may, in step <b>408</b>, return an agreement message to the processing server <b>102</b> via a direct transmission to the communication address from the request message using the predefined UDP port. In step <b>410</b>, the receiving device <b>202</b> of the processing server <b>102</b> may receive the agreement message, which may include at least a communication address associated with the receiving device <b>202</b> and one or more available TCP ports.</p><p id="p-0059" num="0058">In step <b>412</b>, the processing server <b>102</b> may verify the suitability of the local computing device <b>104</b><i>a </i>for the connection to the communication network, such as based on service indicators or other criteria, as discussed in more detail above. In step <b>414</b>, the processing server <b>102</b> and local computing device <b>104</b><i>a </i>may establish a communication connection using one of the available TCP ports indicated in the agreement message. In step <b>416</b>, the local computing device <b>104</b><i>a </i>may identify the distant computing device <b>104</b><i>b </i>as being of a significant geographic distance from the processing server <b>102</b>. The identification may be based on, for instance, location profiles <b>208</b> for each based on their corresponding communication addresses, provided geographic locations, message timestamps included in communications, communication ping values, etc. The local computing device <b>104</b><i>a </i>may provide the communication address, as well as at least one TCP port available at the distant computing device <b>104</b><i>b</i>, to the processing server <b>102</b>, which may be received by the receiving device <b>202</b> included therein in step <b>418</b>.</p><p id="p-0060" num="0059">In step <b>420</b>, the processing server <b>102</b> may establish a direct TCP communication connection with the distant computing device <b>104</b><i>b </i>using the data provided by the local computing device <b>104</b><i>a</i>. In such an embodiment, the processing server <b>102</b> may automatically configure itself as part of the communication network, while also increasing the partition resistance of the network, by having other nodes in the communication network provide connection information of distant nodes. In other embodiments, the distant computing device <b>104</b><i>b </i>may be identified directly by the processing server <b>102</b>, such as based on the use of varying times to live in the broadcast of request messages (e.g., in step <b>404</b> of the process illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>), such as discussed above.</p><heading id="h-0011" level="2">Process for Automatic Configuration of a Sufficient Number of Connections</heading><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a process <b>500</b> for the automatic configuration of the processing server <b>102</b> in the communication network illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, where the processing server <b>102</b> establishes a minimum, predetermined number of communication connections as part of the joining of the communication network.</p><p id="p-0062" num="0061">In step <b>502</b>, the generation module <b>212</b> of the processing server <b>102</b> may generate a request message. The request message may include at least the communication address associated with the processing server <b>102</b>. In some embodiments, the communication address may be a blockchain address derived using a public key of a key pair associated with the processing server <b>102</b> and a blockchain network. In some cases, the request message may also include at least one of: a network identifier, a timestamp, one or more service indicators, blockchain data, and one or more additional communication addresses. In step <b>504</b>, the processing server <b>102</b> may set a time to live for broadcast messages to a predetermined value. The predetermined value may be based on the communication network to be joined and/or may be stored in the memory <b>218</b> of the processing server <b>102</b>.</p><p id="p-0063" num="0062">In step <b>506</b>, the transmitting device <b>216</b> of the processing server <b>102</b> may electronically broadcast the request message via a predefined UDP port. The request message may thus be broadcast to any computing device <b>104</b> listening for messages on the predefined UDP port. In step <b>508</b>, the receiving device <b>202</b> of the processing server <b>102</b> may receive agreement messages from one or more computing devices <b>104</b> that are directly transmitted to the processing server <b>102</b> on the predefined UDP port using the communication address included in the request message. Each agreement message may include at least a communication address and one or more available TCP ports, and may also include at least one of: a network identifier, timestamp, one or more service indicators, blockchain data, and one or more additional communication addresses.</p><p id="p-0064" num="0063">In step <b>510</b>, the data identification module <b>214</b> of the processing server <b>102</b> may identify if a sufficient number of suitable agreement messages was received. An agreement message may be suitable if the service indicators or other data included in the agreement message matches any criteria set by the processing server <b>102</b>. The sufficient number may be predetermined number set forth by the settings of the communication network itself, by the processing server <b>102</b> (e.g., as stored in the memory <b>218</b>), or other entity. If the data identification module <b>214</b> determines that there are not a sufficient number of agreement messages received, then, in step <b>512</b>, the time to live value may be increased. Once the time to live is increased, the process <b>500</b> may return to step <b>506</b>, where the request message may be rebroadcast using the higher time to live. Agreement messages may be received again, and, in step <b>510</b>, the sufficiency thereof re-determined. The processing server <b>102</b> may continue to increase the time to live and rebroadcast until the sufficient number of agreement messages have been received.</p><p id="p-0065" num="0064">Once a sufficient number of agreement messages are received, then, in step <b>514</b>, the data identification module <b>214</b> may select the predetermined number of agreement messages. The predetermined number may be the same number used in the determination made in step <b>510</b>. The data identification module <b>214</b> may select agreement messages based on any suitable criteria, such as receipt of an agreement message from the same computing device <b>104</b> at a lower time to live, a geographic location of the computing device <b>104</b> identified via a location profile <b>208</b>, the timestamp included in the agreement message, etc. In step <b>516</b>, the processing server <b>102</b> may establish a communication connection with each of the selected computing devices <b>104</b> via a TCP port included in the respective agreement message. In embodiments where the communication network is a blockchain network, future communications made using the established communication connection may be signed by the processing server <b>102</b> using the private key in the key pair associated with the blockchain network, such as may be stored in the memory <b>218</b> of the processing server <b>102</b>.</p><heading id="h-0012" level="2">Exemplary Method for Automatic Configuration of a Communication Network</heading><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a method <b>600</b> for the automatic configuration of a communication network having a predetermined number of communication connections.</p><p id="p-0067" num="0066">In step <b>602</b>, a request message may be generated by a generation module (e.g., the generation module <b>212</b>) of a processing server (e.g., the processing server <b>102</b>), wherein the request message includes at least a communication address associated with the processing server. In step <b>604</b>, the generated request message may be electronically transmitted by a transmitting device (e.g., the transmitting device <b>216</b>) of the processing server as a broadcast message to a plurality of computing devices (e.g., computing devices <b>104</b>) using a predefined user datagram protocol (UDP) port, wherein the broadcast message is transmitted with a predetermined time to live.</p><p id="p-0068" num="0067">In step <b>606</b>, one or more agreement messages may be received by a receiving device (e.g., the receiving device <b>202</b>) of the processing server, wherein each agreement message is received from one of the plurality of computing devices, is transmitted by the respective computing device using the predefined UDP port, and includes at least a communication address associated with the respective computing device and a specified transmission control protocol (TCP) port. In step <b>608</b>, at least one of the one or more agreement messages may be identified by a data identification module (e.g., the data identification module <b>214</b>) of the processing server for establishment of communication. In step <b>610</b>, a communication connection may be established by a communications module (e.g., the communication module <b>204</b>) of the processing server to the computing device associated with each of the at least one identified agreement messages using the specific TCP port included in the respective agreement message.</p><p id="p-0069" num="0068">In one embodiment, the method <b>600</b> further comprises repeating, by the processing server, the transmitting, receiving, identifying, and establishing steps with a second time to live if the identified at least one agreement message does not include at least a predetermined number of agreement messages, where the second time to live is a higher value than the predetermined time to live. In a further embodiment, a combination of the at least one agreement message identified using the predetermined time to live and the at least one agreement message identified using the second time to live may include at least the predetermined number of agreement messages. In another further embodiment, communication connections may not be established for agreement messages received using the predetermined time to live, and the at least one agreement message identified using the second time to live may include at least the predetermined number of agreement messages. In an even further embodiment, identifying the at least one of the one or more agreement messages using the second time to live may include prioritizing agreement messages that include communication addresses corresponding to communication addresses included in the at least one agreement message identified using the predetermined time to live.</p><p id="p-0070" num="0069">In some embodiments, the request message and each of the one or more agreement messages may further include a network identifier associated with a blockchain network. In a further embodiment, the request message may further include a blockchain network address derived using a public key associated with the processing server, and each of the one or more agreement messages may further include a blockchain network address derived using a public key associated with the respective computing device. In an even further embodiment, transmissions made by the processing server using the established communication channel may be signed using the blockchain network address derived using the public key associated with the processing server.</p><p id="p-0071" num="0070">In one embodiment, the request message may further include one or more service indicators, each of the one or more agreement messages may further include at least one service indicator, and the at least one service indicator included in each of the identified at least one agreement messages may correspond to one of the one or more service indicators included in the request message. In some embodiments, the method <b>600</b> may also include establishing, by the communications module of the processing server, an additional communication connection to a computing device having a greater geographic distance to the processing server than a geographic distance of the computing device associated with each of the at least one identified agreement messages. In a further embodiment, the computing device having a greater geographic distance to the processing server may be identified by repeating the transmitting, receiving, identifying, and establishing steps with a second time to live, wherein the second time to live is a higher value than the predetermined time to live. In another further embodiment, the method <b>600</b> may even further include storing, in a location database (e.g., the location database <b>206</b>) of the processing server, a plurality of location profiles (e.g., location profiles <b>208</b>), wherein each location profile includes at least a geographic location and an associated communication address designator, wherein the computing device having a greater geographic distance to the processing server is identified based on the geographic location associated with a communication address designator corresponding to a communication address associated with the computing device.</p><heading id="h-0013" level="2">Exemplary Method for Configuration of a Partition-Resistant Communication Network</heading><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a method <b>700</b> for the configuration of a partition-resistant communication network that utilizes communication connections with multiple computing devices having varying geographic distances from the target computing device.</p><p id="p-0073" num="0072">In step <b>702</b>, a request message may be generated by a generation module (e.g., the generation module <b>212</b>) of a processing server (e.g., the processing server <b>102</b>), wherein the request message includes at least a communication address associated with the processing server. In step <b>704</b>, the generated request message may be electronically transmitted by a transmitting device (e.g., the transmitting device <b>216</b>) of the processing server to a plurality of computing devices (e.g., computing devices <b>104</b>). In step <b>706</b>, a set of agreement messages may be received by a receiving device (e.g., the receiving device <b>202</b>) of the processing server, wherein each agreement message is received from one of the plurality of computing devices and includes at least a communication address associated with the respective computing device and a specified transmission control protocol (TCP) port.</p><p id="p-0074" num="0073">In step <b>708</b>, one distant computing device and at least one local computing device may be identified by a data identification module (e.g., the data identification module <b>214</b>) of the plurality of computing devices where from each an agreement message is received, wherein the distant computing device has a greater geographic distance to the processing server than each of the at least one local computing devices. In step <b>710</b>, a communication connection may be established by a communications module (e.g., the communication module <b>204</b>) of the processing server to the distant computing device and each of the at least one local computing devices using the specific TCP port included in the respective agreement message.</p><p id="p-0075" num="0074">In one embodiment, the method <b>700</b> may further include: storing, in a location database (e.g., the location database <b>206</b>) of the processing server, a plurality of location profiles (e.g., location profiles <b>208</b>), wherein each location profile includes at least a geographic location and an associated communication address designator; and executing, by a querying module (e.g., the querying module <b>210</b>) of the processing server, a query on the location database to identify a location profile for the distant computing device and each of the at least one local computing devices where the included communication address designator corresponds to the communication address associated with the respective computing device, wherein the greater geographic distance is based on the geographic location included in each of the identified location profiles and a geographic location of the processing server. In some embodiments, the generated request message may be electronically transmitted as a broadcast message using a predefined user datagram protocol (UDP) port, the broadcast message may be transmitted to the at least one local computing device with a first time to live, the broadcast message may be transmitted to the distant computing device with a second time to live, and the second time to live may have a higher value than the first time to live.</p><p id="p-0076" num="0075">In one embodiment, the request message may further include a blockchain network address derived using a public key associated with the processing server, and each of the one or more agreement messages may further include a blockchain network address derived using a public key associated with the respective computing device. In a further embodiment, transmissions made by the processing server using the established communication channel may be signed using the blockchain network address derived using the public key associated with the processing server.</p><heading id="h-0014" level="2">Computer System Architecture</heading><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a computer system <b>800</b> in which embodiments of the present disclosure, or portions thereof, may be implemented as computer-readable code. For example, the processing server <b>102</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be implemented in the computer system <b>800</b> using hardware, software, firmware, non-transitory computer readable media having instructions stored thereon, or a combination thereof and may be implemented in one or more computer systems or other processing systems. Hardware, software, or any combination thereof may embody modules and components used to implement the methods of <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>7</b></figref>.</p><p id="p-0078" num="0077">If programmable logic is used, such logic may execute on a commercially available processing platform configured by executable software code to become a specific purpose computer or a special purpose device (e.g., programmable logic array, application-specific integrated circuit, etc.). A person having ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations, including multi-core multiprocessor systems, minicomputers, mainframe computers, computers linked or clustered with distributed functions, as well as pervasive or miniature computers that may be embedded into virtually any device. For instance, at least one processor device and a memory may be used to implement the above described embodiments.</p><p id="p-0079" num="0078">A processor unit or device as discussed herein may be a single processor, a plurality of processors, or combinations thereof. Processor devices may have one or more processor &#x201c;cores.&#x201d; The terms &#x201c;computer program medium,&#x201d; &#x201c;non-transitory computer readable medium,&#x201d; and &#x201c;computer usable medium&#x201d; as discussed herein are used to generally refer to tangible media such as a removable storage unit <b>818</b>, a removable storage unit <b>822</b>, and a hard disk installed in hard disk drive <b>812</b>.</p><p id="p-0080" num="0079">Various embodiments of the present disclosure are described in terms of this example computer system <b>800</b>. After reading this description, it will become apparent to a person skilled in the relevant art how to implement the present disclosure using other computer systems and/or computer architectures. Although operations may be described as a sequential process, some of the operations may in fact be performed in parallel, concurrently, and/or in a distributed environment, and with program code stored locally or remotely for access by single or multi-processor machines. In addition, in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.</p><p id="p-0081" num="0080">Processor device <b>804</b> may be a special purpose or a general purpose processor device specifically configured to perform the functions discussed herein. The processor device <b>804</b> may be connected to a communications infrastructure <b>806</b>, such as a bus, message queue, network, multi-core message-passing scheme, etc. The network may be any network suitable for performing the functions as disclosed herein and may include a local area network (LAN), a wide area network (WAN), a wireless network (e.g., WiFi), a mobile communication network, a satellite network, the Internet, fiber optic, coaxial cable, infrared, radio frequency (RF), or any combination thereof. Other suitable network types and configurations will be apparent to persons having skill in the relevant art. The computer system <b>800</b> may also include a main memory <b>808</b> (e.g., random access memory, read-only memory, etc.), and may also include a secondary memory <b>810</b>. The secondary memory <b>810</b> may include the hard disk drive <b>812</b> and a removable storage drive <b>814</b>, such as a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash memory, etc.</p><p id="p-0082" num="0081">The removable storage drive <b>814</b> may read from and/or write to the removable storage unit <b>818</b> in a well-known manner. The removable storage unit <b>818</b> may include a removable storage media that may be read by and written to by the removable storage drive <b>814</b>. For example, if the removable storage drive <b>814</b> is a floppy disk drive or universal serial bus port, the removable storage unit <b>818</b> may be a floppy disk or portable flash drive, respectively. In one embodiment, the removable storage unit <b>818</b> may be non-transitory computer readable recording media.</p><p id="p-0083" num="0082">In some embodiments, the secondary memory <b>810</b> may include alternative means for allowing computer programs or other instructions to be loaded into the computer system <b>800</b>, for example, the removable storage unit <b>822</b> and an interface <b>820</b>. Examples of such means may include a program cartridge and cartridge interface (e.g., as found in video game systems), a removable memory chip (e.g., EEPROM, PROM, etc.) and associated socket, and other removable storage units <b>822</b> and interfaces <b>820</b> as will be apparent to persons having skill in the relevant art.</p><p id="p-0084" num="0083">Data stored in the computer system <b>800</b> (e.g., in the main memory <b>808</b> and/or the secondary memory <b>810</b>) may be stored on any type of suitable computer readable media, such as optical storage (e.g., a compact disc, digital versatile disc, Blu-ray disc, etc.) or magnetic tape storage (e.g., a hard disk drive). The data may be configured in any type of suitable database configuration, such as a relational database, a structured query language (SQL) database, a distributed database, an object database, etc. Suitable configurations and storage types will be apparent to persons having skill in the relevant art.</p><p id="p-0085" num="0084">The computer system <b>800</b> may also include a communications interface <b>824</b>. The communications interface <b>824</b> may be configured to allow software and data to be transferred between the computer system <b>800</b> and external devices. Exemplary communications interfaces <b>824</b> may include a modem, a network interface (e.g., an Ethernet card), a communications port, a PCMCIA slot and card, etc. Software and data transferred via the communications interface <b>824</b> may be in the form of signals, which may be electronic, electromagnetic, optical, or other signals as will be apparent to persons having skill in the relevant art. The signals may travel via a communications path <b>826</b>, which may be configured to carry the signals and may be implemented using wire, cable, fiber optics, a phone line, a cellular phone link, a radio frequency link, etc.</p><p id="p-0086" num="0085">The computer system <b>800</b> may further include a display interface <b>802</b>. The display interface <b>802</b> may be configured to allow data to be transferred between the computer system <b>800</b> and external display <b>830</b>. Exemplary display interfaces <b>802</b> may include high-definition multimedia interface (HDMI), digital visual interface (DVI), video graphics array (VGA), etc. The display <b>830</b> may be any suitable type of display for displaying data transmitted via the display interface <b>802</b> of the computer system <b>800</b>, including a cathode ray tube (CRT) display, liquid crystal display (LCD), light-emitting diode (LED) display, capacitive touch display, thin-film transistor (TFT) display, etc.</p><p id="p-0087" num="0086">Computer program medium and computer usable medium may refer to memories, such as the main memory <b>808</b> and secondary memory <b>810</b>, which may be memory semiconductors (e.g., DRAMs, etc.). These computer program products may be means for providing software to the computer system <b>800</b>. Computer programs (e.g., computer control logic) may be stored in the main memory <b>808</b> and/or the secondary memory <b>810</b>. Computer programs may also be received via the communications interface <b>824</b>. Such computer programs, when executed, may enable computer system <b>800</b> to implement the present methods as discussed herein. In particular, the computer programs, when executed, may enable processor device <b>804</b> to implement the methods illustrated by <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>7</b></figref>, as discussed herein. Accordingly, such computer programs may represent controllers of the computer system <b>800</b>. Where the present disclosure is implemented using software, the software may be stored in a computer program product and loaded into the computer system <b>800</b> using the removable storage drive <b>814</b>, interface <b>820</b>, and hard disk drive <b>812</b>, or communications interface <b>824</b>.</p><p id="p-0088" num="0087">The processor device <b>804</b> may comprise one or more modules or engines configured to perform the functions of the computer system <b>800</b>. Each of the modules or engines may be implemented using hardware and, in some instances, may also utilize software, such as corresponding to program code and/or programs stored in the main memory <b>808</b> or secondary memory <b>810</b>. In such instances, program code may be compiled by the processor device <b>804</b> (e.g., by a compiling module or engine) prior to execution by the hardware of the computer system <b>800</b>. For example, the program code may be source code written in a programming language that is translated into a lower level language, such as assembly language or machine code, for execution by the processor device <b>804</b> and/or any additional hardware components of the computer system <b>800</b>. The process of compiling may include the use of lexical analysis, preprocessing, parsing, semantic analysis, syntax-directed translation, code generation, code optimization, and any other techniques that may be suitable for translation of program code into a lower level language suitable for controlling the computer system <b>800</b> to perform the functions disclosed herein. It will be apparent to persons having skill in the relevant art that such processes result in the computer system <b>800</b> being a specially configured computer system <b>800</b> uniquely programmed to perform the functions discussed above.</p><p id="p-0089" num="0088">Techniques consistent with the present disclosure provide, among other features, systems and methods for automatic configuration of a communication network and configuration of a partition-resistant communication network. While various exemplary embodiments of the disclosed system and method have been described above it should be understood that they have been presented for purposes of example only, not limitations. It is not exhaustive and does not limit the disclosure to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practicing of the disclosure, without departing from the breadth or scope.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for configuration of a partition-resistant communication network, comprising:<claim-text>electronically transmitting a request message to a plurality of computing devices;</claim-text><claim-text>receiving one or more agreement messages, wherein each agreement message is received from one of the plurality of computing devices;</claim-text><claim-text>identifying one distant computing device and at least one local computing device of the plurality of computing devices, wherein the distant computing device has a greater message transmission distance to the processing server than the at least one local computing device; and</claim-text><claim-text>establishing a communication connection to the distant computing device.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>storing a plurality of location profiles, wherein each location profile includes at least a geographic location and an associated communication address designator; and</claim-text><claim-text>executing query on the location database to identify a location profile for the distant computing device and the at least one local computing device where the included communication address designator corresponds to a communication address associated with the respective computing device, wherein</claim-text><claim-text>the greater message transmission distance is based on the geographic location included in each of the identified location profiles and a geographic location of the processing server.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request message is electronically transmitted as a broadcast message using a predefined user datagram protocol (UDP) port,<claim-text>the broadcast message is transmitted to the at least one local computing device with a first time to live,</claim-text><claim-text>the broadcast message is transmitted to the distant computing device with a second time to live, and</claim-text><claim-text>the second time to live has a higher value than the first time to live.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request message further includes a blockchain network address derived using a public key associated with the processing server.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each of the one or more agreement messages include a communication address associated with the respective computing device, a specified transmission control protocol (TCP) port; and<claim-text>wherein the communication connection to the distant computing device is established via the TCP port specified in the respective agreement message.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein each of the one or more agreement messages further includes a blockchain network address derived using a public key associated with the respective computing device.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein transmissions made by the processing server using the established communication channel are signed using the blockchain network address derived using the public key associated with the processing server.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the greater message transmission distance is at least a predetermined distance from the processing server.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, including:<claim-text>repeating the electronically transmitting the request message to the plurality of computing devices a plurality of times, each of the plurality of request messages having a request message time to live, each of the plurality of request message times to live having an increasingly longer time to live;</claim-text><claim-text>wherein the one or more agreement messages include an agreement message received in response to each of the plurality of request messages; and</claim-text><claim-text>wherein identifying the one distant computing device is based on the agreement message received in response to the request message with the longest time to live.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A system for configuration of a partition-resistance communication network, comprising:<claim-text>a transmitting device of a processing server configured to electronically transmit a request message to a plurality of computing devices;</claim-text><claim-text>a receiving device of the processing server configured to receive one or more agreement messages, wherein each agreement message is received from one of the plurality of computing devices;</claim-text><claim-text>the processing device of the processing server is further configured to:</claim-text><claim-text>identify one distant computing device and at least one local computing device of the plurality of computing devices, wherein the distant computing device has a greater message transmission distance to the processing server than the at least one local computing device; and</claim-text><claim-text>establish a communication connection to the distant computing device.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:<claim-text>a location database of the processing server configured to store a plurality of location profiles, wherein each location profile includes at least a geographic location and an associated communication address designator; and</claim-text><claim-text>the processing device of the processing server configured to execute a query on the location database to identify a location profile for the distant computing device and the at least one local computing device where the included communication address designator corresponds to a communication address associated with the respective computing device, wherein</claim-text><claim-text>the greater geographic distance is based on the geographic location included in each of the identified location profiles and a geographic location of the processing server.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the generated request message is electronically transmitted as a broadcast message using a predefined user datagram protocol (UDP) port,<claim-text>the broadcast message is transmitted to the at least one local computing device with a first time to live,</claim-text><claim-text>the broadcast message is transmitted to the distant computing device with a second time to live, and</claim-text><claim-text>the second time to live has a higher value than the first time to live.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the request message further includes a blockchain network address derived using a public key associated with the processing server.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein each of the one or more agreement messages include a communication address associated with the respective computing device, and a specified transmission control protocol (TCP) port; and<claim-text>Wherein the communication connection to the distant computing device is established via the TCP port specified in the respective agreement message.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein each of the one or more agreement messages further includes a blockchain network address derived using a public key associated with the respective computing device.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein transmissions made by the processing server using the established communication channel are signed using the blockchain network address derived using the public key associated with the processing server.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the greater message transmission distance is at least a predetermined distance from the processing server.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, including:<claim-text>repeating the electronically transmitting, by the transmitting device of the processing server, the request message to the plurality of computing devices a plurality of times, each of the plurality of request messages having a request message time to live, each of the plurality of request message times to live having an increasingly longer time to live;</claim-text><claim-text>wherein the one or more agreement messages include an agreement message received in response to each of the plurality of request messages; and</claim-text><claim-text>wherein identifying the one distant computing device is based on the agreement message received in response to the request message with the longest time to live.</claim-text></claim-text></claim></claims></us-patent-application>