<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005058A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005058</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17694875</doc-number><date>20220315</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2021-109354</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>04</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>04</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">COMPUTER-READABLE RECORDING MEDIUM STORING CONTRACT PROGRAM, CONTRACT METHOD, AND INFORMATION PROCESSING APPARATUS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>FUJITSU LIMITED</orgname><address><city>Kawasaki-shi</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Shimizu</last-name><first-name>Toshihiro</first-name><address><city>Kawasaki</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Nakamura</last-name><first-name>Akihito</first-name><address><city>Shinagawa</city><country>JP</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Kuwabara</last-name><first-name>Akihiro</first-name><address><city>Meguro</city><country>JP</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Kosaki</last-name><first-name>Motohiro</first-name><address><city>Kawasaki</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>FUJITSU LIMITED</orgname><role>03</role><address><city>Kawasaki-shi</city><country>JP</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A non-transitory computer-readable recording medium stores a contract program causing a computer to execute a process including: setting, for each of a sell order and a buy order having a condition that a contract count is designated, a first polynomial having a contract count designated under the condition of one order of the sell order and the buy order as a positive exponent, and a second polynomial having a contract count designated under the condition of the other order of the sell order and the buy order as a negative exponent; representing an order status in which the sell order and the buy order are combined, with one polynomial on a finite field by a product of the first polynomial and the second polynomial; and specifying a sell order and a buy order for making a contract based on the one polynomial on the finite field representing the order status.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="78.57mm" wi="158.75mm" file="US20230005058A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="156.21mm" wi="158.07mm" file="US20230005058A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="61.55mm" wi="158.07mm" file="US20230005058A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="172.13mm" wi="75.18mm" orientation="landscape" file="US20230005058A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="163.24mm" wi="158.07mm" file="US20230005058A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="243.67mm" wi="145.46mm" orientation="landscape" file="US20230005058A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="146.13mm" wi="156.97mm" file="US20230005058A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="154.52mm" wi="157.06mm" file="US20230005058A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="80.94mm" wi="148.17mm" file="US20230005058A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="146.73mm" wi="159.09mm" file="US20230005058A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="81.28mm" wi="107.70mm" file="US20230005058A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="86.02mm" wi="107.70mm" file="US20230005058A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="109.73mm" wi="107.78mm" file="US20230005058A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="157.06mm" wi="143.26mm" file="US20230005058A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="195.66mm" wi="97.96mm" file="US20230005058A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="223.27mm" wi="154.35mm" file="US20230005058A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="114.30mm" wi="149.78mm" file="US20230005058A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="193.89mm" wi="154.35mm" file="US20230005058A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="169.84mm" wi="154.35mm" file="US20230005058A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="237.07mm" wi="96.52mm" orientation="landscape" file="US20230005058A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="193.38mm" wi="152.48mm" orientation="landscape" file="US20230005058A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application is based upon and claims the benefit of priority of the prior Japanese Patent Application No. 2021-109354, filed on Jun. 30, 2021, the entire contents of which are incorporated herein by reference.</p><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">The embodiments discussed herein are related to a non-transitory computer-readable recording medium storing a contract program, a contract method, and an information processing apparatus.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">In a securities market, establishment of trading such as stock trading is called a &#x201c;contract&#x201d;. For example, a state in which conditions of a user who makes a sell order and a user who makes a buy order are matched and trading is established is referred to as a contract. In a case where a user makes an order (a sell order or a buy order), the user may make the order under a condition that a contract of a total amount is made or a contract of a certain order count is made.</p><p id="p-0005" num="0004">Japanese Laid-open Patent Publication No. 2004-213546, and Japanese Laid-open Patent Publication No. 2001-306821 are disclosed as related art.</p><p id="p-0006" num="0005">Meanwhile, in the related art described above, since order statuses of the sell order and the buy order of contract targets are separately handled, there is a problem that a large calculation cost is desirable for matching the contracts.</p><p id="p-0007" num="0006">According to one aspect, an object is to provide a non-transitory computer-readable recording medium storing a contract program, a contract method, and an information processing apparatus capable of reducing a calculation cost when obtaining a contract of trading.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0008" num="0007">According to an aspect of the embodiments, a non-transitory computer-readable recording medium stores a contract program causing a computer to execute a process including: setting, for each of a sell order and a buy order having a condition that a contract count is designated, a first polynomial having a contract count designated under the condition of one order of the sell order and the buy order as a positive exponent, and a second polynomial having a contract count designated under the condition of the other order of the sell order and the buy order as a negative exponent; representing an order status in which the sell order and the buy order are combined, with one polynomial on a finite field by a product of the first polynomial and the second polynomial; and specifying a sell order and a buy order for making a contract based on the one polynomial on the finite field representing the order status.</p><p id="p-0009" num="0008">The object and advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the claims.</p><p id="p-0010" num="0009">It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the invention.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an explanatory diagram describing a process in a case where a sell order is accepted in dynamic programming;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is an explanatory diagram describing a process in a case where a buy order is accepted in dynamic programming;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is an explanatory diagram describing a process of calculating a contract count in dynamic programming;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an explanatory diagram describing a process in a case where a sell order is accepted in dynamic programming;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an explanatory diagram describing a process of specifying an order as a contract target in dynamic programming;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an explanatory diagram describing a case where an order status is represented by a polynomial;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is an explanatory diagram describing a case where an order status is represented by a polynomial;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is an explanatory diagram describing division in a case where an order status is represented by a polynomial;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an example of a functional configuration of an information processing apparatus according to a first embodiment;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is an explanatory diagram illustrating an example of a data structure of a sell order table;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is an explanatory diagram illustrating an example of a data structure of a buy order table;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is an explanatory diagram illustrating an example of a data structure of contract result information;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a flowchart illustrating an example of an order reception and cancellation process;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a flowchart illustrating an example of a contract process;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart illustrating an example of an operation of an information processing apparatus according to a second embodiment;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is an explanatory diagram describing an execution example of a maximum contract;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flowchart illustrating an operation example of the maximum contract;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flowchart illustrating an example of a merging process;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is an explanatory diagram describing compression of indices; and</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a block diagram illustrating an example of a hardware configuration of a computer that implements a function in the same manner as a function of the information processing apparatus according to the embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0031" num="0030">A minimum limit contract count, which is a condition set for an order, is referred to as a &#x201c;minimum contract count&#x201d;. For example, in a case where there is a sell order having an order count &#x201c;N&#x201d; with a condition of a minimum contract count &#x201c;M&#x201d;, and there is a buy order having an order count equal to or greater than the order count &#x201c;M&#x201d;, trading is established. There is a related art for obtaining a contract by matching such a sell order and a buy order.</p><p id="p-0032" num="0031">Hereinafter, a non-transitory computer-readable recording medium storing a contract program, a contract method, and an information processing apparatus according to embodiments will be described below with reference to the drawings. In the embodiments, components having the same functions will be denoted by the same reference signs, and redundant description thereof will be omitted. The non-transitory computer-readable recording medium storing the contract program, the contract method, and the information processing apparatus to be described in the embodiments below are merely examples, and are not intended to limit the embodiment. Each embodiment below may be appropriately combined to the degree with which no inconsistency is caused.</p><p id="p-0033" num="0032">First, a process of obtaining a contract by matching a sell order and a buy order with which the minimum contract count is set by dynamic programming will be described. In a process of specifying an order as a contract target by using dynamic programming, a Bool (T, F) array a is prepared for managing each of the sell order and the buy order, and an order as a contract target that maximizes a contract count is specified.</p><p id="p-0034" num="0033">The Bool (T, F) array a is referred to as an &#x201c;array a&#x201d;. An index i equal to or greater than 0 is set for the array a, and &#x201c;T&#x201d; or &#x201c;F&#x201d; is set for an element corresponding to the index i of the array a. A case where the element corresponding to the index i in the array a is &#x201c;T&#x201d; means that there is an order of an order count i. A case where the element corresponding to the index i in the array a is &#x201c;F&#x201d; means that there is no order of the order count i. &#x201c;T&#x201d; is an example of a registration symbol.</p><p id="p-0035" num="0034">The case where the element of the index i in the array a is &#x201c;T&#x201d; is indicated by a [i]=T. The case where the element of the index i in the array a is &#x201c;F&#x201d; is indicated by a [i]=F.</p><p id="p-0036" num="0035">An array a storing information on a sell order is referred to as a &#x201c;first array a&#x201d;, and an array a storing information on a buy order is referred to as a &#x201c;second array a&#x201d;.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an explanatory diagram describing a process in a case where a sell order is accepted in dynamic programming, and illustrates a state of the first array a in a case where the sell order is accepted. An information processing apparatus sets a [i+x]=T in a case where a [i]=T and a sell order of an order count x is accepted.</p><p id="p-0038" num="0037">An initial state of the first array a is illustrated in step S<b>10</b>. In the initial state of the first array a, a [0]=T, and all other elements are &#x201c;F&#x201d;.</p><p id="p-0039" num="0038">In a case where a sell order having an order count 3 is accepted, a state of the first array a is as illustrated in step S<b>11</b>. Since the first array a is a [0]=T, the information processing apparatus sets a [0+3]=T.</p><p id="p-0040" num="0039">In a case where an order having an order count 5 is accepted, the state of the first array a is as illustrated in step S<b>12</b>. Since the first array a is a [0]=T, the information processing apparatus sets a [0+5]=T. Since the first array a is a [3]=T, the information processing apparatus sets a [3+5]=T.</p><p id="p-0041" num="0040">An index in which an element of the first array a is T indicates a matchable contract quantity. For example, in the state of the first array a in step S<b>12</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the element of the index i=8 is &#x201c;T&#x201d;, and &#x201c;8&#x201d; is a quantity for which contracts of a total amount of the order count &#x201c;3&#x201d; and the order count &#x201c;5&#x201d; are made.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is an explanatory diagram describing a process in a case where a buy order is accepted in dynamic programming, and illustrates a state of the second array a in a case where the buy order is accepted. In the same manner as the process for the first array a in a case where the sell order is accepted described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the information processing apparatus sets a [i+x]=T in a case where a [i]=T and a buy order of the order count x is accepted. In an initial state of the second array a, a [0]=T, and all other elements are &#x201c;F&#x201d;.</p><p id="p-0043" num="0042">For example, in a case where a buy order having an order count 2, a buy order having an order count 3, and a buy order having an order count 6 are accepted in this order, the state of the second array a is as illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. For example, a [0]=T, a [2]=T, a [3]=T, a [5]=T, a [6]=T, a [8]=T, a [9]=T, and a [11]=T, and the other elements are &#x201c;F&#x201d;.</p><p id="p-0044" num="0043">The information processing apparatus compares the first array a of the sell orders described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the second array a described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and specifies a maximum matchable contract quantity.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is an explanatory diagram describing a process of calculating a contract count in dynamic programming. The information processing apparatus compares the first array a with the second array a, and specifies a largest index among indices in which both of an element of the first array a and an element of the second array a are &#x201c;T&#x201d;, as a maximum contract count. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, since the largest index among the indices in which both of the element of the first array a and the element of the second array a are &#x201c;T&#x201d; is &#x201c;8&#x201d;, the information processing apparatus calculates the maximum matchable contract quantity as &#x201c;8&#x201d;.</p><p id="p-0046" num="0045">Next, a process in which the information processing apparatus specifies an order to be a contract target will be described. In a case of accepting an order and setting &#x201c;T&#x201d; in an element of the array a for the first time, the information processing apparatus registers auxiliary information indicating an order reception sequence (order sequence) and a quantity (order count) for each index, and thus it is possible to specify an order as a contract target.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an explanatory diagram describing a process in a case where a sell order is accepted in dynamic programming. Although an initial state of the first array a is not illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the initial state of the first array a corresponds to the state of the first array a in step S<b>10</b> described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The information processing apparatus does not give auxiliary information to an element of &#x201c;T&#x201d; in the initial state. An order reception sequence of the sell order corresponds to a &#x201c;first order sequence&#x201d;, and an order count of the sell order corresponds to a &#x201c;first order count&#x201d;.</p><p id="p-0048" num="0047">First (order reception sequence=1), in a case where a sell order having an order count 2 is accepted, a state of the first array a is as illustrated in step S<b>21</b>. Since the first array a in the initial state is a [0]=T, the information processing apparatus sets a [0+2]=T. Auxiliary information sub<b>1</b>-<b>2</b> is registered at the index i=2. A sequence number &#x201c;1&#x201d; and a quantity &#x201c;2&#x201d; are set in the auxiliary information sub<b>1</b>-<b>2</b>.</p><p id="p-0049" num="0048">Next (order reception sequence=2), in a case where a sell order having an order count 3 is accepted, the state of the first array a is as illustrated in step S<b>22</b>. Since the first array a is a [0]=T, the information processing apparatus sets a [0+3]=T, and registers auxiliary information sub<b>1</b>-<b>3</b> to the index i=3. A sequence number &#x201c;2&#x201d; and a quantity &#x201c;3&#x201d; are set in the auxiliary information sub<b>1</b>-<b>3</b>.</p><p id="p-0050" num="0049">Since the first array a is a [2]=T, the information processing apparatus sets a [2+3]=T, and registers auxiliary information sub<b>1</b>-<b>5</b> to the index i=5. A sequence number &#x201c;2&#x201d; and a quantity &#x201c;3&#x201d; are set in the auxiliary information sub<b>1</b>-<b>5</b>.</p><p id="p-0051" num="0050">Although not illustrated, also in a case where a buy order is accepted, the information processing apparatus sets &#x201c;T&#x201d; in an element of the second array a, and registers auxiliary information in an index in the same manner as in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. An order reception sequence of the buy order corresponds to a &#x201c;second order sequence&#x201d;, and an order count of the buy order corresponds to a &#x201c;second order count&#x201d;.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an explanatory diagram describing a process of specifying an order as a contract target in dynamic programming. As illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the information processing apparatus sequentially accepts orders Or<b>1</b>-<b>1</b> and Or<b>1</b>-<b>2</b> as sell orders. The order Or<b>1</b>-<b>1</b> is an order having an order count &#x201c;3&#x201d;. The order Or<b>1</b>-<b>2</b> is an order having an order count &#x201c;5&#x201d;. The information processing apparatus sequentially accepts orders Or<b>2</b>-<b>1</b>, Or<b>2</b>-<b>2</b>, and Or<b>2</b>-<b>3</b> as buy orders. The order Or<b>2</b>-<b>1</b> is an order having an order count &#x201c;2&#x201d;. The order Or<b>2</b>-<b>2</b> is an order having an order count &#x201c;3&#x201d;. The order Or<b>2</b>-<b>3</b> is an order having an order count &#x201c;6&#x201d;.</p><p id="p-0053" num="0052">After accepting the orders Or<b>1</b>-<b>1</b> and Or<b>1</b>-<b>2</b> in order, the information processing apparatus executes the process on the first array a in a case where the sell order is accepted so as to set the first array a to the state as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. An element of the index i=0, 3, 5, and 8 of the first array a is &#x201c;T&#x201d;, and the other elements are &#x201c;F&#x201d;. &#x201c;T&#x201d; of the index i=0 is set in an initial state.</p><p id="p-0054" num="0053">The information processing apparatus sets auxiliary information sub<b>1</b>-<b>3</b> to the index i=3 in the first array a. A sequence number &#x201c;1&#x201d; and a quantity &#x201c;3&#x201d; are set in the auxiliary information sub<b>1</b>-<b>3</b>. The information processing apparatus sets auxiliary information sub<b>1</b>-<b>5</b> to the index i=5 in the first array a. A sequence number &#x201c;2&#x201d; and a quantity &#x201c;5&#x201d; are set in the auxiliary information sub<b>1</b>-<b>5</b>. The information processing apparatus sets auxiliary information sub<b>1</b>-<b>8</b> to the index i=8 in the first array a. A sequence number &#x201c;2&#x201d; and a quantity &#x201c;5&#x201d; are set in the auxiliary information sub<b>1</b>-<b>8</b>.</p><p id="p-0055" num="0054">After accepting the orders Or<b>2</b>-<b>1</b>, Or<b>2</b>-<b>2</b>, and Or<b>2</b>-<b>3</b> in order, the information processing apparatus executes a process on the second array a in a case where the buy order is accepted so as to set the second array a to the state as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. An element of the index i=0, 2, 3, 5, 6, 8, 9, and 11 in the second array a is &#x201c;T&#x201d;, and the other elements are &#x201c;F&#x201d;. &#x201c;T&#x201d; of the index i=0 is set in an initial state.</p><p id="p-0056" num="0055">The information processing apparatus sets auxiliary information sub<b>2</b>-<b>2</b> to the index i=2 in the second array a. A sequence number &#x201c;1&#x201d; and a quantity &#x201c;2&#x201d; are set in the auxiliary information sub<b>2</b>-<b>2</b>. The information processing apparatus sets auxiliary information sub<b>2</b>-<b>3</b> to the index i=3 in the second array a. A sequence number &#x201c;2&#x201d; and a quantity &#x201c;3&#x201d; are set in the auxiliary information sub<b>2</b>-<b>3</b>. The information processing apparatus sets auxiliary information sub<b>2</b>-<b>5</b> to the index i=5 in the second array a. A sequence number &#x201c;2&#x201d; and a quantity &#x201c;3&#x201d; are set in the auxiliary information sub<b>2</b>-<b>5</b>.</p><p id="p-0057" num="0056">The information processing apparatus sets auxiliary information sub<b>2</b>-<b>6</b> to the index i=6 in the second array a. A sequence number &#x201c;3&#x201d; and a quantity &#x201c;6&#x201d; are set in the auxiliary information sub<b>2</b>-<b>6</b>. The information processing apparatus sets auxiliary information sub<b>2</b>-<b>8</b> to the index i=8 in the second array a. A sequence number &#x201c;3&#x201d; and a quantity &#x201c;6&#x201d; are set in the auxiliary information sub<b>2</b>-<b>8</b>. The information processing apparatus sets auxiliary information sub<b>2</b>-<b>9</b> to the index i=9 in the second array a. A sequence number &#x201c;3&#x201d; and a quantity &#x201c;6&#x201d; are set in the auxiliary information sub<b>2</b>-<b>9</b>. The information processing apparatus sets auxiliary information sub<b>2</b>-<b>11</b> to the index i=11 in the second array a. A sequence number &#x201c;3&#x201d; and a quantity &#x201c;6&#x201d; are set in the auxiliary information sub<b>2</b>-<b>11</b>.</p><p id="p-0058" num="0057">The information processing apparatus compares the first array a with the second array a, and calculates a largest index among indices in which both of an element of the first array a and an element of the second array a are &#x201c;T&#x201d;, as a contract count. According to the example illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the largest index among the indices in which both the element of the first array a and the element of the second array a are &#x201c;T&#x201d; is the index i=8. For this reason, the information processing apparatus sets the contract count to &#x201c;8&#x201d;.</p><p id="p-0059" num="0058">After calculating the contract count, the information processing apparatus specifies an order as a contract target, based on the auxiliary information set in the array a. In a case of a contract with a contract count i0, the information processing apparatus sets an initial value of the index i=i0, and repeatedly executes the following process until i=0.</p><p id="p-0060" num="0059">A process repeated by the information processing apparatus is the following process. The information processing apparatus treats an order with a [i]=T as a contract target. Next, the information processing apparatus specifies a quantity a included in the auxiliary information set in a [i], and updates the index i by i=i&#x2212;a.</p><p id="p-0061" num="0060">Based on the &#x201c;first array a&#x201d; in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a process in which the information processing apparatus specifies a sell order for a contract will be described.</p><p id="p-0062" num="0061">The information processing apparatus treats, as a contract target, an order corresponding to the auxiliary information sub<b>1</b>-<b>8</b> set to the index i=8 corresponding to the contract count &#x201c;8&#x201d;. The auxiliary information sub<b>1</b>-<b>8</b> corresponds to the order Or<b>1</b>-<b>2</b> with the sequence number &#x201c;2&#x201d; and the quantity &#x201c;5&#x201d;. The information processing apparatus acquires the quantity a=5 included in the auxiliary information sub<b>1</b>-<b>8</b>, and updates the index i=8&#x2212;5=3.</p><p id="p-0063" num="0062">The information processing apparatus treats an order corresponding to the auxiliary information sub<b>1</b>-<b>3</b> set to index i=3 as a contract target. The auxiliary information <b>1</b>-<b>3</b> corresponds to the order Or<b>1</b>-<b>1</b> with the sequence number &#x201c;1&#x201d; and the quantity &#x201c;3&#x201d;. The information processing apparatus acquires the quantity a=3 included in the auxiliary information sub<b>1</b>-<b>3</b>, and updates the index i=3&#x2212;3=0. Since the index i=0, the information processing apparatus ends the process.</p><p id="p-0064" num="0063">Based on the &#x201c;second array a&#x201d; in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a process in which the information processing apparatus specifies a buy order for a contract will be described.</p><p id="p-0065" num="0064">The information processing apparatus treats, as a contract target, an order corresponding to the auxiliary information sub<b>2</b>-<b>8</b> set to the index i=8 corresponding to the contract count &#x201c;8&#x201d;. The auxiliary information <b>2</b>-<b>8</b> corresponds to the order Or<b>2</b>-<b>3</b> with the sequence number &#x201c;3&#x201d; and the quantity &#x201c;6&#x201d;. The information processing apparatus acquires the quantity a=6 included in the auxiliary information sub<b>2</b>-<b>8</b>, and updates the index i=8&#x2212;6=2.</p><p id="p-0066" num="0065">The information processing apparatus treats an order corresponding to the auxiliary information sub<b>2</b>-<b>2</b> set to index i=2 as a contract target. The auxiliary information sub<b>2</b>-<b>2</b> corresponds to the order Or<b>2</b>-<b>1</b> with the sequence number &#x201c;1&#x201d; and the quantity &#x201c;2&#x201d;. The information processing apparatus acquires the quantity a=2 included in the auxiliary information sub<b>2</b>-<b>2</b>, and updates the index i=2&#x2212;2=0. Since the index i=0, the information processing apparatus ends the process.</p><p id="p-0067" num="0066">With the above-described process, the sell orders Or<b>1</b>-<b>1</b> and Or<b>1</b>-<b>2</b> and the buy orders Or<b>2</b>-<b>1</b> and Or<b>2</b>-<b>3</b> are specified as the contract targets.</p><p id="p-0068" num="0067">In this manner, in a case where an array of order statuses related to remaining orders after an order as a contract target is specified or the order is canceled in dynamic programming, the array may not be obtained from the previously created array, and the array will be reconstructed each time. For this reason, there is a problem that efficiency in specifying an order as a contract target is poor, such as a memory for an index for specifying the order constituting the maximum contract is consumed.</p><p id="p-0069" num="0068">In the present embodiment, the dynamic programming is regarded as multiplication (multiplication method) of a polynomial, and the dynamic programming is reduced to a polynomial. For example, in the information processing apparatus according to the present embodiment, each of accepted orders is represented by a polynomial having a contract count as an exponent, and an order status obtained by combining the respective orders is represented by multiplication of the polynomial of each order.</p><p id="p-0070" num="0069">In the information processing apparatus according to the present embodiment, after an order as a contract target is specified, or after the order is canceled, subtraction of the orders is associated with division (division method) of the polynomial to obtain an order status related to the remaining order.</p><p id="p-0071" num="0070">According to the present embodiment, by using the polynomial operation in this manner, it is possible to obtain the order status related to the remaining orders after specifying the order of the contract target or after canceling the order, without combining and reconstructing each order from the beginning. Accordingly, in the present embodiment, it is possible to efficiently specify the order as the contract target.</p><p id="p-0072" num="0071">For example, an order with a condition that a contract count is k shares is represented by x<sup>k</sup>. For example, 1=x<sup>0 </sup>corresponds to &#x201c;no contract&#x201d;, and x<sup>3 </sup>corresponds to &#x201c;contract with 3 shares&#x201d;. Whether or not a contract of the order with 3 shares is made is represented by multiplying (1+x<sup>3</sup>). In the same manner, whether or not a contract of an order with 2 shares is made is represented by multiplying (1+x<sup>2</sup>). A combination of the orders with 3 shares and 2 shares is represented by multiplication of (1+x<sup>3</sup>) and (1+x<sup>2</sup>) as follows, and it is understood that a contract may be executed with 0, 2, 3, and 5 shares by a polynomial after the multiplication.</p><p id="p-0073" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(combination of orders with 3 shares and 2 shares)=(1+<i>x</i><sup>3</sup>)(1+<i>x</i><sup>2</sup>)=1+<i>x</i><sup>2</sup><i>+x</i><sup>3</sup><i>+x</i><sup>5 </sup><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0074" num="0072">In the operation of the polynomial, 1 corresponds to T and 0 correspond to F, and addition and multiplication are defined as follows. &#xb7; Addition is performed such that 0+0=0, 1+0=1, 0+1=1, and 1+1=1. &#xb7; Multiplication is performed such that 0*0=0, 1*0=0, 0*1=0, and 1*1=1.</p><p id="p-0075" num="0073"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an explanatory diagram describing a case where an order status is represented by a polynomial. A left side of <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates data stored in a case where an order status of the array a is represented by a polynomial having a contract count as an exponent of x. In the illustrated example, coefficients in terms of exponents of 0 to 8 are stored in a [0] to a [8]. A right side of <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates the polynomial representing an order.</p><p id="p-0076" num="0074">An initial state of the array a of the order statuses is illustrated in step S<b>31</b>. In the initial state of the array a, a [0]=1 corresponding to 1=x<sup>0 </sup>representing &#x201c;no contract&#x201d;, and all other elements are &#x201c;0&#x201d;.</p><p id="p-0077" num="0075">Next, in a case where an order having an order count 3 is accepted (arrives), a state of the array a is as illustrated in step S<b>32</b>. The information processing apparatus multiplies 1 by (1+x<sup>3</sup>) of a polynomial corresponding to the order of the order count 3. Based on 1+x<sup>3 </sup>of the polynomial obtained by the multiplication, the information processing apparatus sets 1 to a [0] and a [3].</p><p id="p-0078" num="0076">Next, in a case where an order having an order count 2 is accepted (arrives), the state of the array a is as illustrated in step S<b>33</b>. The information processing apparatus multiplies (1+x<sup>3</sup>) by (1+x<sup>2</sup>) of a polynomial corresponding to the order of the order count 2. Based on 1+x<sup>2</sup>+x<sup>3</sup>+x<sup>5 </sup>of the polynomial obtained by the multiplication, the information processing apparatus sets 1 to a [0], a [2], a [3], and a [5].</p><p id="p-0079" num="0077">Next, in a case where an order having an order count 3 is accepted (arrives), the state of the array a is as illustrated in step S<b>34</b>. The information processing apparatus multiplies (1+x<sup>2</sup>+x<sup>3</sup>+x<sup>5</sup>) by (1+x<sup>3</sup>) of a polynomial of the order of the order count 3. Based on 1+x<sup>2</sup>+x<sup>3</sup>+x<sup>5</sup>+x<sup>6</sup>+x<sup>8 </sup>of the polynomial obtained by the multiplication, the information processing apparatus sets 1 to a [0], a [2], a [3], a [5], a [6], and a [8].</p><p id="p-0080" num="0078">According to the above definition, there is no inverse operation (subtraction) for addition of T/F (0+0=0, 1+0=1, 0+1=1, and 1+1=1) and there is no inverse operation (division) for multiplication of T/F (0*0=0, 1*0=0, 0*1=0, and 1*1=1). In the present embodiment, the number system in the polynomial operation is changed to make the operation ready for reversibility. For example, a coefficient of each term in the polynomial operation is replaced with an integer on a finite field F<sub>p</sub>, that is a remainder (mod p) divided with a specific prime number p. Therefore, the information processing apparatus of the present embodiment sets the polynomial representing the order status as a polynomial on a finite field, and obtains a state (polynomial) in which the order is canceled by an inverse operation (for example, division).</p><p id="p-0081" num="0079">As an example, in a case where the prime number p is p=7 (mod 7), the prime number p is replaced with any integer of {0, 1, 2, 3, 4, 5, 6}. For example, addition is 3+5=8&#x2261;1. Subtraction is 3&#x2212;5=&#x2212;2&#x2261;5. Multiplication is 3*5=15&#x2261;1. Division is 3/5=3*3=9&#x2261;2 (since multiplication of 3 and 5 results in 1, &#x201c;division by 5&#x201d; is the same as &#x201c;multiplication by 3&#x201d;). In this manner, it is possible to handle as a set having a finite number of elements capable of addition, subtraction, multiplication, and division. In this manner, by setting the finite number, it becomes easy to handle in a computer operation. The prime number p used for an actual operation is a sufficiently large value to support the order count to be combined.</p><p id="p-0082" num="0080"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is an explanatory diagram describing a case where an order status is represented by a polynomial. In the same manner as in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a left side of <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates the array a of order statuses, and a right side of <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a polynomial representing an order.</p><p id="p-0083" num="0081">An initial state of the array a of order statuses is illustrated in step S<b>41</b>. In the initial state of the array a, a [0]=1 corresponding to 1=x<sup>0 </sup>representing &#x201c;no contract&#x201d;, and all other elements are &#x201c;0&#x201d;.</p><p id="p-0084" num="0082">Next, in a case where an order having an order count 3 is accepted (arrives), a state of the array a is as illustrated in step S<b>42</b>. The information processing apparatus multiplies 1 by (1+x<sup>3</sup>) of a polynomial corresponding to the order of the order count 3. The information processing apparatus replaces a coefficient of each term with an integer on a finite field F<sub>p </sub>divided by the prime number p (mod p) in an operation (for example, multiplication) of the polynomial. Based on 1+x<sup>3 </sup>of the polynomial obtained by the multiplication, the information processing apparatus sets 1 to a [0] and a [3] (all other elements are 0).</p><p id="p-0085" num="0083">Next, in a case where an order having an order count 2 is accepted (arrives), the state of the array a is as illustrated in step S<b>43</b>. The information processing apparatus multiplies (1+x<sup>3</sup>) by (1+x<sup>2</sup>) of a polynomial corresponding to the order of the order count 2. Based on 1+x<sup>2</sup>+x<sup>3</sup>+x<sup>5 </sup>of the polynomial obtained by the multiplication, the information processing apparatus sets 1 to a [0], a [2], a [3], and a [5] (all the other elements are 0).</p><p id="p-0086" num="0084">Next, in a case where an order having an order count 3 is accepted (arrives), the state of the array a is as illustrated in step S<b>44</b>. The information processing apparatus multiplies (1+x<sup>2</sup>+x<sup>3</sup>+x<sup>5</sup>) by (1+x<sup>3</sup>) of a polynomial of the order of the order count 3. Based on 1+x<sup>2</sup>+2x<sup>3</sup>+2x<sup>5</sup>+x<sup>6</sup>+x<sup>8 </sup>of the polynomial obtained by this multiplication, the information processing apparatus sets 1 to a [0] and a [2], sets 2 to a [3] and a [5], and sets 1 to a [6] and a [8](all the other elements are 0).</p><p id="p-0087" num="0085"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is an explanatory diagram describing division in a case where an order status is represented by a polynomial. As illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, in a case where the order having the order count 2 is canceled (or deleted after the contract) from the states of the orders in the array a in step S<b>44</b>, the information processing apparatus performs division by (1+x<sup>2</sup>). Therefore, the information processing apparatus updates the polynomial (array a) on a finite field representing the order status so as to indicate an order status after the contract or cancellation of the order having the order count 2.</p><p id="p-0088" num="0086">For example, the information processing apparatus performs division on 1+x<sup>2</sup>+2x<sup>3</sup>+2x<sup>5</sup>+x<sup>6</sup>+x<sup>8 </sup>in the array a in step S<b>44</b> by (1+x<sup>2</sup>). Based on 1+2x<sup>3</sup>+x<sup>6 </sup>of the polynomial obtained by this division, the information processing apparatus sets 1 to a [0] and a [6], and sets 2 to a [3](all the other elements are 0).</p><heading id="h-0007" level="1">First Embodiment</heading><p id="p-0089" num="0087"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an example of a functional configuration of an information processing apparatus according to a first embodiment. As illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an information processing apparatus <b>100</b> includes a communication unit <b>110</b>, an input unit <b>120</b>, a display unit <b>130</b>, a storage unit <b>140</b>, and a control unit <b>150</b>.</p><p id="p-0090" num="0088">The communication unit <b>110</b> is coupled to an external apparatus or the like in a wired or wireless manner, and transmits and receives information to and from the external apparatus or the like. The communication unit <b>110</b> is implemented by, for example, a network interface card (NIC) or the like. The communication unit <b>110</b> may be coupled to a network (not illustrated). For example, the communication unit <b>110</b> receives information on a sell order table <b>141</b> including information on sell orders, information on a buy order table <b>142</b> including information on buy orders, and the like from the external apparatus. For example, the external apparatus corresponds to a server that manages buying and selling of shares, and executes various types of processes related to an order as a contract target.</p><p id="p-0091" num="0089">The input unit <b>120</b> is an input device that inputs various types of information to the information processing apparatus <b>100</b>. The input unit <b>120</b> corresponds to a keyboard, a mouse, a touch panel, or the like.</p><p id="p-0092" num="0090">The display unit <b>130</b> is a display device that displays information output from the control unit <b>150</b>. The display unit <b>130</b> corresponds to a liquid crystal display, an organic electroluminescence (EL) display, a touch panel, or the like.</p><p id="p-0093" num="0091">The storage unit <b>140</b> includes the sell order table <b>141</b>, the buy order table <b>142</b>, first polynomial information <b>143</b>, second polynomial information <b>144</b>, and contract result information <b>145</b>. For example, the storage unit <b>140</b> is implemented by a semiconductor memory element such as a random-access memory (RAM) or a flash memory, or a storage device such as a hard disk or an optical disc.</p><p id="p-0094" num="0092">The sell order table <b>141</b> is a table in which an order sequence and an order count of the sell order are held. <figref idref="DRAWINGS">FIG. <b>10</b></figref> is an explanatory diagram illustrating an example of a data structure of the sell order table <b>141</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, in the sell order table <b>141</b>, identification information, an order sequence, and an order count are associated with each other. The identification information is information for uniquely identifying an order. The order sequence is a sequence number of the accepted sell order. The order count is an order count of the sell order.</p><p id="p-0095" num="0093">The buy order table <b>142</b> is a table in which an order sequence and an order count of the buy order are held. <figref idref="DRAWINGS">FIG. <b>11</b></figref> is an explanatory diagram illustrating an example of a data structure of the buy order table <b>142</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, in the buy order table <b>142</b>, identification information, an order sequence, and an order count are associated with each other. The identification information is information for uniquely identifying an order. The order sequence is a sequence number of the accepted buy order. The order count is an order count of the buy order.</p><p id="p-0096" num="0094">The first polynomial information <b>143</b> is array information holding information of a polynomial corresponding to an order status in which orders related to sell orders are combined. For example, the array information is array information of a polynomial (array a) on a finite field representing a status of the sell order, which is obtained by multiplying each sell order by the corresponding polynomial.</p><p id="p-0097" num="0095">The second polynomial information <b>144</b> is array information holding information of a polynomial corresponding to an order status in which orders related to buy orders are combined. For example, the array information is array information of a polynomial (array a) on a finite field representing a status of the buy order, which is obtained by multiplying each buy order by the corresponding polynomial.</p><p id="p-0098" num="0096">The contract result information <b>145</b> holds a maximum contract count and information on an order as a contract target. <figref idref="DRAWINGS">FIG. <b>12</b></figref> is an explanatory diagram illustrating an example of a data structure of the contract result information <b>145</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the contract result information <b>145</b> includes contract sell identification information, contract buy identification information, and a maximum contract count. The contract sell identification information is information for identifying a sell order to be a contract target. The contract buy identification information is information for identifying a buy order to be a contract target. The maximum contract count indicates a contract count having the maximum count.</p><p id="p-0099" num="0097">The control unit <b>150</b> includes an order reception unit <b>151</b>, a polynomial generation unit <b>152</b>, a calculation unit <b>153</b>, a contract processing unit <b>154</b>, and an output control unit <b>155</b>. For example, the control unit <b>150</b> is implemented by a central processing unit (CPU) or a microprocessor unit (MPU). The control unit <b>150</b> may also be implemented by an integrated circuit such as an application-specific integrated circuit (ASIC) or a field-programmable gate array (FPGA), for example.</p><p id="p-0100" num="0098">The order reception unit <b>151</b> is a processing unit that accepts an order having a designated condition for a contract count. After acquiring data of the sell order table <b>141</b> from an external apparatus or the like, the order reception unit <b>151</b> stores the data of the sell order table <b>141</b> in the storage unit <b>140</b>. The order reception unit <b>151</b> may acquire sell orders individually and sequentially, and register information on the acquired sell orders in the sell order table <b>141</b>.</p><p id="p-0101" num="0099">In a case of acquiring data of the buy order table <b>142</b> from the external apparatus or the like, the order reception unit <b>151</b> stores the data of the buy order table <b>142</b> in the storage unit <b>140</b>. The order reception unit <b>151</b> may acquire buy orders individually and sequentially, and register information on the acquired buy orders in the buy order table <b>142</b>.</p><p id="p-0102" num="0100">The order reception unit <b>151</b> may accept information (identification information) on an order to be canceled, and may delete information on a sell order or a buy order registered in the sell order table <b>141</b> or the buy order table <b>142</b>. At this time, the order reception unit <b>151</b> acquires information on the order to be deleted from the sell order table <b>141</b> or the buy order table <b>142</b>, and notifies the calculation unit <b>153</b> of the information.</p><p id="p-0103" num="0101">The polynomial generation unit <b>152</b> is a processing unit that generates a polynomial on a finite field (hereafter, also referred to as an existing polynomial) representing an order status obtained by combining the accepted orders. For each of the accepted orders, the polynomial generation unit <b>152</b> sets a polynomial having a contract count (order count) under the condition designated in the order, as an exponent. Next, the polynomial generation unit <b>152</b> represents an order status obtained by combining the accepted orders with the polynomial (existing polynomial) on a finite field by a product of the polynomials.</p><p id="p-0104" num="0102">For example, based on the sell order table <b>141</b> related to the sell orders, the polynomial generation unit <b>152</b> sets, for each of the sell orders, a polynomial having the order count designated by the sell order as an exponent. Next, the polynomial generation unit <b>152</b> multiplies the order status to be combined with the accepted sell order by a polynomial of each sell order. By setting a coefficient of the polynomial obtained by the multiplication as a remainder (mod p) of a specific prime number (p), the polynomial generation unit <b>152</b> generates a polynomial (first existing polynomial) on a finite field corresponding to the order status of the sell order. Next, the polynomial generation unit <b>152</b> stores information on the generated polynomial in the storage unit <b>140</b> as the first polynomial information <b>143</b>.</p><p id="p-0105" num="0103">Based on the buy order table <b>142</b> related to the buy orders, the polynomial generation unit <b>152</b> sets a polynomial having the order count designated by the buy order as an exponent, for each buy order. Next, the polynomial generation unit <b>152</b> multiplies the order status to be combined with the accepted buy order by a polynomial of each buy order. By setting a coefficient of the polynomial obtained by the multiplication as a remainder (mod p) of the specific prime number (p), the polynomial generation unit <b>152</b> generates a polynomial (second existing polynomial) on a finite field corresponding to the order status of the buy order. Next, the polynomial generation unit <b>152</b> stores information on the generated polynomial as the second polynomial information <b>144</b> in the storage unit <b>140</b>.</p><p id="p-0106" num="0104">The calculation unit <b>153</b> is a processing unit that performs various operation processes on a polynomial on a finite field representing an order status. For example, the calculation unit <b>153</b> divides the polynomial (existing polynomial) on a finite field representing the order status by a polynomial corresponding to an order for a contract or an order to be canceled, and updates to the existing polynomial representing an order status after the contract or the cancellation. For example, the calculation unit <b>153</b> performs division on the existing polynomial of the first polynomial information <b>143</b> or the second polynomial information <b>144</b> by a polynomial corresponding to the order specified as a contract target by the contract processing unit <b>154</b> or the order to be canceled (deleted) notified by the order reception unit <b>151</b>. Next, the calculation unit <b>153</b> stores information on the existing polynomial after the division in the storage unit <b>140</b>, as the first polynomial information <b>143</b> or the second polynomial information <b>144</b>.</p><p id="p-0107" num="0105">For example, in a case where the order for a contract or the order to be canceled is a sell order, the calculation unit <b>153</b> generates a polynomial corresponding to the sell order for a contract or the sell order to be canceled by a method in the same manner as the polynomial generation unit <b>152</b>. Next, the calculation unit <b>153</b> performs division on the first existing polynomial in the first polynomial information <b>143</b> by the generated polynomial so as to obtain a first existing polynomial corresponding to a status of the sell order after the contract or after the cancellation. Next, the calculation unit <b>153</b> stores information on the obtained first existing polynomial as the first polynomial information <b>143</b> in the storage unit <b>140</b>.</p><p id="p-0108" num="0106">In a case where the order for a contract or the order to be cancelled is a buy order, the calculation unit <b>153</b> generates a polynomial corresponding to the buy order for a contract or the buy order to be cancelled by a method in the same manner as the polynomial generation unit <b>152</b>. Next, the calculation unit <b>153</b> performs division on the second existing polynomial in the second polynomial information <b>144</b> by the generated polynomial so as to obtain a second existing polynomial corresponding to a status of the buy order after the contract or the cancellation. Next, the calculation unit <b>153</b> stores information on the obtained second existing polynomial as the second polynomial information <b>144</b> in the storage unit <b>140</b>.</p><p id="p-0109" num="0107">The calculation unit <b>153</b> may determine whether or not to adopt the existing polynomial after the division as the existing polynomial representing an order status after the contract or the cancellation based on a coefficient of a term of a specific exponent. For example, as a result obtained by dividing the existing polynomial by the polynomial corresponding to the order as a contract target or a cancellation target, the calculation unit <b>153</b> adopts the polynomial when the coefficient of the specific term is not 0, and does not adopt the polynomial when the coefficient is 0.</p><p id="p-0110" num="0108">As an example, a contract with 6 shares in a case where the existing polynomial is 1+x<sup>2</sup>+2x<sup>3</sup>+2x<sup>5</sup>+x<sup>6</sup>+x<sup>8 </sup>(available since a coefficient of x<sup>6 </sup>is not 0) is considered. When it is desired to determine whether or not an order with 2 shares is included in this contract, the original equation (existing polynomial described above) is divided by 1+x<sup>2</sup>. Next, since a coefficient of a term of x<sup>4 </sup>(for 4 shares from 6&#x2212;2=4) in 1+2x<sup>3</sup>+x<sup>6 </sup>as a result of the division is 0, it is understood that the order is not included.</p><p id="p-0111" num="0109">In this manner, the calculation unit <b>153</b> may determine adoption or non-adoption, based on a coefficient of a specific term in the existing polynomial after the division. In a case of non-adoption, the calculation unit <b>153</b> may cause the output control unit <b>155</b> to notify an error, or may return the process to the contract processing unit <b>154</b> so that another order becomes a contract target.</p><p id="p-0112" num="0110">For example, in a case where the prime number p in the finite field is smaller than the number of combinations of orders, the coefficient in the existing polynomial after the operation may be a false positive. Accordingly, in the information processing apparatus <b>100</b>, by determining adoption or non-adoption based on a coefficient of a specific term, it is possible to exclude a case of the false positive.</p><p id="p-0113" num="0111">In a case where an order to be newly added is accepted by the order reception unit <b>151</b>, the calculation unit <b>153</b> may multiply an existing polynomial by a polynomial of the order to update the existing polynomial to a polynomial representing an order status after the addition.</p><p id="p-0114" num="0112">For example, in a case where the order which is newly added is a sell order, the calculation unit <b>153</b> generates a polynomial corresponding to the sell order to be added, by a method in the same manner as the polynomial generation unit <b>152</b>. Next, the calculation unit <b>153</b> multiplies the first existing polynomial in the first polynomial information <b>143</b> by the generated polynomial to obtain a first existing polynomial corresponding to a status of the sell order after the addition. Next, the calculation unit <b>153</b> stores information on the obtained first existing polynomial as the first polynomial information <b>143</b> in the storage unit <b>140</b>.</p><p id="p-0115" num="0113">In a case where the order to be newly added is a buy order, the calculation unit <b>153</b> generates a polynomial corresponding to the buy order to be added, by a method in the same manner as the polynomial generation unit <b>152</b>. Next, the calculation unit <b>153</b> multiplies the second existing polynomial in the second polynomial information <b>144</b> by the generated polynomial to obtain a second existing polynomial corresponding to a status of the buy order after the addition. Next, the calculation unit <b>153</b> stores information on the obtained second existing polynomial as the second polynomial information <b>144</b> in the storage unit <b>140</b>.</p><p id="p-0116" num="0114">The contract processing unit <b>154</b> is a processing unit that specifies an order to be a contract target, based on a maximum contract count, the first polynomial information <b>143</b>, and the second polynomial information <b>144</b>. A process of the contract processing unit <b>154</b> corresponds to the process described with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0117" num="0115">For example, as described with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the contract processing unit <b>154</b> executes the above-described process on the first array a (first polynomial information <b>143</b>) to specify the identification information Or<b>1</b>-<b>1</b> and Or<b>1</b>-<b>2</b> of the orders as a contract target. By executing the above-described process on the second array a (second polynomial information <b>144</b>), the contract processing unit <b>154</b> specifies the identification information Or<b>2</b>-<b>1</b> and Or<b>2</b>-<b>3</b> of the orders as a contract target.</p><p id="p-0118" num="0116">Next, the contract processing unit <b>154</b> registers identification information of the order specified as a contract target by executing the above-described process, in the contract result information <b>145</b>. The contract processing unit <b>154</b> acquires the information on the order of the contract target from the sell order table <b>141</b> or the buy order table <b>142</b>, and notifies the calculation unit <b>153</b> of the information.</p><p id="p-0119" num="0117">The output control unit <b>155</b> is a processing unit that outputs the contract result information <b>145</b> to the display unit <b>130</b> so as to display the contract result information <b>145</b>. The output control unit <b>155</b> may transmit the contract result information <b>145</b> to an external apparatus, and request the external apparatus to execute various contract processes.</p><p id="p-0120" num="0118"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a flowchart illustrating an example of an order reception and cancellation process. As illustrated in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, when the process is started, the order reception unit <b>151</b> accepts an order having a designated condition for a contract count (S<b>101</b>). A type (condition) of the order accepted in S<b>101</b> includes a sell order or a buy order, addition or deletion of the order, a minimum contract count, an order count, and the like.</p><p id="p-0121" num="0119">Next, based on the type (condition) of the accepted order, the polynomial generation unit <b>152</b> converts the order into a polynomial (Po) having a contract count (order count) under the condition designated in the order as an exponent (S<b>102</b>). In a case where the condition of the contract count has a range such as a case where a minimum contract count is a shares (for example, 3 shares) and an order count is b shares (for example, 5 shares), the polynomial generation unit <b>152</b> converts the order into a polynomial having the contract count of a to b shares as an exponent. For example, the polynomial generation unit <b>152</b> performs conversion into a polynomial of 1+x<sup>a</sup>+x<sup>a+1</sup>+x<sup>a+2</sup>+ . . . +x<sup>b</sup>.</p><p id="p-0122" num="0120">Next, the calculation unit <b>153</b> determines whether or not the accepted order is an additional order (S<b>103</b>). In a case of the additional order (Yes in S<b>103</b>), the calculation unit <b>153</b> reads the first polynomial information <b>143</b> when the additional order is a sell order and the second polynomial information <b>144</b> when the additional order is a buy order, and acquires an existing polynomial (P). Next, the calculation unit <b>153</b> multiplies the acquired existing polynomial (P) by the polynomial (Po) (S<b>104</b>). Next, the calculation unit <b>153</b> updates the first polynomial information <b>143</b> or the second polynomial information <b>144</b> with the existing polynomial (P) after the multiplication, and ends the process.</p><p id="p-0123" num="0121">In a case where the order is not an additional order but is canceled (No in S<b>103</b>), the calculation unit <b>153</b> reads the first polynomial information <b>143</b> in a case where the order to be canceled is a sell order, and reads the second polynomial information <b>144</b> in a case where the order to be canceled is a buy order, and acquires the existing polynomial (P). Next, the calculation unit <b>153</b> divides the acquired existing polynomial (P) by the polynomial (Po) (S<b>105</b>). Next, the calculation unit <b>153</b> updates the first polynomial information <b>143</b> or the second polynomial information <b>144</b> with the existing polynomial (P) after the division, and ends the process.</p><p id="p-0124" num="0122"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a flowchart illustrating an example of a contract process. As illustrated in <figref idref="DRAWINGS">FIG. <b>14</b></figref>, when the process is started, the contract processing unit <b>154</b> determines the number of shares for a contract based on an existing polynomial (a first existing polynomial and a second existing polynomial) of the first polynomial information <b>143</b> and the second polynomial information <b>144</b> (S<b>111</b>). For example, the contract processing unit <b>154</b> compares the first existing polynomial with the second existing polynomial, and determines a maximum number (maximum exponent) that is T for each other (a coefficient other than 0 is set) as the number of shares for a contract. The determined contract count is N, and the existing polynomial is P.</p><p id="p-0125" num="0123">Next, for each of a sell order and a buy order, the contract processing unit <b>154</b> executes a loop process (S<b>112</b> to S<b>117</b>) on the order as a contract target to specify an order for a contract. For example, in the case of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the sell orders of the identification information Or<b>1</b>-<b>1</b> and Or<b>1</b>-<b>2</b> and the buy orders of Or<b>2</b>-<b>1</b> and Or<b>2</b>-<b>3</b> are orders as contract targets. The contract processing unit <b>154</b> performs the loop process in which each of these orders is set as i.</p><p id="p-0126" num="0124">For example, the contract processing unit <b>154</b> generates a polynomial Q, based on a condition of the order i (S<b>113</b>). Next, the calculation unit <b>153</b> calculates a polynomial P&#x2032; by dividing the existing polynomial P (the first existing polynomial in a case where the order i is a sell order, and the second existing polynomial in a case where the order i is a buy order) by the polynomial Q (S<b>114</b>).</p><p id="p-0127" num="0125">Next, the contract processing unit <b>154</b> determines a contract count M for the order i by comparing coefficients of the P, Q, and P&#x2032; (S<b>115</b>). Assuming that a coefficient of x<sup>N </sup>of P(x) is c in a polynomial operation P(x)=Q(x)*P&#x2032;(x), when c is not 0, there is a case where c<sub>1</sub>&#x2260;c<sub>2 </sub>at c<sub>1</sub>x<sup>N&#x2212;M </sup>of Q(x) and c<sub>2</sub>x<sup>N </sup>of P(x). The contract processing unit <b>154</b> determines M that satisfies the above-described condition. A case where M is 0 represents that a contract of 0 shares is made, for example, a contract of the order i is not made.</p><p id="p-0128" num="0126">Next, the contract processing unit <b>154</b> subtracts the determined contract count M from N, and replaces the existing polynomial P with P&#x2032; (S<b>116</b>).</p><p id="p-0129" num="0127">Next, after the loop process (S<b>112</b> to S<b>117</b>), the contract processing unit <b>154</b> outputs the specified order for a contract (S<b>118</b>), and ends the process.</p><p id="p-0130" num="0128">As described above, the information processing apparatus <b>100</b> accepts an order having a designated condition for a contract count. For each of the accepted orders, the information processing apparatus <b>100</b> uses a polynomial of which exponent is the contract count under the designated condition. The information processing apparatus <b>100</b> represents an order status obtained by combining the accepted orders by a polynomial on a finite field by a product of the polynomials. The information processing apparatus <b>100</b> performs division on the polynomial on the finite field representing the order status by a polynomial corresponding to an order for a contract or an order to be canceled, and updates to the polynomial on the finite field representing an order status after the contract or after the cancellation.</p><p id="p-0131" num="0129">Therefore, in the information processing apparatus <b>100</b>, it is possible to obtain the order status related to the remaining orders after specifying the order of the contract target or after canceling the order, without combining and reconstructing each order from the beginning. Accordingly, with the information processing apparatus <b>100</b>, it is possible to efficiently specify the order to be the contract target.</p><p id="p-0132" num="0130">The information processing apparatus <b>100</b> represents a buy order status obtained by combining the accepted buy orders by a first polynomial on a finite field by a product of the polynomials. The information processing apparatus <b>100</b> represents a sell order status obtained by combining the accepted sell orders by a second polynomial on a finite field by a product of the polynomials. Therefore, in the information processing apparatus <b>100</b>, it is possible to efficiently obtain, for each of the buy order status in which the buy orders are combined and the sell order status in which the sell orders are combined, an order status after specifying the order as a contract target or after cancelling the order.</p><p id="p-0133" num="0131">The information processing apparatus <b>100</b> determines whether or not to adopt the polynomial on the finite field after the division as the polynomial on the finite field representing the order status after the contract or the cancellation, based on a coefficient of a term of a specific exponent. In this manner, the information processing apparatus <b>100</b> may adopt or not adopt the polynomial on the finite field after the division, depending on the coefficient of the term of the specific exponent. Therefore, for example, the information processing apparatus <b>100</b> may exclude a case where the coefficient in the existing polynomial after the operation is a false positive.</p><heading id="h-0008" level="1">Second Embodiment</heading><p id="p-0134" num="0132">According to the first embodiment, a sell order status in which sell orders are combined and a buy order status in which buy orders are combined are handled with different polynomials. For this reason, in the first embodiment, when the number of orders increases, calculation costs such as a calculation time or a memory region desirable for searching for a contract are increased.</p><p id="p-0135" num="0133">According to a second embodiment, for one order of the sell order and the buy order, the polynomial generation unit <b>152</b> sets a polynomial in which a contract count under a designated condition is a positive exponent. For the other order of the sell order and the buy order, the polynomial generation unit <b>152</b> sets a polynomial in which a contract count under a designated condition is a negative exponent. As an example, the positive exponent is set for the sell order and the negative exponent is set for the buy order, and the positive and negative exponents may be reversed.</p><p id="p-0136" num="0134">For example, the polynomial generation unit <b>152</b> represents a sell order of a shares as 1+x<sup>a </sup>(a sell contract with a shares: x<sup>a </sup>or no contract: 1). The polynomial generation unit <b>152</b> represents a buy order of a share as 1+x<sup>&#x2212;a </sup>(a buy contract with a shares: x<sup>&#x2212;a </sup>or no contract: 1). As an example, the polynomial generation unit <b>152</b> sets a sell order of one share to 1+x. The polynomial generation unit <b>152</b> sets a buy order of 3 shares to 1+x<sup>&#x2212;3</sup>. The polynomial generation unit <b>152</b> sets a sell order of 2 shares to 1+x<sup>2</sup>.</p><p id="p-0137" num="0135">Next, the polynomial generation unit <b>152</b> represents an order status in which the sell order and the buy order are combined as one polynomial on a finite field, by a product of the respective polynomials represented by positive and negative exponents for the sell order and the buy order. The polynomial generation unit <b>152</b> stores information on the generated polynomial as a polynomial information <b>143</b><i>a </i>in the storage unit <b>140</b>.</p><p id="p-0138" num="0136">For example, in a case where the sell order (1+x) of one share and the buy order (1+x<sup>&#x2212;3</sup>) of 3 shares arrive, the polynomial generation unit <b>152</b> obtains a polynomial of an order status in which the sell order and the buy order are combined, as follows by using a product of the sell order (1+x) and the buy order (1+x<sup>&#x2212;3</sup>).</p><p id="p-0139" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(1+<i>x</i>)&#xd7;(1+<i>x</i><sup>&#x2212;3</sup>)=<i>x</i><sup>&#x2212;3</sup><i>+x</i><sup>&#x2212;2</sup>+1+<i>x </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0140" num="0137">After that, in a case where the sell order (1+x<sup>2</sup>) of 2 shares arrives, the polynomial generation unit <b>152</b> updates the polynomial of the order status in which the sell order and the buy order are combined, as follows by using a product with the sell order of 2 shares.</p><p id="p-0141" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>x</i><sup>&#x2212;3</sup><i>+x</i><sup>&#x2212;2</sup>+1+<i>x</i>)&#xd7;(1+<i>x</i><sup>2</sup>)=<i>x</i><sup>&#x2212;3</sup><i>+x</i><sup>&#x2212;2</sup><i>+x</i><sup>1</sup>+2+<i>x+x</i><sup>2</sup><i>+x</i><sup>3 </sup><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0142" num="0138">According to the second embodiment, the calculation unit <b>153</b> performs various operation processes based on the polynomial information <b>143</b><i>a </i>stored in the storage unit <b>140</b>, in the same manner as the polynomial operation corresponding to the order status of each of the sell order and the buy order. Based on the polynomial information <b>143</b><i>a</i>, the contract processing unit <b>154</b> specifies an order to be a contract target.</p><p id="p-0143" num="0139">With one polynomial on a finite field representing an order status in which a sell order and a buy order are combined, it may be determined that a contract is available when a constant term has a value other than 1. The constant term in this polynomial represents a position (the number of combinations) at which buying and selling are balanced, and for example, in a case where the constant term is 1, it represents that there is one set in which no contract is made. When the constant term has the value other than 1, there is at least one combination of which a contract is made as a combination other than a combination of which a contract is not made (the number of combinations of (the value of the constant term)&#x2212;1). For this reason, the contract processing unit <b>154</b> determines whether or not the contract is available, based on the constant term in the polynomial indicated by the polynomial information <b>143</b><i>a. </i></p><p id="p-0144" num="0140">A method, in which the contract processing unit <b>154</b> specifies an order for a contract based on a polynomial indicated by the polynomial information <b>143</b><i>a </i>in a case where the contract processing unit <b>154</b> determines that a contract is available, will be described with reference to <figref idref="DRAWINGS">FIG. <b>15</b></figref>. <figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart illustrating an example of an operation of an information processing apparatus according to the second embodiment.</p><p id="p-0145" num="0141">As illustrated in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, when the contract processing unit <b>154</b> determines that the contract is available and thus the process of specifying an order is started, the contract processing unit <b>154</b> obtains, as an input, a polynomial P(x) in which orders indicated by the polynomial information <b>143</b><i>a </i>are collected (S<b>201</b>).</p><p id="p-0146" num="0142">After that, the contract processing unit <b>154</b> initializes a variable (n) representing a sum (sell count&#x2212;buy count) of order counts (the number of shares) and an array (A) indicating an order for a contract (0 or empty array) (S<b>202</b>).</p><p id="p-0147" num="0143">After that, the contract processing unit <b>154</b> executes the loop process (S<b>203</b> to S<b>210</b>) of each order with the order count (the number of shares) in each order (i) as a<sub>i</sub>.</p><p id="p-0148" num="0144">For example, the contract processing unit <b>154</b> determines whether or not the order (i) to be processed is a sell order (S<b>204</b>). In a case of the sell order (Yes in S<b>204</b>), the contract processing unit <b>154</b> sets p(x) to 1+x<sup>ai</sup>, and n&#x2032;=n&#x2212;a<sub>i </sub>(S<b>205</b>).</p><p id="p-0149" num="0145">In a case of a buy order instead of the sell order (No in S<b>204</b>), the contract processing unit <b>154</b> sets p(x) to 1+x<sup>&#x2212;ai</sup>, and n&#x2032;=n+a<sub>i </sub>(S<b>206</b>).</p><p id="p-0150" num="0146">After that, the contract processing unit <b>154</b> calculates P&#x2032;(x)=P(x)/p(x), and obtains a polynomial by subtracting the order to be processed from an order status represented by the original polynomial (S<b>207</b>).</p><p id="p-0151" num="0147">After that, the contract processing unit <b>154</b> determines whether or not a coefficient of x<sup>n&#x2032;</sup> of P&#x2032;(x) is 0 (S<b>208</b>). In a case where the coefficient of x<sup>n&#x2032;</sup> is not 0 (Yes in S<b>208</b>), the contract processing unit <b>154</b> adds the order (i) to the array A, sets P(x)=P&#x2032;(x) and n=n&#x2032; (S<b>209</b>), and returns to the next loop process. When the coefficient of x<sup>n&#x2032;</sup> is 0 (No in S<b>208</b>), the contract processing unit <b>154</b> returns P(x), and n to the next loop process as they are (S<b>210</b>).</p><p id="p-0152" num="0148">After the loop process, the contract processing unit <b>154</b> determines whether n=0 and A is not empty (S<b>211</b>). In a case where n=0 and A is empty (No in S<b>211</b>), the contract processing unit <b>154</b> returns the process to S<b>203</b>. In a case where n=0 and A is not empty (Yes in S<b>211</b>), the contract processing unit <b>154</b> outputs the array (A) indicating an order for a contract (S<b>212</b>), and ends the process.</p><p id="p-0153" num="0149">In the loop process described above, the orders (i) to be processed may be set in a reception sequence. Therefore, the contract processing unit <b>154</b> may set a priority sequence for contract to the reception sequence.</p><p id="p-0154" num="0150">The above-described process is not for specifying the order such that the order count for the contract of the sell order and the buy order is the maximum count. A process of specifying an order such that the order count for the contract of the sell order and the buy order is the maximum count will be described.</p><p id="p-0155" num="0151">First, in order to obtain the maximum contract, the polynomial generation unit <b>152</b> includes a label indicating the maximum number of a sum of combined order counts and identification information (for example, order number) of the combined orders in each term of one polynomial, as an index, in the polynomial information <b>143</b><i>a. </i></p><p id="p-0156" num="0152">Based on the index of each term included in the polynomial information <b>143</b><i>a</i>, the contract processing unit <b>154</b> specifies an order that maximizes the order count. For example, a label of a constant term included in a polynomial indicating an order status in which a sell order and a buy order are combined indicates a case where an order count is maximized (the maximum number of a sum of the order counts and a combination of orders). Accordingly, the contract processing unit <b>154</b> specifies the sell order and the buy order for a contract based on the label (index) of the constant term included in the polynomial information <b>143</b><i>a. </i></p><p id="p-0157" num="0153"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is an explanatory diagram describing an execution example of a maximum contract. For example, the polynomial generation unit <b>152</b> uses a product of a sell order (1+x) of 1 share and a buy order (1+x<sup>&#x2212;3</sup>) of 3 shares to obtain a polynomial of an order status in which the sell order and the buy order are combined.</p><p id="p-0158" num="0154">For each term, the polynomial generation unit <b>152</b> gives, as [ ], the maximum number of a sum of the combined order counts and an index of identification information (order number) of the combined orders. According to the illustrated example, the index of each term is [maximum number of sum of combined order counts, (order number)].</p><p id="p-0159" num="0155">After that, in a case where a sell order (1+x<sup>2</sup>) of 2 shares arrives, the polynomial generation unit <b>152</b> updates the polynomial of the order status in which the sell order and the buy order are combined and the index of each term, by a product with the sell order of 2 shares.</p><p id="p-0160" num="0156">Since a constant term is 2, the contract processing unit <b>154</b> determines that the contract is available, and specifies an order for a contract based on the index of the constant term. According to the illustrated example, the contract processing unit <b>154</b> specifies the sell orders and the buy orders having order numbers (1), (2), and (3) as orders for a contract with the maximum order count 6.</p><p id="p-0161" num="0157">An operation of the polynomial generation unit <b>152</b> that obtains an indexed polynomial to obtain a maximum contract will be described with reference to <figref idref="DRAWINGS">FIGS. <b>17</b> and <b>18</b></figref>. <figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flowchart illustrating an operation example of a maximum contract. <figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flowchart illustrating an example of a merging process.</p><p id="p-0162" num="0158">As illustrated in <figref idref="DRAWINGS">FIG. <b>17</b></figref>, when the process is started, the polynomial generation unit <b>152</b> accepts an input of the labeled polynomial P(x) indicated by the polynomial information <b>143</b><i>a </i>and a new order (O<sub>i</sub>) of n shares (S<b>221</b>).</p><p id="p-0163" num="0159">After that, the polynomial generation unit <b>152</b> creates Q(x) by copying P(x) (S<b>222</b>), and executes the loop process on each term cx<sup>k </sup>[s, v] of P(x) (S<b>223</b> to S<b>228</b>). [ ] indicates an index of each term, s indicates a maximum value of an order count, and v indicates a column of an order (order number) reaching a total of s shares.</p><p id="p-0164" num="0160">After the loop process is started, the polynomial generation unit <b>152</b> prepares, as v&#x2032;, an order list in which the new order (O<sub>i</sub>) is coupled to an end of v (S<b>224</b>). After that, the polynomial generation unit <b>152</b> determines whether or not the new order (O<sub>i</sub>) is a sell order (S<b>225</b>).</p><p id="p-0165" num="0161">In a case where the new order (O<sub>i</sub>) is the sell order (Yes in S<b>225</b>), the polynomial generation unit <b>152</b> performs a merging process of adding cx<sup>k+n </sup>[s+n, v&#x2032;] to Q(x) (S<b>226</b>), and advances the process to the next loop. In a case where the new order (O<sub>i</sub>) is not the sell order but a buy order (No in S<b>225</b>), the polynomial generation unit <b>152</b> performs the merging process of adding cx<sup>k&#x2212;n </sup>[s+n, v&#x2032;] to Q(x) (S<b>227</b>), and advances the process to the next loop.</p><p id="p-0166" num="0162">As illustrated in <figref idref="DRAWINGS">FIG. <b>18</b></figref>, when the merging process is started, the polynomial generation unit <b>152</b> accepts an input of the labeled polynomial Q(x) and information (cx<sup>k </sup>[s, v]) of a term to be merged (S<b>231</b>).</p><p id="p-0167" num="0163">After that, the polynomial generation unit <b>152</b> determines whether or not an item of x<sup>k </sup>exists in Q(x) (S<b>232</b>). In a case where there is no item of x<sup>k </sup>in Q(x) (No in S<b>232</b>), the polynomial generation unit <b>152</b> advances the process to S<b>237</b>.</p><p id="p-0168" num="0164">In a case where the item of x<sup>k </sup>exists in Q(x) (Yes in S<b>232</b>), the polynomial generation unit <b>152</b> sets the term of x<sup>k </sup>of Q(x) to c&#x2032;x<sup>k </sup>[s&#x2032;, v&#x2032;] (S<b>233</b>).</p><p id="p-0169" num="0165">After that, the polynomial generation unit <b>152</b> determines whether or not s&#x2265;s&#x2032; is satisfied (S<b>234</b>), and in a case where s&#x2265;s&#x2032; is satisfied (Yes in S<b>234</b>), the polynomial generation unit <b>152</b> replaces the term of x<sup>k </sup>of Q(x) with (c+c&#x2032;)x<sup>k </sup>[s, v] (S<b>235</b>). In a case where s&#x2265;s&#x2032; is not satisfied (No in S<b>234</b>), the polynomial generation unit <b>152</b> replaces the term of x<sup>k </sup>of Q(x) with (c+c&#x2032;)x<sup>k </sup>[s&#x2032;, v&#x2032;] (S<b>236</b>).</p><p id="p-0170" num="0166">After that, the polynomial generation unit <b>152</b> outputs Q(x) obtained in the above-described process (S<b>231</b> to S<b>236</b>) as a processing result (S<b>237</b>), and ends the process.</p><p id="p-0171" num="0167">After the above-described loop process, the polynomial generation unit <b>152</b> outputs the obtained Q(x) as a new polynomial with an index (S<b>229</b>), and ends the process. For example, the polynomial generation unit <b>152</b> updates the polynomial information <b>143</b><i>a </i>based on Q(x).</p><p id="p-0172" num="0168">Although an index of each term is a list of orders and a memory use amount increases if the index is held as it is, the index may be held by using a memory structure such as a trie (a node of the trie corresponds to the index) since only the process of adding to the end is performed in the above-described process. For example, it is possible to suppress an increase in memory use amount with the compression of the indices.</p><p id="p-0173" num="0169"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is an explanatory diagram describing compression of indices. As illustrated in <figref idref="DRAWINGS">FIG. <b>19</b></figref>, in a memory structure of an index of each term, it may be said that a node of a trie corresponds to the index. Accordingly, in a case where an order number (2) is added to a node n1 in which an order number (1) and an order number (3) are combined, a node n2 of the order numbers (1), (3), and (2) is set.</p><p id="p-0174" num="0170">As described above, for each of a sell order and a buy order for which a condition of a contract count is designated, the information processing apparatus <b>100</b> sets a first polynomial in which the contract count under the condition designated for one of the sell order and the buy order is a positive exponent. For each of the sell order and the buy order for which the condition of the contract count is designated, the information processing apparatus <b>100</b> sets a second polynomial in which the contract count under the condition designated for the other of the sell order and the buy order is a negative exponent. The information processing apparatus <b>100</b> represents an order status in which the sell order and the buy order are combined, by one polynomial on a finite field by a product of the first polynomial and the second polynomial. The information processing apparatus <b>100</b> specifies a sell order and a buy order for a contract based on the one polynomial on the finite field representing the order status.</p><p id="p-0175" num="0171">In this manner, since the information processing apparatus <b>100</b> represents the order status in which the sell order and the buy order are combined, with the one polynomial on the finite field, the sell order and the buy order may be simultaneously handled, and thus memory efficiency is better than a case where the sell order and the buy order are separately handled. Accordingly, the information processing apparatus <b>100</b> may reduce a calculation cost in the process for obtaining the contract for trading.</p><p id="p-0176" num="0172">In a case where a constant term included in one polynomial is an integer other than 1, the information processing apparatus <b>100</b> specifies a sell order and a buy order for a contract. The constant term included in one polynomial represents a case in which the sell order and the buy order are balanced, including a case in which a contract is not made (the constant term is 1). For example, in a case where the constant term is an integer other than 1, there is at least one case (a combination of a sell order and a buy order) in which a contract is made other than a case in which a contract is not made. Accordingly, in a case where the constant term is an integer other than 1, the information processing apparatus <b>100</b> may specify a combination of a sell order and a buy order satisfying the condition of the contract by specifying the sell order and the buy order for the contract.</p><p id="p-0177" num="0173">The information processing apparatus <b>100</b> gives a label indicating a maximum number of a sum of the combined order counts and identification information on the combined orders, in each term of one polynomial, and specifies a sell order and a buy order for the contract based on the label. Therefore, the information processing apparatus <b>100</b> may easily specify the sell order and the buy order for the contract, based on the label given to each term of the one polynomial.</p><p id="p-0178" num="0174">The information processing apparatus <b>100</b> specifies a sell order and a buy order for the contract, based on a label of a constant term included in the one polynomial. The label of the constant term included in the one polynomial indicates a case where the order count is maximized in a combination of the sell order and the buy order satisfying the condition of the contract. Accordingly, the information processing apparatus <b>100</b> may specify the sell order and the buy order for the contract based on the label of the constant term to maximizing the order count for the contract.</p><p id="p-0179" num="0175">It is noted that each component of each apparatus illustrated in the drawings may not be physically configured as illustrated in the drawings. For example, specific forms of the separation and integration of each apparatus are not limited to those illustrated in the drawings. The entirety or part of the apparatus may be configured by functionally or physically separating into arbitrary units or integrating into an arbitrary unit in accordance with various loads, usage situations, and the like.</p><p id="p-0180" num="0176">Although the present embodiment exemplifies a case to be applied to the case where an order is made under a condition of a total amount contract or a certain order count in stock trading in the securities trading market, the present embodiment is not limited to the application to the stock trading. For example, the present embodiment may be applied to trading other than stock trading, such as futures trading markets.</p><p id="p-0181" num="0177">All or certain some of the various processing functions to be executed by the information processing apparatus <b>100</b> may be executed by a CPU (or a microcomputer such as an MPU or a micro controller unit (MCU)) or a graphics processing unit (GPU). Of course, all or arbitrary subset of the various processing functions may be executed in programs analyzed and executed by the CPU (or a microcomputer such as the MPU or MCU) or the GPU or may be executed in hardware using wired logic. The various processing functions performed in the information processing apparatus <b>100</b> may be executed in such a way that a plurality of computers cooperate with each other via cloud computing.</p><p id="p-0182" num="0178">Next, an example of a hardware configuration of a computer that implements functions similar to those of the information processing apparatus <b>100</b> described in the above embodiment will be described. <figref idref="DRAWINGS">FIG. <b>20</b></figref> is a diagram illustrating an example of a hardware configuration of a computer that implements a function in the same manner as a function of the information processing apparatus <b>100</b> according to the embodiment.</p><p id="p-0183" num="0179">As illustrated in <figref idref="DRAWINGS">FIG. <b>20</b></figref>, a computer <b>300</b> includes a CPU <b>301</b> which executes various operation processes, an input device <b>302</b> which accepts an input of data from a user, and a display <b>303</b>. The computer <b>300</b> includes a communication device <b>304</b> that exchanges data with an external apparatus or the like via a wired or wireless network, and an interface device <b>305</b>. The computer <b>300</b> also includes a RAM <b>306</b> that temporarily stores various kinds of information and a hard disk device <b>307</b>. Each of devices <b>301</b> to <b>307</b> is coupled to a bus <b>308</b>.</p><p id="p-0184" num="0180">The hard disk device <b>307</b> includes an order reception program <b>307</b><i>a</i>, a polynomial generation program <b>307</b><i>b</i>, an operation program <b>307</b><i>c</i>, a contract processing program <b>307</b><i>d</i>, and an output control program <b>307</b><i>e</i>. The CPU <b>301</b> reads each of the programs <b>307</b><i>a </i>to <b>307</b><i>e</i>, and expands the program into the RAM <b>306</b>.</p><p id="p-0185" num="0181">The order reception program <b>307</b><i>a </i>functions as an order reception process <b>306</b><i>a</i>. The polynomial generation program <b>307</b><i>b </i>functions as a polynomial generation process <b>306</b><i>b</i>. The operation program <b>307</b><i>c </i>functions as an operation process <b>306</b><i>c</i>. The contract processing program <b>307</b><i>d </i>functions as a contract processing process <b>306</b><i>d</i>. The output control program <b>307</b><i>e </i>functions as an output control process <b>306</b><i>e. </i></p><p id="p-0186" num="0182">A process of the order reception process <b>306</b><i>a </i>corresponds to the process of the order reception unit <b>151</b>. A process of the polynomial generation process <b>306</b><i>b </i>corresponds to the process of the polynomial generation unit <b>152</b>. A process of the operation process <b>306</b><i>c </i>corresponds to the process of the calculation unit <b>153</b>. A process of the contract processing process <b>306</b><i>d </i>corresponds to the process of the contract processing unit <b>154</b>. A process of the output control process <b>306</b><i>e </i>corresponds to the process of the output control unit <b>155</b>.</p><p id="p-0187" num="0183">Each of the programs <b>307</b><i>a </i>to <b>307</b><i>e </i>may not be stored in the hard disk device <b>307</b> from the beginning. For example, each program may be stored in a &#x201c;portable physical medium&#x201d; such as a flexible disk (FD), a CD-ROM, a DVD, a magneto-optical disk, an IC card, or the like inserted in the computer <b>300</b>. The computer <b>300</b> may read and execute each of the programs <b>307</b><i>a </i>to <b>307</b><i>e</i>. Each of the programs <b>307</b><i>a </i>to <b>307</b><i>e </i>may be stored in an external apparatus coupled to a network such as a public line, the Internet, a LAN, or the like, and each of the programs <b>307</b><i>a </i>to <b>307</b><i>e </i>may be read from the external apparatus coupled to the network and executed by the computer <b>300</b>.</p><p id="p-0188" num="0184">All examples and conditional language provided herein are intended for the pedagogical purposes of aiding the reader in understanding the invention and the concepts contributed by the inventor to further the art, and are not to be construed as limitations to such specifically recited examples and conditions, nor does the organization of such examples in the specification relate to a showing of the superiority and inferiority of the invention. Although one or more embodiments of the present invention have been described in detail, it should be understood that the various changes, substitutions, and alterations could be made hereto without departing from the spirit and scope of the invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A non-transitory computer-readable recording medium storing a contract program causing a computer to execute a process comprising:<claim-text>setting, for each of a sell order and a buy order having a condition that a contract count is designated, a first polynomial having a contract count designated under the condition of one order of the sell order and the buy order as a positive exponent, and a second polynomial having a contract count designated under the condition of the other order of the sell order and the buy order as a negative exponent;</claim-text><claim-text>representing an order status in which the sell order and the buy order are combined, with one polynomial on a finite field by a product of the first polynomial and the second polynomial; and</claim-text><claim-text>specifying a sell order and a buy order for making a contract based on the one polynomial on the finite field representing the order status.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The non-transitory computer-readable recording medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein in the specifying, in a case where a constant term included in the one polynomial is an integer other than 1, the sell order and the buy order for the contract are specified.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The non-transitory computer-readable recording medium according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein in the representing, a label indicating a maximum number of a sum of combined order counts and identification information on combined orders is given in each term of the one polynomial, and</claim-text><claim-text>in the specifying, the sell order and the buy order for the contract are specified based on the given label.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The non-transitory computer-readable recording medium according to <claim-ref idref="CLM-00003">claim 3</claim-ref>,<claim-text>wherein in the specifying, the sell order and the buy order for the contract are specified based on a label of the constant term included in the one polynomial.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. A contract method comprising:<claim-text>setting, by a computer, for each of a sell order and a buy order having a condition that a contract count is designated, a first polynomial having a contract count designated under the condition of one order of the sell order and the buy order as a positive exponent, and a second polynomial having a contract count designated under the condition of the other order of the sell order and the buy order as a negative exponent;</claim-text><claim-text>representing an order status in which the sell order and the buy order are combined, with one polynomial on a finite field by a product of the first polynomial and the second polynomial; and</claim-text><claim-text>specifying a sell order and a buy order for making a contract based on the one polynomial on the finite field representing the order status.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The contract method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>,<claim-text>wherein in the specifying, in a case where a constant term included in the one polynomial is an integer other than 1, the sell order and the buy order for the contract are specified.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The contract method according to <claim-ref idref="CLM-00006">claim 6</claim-ref>,<claim-text>wherein in the representing, a label indicating a maximum number of a sum of combined order counts and identification information on combined orders is given in each term of the one polynomial, and</claim-text><claim-text>in the specifying, the sell order and the buy order for the contract are specified based on the given label.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The contract method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>,<claim-text>wherein in the specifying, the sell order and the buy order for the contract are specified based on a label of the constant term included in the one polynomial.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. An information processing apparatus comprising:<claim-text>a memory; and</claim-text><claim-text>a processor coupled to the memory and configured to:</claim-text><claim-text>set, for each of a sell order and a buy order having a condition that a contract count is designated, a first polynomial having a contract count designated under the condition of one order of the sell order and the buy order as a positive exponent, and a second polynomial having a contract count designated under the condition of the other order of the sell order and the buy order as a negative exponent;</claim-text><claim-text>represent an order status in which the sell order and the buy order are combined, with one polynomial on a finite field by a product of the first polynomial and the second polynomial; and</claim-text><claim-text>specify a sell order and a buy order for making a contract based on the one polynomial on the finite field representing the order status.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The information processing apparatus according to <claim-ref idref="CLM-00009">claim 9</claim-ref>,<claim-text>wherein in a case where a constant term included in the one polynomial is an integer other than 1, the sell order and the buy order for the contract are specified.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The information processing apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>,<claim-text>wherein a label indicating a maximum number of a sum of combined order counts and identification information on combined orders is given in each term of the one polynomial, and the sell order and the buy order for the contract are specified based on the given label.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The information processing apparatus according to <claim-ref idref="CLM-00011">claim 11</claim-ref>,<claim-text>wherein the sell order and the buy order for the contract are specified based on a label of the constant term included in the one polynomial.</claim-text></claim-text></claim></claims></us-patent-application>