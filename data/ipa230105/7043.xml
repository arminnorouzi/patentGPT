<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007044A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007044</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17780174</doc-number><date>20201030</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>201911179831.9</doc-number><date>20191127</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>215</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1491</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>1464</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>215</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2201</main-group><subgroup>84</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">CLEANING RECOVERY METHOD AND DEVICE FOR HETEROGENEOUS EXECUTOR IN MIMICRY SWITCH, AND MIMICRY SWITCH</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>PURPLE MOUNTAIN LABORATORIES</orgname><address><city>Nanjing, Jiangsu</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>WU</last-name><first-name>Yanping</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>YU</last-name><first-name>Bo</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Yu</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>CHENG</last-name><first-name>Cheng</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>SUN</last-name><first-name>Yuanhang</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>SUN</last-name><first-name>Zengzhen</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CN2020/125201</doc-number><date>20201030</date></document-id><us-371c12-date><date>20220526</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present disclosure provides a cleaning and recovery method and device for a heterogeneous executor in a mimic switch, and a mimic switch, the method includes: a mimic scheduler determining a designated heterogeneous executor that needs to be cleaned, marking the designated heterogeneous executor that needs to be cleaned as in a cleaning state, and sending a cleaning instruction to the designated heterogeneous executor; the designated heterogeneous executor sending a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler; the mimic scheduler receiving the protocol negotiation message and detecting whether the designated heterogeneous executor is in the cleaning state; if in the cleaning state, the mimic scheduler; constructing a training message, and sending the training message to the designated heterogeneous executor for protocol training; repeating sending and processing the protocol negotiation message until the designated heterogeneous executor is in a normal state.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="115.99mm" wi="144.53mm" file="US20230007044A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="125.56mm" wi="146.56mm" file="US20230007044A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="138.01mm" wi="116.08mm" file="US20230007044A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="207.26mm" wi="116.76mm" file="US20230007044A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="182.96mm" wi="106.60mm" file="US20230007044A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="119.89mm" wi="148.84mm" file="US20230007044A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCES TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application is a national stage of International Application No. PCT/CN2020/125201 filed on Oct. 30, 2020, which claims priority to Chinese Patent Application No. 201911179831.9, entitled &#x201c;CLEANING AND RECOVERY METHOD AND DEVICE FOR HETEROGENEOUS EXECUTOR OF MIMIC SWITCH&#x201d;, filed on Nov. 27, 2019. Both applications are incorporated herein by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to the field of network security protection technology, and in particular to a cleaning and recovery method and device for a heterogeneous executor in a mimic switch, and a mimic switch.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">At present, the security problem of cyberspace has become one of the most severe challenges in the information age. Mimic defense technology realizes effective response to unknown threats by creating an architecture with dynamic heterogeneous redundancy as the core, which provides a good guidance for solving the security problem of the cyberspace.</p><p id="p-0005" num="0004">The mimic switch is a typical application of the mimic defense technology. The mimic switch usually uses a plurality of heterogeneous processors as heterogeneous executors. The mimic switch system includes a hardware-implemented mimic scheduler to realize decision screening of the downlink data and the distribution of the uplink data for the heterogeneous executors.</p><p id="p-0006" num="0005">External attacks or internal errors may cause an abnormality in a heterogeneous executor. Although the abnormality may not affect the data output by the decision, failure to clean and recover the heterogeneous executor in time will still significantly reduce the security of the system. Data backup and recovery can be used to clean and recover heterogeneous execution entities. However, since the specific implementations of a same protocol running on different heterogeneous executors may not be completely the same, it is necessary to define a unified data backup and recovery structure for the protocol, thus the protocol stack of each of the heterogeneous executors needs to be changed greatly in order to complete the data backup and synchronization.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">Based on this, the present disclosure provides a cleaning and recovery method and device for a heterogeneous executor in a mimic switch, and a mimic switch.</p><p id="p-0008" num="0007">In a first aspect, the present disclosure provides a cleaning and recovery method for a heterogeneous executor in a mimic switch, includes:</p><p id="p-0009" num="0008">S<b>210</b>, determining, by a mimic scheduler, a designated heterogeneous executor that needs to be cleaned; S<b>220</b>, marking, by the mimic scheduler, the designated heterogeneous executor that needs to be cleaned as in a cleaning state, and sending, by the mimic scheduler, a cleaning instruction to the designated heterogeneous executor; S<b>230</b>, sending, by the designated heterogeneous executor, a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler; S<b>240</b>, receiving, by the mimic scheduler, the protocol negotiation message, and detecting, by the mimic scheduler, whether the designated heterogeneous executor is in the cleaning state; if the mimic scheduler detects that the designated heterogeneous executor is in the cleaning state, constructing, by the mimic scheduler, a training message, and sending, by the mimic scheduler, the training message to the designated heterogeneous executor for protocol training; S<b>250</b>, repeating S<b>230</b> to S<b>240</b> until the designated heterogeneous executor is recovered to be in a normal state.</p><p id="p-0010" num="0009">In a second aspect, the present disclosure provides a cleaning and recovery method for a heterogeneous executor in a mimic switch, includes:</p><p id="p-0011" num="0010">S<b>310</b>, the mimic scheduler performing decision on downlink data from a plurality of heterogeneous executors, and deciding whether to clean a heterogeneous executor with abnormal output; S<b>320</b>, for a designated heterogeneous executor that needs to be cleaned, the mimic scheduler marking it as in a cleaning state and it does not participate in the mimic decision, and sending a cleaning instruction to it; S<b>330</b>, the designated heterogeneous executor restarting; S<b>340</b>, the designated heterogeneous executor sending a normal protocol negotiation message to try to interact with the mimic scheduler; S<b>350</b>, the mimic scheduler receiving the protocol negotiation message, detecting whether the designated heterogeneous executor is in a cleaning state, and if yes, constructing a training message, and sending it to the designated heterogeneous executor for protocol training; otherwise, determining whether the designated heterogeneous executor participates in the decision according to a predetermined mimic strategy; S<b>360</b>, repeating S<b>340</b>&#x2dc;S<b>350</b> until the state of the designated heterogeneous executor is recovered, and informing the mimic scheduler; S<b>370</b>, the mimic scheduler marking the designated heterogeneous executor as in a normal state, and determining whether it participates in the decision according to the mimic strategy.</p><p id="p-0012" num="0011">Combined with the second aspect, an embodiment of the present disclosure provides a first possible implementation of the second aspect. The mimic scheduler performing decision on downlink data from a plurality of heterogeneous executors in S<b>310</b> specifically is: the mimic decision module in the mimic scheduler receiving downlink data of a plurality of heterogeneous executors, marking each of the heterogeneous executors with normal output or abnormal output according to a mimic strategy, selecting the downlink data of any of the heterogeneous executors with normal output as correct data, and sending the correct data to the switch chip and also sending the correct data to the mimic recovery module of the mimic scheduler; the mimic recovery module parsing the correct data, and updating an operating state and backup data of a corresponding protocol.</p><p id="p-0013" num="0012">Preferably, the decision strategy includes a majority decision based on empirical credibility, a majority decision based on weight, or a composite single choice decision based on sampling majority.</p><p id="p-0014" num="0013">Combined with the second aspect, an embodiment of the present disclosure provides a second possible implementation of a second aspect. Deciding whether to clean a heterogeneous executor with abnormal output in S<b>310</b> specifically is: the mimic decision module in the mimic scheduler analyzing current state and historical decision data of the heterogeneous executor with abnormal output, if the number of times that the heterogeneous executor with abnormal output is decided to be abnormal reaches a specified threshold, then determining that the heterogeneous executor with abnormal output needs to be cleaned.</p><p id="p-0015" num="0014">Combined with the second aspect, an embodiment of the present disclosure provides a third possible implementation of the second aspect. Constructing the training message in step S<b>350</b> specifically is: the mimic recovery module of the mimic scheduler parsing the protocol negotiation message, and constructing the training message according to the state and the backup data of the heterogeneous executors reflected in the protocol negotiation message.</p><p id="p-0016" num="0015">Combined with the second aspect, an embodiment of the present disclosure provides a fourth possible implementation of the second aspect. The mimic scheduler further receives uplink data from the switch chip, and processes the uplink data as follows: The uplink data is copied and distributed to each of the heterogeneous executors and the mimic recovery module, and the mimic recovery module parses the uplink data and updates the operating state and backup data of the corresponding protocol.</p><p id="p-0017" num="0016">In a third aspect, the present disclosure of the present disclosure further provides a cleaning and recovery device for a heterogeneous executor in a mimic switch, used in a mimic switch. The mimic switch includes a plurality of heterogeneous executors, a mimic scheduler, and a switch chip. The cleaning and recovery device is located in the mimic scheduler, and includes a mimic decision module and a mimic recovery module.</p><p id="p-0018" num="0017">The mimic decision module is connected to a plurality of heterogeneous executors through data communication interfaces, and is configured to: perform decision on the downlink data from the heterogeneous executors; for any heterogeneous executor with normal output, send the correct data issued by this heterogeneous executor to the switch chip; for the heterogeneous executor with abnormal output, determine whether to clean it according to its current state and historical decision data.</p><p id="p-0019" num="0018">The mimic recovery module is connected to the switch chip through a data communication interface, and is configured to: receive the uplink data from the switch chip and the downlink data after the decision, maintain and update the data backup of the current operating state of each heterogeneous executor, and perform state recovery on the designated heterogeneous executor that needs to be cleaned.</p><p id="p-0020" num="0019">Combined with the third aspect, an embodiment of the present disclosure provides a first possible implementation of the third aspect. The data communication interface is at least one or any several used at the same time of PCIE, SGMII, UART, GPIO, XAUI, IIC, SPI, and AXI.</p><p id="p-0021" num="0020">In a fourth aspect, an embodiment of the present disclosure further provides a mimic switch, including a plurality of heterogeneous executors, a mimic scheduler, and a switch chip. The mimic scheduler includes a mimic decision module and a mimic recovery module. The mimic decision module is connected to the plurality of heterogeneous executors, and the mimic recovery module is connected to the switch chip. The mimic recovery module is configured to perform the following steps:</p><p id="p-0022" num="0021">S<b>210</b>, determining, by a mimic scheduler, a designated heterogeneous executor that needs to be cleaned; S<b>220</b>, marking, by the mimic scheduler, the designated heterogeneous executor that needs to be cleaned as in a cleaning state, and sending, by the mimic scheduler, a cleaning instruction to the designated heterogeneous executor; S<b>230</b>, sending, by the designated heterogeneous executor, a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler; S<b>240</b>, receiving, by the mimic scheduler, the protocol negotiation message, and detecting, by the mimic scheduler, whether the designated heterogeneous executor is in the cleaning state; if the mimic scheduler detects that the designated heterogeneous executor is in the cleaning state, constructing, by the mimic scheduler, a training message, and sending, by the mimic scheduler, the training message to the designated heterogeneous executor for protocol training; S<b>250</b>, repeating S<b>230</b> to S<b>240</b> until the designated heterogeneous executor is recovered to be in a normal state.</p><p id="p-0023" num="0022">The details of one or more embodiments of the disclosure are set forth in the accompanying drawings and description below. Other features, purposes and advantages of the present disclosure will become apparent from the description, the accompanying drawings, and the claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0024" num="0023">To describe the technical solutions of the embodiments of the present disclosure more clearly, the following briefly introduces the accompanying drawings required for describing the embodiments. Apparently, the accompanying drawings in the following descriptions show some embodiments of the present disclosure, and persons of ordinary skill in the art may also derive other drawings from these accompanying drawings without creative efforts.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic structural diagram of a mimic switch provided by an embodiment of the present disclosure.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flowchart of a cleaning and recovery method for a heterogeneous executor in a mimic switch provided by an embodiment of the present disclosure.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart of a cleaning and recovery method for a heterogeneous executor in a mimic switch provided by another embodiment of the present disclosure.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart of a method for processing downlink data in a cleaning and recovery method for a heterogeneous executor in a mimic switch provided by an embodiment of the present disclosure.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart of a method for processing uplink data in a cleaning and recovery method for a heterogeneous executor in a mimic switch provided by an embodiment of the present disclosure.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic structural diagram of a cleaning and recovery system for a heterogeneous executor in a mimic switch provided by an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0031" num="0030">In order to make the purposes, technical solutions and advantages of the embodiments of the present disclosure clearer, the technical solutions of the present disclosure will be described clearly and completely below with reference to the accompanying drawings. Obviously, the embodiments described are only part of the embodiments of the present disclosure, not all of the embodiments. All other embodiments obtained by a person of ordinary skill in the art based on the embodiments in the present disclosure without creative efforts are within the protection scope of the present disclosure.</p><p id="p-0032" num="0031">The cleaning and recovery method for a heterogeneous executor provided in the present disclosure can be applied to a mimic switch <b>10</b> with a heterogeneous multi-mode architecture as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The mimic switch <b>10</b> includes a switch chip <b>110</b>, a mimic scheduler <b>120</b>, and a plurality of heterogeneous executors <b>130</b> (heterogeneous executor <b>1</b>, heterogeneous executor <b>2</b>, . . . , heterogeneous executor N shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). The mimic scheduler <b>120</b> determines whether each of the heterogeneous executors <b>130</b> needs to be cleaned and recovered according to a mimic decision result and a mimic decision strategy, and informs a designated heterogeneous executor <b>130</b> to perform cleaning and assist it to complete state recovery, that is, to be recovered to a normal state.</p><p id="p-0033" num="0032">The heterogeneous executors <b>130</b> may include a plurality of processors with different architectures (for example, X86, ARM, RISC-V, MIPS, etc.), and control plane software with corresponding protocols run on the heterogeneous executors <b>130</b>. The mimic scheduler <b>120</b> includes a mimic decision module <b>121</b>, a mimic recovery module <b>122</b>, and a plurality of data communication interfaces <b>123</b>, so that the mimic scheduler <b>120</b> communicates with the heterogeneous executors <b>130</b> and the switch chip <b>110</b> through the plurality of data communication interfaces <b>123</b>. The switch chip <b>110</b> is configured to complete the forwarding of the data plane of the switch according to the configuration issued from the heterogeneous executor <b>130</b>, and upload the protocol control message to the heterogeneous executor <b>130</b> when a protocol control message is received.</p><p id="p-0034" num="0033">In an embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a cleaning and recovery method for a heterogeneous executor in a mimic switch is provided. The method can be applied to the mimic switch <b>10</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and the method includes the following steps:</p><p id="p-0035" num="0034">In step S<b>210</b>, the mimic scheduler determines a designated heterogeneous executor that needs to be cleaned.</p><p id="p-0036" num="0035">In step S<b>220</b>, the mimic scheduler marks the designated heterogeneous executor that needs to be cleaned as in a cleaning state, and sends a cleaning instruction to the designated heterogeneous executor.</p><p id="p-0037" num="0036">In step S<b>230</b>, the designated heterogeneous executor sends a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler.</p><p id="p-0038" num="0037">In step S<b>240</b>, the mimic scheduler receives the protocol negotiation message and detects whether the designated heterogeneous executor is in the cleaning state. If the mimic scheduler detects that the designated heterogeneous executor is in the cleaning state, it constructs a training message and sends the training message to the designated heterogeneous executor for protocol training.</p><p id="p-0039" num="0038">In step S<b>250</b>, steps S<b>230</b> to S<b>240</b> are repeated until the designated heterogeneous executor is recovered to be in a normal state.</p><p id="p-0040" num="0039">In an embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a cleaning and recovery method for a heterogeneous executor in a mimic switch is provided, which includes the following steps:</p><p id="p-0041" num="0040">In step S<b>310</b>, the mimic scheduler performs decision on downlink data from a plurality of heterogeneous executors to determine a heterogeneous executor with abnormal output, and decides whether the heterogeneous executor with abnormal output needs to be cleaned.</p><p id="p-0042" num="0041">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, in an embodiment, the mimic scheduler performing decision on the downlink data from the plurality of heterogeneous executors to determine the heterogeneous executor with abnormal output in step S<b>310</b> may include: in step S<b>311</b>, the mimic decision module in the mimic scheduler receives downlink data of a plurality of heterogeneous executors; and in step S<b>312</b>, the mimic decision module in the mimic scheduler marks each of the heterogeneous executors with normal output or abnormal output according to a mimic strategy.</p><p id="p-0043" num="0042">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, in an embodiment, the mimic scheduler deciding whether the heterogeneous executor with abnormal output needs to be cleaned in step S<b>310</b> includes: in step S<b>314</b>, the mimic decision module in the mimic scheduler analyzes current state and historical decision data of the heterogeneous executor with abnormal output; if the number of times the heterogeneous executor with abnormal output is decided to be abnormal reaches a specified threshold, the mimic decision module determines that the heterogeneous executor with abnormal output needs to be cleaned. The heterogeneous executor that needs to be cleaned are accordingly determined as the designated executor. According to different mimic strategies, the indicators for deciding to be abnormal and the corresponding thresholds in different embodiments may be different. Common indicators include the number of errors or the percentage of errors, etc., but all must reach a specified threshold to trigger the cleaning.</p><p id="p-0044" num="0043">Further, in an embodiment, when the heterogeneous executor is marked with normal output in step S<b>312</b>, the method may further include: in step S<b>313</b>, the mimic decision module in the mimic scheduler selects data issued by any one of the heterogeneous executors with normal output as correct data, and sends the correct data to the switch chip, and at the same time, sends the correct data to the mimic recovery module of the mimic scheduler; the mimic recovery module parses the correct data and updates the operating state and backup data of the corresponding protocol.</p><p id="p-0045" num="0044">In an embodiment, the decision strategy includes, but is not limited to, one or more of a majority decision based on empirical credibility, a majority decision based on weight, and a composite single choice decision based on sampling majority.</p><p id="p-0046" num="0045">In step S<b>320</b>, for the designated heterogeneous executor that needs to be cleaned, the mimic scheduler marks it as in a cleaning state, it does not participate in the mimic decision, and the mimic scheduler sends a cleaning instruction to it.</p><p id="p-0047" num="0046">In step S<b>330</b>, the designated heterogeneous executor restarts.</p><p id="p-0048" num="0047">In step S<b>340</b>, the designated heterogeneous executor sends a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler.</p><p id="p-0049" num="0048">In step S<b>350</b>, the mimic scheduler receives the protocol negotiation message, detects whether the designated heterogeneous executor is in the cleaning state, and if yes, constructs a training message and sends the training message to the designated heterogeneous executor for protocol training; otherwise, the heterogeneous executor is not in the cleaning state, and it is necessary to further determine whether the heterogeneous executor participates in the decision according to the mimic strategy.</p><p id="p-0050" num="0049">There can be a variety of mimic strategies, for example: the mimic strategy can be selecting all heterogeneous executors that are in a non-cleaning state to participate in the decision; it can also be selecting part of the heterogeneous executors that are in the non-cleaning state to participate in the decision, and the timing of the other part thereof to participate in the decision may also be different, it can be participating in the decision immediately when the number of times that the downlink data of the heterogeneous executors newly recovered to be in the normal state are consistent with the correct data of the decision reaches a threshold, or when the number of the heterogeneous executors participating in the decision is less than a certain value. The specific mimic strategy can be implemented by the existing technologies, and can be configured according to the actual situation. Based on the above illustrative descriptions, those skilled in the art can understand how to select an appropriate mimic strategy to perform corresponding processing on the heterogeneous executors.</p><p id="p-0051" num="0050">Constructing the training message in step S<b>350</b> includes: the mimic recovery module of the mimic scheduler parses the protocol negotiation message, and constructs the training message according to the state and the backup data of the heterogeneous executor reflected in the protocol negotiation message.</p><p id="p-0052" num="0051">In step S<b>360</b>, steps S<b>340</b> to S<b>350</b> are repeated until the designated heterogeneous executor is recovered to be in the normal state, and the mimic scheduler is informed that the designated heterogeneous executor has been recovered to be in the normal state.</p><p id="p-0053" num="0052">In step S<b>370</b>, the mimic scheduler marks the designated heterogeneous executor as in the normal state, and determines whether the designated heterogeneous executor participates in the decision according to the mimic strategy.</p><p id="p-0054" num="0053">In an embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the method further includes the following steps:</p><p id="p-0055" num="0054">In step S<b>510</b>, the mimic scheduler receives uplink data from the switch chip.</p><p id="p-0056" num="0055">In step S<b>520</b>, the mimic scheduler copies and distributes the uplink data to each of the heterogeneous executors and the mimic recovery module.</p><p id="p-0057" num="0056">In step S<b>530</b>, the mimic recovery module parses the uplink data, and updates operating state and backup data of a corresponding protocol.</p><p id="p-0058" num="0057">In the cleaning and recovery method for a heterogeneous executor provided in the above embodiments of the present disclosure, by setting a mimic recovery agent for each protocol in the mimic scheduler, and assisting in completing the state recovery during the cleaning of heterogeneous executors in a training manner, one or more heterogeneous executors can be quickly recovered to be in a normal working state when they are suffered from external attacks or their own internal abnormalities without modifying the protocol stack on the heterogeneous executor, ensuring the safety and reliability of the service provided by the system, and improving the overall reliability and stability of the network architecture.</p><p id="p-0059" num="0058">It should be understood that although the various steps in the flowchart of <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>5</b></figref> are sequentially displayed as indicated by the arrows, these steps are not necessarily performed in the order indicated by the arrows. Unless clearly stated in the present specification, the execution of these steps is not strictly limited in order, and these steps can be executed in other orders. Moreover, at least part of the steps in <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>5</b></figref> may comprise a plurality of sub-steps or phases, which are not necessary to be performed simultaneously, but may be performed at different times, and for the performing order thereof, it is not necessary to be performed sequentially, but may be performed by turns or alternately with other steps or sub-steps of other steps or at least part of the phases.</p><p id="p-0060" num="0059">In an embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a cleaning and recovery device <b>60</b> of a heterogeneous executor in a mimic switch is provided, which can be used in the mimic switch <b>10</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and the mimic switch <b>10</b> includes a plurality of heterogeneous executor <b>130</b>, a mimic scheduler <b>120</b>, and a switching chip <b>110</b>. The cleaning and recovery device <b>60</b> is located in the mimic scheduler <b>120</b>, and includes a mimic decision module <b>121</b> and a mimic recovery module <b>122</b>, where,</p><p id="p-0061" num="0060">the mimic decision module <b>121</b> is connected to a plurality of heterogeneous executors <b>130</b> through the data communication interfaces <b>123</b>, and is configured to: perform decision on the downlink data from the heterogeneous executors <b>130</b>; for any heterogeneous executor <b>130</b> with normal output, send the correct data issued by this heterogeneous executor <b>130</b> to the switch chip <b>110</b>; for the heterogeneous executor <b>130</b> with abnormal output, determine whether to clean it according to its current state and historical decision data; and</p><p id="p-0062" num="0061">the mimic recovery module <b>122</b> is connected to the switch chip <b>110</b> through the data communication interface <b>123</b>, and is configured to: receive the uplink data from the switch chip <b>110</b> and the downlink data after the decision, maintain and update the data backup of the current operating state of each heterogeneous executor <b>130</b>, and perform state recovery on the designated heterogeneous executor <b>130</b> that needs to be cleaned.</p><p id="p-0063" num="0062">In some embodiments, the data communication interfaces <b>123</b> may also be different according to the different operating protocols of the heterogeneous executors, which is at least one or several used at the same time of PCIE, SGMII, UART, GPIO, XAUI, IIC, SPI, and AXI.</p><p id="p-0064" num="0063">In the cleaning and recovery device for a heterogeneous executor in a mimic switch provided by the present disclosure, by setting a recovery agent for each of the protocols in the mimic scheduler, and assisting in completing their state recovery during the cleaning of the heterogeneous executors in a training manner, one or more heterogeneous executors can be quickly recovered to be in the normal working state when they are suffered from external attacks or their own internal abnormalities without modifying the protocol stack on the heterogeneous executor, ensuring the safety and reliability of the service provided by the system, and improving the overall reliability and stability of the network architecture, which has important guiding significance to the cleaning and recovery technology of multi-mode heterogeneous executor architecture system.</p><p id="p-0065" num="0064">Regarding the device in the above embodiments, the specific manner in which each module performs operations has been described in detail in the embodiments of the related method, and the two embodiments can be referred to each other, and detailed description will not be repeated here.</p><p id="p-0066" num="0065">In an embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a mimic switch <b>10</b> is provided, which includes a plurality of heterogeneous executors <b>130</b>, a mimic scheduler <b>120</b>, and a switch chip <b>110</b>;</p><p id="p-0067" num="0066">The mimic scheduler <b>120</b> includes a mimic decision module <b>121</b> and a mimic recovery module <b>122</b>. The mimic decision module <b>121</b> is connected to the plurality of heterogeneous executors <b>130</b>, and the mimic recovery module <b>122</b> is connected to the switch chip <b>110</b>;</p><p id="p-0068" num="0067">The mimic switch <b>10</b> is configured to perform the following steps:</p><p id="p-0069" num="0068">In step S<b>210</b>, the mimic scheduler determines a designated heterogeneous executor that needs to be cleaned;</p><p id="p-0070" num="0069">In step S<b>220</b>, the mimic scheduler marks the designated heterogeneous executor that needs to be cleaned as in a cleaning state, and sends a cleaning instruction to the designated heterogeneous executor;</p><p id="p-0071" num="0070">In step S<b>230</b>, the designated heterogeneous executor sends a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler;</p><p id="p-0072" num="0071">In step S<b>240</b>, the mimic scheduler receives the protocol negotiation message and detects whether the designated heterogeneous executor is in the cleaning state. If the mimic scheduler detects that the designated heterogeneous executor is in the cleaning state, the mimic scheduler constructs a training message and sends the training message to the designated heterogeneous executor for protocol training;</p><p id="p-0073" num="0072">In step S<b>250</b>, S<b>230</b> to S<b>240</b> are repeated until the designated heterogeneous executor is recovered to be in a normal state.</p><p id="p-0074" num="0073">In other embodiments, the mimic switch <b>10</b> is further configured to execute the steps of the cleaning and recovery method for a heterogeneous executor in any of the foregoing embodiments, and has the same beneficial effects.</p><p id="p-0075" num="0074">Unless specifically stated otherwise, the relative steps and values of the components and steps set forth in these embodiments do not limit the scope of the present disclosure.</p><p id="p-0076" num="0075">The flowcharts and block diagrams in the accompanying drawings show the architecture, functions, and operations that may be realized for the system, method, and computer program product according to a plurality of embodiments of the present disclosure. In this regard, each block in the flowchart or block diagram may represent a module, program segment, or part of the code, and the module, program segment, or part of the code contains one or more executable instructions configured to realize the specified logic functions. It should also be noted that, in some alternative implementations, the functions marked in the blocks may also occur in a different order from the order marked in the drawings. For example, two consecutive blocks can actually be executed in parallel, or they can sometimes be executed in the reverse order, depending on the functions involved. It should also be noted that each block in the block diagram and/or flowchart, and the combination of the blocks in the block diagram and/or flowchart, can be implemented by a dedicated hardware-based system that performs the specified functions or actions, or can be implemented by a combination of dedicated hardware and computer instructions.</p><p id="p-0077" num="0076">The computer program product of the cleaning and recovery method for a heterogeneous executor in a mimic switch provided by the embodiments of the present disclosure includes a computer-readable storage medium storing program code, and the instructions included in the program code can be used to execute the method described in the above embodiments of method, and the specific implementations can refer to the embodiments of method, which will not be repeated here.</p><p id="p-0078" num="0077">In addition, in the descriptions of the embodiments of the present disclosure, unless otherwise clearly specified and limited, the terms &#x201c;connected with each other&#x201d;, &#x201c;connected&#x201d; and other terms should be understood in a broad sense, for example, it can be a fixed connection or a detachable connection, or an integrated connection; it may be mechanical connection or electrical connection; it may be directly connected, or may be indirectly connected through an intermediary, it may be the internal communication between two components. Those of ordinary skill in the art can understand the specific meanings of the above terms in the present disclosure according to specific situations.</p><p id="p-0079" num="0078">The above described embodiments are only specific implementations of the present disclosure, they are used to illustrate the technical solutions of the present disclosure, rather than limiting it, the protection scope of the present disclosure is not limited to this. Although the present disclosure has been described in detail with reference to the foregoing embodiments, a person of ordinary skill in the art should understand that, within the technical scope disclosed in the present disclosure, any person skilled in the art can still modify or easily conceive changes to the technical solutions described in the foregoing embodiments, or equivalently replace some of the technical features; and these modifications, changes or replacements, which do not make the essence of the corresponding technical solutions deviate from the spirit and scope of the technical solutions of the embodiments of the present disclosure, shall be covered within the protection scope of the present disclosure. Therefore, the protection scope of the present disclosure shall be subject to the protection scope of the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A cleaning and recovery method for a heterogeneous executor in a mimic switch, comprising:<claim-text>S<b>210</b>, determining, by a mimic scheduler, a designated heterogeneous executor that needs to be cleaned;</claim-text><claim-text>S<b>220</b>, marking, by the mimic scheduler, the designated heterogeneous executor that needs to be cleaned as in a cleaning state, and sending, by the mimic scheduler, a cleaning instruction to the designated heterogeneous executor;</claim-text><claim-text>S<b>230</b>, sending, by the designated heterogeneous executor, a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler;</claim-text><claim-text>S<b>240</b>, receiving, by the mimic scheduler, the protocol negotiation message, and detecting, by the mimic scheduler, whether the designated heterogeneous executor is in the cleaning state; if the mimic scheduler detects that the designated heterogeneous executor is in the cleaning state, constructing, by the mimic scheduler, a training message, and sending, by the mimic scheduler, the training message to the designated heterogeneous executor for protocol training;</claim-text><claim-text>S<b>250</b>, repeating S<b>230</b> to S<b>240</b> until the designated heterogeneous executor is recovered to be in a normal state.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein after the mimic scheduler sending the cleaning instruction to the designated heterogeneous executor, and before the designated heterogeneous executor sending the normal protocol negotiation message to the mimic scheduler, the method further comprises:<claim-text>the designated heterogeneous executor restarting.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determining, by a mimic scheduler, a designated heterogeneous executor that needs to be cleaned comprises:<claim-text>performing, by the mimic scheduler, decision on downlink data from a plurality of heterogeneous heterogeneous executors, to determine a heterogeneous executor with abnormal output;</claim-text><claim-text>determining, by the mimic scheduler, whether the heterogeneous executor with abnormal output needs to be cleaned;</claim-text><claim-text>regarding, by the mimic scheduler, the heterogeneous executor with abnormal output that needs to be cleaned as the designated heterogeneous executor.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein when the heterogeneous executor is marked as in the cleaning state, the heterogeneous executor does not participate in the decision.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:<claim-text>if the mimic scheduler detects that the designated heterogeneous executor is not in the cleaning state, determining, by the mimic scheduler, whether the designated heterogeneous executor participates in the decision according to a predetermined mimic strategy.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein after the designated heterogeneous executor is recovered to be in the normal state, the method further comprises:<claim-text>informing, by the designated heterogeneous executor, the mimic scheduler that the designated heterogeneous executor has been recovered to be in the normal state;</claim-text><claim-text>marking, by the mimic scheduler, the designated heterogeneous executor as in the normal state, and determining, by the mimic scheduler, whether the designated heterogeneous executor participates the decision according to the mimic strategy.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein performing, by the mimic scheduler, the decision on the downlink data from the plurality of heterogeneous executors, to determine the heterogeneous executor with abnormal output comprises:<claim-text>receiving, by a mimic decision module in the mimic scheduler, downlink data of a plurality of heterogeneous executors, and marking, by the mimic decision module in the mimic scheduler, each of the heterogeneous executors with normal output or abnormal output according to the mimic strategy.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:<claim-text>selecting, by the mimic decision module, data issued by any one of the heterogeneous executors with normal output as correct data, and sending, by the mimic decision module, the correct data to a switch chip, and at the same time, sending, by the mimic decision module, the correct data to a mimic recovery module of the mimic scheduler;</claim-text><claim-text>parsing, by the mimic recovery module, the correct data; and updating, by the mimic recovery module, operating state and backup data of a corresponding protocol.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the mimic strategy comprises one or more of a majority decision based on empirical credibility, a majority decision based on weight, and a composite single choice decision based on sampling majority.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein determining, by the mimic scheduler, whether the heterogeneous executor with abnormal output needs to be cleaned comprises:<claim-text>analyzing, by the mimic decision module in the mimic scheduler, current state and historical decision data of the heterogeneous executor with abnormal output; if the number of times the heterogeneous executor with abnormal output is decided to be abnormal reaches a specified threshold, determining, by the mimic decision module, that the heterogeneous executor with abnormal output needs to be cleaned.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein constructing the training message comprises:<claim-text>parsing, by the mimic recovery module of the mimic scheduler, the protocol negotiation message; and constructing, by the mimic recovery module of the mimic scheduler, the a training message according to state and backup data of the heterogeneous executor reflected in the protocol negotiation message.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The cleaning and recovery method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving, by the mimic scheduler, uplink data from the switch chip, and copying and distributing, by the mimic scheduler, the uplink data to each heterogeneous executor and a mimic recovery module;</claim-text><claim-text>parsing, by the mimic recovery module, the uplink data; and updating, by the mimic recovery module, operating state and backup data of a corresponding protocol.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A cleaning and recovery device for a heterogeneous executor in a mimic switch, used in a mimic switch, the mimic switch comprising a plurality of heterogeneous executors, a mimic scheduler, and a switch chip, wherein, the cleaning and recovery device is located in the mimic scheduler, and the cleaning and recovery device comprises a mimic decision module and a mimic recovery module,<claim-text>wherein, the mimic decision module is connected to the plurality of heterogeneous executors through data communication interfaces, and the mimic decision module is configured to: perform decision on downlink data from the heterogeneous executors; for any heterogeneous executor with normal output, send correct data issued by this heterogeneous executor to the switch chip;</claim-text><claim-text>for a heterogeneous executor with abnormal output, determine whether to clean this heterogeneous executor according to its current state and historical decision data; and</claim-text><claim-text>wherein, the mimic recovery module is connected to the switch chip through a data communication interface, and is configured to: receive the uplink data from the switch chip and the downlink data after the decision, maintain and update the data backup of the current operating state of each heterogeneous executor, and perform state recovery on the designated heterogeneous executor that needs to be cleaned.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The cleaning and recovery device according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the data communication interfaces are at least one or more of PCIE, SGMII, UART, GPIO, XAUI, IIC, SPI, and AXI.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A mimic switch, comprising a plurality of heterogeneous executors, a mimic scheduler, and a switch chip;<claim-text>wherein, the mimic scheduler includes a mimic decision module and a mimic recovery module, the mimic decision module is connected to the plurality of heterogeneous executors, and the mimic recovery module is connected to the switch chip;</claim-text><claim-text>wherein, the mimic switch is configured to perform the following steps:</claim-text><claim-text>S<b>210</b>, determining, by a mimic scheduler, a designated heterogeneous executor that needs to be cleaned;</claim-text><claim-text>S<b>220</b>, marking, by the mimic scheduler, the designated heterogeneous executor that needs to be cleaned as in a cleaning state, and sending, by the mimic scheduler, a cleaning instruction to the designated heterogeneous executor;</claim-text><claim-text>S<b>230</b>, sending, by the designated heterogeneous executor, a normal protocol negotiation message to the mimic scheduler to try to interact with the mimic scheduler;</claim-text><claim-text>S<b>240</b>, receiving, by the mimic scheduler, the protocol negotiation message, and detecting, by the mimic scheduler, whether the designated heterogeneous executor is in the cleaning state; if the mimic scheduler detects that the designated heterogeneous executor is in the cleaning state, constructing, by the mimic scheduler, a training message, and sending, by the mimic scheduler, the training message to the designated heterogeneous executor for protocol training;</claim-text><claim-text>S<b>250</b>, repeating S<b>230</b> to S<b>240</b> until the designated heterogeneous executor is recovered to be in a normal state.</claim-text></claim-text></claim></claims></us-patent-application>